<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.1.1 (Python 3.8.10 on linux)" generated="20240102 11:45:11.819" rpa="false" schemaversion="4">
<suite id="s1" name="ozone-ec">
<suite id="s1-s1" name="S3" source="/opt/hadoop/smoketest/s3">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20240102 11:36:32.690" endtime="20240102 11:36:32.690"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Generate random prefix" library="commonawslib">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20240102 11:36:32.691" level="INFO">${randStr} = 6385576306</msg>
<status status="PASS" starttime="20240102 11:36:32.691" endtime="20240102 11:36:32.691"/>
</kw>
<msg timestamp="20240102 11:36:32.691" level="INFO">${random} = ozone-test-6385576306</msg>
<status status="PASS" starttime="20240102 11:36:32.690" endtime="20240102 11:36:32.691"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20240102 11:36:32.692" level="INFO">${PREFIX} = ozone-test-6385576306</msg>
<status status="PASS" starttime="20240102 11:36:32.691" endtime="20240102 11:36:32.692"/>
</kw>
<status status="PASS" starttime="20240102 11:36:32.690" endtime="20240102 11:36:32.692"/>
</kw>
<status status="PASS" starttime="20240102 11:36:32.690" endtime="20240102 11:36:32.692"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Install aws cli" library="commonawslib">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>which aws</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:36:32.704" level="INFO">Running command 'which aws 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:36:32.705" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:36:32.705" level="INFO">${output} = /usr/local/bin/aws</msg>
<status status="PASS" starttime="20240102 11:36:32.693" endtime="20240102 11:36:32.705"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20240102 11:36:32.705" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:36:32.705" endtime="20240102 11:36:32.705"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>which apt-get</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="NOT RUN" starttime="20240102 11:36:32.705" endtime="20240102 11:36:32.706"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 debian</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20240102 11:36:32.706" endtime="20240102 11:36:32.706"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>yum --help</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="NOT RUN" starttime="20240102 11:36:32.706" endtime="20240102 11:36:32.706"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 centos</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20240102 11:36:32.706" endtime="20240102 11:36:32.706"/>
</kw>
<status status="PASS" starttime="20240102 11:36:32.693" endtime="20240102 11:36:32.706"/>
</kw>
<status status="PASS" starttime="20240102 11:36:32.693" endtime="20240102 11:36:32.706"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup v4 headers" library="commonawslib">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20240102 11:36:32.707" endtime="20240102 11:36:32.707"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20240102 11:36:32.707" endtime="20240102 11:36:32.707"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup dummy credentials for S3" library="commonawslib">
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:36:32.710" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:36:33.147" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:36:33.147" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240102 11:36:32.709" endtime="20240102 11:36:33.147"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:36:33.152" level="INFO"/>
<status status="PASS" starttime="20240102 11:36:33.147" endtime="20240102 11:36:33.152"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:36:33.152" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:36:33.152" endtime="20240102 11:36:33.152"/>
</kw>
<status status="PASS" starttime="20240102 11:36:32.708" endtime="20240102 11:36:33.152"/>
</kw>
<msg timestamp="20240102 11:36:33.153" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:36:32.708" endtime="20240102 11:36:33.153"/>
</kw>
<status status="PASS" starttime="20240102 11:36:32.708" endtime="20240102 11:36:33.153"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:36:33.160" level="INFO">Running command 'aws configure set aws_access_key_id dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:36:33.617" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:36:33.617" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240102 11:36:33.154" endtime="20240102 11:36:33.617"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:36:33.618" level="INFO"/>
<status status="PASS" starttime="20240102 11:36:33.617" endtime="20240102 11:36:33.618"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:36:33.618" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:36:33.618" endtime="20240102 11:36:33.618"/>
</kw>
<status status="PASS" starttime="20240102 11:36:33.153" endtime="20240102 11:36:33.618"/>
</kw>
<msg timestamp="20240102 11:36:33.618" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:36:33.153" endtime="20240102 11:36:33.618"/>
</kw>
<status status="PASS" starttime="20240102 11:36:33.153" endtime="20240102 11:36:33.618"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:36:33.621" level="INFO">Running command 'aws configure set aws_secret_access_key dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:36:34.058" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:36:34.058" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240102 11:36:33.620" endtime="20240102 11:36:34.058"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:36:34.058" level="INFO"/>
<status status="PASS" starttime="20240102 11:36:34.058" endtime="20240102 11:36:34.059"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:36:34.059" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:36:34.059" endtime="20240102 11:36:34.059"/>
</kw>
<status status="PASS" starttime="20240102 11:36:33.619" endtime="20240102 11:36:34.059"/>
</kw>
<msg timestamp="20240102 11:36:34.059" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:36:33.619" endtime="20240102 11:36:34.059"/>
</kw>
<status status="PASS" starttime="20240102 11:36:33.619" endtime="20240102 11:36:34.059"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:36:34.062" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:36:34.501" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:36:34.501" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240102 11:36:34.060" endtime="20240102 11:36:34.501"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:36:34.502" level="INFO"/>
<status status="PASS" starttime="20240102 11:36:34.502" endtime="20240102 11:36:34.502"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:36:34.503" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:36:34.503" endtime="20240102 11:36:34.503"/>
</kw>
<status status="PASS" starttime="20240102 11:36:34.060" endtime="20240102 11:36:34.503"/>
</kw>
<msg timestamp="20240102 11:36:34.503" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:36:34.060" endtime="20240102 11:36:34.503"/>
</kw>
<status status="PASS" starttime="20240102 11:36:34.060" endtime="20240102 11:36:34.503"/>
</kw>
<status status="PASS" starttime="20240102 11:36:32.708" endtime="20240102 11:36:34.503"/>
</kw>
<status status="PASS" starttime="20240102 11:36:32.707" endtime="20240102 11:36:34.504"/>
</kw>
<status status="PASS" starttime="20240102 11:36:32.707" endtime="20240102 11:36:34.504"/>
</kw>
<status status="PASS" starttime="20240102 11:36:32.706" endtime="20240102 11:36:34.504"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20240102 11:36:34.504" endtime="20240102 11:36:34.504"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20240102 11:36:34.504" endtime="20240102 11:36:34.504"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20240102 11:36:34.505" endtime="20240102 11:36:34.505"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create EC bucket" library="commonawslib">
<kw name="Bucket Exists" library="shell">
<var>${exists}</var>
<arg>o3://${OM_SERVICE_ID}/s3v/erasure</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>timeout 15 ozone sh bucket info ${bucket}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:36:34.507" level="INFO">Running command 'timeout 15 ozone sh bucket info o3://om/s3v/erasure 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:36:38.823" level="INFO">${rc} = 255</msg>
<msg timestamp="20240102 11:36:38.823" level="INFO">${output} = BUCKET_NOT_FOUND Bucket not found: s3v/erasure</msg>
<status status="PASS" starttime="20240102 11:36:34.506" endtime="20240102 11:36:38.823"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${rc} != 0</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20240102 11:36:38.824" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:36:38.824" endtime="20240102 11:36:38.824"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'VOLUME_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20240102 11:36:38.824" endtime="20240102 11:36:38.824"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'BUCKET_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20240102 11:36:38.824" endtime="20240102 11:36:38.825"/>
</kw>
<msg timestamp="20240102 11:36:38.825" level="INFO">${exists} = False</msg>
<status status="PASS" starttime="20240102 11:36:34.506" endtime="20240102 11:36:38.825"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${exists}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20240102 11:36:38.825" endtime="20240102 11:36:38.825"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create --replication rs-3-2-1024k --type EC o3://${OM_SERVICE_ID}/s3v/erasure</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:36:38.828" level="INFO">Running command 'ozone sh bucket create --replication rs-3-2-1024k --type EC o3://om/s3v/erasure 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:36:43.249" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:36:43.249" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240102 11:36:38.826" endtime="20240102 11:36:43.249"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:36:43.250" level="INFO"/>
<status status="PASS" starttime="20240102 11:36:43.249" endtime="20240102 11:36:43.250"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:36:43.251" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:36:43.250" endtime="20240102 11:36:43.251"/>
</kw>
<status status="PASS" starttime="20240102 11:36:38.826" endtime="20240102 11:36:43.251"/>
</kw>
<msg timestamp="20240102 11:36:43.251" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:36:38.826" endtime="20240102 11:36:43.251"/>
</kw>
<status status="PASS" starttime="20240102 11:36:38.825" endtime="20240102 11:36:43.251"/>
</kw>
<status status="PASS" starttime="20240102 11:36:34.505" endtime="20240102 11:36:43.251"/>
</kw>
<status status="PASS" starttime="20240102 11:36:34.505" endtime="20240102 11:36:43.251"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20240102 11:36:43.252" level="INFO">${OZONE_S3_TESTS_SET_UP} = True</msg>
<status status="PASS" starttime="20240102 11:36:43.252" endtime="20240102 11:36:43.252"/>
</kw>
<status status="PASS" starttime="20240102 11:36:32.689" endtime="20240102 11:36:43.252"/>
</kw>
<suite id="s1-s1-s1" name="Awss3" source="/opt/hadoop/smoketest/s3/awss3.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20240102 11:36:43.269" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:36:43.268" endtime="20240102 11:36:43.269"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20240102 11:36:43.269" endtime="20240102 11:36:43.269"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20240102 11:36:43.269" endtime="20240102 11:36:43.269"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20240102 11:36:43.269" endtime="20240102 11:36:43.269"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20240102 11:36:43.270" endtime="20240102 11:36:43.270"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20240102 11:36:43.270" endtime="20240102 11:36:43.270"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20240102 11:36:43.270" endtime="20240102 11:36:43.270"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20240102 11:36:43.270" endtime="20240102 11:36:43.270"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20240102 11:36:43.270" endtime="20240102 11:36:43.271"/>
</kw>
<status status="PASS" starttime="20240102 11:36:43.268" endtime="20240102 11:36:43.271"/>
</kw>
<test id="s1-s1-s1-t1" name="File upload and directory list" line="31">
<kw name="Execute" library="os">
<arg>date &gt; /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:36:43.275" level="INFO">Running command 'date &gt; /tmp/testfile'.</msg>
<msg timestamp="20240102 11:36:43.278" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:36:43.278" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240102 11:36:43.273" endtime="20240102 11:36:43.278"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:36:43.279" level="INFO"/>
<status status="PASS" starttime="20240102 11:36:43.278" endtime="20240102 11:36:43.279"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:36:43.279" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:36:43.279" endtime="20240102 11:36:43.279"/>
</kw>
<status status="PASS" starttime="20240102 11:36:43.272" endtime="20240102 11:36:43.279"/>
</kw>
<msg timestamp="20240102 11:36:43.280" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:36:43.272" endtime="20240102 11:36:43.280"/>
</kw>
<status status="PASS" starttime="20240102 11:36:43.272" endtime="20240102 11:36:43.280"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>cp /tmp/testfile s3://${BUCKET}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:36:43.284" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 cp /tmp/testfile s3://erasure 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:36:47.966" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:36:47.966" level="INFO">${output} = Completed 29 Bytes/29 Bytes (6 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://erasure/testfile             </msg>
<status status="PASS" starttime="20240102 11:36:43.282" endtime="20240102 11:36:47.966"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:36:47.967" level="INFO">Completed 29 Bytes/29 Bytes (6 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://erasure/testfile             </msg>
<status status="PASS" starttime="20240102 11:36:47.966" endtime="20240102 11:36:47.967"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:36:47.967" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:36:47.967" endtime="20240102 11:36:47.968"/>
</kw>
<status status="PASS" starttime="20240102 11:36:43.282" endtime="20240102 11:36:47.968"/>
</kw>
<msg timestamp="20240102 11:36:47.968" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:36:43.281" endtime="20240102 11:36:47.968"/>
</kw>
<msg timestamp="20240102 11:36:47.968" level="INFO">${output} = Completed 29 Bytes/29 Bytes (6 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://erasure/testfile             </msg>
<status status="PASS" starttime="20240102 11:36:43.280" endtime="20240102 11:36:47.968"/>
</kw>
<msg timestamp="20240102 11:36:47.968" level="INFO">${result} = Completed 29 Bytes/29 Bytes (6 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://erasure/testfile             </msg>
<status status="PASS" starttime="20240102 11:36:43.280" endtime="20240102 11:36:47.968"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>upload</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:36:47.969" endtime="20240102 11:36:47.969"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>cp /tmp/testfile s3://${BUCKET}/dir1/dir2/file</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:36:47.972" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 cp /tmp/testfile s3://erasure/dir1/dir2/file 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:36:48.813" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:36:48.813" level="INFO">${output} = Completed 29 Bytes/29 Bytes (84 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://erasure/dir1/dir2/file        </msg>
<status status="PASS" starttime="20240102 11:36:47.971" endtime="20240102 11:36:48.813"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:36:48.814" level="INFO">Completed 29 Bytes/29 Bytes (84 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://erasure/dir1/dir2/file        </msg>
<status status="PASS" starttime="20240102 11:36:48.814" endtime="20240102 11:36:48.814"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:36:48.815" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:36:48.814" endtime="20240102 11:36:48.815"/>
</kw>
<status status="PASS" starttime="20240102 11:36:47.970" endtime="20240102 11:36:48.815"/>
</kw>
<msg timestamp="20240102 11:36:48.815" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:36:47.970" endtime="20240102 11:36:48.815"/>
</kw>
<msg timestamp="20240102 11:36:48.815" level="INFO">${output} = Completed 29 Bytes/29 Bytes (84 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://erasure/dir1/dir2/file        </msg>
<status status="PASS" starttime="20240102 11:36:47.969" endtime="20240102 11:36:48.815"/>
</kw>
<msg timestamp="20240102 11:36:48.815" level="INFO">${result} = Completed 29 Bytes/29 Bytes (84 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://erasure/dir1/dir2/file        </msg>
<status status="PASS" starttime="20240102 11:36:47.969" endtime="20240102 11:36:48.815"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>upload</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:36:48.816" endtime="20240102 11:36:48.816"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>ls s3://${BUCKET}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:36:48.819" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://erasure 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:36:49.531" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:36:49.531" level="INFO">${output} =                            PRE dir1/
2024-01-02 11:36:47         29 testfile</msg>
<status status="PASS" starttime="20240102 11:36:48.818" endtime="20240102 11:36:49.532"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:36:49.532" level="INFO">                           PRE dir1/
2024-01-02 11:36:47         29 testfile</msg>
<status status="PASS" starttime="20240102 11:36:49.532" endtime="20240102 11:36:49.532"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:36:49.533" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:36:49.533" endtime="20240102 11:36:49.533"/>
</kw>
<status status="PASS" starttime="20240102 11:36:48.817" endtime="20240102 11:36:49.533"/>
</kw>
<msg timestamp="20240102 11:36:49.533" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:36:48.817" endtime="20240102 11:36:49.533"/>
</kw>
<msg timestamp="20240102 11:36:49.534" level="INFO">${output} =                            PRE dir1/
2024-01-02 11:36:47         29 testfile</msg>
<status status="PASS" starttime="20240102 11:36:48.817" endtime="20240102 11:36:49.534"/>
</kw>
<msg timestamp="20240102 11:36:49.534" level="INFO">${result} =                            PRE dir1/
2024-01-02 11:36:47         29 testfile</msg>
<status status="PASS" starttime="20240102 11:36:48.816" endtime="20240102 11:36:49.534"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>testfile</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:36:49.534" endtime="20240102 11:36:49.534"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>dir1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:36:49.534" endtime="20240102 11:36:49.535"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>dir2</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:36:49.535" endtime="20240102 11:36:49.535"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>ls s3://${BUCKET}/dir1/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:36:49.538" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://erasure/dir1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:36:50.080" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:36:50.080" level="INFO">${output} =                            PRE dir2/
2024-01-02 11:36:48          0 </msg>
<status status="PASS" starttime="20240102 11:36:49.537" endtime="20240102 11:36:50.080"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:36:50.081" level="INFO">                           PRE dir2/
2024-01-02 11:36:48          0 </msg>
<status status="PASS" starttime="20240102 11:36:50.080" endtime="20240102 11:36:50.081"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:36:50.081" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:36:50.081" endtime="20240102 11:36:50.081"/>
</kw>
<status status="PASS" starttime="20240102 11:36:49.536" endtime="20240102 11:36:50.082"/>
</kw>
<msg timestamp="20240102 11:36:50.082" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:36:49.536" endtime="20240102 11:36:50.082"/>
</kw>
<msg timestamp="20240102 11:36:50.082" level="INFO">${output} =                            PRE dir2/
2024-01-02 11:36:48          0 </msg>
<status status="PASS" starttime="20240102 11:36:49.535" endtime="20240102 11:36:50.082"/>
</kw>
<msg timestamp="20240102 11:36:50.082" level="INFO">${result} =                            PRE dir2/
2024-01-02 11:36:48          0 </msg>
<status status="PASS" starttime="20240102 11:36:49.535" endtime="20240102 11:36:50.082"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>testfile</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:36:50.082" endtime="20240102 11:36:50.082"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>dir1</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:36:50.082" endtime="20240102 11:36:50.083"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>dir2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:36:50.083" endtime="20240102 11:36:50.083"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>ls s3://${BUCKET}/dir1/dir2/file</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:36:50.086" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://erasure/dir1/dir2/file 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:36:50.649" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:36:50.649" level="INFO">${output} = 2024-01-02 11:36:48         29 file</msg>
<status status="PASS" starttime="20240102 11:36:50.085" endtime="20240102 11:36:50.649"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:36:50.650" level="INFO">2024-01-02 11:36:48         29 file</msg>
<status status="PASS" starttime="20240102 11:36:50.650" endtime="20240102 11:36:50.651"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:36:50.651" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:36:50.651" endtime="20240102 11:36:50.651"/>
</kw>
<status status="PASS" starttime="20240102 11:36:50.084" endtime="20240102 11:36:50.651"/>
</kw>
<msg timestamp="20240102 11:36:50.652" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:36:50.084" endtime="20240102 11:36:50.652"/>
</kw>
<msg timestamp="20240102 11:36:50.652" level="INFO">${output} = 2024-01-02 11:36:48         29 file</msg>
<status status="PASS" starttime="20240102 11:36:50.084" endtime="20240102 11:36:50.652"/>
</kw>
<msg timestamp="20240102 11:36:50.652" level="INFO">${result} = 2024-01-02 11:36:48         29 file</msg>
<status status="PASS" starttime="20240102 11:36:50.083" endtime="20240102 11:36:50.652"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>testfile</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:36:50.652" endtime="20240102 11:36:50.653"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>dir1</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:36:50.653" endtime="20240102 11:36:50.653"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>file</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:36:50.653" endtime="20240102 11:36:50.653"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20240102 11:36:43.271" endtime="20240102 11:36:50.654"/>
</test>
<test id="s1-s1-s1-t2" name="File upload with special chars" line="50">
<kw name="Execute" library="os">
<arg>date &gt; /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:36:50.657" level="INFO">Running command 'date &gt; /tmp/testfile'.</msg>
<msg timestamp="20240102 11:36:50.659" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:36:50.659" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240102 11:36:50.656" endtime="20240102 11:36:50.659"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:36:50.660" level="INFO"/>
<status status="PASS" starttime="20240102 11:36:50.659" endtime="20240102 11:36:50.660"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:36:50.660" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:36:50.660" endtime="20240102 11:36:50.660"/>
</kw>
<status status="PASS" starttime="20240102 11:36:50.655" endtime="20240102 11:36:50.660"/>
</kw>
<msg timestamp="20240102 11:36:50.660" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:36:50.655" endtime="20240102 11:36:50.660"/>
</kw>
<status status="PASS" starttime="20240102 11:36:50.655" endtime="20240102 11:36:50.661"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>cp /tmp/testfile s3://${BUCKET}/specialchars/a+b</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:36:50.663" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 cp /tmp/testfile s3://erasure/specialchars/a+b 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:36:51.283" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:36:51.283" level="INFO">${output} = Completed 29 Bytes/29 Bytes (164 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://erasure/specialchars/a+b       </msg>
<status status="PASS" starttime="20240102 11:36:50.662" endtime="20240102 11:36:51.283"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:36:51.284" level="INFO">Completed 29 Bytes/29 Bytes (164 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://erasure/specialchars/a+b       </msg>
<status status="PASS" starttime="20240102 11:36:51.283" endtime="20240102 11:36:51.284"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:36:51.284" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:36:51.284" endtime="20240102 11:36:51.285"/>
</kw>
<status status="PASS" starttime="20240102 11:36:50.662" endtime="20240102 11:36:51.285"/>
</kw>
<msg timestamp="20240102 11:36:51.285" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:36:50.661" endtime="20240102 11:36:51.285"/>
</kw>
<msg timestamp="20240102 11:36:51.285" level="INFO">${output} = Completed 29 Bytes/29 Bytes (164 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://erasure/specialchars/a+b       </msg>
<status status="PASS" starttime="20240102 11:36:50.661" endtime="20240102 11:36:51.285"/>
</kw>
<msg timestamp="20240102 11:36:51.285" level="INFO">${result} = Completed 29 Bytes/29 Bytes (164 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://erasure/specialchars/a+b       </msg>
<status status="PASS" starttime="20240102 11:36:50.661" endtime="20240102 11:36:51.285"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>upload</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:36:51.285" endtime="20240102 11:36:51.286"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>ls s3://${BUCKET}/specialchars/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:36:51.288" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://erasure/specialchars/ 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:36:51.769" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:36:51.769" level="INFO">${output} = 2024-01-02 11:36:51          0 
2024-01-02 11:36:51         29 a+b</msg>
<status status="PASS" starttime="20240102 11:36:51.287" endtime="20240102 11:36:51.769"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:36:51.770" level="INFO">2024-01-02 11:36:51          0 
2024-01-02 11:36:51         29 a+b</msg>
<status status="PASS" starttime="20240102 11:36:51.769" endtime="20240102 11:36:51.770"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:36:51.770" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:36:51.770" endtime="20240102 11:36:51.770"/>
</kw>
<status status="PASS" starttime="20240102 11:36:51.287" endtime="20240102 11:36:51.770"/>
</kw>
<msg timestamp="20240102 11:36:51.771" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:36:51.286" endtime="20240102 11:36:51.771"/>
</kw>
<msg timestamp="20240102 11:36:51.771" level="INFO">${output} = 2024-01-02 11:36:51          0 
2024-01-02 11:36:51         29 a+b</msg>
<status status="PASS" starttime="20240102 11:36:51.286" endtime="20240102 11:36:51.771"/>
</kw>
<msg timestamp="20240102 11:36:51.771" level="INFO">${result} = 2024-01-02 11:36:51          0 
2024-01-02 11:36:51         29 a+b</msg>
<status status="PASS" starttime="20240102 11:36:51.286" endtime="20240102 11:36:51.771"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>'a b'</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:36:51.771" endtime="20240102 11:36:51.772"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>a+b</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:36:51.772" endtime="20240102 11:36:51.772"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20240102 11:36:50.654" endtime="20240102 11:36:51.772"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20240102 11:36:43.252" endtime="20240102 11:36:51.773"/>
</suite>
<suite id="s1-s1-s2" name="Boto3" source="/opt/hadoop/smoketest/s3/boto3.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20240102 11:36:51.787" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:36:51.787" endtime="20240102 11:36:51.787"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20240102 11:36:51.787" endtime="20240102 11:36:51.787"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20240102 11:36:51.787" endtime="20240102 11:36:51.787"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20240102 11:36:51.788" endtime="20240102 11:36:51.788"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20240102 11:36:51.788" endtime="20240102 11:36:51.788"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20240102 11:36:51.788" endtime="20240102 11:36:51.788"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20240102 11:36:51.788" endtime="20240102 11:36:51.788"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20240102 11:36:51.788" endtime="20240102 11:36:51.788"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20240102 11:36:51.788" endtime="20240102 11:36:51.788"/>
</kw>
<status status="PASS" starttime="20240102 11:36:51.786" endtime="20240102 11:36:51.788"/>
</kw>
<test id="s1-s1-s2-t1" name="Boto3 Client Test" line="34">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>python3 ${S3_SMOKETEST_DIR}/boto_client.py ${ENDPOINT_URL} ${BUCKET}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:36:51.792" level="INFO">Running command 'python3 /opt/hadoop/smoketest/s3/boto_client.py http://s3g:9878 erasure 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:36:55.503" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:36:55.503" level="INFO">${output} = test_create_bucket (__main__.TestBotoClient) ... /usr/local/lib/python3.6/site-packages/boto3/compat.py:88: PythonDeprecationWarning: Boto3 will no longer support Python 3.6 starting May 30, 2022. To ...</msg>
<status status="PASS" starttime="20240102 11:36:51.790" endtime="20240102 11:36:55.503"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:36:55.504" level="INFO">test_create_bucket (__main__.TestBotoClient) ... /usr/local/lib/python3.6/site-packages/boto3/compat.py:88: PythonDeprecationWarning: Boto3 will no longer support Python 3.6 starting May 30, 2022. To continue receiving service updates, bug fixes, and security updates please upgrade to Python 3.7 or later. More information can be found here: https://aws.amazon.com/blogs/developer/python-support-policy-updates-for-aws-sdks-and-tools/
  warnings.warn(warning, PythonDeprecationWarning)
ok
test_list_bucket (__main__.TestBotoClient) ... ok
test_head_bucket (__main__.TestBotoClient) ... ok
test_bucket_delete (__main__.TestBotoClient) ... ok
test_upload_file (__main__.TestBotoClient) ... ok
test_download_file (__main__.TestBotoClient) ... ok
test_delete_objects (__main__.TestBotoClient) ... ok
test_head_object (__main__.TestBotoClient) ... ok
test_multi_uploads (__main__.TestBotoClient) ... ok

----------------------------------------------------------------------
Ran 9 tests in 3.490s

OK
{'ResponseMetadata': {'RequestId': '8cce34cb-ad9e-4b09-a249-ac1e2e5289be', 'HostId': 'ToZFQJpt5Fn0BSk', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Tue, 02 Jan 2024 11:36:52 GMT', 'cache-control': 'no-cache', 'expires': 'Tue, 02 Jan 2024 11:36:52 GMT', 'pragma': 'no-cache', 'content-type': 'text/plain;charset=utf-8', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-frame-options': 'SAMEORIGIN', 'location': 'http://s3g:9878/ozone-test-xmiwbyndcc', 'server': 'Ozone', 'x-amz-id-2': 'ToZFQJpt5Fn0BSk', 'x-amz-request-id': '8cce34cb-ad9e-4b09-a249-ac1e2e5289be', 'content-length': '0'}, 'RetryAttempts': 0}, 'Location': 'http://s3g:9878/ozone-test-xmiwbyndcc'}
None
None
None
{'ResponseMetadata': {'RequestId': 'a5073c7c-ac7a-481b-88e3-9d8dfa99b4f4', 'HostId': 'B1Rl9UItyD', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Tue, 02 Jan 2024 11:36:53 GMT', 'cache-control': 'no-cache', 'expires': 'Tue, 02 Jan 2024 11:36:53 GMT', 'pragma': 'no-cache', 'content-type': 'text/plain;charset=utf-8', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-frame-options': 'SAMEORIGIN', 'location': 'http://s3g:9878/bucket-cuvzzqezin', 'server': 'Ozone', 'x-amz-id-2': 'B1Rl9UItyD', 'x-amz-request-id': 'a5073c7c-ac7a-481b-88e3-9d8dfa99b4f4', 'content-length': '0'}, 'RetryAttempts': 0}, 'Location': 'http://s3g:9878/bucket-cuvzzqezin'}
{'ResponseMetadata': {'RequestId': 'b090d3ee-8ee6-4c7c-9ba9-905a9a6d1cd6', 'HostId': '1WE9Ge6Em', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Tue, 02 Jan 2024 11:36:53 GMT', 'cache-control': 'no-cache', 'expires': 'Tue, 02 Jan 2024 11:36:53 GMT', 'pragma': 'no-cache', 'content-type': 'application/xml', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-frame-options': 'SAMEORIGIN', 'server': 'Ozone', 'x-amz-id-2': '1WE9Ge6Em', 'x-amz-request-id': 'b090d3ee-8ee6-4c7c-9ba9-905a9a6d1cd6', 'content-length': '465'}, 'RetryAttempts': 0}, 'Buckets': [{'Name': 'bucket-cuvzzqezin', 'CreationDate': datetime.datetime(2024, 1, 2, 11, 36, 53, 774000, tzinfo=tzlocal())}, {'Name': 'erasure', 'CreationDate': datetime.datetime(2024, 1, 2, 11, 36, 43, 46000, tzinfo=tzlocal())}, {'Name': 'ozone-test-xmiwbyndcc', 'CreationDate': datetime.datetime(2024, 1, 2, 11, 36, 52, 109000, tzinfo=tzlocal())}]}
{'ResponseMetadata': {'RequestId': '5a7694ae-21b1-427e-8c9b-3ec6f4c47ec5', 'HostId': 'Txz28QpCAYhjhD', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Tue, 02 Jan 2024 11:36:53 GMT', 'cache-control': 'no-cache', 'expires': 'Tue, 02 Jan 2024 11:36:53 GMT', 'pragma': 'no-cache', 'content-type': 'text/plain', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-frame-options': 'SAMEORIGIN', 'server': 'Ozone', 'x-amz-id-2': 'Txz28QpCAYhjhD', 'x-amz-request-id': '5a7694ae-21b1-427e-8c9b-3ec6f4c47ec5', 'content-length': '0'}, 'RetryAttempts': 0}}
{'ResponseMetadata': {'RequestId': 'fae150ba-1f2b-4624-8e1c-16ad8ad73401', 'HostId': 'Foiy88N7gzC', 'HTTPStatusCode': 204, 'HTTPHeaders': {'date': 'Tue, 02 Jan 2024 11:36:53 GMT', 'cache-control': 'no-cache', 'expires': 'Tue, 02 Jan 2024 11:36:53 GMT', 'pragma': 'no-cache', 'content-type': 'text/plain;charset=utf-8', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-frame-options': 'SAMEORIGIN', 'server': 'Ozone', 'x-amz-id-2': 'Foiy88N7gzC', 'x-amz-request-id': 'fae150ba-1f2b-4624-8e1c-16ad8ad73401'}, 'RetryAttempts': 0}}
{'ResponseMetadata': {'RequestId': '6636bb0f-24bd-473d-b7dd-376975308e51', 'HostId': 'snjW6sa03Ymxl', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Tue, 02 Jan 2024 11:36:53 GMT', 'cache-control': 'no-cache', 'expires': 'Tue, 02 Jan 2024 11:36:53 GMT', 'pragma': 'no-cache', 'content-type': 'binary/octet-stream', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-frame-options': 'SAMEORIGIN', 'etag': '"d5568357dc4eaab62bd52312f884c9be"', 'last-modified': 'Tue, 02 Jan 2024 11:36:53 GMT', 'server': 'Ozone', 'x-amz-id-2': 'snjW6sa03Ymxl', 'x-amz-request-id': '6636bb0f-24bd-473d-b7dd-376975308e51', 'content-length': '4068'}, 'RetryAttempts': 0}, 'LastModified': datetime.datetime(2024, 1, 2, 11, 36, 53, tzinfo=tzutc()), 'ContentLength': 4068, 'ETag': '"d5568357dc4eaab62bd52312f884c9be"', 'CacheControl': 'no-cache', 'ContentType': 'binary/octet-stream', 'Expires': datetime.datetime(2024, 1, 2, 11, 36, 53, tzinfo=tzutc()), 'Metadata': {}}
{'ResponseMetadata': {'RequestId': '3ccec2ed-01ae-45cb-9646-dc5248e8e924', 'HostId': '1lNB5E40K8Acva4', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Tue, 02 Jan 2024 11:36:54 GMT', 'cache-control': 'no-cache', 'expires': 'Tue, 02 Jan 2024 11:36:54 GMT', 'pragma': 'no-cache', 'content-type': 'application/xml', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-frame-options': 'SAMEORIGIN', 'server': 'Ozone', 'x-amz-id-2': '1lNB5E40K8Acva4', 'x-amz-request-id': '3ccec2ed-01ae-45cb-9646-dc5248e8e924', 'content-length': '212'}, 'RetryAttempts': 0}, 'Deleted': [{'Key': 'README4.md'}, {'Key': 'README3.md'}]}
{'ResponseMetadata': {'RequestId': '18e1afbd-0efa-4762-bf73-b0c5781c5818', 'HostId': 'aCfgLwUCyQ1rW', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Tue, 02 Jan 2024 11:36:54 GMT', 'cache-control': 'no-cache', 'expires': 'Tue, 02 Jan 2024 11:36:54 GMT', 'pragma': 'no-cache', 'content-type': 'binary/octet-stream', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-frame-options': 'SAMEORIGIN', 'etag': '"d5568357dc4eaab62bd52312f884c9be"', 'last-modified': 'Tue, 02 Jan 2024 11:36:52 GMT', 'server': 'Ozone', 'x-amz-id-2': 'aCfgLwUCyQ1rW', 'x-amz-request-id': '18e1afbd-0efa-4762-bf73-b0c5781c5818', 'content-length': '4068'}, 'RetryAttempts': 0}, 'LastModified': datetime.datetime(2024, 1, 2, 11, 36, 52, tzinfo=tzutc()), 'ContentLength': 4068, 'ETag': '"d5568357dc4eaab62bd52312f884c9be"', 'CacheControl': 'no-cache', 'ContentType': 'binary/octet-stream', 'Expires': datetime.datetime(2024, 1, 2, 11, 36, 54, tzinfo=tzutc()), 'Metadata': {}}
{'ResponseMetadata': {'RequestId': '8f69147a-c8be-4fed-a3e1-95d1df987f64', 'HostId': 'kvlpyQdCTsR', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Tue, 02 Jan 2024 11:36:54 GMT', 'cache-control': 'no-cache', 'expires': 'Tue, 02 Jan 2024 11:36:54 GMT', 'pragma': 'no-cache', 'content-type': 'application/xml', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-frame-options': 'SAMEORIGIN', 'server': 'Ozone', 'x-amz-id-2': 'kvlpyQdCTsR', 'x-amz-request-id': '8f69147a-c8be-4fed-a3e1-95d1df987f64', 'content-length': '287'}, 'RetryAttempts': 0}, 'Bucket': 'erasure', 'Key': 'onqhfjyyou', 'UploadId': 'a22e197f-1ab5-4095-9418-d100e005ce03-111686150665338893'}
{'ResponseMetadata': {'RequestId': '7442e579-d4eb-4e37-a664-b665b79d186c', 'HostId': 'FLqYXuCeB', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Tue, 02 Jan 2024 11:36:55 GMT', 'cache-control': 'no-cache', 'expires': 'Tue, 02 Jan 2024 11:36:55 GMT', 'pragma': 'no-cache', 'content-type': 'application/xml', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-frame-options': 'SAMEORIGIN', 'server': 'Ozone', 'x-amz-id-2': 'FLqYXuCeB', 'x-amz-request-id': '7442e579-d4eb-4e37-a664-b665b79d186c', 'content-length': '288'}, 'RetryAttempts': 0}, 'Location': 'erasure', 'Bucket': 'erasure', 'Key': 'onqhfjyyou', 'ETag': '"24d794dfc756320ffadb905d526299bc-2"'}
Boto3 Client Test PASSED!</msg>
<status status="PASS" starttime="20240102 11:36:55.503" endtime="20240102 11:36:55.504"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:36:55.504" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:36:55.504" endtime="20240102 11:36:55.504"/>
</kw>
<status status="PASS" starttime="20240102 11:36:51.790" endtime="20240102 11:36:55.505"/>
</kw>
<msg timestamp="20240102 11:36:55.505" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:36:51.789" endtime="20240102 11:36:55.505"/>
</kw>
<msg timestamp="20240102 11:36:55.505" level="INFO">${result} = test_create_bucket (__main__.TestBotoClient) ... /usr/local/lib/python3.6/site-packages/boto3/compat.py:88: PythonDeprecationWarning: Boto3 will no longer support Python 3.6 starting May 30, 2022. To ...</msg>
<status status="PASS" starttime="20240102 11:36:51.789" endtime="20240102 11:36:55.505"/>
</kw>
<timeout value="15 minutes"/>
<status status="PASS" starttime="20240102 11:36:51.789" endtime="20240102 11:36:55.505"/>
</test>
<doc>S3 gateway test with Boto3 Client</doc>
<status status="PASS" starttime="20240102 11:36:51.774" endtime="20240102 11:36:55.506"/>
</suite>
<suite id="s1-s1-s3" name="Bucketcreate" source="/opt/hadoop/smoketest/s3/bucketcreate.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20240102 11:36:55.516" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:36:55.515" endtime="20240102 11:36:55.516"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20240102 11:36:55.516" endtime="20240102 11:36:55.516"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20240102 11:36:55.516" endtime="20240102 11:36:55.516"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20240102 11:36:55.516" endtime="20240102 11:36:55.516"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20240102 11:36:55.516" endtime="20240102 11:36:55.516"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20240102 11:36:55.516" endtime="20240102 11:36:55.516"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20240102 11:36:55.517" endtime="20240102 11:36:55.517"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20240102 11:36:55.517" endtime="20240102 11:36:55.517"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20240102 11:36:55.517" endtime="20240102 11:36:55.517"/>
</kw>
<status status="PASS" starttime="20240102 11:36:55.515" endtime="20240102 11:36:55.517"/>
</kw>
<test id="s1-s1-s3-t1" name="Create new bucket" line="32">
<kw name="Create bucket" library="commonawslib">
<kw name="Generate Ozone String" library="commonawslib">
<var>${postfix}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20240102 11:36:55.519" level="INFO">${randStr} = 4802490895</msg>
<status status="PASS" starttime="20240102 11:36:55.518" endtime="20240102 11:36:55.519"/>
</kw>
<msg timestamp="20240102 11:36:55.519" level="INFO">${postfix} = ozone-test-4802490895</msg>
<status status="PASS" starttime="20240102 11:36:55.518" endtime="20240102 11:36:55.519"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${bucket}</var>
<arg>bucket-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240102 11:36:55.519" level="INFO">${bucket} = bucket-ozone-test-4802490895</msg>
<status status="PASS" starttime="20240102 11:36:55.519" endtime="20240102 11:36:55.519"/>
</kw>
<kw name="Create bucket with name" library="commonawslib">
<arg>${bucket}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:36:55.522" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-ozone-test-4802490895 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:36:55.974" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:36:55.974" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-ozone-test-4802490895"
}</msg>
<status status="PASS" starttime="20240102 11:36:55.521" endtime="20240102 11:36:55.974"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:36:55.974" level="INFO">{
    "Location": "http://s3g:9878/bucket-ozone-test-4802490895"
}</msg>
<status status="PASS" starttime="20240102 11:36:55.974" endtime="20240102 11:36:55.975"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:36:55.975" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:36:55.975" endtime="20240102 11:36:55.975"/>
</kw>
<status status="PASS" starttime="20240102 11:36:55.521" endtime="20240102 11:36:55.975"/>
</kw>
<msg timestamp="20240102 11:36:55.975" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:36:55.520" endtime="20240102 11:36:55.975"/>
</kw>
<msg timestamp="20240102 11:36:55.976" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-ozone-test-4802490895"
}</msg>
<status status="PASS" starttime="20240102 11:36:55.520" endtime="20240102 11:36:55.976"/>
</kw>
<msg timestamp="20240102 11:36:55.976" level="INFO">${result} = {
    "Location": "http://s3g:9878/bucket-ozone-test-4802490895"
}</msg>
<status status="PASS" starttime="20240102 11:36:55.520" endtime="20240102 11:36:55.976"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:36:55.976" endtime="20240102 11:36:55.976"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:36:55.976" endtime="20240102 11:36:55.977"/>
</kw>
<status status="PASS" starttime="20240102 11:36:55.519" endtime="20240102 11:36:55.977"/>
</kw>
<status status="PASS" starttime="20240102 11:36:55.518" endtime="20240102 11:36:55.977"/>
</kw>
<tag>no-bucket-type</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20240102 11:36:55.517" endtime="20240102 11:36:55.977"/>
</test>
<test id="s1-s1-s3-t2" name="Create bucket which already exists" line="35">
<kw name="Create bucket" library="commonawslib">
<var>${bucket}</var>
<kw name="Generate Ozone String" library="commonawslib">
<var>${postfix}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20240102 11:36:55.979" level="INFO">${randStr} = 1546589564</msg>
<status status="PASS" starttime="20240102 11:36:55.979" endtime="20240102 11:36:55.979"/>
</kw>
<msg timestamp="20240102 11:36:55.979" level="INFO">${postfix} = ozone-test-1546589564</msg>
<status status="PASS" starttime="20240102 11:36:55.978" endtime="20240102 11:36:55.979"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${bucket}</var>
<arg>bucket-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240102 11:36:55.980" level="INFO">${bucket} = bucket-ozone-test-1546589564</msg>
<status status="PASS" starttime="20240102 11:36:55.980" endtime="20240102 11:36:55.980"/>
</kw>
<kw name="Create bucket with name" library="commonawslib">
<arg>${bucket}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:36:55.983" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-ozone-test-1546589564 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:36:56.425" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:36:56.425" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-ozone-test-1546589564"
}</msg>
<status status="PASS" starttime="20240102 11:36:55.982" endtime="20240102 11:36:56.426"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:36:56.426" level="INFO">{
    "Location": "http://s3g:9878/bucket-ozone-test-1546589564"
}</msg>
<status status="PASS" starttime="20240102 11:36:56.426" endtime="20240102 11:36:56.427"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:36:56.427" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:36:56.427" endtime="20240102 11:36:56.427"/>
</kw>
<status status="PASS" starttime="20240102 11:36:55.981" endtime="20240102 11:36:56.427"/>
</kw>
<msg timestamp="20240102 11:36:56.427" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:36:55.981" endtime="20240102 11:36:56.427"/>
</kw>
<msg timestamp="20240102 11:36:56.428" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-ozone-test-1546589564"
}</msg>
<status status="PASS" starttime="20240102 11:36:55.981" endtime="20240102 11:36:56.428"/>
</kw>
<msg timestamp="20240102 11:36:56.428" level="INFO">${result} = {
    "Location": "http://s3g:9878/bucket-ozone-test-1546589564"
}</msg>
<status status="PASS" starttime="20240102 11:36:55.980" endtime="20240102 11:36:56.428"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:36:56.428" endtime="20240102 11:36:56.428"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:36:56.428" endtime="20240102 11:36:56.429"/>
</kw>
<status status="PASS" starttime="20240102 11:36:55.980" endtime="20240102 11:36:56.429"/>
</kw>
<msg timestamp="20240102 11:36:56.429" level="INFO">${bucket} = bucket-ozone-test-1546589564</msg>
<status status="PASS" starttime="20240102 11:36:55.978" endtime="20240102 11:36:56.429"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:36:56.431" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-ozone-test-1546589564 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:36:57.115" level="INFO">${rc} = 255</msg>
<msg timestamp="20240102 11:36:57.115" level="INFO">${output} = 
An error occurred (BucketAlreadyExists) when calling the CreateBucket operation: The requested bucket name is not available as it already exists.</msg>
<status status="PASS" starttime="20240102 11:36:56.430" endtime="20240102 11:36:57.115"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:36:57.116" level="INFO">
An error occurred (BucketAlreadyExists) when calling the CreateBucket operation: The requested bucket name is not available as it already exists.</msg>
<status status="PASS" starttime="20240102 11:36:57.116" endtime="20240102 11:36:57.116"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:36:57.117" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:36:57.116" endtime="20240102 11:36:57.117"/>
</kw>
<msg timestamp="20240102 11:36:57.117" level="INFO">${output} = 
An error occurred (BucketAlreadyExists) when calling the CreateBucket operation: The requested bucket name is not available as it already exists.</msg>
<status status="PASS" starttime="20240102 11:36:56.430" endtime="20240102 11:36:57.117"/>
</kw>
<msg timestamp="20240102 11:36:57.117" level="INFO">${result} = 
An error occurred (BucketAlreadyExists) when calling the CreateBucket operation: The requested bucket name is not available as it already exists.</msg>
<status status="PASS" starttime="20240102 11:36:56.429" endtime="20240102 11:36:57.117"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BucketAlreadyExists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:36:57.117" endtime="20240102 11:36:57.118"/>
</kw>
<tag>no-bucket-type</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20240102 11:36:55.977" endtime="20240102 11:36:57.118"/>
</test>
<test id="s1-s1-s3-t3" name="Create bucket with invalid bucket name" line="40">
<kw name="Generate Ozone String" library="commonawslib">
<var>${randStr}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20240102 11:36:57.120" level="INFO">${randStr} = 3238603652</msg>
<status status="PASS" starttime="20240102 11:36:57.120" endtime="20240102 11:36:57.120"/>
</kw>
<msg timestamp="20240102 11:36:57.120" level="INFO">${randStr} = ozone-test-3238603652</msg>
<status status="PASS" starttime="20240102 11:36:57.119" endtime="20240102 11:36:57.120"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket invalid_bucket_${randStr}</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:36:57.123" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket invalid_bucket_ozone-test-3238603652 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:36:57.582" level="INFO">${rc} = 255</msg>
<msg timestamp="20240102 11:36:57.582" level="INFO">${output} = 
An error occurred (InvalidBucketName) when calling the CreateBucket operation: The specified bucket is not valid.</msg>
<status status="PASS" starttime="20240102 11:36:57.121" endtime="20240102 11:36:57.582"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:36:57.583" level="INFO">
An error occurred (InvalidBucketName) when calling the CreateBucket operation: The specified bucket is not valid.</msg>
<status status="PASS" starttime="20240102 11:36:57.583" endtime="20240102 11:36:57.583"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:36:57.584" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:36:57.583" endtime="20240102 11:36:57.584"/>
</kw>
<msg timestamp="20240102 11:36:57.584" level="INFO">${output} = 
An error occurred (InvalidBucketName) when calling the CreateBucket operation: The specified bucket is not valid.</msg>
<status status="PASS" starttime="20240102 11:36:57.121" endtime="20240102 11:36:57.584"/>
</kw>
<msg timestamp="20240102 11:36:57.584" level="INFO">${result} = 
An error occurred (InvalidBucketName) when calling the CreateBucket operation: The specified bucket is not valid.</msg>
<status status="PASS" starttime="20240102 11:36:57.120" endtime="20240102 11:36:57.584"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidBucketName</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:36:57.584" endtime="20240102 11:36:57.585"/>
</kw>
<tag>no-bucket-type</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20240102 11:36:57.118" endtime="20240102 11:36:57.585"/>
</test>
<test id="s1-s1-s3-t4" name="Create new bucket and check no group ACL" line="45">
<kw name="Create bucket" library="commonawslib">
<var>${bucket}</var>
<kw name="Generate Ozone String" library="commonawslib">
<var>${postfix}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20240102 11:36:57.588" level="INFO">${randStr} = 7539676937</msg>
<status status="PASS" starttime="20240102 11:36:57.587" endtime="20240102 11:36:57.588"/>
</kw>
<msg timestamp="20240102 11:36:57.588" level="INFO">${postfix} = ozone-test-7539676937</msg>
<status status="PASS" starttime="20240102 11:36:57.586" endtime="20240102 11:36:57.588"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${bucket}</var>
<arg>bucket-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240102 11:36:57.589" level="INFO">${bucket} = bucket-ozone-test-7539676937</msg>
<status status="PASS" starttime="20240102 11:36:57.588" endtime="20240102 11:36:57.589"/>
</kw>
<kw name="Create bucket with name" library="commonawslib">
<arg>${bucket}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:36:57.592" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-ozone-test-7539676937 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:36:58.047" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:36:58.047" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-ozone-test-7539676937"
}</msg>
<status status="PASS" starttime="20240102 11:36:57.591" endtime="20240102 11:36:58.047"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:36:58.048" level="INFO">{
    "Location": "http://s3g:9878/bucket-ozone-test-7539676937"
}</msg>
<status status="PASS" starttime="20240102 11:36:58.048" endtime="20240102 11:36:58.048"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:36:58.049" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:36:58.048" endtime="20240102 11:36:58.049"/>
</kw>
<status status="PASS" starttime="20240102 11:36:57.590" endtime="20240102 11:36:58.049"/>
</kw>
<msg timestamp="20240102 11:36:58.049" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:36:57.590" endtime="20240102 11:36:58.049"/>
</kw>
<msg timestamp="20240102 11:36:58.049" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-ozone-test-7539676937"
}</msg>
<status status="PASS" starttime="20240102 11:36:57.590" endtime="20240102 11:36:58.049"/>
</kw>
<msg timestamp="20240102 11:36:58.050" level="INFO">${result} = {
    "Location": "http://s3g:9878/bucket-ozone-test-7539676937"
}</msg>
<status status="PASS" starttime="20240102 11:36:57.589" endtime="20240102 11:36:58.050"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:36:58.050" endtime="20240102 11:36:58.050"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:36:58.050" endtime="20240102 11:36:58.050"/>
</kw>
<status status="PASS" starttime="20240102 11:36:57.589" endtime="20240102 11:36:58.051"/>
</kw>
<msg timestamp="20240102 11:36:58.051" level="INFO">${bucket} = bucket-ozone-test-7539676937</msg>
<status status="PASS" starttime="20240102 11:36:57.586" endtime="20240102 11:36:58.051"/>
</kw>
<kw name="Execute" library="os">
<var>${acl}</var>
<arg>ozone sh bucket getacl s3v/${bucket}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:36:58.053" level="INFO">Running command 'ozone sh bucket getacl s3v/bucket-ozone-test-7539676937 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:37:01.493" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:37:01.494" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "dlfknslnfslf",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20240102 11:36:58.052" endtime="20240102 11:37:01.494"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:37:01.494" level="INFO">[ {
  "type" : "USER",
  "name" : "dlfknslnfslf",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20240102 11:37:01.494" endtime="20240102 11:37:01.495"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:37:01.495" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:37:01.495" endtime="20240102 11:37:01.495"/>
</kw>
<status status="PASS" starttime="20240102 11:36:58.052" endtime="20240102 11:37:01.495"/>
</kw>
<msg timestamp="20240102 11:37:01.495" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:36:58.051" endtime="20240102 11:37:01.495"/>
</kw>
<msg timestamp="20240102 11:37:01.496" level="INFO">${acl} = [ {
  "type" : "USER",
  "name" : "dlfknslnfslf",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20240102 11:36:58.051" endtime="20240102 11:37:01.496"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${group}</var>
<arg>${acl}</arg>
<arg>"GROUP"</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20240102 11:37:01.496" level="INFO">${group} = []</msg>
<status status="PASS" starttime="20240102 11:37:01.496" endtime="20240102 11:37:01.496"/>
</kw>
<if>
<branch type="IF" condition="'${group}' is not '[]'">
<kw name="Evaluate" library="BuiltIn">
<var>${json}</var>
<arg>json.loads('''${acl}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="NOT RUN" starttime="20240102 11:37:01.497" endtime="20240102 11:37:01.497"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${json}[1][type]</arg>
<arg>GROUP</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20240102 11:37:01.497" endtime="20240102 11:37:01.497"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${json}[1][aclList]</arg>
<arg>NONE</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20240102 11:37:01.497" endtime="20240102 11:37:01.497"/>
</kw>
<status status="NOT RUN" starttime="20240102 11:37:01.496" endtime="20240102 11:37:01.497"/>
</branch>
<status status="PASS" starttime="20240102 11:37:01.496" endtime="20240102 11:37:01.497"/>
</if>
<tag>no-bucket-type</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20240102 11:36:57.585" endtime="20240102 11:37:01.497"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20240102 11:36:55.507" endtime="20240102 11:37:01.498"/>
</suite>
<suite id="s1-s1-s4" name="Bucketdelete" source="/opt/hadoop/smoketest/s3/bucketdelete.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20240102 11:37:01.508" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:37:01.508" endtime="20240102 11:37:01.508"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20240102 11:37:01.508" endtime="20240102 11:37:01.508"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20240102 11:37:01.508" endtime="20240102 11:37:01.508"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20240102 11:37:01.508" endtime="20240102 11:37:01.508"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20240102 11:37:01.509" endtime="20240102 11:37:01.509"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20240102 11:37:01.509" endtime="20240102 11:37:01.509"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20240102 11:37:01.509" endtime="20240102 11:37:01.509"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20240102 11:37:01.509" endtime="20240102 11:37:01.509"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20240102 11:37:01.509" endtime="20240102 11:37:01.509"/>
</kw>
<status status="PASS" starttime="20240102 11:37:01.507" endtime="20240102 11:37:01.509"/>
</kw>
<test id="s1-s1-s4-t1" name="Delete existing bucket" line="37">
<kw name="Create bucket to be deleted">
<var>${bucket}</var>
<kw name="Run Keyword If" library="BuiltIn">
<var>${bucket}</var>
<arg>'${BUCKET}' == 'link'</arg>
<arg>Create link</arg>
<arg>to-be-deleted</arg>
<arg>ELSE</arg>
<arg>Run Keyword</arg>
<arg>Create bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Run Keyword" library="BuiltIn">
<arg>Create bucket</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Create bucket" library="commonawslib">
<kw name="Generate Ozone String" library="commonawslib">
<var>${postfix}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20240102 11:37:01.512" level="INFO">${randStr} = 2682952396</msg>
<status status="PASS" starttime="20240102 11:37:01.511" endtime="20240102 11:37:01.512"/>
</kw>
<msg timestamp="20240102 11:37:01.512" level="INFO">${postfix} = ozone-test-2682952396</msg>
<status status="PASS" starttime="20240102 11:37:01.511" endtime="20240102 11:37:01.512"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${bucket}</var>
<arg>bucket-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240102 11:37:01.512" level="INFO">${bucket} = bucket-ozone-test-2682952396</msg>
<status status="PASS" starttime="20240102 11:37:01.512" endtime="20240102 11:37:01.512"/>
</kw>
<kw name="Create bucket with name" library="commonawslib">
<arg>${bucket}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:37:01.516" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-ozone-test-2682952396 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:37:01.959" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:37:01.959" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-ozone-test-2682952396"
}</msg>
<status status="PASS" starttime="20240102 11:37:01.514" endtime="20240102 11:37:01.959"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:37:01.960" level="INFO">{
    "Location": "http://s3g:9878/bucket-ozone-test-2682952396"
}</msg>
<status status="PASS" starttime="20240102 11:37:01.960" endtime="20240102 11:37:01.960"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:37:01.961" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:37:01.960" endtime="20240102 11:37:01.961"/>
</kw>
<status status="PASS" starttime="20240102 11:37:01.514" endtime="20240102 11:37:01.961"/>
</kw>
<msg timestamp="20240102 11:37:01.961" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:37:01.514" endtime="20240102 11:37:01.961"/>
</kw>
<msg timestamp="20240102 11:37:01.961" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-ozone-test-2682952396"
}</msg>
<status status="PASS" starttime="20240102 11:37:01.513" endtime="20240102 11:37:01.961"/>
</kw>
<msg timestamp="20240102 11:37:01.961" level="INFO">${result} = {
    "Location": "http://s3g:9878/bucket-ozone-test-2682952396"
}</msg>
<status status="PASS" starttime="20240102 11:37:01.513" endtime="20240102 11:37:01.961"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:37:01.962" endtime="20240102 11:37:01.962"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:37:01.962" endtime="20240102 11:37:01.962"/>
</kw>
<status status="PASS" starttime="20240102 11:37:01.513" endtime="20240102 11:37:01.962"/>
</kw>
<status status="PASS" starttime="20240102 11:37:01.511" endtime="20240102 11:37:01.962"/>
</kw>
<status status="PASS" starttime="20240102 11:37:01.511" endtime="20240102 11:37:01.962"/>
</kw>
<msg timestamp="20240102 11:37:01.963" level="INFO">${bucket} = bucket-ozone-test-2682952396</msg>
<status status="PASS" starttime="20240102 11:37:01.510" endtime="20240102 11:37:01.963"/>
</kw>
<msg timestamp="20240102 11:37:01.963" level="INFO">${bucket} = bucket-ozone-test-2682952396</msg>
<status status="PASS" starttime="20240102 11:37:01.510" endtime="20240102 11:37:01.963"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>delete-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:37:01.966" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-bucket --bucket bucket-ozone-test-2682952396 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:37:02.428" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:37:02.428" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240102 11:37:01.964" endtime="20240102 11:37:02.428"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:37:02.429" level="INFO"/>
<status status="PASS" starttime="20240102 11:37:02.428" endtime="20240102 11:37:02.429"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:37:02.429" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:37:02.429" endtime="20240102 11:37:02.429"/>
</kw>
<status status="PASS" starttime="20240102 11:37:01.964" endtime="20240102 11:37:02.429"/>
</kw>
<msg timestamp="20240102 11:37:02.430" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:37:01.964" endtime="20240102 11:37:02.430"/>
</kw>
<msg timestamp="20240102 11:37:02.430" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240102 11:37:01.963" endtime="20240102 11:37:02.430"/>
</kw>
<status status="PASS" starttime="20240102 11:37:01.963" endtime="20240102 11:37:02.430"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20240102 11:37:01.509" endtime="20240102 11:37:02.430"/>
</test>
<test id="s1-s1-s4-t2" name="Delete non-existent bucket" line="41">
<kw name="Generate Ozone String" library="commonawslib">
<var>${randStr}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20240102 11:37:02.432" level="INFO">${randStr} = 0428927895</msg>
<status status="PASS" starttime="20240102 11:37:02.432" endtime="20240102 11:37:02.432"/>
</kw>
<msg timestamp="20240102 11:37:02.432" level="INFO">${randStr} = ozone-test-0428927895</msg>
<status status="PASS" starttime="20240102 11:37:02.431" endtime="20240102 11:37:02.433"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>delete-bucket --bucket nosuchbucket-${randStr}</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:37:02.435" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-bucket --bucket nosuchbucket-ozone-test-0428927895 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:37:02.893" level="INFO">${rc} = 255</msg>
<msg timestamp="20240102 11:37:02.894" level="INFO">${output} = 
An error occurred (NoSuchBucket) when calling the DeleteBucket operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20240102 11:37:02.434" endtime="20240102 11:37:02.894"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:37:02.895" level="INFO">
An error occurred (NoSuchBucket) when calling the DeleteBucket operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20240102 11:37:02.894" endtime="20240102 11:37:02.895"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:37:02.895" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:37:02.895" endtime="20240102 11:37:02.895"/>
</kw>
<msg timestamp="20240102 11:37:02.895" level="INFO">${output} = 
An error occurred (NoSuchBucket) when calling the DeleteBucket operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20240102 11:37:02.433" endtime="20240102 11:37:02.895"/>
</kw>
<msg timestamp="20240102 11:37:02.896" level="INFO">${result} = 
An error occurred (NoSuchBucket) when calling the DeleteBucket operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20240102 11:37:02.433" endtime="20240102 11:37:02.896"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NoSuchBucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:37:02.896" endtime="20240102 11:37:02.896"/>
</kw>
<tag>no-bucket-type</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20240102 11:37:02.431" endtime="20240102 11:37:02.896"/>
</test>
<test id="s1-s1-s4-t3" name="Delete bucket with incomplete multipart uploads" line="47">
<kw name="Create bucket" library="commonawslib">
<var>${bucket}</var>
<kw name="Generate Ozone String" library="commonawslib">
<var>${postfix}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20240102 11:37:02.899" level="INFO">${randStr} = 8662210789</msg>
<status status="PASS" starttime="20240102 11:37:02.898" endtime="20240102 11:37:02.899"/>
</kw>
<msg timestamp="20240102 11:37:02.899" level="INFO">${postfix} = ozone-test-8662210789</msg>
<status status="PASS" starttime="20240102 11:37:02.898" endtime="20240102 11:37:02.899"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${bucket}</var>
<arg>bucket-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240102 11:37:02.900" level="INFO">${bucket} = bucket-ozone-test-8662210789</msg>
<status status="PASS" starttime="20240102 11:37:02.899" endtime="20240102 11:37:02.900"/>
</kw>
<kw name="Create bucket with name" library="commonawslib">
<arg>${bucket}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:37:02.903" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-ozone-test-8662210789 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:37:03.351" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:37:03.351" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-ozone-test-8662210789"
}</msg>
<status status="PASS" starttime="20240102 11:37:02.901" endtime="20240102 11:37:03.351"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:37:03.352" level="INFO">{
    "Location": "http://s3g:9878/bucket-ozone-test-8662210789"
}</msg>
<status status="PASS" starttime="20240102 11:37:03.351" endtime="20240102 11:37:03.352"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:37:03.352" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:37:03.352" endtime="20240102 11:37:03.352"/>
</kw>
<status status="PASS" starttime="20240102 11:37:02.901" endtime="20240102 11:37:03.352"/>
</kw>
<msg timestamp="20240102 11:37:03.352" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:37:02.901" endtime="20240102 11:37:03.352"/>
</kw>
<msg timestamp="20240102 11:37:03.353" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-ozone-test-8662210789"
}</msg>
<status status="PASS" starttime="20240102 11:37:02.900" endtime="20240102 11:37:03.353"/>
</kw>
<msg timestamp="20240102 11:37:03.353" level="INFO">${result} = {
    "Location": "http://s3g:9878/bucket-ozone-test-8662210789"
}</msg>
<status status="PASS" starttime="20240102 11:37:02.900" endtime="20240102 11:37:03.353"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:37:03.353" endtime="20240102 11:37:03.353"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:37:03.353" endtime="20240102 11:37:03.354"/>
</kw>
<status status="PASS" starttime="20240102 11:37:02.900" endtime="20240102 11:37:03.354"/>
</kw>
<msg timestamp="20240102 11:37:03.354" level="INFO">${bucket} = bucket-ozone-test-8662210789</msg>
<status status="PASS" starttime="20240102 11:37:02.898" endtime="20240102 11:37:03.354"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${initiate_result}</var>
<arg>create-multipart-upload --bucket ${bucket} --key incomplete-multipartkey</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:37:03.357" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket bucket-ozone-test-8662210789 --key incomplete-multipartkey 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:37:03.834" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:37:03.834" level="INFO">${output} = {
    "Bucket": "bucket-ozone-test-8662210789",
    "Key": "incomplete-multipartkey",
    "UploadId": "32c414c6-d52b-4e80-8fbf-8fbbae8d1d2a-111686151292715024"
}</msg>
<status status="PASS" starttime="20240102 11:37:03.356" endtime="20240102 11:37:03.835"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:37:03.835" level="INFO">{
    "Bucket": "bucket-ozone-test-8662210789",
    "Key": "incomplete-multipartkey",
    "UploadId": "32c414c6-d52b-4e80-8fbf-8fbbae8d1d2a-111686151292715024"
}</msg>
<status status="PASS" starttime="20240102 11:37:03.835" endtime="20240102 11:37:03.836"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:37:03.836" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:37:03.836" endtime="20240102 11:37:03.836"/>
</kw>
<status status="PASS" starttime="20240102 11:37:03.355" endtime="20240102 11:37:03.837"/>
</kw>
<msg timestamp="20240102 11:37:03.837" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:37:03.355" endtime="20240102 11:37:03.837"/>
</kw>
<msg timestamp="20240102 11:37:03.837" level="INFO">${output} = {
    "Bucket": "bucket-ozone-test-8662210789",
    "Key": "incomplete-multipartkey",
    "UploadId": "32c414c6-d52b-4e80-8fbf-8fbbae8d1d2a-111686151292715024"
}</msg>
<status status="PASS" starttime="20240102 11:37:03.354" endtime="20240102 11:37:03.837"/>
</kw>
<msg timestamp="20240102 11:37:03.837" level="INFO">${initiate_result} = {
    "Bucket": "bucket-ozone-test-8662210789",
    "Key": "incomplete-multipartkey",
    "UploadId": "32c414c6-d52b-4e80-8fbf-8fbbae8d1d2a-111686151292715024"
}</msg>
<status status="PASS" starttime="20240102 11:37:03.354" endtime="20240102 11:37:03.837"/>
</kw>
<kw name="Execute" library="os">
<var>${uploadID}</var>
<arg>echo '${initiate_result}' | jq -r '.UploadId'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:37:03.841" level="INFO">Running command 'echo '{
    "Bucket": "bucket-ozone-test-8662210789",
    "Key": "incomplete-multipartkey",
    "UploadId": "32c414c6-d52b-4e80-8fbf-8fbbae8d1d2a-111686151292715024"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:37:03.877" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:37:03.877" level="INFO">${output} = 32c414c6-d52b-4e80-8fbf-8fbbae8d1d2a-111686151292715024</msg>
<status status="PASS" starttime="20240102 11:37:03.839" endtime="20240102 11:37:03.877"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:37:03.879" level="INFO">32c414c6-d52b-4e80-8fbf-8fbbae8d1d2a-111686151292715024</msg>
<status status="PASS" starttime="20240102 11:37:03.878" endtime="20240102 11:37:03.879"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:37:03.879" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:37:03.879" endtime="20240102 11:37:03.880"/>
</kw>
<status status="PASS" starttime="20240102 11:37:03.838" endtime="20240102 11:37:03.880"/>
</kw>
<msg timestamp="20240102 11:37:03.880" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:37:03.838" endtime="20240102 11:37:03.880"/>
</kw>
<msg timestamp="20240102 11:37:03.880" level="INFO">${uploadID} = 32c414c6-d52b-4e80-8fbf-8fbbae8d1d2a-111686151292715024</msg>
<status status="PASS" starttime="20240102 11:37:03.837" endtime="20240102 11:37:03.880"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${initiate_result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:37:03.880" endtime="20240102 11:37:03.881"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${initiate_result}</arg>
<arg>incomplete-multipartkey</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:37:03.881" endtime="20240102 11:37:03.881"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${initiate_result}</arg>
<arg>UploadId</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:37:03.881" endtime="20240102 11:37:03.882"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${delete_fail_result}</var>
<arg>delete-bucket --bucket ${bucket}</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:37:03.885" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-bucket --bucket bucket-ozone-test-8662210789 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:37:04.337" level="INFO">${rc} = 255</msg>
<msg timestamp="20240102 11:37:04.337" level="INFO">${output} = 
An error occurred (BucketNotEmpty) when calling the DeleteBucket operation: The bucket you tried to delete is not empty. If you are using --force option to delete all objects in the bucket, please en...</msg>
<status status="PASS" starttime="20240102 11:37:03.883" endtime="20240102 11:37:04.337"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:37:04.338" level="INFO">
An error occurred (BucketNotEmpty) when calling the DeleteBucket operation: The bucket you tried to delete is not empty. If you are using --force option to delete all objects in the bucket, please ensure that the bucket layout is OBJECT_STORE or that the bucket is completely empty before delete.</msg>
<status status="PASS" starttime="20240102 11:37:04.338" endtime="20240102 11:37:04.338"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:37:04.339" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:37:04.338" endtime="20240102 11:37:04.339"/>
</kw>
<msg timestamp="20240102 11:37:04.339" level="INFO">${output} = 
An error occurred (BucketNotEmpty) when calling the DeleteBucket operation: The bucket you tried to delete is not empty. If you are using --force option to delete all objects in the bucket, please en...</msg>
<status status="PASS" starttime="20240102 11:37:03.883" endtime="20240102 11:37:04.339"/>
</kw>
<msg timestamp="20240102 11:37:04.339" level="INFO">${delete_fail_result} = 
An error occurred (BucketNotEmpty) when calling the DeleteBucket operation: The bucket you tried to delete is not empty. If you are using --force option to delete all objects in the bucket, please en...</msg>
<status status="PASS" starttime="20240102 11:37:03.882" endtime="20240102 11:37:04.339"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${delete_fail_result}</arg>
<arg>BucketNotEmpty</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:37:04.340" endtime="20240102 11:37:04.340"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${abort_result}</var>
<arg>abort-multipart-upload --bucket ${bucket} --key incomplete-multipartkey --upload-id ${uploadID}</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:37:04.342" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 abort-multipart-upload --bucket bucket-ozone-test-8662210789 --key incomplete-multipartkey --upload-id 32c414c6-d52b-4e80-8fbf-8fbbae8d1d2a-111686151292715024 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:37:04.797" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:37:04.797" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240102 11:37:04.341" endtime="20240102 11:37:04.797"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:37:04.798" level="INFO"/>
<status status="PASS" starttime="20240102 11:37:04.798" endtime="20240102 11:37:04.798"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:37:04.799" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:37:04.798" endtime="20240102 11:37:04.799"/>
</kw>
<msg timestamp="20240102 11:37:04.799" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240102 11:37:04.341" endtime="20240102 11:37:04.799"/>
</kw>
<msg timestamp="20240102 11:37:04.799" level="INFO">${abort_result} = </msg>
<status status="PASS" starttime="20240102 11:37:04.340" endtime="20240102 11:37:04.799"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${delete_result}</var>
<arg>delete-bucket --bucket ${bucket}</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:37:04.802" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-bucket --bucket bucket-ozone-test-8662210789 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:37:05.266" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:37:05.266" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240102 11:37:04.800" endtime="20240102 11:37:05.266"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:37:05.267" level="INFO"/>
<status status="PASS" starttime="20240102 11:37:05.266" endtime="20240102 11:37:05.267"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:37:05.268" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:37:05.267" endtime="20240102 11:37:05.268"/>
</kw>
<msg timestamp="20240102 11:37:05.268" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240102 11:37:04.800" endtime="20240102 11:37:05.268"/>
</kw>
<msg timestamp="20240102 11:37:05.268" level="INFO">${delete_result} = </msg>
<status status="PASS" starttime="20240102 11:37:04.799" endtime="20240102 11:37:05.268"/>
</kw>
<tag>no-bucket-type</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20240102 11:37:02.897" endtime="20240102 11:37:05.268"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20240102 11:37:01.499" endtime="20240102 11:37:05.269"/>
</suite>
<suite id="s1-s1-s5" name="Buckethead" source="/opt/hadoop/smoketest/s3/buckethead.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20240102 11:37:05.279" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:37:05.279" endtime="20240102 11:37:05.279"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20240102 11:37:05.279" endtime="20240102 11:37:05.279"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20240102 11:37:05.279" endtime="20240102 11:37:05.279"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20240102 11:37:05.279" endtime="20240102 11:37:05.279"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20240102 11:37:05.280" endtime="20240102 11:37:05.280"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20240102 11:37:05.280" endtime="20240102 11:37:05.280"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20240102 11:37:05.280" endtime="20240102 11:37:05.280"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20240102 11:37:05.280" endtime="20240102 11:37:05.280"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20240102 11:37:05.280" endtime="20240102 11:37:05.280"/>
</kw>
<status status="PASS" starttime="20240102 11:37:05.278" endtime="20240102 11:37:05.280"/>
</kw>
<test id="s1-s1-s5-t1" name="Head Bucket" line="31">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>head-bucket --bucket ${BUCKET}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:37:05.284" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-bucket --bucket erasure 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:37:05.728" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:37:05.729" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240102 11:37:05.282" endtime="20240102 11:37:05.729"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:37:05.730" level="INFO"/>
<status status="PASS" starttime="20240102 11:37:05.729" endtime="20240102 11:37:05.730"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:37:05.730" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:37:05.730" endtime="20240102 11:37:05.731"/>
</kw>
<status status="PASS" starttime="20240102 11:37:05.282" endtime="20240102 11:37:05.731"/>
</kw>
<msg timestamp="20240102 11:37:05.731" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:37:05.282" endtime="20240102 11:37:05.731"/>
</kw>
<msg timestamp="20240102 11:37:05.731" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240102 11:37:05.281" endtime="20240102 11:37:05.731"/>
</kw>
<msg timestamp="20240102 11:37:05.731" level="INFO">${result} = </msg>
<status status="PASS" starttime="20240102 11:37:05.281" endtime="20240102 11:37:05.731"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20240102 11:37:05.280" endtime="20240102 11:37:05.732"/>
</test>
<test id="s1-s1-s5-t2" name="Head Bucket not existent" line="34">
<kw name="Generate Ozone String" library="commonawslib">
<var>${randStr}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20240102 11:37:05.734" level="INFO">${randStr} = 3245010088</msg>
<status status="PASS" starttime="20240102 11:37:05.734" endtime="20240102 11:37:05.734"/>
</kw>
<msg timestamp="20240102 11:37:05.734" level="INFO">${randStr} = ozone-test-3245010088</msg>
<status status="PASS" starttime="20240102 11:37:05.733" endtime="20240102 11:37:05.734"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>head-bucket --bucket ozonenosuchbucketqqweqwe-${randStr}</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:37:05.737" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-bucket --bucket ozonenosuchbucketqqweqwe-ozone-test-3245010088 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:37:06.189" level="INFO">${rc} = 255</msg>
<msg timestamp="20240102 11:37:06.189" level="INFO">${output} = 
An error occurred (404) when calling the HeadBucket operation: Not Found</msg>
<status status="PASS" starttime="20240102 11:37:05.736" endtime="20240102 11:37:06.189"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:37:06.190" level="INFO">
An error occurred (404) when calling the HeadBucket operation: Not Found</msg>
<status status="PASS" starttime="20240102 11:37:06.189" endtime="20240102 11:37:06.190"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:37:06.190" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:37:06.190" endtime="20240102 11:37:06.190"/>
</kw>
<msg timestamp="20240102 11:37:06.191" level="INFO">${output} = 
An error occurred (404) when calling the HeadBucket operation: Not Found</msg>
<status status="PASS" starttime="20240102 11:37:05.735" endtime="20240102 11:37:06.191"/>
</kw>
<msg timestamp="20240102 11:37:06.191" level="INFO">${result} = 
An error occurred (404) when calling the HeadBucket operation: Not Found</msg>
<status status="PASS" starttime="20240102 11:37:05.734" endtime="20240102 11:37:06.191"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>404</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:37:06.191" endtime="20240102 11:37:06.191"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Not Found</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:37:06.191" endtime="20240102 11:37:06.192"/>
</kw>
<tag>no-bucket-type</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20240102 11:37:05.732" endtime="20240102 11:37:06.192"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20240102 11:37:05.270" endtime="20240102 11:37:06.192"/>
</suite>
<suite id="s1-s1-s6" name="Bucketlist" source="/opt/hadoop/smoketest/s3/bucketlist.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20240102 11:37:06.202" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:37:06.202" endtime="20240102 11:37:06.202"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20240102 11:37:06.202" endtime="20240102 11:37:06.202"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20240102 11:37:06.203" endtime="20240102 11:37:06.203"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20240102 11:37:06.203" endtime="20240102 11:37:06.203"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20240102 11:37:06.203" endtime="20240102 11:37:06.203"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20240102 11:37:06.203" endtime="20240102 11:37:06.204"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20240102 11:37:06.204" endtime="20240102 11:37:06.204"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20240102 11:37:06.204" endtime="20240102 11:37:06.204"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20240102 11:37:06.204" endtime="20240102 11:37:06.204"/>
</kw>
<status status="PASS" starttime="20240102 11:37:06.201" endtime="20240102 11:37:06.205"/>
</kw>
<test id="s1-s1-s6-t1" name="List buckets" line="31">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-buckets | jq -r '.Buckets[].Name'</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:37:06.209" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-buckets | jq -r '.Buckets[].Name' 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:37:06.658" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:37:06.658" level="INFO">${output} = bucket-cuvzzqezin
bucket-ozone-test-1546589564
bucket-ozone-test-4802490895
bucket-ozone-test-7539676937
erasure</msg>
<status status="PASS" starttime="20240102 11:37:06.207" endtime="20240102 11:37:06.658"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:37:06.659" level="INFO">bucket-cuvzzqezin
bucket-ozone-test-1546589564
bucket-ozone-test-4802490895
bucket-ozone-test-7539676937
erasure</msg>
<status status="PASS" starttime="20240102 11:37:06.658" endtime="20240102 11:37:06.659"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:37:06.660" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:37:06.659" endtime="20240102 11:37:06.660"/>
</kw>
<status status="PASS" starttime="20240102 11:37:06.207" endtime="20240102 11:37:06.660"/>
</kw>
<msg timestamp="20240102 11:37:06.660" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:37:06.206" endtime="20240102 11:37:06.660"/>
</kw>
<msg timestamp="20240102 11:37:06.660" level="INFO">${output} = bucket-cuvzzqezin
bucket-ozone-test-1546589564
bucket-ozone-test-4802490895
bucket-ozone-test-7539676937
erasure</msg>
<status status="PASS" starttime="20240102 11:37:06.206" endtime="20240102 11:37:06.660"/>
</kw>
<msg timestamp="20240102 11:37:06.660" level="INFO">${result} = bucket-cuvzzqezin
bucket-ozone-test-1546589564
bucket-ozone-test-4802490895
bucket-ozone-test-7539676937
erasure</msg>
<status status="PASS" starttime="20240102 11:37:06.205" endtime="20240102 11:37:06.660"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:37:06.660" endtime="20240102 11:37:06.661"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20240102 11:37:06.205" endtime="20240102 11:37:06.661"/>
</test>
<test id="s1-s1-s6-t2" name="Get bucket info with Ozone Shell to check the owner field" line="35">
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skipping this check as security is not enabled</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<msg timestamp="20240102 11:37:06.663" level="INFO">Execution passed with message:
Skipping this check as security is not enabled</msg>
<status status="PASS" starttime="20240102 11:37:06.662" endtime="20240102 11:37:06.663"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info /s3v/${BUCKET} | jq -r '.owner'</arg>
<status status="NOT RUN" starttime="20240102 11:37:06.663" endtime="20240102 11:37:06.663"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>testuser</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20240102 11:37:06.663" endtime="20240102 11:37:06.663"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20240102 11:37:06.662" endtime="20240102 11:37:06.663">Skipping this check as security is not enabled</status>
</test>
<test id="s1-s1-s6-t3" name="List buckets with empty access id" line="43">
<kw name="Save AWS access key" library="commonawslib" type="SETUP">
<kw name="Execute" library="os">
<var>${OZONE_AWS_ACCESS_KEY_ID}</var>
<arg>aws configure get aws_access_key_id</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:37:06.667" level="INFO">Running command 'aws configure get aws_access_key_id 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:37:07.040" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:37:07.040" level="INFO">${output} = dlfknslnfslf</msg>
<status status="PASS" starttime="20240102 11:37:06.665" endtime="20240102 11:37:07.040"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:37:07.041" level="INFO">dlfknslnfslf</msg>
<status status="PASS" starttime="20240102 11:37:07.041" endtime="20240102 11:37:07.041"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:37:07.042" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:37:07.041" endtime="20240102 11:37:07.042"/>
</kw>
<status status="PASS" starttime="20240102 11:37:06.665" endtime="20240102 11:37:07.042"/>
</kw>
<msg timestamp="20240102 11:37:07.042" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:37:06.665" endtime="20240102 11:37:07.042"/>
</kw>
<msg timestamp="20240102 11:37:07.043" level="INFO">${OZONE_AWS_ACCESS_KEY_ID} = dlfknslnfslf</msg>
<status status="PASS" starttime="20240102 11:37:06.664" endtime="20240102 11:37:07.043"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${OZONE_AWS_ACCESS_KEY_ID}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240102 11:37:07.043" level="INFO">${OZONE_AWS_ACCESS_KEY_ID} = dlfknslnfslf</msg>
<status status="PASS" starttime="20240102 11:37:07.043" endtime="20240102 11:37:07.043"/>
</kw>
<status status="PASS" starttime="20240102 11:37:06.664" endtime="20240102 11:37:07.043"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ''</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:37:07.046" level="INFO">Running command 'aws configure set aws_access_key_id '' 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:37:07.420" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:37:07.420" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240102 11:37:07.045" endtime="20240102 11:37:07.420"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:37:07.421" level="INFO"/>
<status status="PASS" starttime="20240102 11:37:07.421" endtime="20240102 11:37:07.421"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:37:07.422" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:37:07.421" endtime="20240102 11:37:07.422"/>
</kw>
<status status="PASS" starttime="20240102 11:37:07.044" endtime="20240102 11:37:07.422"/>
</kw>
<msg timestamp="20240102 11:37:07.423" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:37:07.044" endtime="20240102 11:37:07.423"/>
</kw>
<status status="PASS" starttime="20240102 11:37:07.043" endtime="20240102 11:37:07.423"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>list-buckets</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:37:07.426" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-buckets 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:37:07.870" level="INFO">${rc} = 255</msg>
<msg timestamp="20240102 11:37:07.870" level="INFO">${output} = 
An error occurred (AuthorizationHeaderMalformed) when calling the ListBuckets operation: The authorization header you provided is invalid.</msg>
<status status="PASS" starttime="20240102 11:37:07.425" endtime="20240102 11:37:07.870"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:37:07.871" level="INFO">
An error occurred (AuthorizationHeaderMalformed) when calling the ListBuckets operation: The authorization header you provided is invalid.</msg>
<status status="PASS" starttime="20240102 11:37:07.870" endtime="20240102 11:37:07.871"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:37:07.871" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:37:07.871" endtime="20240102 11:37:07.871"/>
</kw>
<msg timestamp="20240102 11:37:07.871" level="INFO">${output} = 
An error occurred (AuthorizationHeaderMalformed) when calling the ListBuckets operation: The authorization header you provided is invalid.</msg>
<status status="PASS" starttime="20240102 11:37:07.424" endtime="20240102 11:37:07.871"/>
</kw>
<msg timestamp="20240102 11:37:07.872" level="INFO">${result} = 
An error occurred (AuthorizationHeaderMalformed) when calling the ListBuckets operation: The authorization header you provided is invalid.</msg>
<status status="PASS" starttime="20240102 11:37:07.423" endtime="20240102 11:37:07.872"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>The authorization header you provided is invalid</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:37:07.872" endtime="20240102 11:37:07.872"/>
</kw>
<kw name="Restore AWS access key" library="commonawslib" type="TEARDOWN">
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${OZONE_AWS_ACCESS_KEY_ID}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:37:07.875" level="INFO">Running command 'aws configure set aws_access_key_id dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:37:08.258" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:37:08.258" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240102 11:37:07.874" endtime="20240102 11:37:08.258"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:37:08.258" level="INFO"/>
<status status="PASS" starttime="20240102 11:37:08.258" endtime="20240102 11:37:08.259"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:37:08.259" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:37:08.259" endtime="20240102 11:37:08.259"/>
</kw>
<status status="PASS" starttime="20240102 11:37:07.874" endtime="20240102 11:37:08.259"/>
</kw>
<msg timestamp="20240102 11:37:08.259" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:37:07.873" endtime="20240102 11:37:08.259"/>
</kw>
<status status="PASS" starttime="20240102 11:37:07.873" endtime="20240102 11:37:08.259"/>
</kw>
<status status="PASS" starttime="20240102 11:37:07.872" endtime="20240102 11:37:08.260"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20240102 11:37:06.664" endtime="20240102 11:37:08.260"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20240102 11:37:06.193" endtime="20240102 11:37:08.260"/>
</suite>
<suite id="s1-s1-s7" name="Freon" source="/opt/hadoop/smoketest/s3/freon.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20240102 11:37:08.271" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:37:08.270" endtime="20240102 11:37:08.271"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20240102 11:37:08.271" endtime="20240102 11:37:08.271"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20240102 11:37:08.271" endtime="20240102 11:37:08.271"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20240102 11:37:08.271" endtime="20240102 11:37:08.271"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20240102 11:37:08.271" endtime="20240102 11:37:08.271"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20240102 11:37:08.271" endtime="20240102 11:37:08.272"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20240102 11:37:08.272" endtime="20240102 11:37:08.272"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20240102 11:37:08.272" endtime="20240102 11:37:08.272"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20240102 11:37:08.272" endtime="20240102 11:37:08.272"/>
</kw>
<status status="PASS" starttime="20240102 11:37:08.270" endtime="20240102 11:37:08.272"/>
</kw>
<test id="s1-s1-s7-t1" name="Run Freon S3BG" line="43">
<kw name="Setup aws credentials" type="SETUP">
<kw name="Execute" library="os">
<var>${accessKey}</var>
<arg>aws configure get aws_access_key_id</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:37:08.275" level="INFO">Running command 'aws configure get aws_access_key_id 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:37:08.643" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:37:08.643" level="INFO">${output} = dlfknslnfslf</msg>
<status status="PASS" starttime="20240102 11:37:08.274" endtime="20240102 11:37:08.643"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:37:08.644" level="INFO">dlfknslnfslf</msg>
<status status="PASS" starttime="20240102 11:37:08.643" endtime="20240102 11:37:08.644"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:37:08.644" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:37:08.644" endtime="20240102 11:37:08.644"/>
</kw>
<status status="PASS" starttime="20240102 11:37:08.274" endtime="20240102 11:37:08.644"/>
</kw>
<msg timestamp="20240102 11:37:08.645" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:37:08.273" endtime="20240102 11:37:08.645"/>
</kw>
<msg timestamp="20240102 11:37:08.645" level="INFO">${accessKey} = dlfknslnfslf</msg>
<status status="PASS" starttime="20240102 11:37:08.273" endtime="20240102 11:37:08.645"/>
</kw>
<kw name="Execute" library="os">
<var>${secret}</var>
<arg>aws configure get aws_secret_access_key</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:37:08.647" level="INFO">Running command 'aws configure get aws_secret_access_key 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:37:09.013" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:37:09.013" level="INFO">${output} = dlfknslnfslf</msg>
<status status="PASS" starttime="20240102 11:37:08.646" endtime="20240102 11:37:09.013"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:37:09.013" level="INFO">dlfknslnfslf</msg>
<status status="PASS" starttime="20240102 11:37:09.013" endtime="20240102 11:37:09.014"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:37:09.014" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:37:09.014" endtime="20240102 11:37:09.014"/>
</kw>
<status status="PASS" starttime="20240102 11:37:08.646" endtime="20240102 11:37:09.014"/>
</kw>
<msg timestamp="20240102 11:37:09.014" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:37:08.645" endtime="20240102 11:37:09.014"/>
</kw>
<msg timestamp="20240102 11:37:09.014" level="INFO">${secret} = dlfknslnfslf</msg>
<status status="PASS" starttime="20240102 11:37:08.645" endtime="20240102 11:37:09.015"/>
</kw>
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>AWS_SECRET_ACCESS_KEY</arg>
<arg>${secret}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<msg timestamp="20240102 11:37:09.015" level="INFO">Environment variable 'AWS_SECRET_ACCESS_KEY' set to value 'dlfknslnfslf'.</msg>
<status status="PASS" starttime="20240102 11:37:09.015" endtime="20240102 11:37:09.015"/>
</kw>
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>AWS_ACCESS_KEY_ID</arg>
<arg>${accessKey}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<msg timestamp="20240102 11:37:09.015" level="INFO">Environment variable 'AWS_ACCESS_KEY_ID' set to value 'dlfknslnfslf'.</msg>
<status status="PASS" starttime="20240102 11:37:09.015" endtime="20240102 11:37:09.015"/>
</kw>
<status status="PASS" starttime="20240102 11:37:08.273" endtime="20240102 11:37:09.015"/>
</kw>
<kw name="Freon S3BG">
<arg>s3bg-${BUCKET}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon s3bg -e ${ENDPOINT_URL} -t ${threads} -n ${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:37:09.019" level="INFO">Running command 'ozone freon s3bg -e http://s3g:9878 -t 10 -n 100 -p s3bg-erasure  2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:37:13.188" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:37:13.188" level="INFO">${output} = 2024-01-02 11:37:10,904 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-01-02 11:37:11,005 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20240102 11:37:09.018" endtime="20240102 11:37:13.188"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:37:13.189" level="INFO">2024-01-02 11:37:10,904 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-01-02 11:37:11,005 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2024-01-02 11:37:11,005 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2024-01-02 11:37:11,087 [main] INFO freon.BaseFreonGenerator: Executing test with prefix s3bg-erasure and number-of-tests 100
2024-01-02 11:37:11,127 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2024-01-02 11:37:12,132 [Thread-5] INFO freon.ProgressBar: Progress: 35.00 % (35 out of 100)
2024-01-02 11:37:13,132 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (100 out of 100)
2024-01-02 11:37:13,147 [shutdown-hook-0] INFO metrics: type=TIMER, name=bucket-create, count=100, min=23.313429, max=216.066588, mean=78.71361126853397, stddev=39.99277651148265, median=65.089095, p75=88.597887, p95=150.785548, p98=182.010411, p99=186.744619, p999=216.066588, mean_rate=71.19911103524007, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2024-01-02 11:37:13,148 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2024-01-02 11:37:13,148 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2024-01-02 11:37:13,148 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 100</msg>
<status status="PASS" starttime="20240102 11:37:13.188" endtime="20240102 11:37:13.189"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:37:13.191" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:37:13.189" endtime="20240102 11:37:13.191"/>
</kw>
<status status="PASS" starttime="20240102 11:37:09.017" endtime="20240102 11:37:13.191"/>
</kw>
<msg timestamp="20240102 11:37:13.191" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:37:09.017" endtime="20240102 11:37:13.191"/>
</kw>
<msg timestamp="20240102 11:37:13.191" level="INFO">${result} = 2024-01-02 11:37:10,904 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-01-02 11:37:11,005 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20240102 11:37:09.017" endtime="20240102 11:37:13.191"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:37:13.191" endtime="20240102 11:37:13.192"/>
</kw>
<status status="PASS" starttime="20240102 11:37:09.016" endtime="20240102 11:37:13.192"/>
</kw>
<tag>no-bucket-type</tag>
<status status="PASS" starttime="20240102 11:37:08.272" endtime="20240102 11:37:13.192"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20240102 11:37:08.261" endtime="20240102 11:37:13.192"/>
</suite>
<suite id="s1-s1-s8" name="MultipartUpload" source="/opt/hadoop/smoketest/s3/MultipartUpload.robot">
<kw name="Setup Multipart Tests" type="SETUP">
<kw name="Setup s3 tests" library="commonawslib">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20240102 11:37:13.204" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:37:13.204" endtime="20240102 11:37:13.204"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20240102 11:37:13.204" endtime="20240102 11:37:13.204"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20240102 11:37:13.204" endtime="20240102 11:37:13.204"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20240102 11:37:13.205" endtime="20240102 11:37:13.205"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20240102 11:37:13.205" endtime="20240102 11:37:13.205"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20240102 11:37:13.205" endtime="20240102 11:37:13.205"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20240102 11:37:13.205" endtime="20240102 11:37:13.205"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20240102 11:37:13.205" endtime="20240102 11:37:13.205"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20240102 11:37:13.205" endtime="20240102 11:37:13.205"/>
</kw>
<status status="PASS" starttime="20240102 11:37:13.204" endtime="20240102 11:37:13.205"/>
</kw>
<kw name="Create Random File KB">
<arg>/tmp/part1</arg>
<arg>5121</arg>
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=${file} bs=1024 count=${size_in_kilobytes} status=none</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:37:13.208" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/part1 bs=1024 count=5121 status=none 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:37:13.234" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:37:13.234" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240102 11:37:13.207" endtime="20240102 11:37:13.234"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:37:13.235" level="INFO"/>
<status status="PASS" starttime="20240102 11:37:13.235" endtime="20240102 11:37:13.235"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:37:13.235" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:37:13.235" endtime="20240102 11:37:13.236"/>
</kw>
<status status="PASS" starttime="20240102 11:37:13.206" endtime="20240102 11:37:13.236"/>
</kw>
<msg timestamp="20240102 11:37:13.236" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:37:13.206" endtime="20240102 11:37:13.236"/>
</kw>
<status status="PASS" starttime="20240102 11:37:13.206" endtime="20240102 11:37:13.236"/>
</kw>
<status status="PASS" starttime="20240102 11:37:13.206" endtime="20240102 11:37:13.236"/>
</kw>
<kw name="Create Random File KB">
<arg>/tmp/part2</arg>
<arg>1023</arg>
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=${file} bs=1024 count=${size_in_kilobytes} status=none</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:37:13.239" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/part2 bs=1024 count=1023 status=none 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:37:13.245" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:37:13.245" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240102 11:37:13.238" endtime="20240102 11:37:13.245"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:37:13.246" level="INFO"/>
<status status="PASS" starttime="20240102 11:37:13.246" endtime="20240102 11:37:13.246"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:37:13.247" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:37:13.246" endtime="20240102 11:37:13.247"/>
</kw>
<status status="PASS" starttime="20240102 11:37:13.237" endtime="20240102 11:37:13.247"/>
</kw>
<msg timestamp="20240102 11:37:13.247" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:37:13.237" endtime="20240102 11:37:13.247"/>
</kw>
<status status="PASS" starttime="20240102 11:37:13.237" endtime="20240102 11:37:13.247"/>
</kw>
<status status="PASS" starttime="20240102 11:37:13.236" endtime="20240102 11:37:13.247"/>
</kw>
<status status="PASS" starttime="20240102 11:37:13.203" endtime="20240102 11:37:13.247"/>
</kw>
<test id="s1-s1-s8-t1" name="Test Multipart Upload With Adjusted Length" line="57">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20240102 11:37:13.249" level="INFO">${randStr} = 1136555963</msg>
<status status="PASS" starttime="20240102 11:37:13.249" endtime="20240102 11:37:13.249"/>
</kw>
<msg timestamp="20240102 11:37:13.249" level="INFO">${random} = ozone-test-1136555963</msg>
<status status="PASS" starttime="20240102 11:37:13.248" endtime="20240102 11:37:13.249"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20240102 11:37:13.250" level="INFO">${PREFIX} = ozone-test-1136555963</msg>
<status status="PASS" starttime="20240102 11:37:13.249" endtime="20240102 11:37:13.250"/>
</kw>
<status status="PASS" starttime="20240102 11:37:13.248" endtime="20240102 11:37:13.250"/>
</kw>
<kw name="Perform Multipart Upload" library="commonawslib">
<arg>${BUCKET}</arg>
<arg>multipart/adjusted_length_${PREFIX}</arg>
<arg>/tmp/part1</arg>
<arg>/tmp/part2</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${bucket} --key ${key}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:37:13.253" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket erasure --key multipart/adjusted_length_ozone-test-1136555963 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:37:13.768" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:37:13.769" level="INFO">${output} = {
    "Bucket": "erasure",
    "Key": "multipart/adjusted_length_ozone-test-1136555963",
    "UploadId": "7c7f48b3-3bc0-462b-9171-61e9b1406387-111686151942504465"
}</msg>
<status status="PASS" starttime="20240102 11:37:13.252" endtime="20240102 11:37:13.769"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:37:13.770" level="INFO">{
    "Bucket": "erasure",
    "Key": "multipart/adjusted_length_ozone-test-1136555963",
    "UploadId": "7c7f48b3-3bc0-462b-9171-61e9b1406387-111686151942504465"
}</msg>
<status status="PASS" starttime="20240102 11:37:13.769" endtime="20240102 11:37:13.770"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:37:13.770" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:37:13.770" endtime="20240102 11:37:13.771"/>
</kw>
<status status="PASS" starttime="20240102 11:37:13.251" endtime="20240102 11:37:13.771"/>
</kw>
<msg timestamp="20240102 11:37:13.771" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:37:13.251" endtime="20240102 11:37:13.771"/>
</kw>
<msg timestamp="20240102 11:37:13.771" level="INFO">${output} = {
    "Bucket": "erasure",
    "Key": "multipart/adjusted_length_ozone-test-1136555963",
    "UploadId": "7c7f48b3-3bc0-462b-9171-61e9b1406387-111686151942504465"
}</msg>
<status status="PASS" starttime="20240102 11:37:13.251" endtime="20240102 11:37:13.771"/>
</kw>
<msg timestamp="20240102 11:37:13.772" level="INFO">${result} = {
    "Bucket": "erasure",
    "Key": "multipart/adjusted_length_ozone-test-1136555963",
    "UploadId": "7c7f48b3-3bc0-462b-9171-61e9b1406387-111686151942504465"
}</msg>
<status status="PASS" starttime="20240102 11:37:13.250" endtime="20240102 11:37:13.772"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${upload_id}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:37:13.775" level="INFO">Running command 'echo '{
    "Bucket": "erasure",
    "Key": "multipart/adjusted_length_ozone-test-1136555963",
    "UploadId": "7c7f48b3-3bc0-462b-9171-61e9b1406387-111686151942504465"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:37:13.837" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:37:13.837" level="INFO">${output} = 7c7f48b3-3bc0-462b-9171-61e9b1406387-111686151942504465</msg>
<status status="PASS" starttime="20240102 11:37:13.772" endtime="20240102 11:37:13.837"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:37:13.838" level="INFO">7c7f48b3-3bc0-462b-9171-61e9b1406387-111686151942504465</msg>
<status status="PASS" starttime="20240102 11:37:13.837" endtime="20240102 11:37:13.838"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:37:13.839" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:37:13.838" endtime="20240102 11:37:13.839"/>
</kw>
<msg timestamp="20240102 11:37:13.839" level="INFO">${upload_id} = 7c7f48b3-3bc0-462b-9171-61e9b1406387-111686151942504465</msg>
<status status="PASS" starttime="20240102 11:37:13.772" endtime="20240102 11:37:13.839"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>@{etags}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20240102 11:37:13.840" level="INFO">@{etags} = [ ]</msg>
<status status="PASS" starttime="20240102 11:37:13.840" endtime="20240102 11:37:13.840"/>
</kw>
<for flavor="IN ENUMERATE">
<var>${i}</var>
<var>${file}</var>
<value>@{files}</value>
<iter>
<var name="${i}">0</var>
<var name="${file}">/tmp/part1</var>
<kw name="Evaluate" library="BuiltIn">
<var>${part}</var>
<arg>${i} + 1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20240102 11:37:13.842" level="INFO">${part} = 1</msg>
<status status="PASS" starttime="20240102 11:37:13.841" endtime="20240102 11:37:13.842"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${bucket} --key ${key} --part-number ${part} --body ${file} --upload-id ${upload_id}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:37:13.846" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket erasure --key multipart/adjusted_length_ozone-test-1136555963 --part-number 1 --body /tmp/part1 --upload-id 7c7f48b3-3bc0-462b-9171-61e9b1406387-111686151942504465 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:37:14.746" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:37:14.746" level="INFO">${output} = {
    "ETag": "/s3v/erasure/multipart/adjusted_length_ozone-test-1136555963-7c7f48b3-3bc0-462b-9171-61e9b1406387-111686151942504465-1"
}</msg>
<status status="PASS" starttime="20240102 11:37:13.844" endtime="20240102 11:37:14.746"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:37:14.747" level="INFO">{
    "ETag": "/s3v/erasure/multipart/adjusted_length_ozone-test-1136555963-7c7f48b3-3bc0-462b-9171-61e9b1406387-111686151942504465-1"
}</msg>
<status status="PASS" starttime="20240102 11:37:14.746" endtime="20240102 11:37:14.747"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:37:14.748" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:37:14.748" endtime="20240102 11:37:14.748"/>
</kw>
<status status="PASS" starttime="20240102 11:37:13.844" endtime="20240102 11:37:14.748"/>
</kw>
<msg timestamp="20240102 11:37:14.748" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:37:13.844" endtime="20240102 11:37:14.749"/>
</kw>
<msg timestamp="20240102 11:37:14.749" level="INFO">${output} = {
    "ETag": "/s3v/erasure/multipart/adjusted_length_ozone-test-1136555963-7c7f48b3-3bc0-462b-9171-61e9b1406387-111686151942504465-1"
}</msg>
<status status="PASS" starttime="20240102 11:37:13.843" endtime="20240102 11:37:14.749"/>
</kw>
<msg timestamp="20240102 11:37:14.749" level="INFO">${result} = {
    "ETag": "/s3v/erasure/multipart/adjusted_length_ozone-test-1136555963-7c7f48b3-3bc0-462b-9171-61e9b1406387-111686151942504465-1"
}</msg>
<status status="PASS" starttime="20240102 11:37:13.842" endtime="20240102 11:37:14.749"/>
</kw>
<kw name="Execute" library="os">
<var>${etag}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:37:14.754" level="INFO">Running command 'echo '{
    "ETag": "/s3v/erasure/multipart/adjusted_length_ozone-test-1136555963-7c7f48b3-3bc0-462b-9171-61e9b1406387-111686151942504465-1"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:37:14.796" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:37:14.796" level="INFO">${output} = /s3v/erasure/multipart/adjusted_length_ozone-test-1136555963-7c7f48b3-3bc0-462b-9171-61e9b1406387-111686151942504465-1</msg>
<status status="PASS" starttime="20240102 11:37:14.751" endtime="20240102 11:37:14.796"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:37:14.797" level="INFO">/s3v/erasure/multipart/adjusted_length_ozone-test-1136555963-7c7f48b3-3bc0-462b-9171-61e9b1406387-111686151942504465-1</msg>
<status status="PASS" starttime="20240102 11:37:14.797" endtime="20240102 11:37:14.797"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:37:14.798" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:37:14.798" endtime="20240102 11:37:14.798"/>
</kw>
<status status="PASS" starttime="20240102 11:37:14.750" endtime="20240102 11:37:14.798"/>
</kw>
<msg timestamp="20240102 11:37:14.798" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:37:14.750" endtime="20240102 11:37:14.798"/>
</kw>
<msg timestamp="20240102 11:37:14.798" level="INFO">${etag} = /s3v/erasure/multipart/adjusted_length_ozone-test-1136555963-7c7f48b3-3bc0-462b-9171-61e9b1406387-111686151942504465-1</msg>
<status status="PASS" starttime="20240102 11:37:14.749" endtime="20240102 11:37:14.799"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${etags}</arg>
<arg>{ETag=${etag},PartNumber=${part}}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20240102 11:37:14.799" endtime="20240102 11:37:14.799"/>
</kw>
<status status="PASS" starttime="20240102 11:37:13.841" endtime="20240102 11:37:14.799"/>
</iter>
<iter>
<var name="${i}">1</var>
<var name="${file}">/tmp/part2</var>
<kw name="Evaluate" library="BuiltIn">
<var>${part}</var>
<arg>${i} + 1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20240102 11:37:14.800" level="INFO">${part} = 2</msg>
<status status="PASS" starttime="20240102 11:37:14.799" endtime="20240102 11:37:14.800"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${bucket} --key ${key} --part-number ${part} --body ${file} --upload-id ${upload_id}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:37:14.805" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket erasure --key multipart/adjusted_length_ozone-test-1136555963 --part-number 2 --body /tmp/part2 --upload-id 7c7f48b3-3bc0-462b-9171-61e9b1406387-111686151942504465 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:37:15.532" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:37:15.532" level="INFO">${output} = {
    "ETag": "/s3v/erasure/multipart/adjusted_length_ozone-test-1136555963-7c7f48b3-3bc0-462b-9171-61e9b1406387-111686151942504465-2"
}</msg>
<status status="PASS" starttime="20240102 11:37:14.803" endtime="20240102 11:37:15.532"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:37:15.533" level="INFO">{
    "ETag": "/s3v/erasure/multipart/adjusted_length_ozone-test-1136555963-7c7f48b3-3bc0-462b-9171-61e9b1406387-111686151942504465-2"
}</msg>
<status status="PASS" starttime="20240102 11:37:15.533" endtime="20240102 11:37:15.533"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:37:15.534" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:37:15.534" endtime="20240102 11:37:15.534"/>
</kw>
<status status="PASS" starttime="20240102 11:37:14.802" endtime="20240102 11:37:15.534"/>
</kw>
<msg timestamp="20240102 11:37:15.534" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:37:14.802" endtime="20240102 11:37:15.534"/>
</kw>
<msg timestamp="20240102 11:37:15.534" level="INFO">${output} = {
    "ETag": "/s3v/erasure/multipart/adjusted_length_ozone-test-1136555963-7c7f48b3-3bc0-462b-9171-61e9b1406387-111686151942504465-2"
}</msg>
<status status="PASS" starttime="20240102 11:37:14.801" endtime="20240102 11:37:15.534"/>
</kw>
<msg timestamp="20240102 11:37:15.535" level="INFO">${result} = {
    "ETag": "/s3v/erasure/multipart/adjusted_length_ozone-test-1136555963-7c7f48b3-3bc0-462b-9171-61e9b1406387-111686151942504465-2"
}</msg>
<status status="PASS" starttime="20240102 11:37:14.800" endtime="20240102 11:37:15.535"/>
</kw>
<kw name="Execute" library="os">
<var>${etag}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:37:15.537" level="INFO">Running command 'echo '{
    "ETag": "/s3v/erasure/multipart/adjusted_length_ozone-test-1136555963-7c7f48b3-3bc0-462b-9171-61e9b1406387-111686151942504465-2"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:37:15.563" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:37:15.563" level="INFO">${output} = /s3v/erasure/multipart/adjusted_length_ozone-test-1136555963-7c7f48b3-3bc0-462b-9171-61e9b1406387-111686151942504465-2</msg>
<status status="PASS" starttime="20240102 11:37:15.536" endtime="20240102 11:37:15.563"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:37:15.564" level="INFO">/s3v/erasure/multipart/adjusted_length_ozone-test-1136555963-7c7f48b3-3bc0-462b-9171-61e9b1406387-111686151942504465-2</msg>
<status status="PASS" starttime="20240102 11:37:15.563" endtime="20240102 11:37:15.564"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:37:15.564" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:37:15.564" endtime="20240102 11:37:15.564"/>
</kw>
<status status="PASS" starttime="20240102 11:37:15.536" endtime="20240102 11:37:15.564"/>
</kw>
<msg timestamp="20240102 11:37:15.564" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:37:15.535" endtime="20240102 11:37:15.564"/>
</kw>
<msg timestamp="20240102 11:37:15.565" level="INFO">${etag} = /s3v/erasure/multipart/adjusted_length_ozone-test-1136555963-7c7f48b3-3bc0-462b-9171-61e9b1406387-111686151942504465-2</msg>
<status status="PASS" starttime="20240102 11:37:15.535" endtime="20240102 11:37:15.565"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${etags}</arg>
<arg>{ETag=${etag},PartNumber=${part}}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20240102 11:37:15.565" endtime="20240102 11:37:15.565"/>
</kw>
<status status="PASS" starttime="20240102 11:37:14.799" endtime="20240102 11:37:15.565"/>
</iter>
<status status="PASS" starttime="20240102 11:37:13.840" endtime="20240102 11:37:15.565"/>
</for>
<kw name="Catenate" library="BuiltIn">
<var>${parts}</var>
<arg>SEPARATOR=,</arg>
<arg>@{etags}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20240102 11:37:15.566" level="INFO">${parts} = {ETag=/s3v/erasure/multipart/adjusted_length_ozone-test-1136555963-7c7f48b3-3bc0-462b-9171-61e9b1406387-111686151942504465-1,PartNumber=1},{ETag=/s3v/erasure/multipart/adjusted_length_ozone-test-11365...</msg>
<status status="PASS" starttime="20240102 11:37:15.565" endtime="20240102 11:37:15.566"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>complete-multipart-upload --bucket ${bucket} --key ${key} --upload-id ${upload_id} --multipart-upload 'Parts=[${parts}]'</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:37:15.569" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --bucket erasure --key multipart/adjusted_length_ozone-test-1136555963 --upload-id 7c7f48b3-3bc0-462b-9171-61e9b1406387-111686151942504465 --multipart-upload 'Parts=[{ETag=/s3v/erasure/multipart/adjusted_length_ozone-test-1136555963-7c7f48b3-3bc0-462b-9171-61e9b1406387-111686151942504465-1,PartNumber=1},{ETag=/s3v/erasure/multipart/adjusted_length_ozone-test-1136555963-7c7f48b3-3bc0-462b-9171-61e9b1406387-111686151942504465-2,PartNumber=2}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:37:16.020" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:37:16.020" level="INFO">${output} = {
    "Location": "erasure",
    "Bucket": "erasure",
    "Key": "multipart/adjusted_length_ozone-test-1136555963",
    "ETag": "\"0be3b2405f632ca06161c8d1a83c9603-2\""
}</msg>
<status status="PASS" starttime="20240102 11:37:15.568" endtime="20240102 11:37:16.020"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:37:16.021" level="INFO">{
    "Location": "erasure",
    "Bucket": "erasure",
    "Key": "multipart/adjusted_length_ozone-test-1136555963",
    "ETag": "\"0be3b2405f632ca06161c8d1a83c9603-2\""
}</msg>
<status status="PASS" starttime="20240102 11:37:16.020" endtime="20240102 11:37:16.021"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:37:16.021" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:37:16.021" endtime="20240102 11:37:16.022"/>
</kw>
<status status="PASS" starttime="20240102 11:37:15.567" endtime="20240102 11:37:16.022"/>
</kw>
<msg timestamp="20240102 11:37:16.022" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:37:15.567" endtime="20240102 11:37:16.022"/>
</kw>
<msg timestamp="20240102 11:37:16.022" level="INFO">${output} = {
    "Location": "erasure",
    "Bucket": "erasure",
    "Key": "multipart/adjusted_length_ozone-test-1136555963",
    "ETag": "\"0be3b2405f632ca06161c8d1a83c9603-2\""
}</msg>
<status status="PASS" starttime="20240102 11:37:15.566" endtime="20240102 11:37:16.022"/>
</kw>
<status status="PASS" starttime="20240102 11:37:15.566" endtime="20240102 11:37:16.022"/>
</kw>
<status status="PASS" starttime="20240102 11:37:13.250" endtime="20240102 11:37:16.022"/>
</kw>
<kw name="Verify Multipart Upload" library="commonawslib">
<arg>${BUCKET}</arg>
<arg>multipart/adjusted_length_${PREFIX}</arg>
<arg>/tmp/part1</arg>
<arg>/tmp/part2</arg>
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20240102 11:37:16.024" level="INFO">${randStr} = 5137418077</msg>
<status status="PASS" starttime="20240102 11:37:16.023" endtime="20240102 11:37:16.024"/>
</kw>
<msg timestamp="20240102 11:37:16.024" level="INFO">${random} = ozone-test-5137418077</msg>
<status status="PASS" starttime="20240102 11:37:16.023" endtime="20240102 11:37:16.024"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>get-object --bucket ${bucket} --key ${key} /tmp/verify${random}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:37:16.027" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket erasure --key multipart/adjusted_length_ozone-test-1136555963 /tmp/verifyozone-test-5137418077 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:37:16.604" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:37:16.604" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 02 Jan 2024 11:37:15 GMT",
    "ContentLength": 6291456,
    "ETag": "\"0be3b2405f632ca06161c8d1a83c9603-2\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20240102 11:37:16.026" endtime="20240102 11:37:16.605"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:37:16.606" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 02 Jan 2024 11:37:15 GMT",
    "ContentLength": 6291456,
    "ETag": "\"0be3b2405f632ca06161c8d1a83c9603-2\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Tue, 02 Jan 2024 11:37:16 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20240102 11:37:16.605" endtime="20240102 11:37:16.606"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:37:16.606" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:37:16.606" endtime="20240102 11:37:16.606"/>
</kw>
<status status="PASS" starttime="20240102 11:37:16.025" endtime="20240102 11:37:16.607"/>
</kw>
<msg timestamp="20240102 11:37:16.607" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:37:16.025" endtime="20240102 11:37:16.607"/>
</kw>
<msg timestamp="20240102 11:37:16.607" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 02 Jan 2024 11:37:15 GMT",
    "ContentLength": 6291456,
    "ETag": "\"0be3b2405f632ca06161c8d1a83c9603-2\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20240102 11:37:16.025" endtime="20240102 11:37:16.607"/>
</kw>
<status status="PASS" starttime="20240102 11:37:16.024" endtime="20240102 11:37:16.607"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${tmp}</var>
<arg>@{files}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20240102 11:37:16.608" level="INFO">${tmp} = /tmp/part1 /tmp/part2</msg>
<status status="PASS" starttime="20240102 11:37:16.607" endtime="20240102 11:37:16.608"/>
</kw>
<kw name="Execute" library="os">
<arg>cat ${tmp} &gt; /tmp/original${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:37:16.611" level="INFO">Running command 'cat /tmp/part1 /tmp/part2 &gt; /tmp/originalozone-test-5137418077'.</msg>
<msg timestamp="20240102 11:37:16.617" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:37:16.617" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240102 11:37:16.610" endtime="20240102 11:37:16.617"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:37:16.618" level="INFO"/>
<status status="PASS" starttime="20240102 11:37:16.618" endtime="20240102 11:37:16.618"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:37:16.619" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:37:16.619" endtime="20240102 11:37:16.619"/>
</kw>
<status status="PASS" starttime="20240102 11:37:16.609" endtime="20240102 11:37:16.619"/>
</kw>
<msg timestamp="20240102 11:37:16.619" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:37:16.609" endtime="20240102 11:37:16.620"/>
</kw>
<status status="PASS" starttime="20240102 11:37:16.608" endtime="20240102 11:37:16.620"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/original${random}</arg>
<arg>/tmp/verify${random}</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:37:16.624" level="INFO">Running command 'md5sum /tmp/originalozone-test-5137418077 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:37:16.637" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:37:16.637" level="INFO">${output} = fca96de89eac1f2ce3fc5e1cb9d3545f</msg>
<status status="PASS" starttime="20240102 11:37:16.622" endtime="20240102 11:37:16.637"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:37:16.638" level="INFO">fca96de89eac1f2ce3fc5e1cb9d3545f</msg>
<status status="PASS" starttime="20240102 11:37:16.637" endtime="20240102 11:37:16.638"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:37:16.638" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:37:16.638" endtime="20240102 11:37:16.639"/>
</kw>
<status status="PASS" starttime="20240102 11:37:16.621" endtime="20240102 11:37:16.639"/>
</kw>
<msg timestamp="20240102 11:37:16.639" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:37:16.621" endtime="20240102 11:37:16.639"/>
</kw>
<msg timestamp="20240102 11:37:16.639" level="INFO">${checksumbefore} = fca96de89eac1f2ce3fc5e1cb9d3545f</msg>
<status status="PASS" starttime="20240102 11:37:16.620" endtime="20240102 11:37:16.639"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:37:16.642" level="INFO">Running command 'md5sum /tmp/verifyozone-test-5137418077 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:37:16.654" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:37:16.654" level="INFO">${output} = fca96de89eac1f2ce3fc5e1cb9d3545f</msg>
<status status="PASS" starttime="20240102 11:37:16.640" endtime="20240102 11:37:16.654"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:37:16.655" level="INFO">fca96de89eac1f2ce3fc5e1cb9d3545f</msg>
<status status="PASS" starttime="20240102 11:37:16.654" endtime="20240102 11:37:16.655"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:37:16.655" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:37:16.655" endtime="20240102 11:37:16.656"/>
</kw>
<status status="PASS" starttime="20240102 11:37:16.640" endtime="20240102 11:37:16.656"/>
</kw>
<msg timestamp="20240102 11:37:16.656" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:37:16.640" endtime="20240102 11:37:16.656"/>
</kw>
<msg timestamp="20240102 11:37:16.656" level="INFO">${checksumafter} = fca96de89eac1f2ce3fc5e1cb9d3545f</msg>
<status status="PASS" starttime="20240102 11:37:16.639" endtime="20240102 11:37:16.656"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240102 11:37:16.656" endtime="20240102 11:37:16.656"/>
</kw>
<status status="PASS" starttime="20240102 11:37:16.620" endtime="20240102 11:37:16.656"/>
</kw>
<status status="PASS" starttime="20240102 11:37:16.023" endtime="20240102 11:37:16.657"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20240102 11:37:13.247" endtime="20240102 11:37:16.657"/>
</test>
<test id="s1-s1-s8-t2" name="Test Multipart Upload" line="61">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20240102 11:37:16.659" level="INFO">${randStr} = 7065559026</msg>
<status status="PASS" starttime="20240102 11:37:16.658" endtime="20240102 11:37:16.659"/>
</kw>
<msg timestamp="20240102 11:37:16.659" level="INFO">${random} = ozone-test-7065559026</msg>
<status status="PASS" starttime="20240102 11:37:16.658" endtime="20240102 11:37:16.659"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20240102 11:37:16.659" level="INFO">${PREFIX} = ozone-test-7065559026</msg>
<status status="PASS" starttime="20240102 11:37:16.659" endtime="20240102 11:37:16.659"/>
</kw>
<status status="PASS" starttime="20240102 11:37:16.658" endtime="20240102 11:37:16.659"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/multipartKey</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:37:16.662" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket erasure --key ozone-test-7065559026/multipartKey 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:37:17.098" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:37:17.098" level="INFO">${output} = {
    "Bucket": "erasure",
    "Key": "ozone-test-7065559026/multipartKey",
    "UploadId": "7d5f853a-d9b8-492e-90f3-428bed70c2c8-111686152162836500"
}</msg>
<status status="PASS" starttime="20240102 11:37:16.661" endtime="20240102 11:37:17.098"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:37:17.099" level="INFO">{
    "Bucket": "erasure",
    "Key": "ozone-test-7065559026/multipartKey",
    "UploadId": "7d5f853a-d9b8-492e-90f3-428bed70c2c8-111686152162836500"
}</msg>
<status status="PASS" starttime="20240102 11:37:17.099" endtime="20240102 11:37:17.099"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:37:17.100" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:37:17.099" endtime="20240102 11:37:17.100"/>
</kw>
<status status="PASS" starttime="20240102 11:37:16.661" endtime="20240102 11:37:17.100"/>
</kw>
<msg timestamp="20240102 11:37:17.100" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:37:16.660" endtime="20240102 11:37:17.100"/>
</kw>
<msg timestamp="20240102 11:37:17.100" level="INFO">${output} = {
    "Bucket": "erasure",
    "Key": "ozone-test-7065559026/multipartKey",
    "UploadId": "7d5f853a-d9b8-492e-90f3-428bed70c2c8-111686152162836500"
}</msg>
<status status="PASS" starttime="20240102 11:37:16.660" endtime="20240102 11:37:17.100"/>
</kw>
<msg timestamp="20240102 11:37:17.100" level="INFO">${result} = {
    "Bucket": "erasure",
    "Key": "ozone-test-7065559026/multipartKey",
    "UploadId": "7d5f853a-d9b8-492e-90f3-428bed70c2c8-111686152162836500"
}</msg>
<status status="PASS" starttime="20240102 11:37:16.660" endtime="20240102 11:37:17.101"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${uploadID}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:37:17.102" level="INFO">Running command 'echo '{
    "Bucket": "erasure",
    "Key": "ozone-test-7065559026/multipartKey",
    "UploadId": "7d5f853a-d9b8-492e-90f3-428bed70c2c8-111686152162836500"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:37:17.128" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:37:17.128" level="INFO">${output} = 7d5f853a-d9b8-492e-90f3-428bed70c2c8-111686152162836500</msg>
<status status="PASS" starttime="20240102 11:37:17.101" endtime="20240102 11:37:17.129"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:37:17.129" level="INFO">7d5f853a-d9b8-492e-90f3-428bed70c2c8-111686152162836500</msg>
<status status="PASS" starttime="20240102 11:37:17.129" endtime="20240102 11:37:17.129"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:37:17.130" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:37:17.129" endtime="20240102 11:37:17.130"/>
</kw>
<msg timestamp="20240102 11:37:17.130" level="INFO">${uploadID} = 7d5f853a-d9b8-492e-90f3-428bed70c2c8-111686152162836500</msg>
<status status="PASS" starttime="20240102 11:37:17.101" endtime="20240102 11:37:17.130"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:37:17.130" endtime="20240102 11:37:17.130"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multipartKey</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:37:17.131" endtime="20240102 11:37:17.131"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>UploadId</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:37:17.131" endtime="20240102 11:37:17.131"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/multipartKey</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:37:17.135" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket erasure --key ozone-test-7065559026/multipartKey 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:37:17.592" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:37:17.592" level="INFO">${output} = {
    "Bucket": "erasure",
    "Key": "ozone-test-7065559026/multipartKey",
    "UploadId": "5983c30e-0958-4cd3-8de1-b11187840784-111686152194686997"
}</msg>
<status status="PASS" starttime="20240102 11:37:17.133" endtime="20240102 11:37:17.592"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:37:17.593" level="INFO">{
    "Bucket": "erasure",
    "Key": "ozone-test-7065559026/multipartKey",
    "UploadId": "5983c30e-0958-4cd3-8de1-b11187840784-111686152194686997"
}</msg>
<status status="PASS" starttime="20240102 11:37:17.592" endtime="20240102 11:37:17.593"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:37:17.593" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:37:17.593" endtime="20240102 11:37:17.594"/>
</kw>
<status status="PASS" starttime="20240102 11:37:17.133" endtime="20240102 11:37:17.594"/>
</kw>
<msg timestamp="20240102 11:37:17.594" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:37:17.132" endtime="20240102 11:37:17.594"/>
</kw>
<msg timestamp="20240102 11:37:17.594" level="INFO">${output} = {
    "Bucket": "erasure",
    "Key": "ozone-test-7065559026/multipartKey",
    "UploadId": "5983c30e-0958-4cd3-8de1-b11187840784-111686152194686997"
}</msg>
<status status="PASS" starttime="20240102 11:37:17.132" endtime="20240102 11:37:17.594"/>
</kw>
<msg timestamp="20240102 11:37:17.594" level="INFO">${result} = {
    "Bucket": "erasure",
    "Key": "ozone-test-7065559026/multipartKey",
    "UploadId": "5983c30e-0958-4cd3-8de1-b11187840784-111686152194686997"
}</msg>
<status status="PASS" starttime="20240102 11:37:17.131" endtime="20240102 11:37:17.594"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${nextUploadID}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:37:17.596" level="INFO">Running command 'echo '{
    "Bucket": "erasure",
    "Key": "ozone-test-7065559026/multipartKey",
    "UploadId": "5983c30e-0958-4cd3-8de1-b11187840784-111686152194686997"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:37:17.622" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:37:17.622" level="INFO">${output} = 5983c30e-0958-4cd3-8de1-b11187840784-111686152194686997</msg>
<status status="PASS" starttime="20240102 11:37:17.595" endtime="20240102 11:37:17.622"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:37:17.623" level="INFO">5983c30e-0958-4cd3-8de1-b11187840784-111686152194686997</msg>
<status status="PASS" starttime="20240102 11:37:17.623" endtime="20240102 11:37:17.623"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:37:17.624" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:37:17.623" endtime="20240102 11:37:17.624"/>
</kw>
<msg timestamp="20240102 11:37:17.624" level="INFO">${nextUploadID} = 5983c30e-0958-4cd3-8de1-b11187840784-111686152194686997</msg>
<status status="PASS" starttime="20240102 11:37:17.594" endtime="20240102 11:37:17.624"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:37:17.624" endtime="20240102 11:37:17.625"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multipartKey</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:37:17.625" endtime="20240102 11:37:17.625"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>UploadId</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:37:17.625" endtime="20240102 11:37:17.625"/>
</kw>
<kw name="Should Not Be Equal" library="BuiltIn">
<arg>${uploadID}</arg>
<arg>${nextUploadID}</arg>
<doc>Fails if the given objects are equal.</doc>
<status status="PASS" starttime="20240102 11:37:17.625" endtime="20240102 11:37:17.626"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Create Random file</arg>
<arg>5</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Create Random file">
<arg>5</arg>
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=${size_in_megabytes} status=none</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:37:17.629" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=5 status=none 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:37:17.648" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:37:17.648" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240102 11:37:17.628" endtime="20240102 11:37:17.648"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:37:17.649" level="INFO"/>
<status status="PASS" starttime="20240102 11:37:17.648" endtime="20240102 11:37:17.649"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:37:17.649" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:37:17.649" endtime="20240102 11:37:17.649"/>
</kw>
<status status="PASS" starttime="20240102 11:37:17.627" endtime="20240102 11:37:17.649"/>
</kw>
<msg timestamp="20240102 11:37:17.649" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:37:17.627" endtime="20240102 11:37:17.650"/>
</kw>
<status status="PASS" starttime="20240102 11:37:17.627" endtime="20240102 11:37:17.650"/>
</kw>
<status status="PASS" starttime="20240102 11:37:17.626" endtime="20240102 11:37:17.650"/>
</kw>
<status status="PASS" starttime="20240102 11:37:17.626" endtime="20240102 11:37:17.650"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey --part-number 1 --body /tmp/part1 --upload-id ${nextUploadID}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:37:17.653" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket erasure --key ozone-test-7065559026/multipartKey --part-number 1 --body /tmp/part1 --upload-id 5983c30e-0958-4cd3-8de1-b11187840784-111686152194686997 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:37:18.331" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:37:18.331" level="INFO">${output} = {
    "ETag": "/s3v/erasure/ozone-test-7065559026/multipartKey-5983c30e-0958-4cd3-8de1-b11187840784-111686152194686997-1"
}</msg>
<status status="PASS" starttime="20240102 11:37:17.652" endtime="20240102 11:37:18.331"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:37:18.332" level="INFO">{
    "ETag": "/s3v/erasure/ozone-test-7065559026/multipartKey-5983c30e-0958-4cd3-8de1-b11187840784-111686152194686997-1"
}</msg>
<status status="PASS" starttime="20240102 11:37:18.332" endtime="20240102 11:37:18.332"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:37:18.333" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:37:18.332" endtime="20240102 11:37:18.333"/>
</kw>
<status status="PASS" starttime="20240102 11:37:17.651" endtime="20240102 11:37:18.333"/>
</kw>
<msg timestamp="20240102 11:37:18.333" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:37:17.651" endtime="20240102 11:37:18.333"/>
</kw>
<msg timestamp="20240102 11:37:18.333" level="INFO">${output} = {
    "ETag": "/s3v/erasure/ozone-test-7065559026/multipartKey-5983c30e-0958-4cd3-8de1-b11187840784-111686152194686997-1"
}</msg>
<status status="PASS" starttime="20240102 11:37:17.650" endtime="20240102 11:37:18.333"/>
</kw>
<msg timestamp="20240102 11:37:18.333" level="INFO">${result} = {
    "ETag": "/s3v/erasure/ozone-test-7065559026/multipartKey-5983c30e-0958-4cd3-8de1-b11187840784-111686152194686997-1"
}</msg>
<status status="PASS" starttime="20240102 11:37:17.650" endtime="20240102 11:37:18.333"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:37:18.333" endtime="20240102 11:37:18.334"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Create Random file</arg>
<arg>5</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Create Random file">
<arg>5</arg>
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=${size_in_megabytes} status=none</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:37:18.337" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=5 status=none 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:37:18.356" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:37:18.356" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240102 11:37:18.336" endtime="20240102 11:37:18.356"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:37:18.357" level="INFO"/>
<status status="PASS" starttime="20240102 11:37:18.357" endtime="20240102 11:37:18.357"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:37:18.358" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:37:18.357" endtime="20240102 11:37:18.358"/>
</kw>
<status status="PASS" starttime="20240102 11:37:18.335" endtime="20240102 11:37:18.358"/>
</kw>
<msg timestamp="20240102 11:37:18.358" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:37:18.335" endtime="20240102 11:37:18.358"/>
</kw>
<status status="PASS" starttime="20240102 11:37:18.335" endtime="20240102 11:37:18.358"/>
</kw>
<status status="PASS" starttime="20240102 11:37:18.334" endtime="20240102 11:37:18.358"/>
</kw>
<status status="PASS" starttime="20240102 11:37:18.334" endtime="20240102 11:37:18.358"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey --part-number 1 --body /tmp/part1 --upload-id ${nextUploadID}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:37:18.361" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket erasure --key ozone-test-7065559026/multipartKey --part-number 1 --body /tmp/part1 --upload-id 5983c30e-0958-4cd3-8de1-b11187840784-111686152194686997 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:37:18.970" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:37:18.970" level="INFO">${output} = {
    "ETag": "/s3v/erasure/ozone-test-7065559026/multipartKey-5983c30e-0958-4cd3-8de1-b11187840784-111686152194686997-1"
}</msg>
<status status="PASS" starttime="20240102 11:37:18.360" endtime="20240102 11:37:18.970"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:37:18.971" level="INFO">{
    "ETag": "/s3v/erasure/ozone-test-7065559026/multipartKey-5983c30e-0958-4cd3-8de1-b11187840784-111686152194686997-1"
}</msg>
<status status="PASS" starttime="20240102 11:37:18.971" endtime="20240102 11:37:18.971"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:37:18.972" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:37:18.971" endtime="20240102 11:37:18.972"/>
</kw>
<status status="PASS" starttime="20240102 11:37:18.360" endtime="20240102 11:37:18.972"/>
</kw>
<msg timestamp="20240102 11:37:18.972" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:37:18.359" endtime="20240102 11:37:18.972"/>
</kw>
<msg timestamp="20240102 11:37:18.972" level="INFO">${output} = {
    "ETag": "/s3v/erasure/ozone-test-7065559026/multipartKey-5983c30e-0958-4cd3-8de1-b11187840784-111686152194686997-1"
}</msg>
<status status="PASS" starttime="20240102 11:37:18.359" endtime="20240102 11:37:18.972"/>
</kw>
<msg timestamp="20240102 11:37:18.972" level="INFO">${result} = {
    "ETag": "/s3v/erasure/ozone-test-7065559026/multipartKey-5983c30e-0958-4cd3-8de1-b11187840784-111686152194686997-1"
}</msg>
<status status="PASS" starttime="20240102 11:37:18.358" endtime="20240102 11:37:18.973"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:37:18.973" endtime="20240102 11:37:18.973"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20240102 11:37:16.657" endtime="20240102 11:37:18.973"/>
</test>
<test id="s1-s1-s8-t3" name="Test Multipart Upload Complete" line="89">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20240102 11:37:18.975" level="INFO">${randStr} = 4246724062</msg>
<status status="PASS" starttime="20240102 11:37:18.975" endtime="20240102 11:37:18.975"/>
</kw>
<msg timestamp="20240102 11:37:18.975" level="INFO">${random} = ozone-test-4246724062</msg>
<status status="PASS" starttime="20240102 11:37:18.974" endtime="20240102 11:37:18.975"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20240102 11:37:18.976" level="INFO">${PREFIX} = ozone-test-4246724062</msg>
<status status="PASS" starttime="20240102 11:37:18.975" endtime="20240102 11:37:18.976"/>
</kw>
<status status="PASS" starttime="20240102 11:37:18.974" endtime="20240102 11:37:18.976"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/multipartKey1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:37:18.979" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket erasure --key ozone-test-4246724062/multipartKey1 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:37:19.433" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:37:19.433" level="INFO">${output} = {
    "Bucket": "erasure",
    "Key": "ozone-test-4246724062/multipartKey1",
    "UploadId": "e68e1785-ea97-4911-a0c8-78e68ab1a3c9-111686152315338776"
}</msg>
<status status="PASS" starttime="20240102 11:37:18.977" endtime="20240102 11:37:19.433"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:37:19.434" level="INFO">{
    "Bucket": "erasure",
    "Key": "ozone-test-4246724062/multipartKey1",
    "UploadId": "e68e1785-ea97-4911-a0c8-78e68ab1a3c9-111686152315338776"
}</msg>
<status status="PASS" starttime="20240102 11:37:19.434" endtime="20240102 11:37:19.434"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:37:19.435" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:37:19.435" endtime="20240102 11:37:19.435"/>
</kw>
<status status="PASS" starttime="20240102 11:37:18.977" endtime="20240102 11:37:19.436"/>
</kw>
<msg timestamp="20240102 11:37:19.436" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:37:18.977" endtime="20240102 11:37:19.436"/>
</kw>
<msg timestamp="20240102 11:37:19.436" level="INFO">${output} = {
    "Bucket": "erasure",
    "Key": "ozone-test-4246724062/multipartKey1",
    "UploadId": "e68e1785-ea97-4911-a0c8-78e68ab1a3c9-111686152315338776"
}</msg>
<status status="PASS" starttime="20240102 11:37:18.976" endtime="20240102 11:37:19.436"/>
</kw>
<msg timestamp="20240102 11:37:19.436" level="INFO">${result} = {
    "Bucket": "erasure",
    "Key": "ozone-test-4246724062/multipartKey1",
    "UploadId": "e68e1785-ea97-4911-a0c8-78e68ab1a3c9-111686152315338776"
}</msg>
<status status="PASS" starttime="20240102 11:37:18.976" endtime="20240102 11:37:19.436"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${uploadID}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:37:19.438" level="INFO">Running command 'echo '{
    "Bucket": "erasure",
    "Key": "ozone-test-4246724062/multipartKey1",
    "UploadId": "e68e1785-ea97-4911-a0c8-78e68ab1a3c9-111686152315338776"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:37:19.464" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:37:19.464" level="INFO">${output} = e68e1785-ea97-4911-a0c8-78e68ab1a3c9-111686152315338776</msg>
<status status="PASS" starttime="20240102 11:37:19.437" endtime="20240102 11:37:19.464"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:37:19.465" level="INFO">e68e1785-ea97-4911-a0c8-78e68ab1a3c9-111686152315338776</msg>
<status status="PASS" starttime="20240102 11:37:19.465" endtime="20240102 11:37:19.465"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:37:19.466" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:37:19.466" endtime="20240102 11:37:19.466"/>
</kw>
<msg timestamp="20240102 11:37:19.466" level="INFO">${uploadID} = e68e1785-ea97-4911-a0c8-78e68ab1a3c9-111686152315338776</msg>
<status status="PASS" starttime="20240102 11:37:19.436" endtime="20240102 11:37:19.466"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:37:19.466" endtime="20240102 11:37:19.467"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multipartKey</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:37:19.467" endtime="20240102 11:37:19.467"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>UploadId</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:37:19.467" endtime="20240102 11:37:19.468"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Create Random file</arg>
<arg>5</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Create Random file">
<arg>5</arg>
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=${size_in_megabytes} status=none</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:37:19.471" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=5 status=none 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:37:19.490" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:37:19.490" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240102 11:37:19.469" endtime="20240102 11:37:19.490"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:37:19.491" level="INFO"/>
<status status="PASS" starttime="20240102 11:37:19.490" endtime="20240102 11:37:19.491"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:37:19.491" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:37:19.491" endtime="20240102 11:37:19.491"/>
</kw>
<status status="PASS" starttime="20240102 11:37:19.469" endtime="20240102 11:37:19.492"/>
</kw>
<msg timestamp="20240102 11:37:19.492" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:37:19.469" endtime="20240102 11:37:19.492"/>
</kw>
<status status="PASS" starttime="20240102 11:37:19.468" endtime="20240102 11:37:19.492"/>
</kw>
<status status="PASS" starttime="20240102 11:37:19.468" endtime="20240102 11:37:19.492"/>
</kw>
<status status="PASS" starttime="20240102 11:37:19.468" endtime="20240102 11:37:19.492"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey1 --part-number 1 --body /tmp/part1 --upload-id ${uploadID}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:37:19.495" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket erasure --key ozone-test-4246724062/multipartKey1 --part-number 1 --body /tmp/part1 --upload-id e68e1785-ea97-4911-a0c8-78e68ab1a3c9-111686152315338776 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:37:20.132" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:37:20.132" level="INFO">${output} = {
    "ETag": "/s3v/erasure/ozone-test-4246724062/multipartKey1-e68e1785-ea97-4911-a0c8-78e68ab1a3c9-111686152315338776-1"
}</msg>
<status status="PASS" starttime="20240102 11:37:19.494" endtime="20240102 11:37:20.132"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:37:20.133" level="INFO">{
    "ETag": "/s3v/erasure/ozone-test-4246724062/multipartKey1-e68e1785-ea97-4911-a0c8-78e68ab1a3c9-111686152315338776-1"
}</msg>
<status status="PASS" starttime="20240102 11:37:20.132" endtime="20240102 11:37:20.133"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:37:20.133" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:37:20.133" endtime="20240102 11:37:20.134"/>
</kw>
<status status="PASS" starttime="20240102 11:37:19.493" endtime="20240102 11:37:20.134"/>
</kw>
<msg timestamp="20240102 11:37:20.134" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:37:19.493" endtime="20240102 11:37:20.134"/>
</kw>
<msg timestamp="20240102 11:37:20.134" level="INFO">${output} = {
    "ETag": "/s3v/erasure/ozone-test-4246724062/multipartKey1-e68e1785-ea97-4911-a0c8-78e68ab1a3c9-111686152315338776-1"
}</msg>
<status status="PASS" starttime="20240102 11:37:19.493" endtime="20240102 11:37:20.134"/>
</kw>
<msg timestamp="20240102 11:37:20.134" level="INFO">${result} = {
    "ETag": "/s3v/erasure/ozone-test-4246724062/multipartKey1-e68e1785-ea97-4911-a0c8-78e68ab1a3c9-111686152315338776-1"
}</msg>
<status status="PASS" starttime="20240102 11:37:19.492" endtime="20240102 11:37:20.134"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag1}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:37:20.136" level="INFO">Running command 'echo '{
    "ETag": "/s3v/erasure/ozone-test-4246724062/multipartKey1-e68e1785-ea97-4911-a0c8-78e68ab1a3c9-111686152315338776-1"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:37:20.163" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:37:20.163" level="INFO">${output} = /s3v/erasure/ozone-test-4246724062/multipartKey1-e68e1785-ea97-4911-a0c8-78e68ab1a3c9-111686152315338776-1</msg>
<status status="PASS" starttime="20240102 11:37:20.135" endtime="20240102 11:37:20.163"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:37:20.164" level="INFO">/s3v/erasure/ozone-test-4246724062/multipartKey1-e68e1785-ea97-4911-a0c8-78e68ab1a3c9-111686152315338776-1</msg>
<status status="PASS" starttime="20240102 11:37:20.164" endtime="20240102 11:37:20.164"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:37:20.165" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:37:20.165" endtime="20240102 11:37:20.165"/>
</kw>
<msg timestamp="20240102 11:37:20.165" level="INFO">${eTag1} = /s3v/erasure/ozone-test-4246724062/multipartKey1-e68e1785-ea97-4911-a0c8-78e68ab1a3c9-111686152315338776-1</msg>
<status status="PASS" starttime="20240102 11:37:20.134" endtime="20240102 11:37:20.165"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:37:20.165" endtime="20240102 11:37:20.166"/>
</kw>
<kw name="Execute" library="os">
<arg>echo "Part2" &gt; /tmp/part2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:37:20.169" level="INFO">Running command 'echo "Part2" &gt; /tmp/part2'.</msg>
<msg timestamp="20240102 11:37:20.171" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:37:20.171" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240102 11:37:20.168" endtime="20240102 11:37:20.171"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:37:20.172" level="INFO"/>
<status status="PASS" starttime="20240102 11:37:20.171" endtime="20240102 11:37:20.172"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:37:20.172" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:37:20.172" endtime="20240102 11:37:20.172"/>
</kw>
<status status="PASS" starttime="20240102 11:37:20.167" endtime="20240102 11:37:20.172"/>
</kw>
<msg timestamp="20240102 11:37:20.172" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:37:20.166" endtime="20240102 11:37:20.172"/>
</kw>
<status status="PASS" starttime="20240102 11:37:20.166" endtime="20240102 11:37:20.173"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey1 --part-number 2 --body /tmp/part2 --upload-id ${uploadID}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:37:20.176" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket erasure --key ozone-test-4246724062/multipartKey1 --part-number 2 --body /tmp/part2 --upload-id e68e1785-ea97-4911-a0c8-78e68ab1a3c9-111686152315338776 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:37:20.711" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:37:20.711" level="INFO">${output} = {
    "ETag": "/s3v/erasure/ozone-test-4246724062/multipartKey1-e68e1785-ea97-4911-a0c8-78e68ab1a3c9-111686152315338776-2"
}</msg>
<status status="PASS" starttime="20240102 11:37:20.174" endtime="20240102 11:37:20.711"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:37:20.712" level="INFO">{
    "ETag": "/s3v/erasure/ozone-test-4246724062/multipartKey1-e68e1785-ea97-4911-a0c8-78e68ab1a3c9-111686152315338776-2"
}</msg>
<status status="PASS" starttime="20240102 11:37:20.711" endtime="20240102 11:37:20.712"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:37:20.712" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:37:20.712" endtime="20240102 11:37:20.712"/>
</kw>
<status status="PASS" starttime="20240102 11:37:20.174" endtime="20240102 11:37:20.712"/>
</kw>
<msg timestamp="20240102 11:37:20.712" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:37:20.174" endtime="20240102 11:37:20.713"/>
</kw>
<msg timestamp="20240102 11:37:20.713" level="INFO">${output} = {
    "ETag": "/s3v/erasure/ozone-test-4246724062/multipartKey1-e68e1785-ea97-4911-a0c8-78e68ab1a3c9-111686152315338776-2"
}</msg>
<status status="PASS" starttime="20240102 11:37:20.173" endtime="20240102 11:37:20.713"/>
</kw>
<msg timestamp="20240102 11:37:20.713" level="INFO">${result} = {
    "ETag": "/s3v/erasure/ozone-test-4246724062/multipartKey1-e68e1785-ea97-4911-a0c8-78e68ab1a3c9-111686152315338776-2"
}</msg>
<status status="PASS" starttime="20240102 11:37:20.173" endtime="20240102 11:37:20.713"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag2}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:37:20.715" level="INFO">Running command 'echo '{
    "ETag": "/s3v/erasure/ozone-test-4246724062/multipartKey1-e68e1785-ea97-4911-a0c8-78e68ab1a3c9-111686152315338776-2"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:37:20.741" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:37:20.741" level="INFO">${output} = /s3v/erasure/ozone-test-4246724062/multipartKey1-e68e1785-ea97-4911-a0c8-78e68ab1a3c9-111686152315338776-2</msg>
<status status="PASS" starttime="20240102 11:37:20.714" endtime="20240102 11:37:20.741"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:37:20.742" level="INFO">/s3v/erasure/ozone-test-4246724062/multipartKey1-e68e1785-ea97-4911-a0c8-78e68ab1a3c9-111686152315338776-2</msg>
<status status="PASS" starttime="20240102 11:37:20.741" endtime="20240102 11:37:20.742"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:37:20.742" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:37:20.742" endtime="20240102 11:37:20.742"/>
</kw>
<msg timestamp="20240102 11:37:20.742" level="INFO">${eTag2} = /s3v/erasure/ozone-test-4246724062/multipartKey1-e68e1785-ea97-4911-a0c8-78e68ab1a3c9-111686152315338776-2</msg>
<status status="PASS" starttime="20240102 11:37:20.713" endtime="20240102 11:37:20.743"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:37:20.743" endtime="20240102 11:37:20.743"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/multipartKey1 --multipart-upload 'Parts=[{ETag=${eTag1},PartNumber=1},{ETag=${eTag2},PartNumber=2}]'</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:37:20.747" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --upload-id e68e1785-ea97-4911-a0c8-78e68ab1a3c9-111686152315338776 --bucket erasure --key ozone-test-4246724062/multipartKey1 --multipart-upload 'Parts=[{ETag=/s3v/erasure/ozone-test-4246724062/multipartKey1-e68e1785-ea97-4911-a0c8-78e68ab1a3c9-111686152315338776-1,PartNumber=1},{ETag=/s3v/erasure/ozone-test-4246724062/multipartKey1-e68e1785-ea97-4911-a0c8-78e68ab1a3c9-111686152315338776-2,PartNumber=2}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:37:21.211" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:37:21.211" level="INFO">${output} = {
    "Location": "erasure",
    "Bucket": "erasure",
    "Key": "ozone-test-4246724062/multipartKey1",
    "ETag": "\"1f83deb639c23071ec635039fd5192de-2\""
}</msg>
<status status="PASS" starttime="20240102 11:37:20.745" endtime="20240102 11:37:21.211"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:37:21.212" level="INFO">{
    "Location": "erasure",
    "Bucket": "erasure",
    "Key": "ozone-test-4246724062/multipartKey1",
    "ETag": "\"1f83deb639c23071ec635039fd5192de-2\""
}</msg>
<status status="PASS" starttime="20240102 11:37:21.211" endtime="20240102 11:37:21.212"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:37:21.212" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:37:21.212" endtime="20240102 11:37:21.212"/>
</kw>
<status status="PASS" starttime="20240102 11:37:20.745" endtime="20240102 11:37:21.212"/>
</kw>
<msg timestamp="20240102 11:37:21.213" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:37:20.744" endtime="20240102 11:37:21.213"/>
</kw>
<msg timestamp="20240102 11:37:21.213" level="INFO">${output} = {
    "Location": "erasure",
    "Bucket": "erasure",
    "Key": "ozone-test-4246724062/multipartKey1",
    "ETag": "\"1f83deb639c23071ec635039fd5192de-2\""
}</msg>
<status status="PASS" starttime="20240102 11:37:20.744" endtime="20240102 11:37:21.213"/>
</kw>
<msg timestamp="20240102 11:37:21.213" level="INFO">${result} = {
    "Location": "erasure",
    "Bucket": "erasure",
    "Key": "ozone-test-4246724062/multipartKey1",
    "ETag": "\"1f83deb639c23071ec635039fd5192de-2\""
}</msg>
<status status="PASS" starttime="20240102 11:37:20.743" endtime="20240102 11:37:21.213"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:37:21.213" endtime="20240102 11:37:21.214"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multipartKey1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:37:21.214" endtime="20240102 11:37:21.214"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:37:21.214" endtime="20240102 11:37:21.214"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/multipartKey1 /tmp/${PREFIX}-multipartKey1.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:37:21.218" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket erasure --key ozone-test-4246724062/multipartKey1 /tmp/ozone-test-4246724062-multipartKey1.result 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:37:21.781" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:37:21.781" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 02 Jan 2024 11:37:21 GMT",
    "ContentLength": 5242886,
    "ETag": "\"1f83deb639c23071ec635039fd5192de-2\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20240102 11:37:21.216" endtime="20240102 11:37:21.781"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:37:21.782" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 02 Jan 2024 11:37:21 GMT",
    "ContentLength": 5242886,
    "ETag": "\"1f83deb639c23071ec635039fd5192de-2\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Tue, 02 Jan 2024 11:37:21 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20240102 11:37:21.781" endtime="20240102 11:37:21.782"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:37:21.782" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:37:21.782" endtime="20240102 11:37:21.782"/>
</kw>
<status status="PASS" starttime="20240102 11:37:21.216" endtime="20240102 11:37:21.782"/>
</kw>
<msg timestamp="20240102 11:37:21.783" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:37:21.215" endtime="20240102 11:37:21.783"/>
</kw>
<msg timestamp="20240102 11:37:21.783" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 02 Jan 2024 11:37:21 GMT",
    "ContentLength": 5242886,
    "ETag": "\"1f83deb639c23071ec635039fd5192de-2\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20240102 11:37:21.215" endtime="20240102 11:37:21.783"/>
</kw>
<msg timestamp="20240102 11:37:21.783" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 02 Jan 2024 11:37:21 GMT",
    "ContentLength": 5242886,
    "ETag": "\"1f83deb639c23071ec635039fd5192de-2\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20240102 11:37:21.215" endtime="20240102 11:37:21.783"/>
</kw>
<kw name="Execute" library="os">
<arg>cat /tmp/part1 /tmp/part2 &gt; /tmp/${PREFIX}-multipartKey1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:37:21.786" level="INFO">Running command 'cat /tmp/part1 /tmp/part2 &gt; /tmp/ozone-test-4246724062-multipartKey1'.</msg>
<msg timestamp="20240102 11:37:21.791" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:37:21.791" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240102 11:37:21.785" endtime="20240102 11:37:21.792"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:37:21.792" level="INFO"/>
<status status="PASS" starttime="20240102 11:37:21.792" endtime="20240102 11:37:21.792"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:37:21.793" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:37:21.793" endtime="20240102 11:37:21.793"/>
</kw>
<status status="PASS" starttime="20240102 11:37:21.784" endtime="20240102 11:37:21.793"/>
</kw>
<msg timestamp="20240102 11:37:21.793" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:37:21.784" endtime="20240102 11:37:21.793"/>
</kw>
<status status="PASS" starttime="20240102 11:37:21.783" endtime="20240102 11:37:21.793"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/${PREFIX}-multipartKey1</arg>
<arg>/tmp/${PREFIX}-multipartKey1.result</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:37:21.797" level="INFO">Running command 'md5sum /tmp/ozone-test-4246724062-multipartKey1 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:37:21.808" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:37:21.808" level="INFO">${output} = 25aee118b03e554e7fe73bac9d3f54f0</msg>
<status status="PASS" starttime="20240102 11:37:21.795" endtime="20240102 11:37:21.808"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:37:21.809" level="INFO">25aee118b03e554e7fe73bac9d3f54f0</msg>
<status status="PASS" starttime="20240102 11:37:21.808" endtime="20240102 11:37:21.809"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:37:21.810" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:37:21.809" endtime="20240102 11:37:21.810"/>
</kw>
<status status="PASS" starttime="20240102 11:37:21.795" endtime="20240102 11:37:21.810"/>
</kw>
<msg timestamp="20240102 11:37:21.810" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:37:21.795" endtime="20240102 11:37:21.810"/>
</kw>
<msg timestamp="20240102 11:37:21.810" level="INFO">${checksumbefore} = 25aee118b03e554e7fe73bac9d3f54f0</msg>
<status status="PASS" starttime="20240102 11:37:21.794" endtime="20240102 11:37:21.810"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:37:21.813" level="INFO">Running command 'md5sum /tmp/ozone-test-4246724062-multipartKey1.result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:37:21.824" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:37:21.824" level="INFO">${output} = 25aee118b03e554e7fe73bac9d3f54f0</msg>
<status status="PASS" starttime="20240102 11:37:21.811" endtime="20240102 11:37:21.824"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:37:21.825" level="INFO">25aee118b03e554e7fe73bac9d3f54f0</msg>
<status status="PASS" starttime="20240102 11:37:21.824" endtime="20240102 11:37:21.825"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:37:21.825" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:37:21.825" endtime="20240102 11:37:21.826"/>
</kw>
<status status="PASS" starttime="20240102 11:37:21.811" endtime="20240102 11:37:21.826"/>
</kw>
<msg timestamp="20240102 11:37:21.826" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:37:21.811" endtime="20240102 11:37:21.826"/>
</kw>
<msg timestamp="20240102 11:37:21.826" level="INFO">${checksumafter} = 25aee118b03e554e7fe73bac9d3f54f0</msg>
<status status="PASS" starttime="20240102 11:37:21.810" endtime="20240102 11:37:21.826"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240102 11:37:21.826" endtime="20240102 11:37:21.827"/>
</kw>
<status status="PASS" starttime="20240102 11:37:21.794" endtime="20240102 11:37:21.827"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/multipartKey1 --part-number 1 /tmp/${PREFIX}-multipartKey1-part1.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:37:21.830" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket erasure --key ozone-test-4246724062/multipartKey1 --part-number 1 /tmp/ozone-test-4246724062-multipartKey1-part1.result 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:37:22.372" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:37:22.372" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 02 Jan 2024 11:37:21 GMT",
    "ContentLength": 5242880,
    "ETag": "\"1f83deb639c23071ec635039fd5192de-2\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20240102 11:37:21.829" endtime="20240102 11:37:22.373"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:37:22.374" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 02 Jan 2024 11:37:21 GMT",
    "ContentLength": 5242880,
    "ETag": "\"1f83deb639c23071ec635039fd5192de-2\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Tue, 02 Jan 2024 11:37:22 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20240102 11:37:22.373" endtime="20240102 11:37:22.374"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:37:22.374" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:37:22.374" endtime="20240102 11:37:22.375"/>
</kw>
<status status="PASS" starttime="20240102 11:37:21.828" endtime="20240102 11:37:22.375"/>
</kw>
<msg timestamp="20240102 11:37:22.375" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:37:21.828" endtime="20240102 11:37:22.375"/>
</kw>
<msg timestamp="20240102 11:37:22.375" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 02 Jan 2024 11:37:21 GMT",
    "ContentLength": 5242880,
    "ETag": "\"1f83deb639c23071ec635039fd5192de-2\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20240102 11:37:21.827" endtime="20240102 11:37:22.375"/>
</kw>
<msg timestamp="20240102 11:37:22.375" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 02 Jan 2024 11:37:21 GMT",
    "ContentLength": 5242880,
    "ETag": "\"1f83deb639c23071ec635039fd5192de-2\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20240102 11:37:21.827" endtime="20240102 11:37:22.376"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/part1</arg>
<arg>/tmp/${PREFIX}-multipartKey1-part1.result</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:37:22.380" level="INFO">Running command 'md5sum /tmp/part1 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:37:22.391" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:37:22.391" level="INFO">${output} = 2eb71bb99fd17c5f5f21ee731b2ceda5</msg>
<status status="PASS" starttime="20240102 11:37:22.378" endtime="20240102 11:37:22.391"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:37:22.392" level="INFO">2eb71bb99fd17c5f5f21ee731b2ceda5</msg>
<status status="PASS" starttime="20240102 11:37:22.392" endtime="20240102 11:37:22.392"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:37:22.393" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:37:22.392" endtime="20240102 11:37:22.393"/>
</kw>
<status status="PASS" starttime="20240102 11:37:22.377" endtime="20240102 11:37:22.393"/>
</kw>
<msg timestamp="20240102 11:37:22.393" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:37:22.377" endtime="20240102 11:37:22.393"/>
</kw>
<msg timestamp="20240102 11:37:22.393" level="INFO">${checksumbefore} = 2eb71bb99fd17c5f5f21ee731b2ceda5</msg>
<status status="PASS" starttime="20240102 11:37:22.376" endtime="20240102 11:37:22.393"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:37:22.396" level="INFO">Running command 'md5sum /tmp/ozone-test-4246724062-multipartKey1-part1.result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:37:22.407" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:37:22.407" level="INFO">${output} = 2eb71bb99fd17c5f5f21ee731b2ceda5</msg>
<status status="PASS" starttime="20240102 11:37:22.394" endtime="20240102 11:37:22.407"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:37:22.408" level="INFO">2eb71bb99fd17c5f5f21ee731b2ceda5</msg>
<status status="PASS" starttime="20240102 11:37:22.407" endtime="20240102 11:37:22.408"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:37:22.408" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:37:22.408" endtime="20240102 11:37:22.409"/>
</kw>
<status status="PASS" starttime="20240102 11:37:22.394" endtime="20240102 11:37:22.409"/>
</kw>
<msg timestamp="20240102 11:37:22.409" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:37:22.394" endtime="20240102 11:37:22.409"/>
</kw>
<msg timestamp="20240102 11:37:22.409" level="INFO">${checksumafter} = 2eb71bb99fd17c5f5f21ee731b2ceda5</msg>
<status status="PASS" starttime="20240102 11:37:22.393" endtime="20240102 11:37:22.409"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240102 11:37:22.409" endtime="20240102 11:37:22.410"/>
</kw>
<status status="PASS" starttime="20240102 11:37:22.376" endtime="20240102 11:37:22.410"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/multipartKey1 --part-number 2 /tmp/${PREFIX}-multipartKey1-part2.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:37:22.415" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket erasure --key ozone-test-4246724062/multipartKey1 --part-number 2 /tmp/ozone-test-4246724062-multipartKey1-part2.result 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:37:22.879" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:37:22.879" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 02 Jan 2024 11:37:21 GMT",
    "ContentLength": 6,
    "ETag": "\"1f83deb639c23071ec635039fd5192de-2\"",
    "CacheControl": "no-cache",
    "C...</msg>
<status status="PASS" starttime="20240102 11:37:22.413" endtime="20240102 11:37:22.879"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:37:22.880" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 02 Jan 2024 11:37:21 GMT",
    "ContentLength": 6,
    "ETag": "\"1f83deb639c23071ec635039fd5192de-2\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Tue, 02 Jan 2024 11:37:22 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20240102 11:37:22.879" endtime="20240102 11:37:22.880"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:37:22.881" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:37:22.880" endtime="20240102 11:37:22.881"/>
</kw>
<status status="PASS" starttime="20240102 11:37:22.412" endtime="20240102 11:37:22.881"/>
</kw>
<msg timestamp="20240102 11:37:22.881" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:37:22.412" endtime="20240102 11:37:22.881"/>
</kw>
<msg timestamp="20240102 11:37:22.881" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 02 Jan 2024 11:37:21 GMT",
    "ContentLength": 6,
    "ETag": "\"1f83deb639c23071ec635039fd5192de-2\"",
    "CacheControl": "no-cache",
    "C...</msg>
<status status="PASS" starttime="20240102 11:37:22.411" endtime="20240102 11:37:22.881"/>
</kw>
<msg timestamp="20240102 11:37:22.881" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 02 Jan 2024 11:37:21 GMT",
    "ContentLength": 6,
    "ETag": "\"1f83deb639c23071ec635039fd5192de-2\"",
    "CacheControl": "no-cache",
    "C...</msg>
<status status="PASS" starttime="20240102 11:37:22.410" endtime="20240102 11:37:22.881"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/part2</arg>
<arg>/tmp/${PREFIX}-multipartKey1-part2.result</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:37:22.885" level="INFO">Running command 'md5sum /tmp/part2 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:37:22.887" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:37:22.887" level="INFO">${output} = 9e6cc3c0311e8eb9548e860d8caf6734</msg>
<status status="PASS" starttime="20240102 11:37:22.884" endtime="20240102 11:37:22.887"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:37:22.888" level="INFO">9e6cc3c0311e8eb9548e860d8caf6734</msg>
<status status="PASS" starttime="20240102 11:37:22.888" endtime="20240102 11:37:22.888"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:37:22.888" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:37:22.888" endtime="20240102 11:37:22.889"/>
</kw>
<status status="PASS" starttime="20240102 11:37:22.883" endtime="20240102 11:37:22.889"/>
</kw>
<msg timestamp="20240102 11:37:22.889" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:37:22.882" endtime="20240102 11:37:22.889"/>
</kw>
<msg timestamp="20240102 11:37:22.889" level="INFO">${checksumbefore} = 9e6cc3c0311e8eb9548e860d8caf6734</msg>
<status status="PASS" starttime="20240102 11:37:22.882" endtime="20240102 11:37:22.889"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:37:22.891" level="INFO">Running command 'md5sum /tmp/ozone-test-4246724062-multipartKey1-part2.result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:37:22.893" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:37:22.893" level="INFO">${output} = 9e6cc3c0311e8eb9548e860d8caf6734</msg>
<status status="PASS" starttime="20240102 11:37:22.890" endtime="20240102 11:37:22.893"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:37:22.894" level="INFO">9e6cc3c0311e8eb9548e860d8caf6734</msg>
<status status="PASS" starttime="20240102 11:37:22.893" endtime="20240102 11:37:22.894"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:37:22.894" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:37:22.894" endtime="20240102 11:37:22.894"/>
</kw>
<status status="PASS" starttime="20240102 11:37:22.890" endtime="20240102 11:37:22.894"/>
</kw>
<msg timestamp="20240102 11:37:22.894" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:37:22.889" endtime="20240102 11:37:22.895"/>
</kw>
<msg timestamp="20240102 11:37:22.895" level="INFO">${checksumafter} = 9e6cc3c0311e8eb9548e860d8caf6734</msg>
<status status="PASS" starttime="20240102 11:37:22.889" endtime="20240102 11:37:22.895"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240102 11:37:22.895" endtime="20240102 11:37:22.895"/>
</kw>
<status status="PASS" starttime="20240102 11:37:22.882" endtime="20240102 11:37:22.895"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20240102 11:37:18.974" endtime="20240102 11:37:22.895"/>
</test>
<test id="s1-s1-s8-t4" name="Test Multipart Upload Complete Entity too small" line="124">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20240102 11:37:22.898" level="INFO">${randStr} = 8436724060</msg>
<status status="PASS" starttime="20240102 11:37:22.897" endtime="20240102 11:37:22.898"/>
</kw>
<msg timestamp="20240102 11:37:22.898" level="INFO">${random} = ozone-test-8436724060</msg>
<status status="PASS" starttime="20240102 11:37:22.897" endtime="20240102 11:37:22.898"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20240102 11:37:22.898" level="INFO">${PREFIX} = ozone-test-8436724060</msg>
<status status="PASS" starttime="20240102 11:37:22.898" endtime="20240102 11:37:22.898"/>
</kw>
<status status="PASS" starttime="20240102 11:37:22.897" endtime="20240102 11:37:22.898"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/multipartKey2</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:37:22.901" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket erasure --key ozone-test-8436724060/multipartKey2 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:37:23.364" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:37:23.364" level="INFO">${output} = {
    "Bucket": "erasure",
    "Key": "ozone-test-8436724060/multipartKey2",
    "UploadId": "34d21a3c-61e2-4e86-9be8-de78ed01e39a-111686152572829723"
}</msg>
<status status="PASS" starttime="20240102 11:37:22.900" endtime="20240102 11:37:23.364"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:37:23.365" level="INFO">{
    "Bucket": "erasure",
    "Key": "ozone-test-8436724060/multipartKey2",
    "UploadId": "34d21a3c-61e2-4e86-9be8-de78ed01e39a-111686152572829723"
}</msg>
<status status="PASS" starttime="20240102 11:37:23.364" endtime="20240102 11:37:23.365"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:37:23.365" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:37:23.365" endtime="20240102 11:37:23.365"/>
</kw>
<status status="PASS" starttime="20240102 11:37:22.900" endtime="20240102 11:37:23.366"/>
</kw>
<msg timestamp="20240102 11:37:23.366" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:37:22.899" endtime="20240102 11:37:23.366"/>
</kw>
<msg timestamp="20240102 11:37:23.366" level="INFO">${output} = {
    "Bucket": "erasure",
    "Key": "ozone-test-8436724060/multipartKey2",
    "UploadId": "34d21a3c-61e2-4e86-9be8-de78ed01e39a-111686152572829723"
}</msg>
<status status="PASS" starttime="20240102 11:37:22.899" endtime="20240102 11:37:23.366"/>
</kw>
<msg timestamp="20240102 11:37:23.366" level="INFO">${result} = {
    "Bucket": "erasure",
    "Key": "ozone-test-8436724060/multipartKey2",
    "UploadId": "34d21a3c-61e2-4e86-9be8-de78ed01e39a-111686152572829723"
}</msg>
<status status="PASS" starttime="20240102 11:37:22.899" endtime="20240102 11:37:23.366"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${uploadID}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:37:23.368" level="INFO">Running command 'echo '{
    "Bucket": "erasure",
    "Key": "ozone-test-8436724060/multipartKey2",
    "UploadId": "34d21a3c-61e2-4e86-9be8-de78ed01e39a-111686152572829723"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:37:23.395" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:37:23.395" level="INFO">${output} = 34d21a3c-61e2-4e86-9be8-de78ed01e39a-111686152572829723</msg>
<status status="PASS" starttime="20240102 11:37:23.367" endtime="20240102 11:37:23.395"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:37:23.396" level="INFO">34d21a3c-61e2-4e86-9be8-de78ed01e39a-111686152572829723</msg>
<status status="PASS" starttime="20240102 11:37:23.395" endtime="20240102 11:37:23.396"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:37:23.396" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:37:23.396" endtime="20240102 11:37:23.397"/>
</kw>
<msg timestamp="20240102 11:37:23.397" level="INFO">${uploadID} = 34d21a3c-61e2-4e86-9be8-de78ed01e39a-111686152572829723</msg>
<status status="PASS" starttime="20240102 11:37:23.366" endtime="20240102 11:37:23.397"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:37:23.397" endtime="20240102 11:37:23.397"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multipartKey</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:37:23.397" endtime="20240102 11:37:23.398"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>UploadId</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:37:23.398" endtime="20240102 11:37:23.398"/>
</kw>
<kw name="Execute" library="os">
<arg>echo "Part1" &gt; /tmp/part1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:37:23.401" level="INFO">Running command 'echo "Part1" &gt; /tmp/part1'.</msg>
<msg timestamp="20240102 11:37:23.403" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:37:23.403" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240102 11:37:23.400" endtime="20240102 11:37:23.403"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:37:23.404" level="INFO"/>
<status status="PASS" starttime="20240102 11:37:23.403" endtime="20240102 11:37:23.404"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:37:23.404" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:37:23.404" endtime="20240102 11:37:23.404"/>
</kw>
<status status="PASS" starttime="20240102 11:37:23.399" endtime="20240102 11:37:23.404"/>
</kw>
<msg timestamp="20240102 11:37:23.404" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:37:23.399" endtime="20240102 11:37:23.405"/>
</kw>
<status status="PASS" starttime="20240102 11:37:23.398" endtime="20240102 11:37:23.405"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey2 --part-number 1 --body /tmp/part1 --upload-id ${uploadID}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:37:23.408" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket erasure --key ozone-test-8436724060/multipartKey2 --part-number 1 --body /tmp/part1 --upload-id 34d21a3c-61e2-4e86-9be8-de78ed01e39a-111686152572829723 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:37:23.930" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:37:23.930" level="INFO">${output} = {
    "ETag": "/s3v/erasure/ozone-test-8436724060/multipartKey2-34d21a3c-61e2-4e86-9be8-de78ed01e39a-111686152572829723-1"
}</msg>
<status status="PASS" starttime="20240102 11:37:23.406" endtime="20240102 11:37:23.930"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:37:23.931" level="INFO">{
    "ETag": "/s3v/erasure/ozone-test-8436724060/multipartKey2-34d21a3c-61e2-4e86-9be8-de78ed01e39a-111686152572829723-1"
}</msg>
<status status="PASS" starttime="20240102 11:37:23.930" endtime="20240102 11:37:23.931"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:37:23.931" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:37:23.931" endtime="20240102 11:37:23.932"/>
</kw>
<status status="PASS" starttime="20240102 11:37:23.406" endtime="20240102 11:37:23.932"/>
</kw>
<msg timestamp="20240102 11:37:23.932" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:37:23.406" endtime="20240102 11:37:23.932"/>
</kw>
<msg timestamp="20240102 11:37:23.932" level="INFO">${output} = {
    "ETag": "/s3v/erasure/ozone-test-8436724060/multipartKey2-34d21a3c-61e2-4e86-9be8-de78ed01e39a-111686152572829723-1"
}</msg>
<status status="PASS" starttime="20240102 11:37:23.405" endtime="20240102 11:37:23.932"/>
</kw>
<msg timestamp="20240102 11:37:23.932" level="INFO">${result} = {
    "ETag": "/s3v/erasure/ozone-test-8436724060/multipartKey2-34d21a3c-61e2-4e86-9be8-de78ed01e39a-111686152572829723-1"
}</msg>
<status status="PASS" starttime="20240102 11:37:23.405" endtime="20240102 11:37:23.932"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag1}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:37:23.934" level="INFO">Running command 'echo '{
    "ETag": "/s3v/erasure/ozone-test-8436724060/multipartKey2-34d21a3c-61e2-4e86-9be8-de78ed01e39a-111686152572829723-1"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:37:23.959" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:37:23.959" level="INFO">${output} = /s3v/erasure/ozone-test-8436724060/multipartKey2-34d21a3c-61e2-4e86-9be8-de78ed01e39a-111686152572829723-1</msg>
<status status="PASS" starttime="20240102 11:37:23.933" endtime="20240102 11:37:23.959"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:37:23.960" level="INFO">/s3v/erasure/ozone-test-8436724060/multipartKey2-34d21a3c-61e2-4e86-9be8-de78ed01e39a-111686152572829723-1</msg>
<status status="PASS" starttime="20240102 11:37:23.960" endtime="20240102 11:37:23.960"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:37:23.961" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:37:23.960" endtime="20240102 11:37:23.961"/>
</kw>
<msg timestamp="20240102 11:37:23.961" level="INFO">${eTag1} = /s3v/erasure/ozone-test-8436724060/multipartKey2-34d21a3c-61e2-4e86-9be8-de78ed01e39a-111686152572829723-1</msg>
<status status="PASS" starttime="20240102 11:37:23.932" endtime="20240102 11:37:23.961"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:37:23.961" endtime="20240102 11:37:23.961"/>
</kw>
<kw name="Execute" library="os">
<arg>echo "Part2" &gt; /tmp/part2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:37:23.964" level="INFO">Running command 'echo "Part2" &gt; /tmp/part2'.</msg>
<msg timestamp="20240102 11:37:23.965" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:37:23.965" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240102 11:37:23.962" endtime="20240102 11:37:23.965"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:37:23.965" level="INFO"/>
<status status="PASS" starttime="20240102 11:37:23.965" endtime="20240102 11:37:23.965"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:37:23.966" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:37:23.966" endtime="20240102 11:37:23.966"/>
</kw>
<status status="PASS" starttime="20240102 11:37:23.962" endtime="20240102 11:37:23.966"/>
</kw>
<msg timestamp="20240102 11:37:23.966" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:37:23.962" endtime="20240102 11:37:23.966"/>
</kw>
<status status="PASS" starttime="20240102 11:37:23.961" endtime="20240102 11:37:23.966"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey2 --part-number 2 --body /tmp/part2 --upload-id ${uploadID}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:37:23.969" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket erasure --key ozone-test-8436724060/multipartKey2 --part-number 2 --body /tmp/part2 --upload-id 34d21a3c-61e2-4e86-9be8-de78ed01e39a-111686152572829723 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:37:24.455" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:37:24.455" level="INFO">${output} = {
    "ETag": "/s3v/erasure/ozone-test-8436724060/multipartKey2-34d21a3c-61e2-4e86-9be8-de78ed01e39a-111686152572829723-2"
}</msg>
<status status="PASS" starttime="20240102 11:37:23.968" endtime="20240102 11:37:24.455"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:37:24.456" level="INFO">{
    "ETag": "/s3v/erasure/ozone-test-8436724060/multipartKey2-34d21a3c-61e2-4e86-9be8-de78ed01e39a-111686152572829723-2"
}</msg>
<status status="PASS" starttime="20240102 11:37:24.455" endtime="20240102 11:37:24.456"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:37:24.457" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:37:24.456" endtime="20240102 11:37:24.457"/>
</kw>
<status status="PASS" starttime="20240102 11:37:23.968" endtime="20240102 11:37:24.457"/>
</kw>
<msg timestamp="20240102 11:37:24.457" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:37:23.967" endtime="20240102 11:37:24.457"/>
</kw>
<msg timestamp="20240102 11:37:24.457" level="INFO">${output} = {
    "ETag": "/s3v/erasure/ozone-test-8436724060/multipartKey2-34d21a3c-61e2-4e86-9be8-de78ed01e39a-111686152572829723-2"
}</msg>
<status status="PASS" starttime="20240102 11:37:23.967" endtime="20240102 11:37:24.457"/>
</kw>
<msg timestamp="20240102 11:37:24.457" level="INFO">${result} = {
    "ETag": "/s3v/erasure/ozone-test-8436724060/multipartKey2-34d21a3c-61e2-4e86-9be8-de78ed01e39a-111686152572829723-2"
}</msg>
<status status="PASS" starttime="20240102 11:37:23.966" endtime="20240102 11:37:24.457"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag2}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:37:24.460" level="INFO">Running command 'echo '{
    "ETag": "/s3v/erasure/ozone-test-8436724060/multipartKey2-34d21a3c-61e2-4e86-9be8-de78ed01e39a-111686152572829723-2"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:37:24.486" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:37:24.486" level="INFO">${output} = /s3v/erasure/ozone-test-8436724060/multipartKey2-34d21a3c-61e2-4e86-9be8-de78ed01e39a-111686152572829723-2</msg>
<status status="PASS" starttime="20240102 11:37:24.458" endtime="20240102 11:37:24.486"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:37:24.487" level="INFO">/s3v/erasure/ozone-test-8436724060/multipartKey2-34d21a3c-61e2-4e86-9be8-de78ed01e39a-111686152572829723-2</msg>
<status status="PASS" starttime="20240102 11:37:24.487" endtime="20240102 11:37:24.487"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:37:24.488" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:37:24.488" endtime="20240102 11:37:24.488"/>
</kw>
<msg timestamp="20240102 11:37:24.488" level="INFO">${eTag2} = /s3v/erasure/ozone-test-8436724060/multipartKey2-34d21a3c-61e2-4e86-9be8-de78ed01e39a-111686152572829723-2</msg>
<status status="PASS" starttime="20240102 11:37:24.457" endtime="20240102 11:37:24.488"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:37:24.488" endtime="20240102 11:37:24.489"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/multipartKey2 --multipart-upload 'Parts=[{ETag=${eTag1},PartNumber=1},{ETag=${eTag2},PartNumber=2}]'</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:37:24.491" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --upload-id 34d21a3c-61e2-4e86-9be8-de78ed01e39a-111686152572829723 --bucket erasure --key ozone-test-8436724060/multipartKey2 --multipart-upload 'Parts=[{ETag=/s3v/erasure/ozone-test-8436724060/multipartKey2-34d21a3c-61e2-4e86-9be8-de78ed01e39a-111686152572829723-1,PartNumber=1},{ETag=/s3v/erasure/ozone-test-8436724060/multipartKey2-34d21a3c-61e2-4e86-9be8-de78ed01e39a-111686152572829723-2,PartNumber=2}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:37:24.947" level="INFO">${rc} = 255</msg>
<msg timestamp="20240102 11:37:24.947" level="INFO">${output} = 
An error occurred (EntityTooSmall) when calling the CompleteMultipartUpload operation: Your proposed upload is smaller than the minimum allowed object size. Each part must be at least 5 MB in size, e...</msg>
<status status="PASS" starttime="20240102 11:37:24.490" endtime="20240102 11:37:24.947"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:37:24.948" level="INFO">
An error occurred (EntityTooSmall) when calling the CompleteMultipartUpload operation: Your proposed upload is smaller than the minimum allowed object size. Each part must be at least 5 MB in size, except the last part.</msg>
<status status="PASS" starttime="20240102 11:37:24.948" endtime="20240102 11:37:24.948"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:37:24.949" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:37:24.948" endtime="20240102 11:37:24.949"/>
</kw>
<msg timestamp="20240102 11:37:24.949" level="INFO">${output} = 
An error occurred (EntityTooSmall) when calling the CompleteMultipartUpload operation: Your proposed upload is smaller than the minimum allowed object size. Each part must be at least 5 MB in size, e...</msg>
<status status="PASS" starttime="20240102 11:37:24.490" endtime="20240102 11:37:24.949"/>
</kw>
<msg timestamp="20240102 11:37:24.949" level="INFO">${result} = 
An error occurred (EntityTooSmall) when calling the CompleteMultipartUpload operation: Your proposed upload is smaller than the minimum allowed object size. Each part must be at least 5 MB in size, e...</msg>
<status status="PASS" starttime="20240102 11:37:24.489" endtime="20240102 11:37:24.949"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>EntityTooSmall</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:37:24.949" endtime="20240102 11:37:24.950"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20240102 11:37:22.896" endtime="20240102 11:37:24.950"/>
</test>
<test id="s1-s1-s8-t5" name="Test Multipart Upload Complete Invalid part errors and complete mpu with few parts" line="147">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20240102 11:37:24.952" level="INFO">${randStr} = 5727091207</msg>
<status status="PASS" starttime="20240102 11:37:24.952" endtime="20240102 11:37:24.952"/>
</kw>
<msg timestamp="20240102 11:37:24.952" level="INFO">${random} = ozone-test-5727091207</msg>
<status status="PASS" starttime="20240102 11:37:24.951" endtime="20240102 11:37:24.952"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20240102 11:37:24.953" level="INFO">${PREFIX} = ozone-test-5727091207</msg>
<status status="PASS" starttime="20240102 11:37:24.953" endtime="20240102 11:37:24.953"/>
</kw>
<status status="PASS" starttime="20240102 11:37:24.951" endtime="20240102 11:37:24.953"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/multipartKey3</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:37:24.956" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket erasure --key ozone-test-5727091207/multipartKey3 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:37:25.394" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:37:25.394" level="INFO">${output} = {
    "Bucket": "erasure",
    "Key": "ozone-test-5727091207/multipartKey3",
    "UploadId": "e878d751-e2ec-4139-bd27-671031e6acf5-111686152706457630"
}</msg>
<status status="PASS" starttime="20240102 11:37:24.954" endtime="20240102 11:37:25.394"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:37:25.395" level="INFO">{
    "Bucket": "erasure",
    "Key": "ozone-test-5727091207/multipartKey3",
    "UploadId": "e878d751-e2ec-4139-bd27-671031e6acf5-111686152706457630"
}</msg>
<status status="PASS" starttime="20240102 11:37:25.395" endtime="20240102 11:37:25.395"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:37:25.396" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:37:25.395" endtime="20240102 11:37:25.396"/>
</kw>
<status status="PASS" starttime="20240102 11:37:24.954" endtime="20240102 11:37:25.396"/>
</kw>
<msg timestamp="20240102 11:37:25.396" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:37:24.954" endtime="20240102 11:37:25.396"/>
</kw>
<msg timestamp="20240102 11:37:25.396" level="INFO">${output} = {
    "Bucket": "erasure",
    "Key": "ozone-test-5727091207/multipartKey3",
    "UploadId": "e878d751-e2ec-4139-bd27-671031e6acf5-111686152706457630"
}</msg>
<status status="PASS" starttime="20240102 11:37:24.953" endtime="20240102 11:37:25.396"/>
</kw>
<msg timestamp="20240102 11:37:25.396" level="INFO">${result} = {
    "Bucket": "erasure",
    "Key": "ozone-test-5727091207/multipartKey3",
    "UploadId": "e878d751-e2ec-4139-bd27-671031e6acf5-111686152706457630"
}</msg>
<status status="PASS" starttime="20240102 11:37:24.953" endtime="20240102 11:37:25.396"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${uploadID}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:37:25.398" level="INFO">Running command 'echo '{
    "Bucket": "erasure",
    "Key": "ozone-test-5727091207/multipartKey3",
    "UploadId": "e878d751-e2ec-4139-bd27-671031e6acf5-111686152706457630"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:37:25.424" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:37:25.424" level="INFO">${output} = e878d751-e2ec-4139-bd27-671031e6acf5-111686152706457630</msg>
<status status="PASS" starttime="20240102 11:37:25.397" endtime="20240102 11:37:25.424"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:37:25.424" level="INFO">e878d751-e2ec-4139-bd27-671031e6acf5-111686152706457630</msg>
<status status="PASS" starttime="20240102 11:37:25.424" endtime="20240102 11:37:25.425"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:37:25.425" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:37:25.425" endtime="20240102 11:37:25.425"/>
</kw>
<msg timestamp="20240102 11:37:25.425" level="INFO">${uploadID} = e878d751-e2ec-4139-bd27-671031e6acf5-111686152706457630</msg>
<status status="PASS" starttime="20240102 11:37:25.397" endtime="20240102 11:37:25.425"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:37:25.425" endtime="20240102 11:37:25.426"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multipartKey</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:37:25.426" endtime="20240102 11:37:25.426"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>UploadId</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:37:25.426" endtime="20240102 11:37:25.427"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 --multipart-upload 'Parts=[{ETag=etag1,PartNumber=1},{ETag=etag2,PartNumber=2}]'</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:37:25.429" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --upload-id e878d751-e2ec-4139-bd27-671031e6acf5-111686152706457630 --bucket erasure --key ozone-test-5727091207/multipartKey3 --multipart-upload 'Parts=[{ETag=etag1,PartNumber=1},{ETag=etag2,PartNumber=2}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:37:25.883" level="INFO">${rc} = 255</msg>
<msg timestamp="20240102 11:37:25.883" level="INFO">${output} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20240102 11:37:25.428" endtime="20240102 11:37:25.883"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:37:25.884" level="INFO">
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified entity tag might not have matched the part's entity tag.</msg>
<status status="PASS" starttime="20240102 11:37:25.883" endtime="20240102 11:37:25.884"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:37:25.884" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:37:25.884" endtime="20240102 11:37:25.884"/>
</kw>
<msg timestamp="20240102 11:37:25.885" level="INFO">${output} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20240102 11:37:25.427" endtime="20240102 11:37:25.885"/>
</kw>
<msg timestamp="20240102 11:37:25.885" level="INFO">${result} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20240102 11:37:25.427" endtime="20240102 11:37:25.885"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidPart</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:37:25.885" endtime="20240102 11:37:25.885"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 --multipart-upload 'Parts=[{ETag=etag1,PartNumber=2},{ETag=etag2,PartNumber=1}]'</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:37:25.888" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --upload-id e878d751-e2ec-4139-bd27-671031e6acf5-111686152706457630 --bucket erasure --key ozone-test-5727091207/multipartKey3 --multipart-upload 'Parts=[{ETag=etag1,PartNumber=2},{ETag=etag2,PartNumber=1}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:37:26.340" level="INFO">${rc} = 255</msg>
<msg timestamp="20240102 11:37:26.340" level="INFO">${output} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20240102 11:37:25.887" endtime="20240102 11:37:26.340"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:37:26.341" level="INFO">
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified entity tag might not have matched the part's entity tag.</msg>
<status status="PASS" starttime="20240102 11:37:26.340" endtime="20240102 11:37:26.341"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:37:26.341" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:37:26.341" endtime="20240102 11:37:26.342"/>
</kw>
<msg timestamp="20240102 11:37:26.342" level="INFO">${output} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20240102 11:37:25.886" endtime="20240102 11:37:26.342"/>
</kw>
<msg timestamp="20240102 11:37:26.342" level="INFO">${result} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20240102 11:37:25.885" endtime="20240102 11:37:26.342"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidPart</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:37:26.342" endtime="20240102 11:37:26.342"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Create Random file</arg>
<arg>5</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Create Random file">
<arg>5</arg>
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=${size_in_megabytes} status=none</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:37:26.346" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=5 status=none 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:37:26.364" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:37:26.364" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240102 11:37:26.344" endtime="20240102 11:37:26.364"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:37:26.364" level="INFO"/>
<status status="PASS" starttime="20240102 11:37:26.364" endtime="20240102 11:37:26.365"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:37:26.365" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:37:26.365" endtime="20240102 11:37:26.365"/>
</kw>
<status status="PASS" starttime="20240102 11:37:26.344" endtime="20240102 11:37:26.365"/>
</kw>
<msg timestamp="20240102 11:37:26.365" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:37:26.344" endtime="20240102 11:37:26.365"/>
</kw>
<status status="PASS" starttime="20240102 11:37:26.343" endtime="20240102 11:37:26.365"/>
</kw>
<status status="PASS" starttime="20240102 11:37:26.343" endtime="20240102 11:37:26.366"/>
</kw>
<status status="PASS" starttime="20240102 11:37:26.343" endtime="20240102 11:37:26.366"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 --part-number 1 --body /tmp/part1 --upload-id ${uploadID}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:37:26.369" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket erasure --key ozone-test-5727091207/multipartKey3 --part-number 1 --body /tmp/part1 --upload-id e878d751-e2ec-4139-bd27-671031e6acf5-111686152706457630 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:37:26.991" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:37:26.991" level="INFO">${output} = {
    "ETag": "/s3v/erasure/ozone-test-5727091207/multipartKey3-e878d751-e2ec-4139-bd27-671031e6acf5-111686152706457630-1"
}</msg>
<status status="PASS" starttime="20240102 11:37:26.367" endtime="20240102 11:37:26.991"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:37:26.992" level="INFO">{
    "ETag": "/s3v/erasure/ozone-test-5727091207/multipartKey3-e878d751-e2ec-4139-bd27-671031e6acf5-111686152706457630-1"
}</msg>
<status status="PASS" starttime="20240102 11:37:26.991" endtime="20240102 11:37:26.992"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:37:26.992" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:37:26.992" endtime="20240102 11:37:26.993"/>
</kw>
<status status="PASS" starttime="20240102 11:37:26.367" endtime="20240102 11:37:26.993"/>
</kw>
<msg timestamp="20240102 11:37:26.993" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:37:26.367" endtime="20240102 11:37:26.993"/>
</kw>
<msg timestamp="20240102 11:37:26.993" level="INFO">${output} = {
    "ETag": "/s3v/erasure/ozone-test-5727091207/multipartKey3-e878d751-e2ec-4139-bd27-671031e6acf5-111686152706457630-1"
}</msg>
<status status="PASS" starttime="20240102 11:37:26.366" endtime="20240102 11:37:26.993"/>
</kw>
<msg timestamp="20240102 11:37:26.993" level="INFO">${result} = {
    "ETag": "/s3v/erasure/ozone-test-5727091207/multipartKey3-e878d751-e2ec-4139-bd27-671031e6acf5-111686152706457630-1"
}</msg>
<status status="PASS" starttime="20240102 11:37:26.366" endtime="20240102 11:37:26.993"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag1}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:37:26.995" level="INFO">Running command 'echo '{
    "ETag": "/s3v/erasure/ozone-test-5727091207/multipartKey3-e878d751-e2ec-4139-bd27-671031e6acf5-111686152706457630-1"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:37:27.020" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:37:27.020" level="INFO">${output} = /s3v/erasure/ozone-test-5727091207/multipartKey3-e878d751-e2ec-4139-bd27-671031e6acf5-111686152706457630-1</msg>
<status status="PASS" starttime="20240102 11:37:26.994" endtime="20240102 11:37:27.020"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:37:27.021" level="INFO">/s3v/erasure/ozone-test-5727091207/multipartKey3-e878d751-e2ec-4139-bd27-671031e6acf5-111686152706457630-1</msg>
<status status="PASS" starttime="20240102 11:37:27.021" endtime="20240102 11:37:27.021"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:37:27.022" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:37:27.021" endtime="20240102 11:37:27.022"/>
</kw>
<msg timestamp="20240102 11:37:27.022" level="INFO">${eTag1} = /s3v/erasure/ozone-test-5727091207/multipartKey3-e878d751-e2ec-4139-bd27-671031e6acf5-111686152706457630-1</msg>
<status status="PASS" starttime="20240102 11:37:26.993" endtime="20240102 11:37:27.022"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:37:27.022" endtime="20240102 11:37:27.022"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 --part-number 2 --body /tmp/part1 --upload-id ${uploadID}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:37:27.025" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket erasure --key ozone-test-5727091207/multipartKey3 --part-number 2 --body /tmp/part1 --upload-id e878d751-e2ec-4139-bd27-671031e6acf5-111686152706457630 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:37:27.643" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:37:27.643" level="INFO">${output} = {
    "ETag": "/s3v/erasure/ozone-test-5727091207/multipartKey3-e878d751-e2ec-4139-bd27-671031e6acf5-111686152706457630-2"
}</msg>
<status status="PASS" starttime="20240102 11:37:27.024" endtime="20240102 11:37:27.643"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:37:27.644" level="INFO">{
    "ETag": "/s3v/erasure/ozone-test-5727091207/multipartKey3-e878d751-e2ec-4139-bd27-671031e6acf5-111686152706457630-2"
}</msg>
<status status="PASS" starttime="20240102 11:37:27.643" endtime="20240102 11:37:27.644"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:37:27.644" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:37:27.644" endtime="20240102 11:37:27.645"/>
</kw>
<status status="PASS" starttime="20240102 11:37:27.024" endtime="20240102 11:37:27.645"/>
</kw>
<msg timestamp="20240102 11:37:27.645" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:37:27.023" endtime="20240102 11:37:27.645"/>
</kw>
<msg timestamp="20240102 11:37:27.645" level="INFO">${output} = {
    "ETag": "/s3v/erasure/ozone-test-5727091207/multipartKey3-e878d751-e2ec-4139-bd27-671031e6acf5-111686152706457630-2"
}</msg>
<status status="PASS" starttime="20240102 11:37:27.023" endtime="20240102 11:37:27.645"/>
</kw>
<msg timestamp="20240102 11:37:27.645" level="INFO">${result} = {
    "ETag": "/s3v/erasure/ozone-test-5727091207/multipartKey3-e878d751-e2ec-4139-bd27-671031e6acf5-111686152706457630-2"
}</msg>
<status status="PASS" starttime="20240102 11:37:27.022" endtime="20240102 11:37:27.645"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag2}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:37:27.647" level="INFO">Running command 'echo '{
    "ETag": "/s3v/erasure/ozone-test-5727091207/multipartKey3-e878d751-e2ec-4139-bd27-671031e6acf5-111686152706457630-2"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:37:27.674" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:37:27.674" level="INFO">${output} = /s3v/erasure/ozone-test-5727091207/multipartKey3-e878d751-e2ec-4139-bd27-671031e6acf5-111686152706457630-2</msg>
<status status="PASS" starttime="20240102 11:37:27.646" endtime="20240102 11:37:27.674"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:37:27.675" level="INFO">/s3v/erasure/ozone-test-5727091207/multipartKey3-e878d751-e2ec-4139-bd27-671031e6acf5-111686152706457630-2</msg>
<status status="PASS" starttime="20240102 11:37:27.674" endtime="20240102 11:37:27.675"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:37:27.675" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:37:27.675" endtime="20240102 11:37:27.675"/>
</kw>
<msg timestamp="20240102 11:37:27.675" level="INFO">${eTag2} = /s3v/erasure/ozone-test-5727091207/multipartKey3-e878d751-e2ec-4139-bd27-671031e6acf5-111686152706457630-2</msg>
<status status="PASS" starttime="20240102 11:37:27.645" endtime="20240102 11:37:27.675"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:37:27.676" endtime="20240102 11:37:27.676"/>
</kw>
<kw name="Execute" library="os">
<arg>echo "Part3" &gt; /tmp/part3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:37:27.679" level="INFO">Running command 'echo "Part3" &gt; /tmp/part3'.</msg>
<msg timestamp="20240102 11:37:27.680" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:37:27.680" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240102 11:37:27.677" endtime="20240102 11:37:27.680"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:37:27.681" level="INFO"/>
<status status="PASS" starttime="20240102 11:37:27.680" endtime="20240102 11:37:27.681"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:37:27.681" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:37:27.681" endtime="20240102 11:37:27.681"/>
</kw>
<status status="PASS" starttime="20240102 11:37:27.677" endtime="20240102 11:37:27.682"/>
</kw>
<msg timestamp="20240102 11:37:27.682" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:37:27.676" endtime="20240102 11:37:27.682"/>
</kw>
<status status="PASS" starttime="20240102 11:37:27.676" endtime="20240102 11:37:27.682"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 --part-number 3 --body /tmp/part3 --upload-id ${uploadID}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:37:27.685" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket erasure --key ozone-test-5727091207/multipartKey3 --part-number 3 --body /tmp/part3 --upload-id e878d751-e2ec-4139-bd27-671031e6acf5-111686152706457630 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:37:28.172" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:37:28.172" level="INFO">${output} = {
    "ETag": "/s3v/erasure/ozone-test-5727091207/multipartKey3-e878d751-e2ec-4139-bd27-671031e6acf5-111686152706457630-3"
}</msg>
<status status="PASS" starttime="20240102 11:37:27.684" endtime="20240102 11:37:28.172"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:37:28.173" level="INFO">{
    "ETag": "/s3v/erasure/ozone-test-5727091207/multipartKey3-e878d751-e2ec-4139-bd27-671031e6acf5-111686152706457630-3"
}</msg>
<status status="PASS" starttime="20240102 11:37:28.173" endtime="20240102 11:37:28.173"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:37:28.174" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:37:28.173" endtime="20240102 11:37:28.174"/>
</kw>
<status status="PASS" starttime="20240102 11:37:27.683" endtime="20240102 11:37:28.174"/>
</kw>
<msg timestamp="20240102 11:37:28.174" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:37:27.683" endtime="20240102 11:37:28.174"/>
</kw>
<msg timestamp="20240102 11:37:28.174" level="INFO">${output} = {
    "ETag": "/s3v/erasure/ozone-test-5727091207/multipartKey3-e878d751-e2ec-4139-bd27-671031e6acf5-111686152706457630-3"
}</msg>
<status status="PASS" starttime="20240102 11:37:27.682" endtime="20240102 11:37:28.174"/>
</kw>
<msg timestamp="20240102 11:37:28.174" level="INFO">${result} = {
    "ETag": "/s3v/erasure/ozone-test-5727091207/multipartKey3-e878d751-e2ec-4139-bd27-671031e6acf5-111686152706457630-3"
}</msg>
<status status="PASS" starttime="20240102 11:37:27.682" endtime="20240102 11:37:28.174"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag3}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:37:28.176" level="INFO">Running command 'echo '{
    "ETag": "/s3v/erasure/ozone-test-5727091207/multipartKey3-e878d751-e2ec-4139-bd27-671031e6acf5-111686152706457630-3"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:37:28.201" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:37:28.201" level="INFO">${output} = /s3v/erasure/ozone-test-5727091207/multipartKey3-e878d751-e2ec-4139-bd27-671031e6acf5-111686152706457630-3</msg>
<status status="PASS" starttime="20240102 11:37:28.175" endtime="20240102 11:37:28.201"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:37:28.202" level="INFO">/s3v/erasure/ozone-test-5727091207/multipartKey3-e878d751-e2ec-4139-bd27-671031e6acf5-111686152706457630-3</msg>
<status status="PASS" starttime="20240102 11:37:28.202" endtime="20240102 11:37:28.202"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:37:28.203" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:37:28.202" endtime="20240102 11:37:28.203"/>
</kw>
<msg timestamp="20240102 11:37:28.203" level="INFO">${eTag3} = /s3v/erasure/ozone-test-5727091207/multipartKey3-e878d751-e2ec-4139-bd27-671031e6acf5-111686152706457630-3</msg>
<status status="PASS" starttime="20240102 11:37:28.175" endtime="20240102 11:37:28.203"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:37:28.203" endtime="20240102 11:37:28.203"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 --multipart-upload 'Parts=[{ETag=etag1,PartNumber=1},{ETag=etag2,PartNumber=2}]'</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:37:28.206" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --upload-id e878d751-e2ec-4139-bd27-671031e6acf5-111686152706457630 --bucket erasure --key ozone-test-5727091207/multipartKey3 --multipart-upload 'Parts=[{ETag=etag1,PartNumber=1},{ETag=etag2,PartNumber=2}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:37:28.663" level="INFO">${rc} = 255</msg>
<msg timestamp="20240102 11:37:28.663" level="INFO">${output} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20240102 11:37:28.205" endtime="20240102 11:37:28.663"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:37:28.664" level="INFO">
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified entity tag might not have matched the part's entity tag.</msg>
<status status="PASS" starttime="20240102 11:37:28.664" endtime="20240102 11:37:28.664"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:37:28.665" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:37:28.665" endtime="20240102 11:37:28.665"/>
</kw>
<msg timestamp="20240102 11:37:28.665" level="INFO">${output} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20240102 11:37:28.204" endtime="20240102 11:37:28.665"/>
</kw>
<msg timestamp="20240102 11:37:28.665" level="INFO">${result} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20240102 11:37:28.203" endtime="20240102 11:37:28.665"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidPart</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:37:28.666" endtime="20240102 11:37:28.666"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 --multipart-upload 'Parts=[{ETag=${eTag1},PartNumber=1},{ETag=etag2,PartNumber=2}]'</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:37:28.669" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --upload-id e878d751-e2ec-4139-bd27-671031e6acf5-111686152706457630 --bucket erasure --key ozone-test-5727091207/multipartKey3 --multipart-upload 'Parts=[{ETag=/s3v/erasure/ozone-test-5727091207/multipartKey3-e878d751-e2ec-4139-bd27-671031e6acf5-111686152706457630-1,PartNumber=1},{ETag=etag2,PartNumber=2}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:37:29.121" level="INFO">${rc} = 255</msg>
<msg timestamp="20240102 11:37:29.121" level="INFO">${output} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20240102 11:37:28.667" endtime="20240102 11:37:29.121"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:37:29.122" level="INFO">
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified entity tag might not have matched the part's entity tag.</msg>
<status status="PASS" starttime="20240102 11:37:29.121" endtime="20240102 11:37:29.122"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:37:29.122" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:37:29.122" endtime="20240102 11:37:29.122"/>
</kw>
<msg timestamp="20240102 11:37:29.122" level="INFO">${output} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20240102 11:37:28.667" endtime="20240102 11:37:29.123"/>
</kw>
<msg timestamp="20240102 11:37:29.123" level="INFO">${result} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20240102 11:37:28.666" endtime="20240102 11:37:29.123"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidPart</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:37:29.123" endtime="20240102 11:37:29.123"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 --multipart-upload 'Parts=[{ETag=${eTag1},PartNumber=4},{ETag=etag2,PartNumber=2}]'</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:37:29.126" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --upload-id e878d751-e2ec-4139-bd27-671031e6acf5-111686152706457630 --bucket erasure --key ozone-test-5727091207/multipartKey3 --multipart-upload 'Parts=[{ETag=/s3v/erasure/ozone-test-5727091207/multipartKey3-e878d751-e2ec-4139-bd27-671031e6acf5-111686152706457630-1,PartNumber=4},{ETag=etag2,PartNumber=2}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:37:29.570" level="INFO">${rc} = 255</msg>
<msg timestamp="20240102 11:37:29.570" level="INFO">${output} = 
An error occurred (InvalidPartOrder) when calling the CompleteMultipartUpload operation: The list of parts was not in ascending order. The parts list must be specified in order by part number.</msg>
<status status="PASS" starttime="20240102 11:37:29.125" endtime="20240102 11:37:29.570"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:37:29.571" level="INFO">
An error occurred (InvalidPartOrder) when calling the CompleteMultipartUpload operation: The list of parts was not in ascending order. The parts list must be specified in order by part number.</msg>
<status status="PASS" starttime="20240102 11:37:29.571" endtime="20240102 11:37:29.571"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:37:29.572" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:37:29.571" endtime="20240102 11:37:29.572"/>
</kw>
<msg timestamp="20240102 11:37:29.572" level="INFO">${output} = 
An error occurred (InvalidPartOrder) when calling the CompleteMultipartUpload operation: The list of parts was not in ascending order. The parts list must be specified in order by part number.</msg>
<status status="PASS" starttime="20240102 11:37:29.124" endtime="20240102 11:37:29.572"/>
</kw>
<msg timestamp="20240102 11:37:29.572" level="INFO">${result} = 
An error occurred (InvalidPartOrder) when calling the CompleteMultipartUpload operation: The list of parts was not in ascending order. The parts list must be specified in order by part number.</msg>
<status status="PASS" starttime="20240102 11:37:29.123" endtime="20240102 11:37:29.572"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidPartOrder</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:37:29.572" endtime="20240102 11:37:29.573"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 --multipart-upload 'Parts=[{ETag=${eTag1},PartNumber=1},{ETag=${eTag3},PartNumber=3}]'</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:37:29.576" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --upload-id e878d751-e2ec-4139-bd27-671031e6acf5-111686152706457630 --bucket erasure --key ozone-test-5727091207/multipartKey3 --multipart-upload 'Parts=[{ETag=/s3v/erasure/ozone-test-5727091207/multipartKey3-e878d751-e2ec-4139-bd27-671031e6acf5-111686152706457630-1,PartNumber=1},{ETag=/s3v/erasure/ozone-test-5727091207/multipartKey3-e878d751-e2ec-4139-bd27-671031e6acf5-111686152706457630-3,PartNumber=3}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:37:30.026" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:37:30.026" level="INFO">${output} = {
    "Location": "erasure",
    "Bucket": "erasure",
    "Key": "ozone-test-5727091207/multipartKey3",
    "ETag": "\"0ec3647c7b62826a5b0da9a847312648-3\""
}</msg>
<status status="PASS" starttime="20240102 11:37:29.575" endtime="20240102 11:37:30.026"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:37:30.027" level="INFO">{
    "Location": "erasure",
    "Bucket": "erasure",
    "Key": "ozone-test-5727091207/multipartKey3",
    "ETag": "\"0ec3647c7b62826a5b0da9a847312648-3\""
}</msg>
<status status="PASS" starttime="20240102 11:37:30.026" endtime="20240102 11:37:30.027"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:37:30.027" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:37:30.027" endtime="20240102 11:37:30.027"/>
</kw>
<status status="PASS" starttime="20240102 11:37:29.574" endtime="20240102 11:37:30.027"/>
</kw>
<msg timestamp="20240102 11:37:30.028" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:37:29.574" endtime="20240102 11:37:30.028"/>
</kw>
<msg timestamp="20240102 11:37:30.028" level="INFO">${output} = {
    "Location": "erasure",
    "Bucket": "erasure",
    "Key": "ozone-test-5727091207/multipartKey3",
    "ETag": "\"0ec3647c7b62826a5b0da9a847312648-3\""
}</msg>
<status status="PASS" starttime="20240102 11:37:29.574" endtime="20240102 11:37:30.028"/>
</kw>
<msg timestamp="20240102 11:37:30.028" level="INFO">${result} = {
    "Location": "erasure",
    "Bucket": "erasure",
    "Key": "ozone-test-5727091207/multipartKey3",
    "ETag": "\"0ec3647c7b62826a5b0da9a847312648-3\""
}</msg>
<status status="PASS" starttime="20240102 11:37:29.573" endtime="20240102 11:37:30.028"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:37:30.028" endtime="20240102 11:37:30.028"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multipartKey3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:37:30.029" endtime="20240102 11:37:30.029"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:37:30.029" endtime="20240102 11:37:30.029"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 /tmp/${PREFIX}-multipartKey3.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:37:30.033" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket erasure --key ozone-test-5727091207/multipartKey3 /tmp/ozone-test-5727091207-multipartKey3.result 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:37:30.587" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:37:30.587" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 02 Jan 2024 11:37:29 GMT",
    "ContentLength": 5242886,
    "ETag": "\"0ec3647c7b62826a5b0da9a847312648-3\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20240102 11:37:30.031" endtime="20240102 11:37:30.587"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:37:30.588" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 02 Jan 2024 11:37:29 GMT",
    "ContentLength": 5242886,
    "ETag": "\"0ec3647c7b62826a5b0da9a847312648-3\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Tue, 02 Jan 2024 11:37:30 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20240102 11:37:30.588" endtime="20240102 11:37:30.588"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:37:30.589" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:37:30.588" endtime="20240102 11:37:30.589"/>
</kw>
<status status="PASS" starttime="20240102 11:37:30.031" endtime="20240102 11:37:30.589"/>
</kw>
<msg timestamp="20240102 11:37:30.589" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:37:30.031" endtime="20240102 11:37:30.589"/>
</kw>
<msg timestamp="20240102 11:37:30.589" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 02 Jan 2024 11:37:29 GMT",
    "ContentLength": 5242886,
    "ETag": "\"0ec3647c7b62826a5b0da9a847312648-3\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20240102 11:37:30.030" endtime="20240102 11:37:30.589"/>
</kw>
<msg timestamp="20240102 11:37:30.590" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 02 Jan 2024 11:37:29 GMT",
    "ContentLength": 5242886,
    "ETag": "\"0ec3647c7b62826a5b0da9a847312648-3\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20240102 11:37:30.030" endtime="20240102 11:37:30.590"/>
</kw>
<kw name="Execute" library="os">
<arg>cat /tmp/part1 /tmp/part3 &gt; /tmp/${PREFIX}-multipartKey3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:37:30.593" level="INFO">Running command 'cat /tmp/part1 /tmp/part3 &gt; /tmp/ozone-test-5727091207-multipartKey3'.</msg>
<msg timestamp="20240102 11:37:30.597" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:37:30.597" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240102 11:37:30.591" endtime="20240102 11:37:30.598"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:37:30.598" level="INFO"/>
<status status="PASS" starttime="20240102 11:37:30.598" endtime="20240102 11:37:30.598"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:37:30.599" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:37:30.599" endtime="20240102 11:37:30.599"/>
</kw>
<status status="PASS" starttime="20240102 11:37:30.590" endtime="20240102 11:37:30.599"/>
</kw>
<msg timestamp="20240102 11:37:30.599" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:37:30.590" endtime="20240102 11:37:30.599"/>
</kw>
<status status="PASS" starttime="20240102 11:37:30.590" endtime="20240102 11:37:30.599"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/${PREFIX}-multipartKey3</arg>
<arg>/tmp/${PREFIX}-multipartKey3.result</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:37:30.602" level="INFO">Running command 'md5sum /tmp/ozone-test-5727091207-multipartKey3 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:37:30.613" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:37:30.613" level="INFO">${output} = 290c1977023d5f6ba403d82a0006fa02</msg>
<status status="PASS" starttime="20240102 11:37:30.601" endtime="20240102 11:37:30.613"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:37:30.614" level="INFO">290c1977023d5f6ba403d82a0006fa02</msg>
<status status="PASS" starttime="20240102 11:37:30.613" endtime="20240102 11:37:30.614"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:37:30.614" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:37:30.614" endtime="20240102 11:37:30.615"/>
</kw>
<status status="PASS" starttime="20240102 11:37:30.601" endtime="20240102 11:37:30.615"/>
</kw>
<msg timestamp="20240102 11:37:30.615" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:37:30.600" endtime="20240102 11:37:30.615"/>
</kw>
<msg timestamp="20240102 11:37:30.615" level="INFO">${checksumbefore} = 290c1977023d5f6ba403d82a0006fa02</msg>
<status status="PASS" starttime="20240102 11:37:30.600" endtime="20240102 11:37:30.615"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:37:30.618" level="INFO">Running command 'md5sum /tmp/ozone-test-5727091207-multipartKey3.result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:37:30.628" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:37:30.628" level="INFO">${output} = 290c1977023d5f6ba403d82a0006fa02</msg>
<status status="PASS" starttime="20240102 11:37:30.616" endtime="20240102 11:37:30.628"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:37:30.629" level="INFO">290c1977023d5f6ba403d82a0006fa02</msg>
<status status="PASS" starttime="20240102 11:37:30.629" endtime="20240102 11:37:30.629"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:37:30.630" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:37:30.629" endtime="20240102 11:37:30.630"/>
</kw>
<status status="PASS" starttime="20240102 11:37:30.616" endtime="20240102 11:37:30.630"/>
</kw>
<msg timestamp="20240102 11:37:30.630" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:37:30.616" endtime="20240102 11:37:30.630"/>
</kw>
<msg timestamp="20240102 11:37:30.630" level="INFO">${checksumafter} = 290c1977023d5f6ba403d82a0006fa02</msg>
<status status="PASS" starttime="20240102 11:37:30.615" endtime="20240102 11:37:30.630"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240102 11:37:30.631" endtime="20240102 11:37:30.631"/>
</kw>
<status status="PASS" starttime="20240102 11:37:30.600" endtime="20240102 11:37:30.631"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 --part-number 1 /tmp/${PREFIX}-multipartKey3-part1.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:37:30.634" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket erasure --key ozone-test-5727091207/multipartKey3 --part-number 1 /tmp/ozone-test-5727091207-multipartKey3-part1.result 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:37:31.179" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:37:31.179" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 02 Jan 2024 11:37:29 GMT",
    "ContentLength": 5242880,
    "ETag": "\"0ec3647c7b62826a5b0da9a847312648-3\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20240102 11:37:30.633" endtime="20240102 11:37:31.179"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:37:31.180" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 02 Jan 2024 11:37:29 GMT",
    "ContentLength": 5242880,
    "ETag": "\"0ec3647c7b62826a5b0da9a847312648-3\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Tue, 02 Jan 2024 11:37:31 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20240102 11:37:31.179" endtime="20240102 11:37:31.180"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:37:31.181" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:37:31.180" endtime="20240102 11:37:31.181"/>
</kw>
<status status="PASS" starttime="20240102 11:37:30.632" endtime="20240102 11:37:31.181"/>
</kw>
<msg timestamp="20240102 11:37:31.181" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:37:30.632" endtime="20240102 11:37:31.181"/>
</kw>
<msg timestamp="20240102 11:37:31.181" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 02 Jan 2024 11:37:29 GMT",
    "ContentLength": 5242880,
    "ETag": "\"0ec3647c7b62826a5b0da9a847312648-3\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20240102 11:37:30.632" endtime="20240102 11:37:31.181"/>
</kw>
<msg timestamp="20240102 11:37:31.181" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 02 Jan 2024 11:37:29 GMT",
    "ContentLength": 5242880,
    "ETag": "\"0ec3647c7b62826a5b0da9a847312648-3\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20240102 11:37:30.631" endtime="20240102 11:37:31.181"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/part1</arg>
<arg>/tmp/${PREFIX}-multipartKey3-part1.result</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:37:31.185" level="INFO">Running command 'md5sum /tmp/part1 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:37:31.196" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:37:31.196" level="INFO">${output} = de045a29eed20ca6becd49df61d44cdc</msg>
<status status="PASS" starttime="20240102 11:37:31.183" endtime="20240102 11:37:31.196"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:37:31.197" level="INFO">de045a29eed20ca6becd49df61d44cdc</msg>
<status status="PASS" starttime="20240102 11:37:31.196" endtime="20240102 11:37:31.197"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:37:31.197" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:37:31.197" endtime="20240102 11:37:31.197"/>
</kw>
<status status="PASS" starttime="20240102 11:37:31.183" endtime="20240102 11:37:31.197"/>
</kw>
<msg timestamp="20240102 11:37:31.198" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:37:31.182" endtime="20240102 11:37:31.198"/>
</kw>
<msg timestamp="20240102 11:37:31.198" level="INFO">${checksumbefore} = de045a29eed20ca6becd49df61d44cdc</msg>
<status status="PASS" starttime="20240102 11:37:31.182" endtime="20240102 11:37:31.198"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:37:31.200" level="INFO">Running command 'md5sum /tmp/ozone-test-5727091207-multipartKey3-part1.result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:37:31.211" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:37:31.211" level="INFO">${output} = de045a29eed20ca6becd49df61d44cdc</msg>
<status status="PASS" starttime="20240102 11:37:31.199" endtime="20240102 11:37:31.211"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:37:31.212" level="INFO">de045a29eed20ca6becd49df61d44cdc</msg>
<status status="PASS" starttime="20240102 11:37:31.212" endtime="20240102 11:37:31.212"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:37:31.213" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:37:31.212" endtime="20240102 11:37:31.213"/>
</kw>
<status status="PASS" starttime="20240102 11:37:31.199" endtime="20240102 11:37:31.213"/>
</kw>
<msg timestamp="20240102 11:37:31.213" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:37:31.198" endtime="20240102 11:37:31.213"/>
</kw>
<msg timestamp="20240102 11:37:31.213" level="INFO">${checksumafter} = de045a29eed20ca6becd49df61d44cdc</msg>
<status status="PASS" starttime="20240102 11:37:31.198" endtime="20240102 11:37:31.213"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240102 11:37:31.213" endtime="20240102 11:37:31.214"/>
</kw>
<status status="PASS" starttime="20240102 11:37:31.182" endtime="20240102 11:37:31.214"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 --part-number 3 /tmp/${PREFIX}-multipartKey3-part3.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:37:31.217" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket erasure --key ozone-test-5727091207/multipartKey3 --part-number 3 /tmp/ozone-test-5727091207-multipartKey3-part3.result 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:37:31.714" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:37:31.714" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 02 Jan 2024 11:37:29 GMT",
    "ContentLength": 6,
    "ETag": "\"0ec3647c7b62826a5b0da9a847312648-3\"",
    "CacheControl": "no-cache",
    "C...</msg>
<status status="PASS" starttime="20240102 11:37:31.215" endtime="20240102 11:37:31.714"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:37:31.715" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 02 Jan 2024 11:37:29 GMT",
    "ContentLength": 6,
    "ETag": "\"0ec3647c7b62826a5b0da9a847312648-3\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Tue, 02 Jan 2024 11:37:31 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20240102 11:37:31.714" endtime="20240102 11:37:31.715"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:37:31.715" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:37:31.715" endtime="20240102 11:37:31.715"/>
</kw>
<status status="PASS" starttime="20240102 11:37:31.215" endtime="20240102 11:37:31.716"/>
</kw>
<msg timestamp="20240102 11:37:31.716" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:37:31.215" endtime="20240102 11:37:31.716"/>
</kw>
<msg timestamp="20240102 11:37:31.716" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 02 Jan 2024 11:37:29 GMT",
    "ContentLength": 6,
    "ETag": "\"0ec3647c7b62826a5b0da9a847312648-3\"",
    "CacheControl": "no-cache",
    "C...</msg>
<status status="PASS" starttime="20240102 11:37:31.214" endtime="20240102 11:37:31.716"/>
</kw>
<msg timestamp="20240102 11:37:31.716" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 02 Jan 2024 11:37:29 GMT",
    "ContentLength": 6,
    "ETag": "\"0ec3647c7b62826a5b0da9a847312648-3\"",
    "CacheControl": "no-cache",
    "C...</msg>
<status status="PASS" starttime="20240102 11:37:31.214" endtime="20240102 11:37:31.716"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/part3</arg>
<arg>/tmp/${PREFIX}-multipartKey3-part3.result</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:37:31.719" level="INFO">Running command 'md5sum /tmp/part3 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:37:31.721" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:37:31.721" level="INFO">${output} = 804f368834f04e8d39a8a7c76ba870e3</msg>
<status status="PASS" starttime="20240102 11:37:31.718" endtime="20240102 11:37:31.721"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:37:31.722" level="INFO">804f368834f04e8d39a8a7c76ba870e3</msg>
<status status="PASS" starttime="20240102 11:37:31.722" endtime="20240102 11:37:31.722"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:37:31.723" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:37:31.722" endtime="20240102 11:37:31.723"/>
</kw>
<status status="PASS" starttime="20240102 11:37:31.718" endtime="20240102 11:37:31.723"/>
</kw>
<msg timestamp="20240102 11:37:31.723" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:37:31.717" endtime="20240102 11:37:31.723"/>
</kw>
<msg timestamp="20240102 11:37:31.723" level="INFO">${checksumbefore} = 804f368834f04e8d39a8a7c76ba870e3</msg>
<status status="PASS" starttime="20240102 11:37:31.717" endtime="20240102 11:37:31.723"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:37:31.726" level="INFO">Running command 'md5sum /tmp/ozone-test-5727091207-multipartKey3-part3.result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:37:31.727" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:37:31.728" level="INFO">${output} = 804f368834f04e8d39a8a7c76ba870e3</msg>
<status status="PASS" starttime="20240102 11:37:31.724" endtime="20240102 11:37:31.728"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:37:31.729" level="INFO">804f368834f04e8d39a8a7c76ba870e3</msg>
<status status="PASS" starttime="20240102 11:37:31.728" endtime="20240102 11:37:31.729"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:37:31.729" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:37:31.729" endtime="20240102 11:37:31.729"/>
</kw>
<status status="PASS" starttime="20240102 11:37:31.724" endtime="20240102 11:37:31.729"/>
</kw>
<msg timestamp="20240102 11:37:31.729" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:37:31.724" endtime="20240102 11:37:31.729"/>
</kw>
<msg timestamp="20240102 11:37:31.730" level="INFO">${checksumafter} = 804f368834f04e8d39a8a7c76ba870e3</msg>
<status status="PASS" starttime="20240102 11:37:31.723" endtime="20240102 11:37:31.730"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240102 11:37:31.730" endtime="20240102 11:37:31.730"/>
</kw>
<status status="PASS" starttime="20240102 11:37:31.716" endtime="20240102 11:37:31.730"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20240102 11:37:24.950" endtime="20240102 11:37:31.730"/>
</test>
<test id="s1-s1-s8-t6" name="Test abort Multipart upload" line="198">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20240102 11:37:31.732" level="INFO">${randStr} = 5391798798</msg>
<status status="PASS" starttime="20240102 11:37:31.732" endtime="20240102 11:37:31.732"/>
</kw>
<msg timestamp="20240102 11:37:31.733" level="INFO">${random} = ozone-test-5391798798</msg>
<status status="PASS" starttime="20240102 11:37:31.732" endtime="20240102 11:37:31.733"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20240102 11:37:31.733" level="INFO">${PREFIX} = ozone-test-5391798798</msg>
<status status="PASS" starttime="20240102 11:37:31.733" endtime="20240102 11:37:31.733"/>
</kw>
<status status="PASS" starttime="20240102 11:37:31.731" endtime="20240102 11:37:31.733"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/multipartKey4 --storage-class REDUCED_REDUNDANCY</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:37:31.736" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket erasure --key ozone-test-5391798798/multipartKey4 --storage-class REDUCED_REDUNDANCY 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:37:32.201" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:37:32.201" level="INFO">${output} = {
    "Bucket": "erasure",
    "Key": "ozone-test-5391798798/multipartKey4",
    "UploadId": "6f5708b3-ffef-4dae-b6c7-e1a13010291e-111686153152364578"
}</msg>
<status status="PASS" starttime="20240102 11:37:31.735" endtime="20240102 11:37:32.201"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:37:32.202" level="INFO">{
    "Bucket": "erasure",
    "Key": "ozone-test-5391798798/multipartKey4",
    "UploadId": "6f5708b3-ffef-4dae-b6c7-e1a13010291e-111686153152364578"
}</msg>
<status status="PASS" starttime="20240102 11:37:32.201" endtime="20240102 11:37:32.202"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:37:32.202" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:37:32.202" endtime="20240102 11:37:32.202"/>
</kw>
<status status="PASS" starttime="20240102 11:37:31.734" endtime="20240102 11:37:32.202"/>
</kw>
<msg timestamp="20240102 11:37:32.202" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:37:31.734" endtime="20240102 11:37:32.202"/>
</kw>
<msg timestamp="20240102 11:37:32.203" level="INFO">${output} = {
    "Bucket": "erasure",
    "Key": "ozone-test-5391798798/multipartKey4",
    "UploadId": "6f5708b3-ffef-4dae-b6c7-e1a13010291e-111686153152364578"
}</msg>
<status status="PASS" starttime="20240102 11:37:31.734" endtime="20240102 11:37:32.203"/>
</kw>
<msg timestamp="20240102 11:37:32.203" level="INFO">${result} = {
    "Bucket": "erasure",
    "Key": "ozone-test-5391798798/multipartKey4",
    "UploadId": "6f5708b3-ffef-4dae-b6c7-e1a13010291e-111686153152364578"
}</msg>
<status status="PASS" starttime="20240102 11:37:31.733" endtime="20240102 11:37:32.203"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${uploadID}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:37:32.205" level="INFO">Running command 'echo '{
    "Bucket": "erasure",
    "Key": "ozone-test-5391798798/multipartKey4",
    "UploadId": "6f5708b3-ffef-4dae-b6c7-e1a13010291e-111686153152364578"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:37:32.230" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:37:32.230" level="INFO">${output} = 6f5708b3-ffef-4dae-b6c7-e1a13010291e-111686153152364578</msg>
<status status="PASS" starttime="20240102 11:37:32.203" endtime="20240102 11:37:32.230"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:37:32.231" level="INFO">6f5708b3-ffef-4dae-b6c7-e1a13010291e-111686153152364578</msg>
<status status="PASS" starttime="20240102 11:37:32.230" endtime="20240102 11:37:32.231"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:37:32.231" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:37:32.231" endtime="20240102 11:37:32.232"/>
</kw>
<msg timestamp="20240102 11:37:32.232" level="INFO">${uploadID} = 6f5708b3-ffef-4dae-b6c7-e1a13010291e-111686153152364578</msg>
<status status="PASS" starttime="20240102 11:37:32.203" endtime="20240102 11:37:32.232"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:37:32.232" endtime="20240102 11:37:32.232"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multipartKey</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:37:32.232" endtime="20240102 11:37:32.233"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>UploadId</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:37:32.233" endtime="20240102 11:37:32.233"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>abort-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/multipartKey4 --upload-id ${uploadID}</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:37:32.235" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 abort-multipart-upload --bucket erasure --key ozone-test-5391798798/multipartKey4 --upload-id 6f5708b3-ffef-4dae-b6c7-e1a13010291e-111686153152364578 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:37:32.709" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:37:32.709" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240102 11:37:32.234" endtime="20240102 11:37:32.709"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:37:32.710" level="INFO"/>
<status status="PASS" starttime="20240102 11:37:32.710" endtime="20240102 11:37:32.710"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:37:32.711" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:37:32.710" endtime="20240102 11:37:32.711"/>
</kw>
<msg timestamp="20240102 11:37:32.711" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240102 11:37:32.234" endtime="20240102 11:37:32.711"/>
</kw>
<msg timestamp="20240102 11:37:32.711" level="INFO">${result} = </msg>
<status status="PASS" starttime="20240102 11:37:32.233" endtime="20240102 11:37:32.711"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20240102 11:37:31.731" endtime="20240102 11:37:32.711"/>
</test>
<test id="s1-s1-s8-t7" name="Test abort Multipart upload with invalid uploadId" line="207">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20240102 11:37:32.714" level="INFO">${randStr} = 5920216721</msg>
<status status="PASS" starttime="20240102 11:37:32.713" endtime="20240102 11:37:32.714"/>
</kw>
<msg timestamp="20240102 11:37:32.714" level="INFO">${random} = ozone-test-5920216721</msg>
<status status="PASS" starttime="20240102 11:37:32.713" endtime="20240102 11:37:32.714"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20240102 11:37:32.714" level="INFO">${PREFIX} = ozone-test-5920216721</msg>
<status status="PASS" starttime="20240102 11:37:32.714" endtime="20240102 11:37:32.714"/>
</kw>
<status status="PASS" starttime="20240102 11:37:32.713" endtime="20240102 11:37:32.714"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>abort-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/multipartKey5 --upload-id "random"</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:37:32.717" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 abort-multipart-upload --bucket erasure --key ozone-test-5920216721/multipartKey5 --upload-id "random" 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:37:33.187" level="INFO">${rc} = 255</msg>
<msg timestamp="20240102 11:37:33.187" level="INFO">${output} = 
An error occurred (NoSuchUpload) when calling the AbortMultipartUpload operation: The specified multipart upload does not exist. The upload ID might be invalid, or the multipart upload might have bee...</msg>
<status status="PASS" starttime="20240102 11:37:32.716" endtime="20240102 11:37:33.187"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:37:33.188" level="INFO">
An error occurred (NoSuchUpload) when calling the AbortMultipartUpload operation: The specified multipart upload does not exist. The upload ID might be invalid, or the multipart upload might have been aborted or completed.</msg>
<status status="PASS" starttime="20240102 11:37:33.188" endtime="20240102 11:37:33.188"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:37:33.189" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:37:33.189" endtime="20240102 11:37:33.189"/>
</kw>
<msg timestamp="20240102 11:37:33.189" level="INFO">${output} = 
An error occurred (NoSuchUpload) when calling the AbortMultipartUpload operation: The specified multipart upload does not exist. The upload ID might be invalid, or the multipart upload might have bee...</msg>
<status status="PASS" starttime="20240102 11:37:32.715" endtime="20240102 11:37:33.189"/>
</kw>
<msg timestamp="20240102 11:37:33.189" level="INFO">${result} = 
An error occurred (NoSuchUpload) when calling the AbortMultipartUpload operation: The specified multipart upload does not exist. The upload ID might be invalid, or the multipart upload might have bee...</msg>
<status status="PASS" starttime="20240102 11:37:32.714" endtime="20240102 11:37:33.189"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20240102 11:37:32.712" endtime="20240102 11:37:33.190"/>
</test>
<test id="s1-s1-s8-t8" name="Upload part with Incorrect uploadID" line="210">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20240102 11:37:33.192" level="INFO">${randStr} = 5788869696</msg>
<status status="PASS" starttime="20240102 11:37:33.191" endtime="20240102 11:37:33.192"/>
</kw>
<msg timestamp="20240102 11:37:33.192" level="INFO">${random} = ozone-test-5788869696</msg>
<status status="PASS" starttime="20240102 11:37:33.191" endtime="20240102 11:37:33.192"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20240102 11:37:33.193" level="INFO">${PREFIX} = ozone-test-5788869696</msg>
<status status="PASS" starttime="20240102 11:37:33.192" endtime="20240102 11:37:33.193"/>
</kw>
<status status="PASS" starttime="20240102 11:37:33.191" endtime="20240102 11:37:33.193"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/multipartKey</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:37:33.196" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket erasure --key ozone-test-5788869696/multipartKey 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:37:33.655" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:37:33.655" level="INFO">${output} = {
    "Bucket": "erasure",
    "Key": "ozone-test-5788869696/multipartKey",
    "UploadId": "f08d8469-f974-4799-9239-145b22fc1780-111686153247719459"
}</msg>
<status status="PASS" starttime="20240102 11:37:33.194" endtime="20240102 11:37:33.655"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:37:33.656" level="INFO">{
    "Bucket": "erasure",
    "Key": "ozone-test-5788869696/multipartKey",
    "UploadId": "f08d8469-f974-4799-9239-145b22fc1780-111686153247719459"
}</msg>
<status status="PASS" starttime="20240102 11:37:33.656" endtime="20240102 11:37:33.657"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:37:33.657" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:37:33.657" endtime="20240102 11:37:33.657"/>
</kw>
<status status="PASS" starttime="20240102 11:37:33.194" endtime="20240102 11:37:33.657"/>
</kw>
<msg timestamp="20240102 11:37:33.657" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:37:33.194" endtime="20240102 11:37:33.657"/>
</kw>
<msg timestamp="20240102 11:37:33.658" level="INFO">${output} = {
    "Bucket": "erasure",
    "Key": "ozone-test-5788869696/multipartKey",
    "UploadId": "f08d8469-f974-4799-9239-145b22fc1780-111686153247719459"
}</msg>
<status status="PASS" starttime="20240102 11:37:33.193" endtime="20240102 11:37:33.658"/>
</kw>
<msg timestamp="20240102 11:37:33.658" level="INFO">${result} = {
    "Bucket": "erasure",
    "Key": "ozone-test-5788869696/multipartKey",
    "UploadId": "f08d8469-f974-4799-9239-145b22fc1780-111686153247719459"
}</msg>
<status status="PASS" starttime="20240102 11:37:33.193" endtime="20240102 11:37:33.658"/>
</kw>
<kw name="Execute" library="os">
<arg>echo "Multipart upload" &gt; /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:37:33.660" level="INFO">Running command 'echo "Multipart upload" &gt; /tmp/testfile'.</msg>
<msg timestamp="20240102 11:37:33.662" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:37:33.662" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240102 11:37:33.659" endtime="20240102 11:37:33.662"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:37:33.662" level="INFO"/>
<status status="PASS" starttime="20240102 11:37:33.662" endtime="20240102 11:37:33.662"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:37:33.663" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:37:33.663" endtime="20240102 11:37:33.663"/>
</kw>
<status status="PASS" starttime="20240102 11:37:33.659" endtime="20240102 11:37:33.663"/>
</kw>
<msg timestamp="20240102 11:37:33.663" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:37:33.658" endtime="20240102 11:37:33.663"/>
</kw>
<status status="PASS" starttime="20240102 11:37:33.658" endtime="20240102 11:37:33.663"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey --part-number 1 --body /tmp/testfile --upload-id "random"</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:37:33.666" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket erasure --key ozone-test-5788869696/multipartKey --part-number 1 --body /tmp/testfile --upload-id "random" 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:37:34.120" level="INFO">${rc} = 255</msg>
<msg timestamp="20240102 11:37:34.120" level="INFO">${output} = 
An error occurred (NoSuchUpload) when calling the UploadPart operation: The specified multipart upload does not exist. The upload ID might be invalid, or the multipart upload might have been aborted ...</msg>
<status status="PASS" starttime="20240102 11:37:33.664" endtime="20240102 11:37:34.120"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:37:34.121" level="INFO">
An error occurred (NoSuchUpload) when calling the UploadPart operation: The specified multipart upload does not exist. The upload ID might be invalid, or the multipart upload might have been aborted or completed.</msg>
<status status="PASS" starttime="20240102 11:37:34.120" endtime="20240102 11:37:34.121"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:37:34.121" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:37:34.121" endtime="20240102 11:37:34.121"/>
</kw>
<msg timestamp="20240102 11:37:34.122" level="INFO">${output} = 
An error occurred (NoSuchUpload) when calling the UploadPart operation: The specified multipart upload does not exist. The upload ID might be invalid, or the multipart upload might have been aborted ...</msg>
<status status="PASS" starttime="20240102 11:37:33.664" endtime="20240102 11:37:34.122"/>
</kw>
<msg timestamp="20240102 11:37:34.122" level="INFO">${result} = 
An error occurred (NoSuchUpload) when calling the UploadPart operation: The specified multipart upload does not exist. The upload ID might be invalid, or the multipart upload might have been aborted ...</msg>
<status status="PASS" starttime="20240102 11:37:33.664" endtime="20240102 11:37:34.122"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NoSuchUpload</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:37:34.122" endtime="20240102 11:37:34.122"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20240102 11:37:33.190" endtime="20240102 11:37:34.122"/>
</test>
<test id="s1-s1-s8-t9" name="Test list parts" line="216">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20240102 11:37:34.125" level="INFO">${randStr} = 4443196438</msg>
<status status="PASS" starttime="20240102 11:37:34.124" endtime="20240102 11:37:34.125"/>
</kw>
<msg timestamp="20240102 11:37:34.125" level="INFO">${random} = ozone-test-4443196438</msg>
<status status="PASS" starttime="20240102 11:37:34.124" endtime="20240102 11:37:34.125"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20240102 11:37:34.126" level="INFO">${PREFIX} = ozone-test-4443196438</msg>
<status status="PASS" starttime="20240102 11:37:34.125" endtime="20240102 11:37:34.126"/>
</kw>
<status status="PASS" starttime="20240102 11:37:34.124" endtime="20240102 11:37:34.126"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/multipartKey5</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:37:34.129" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket erasure --key ozone-test-4443196438/multipartKey5 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:37:34.593" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:37:34.593" level="INFO">${output} = {
    "Bucket": "erasure",
    "Key": "ozone-test-4443196438/multipartKey5",
    "UploadId": "c04f0a25-d061-4496-8d65-f0152ec3c1ba-111686153308733477"
}</msg>
<status status="PASS" starttime="20240102 11:37:34.127" endtime="20240102 11:37:34.594"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:37:34.594" level="INFO">{
    "Bucket": "erasure",
    "Key": "ozone-test-4443196438/multipartKey5",
    "UploadId": "c04f0a25-d061-4496-8d65-f0152ec3c1ba-111686153308733477"
}</msg>
<status status="PASS" starttime="20240102 11:37:34.594" endtime="20240102 11:37:34.594"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:37:34.595" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:37:34.595" endtime="20240102 11:37:34.595"/>
</kw>
<status status="PASS" starttime="20240102 11:37:34.127" endtime="20240102 11:37:34.595"/>
</kw>
<msg timestamp="20240102 11:37:34.595" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:37:34.127" endtime="20240102 11:37:34.595"/>
</kw>
<msg timestamp="20240102 11:37:34.595" level="INFO">${output} = {
    "Bucket": "erasure",
    "Key": "ozone-test-4443196438/multipartKey5",
    "UploadId": "c04f0a25-d061-4496-8d65-f0152ec3c1ba-111686153308733477"
}</msg>
<status status="PASS" starttime="20240102 11:37:34.126" endtime="20240102 11:37:34.596"/>
</kw>
<msg timestamp="20240102 11:37:34.596" level="INFO">${result} = {
    "Bucket": "erasure",
    "Key": "ozone-test-4443196438/multipartKey5",
    "UploadId": "c04f0a25-d061-4496-8d65-f0152ec3c1ba-111686153308733477"
}</msg>
<status status="PASS" starttime="20240102 11:37:34.126" endtime="20240102 11:37:34.596"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${uploadID}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:37:34.598" level="INFO">Running command 'echo '{
    "Bucket": "erasure",
    "Key": "ozone-test-4443196438/multipartKey5",
    "UploadId": "c04f0a25-d061-4496-8d65-f0152ec3c1ba-111686153308733477"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:37:34.624" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:37:34.624" level="INFO">${output} = c04f0a25-d061-4496-8d65-f0152ec3c1ba-111686153308733477</msg>
<status status="PASS" starttime="20240102 11:37:34.596" endtime="20240102 11:37:34.624"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:37:34.625" level="INFO">c04f0a25-d061-4496-8d65-f0152ec3c1ba-111686153308733477</msg>
<status status="PASS" starttime="20240102 11:37:34.624" endtime="20240102 11:37:34.625"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:37:34.625" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:37:34.625" endtime="20240102 11:37:34.625"/>
</kw>
<msg timestamp="20240102 11:37:34.626" level="INFO">${uploadID} = c04f0a25-d061-4496-8d65-f0152ec3c1ba-111686153308733477</msg>
<status status="PASS" starttime="20240102 11:37:34.596" endtime="20240102 11:37:34.626"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:37:34.626" endtime="20240102 11:37:34.626"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multipartKey</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:37:34.626" endtime="20240102 11:37:34.627"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>UploadId</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:37:34.627" endtime="20240102 11:37:34.627"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Create Random file</arg>
<arg>5</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Create Random file">
<arg>5</arg>
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=${size_in_megabytes} status=none</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:37:34.631" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=5 status=none 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:37:34.649" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:37:34.649" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240102 11:37:34.629" endtime="20240102 11:37:34.649"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:37:34.650" level="INFO"/>
<status status="PASS" starttime="20240102 11:37:34.649" endtime="20240102 11:37:34.650"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:37:34.650" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:37:34.650" endtime="20240102 11:37:34.651"/>
</kw>
<status status="PASS" starttime="20240102 11:37:34.629" endtime="20240102 11:37:34.651"/>
</kw>
<msg timestamp="20240102 11:37:34.651" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:37:34.629" endtime="20240102 11:37:34.651"/>
</kw>
<status status="PASS" starttime="20240102 11:37:34.628" endtime="20240102 11:37:34.651"/>
</kw>
<status status="PASS" starttime="20240102 11:37:34.628" endtime="20240102 11:37:34.651"/>
</kw>
<status status="PASS" starttime="20240102 11:37:34.628" endtime="20240102 11:37:34.651"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey5 --part-number 1 --body /tmp/part1 --upload-id ${uploadID}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:37:34.654" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket erasure --key ozone-test-4443196438/multipartKey5 --part-number 1 --body /tmp/part1 --upload-id c04f0a25-d061-4496-8d65-f0152ec3c1ba-111686153308733477 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:37:35.320" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:37:35.320" level="INFO">${output} = {
    "ETag": "/s3v/erasure/ozone-test-4443196438/multipartKey5-c04f0a25-d061-4496-8d65-f0152ec3c1ba-111686153308733477-1"
}</msg>
<status status="PASS" starttime="20240102 11:37:34.653" endtime="20240102 11:37:35.321"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:37:35.322" level="INFO">{
    "ETag": "/s3v/erasure/ozone-test-4443196438/multipartKey5-c04f0a25-d061-4496-8d65-f0152ec3c1ba-111686153308733477-1"
}</msg>
<status status="PASS" starttime="20240102 11:37:35.321" endtime="20240102 11:37:35.322"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:37:35.322" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:37:35.322" endtime="20240102 11:37:35.322"/>
</kw>
<status status="PASS" starttime="20240102 11:37:34.652" endtime="20240102 11:37:35.323"/>
</kw>
<msg timestamp="20240102 11:37:35.323" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:37:34.652" endtime="20240102 11:37:35.323"/>
</kw>
<msg timestamp="20240102 11:37:35.323" level="INFO">${output} = {
    "ETag": "/s3v/erasure/ozone-test-4443196438/multipartKey5-c04f0a25-d061-4496-8d65-f0152ec3c1ba-111686153308733477-1"
}</msg>
<status status="PASS" starttime="20240102 11:37:34.652" endtime="20240102 11:37:35.323"/>
</kw>
<msg timestamp="20240102 11:37:35.323" level="INFO">${result} = {
    "ETag": "/s3v/erasure/ozone-test-4443196438/multipartKey5-c04f0a25-d061-4496-8d65-f0152ec3c1ba-111686153308733477-1"
}</msg>
<status status="PASS" starttime="20240102 11:37:34.651" endtime="20240102 11:37:35.323"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag1}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:37:35.326" level="INFO">Running command 'echo '{
    "ETag": "/s3v/erasure/ozone-test-4443196438/multipartKey5-c04f0a25-d061-4496-8d65-f0152ec3c1ba-111686153308733477-1"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:37:35.364" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:37:35.364" level="INFO">${output} = /s3v/erasure/ozone-test-4443196438/multipartKey5-c04f0a25-d061-4496-8d65-f0152ec3c1ba-111686153308733477-1</msg>
<status status="PASS" starttime="20240102 11:37:35.324" endtime="20240102 11:37:35.364"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:37:35.365" level="INFO">/s3v/erasure/ozone-test-4443196438/multipartKey5-c04f0a25-d061-4496-8d65-f0152ec3c1ba-111686153308733477-1</msg>
<status status="PASS" starttime="20240102 11:37:35.365" endtime="20240102 11:37:35.365"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:37:35.366" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:37:35.365" endtime="20240102 11:37:35.366"/>
</kw>
<msg timestamp="20240102 11:37:35.366" level="INFO">${eTag1} = /s3v/erasure/ozone-test-4443196438/multipartKey5-c04f0a25-d061-4496-8d65-f0152ec3c1ba-111686153308733477-1</msg>
<status status="PASS" starttime="20240102 11:37:35.323" endtime="20240102 11:37:35.366"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:37:35.366" endtime="20240102 11:37:35.366"/>
</kw>
<kw name="Execute" library="os">
<arg>echo "Part2" &gt; /tmp/part2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:37:35.369" level="INFO">Running command 'echo "Part2" &gt; /tmp/part2'.</msg>
<msg timestamp="20240102 11:37:35.370" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:37:35.370" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240102 11:37:35.368" endtime="20240102 11:37:35.370"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:37:35.371" level="INFO"/>
<status status="PASS" starttime="20240102 11:37:35.371" endtime="20240102 11:37:35.371"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:37:35.372" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:37:35.371" endtime="20240102 11:37:35.372"/>
</kw>
<status status="PASS" starttime="20240102 11:37:35.367" endtime="20240102 11:37:35.372"/>
</kw>
<msg timestamp="20240102 11:37:35.372" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:37:35.367" endtime="20240102 11:37:35.372"/>
</kw>
<status status="PASS" starttime="20240102 11:37:35.366" endtime="20240102 11:37:35.372"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey5 --part-number 2 --body /tmp/part2 --upload-id ${uploadID}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:37:35.375" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket erasure --key ozone-test-4443196438/multipartKey5 --part-number 2 --body /tmp/part2 --upload-id c04f0a25-d061-4496-8d65-f0152ec3c1ba-111686153308733477 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:37:35.881" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:37:35.881" level="INFO">${output} = {
    "ETag": "/s3v/erasure/ozone-test-4443196438/multipartKey5-c04f0a25-d061-4496-8d65-f0152ec3c1ba-111686153308733477-2"
}</msg>
<status status="PASS" starttime="20240102 11:37:35.374" endtime="20240102 11:37:35.881"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:37:35.882" level="INFO">{
    "ETag": "/s3v/erasure/ozone-test-4443196438/multipartKey5-c04f0a25-d061-4496-8d65-f0152ec3c1ba-111686153308733477-2"
}</msg>
<status status="PASS" starttime="20240102 11:37:35.881" endtime="20240102 11:37:35.882"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:37:35.882" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:37:35.882" endtime="20240102 11:37:35.882"/>
</kw>
<status status="PASS" starttime="20240102 11:37:35.374" endtime="20240102 11:37:35.883"/>
</kw>
<msg timestamp="20240102 11:37:35.883" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:37:35.373" endtime="20240102 11:37:35.883"/>
</kw>
<msg timestamp="20240102 11:37:35.883" level="INFO">${output} = {
    "ETag": "/s3v/erasure/ozone-test-4443196438/multipartKey5-c04f0a25-d061-4496-8d65-f0152ec3c1ba-111686153308733477-2"
}</msg>
<status status="PASS" starttime="20240102 11:37:35.373" endtime="20240102 11:37:35.883"/>
</kw>
<msg timestamp="20240102 11:37:35.883" level="INFO">${result} = {
    "ETag": "/s3v/erasure/ozone-test-4443196438/multipartKey5-c04f0a25-d061-4496-8d65-f0152ec3c1ba-111686153308733477-2"
}</msg>
<status status="PASS" starttime="20240102 11:37:35.372" endtime="20240102 11:37:35.883"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag2}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:37:35.885" level="INFO">Running command 'echo '{
    "ETag": "/s3v/erasure/ozone-test-4443196438/multipartKey5-c04f0a25-d061-4496-8d65-f0152ec3c1ba-111686153308733477-2"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:37:35.911" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:37:35.911" level="INFO">${output} = /s3v/erasure/ozone-test-4443196438/multipartKey5-c04f0a25-d061-4496-8d65-f0152ec3c1ba-111686153308733477-2</msg>
<status status="PASS" starttime="20240102 11:37:35.884" endtime="20240102 11:37:35.911"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:37:35.912" level="INFO">/s3v/erasure/ozone-test-4443196438/multipartKey5-c04f0a25-d061-4496-8d65-f0152ec3c1ba-111686153308733477-2</msg>
<status status="PASS" starttime="20240102 11:37:35.911" endtime="20240102 11:37:35.912"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:37:35.913" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:37:35.912" endtime="20240102 11:37:35.913"/>
</kw>
<msg timestamp="20240102 11:37:35.913" level="INFO">${eTag2} = /s3v/erasure/ozone-test-4443196438/multipartKey5-c04f0a25-d061-4496-8d65-f0152ec3c1ba-111686153308733477-2</msg>
<status status="PASS" starttime="20240102 11:37:35.883" endtime="20240102 11:37:35.913"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:37:35.913" endtime="20240102 11:37:35.913"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-parts --bucket ${BUCKET} --key ${PREFIX}/multipartKey5 --upload-id ${uploadID}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:37:35.917" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-parts --bucket erasure --key ozone-test-4443196438/multipartKey5 --upload-id c04f0a25-d061-4496-8d65-f0152ec3c1ba-111686153308733477 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:37:36.392" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:37:36.392" level="INFO">${output} = {
    "Parts": [
        {
            "PartNumber": 1,
            "LastModified": "2024-01-02T11:37:35.251Z",
            "ETag": "/s3v/erasure/ozone-test-4443196438/multipartKey5-c04f0a25-d061-4496...</msg>
<status status="PASS" starttime="20240102 11:37:35.915" endtime="20240102 11:37:36.392"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:37:36.393" level="INFO">{
    "Parts": [
        {
            "PartNumber": 1,
            "LastModified": "2024-01-02T11:37:35.251Z",
            "ETag": "/s3v/erasure/ozone-test-4443196438/multipartKey5-c04f0a25-d061-4496-8d65-f0152ec3c1ba-111686153308733477-1",
            "Size": 5242880
        },
        {
            "PartNumber": 2,
            "LastModified": "2024-01-02T11:37:35.828Z",
            "ETag": "/s3v/erasure/ozone-test-4443196438/multipartKey5-c04f0a25-d061-4496-8d65-f0152ec3c1ba-111686153308733477-2",
            "Size": 6
        }
    ],
    "ChecksumAlgorithm": null,
    "Initiator": null,
    "Owner": null,
    "StorageClass": "STANDARD"
}</msg>
<status status="PASS" starttime="20240102 11:37:36.393" endtime="20240102 11:37:36.393"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:37:36.394" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:37:36.393" endtime="20240102 11:37:36.394"/>
</kw>
<status status="PASS" starttime="20240102 11:37:35.915" endtime="20240102 11:37:36.394"/>
</kw>
<msg timestamp="20240102 11:37:36.394" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:37:35.915" endtime="20240102 11:37:36.394"/>
</kw>
<msg timestamp="20240102 11:37:36.394" level="INFO">${output} = {
    "Parts": [
        {
            "PartNumber": 1,
            "LastModified": "2024-01-02T11:37:35.251Z",
            "ETag": "/s3v/erasure/ozone-test-4443196438/multipartKey5-c04f0a25-d061-4496...</msg>
<status status="PASS" starttime="20240102 11:37:35.914" endtime="20240102 11:37:36.394"/>
</kw>
<msg timestamp="20240102 11:37:36.395" level="INFO">${result} = {
    "Parts": [
        {
            "PartNumber": 1,
            "LastModified": "2024-01-02T11:37:35.251Z",
            "ETag": "/s3v/erasure/ozone-test-4443196438/multipartKey5-c04f0a25-d061-4496...</msg>
<status status="PASS" starttime="20240102 11:37:35.914" endtime="20240102 11:37:36.395"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${part1}</var>
<arg>echo '${result}' | jq -r '.Parts[0].ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:37:36.397" level="INFO">Running command 'echo '{
    "Parts": [
        {
            "PartNumber": 1,
            "LastModified": "2024-01-02T11:37:35.251Z",
            "ETag": "/s3v/erasure/ozone-test-4443196438/multipartKey5-c04f0a25-d061-4496-8d65-f0152ec3c1ba-111686153308733477-1",
            "Size": 5242880
        },
        {
            "PartNumber": 2,
            "LastModified": "2024-01-02T11:37:35.828Z",
            "ETag": "/s3v/erasure/ozone-test-4443196438/multipartKey5-c04f0a25-d061-4496-8d65-f0152ec3c1ba-111686153308733477-2",
            "Size": 6
        }
    ],
    "ChecksumAlgorithm": null,
    "Initiator": null,
    "Owner": null,
    "StorageClass": "STANDARD"
}' | jq -r '.Parts[0].ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:37:36.422" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:37:36.422" level="INFO">${output} = /s3v/erasure/ozone-test-4443196438/multipartKey5-c04f0a25-d061-4496-8d65-f0152ec3c1ba-111686153308733477-1</msg>
<status status="PASS" starttime="20240102 11:37:36.395" endtime="20240102 11:37:36.422"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:37:36.423" level="INFO">/s3v/erasure/ozone-test-4443196438/multipartKey5-c04f0a25-d061-4496-8d65-f0152ec3c1ba-111686153308733477-1</msg>
<status status="PASS" starttime="20240102 11:37:36.423" endtime="20240102 11:37:36.423"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:37:36.424" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:37:36.423" endtime="20240102 11:37:36.424"/>
</kw>
<msg timestamp="20240102 11:37:36.424" level="INFO">${part1} = /s3v/erasure/ozone-test-4443196438/multipartKey5-c04f0a25-d061-4496-8d65-f0152ec3c1ba-111686153308733477-1</msg>
<status status="PASS" starttime="20240102 11:37:36.395" endtime="20240102 11:37:36.424"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${part2}</var>
<arg>echo '${result}' | jq -r '.Parts[1].ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:37:36.426" level="INFO">Running command 'echo '{
    "Parts": [
        {
            "PartNumber": 1,
            "LastModified": "2024-01-02T11:37:35.251Z",
            "ETag": "/s3v/erasure/ozone-test-4443196438/multipartKey5-c04f0a25-d061-4496-8d65-f0152ec3c1ba-111686153308733477-1",
            "Size": 5242880
        },
        {
            "PartNumber": 2,
            "LastModified": "2024-01-02T11:37:35.828Z",
            "ETag": "/s3v/erasure/ozone-test-4443196438/multipartKey5-c04f0a25-d061-4496-8d65-f0152ec3c1ba-111686153308733477-2",
            "Size": 6
        }
    ],
    "ChecksumAlgorithm": null,
    "Initiator": null,
    "Owner": null,
    "StorageClass": "STANDARD"
}' | jq -r '.Parts[1].ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:37:36.451" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:37:36.451" level="INFO">${output} = /s3v/erasure/ozone-test-4443196438/multipartKey5-c04f0a25-d061-4496-8d65-f0152ec3c1ba-111686153308733477-2</msg>
<status status="PASS" starttime="20240102 11:37:36.425" endtime="20240102 11:37:36.451"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:37:36.452" level="INFO">/s3v/erasure/ozone-test-4443196438/multipartKey5-c04f0a25-d061-4496-8d65-f0152ec3c1ba-111686153308733477-2</msg>
<status status="PASS" starttime="20240102 11:37:36.452" endtime="20240102 11:37:36.452"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:37:36.453" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:37:36.452" endtime="20240102 11:37:36.453"/>
</kw>
<msg timestamp="20240102 11:37:36.453" level="INFO">${part2} = /s3v/erasure/ozone-test-4443196438/multipartKey5-c04f0a25-d061-4496-8d65-f0152ec3c1ba-111686153308733477-2</msg>
<status status="PASS" starttime="20240102 11:37:36.424" endtime="20240102 11:37:36.453"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${part1}</arg>
<arg>${eTag1}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240102 11:37:36.453" endtime="20240102 11:37:36.454"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${part2}</arg>
<arg>${eTag2}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:37:36.454" endtime="20240102 11:37:36.454"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>STANDARD</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:37:36.454" endtime="20240102 11:37:36.454"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-parts --bucket ${BUCKET} --key ${PREFIX}/multipartKey5 --upload-id ${uploadID} --max-items 1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:37:36.458" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-parts --bucket erasure --key ozone-test-4443196438/multipartKey5 --upload-id c04f0a25-d061-4496-8d65-f0152ec3c1ba-111686153308733477 --max-items 1 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:37:36.897" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:37:36.897" level="INFO">${output} = {
    "Parts": [
        {
            "PartNumber": 1,
            "LastModified": "2024-01-02T11:37:35.251Z",
            "ETag": "/s3v/erasure/ozone-test-4443196438/multipartKey5-c04f0a25-d061-4496...</msg>
<status status="PASS" starttime="20240102 11:37:36.456" endtime="20240102 11:37:36.897"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:37:36.898" level="INFO">{
    "Parts": [
        {
            "PartNumber": 1,
            "LastModified": "2024-01-02T11:37:35.251Z",
            "ETag": "/s3v/erasure/ozone-test-4443196438/multipartKey5-c04f0a25-d061-4496-8d65-f0152ec3c1ba-111686153308733477-1",
            "Size": 5242880
        }
    ],
    "ChecksumAlgorithm": null,
    "Initiator": null,
    "Owner": null,
    "StorageClass": "STANDARD",
    "NextToken": "eyJQYXJ0TnVtYmVyTWFya2VyIjogbnVsbCwgImJvdG9fdHJ1bmNhdGVfYW1vdW50IjogMX0="
}</msg>
<status status="PASS" starttime="20240102 11:37:36.897" endtime="20240102 11:37:36.898"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:37:36.898" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:37:36.898" endtime="20240102 11:37:36.898"/>
</kw>
<status status="PASS" starttime="20240102 11:37:36.456" endtime="20240102 11:37:36.898"/>
</kw>
<msg timestamp="20240102 11:37:36.898" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:37:36.456" endtime="20240102 11:37:36.899"/>
</kw>
<msg timestamp="20240102 11:37:36.899" level="INFO">${output} = {
    "Parts": [
        {
            "PartNumber": 1,
            "LastModified": "2024-01-02T11:37:35.251Z",
            "ETag": "/s3v/erasure/ozone-test-4443196438/multipartKey5-c04f0a25-d061-4496...</msg>
<status status="PASS" starttime="20240102 11:37:36.455" endtime="20240102 11:37:36.899"/>
</kw>
<msg timestamp="20240102 11:37:36.899" level="INFO">${result} = {
    "Parts": [
        {
            "PartNumber": 1,
            "LastModified": "2024-01-02T11:37:35.251Z",
            "ETag": "/s3v/erasure/ozone-test-4443196438/multipartKey5-c04f0a25-d061-4496...</msg>
<status status="PASS" starttime="20240102 11:37:36.455" endtime="20240102 11:37:36.899"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${part1}</var>
<arg>echo '${result}' | jq -r '.Parts[0].ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:37:36.901" level="INFO">Running command 'echo '{
    "Parts": [
        {
            "PartNumber": 1,
            "LastModified": "2024-01-02T11:37:35.251Z",
            "ETag": "/s3v/erasure/ozone-test-4443196438/multipartKey5-c04f0a25-d061-4496-8d65-f0152ec3c1ba-111686153308733477-1",
            "Size": 5242880
        }
    ],
    "ChecksumAlgorithm": null,
    "Initiator": null,
    "Owner": null,
    "StorageClass": "STANDARD",
    "NextToken": "eyJQYXJ0TnVtYmVyTWFya2VyIjogbnVsbCwgImJvdG9fdHJ1bmNhdGVfYW1vdW50IjogMX0="
}' | jq -r '.Parts[0].ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:37:36.926" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:37:36.927" level="INFO">${output} = /s3v/erasure/ozone-test-4443196438/multipartKey5-c04f0a25-d061-4496-8d65-f0152ec3c1ba-111686153308733477-1</msg>
<status status="PASS" starttime="20240102 11:37:36.900" endtime="20240102 11:37:36.927"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:37:36.927" level="INFO">/s3v/erasure/ozone-test-4443196438/multipartKey5-c04f0a25-d061-4496-8d65-f0152ec3c1ba-111686153308733477-1</msg>
<status status="PASS" starttime="20240102 11:37:36.927" endtime="20240102 11:37:36.927"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:37:36.928" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:37:36.927" endtime="20240102 11:37:36.928"/>
</kw>
<msg timestamp="20240102 11:37:36.928" level="INFO">${part1} = /s3v/erasure/ozone-test-4443196438/multipartKey5-c04f0a25-d061-4496-8d65-f0152ec3c1ba-111686153308733477-1</msg>
<status status="PASS" starttime="20240102 11:37:36.899" endtime="20240102 11:37:36.928"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${token}</var>
<arg>echo '${result}' | jq -r '.NextToken'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:37:36.930" level="INFO">Running command 'echo '{
    "Parts": [
        {
            "PartNumber": 1,
            "LastModified": "2024-01-02T11:37:35.251Z",
            "ETag": "/s3v/erasure/ozone-test-4443196438/multipartKey5-c04f0a25-d061-4496-8d65-f0152ec3c1ba-111686153308733477-1",
            "Size": 5242880
        }
    ],
    "ChecksumAlgorithm": null,
    "Initiator": null,
    "Owner": null,
    "StorageClass": "STANDARD",
    "NextToken": "eyJQYXJ0TnVtYmVyTWFya2VyIjogbnVsbCwgImJvdG9fdHJ1bmNhdGVfYW1vdW50IjogMX0="
}' | jq -r '.NextToken' 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:37:36.955" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:37:36.955" level="INFO">${output} = eyJQYXJ0TnVtYmVyTWFya2VyIjogbnVsbCwgImJvdG9fdHJ1bmNhdGVfYW1vdW50IjogMX0=</msg>
<status status="PASS" starttime="20240102 11:37:36.929" endtime="20240102 11:37:36.955"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:37:36.956" level="INFO">eyJQYXJ0TnVtYmVyTWFya2VyIjogbnVsbCwgImJvdG9fdHJ1bmNhdGVfYW1vdW50IjogMX0=</msg>
<status status="PASS" starttime="20240102 11:37:36.956" endtime="20240102 11:37:36.956"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:37:36.957" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:37:36.957" endtime="20240102 11:37:36.957"/>
</kw>
<msg timestamp="20240102 11:37:36.957" level="INFO">${token} = eyJQYXJ0TnVtYmVyTWFya2VyIjogbnVsbCwgImJvdG9fdHJ1bmNhdGVfYW1vdW50IjogMX0=</msg>
<status status="PASS" starttime="20240102 11:37:36.928" endtime="20240102 11:37:36.957"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${part1}</arg>
<arg>${eTag1}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240102 11:37:36.957" endtime="20240102 11:37:36.958"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>STANDARD</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:37:36.958" endtime="20240102 11:37:36.958"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-parts --bucket ${BUCKET} --key ${PREFIX}/multipartKey5 --upload-id ${uploadID} --max-items 1 --starting-token ${token}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:37:36.962" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-parts --bucket erasure --key ozone-test-4443196438/multipartKey5 --upload-id c04f0a25-d061-4496-8d65-f0152ec3c1ba-111686153308733477 --max-items 1 --starting-token eyJQYXJ0TnVtYmVyTWFya2VyIjogbnVsbCwgImJvdG9fdHJ1bmNhdGVfYW1vdW50IjogMX0= 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:37:37.411" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:37:37.411" level="INFO">${output} = {
    "Parts": [
        {
            "PartNumber": 2,
            "LastModified": "2024-01-02T11:37:35.828Z",
            "ETag": "/s3v/erasure/ozone-test-4443196438/multipartKey5-c04f0a25-d061-4496...</msg>
<status status="PASS" starttime="20240102 11:37:36.960" endtime="20240102 11:37:37.411"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:37:37.412" level="INFO">{
    "Parts": [
        {
            "PartNumber": 2,
            "LastModified": "2024-01-02T11:37:35.828Z",
            "ETag": "/s3v/erasure/ozone-test-4443196438/multipartKey5-c04f0a25-d061-4496-8d65-f0152ec3c1ba-111686153308733477-2",
            "Size": 6
        }
    ],
    "ChecksumAlgorithm": null,
    "Initiator": null,
    "Owner": null,
    "StorageClass": "STANDARD"
}</msg>
<status status="PASS" starttime="20240102 11:37:37.411" endtime="20240102 11:37:37.412"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:37:37.413" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:37:37.412" endtime="20240102 11:37:37.413"/>
</kw>
<status status="PASS" starttime="20240102 11:37:36.960" endtime="20240102 11:37:37.414"/>
</kw>
<msg timestamp="20240102 11:37:37.414" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:37:36.959" endtime="20240102 11:37:37.414"/>
</kw>
<msg timestamp="20240102 11:37:37.415" level="INFO">${output} = {
    "Parts": [
        {
            "PartNumber": 2,
            "LastModified": "2024-01-02T11:37:35.828Z",
            "ETag": "/s3v/erasure/ozone-test-4443196438/multipartKey5-c04f0a25-d061-4496...</msg>
<status status="PASS" starttime="20240102 11:37:36.959" endtime="20240102 11:37:37.415"/>
</kw>
<msg timestamp="20240102 11:37:37.415" level="INFO">${result} = {
    "Parts": [
        {
            "PartNumber": 2,
            "LastModified": "2024-01-02T11:37:35.828Z",
            "ETag": "/s3v/erasure/ozone-test-4443196438/multipartKey5-c04f0a25-d061-4496...</msg>
<status status="PASS" starttime="20240102 11:37:36.958" endtime="20240102 11:37:37.415"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${part2}</var>
<arg>echo '${result}' | jq -r '.Parts[0].ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:37:37.418" level="INFO">Running command 'echo '{
    "Parts": [
        {
            "PartNumber": 2,
            "LastModified": "2024-01-02T11:37:35.828Z",
            "ETag": "/s3v/erasure/ozone-test-4443196438/multipartKey5-c04f0a25-d061-4496-8d65-f0152ec3c1ba-111686153308733477-2",
            "Size": 6
        }
    ],
    "ChecksumAlgorithm": null,
    "Initiator": null,
    "Owner": null,
    "StorageClass": "STANDARD"
}' | jq -r '.Parts[0].ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:37:37.451" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:37:37.451" level="INFO">${output} = /s3v/erasure/ozone-test-4443196438/multipartKey5-c04f0a25-d061-4496-8d65-f0152ec3c1ba-111686153308733477-2</msg>
<status status="PASS" starttime="20240102 11:37:37.416" endtime="20240102 11:37:37.451"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:37:37.452" level="INFO">/s3v/erasure/ozone-test-4443196438/multipartKey5-c04f0a25-d061-4496-8d65-f0152ec3c1ba-111686153308733477-2</msg>
<status status="PASS" starttime="20240102 11:37:37.451" endtime="20240102 11:37:37.452"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:37:37.452" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:37:37.452" endtime="20240102 11:37:37.452"/>
</kw>
<msg timestamp="20240102 11:37:37.452" level="INFO">${part2} = /s3v/erasure/ozone-test-4443196438/multipartKey5-c04f0a25-d061-4496-8d65-f0152ec3c1ba-111686153308733477-2</msg>
<status status="PASS" starttime="20240102 11:37:37.416" endtime="20240102 11:37:37.452"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${part2}</arg>
<arg>${eTag2}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240102 11:37:37.453" endtime="20240102 11:37:37.453"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>STANDARD</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:37:37.453" endtime="20240102 11:37:37.453"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>abort-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/multipartKey5 --upload-id ${uploadID}</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:37:37.456" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 abort-multipart-upload --bucket erasure --key ozone-test-4443196438/multipartKey5 --upload-id c04f0a25-d061-4496-8d65-f0152ec3c1ba-111686153308733477 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:37:37.905" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:37:37.905" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240102 11:37:37.454" endtime="20240102 11:37:37.905"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:37:37.906" level="INFO"/>
<status status="PASS" starttime="20240102 11:37:37.905" endtime="20240102 11:37:37.906"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:37:37.906" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:37:37.906" endtime="20240102 11:37:37.907"/>
</kw>
<msg timestamp="20240102 11:37:37.907" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240102 11:37:37.454" endtime="20240102 11:37:37.907"/>
</kw>
<msg timestamp="20240102 11:37:37.907" level="INFO">${result} = </msg>
<status status="PASS" starttime="20240102 11:37:37.453" endtime="20240102 11:37:37.907"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20240102 11:37:34.123" endtime="20240102 11:37:37.907"/>
</test>
<test id="s1-s1-s8-t10" name="Test Multipart Upload with the simplified aws s3 cp API" line="258">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20240102 11:37:37.909" level="INFO">${randStr} = 7536020005</msg>
<status status="PASS" starttime="20240102 11:37:37.909" endtime="20240102 11:37:37.909"/>
</kw>
<msg timestamp="20240102 11:37:37.910" level="INFO">${random} = ozone-test-7536020005</msg>
<status status="PASS" starttime="20240102 11:37:37.909" endtime="20240102 11:37:37.910"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20240102 11:37:37.910" level="INFO">${PREFIX} = ozone-test-7536020005</msg>
<status status="PASS" starttime="20240102 11:37:37.910" endtime="20240102 11:37:37.910"/>
</kw>
<status status="PASS" starttime="20240102 11:37:37.908" endtime="20240102 11:37:37.910"/>
</kw>
<kw name="Create Random file">
<arg>22</arg>
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=${size_in_megabytes} status=none</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:37:37.913" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=22 status=none 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:37:37.984" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:37:37.985" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240102 11:37:37.912" endtime="20240102 11:37:37.985"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:37:37.985" level="INFO"/>
<status status="PASS" starttime="20240102 11:37:37.985" endtime="20240102 11:37:37.986"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:37:37.986" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:37:37.986" endtime="20240102 11:37:37.986"/>
</kw>
<status status="PASS" starttime="20240102 11:37:37.911" endtime="20240102 11:37:37.986"/>
</kw>
<msg timestamp="20240102 11:37:37.986" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:37:37.911" endtime="20240102 11:37:37.986"/>
</kw>
<status status="PASS" starttime="20240102 11:37:37.911" endtime="20240102 11:37:37.986"/>
</kw>
<status status="PASS" starttime="20240102 11:37:37.910" endtime="20240102 11:37:37.987"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<arg>cp /tmp/part1 s3://${BUCKET}/mpyawscli</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:37:37.990" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 cp /tmp/part1 s3://erasure/mpyawscli 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:37:39.019" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:37:39.019" level="INFO">${output} = Completed 256.0 KiB/22.0 MiB (4.3 MiB/s) with 1 file(s) remaining
Completed 512.0 KiB/22.0 MiB (8.4 MiB/s) with 1 file(s) remaining
Completed 768.0 KiB/22.0 MiB (12.4 MiB/s) with 1 file(s) remaining
C...</msg>
<status status="PASS" starttime="20240102 11:37:37.988" endtime="20240102 11:37:39.019"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:37:39.020" level="INFO">Completed 256.0 KiB/22.0 MiB (4.3 MiB/s) with 1 file(s) remaining
Completed 512.0 KiB/22.0 MiB (8.4 MiB/s) with 1 file(s) remaining
Completed 768.0 KiB/22.0 MiB (12.4 MiB/s) with 1 file(s) remaining
Completed 1.0 MiB/22.0 MiB (16.2 MiB/s) with 1 file(s) remaining  
Completed 1.2 MiB/22.0 MiB (19.9 MiB/s) with 1 file(s) remaining  
Completed 1.5 MiB/22.0 MiB (23.6 MiB/s) with 1 file(s) remaining  
Completed 1.8 MiB/22.0 MiB (26.2 MiB/s) with 1 file(s) remaining  
Completed 2.0 MiB/22.0 MiB (29.3 MiB/s) with 1 file(s) remaining  
Completed 2.2 MiB/22.0 MiB (32.8 MiB/s) with 1 file(s) remaining  
Completed 2.5 MiB/22.0 MiB (36.1 MiB/s) with 1 file(s) remaining  
Completed 2.8 MiB/22.0 MiB (39.5 MiB/s) with 1 file(s) remaining  
Completed 3.0 MiB/22.0 MiB (42.8 MiB/s) with 1 file(s) remaining  
Completed 3.2 MiB/22.0 MiB (46.0 MiB/s) with 1 file(s) remaining  
Completed 3.5 MiB/22.0 MiB (49.2 MiB/s) with 1 file(s) remaining  
Completed 3.8 MiB/22.0 MiB (52.1 MiB/s) with 1 file(s) remaining  
Completed 4.0 MiB/22.0 MiB (54.7 MiB/s) with 1 file(s) remaining  
Completed 4.2 MiB/22.0 MiB (56.9 MiB/s) with 1 file(s) remaining  
Completed 4.5 MiB/22.0 MiB (59.7 MiB/s) with 1 file(s) remaining  
Completed 4.8 MiB/22.0 MiB (62.1 MiB/s) with 1 file(s) remaining  
Completed 5.0 MiB/22.0 MiB (64.9 MiB/s) with 1 file(s) remaining  
Completed 5.2 MiB/22.0 MiB (67.6 MiB/s) with 1 file(s) remaining  
Completed 5.5 MiB/22.0 MiB (70.1 MiB/s) with 1 file(s) remaining  
Completed 5.8 MiB/22.0 MiB (72.5 MiB/s) with 1 file(s) remaining  
Completed 6.0 MiB/22.0 MiB (74.8 MiB/s) with 1 file(s) remaining  
Completed 6.2 MiB/22.0 MiB (77.0 MiB/s) with 1 file(s) remaining  
Completed 6.5 MiB/22.0 MiB (79.2 MiB/s) with 1 file(s) remaining  
Completed 6.8 MiB/22.0 MiB (80.7 MiB/s) with 1 file(s) remaining  
Completed 7.0 MiB/22.0 MiB (83.1 MiB/s) with 1 file(s) remaining  
Completed 7.2 MiB/22.0 MiB (84.8 MiB/s) with 1 file(s) remaining  
Completed 7.5 MiB/22.0 MiB (86.6 MiB/s) with 1 file(s) remaining  
Completed 7.8 MiB/22.0 MiB (88.6 MiB/s) with 1 file(s) remaining  
Completed 8.0 MiB/22.0 MiB (87.7 MiB/s) with 1 file(s) remaining  
Completed 8.2 MiB/22.0 MiB (86.4 MiB/s) with 1 file(s) remaining  
Completed 8.5 MiB/22.0 MiB (88.2 MiB/s) with 1 file(s) remaining  
Completed 8.8 MiB/22.0 MiB (89.3 MiB/s) with 1 file(s) remaining  
Completed 9.0 MiB/22.0 MiB (91.0 MiB/s) with 1 file(s) remaining  
Completed 9.2 MiB/22.0 MiB (92.4 MiB/s) with 1 file(s) remaining  
Completed 9.5 MiB/22.0 MiB (94.4 MiB/s) with 1 file(s) remaining  
Completed 9.8 MiB/22.0 MiB (96.2 MiB/s) with 1 file(s) remaining  
Completed 10.0 MiB/22.0 MiB (98.0 MiB/s) with 1 file(s) remaining 
Completed 10.2 MiB/22.0 MiB (99.7 MiB/s) with 1 file(s) remaining 
Completed 10.5 MiB/22.0 MiB (101.5 MiB/s) with 1 file(s) remaining
Completed 10.8 MiB/22.0 MiB (102.6 MiB/s) with 1 file(s) remaining
Completed 11.0 MiB/22.0 MiB (103.9 MiB/s) with 1 file(s) remaining
Completed 11.2 MiB/22.0 MiB (105.3 MiB/s) with 1 file(s) remaining
Completed 11.5 MiB/22.0 MiB (107.0 MiB/s) with 1 file(s) remaining
Completed 11.8 MiB/22.0 MiB (108.8 MiB/s) with 1 file(s) remaining
Completed 12.0 MiB/22.0 MiB (110.2 MiB/s) with 1 file(s) remaining
Completed 12.2 MiB/22.0 MiB (110.5 MiB/s) with 1 file(s) remaining
Completed 12.5 MiB/22.0 MiB (112.3 MiB/s) with 1 file(s) remaining
Completed 12.8 MiB/22.0 MiB (114.0 MiB/s) with 1 file(s) remaining
Completed 13.0 MiB/22.0 MiB (115.3 MiB/s) with 1 file(s) remaining
Completed 13.2 MiB/22.0 MiB (116.6 MiB/s) with 1 file(s) remaining
Completed 13.5 MiB/22.0 MiB (116.1 MiB/s) with 1 file(s) remaining
Completed 13.8 MiB/22.0 MiB (117.3 MiB/s) with 1 file(s) remaining
Completed 14.0 MiB/22.0 MiB (118.5 MiB/s) with 1 file(s) remaining
Completed 14.2 MiB/22.0 MiB (119.9 MiB/s) with 1 file(s) remaining
Completed 14.5 MiB/22.0 MiB (121.5 MiB/s) with 1 file(s) remaining
Completed 14.8 MiB/22.0 MiB (122.6 MiB/s) with 1 file(s) remaining
Completed 15.0 MiB/22.0 MiB (123.5 MiB/s) with 1 file(s) remaining
Completed 15.2 MiB/22.0 MiB (124.5 MiB/s) with 1 file(s) remaining
Completed 15.5 MiB/22.0 MiB (125.9 MiB/s) with 1 file(s) remaining
Completed 15.8 MiB/22.0 MiB (127.4 MiB/s) with 1 file(s) remaining
Completed 16.0 MiB/22.0 MiB (127.0 MiB/s) with 1 file(s) remaining
Completed 16.2 MiB/22.0 MiB (128.4 MiB/s) with 1 file(s) remaining
Completed 16.5 MiB/22.0 MiB (129.8 MiB/s) with 1 file(s) remaining
Completed 16.8 MiB/22.0 MiB (131.2 MiB/s) with 1 file(s) remaining
Completed 17.0 MiB/22.0 MiB (132.0 MiB/s) with 1 file(s) remaining
Completed 17.2 MiB/22.0 MiB (132.8 MiB/s) with 1 file(s) remaining
Completed 17.5 MiB/22.0 MiB (134.3 MiB/s) with 1 file(s) remaining
Completed 17.8 MiB/22.0 MiB (135.5 MiB/s) with 1 file(s) remaining
Completed 18.0 MiB/22.0 MiB (133.6 MiB/s) with 1 file(s) remaining
Completed 18.2 MiB/22.0 MiB (133.5 MiB/s) with 1 file(s) remaining
Completed 18.5 MiB/22.0 MiB (134.7 MiB/s) with 1 file(s) remaining
Completed 18.8 MiB/22.0 MiB (134.5 MiB/s) with 1 file(s) remaining
Completed 19.0 MiB/22.0 MiB (134.3 MiB/s) with 1 file(s) remaining
Completed 19.2 MiB/22.0 MiB (133.7 MiB/s) with 1 file(s) remaining
Completed 19.5 MiB/22.0 MiB (134.6 MiB/s) with 1 file(s) remaining
Completed 19.8 MiB/22.0 MiB (124.2 MiB/s) with 1 file(s) remaining
Completed 20.0 MiB/22.0 MiB (125.2 MiB/s) with 1 file(s) remaining
Completed 20.2 MiB/22.0 MiB (125.9 MiB/s) with 1 file(s) remaining
Completed 20.5 MiB/22.0 MiB (121.1 MiB/s) with 1 file(s) remaining
Completed 20.8 MiB/22.0 MiB (108.6 MiB/s) with 1 file(s) remaining
Completed 21.0 MiB/22.0 MiB (98.8 MiB/s) with 1 file(s) remaining 
Completed 21.2 MiB/22.0 MiB (99.5 MiB/s) with 1 file(s) remaining 
Completed 21.5 MiB/22.0 MiB (100.4 MiB/s) with 1 file(s) remaining
Completed 21.8 MiB/22.0 MiB (101.2 MiB/s) with 1 file(s) remaining
Completed 22.0 MiB/22.0 MiB (101.9 MiB/s) with 1 file(s) remaining
upload: ../../tmp/part1 to s3://erasure/mpyawscli                 </msg>
<status status="PASS" starttime="20240102 11:37:39.020" endtime="20240102 11:37:39.021"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:37:39.021" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:37:39.021" endtime="20240102 11:37:39.021"/>
</kw>
<status status="PASS" starttime="20240102 11:37:37.988" endtime="20240102 11:37:39.021"/>
</kw>
<msg timestamp="20240102 11:37:39.021" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:37:37.988" endtime="20240102 11:37:39.021"/>
</kw>
<msg timestamp="20240102 11:37:39.022" level="INFO">${output} = Completed 256.0 KiB/22.0 MiB (4.3 MiB/s) with 1 file(s) remaining
Completed 512.0 KiB/22.0 MiB (8.4 MiB/s) with 1 file(s) remaining
Completed 768.0 KiB/22.0 MiB (12.4 MiB/s) with 1 file(s) remaining
C...</msg>
<status status="PASS" starttime="20240102 11:37:37.987" endtime="20240102 11:37:39.022"/>
</kw>
<status status="PASS" starttime="20240102 11:37:37.987" endtime="20240102 11:37:39.022"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<arg>cp s3://${BUCKET}/mpyawscli /tmp/part1.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:37:39.025" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 cp s3://erasure/mpyawscli /tmp/part1.result 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:37:39.713" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:37:39.713" level="INFO">${output} = Completed 256.0 KiB/22.0 MiB (5.3 MiB/s) with 1 file(s) remaining
Completed 512.0 KiB/22.0 MiB (10.4 MiB/s) with 1 file(s) remaining
Completed 768.0 KiB/22.0 MiB (14.5 MiB/s) with 1 file(s) remaining
...</msg>
<status status="PASS" starttime="20240102 11:37:39.023" endtime="20240102 11:37:39.713"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:37:39.714" level="INFO">Completed 256.0 KiB/22.0 MiB (5.3 MiB/s) with 1 file(s) remaining
Completed 512.0 KiB/22.0 MiB (10.4 MiB/s) with 1 file(s) remaining
Completed 768.0 KiB/22.0 MiB (14.5 MiB/s) with 1 file(s) remaining
Completed 1.0 MiB/22.0 MiB (19.2 MiB/s) with 1 file(s) remaining  
Completed 1.2 MiB/22.0 MiB (23.8 MiB/s) with 1 file(s) remaining  
Completed 1.5 MiB/22.0 MiB (28.2 MiB/s) with 1 file(s) remaining  
Completed 1.8 MiB/22.0 MiB (32.6 MiB/s) with 1 file(s) remaining  
Completed 2.0 MiB/22.0 MiB (37.0 MiB/s) with 1 file(s) remaining  
Completed 2.2 MiB/22.0 MiB (41.4 MiB/s) with 1 file(s) remaining  
Completed 2.5 MiB/22.0 MiB (45.7 MiB/s) with 1 file(s) remaining  
Completed 2.8 MiB/22.0 MiB (50.0 MiB/s) with 1 file(s) remaining  
Completed 3.0 MiB/22.0 MiB (53.0 MiB/s) with 1 file(s) remaining  
Completed 3.2 MiB/22.0 MiB (49.3 MiB/s) with 1 file(s) remaining  
Completed 3.5 MiB/22.0 MiB (52.5 MiB/s) with 1 file(s) remaining  
Completed 3.8 MiB/22.0 MiB (55.8 MiB/s) with 1 file(s) remaining  
Completed 4.0 MiB/22.0 MiB (59.0 MiB/s) with 1 file(s) remaining  
Completed 4.2 MiB/22.0 MiB (61.1 MiB/s) with 1 file(s) remaining  
Completed 4.5 MiB/22.0 MiB (64.4 MiB/s) with 1 file(s) remaining  
Completed 4.8 MiB/22.0 MiB (65.5 MiB/s) with 1 file(s) remaining  
Completed 5.0 MiB/22.0 MiB (68.7 MiB/s) with 1 file(s) remaining  
Completed 5.2 MiB/22.0 MiB (60.2 MiB/s) with 1 file(s) remaining  
Completed 5.5 MiB/22.0 MiB (62.9 MiB/s) with 1 file(s) remaining  
Completed 5.8 MiB/22.0 MiB (65.6 MiB/s) with 1 file(s) remaining  
Completed 6.0 MiB/22.0 MiB (68.1 MiB/s) with 1 file(s) remaining  
Completed 6.2 MiB/22.0 MiB (70.0 MiB/s) with 1 file(s) remaining  
Completed 6.5 MiB/22.0 MiB (72.1 MiB/s) with 1 file(s) remaining  
Completed 6.8 MiB/22.0 MiB (74.6 MiB/s) with 1 file(s) remaining  
Completed 7.0 MiB/22.0 MiB (77.0 MiB/s) with 1 file(s) remaining  
Completed 7.2 MiB/22.0 MiB (78.4 MiB/s) with 1 file(s) remaining  
Completed 7.5 MiB/22.0 MiB (79.2 MiB/s) with 1 file(s) remaining  
Completed 7.8 MiB/22.0 MiB (81.5 MiB/s) with 1 file(s) remaining  
Completed 8.0 MiB/22.0 MiB (83.8 MiB/s) with 1 file(s) remaining  
Completed 8.2 MiB/22.0 MiB (81.7 MiB/s) with 1 file(s) remaining  
Completed 8.5 MiB/22.0 MiB (83.8 MiB/s) with 1 file(s) remaining  
Completed 8.8 MiB/22.0 MiB (85.2 MiB/s) with 1 file(s) remaining  
Completed 9.0 MiB/22.0 MiB (87.5 MiB/s) with 1 file(s) remaining  
Completed 9.2 MiB/22.0 MiB (72.3 MiB/s) with 1 file(s) remaining  
Completed 9.5 MiB/22.0 MiB (74.1 MiB/s) with 1 file(s) remaining  
Completed 9.8 MiB/22.0 MiB (75.2 MiB/s) with 1 file(s) remaining  
Completed 10.0 MiB/22.0 MiB (76.3 MiB/s) with 1 file(s) remaining 
Completed 10.2 MiB/22.0 MiB (71.4 MiB/s) with 1 file(s) remaining 
Completed 10.5 MiB/22.0 MiB (72.8 MiB/s) with 1 file(s) remaining 
Completed 10.8 MiB/22.0 MiB (74.1 MiB/s) with 1 file(s) remaining 
Completed 11.0 MiB/22.0 MiB (75.7 MiB/s) with 1 file(s) remaining 
Completed 11.2 MiB/22.0 MiB (76.0 MiB/s) with 1 file(s) remaining 
Completed 11.5 MiB/22.0 MiB (76.7 MiB/s) with 1 file(s) remaining 
Completed 11.8 MiB/22.0 MiB (78.2 MiB/s) with 1 file(s) remaining 
Completed 12.0 MiB/22.0 MiB (78.4 MiB/s) with 1 file(s) remaining 
Completed 12.2 MiB/22.0 MiB (73.0 MiB/s) with 1 file(s) remaining 
Completed 12.5 MiB/22.0 MiB (74.3 MiB/s) with 1 file(s) remaining 
Completed 12.8 MiB/22.0 MiB (75.6 MiB/s) with 1 file(s) remaining 
Completed 13.0 MiB/22.0 MiB (76.9 MiB/s) with 1 file(s) remaining 
Completed 13.2 MiB/22.0 MiB (77.4 MiB/s) with 1 file(s) remaining 
Completed 13.5 MiB/22.0 MiB (78.7 MiB/s) with 1 file(s) remaining 
Completed 13.8 MiB/22.0 MiB (80.0 MiB/s) with 1 file(s) remaining 
Completed 14.0 MiB/22.0 MiB (81.3 MiB/s) with 1 file(s) remaining 
Completed 14.2 MiB/22.0 MiB (82.6 MiB/s) with 1 file(s) remaining 
Completed 14.5 MiB/22.0 MiB (83.8 MiB/s) with 1 file(s) remaining 
Completed 14.8 MiB/22.0 MiB (85.2 MiB/s) with 1 file(s) remaining 
Completed 15.0 MiB/22.0 MiB (86.5 MiB/s) with 1 file(s) remaining 
Completed 15.2 MiB/22.0 MiB (80.4 MiB/s) with 1 file(s) remaining 
Completed 15.5 MiB/22.0 MiB (81.6 MiB/s) with 1 file(s) remaining 
Completed 15.8 MiB/22.0 MiB (82.7 MiB/s) with 1 file(s) remaining 
Completed 16.0 MiB/22.0 MiB (83.9 MiB/s) with 1 file(s) remaining 
Completed 16.2 MiB/22.0 MiB (81.9 MiB/s) with 1 file(s) remaining 
Completed 16.5 MiB/22.0 MiB (83.0 MiB/s) with 1 file(s) remaining 
Completed 16.8 MiB/22.0 MiB (83.9 MiB/s) with 1 file(s) remaining 
Completed 17.0 MiB/22.0 MiB (85.0 MiB/s) with 1 file(s) remaining 
Completed 17.2 MiB/22.0 MiB (86.1 MiB/s) with 1 file(s) remaining 
Completed 17.5 MiB/22.0 MiB (86.7 MiB/s) with 1 file(s) remaining 
Completed 17.8 MiB/22.0 MiB (87.8 MiB/s) with 1 file(s) remaining 
Completed 18.0 MiB/22.0 MiB (88.9 MiB/s) with 1 file(s) remaining 
Completed 18.2 MiB/22.0 MiB (87.1 MiB/s) with 1 file(s) remaining 
Completed 18.5 MiB/22.0 MiB (87.6 MiB/s) with 1 file(s) remaining 
Completed 18.8 MiB/22.0 MiB (88.5 MiB/s) with 1 file(s) remaining 
Completed 19.0 MiB/22.0 MiB (89.5 MiB/s) with 1 file(s) remaining 
Completed 19.2 MiB/22.0 MiB (89.6 MiB/s) with 1 file(s) remaining 
Completed 19.5 MiB/22.0 MiB (90.1 MiB/s) with 1 file(s) remaining 
Completed 19.8 MiB/22.0 MiB (91.1 MiB/s) with 1 file(s) remaining 
Completed 20.0 MiB/22.0 MiB (92.2 MiB/s) with 1 file(s) remaining 
Completed 20.2 MiB/22.0 MiB (88.3 MiB/s) with 1 file(s) remaining 
Completed 20.5 MiB/22.0 MiB (88.9 MiB/s) with 1 file(s) remaining 
Completed 20.8 MiB/22.0 MiB (89.5 MiB/s) with 1 file(s) remaining 
Completed 21.0 MiB/22.0 MiB (90.2 MiB/s) with 1 file(s) remaining 
Completed 21.2 MiB/22.0 MiB (87.4 MiB/s) with 1 file(s) remaining 
Completed 21.5 MiB/22.0 MiB (88.2 MiB/s) with 1 file(s) remaining 
Completed 21.8 MiB/22.0 MiB (89.0 MiB/s) with 1 file(s) remaining 
Completed 22.0 MiB/22.0 MiB (89.9 MiB/s) with 1 file(s) remaining 
download: s3://erasure/mpyawscli to ../../tmp/part1.result        </msg>
<status status="PASS" starttime="20240102 11:37:39.713" endtime="20240102 11:37:39.714"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:37:39.714" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:37:39.714" endtime="20240102 11:37:39.714"/>
</kw>
<status status="PASS" starttime="20240102 11:37:39.023" endtime="20240102 11:37:39.714"/>
</kw>
<msg timestamp="20240102 11:37:39.715" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:37:39.023" endtime="20240102 11:37:39.715"/>
</kw>
<msg timestamp="20240102 11:37:39.715" level="INFO">${output} = Completed 256.0 KiB/22.0 MiB (5.3 MiB/s) with 1 file(s) remaining
Completed 512.0 KiB/22.0 MiB (10.4 MiB/s) with 1 file(s) remaining
Completed 768.0 KiB/22.0 MiB (14.5 MiB/s) with 1 file(s) remaining
...</msg>
<status status="PASS" starttime="20240102 11:37:39.022" endtime="20240102 11:37:39.715"/>
</kw>
<status status="PASS" starttime="20240102 11:37:39.022" endtime="20240102 11:37:39.715"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<arg>rm s3://${BUCKET}/mpyawscli</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:37:39.718" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 rm s3://erasure/mpyawscli 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:37:40.170" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:37:40.170" level="INFO">${output} = delete: s3://erasure/mpyawscli</msg>
<status status="PASS" starttime="20240102 11:37:39.717" endtime="20240102 11:37:40.170"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:37:40.172" level="INFO">delete: s3://erasure/mpyawscli</msg>
<status status="PASS" starttime="20240102 11:37:40.171" endtime="20240102 11:37:40.172"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:37:40.173" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:37:40.172" endtime="20240102 11:37:40.173"/>
</kw>
<status status="PASS" starttime="20240102 11:37:39.716" endtime="20240102 11:37:40.173"/>
</kw>
<msg timestamp="20240102 11:37:40.173" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:37:39.716" endtime="20240102 11:37:40.173"/>
</kw>
<msg timestamp="20240102 11:37:40.173" level="INFO">${output} = delete: s3://erasure/mpyawscli</msg>
<status status="PASS" starttime="20240102 11:37:39.716" endtime="20240102 11:37:40.173"/>
</kw>
<status status="PASS" starttime="20240102 11:37:39.715" endtime="20240102 11:37:40.174"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/part1</arg>
<arg>/tmp/part1.result</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:37:40.180" level="INFO">Running command 'md5sum /tmp/part1 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:37:40.225" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:37:40.225" level="INFO">${output} = 6dae7924350904241dbd3856c71bf26d</msg>
<status status="PASS" starttime="20240102 11:37:40.176" endtime="20240102 11:37:40.225"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:37:40.227" level="INFO">6dae7924350904241dbd3856c71bf26d</msg>
<status status="PASS" starttime="20240102 11:37:40.226" endtime="20240102 11:37:40.227"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:37:40.228" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:37:40.227" endtime="20240102 11:37:40.228"/>
</kw>
<status status="PASS" starttime="20240102 11:37:40.175" endtime="20240102 11:37:40.228"/>
</kw>
<msg timestamp="20240102 11:37:40.228" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:37:40.175" endtime="20240102 11:37:40.228"/>
</kw>
<msg timestamp="20240102 11:37:40.229" level="INFO">${checksumbefore} = 6dae7924350904241dbd3856c71bf26d</msg>
<status status="PASS" starttime="20240102 11:37:40.174" endtime="20240102 11:37:40.229"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:37:40.233" level="INFO">Running command 'md5sum /tmp/part1.result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:37:40.273" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:37:40.273" level="INFO">${output} = 6dae7924350904241dbd3856c71bf26d</msg>
<status status="PASS" starttime="20240102 11:37:40.230" endtime="20240102 11:37:40.273"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:37:40.274" level="INFO">6dae7924350904241dbd3856c71bf26d</msg>
<status status="PASS" starttime="20240102 11:37:40.274" endtime="20240102 11:37:40.274"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:37:40.275" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:37:40.274" endtime="20240102 11:37:40.275"/>
</kw>
<status status="PASS" starttime="20240102 11:37:40.230" endtime="20240102 11:37:40.275"/>
</kw>
<msg timestamp="20240102 11:37:40.275" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:37:40.229" endtime="20240102 11:37:40.275"/>
</kw>
<msg timestamp="20240102 11:37:40.275" level="INFO">${checksumafter} = 6dae7924350904241dbd3856c71bf26d</msg>
<status status="PASS" starttime="20240102 11:37:40.229" endtime="20240102 11:37:40.275"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240102 11:37:40.276" endtime="20240102 11:37:40.276"/>
</kw>
<status status="PASS" starttime="20240102 11:37:40.174" endtime="20240102 11:37:40.276"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20240102 11:37:37.908" endtime="20240102 11:37:40.276"/>
</test>
<test id="s1-s1-s8-t11" name="Test Multipart Upload Put With Copy" line="265">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20240102 11:37:40.278" level="INFO">${randStr} = 4849489839</msg>
<status status="PASS" starttime="20240102 11:37:40.278" endtime="20240102 11:37:40.278"/>
</kw>
<msg timestamp="20240102 11:37:40.279" level="INFO">${random} = ozone-test-4849489839</msg>
<status status="PASS" starttime="20240102 11:37:40.278" endtime="20240102 11:37:40.279"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20240102 11:37:40.279" level="INFO">${PREFIX} = ozone-test-4849489839</msg>
<status status="PASS" starttime="20240102 11:37:40.279" endtime="20240102 11:37:40.279"/>
</kw>
<status status="PASS" starttime="20240102 11:37:40.277" endtime="20240102 11:37:40.279"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Create Random file</arg>
<arg>5</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Create Random file">
<arg>5</arg>
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=${size_in_megabytes} status=none</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:37:40.282" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=5 status=none 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:37:40.303" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:37:40.303" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240102 11:37:40.281" endtime="20240102 11:37:40.303"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:37:40.304" level="INFO"/>
<status status="PASS" starttime="20240102 11:37:40.303" endtime="20240102 11:37:40.304"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:37:40.305" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:37:40.304" endtime="20240102 11:37:40.305"/>
</kw>
<status status="PASS" starttime="20240102 11:37:40.281" endtime="20240102 11:37:40.305"/>
</kw>
<msg timestamp="20240102 11:37:40.305" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:37:40.280" endtime="20240102 11:37:40.305"/>
</kw>
<status status="PASS" starttime="20240102 11:37:40.280" endtime="20240102 11:37:40.305"/>
</kw>
<status status="PASS" starttime="20240102 11:37:40.280" endtime="20240102 11:37:40.305"/>
</kw>
<status status="PASS" starttime="20240102 11:37:40.279" endtime="20240102 11:37:40.305"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/copytest/source --body /tmp/part1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:37:40.308" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket erasure --key ozone-test-4849489839/copytest/source --body /tmp/part1 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:37:40.935" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:37:40.936" level="INFO">${output} = {
    "ETag": "\"5650f96ec78393def779eb0404e9cc96\""
}</msg>
<status status="PASS" starttime="20240102 11:37:40.307" endtime="20240102 11:37:40.936"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:37:40.936" level="INFO">{
    "ETag": "\"5650f96ec78393def779eb0404e9cc96\""
}</msg>
<status status="PASS" starttime="20240102 11:37:40.936" endtime="20240102 11:37:40.937"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:37:40.937" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:37:40.937" endtime="20240102 11:37:40.937"/>
</kw>
<status status="PASS" starttime="20240102 11:37:40.307" endtime="20240102 11:37:40.937"/>
</kw>
<msg timestamp="20240102 11:37:40.937" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:37:40.306" endtime="20240102 11:37:40.937"/>
</kw>
<msg timestamp="20240102 11:37:40.938" level="INFO">${output} = {
    "ETag": "\"5650f96ec78393def779eb0404e9cc96\""
}</msg>
<status status="PASS" starttime="20240102 11:37:40.306" endtime="20240102 11:37:40.938"/>
</kw>
<msg timestamp="20240102 11:37:40.938" level="INFO">${result} = {
    "ETag": "\"5650f96ec78393def779eb0404e9cc96\""
}</msg>
<status status="PASS" starttime="20240102 11:37:40.305" endtime="20240102 11:37:40.938"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/copytest/destination</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:37:40.941" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket erasure --key ozone-test-4849489839/copytest/destination 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:37:41.409" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:37:41.409" level="INFO">${output} = {
    "Bucket": "erasure",
    "Key": "ozone-test-4849489839/copytest/destination",
    "UploadId": "44c26924-aa83-4dd3-bd6c-10042d0c4b93-111686153755295789"
}</msg>
<status status="PASS" starttime="20240102 11:37:40.939" endtime="20240102 11:37:41.409"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:37:41.410" level="INFO">{
    "Bucket": "erasure",
    "Key": "ozone-test-4849489839/copytest/destination",
    "UploadId": "44c26924-aa83-4dd3-bd6c-10042d0c4b93-111686153755295789"
}</msg>
<status status="PASS" starttime="20240102 11:37:41.409" endtime="20240102 11:37:41.410"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:37:41.411" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:37:41.410" endtime="20240102 11:37:41.411"/>
</kw>
<status status="PASS" starttime="20240102 11:37:40.939" endtime="20240102 11:37:41.411"/>
</kw>
<msg timestamp="20240102 11:37:41.411" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:37:40.939" endtime="20240102 11:37:41.411"/>
</kw>
<msg timestamp="20240102 11:37:41.411" level="INFO">${output} = {
    "Bucket": "erasure",
    "Key": "ozone-test-4849489839/copytest/destination",
    "UploadId": "44c26924-aa83-4dd3-bd6c-10042d0c4b93-111686153755295789"
}</msg>
<status status="PASS" starttime="20240102 11:37:40.938" endtime="20240102 11:37:41.411"/>
</kw>
<msg timestamp="20240102 11:37:41.411" level="INFO">${result} = {
    "Bucket": "erasure",
    "Key": "ozone-test-4849489839/copytest/destination",
    "UploadId": "44c26924-aa83-4dd3-bd6c-10042d0c4b93-111686153755295789"
}</msg>
<status status="PASS" starttime="20240102 11:37:40.938" endtime="20240102 11:37:41.411"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${uploadID}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:37:41.414" level="INFO">Running command 'echo '{
    "Bucket": "erasure",
    "Key": "ozone-test-4849489839/copytest/destination",
    "UploadId": "44c26924-aa83-4dd3-bd6c-10042d0c4b93-111686153755295789"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:37:41.440" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:37:41.440" level="INFO">${output} = 44c26924-aa83-4dd3-bd6c-10042d0c4b93-111686153755295789</msg>
<status status="PASS" starttime="20240102 11:37:41.412" endtime="20240102 11:37:41.440"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:37:41.441" level="INFO">44c26924-aa83-4dd3-bd6c-10042d0c4b93-111686153755295789</msg>
<status status="PASS" starttime="20240102 11:37:41.440" endtime="20240102 11:37:41.441"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:37:41.441" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:37:41.441" endtime="20240102 11:37:41.441"/>
</kw>
<msg timestamp="20240102 11:37:41.442" level="INFO">${uploadID} = 44c26924-aa83-4dd3-bd6c-10042d0c4b93-111686153755295789</msg>
<status status="PASS" starttime="20240102 11:37:41.412" endtime="20240102 11:37:41.442"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:37:41.442" endtime="20240102 11:37:41.442"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>UploadId</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:37:41.442" endtime="20240102 11:37:41.442"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part-copy --bucket ${BUCKET} --key ${PREFIX}/copytest/destination --upload-id ${uploadID} --part-number 1 --copy-source ${BUCKET}/${PREFIX}/copytest/source</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:37:41.446" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part-copy --bucket erasure --key ozone-test-4849489839/copytest/destination --upload-id 44c26924-aa83-4dd3-bd6c-10042d0c4b93-111686153755295789 --part-number 1 --copy-source erasure/ozone-test-4849489839/copytest/source 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:37:42.096" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:37:42.096" level="INFO">${output} = {
    "CopyPartResult": {
        "ETag": "/s3v/erasure/ozone-test-4849489839/copytest/destination-44c26924-aa83-4dd3-bd6c-10042d0c4b93-111686153755295789-1",
        "LastModified": "2024-01-02T11:37...</msg>
<status status="PASS" starttime="20240102 11:37:41.444" endtime="20240102 11:37:42.096"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:37:42.097" level="INFO">{
    "CopyPartResult": {
        "ETag": "/s3v/erasure/ozone-test-4849489839/copytest/destination-44c26924-aa83-4dd3-bd6c-10042d0c4b93-111686153755295789-1",
        "LastModified": "2024-01-02T11:37:42.048Z"
    }
}</msg>
<status status="PASS" starttime="20240102 11:37:42.097" endtime="20240102 11:37:42.097"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:37:42.098" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:37:42.097" endtime="20240102 11:37:42.098"/>
</kw>
<status status="PASS" starttime="20240102 11:37:41.444" endtime="20240102 11:37:42.098"/>
</kw>
<msg timestamp="20240102 11:37:42.098" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:37:41.444" endtime="20240102 11:37:42.098"/>
</kw>
<msg timestamp="20240102 11:37:42.098" level="INFO">${output} = {
    "CopyPartResult": {
        "ETag": "/s3v/erasure/ozone-test-4849489839/copytest/destination-44c26924-aa83-4dd3-bd6c-10042d0c4b93-111686153755295789-1",
        "LastModified": "2024-01-02T11:37...</msg>
<status status="PASS" starttime="20240102 11:37:41.443" endtime="20240102 11:37:42.098"/>
</kw>
<msg timestamp="20240102 11:37:42.099" level="INFO">${result} = {
    "CopyPartResult": {
        "ETag": "/s3v/erasure/ozone-test-4849489839/copytest/destination-44c26924-aa83-4dd3-bd6c-10042d0c4b93-111686153755295789-1",
        "LastModified": "2024-01-02T11:37...</msg>
<status status="PASS" starttime="20240102 11:37:41.443" endtime="20240102 11:37:42.099"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:37:42.099" endtime="20240102 11:37:42.099"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>LastModified</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:37:42.099" endtime="20240102 11:37:42.100"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag1}</var>
<arg>echo '${result}' | jq -r '.CopyPartResult.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:37:42.102" level="INFO">Running command 'echo '{
    "CopyPartResult": {
        "ETag": "/s3v/erasure/ozone-test-4849489839/copytest/destination-44c26924-aa83-4dd3-bd6c-10042d0c4b93-111686153755295789-1",
        "LastModified": "2024-01-02T11:37:42.048Z"
    }
}' | jq -r '.CopyPartResult.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:37:42.129" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:37:42.129" level="INFO">${output} = /s3v/erasure/ozone-test-4849489839/copytest/destination-44c26924-aa83-4dd3-bd6c-10042d0c4b93-111686153755295789-1</msg>
<status status="PASS" starttime="20240102 11:37:42.100" endtime="20240102 11:37:42.129"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:37:42.130" level="INFO">/s3v/erasure/ozone-test-4849489839/copytest/destination-44c26924-aa83-4dd3-bd6c-10042d0c4b93-111686153755295789-1</msg>
<status status="PASS" starttime="20240102 11:37:42.129" endtime="20240102 11:37:42.130"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:37:42.130" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:37:42.130" endtime="20240102 11:37:42.130"/>
</kw>
<msg timestamp="20240102 11:37:42.131" level="INFO">${eTag1} = /s3v/erasure/ozone-test-4849489839/copytest/destination-44c26924-aa83-4dd3-bd6c-10042d0c4b93-111686153755295789-1</msg>
<status status="PASS" starttime="20240102 11:37:42.100" endtime="20240102 11:37:42.131"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/copytest/destination --multipart-upload 'Parts=[{ETag=${eTag1},PartNumber=1}]'</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:37:42.134" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --upload-id 44c26924-aa83-4dd3-bd6c-10042d0c4b93-111686153755295789 --bucket erasure --key ozone-test-4849489839/copytest/destination --multipart-upload 'Parts=[{ETag=/s3v/erasure/ozone-test-4849489839/copytest/destination-44c26924-aa83-4dd3-bd6c-10042d0c4b93-111686153755295789-1,PartNumber=1}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:37:42.617" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:37:42.617" level="INFO">${output} = {
    "Location": "erasure",
    "Bucket": "erasure",
    "Key": "ozone-test-4849489839/copytest/destination",
    "ETag": "\"37a6259cc0c1dae299a7866489dff0bd-1\""
}</msg>
<status status="PASS" starttime="20240102 11:37:42.133" endtime="20240102 11:37:42.617"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:37:42.618" level="INFO">{
    "Location": "erasure",
    "Bucket": "erasure",
    "Key": "ozone-test-4849489839/copytest/destination",
    "ETag": "\"37a6259cc0c1dae299a7866489dff0bd-1\""
}</msg>
<status status="PASS" starttime="20240102 11:37:42.617" endtime="20240102 11:37:42.618"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:37:42.618" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:37:42.618" endtime="20240102 11:37:42.618"/>
</kw>
<status status="PASS" starttime="20240102 11:37:42.132" endtime="20240102 11:37:42.619"/>
</kw>
<msg timestamp="20240102 11:37:42.619" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:37:42.132" endtime="20240102 11:37:42.619"/>
</kw>
<msg timestamp="20240102 11:37:42.619" level="INFO">${output} = {
    "Location": "erasure",
    "Bucket": "erasure",
    "Key": "ozone-test-4849489839/copytest/destination",
    "ETag": "\"37a6259cc0c1dae299a7866489dff0bd-1\""
}</msg>
<status status="PASS" starttime="20240102 11:37:42.131" endtime="20240102 11:37:42.619"/>
</kw>
<status status="PASS" starttime="20240102 11:37:42.131" endtime="20240102 11:37:42.619"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/copytest/destination /tmp/part-result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:37:42.623" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket erasure --key ozone-test-4849489839/copytest/destination /tmp/part-result 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:37:43.142" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:37:43.142" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 02 Jan 2024 11:37:42 GMT",
    "ContentLength": 5242880,
    "ETag": "\"37a6259cc0c1dae299a7866489dff0bd-1\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20240102 11:37:42.621" endtime="20240102 11:37:43.142"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:37:43.143" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 02 Jan 2024 11:37:42 GMT",
    "ContentLength": 5242880,
    "ETag": "\"37a6259cc0c1dae299a7866489dff0bd-1\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Tue, 02 Jan 2024 11:37:43 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20240102 11:37:43.142" endtime="20240102 11:37:43.143"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:37:43.143" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:37:43.143" endtime="20240102 11:37:43.143"/>
</kw>
<status status="PASS" starttime="20240102 11:37:42.620" endtime="20240102 11:37:43.144"/>
</kw>
<msg timestamp="20240102 11:37:43.144" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:37:42.620" endtime="20240102 11:37:43.144"/>
</kw>
<msg timestamp="20240102 11:37:43.144" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 02 Jan 2024 11:37:42 GMT",
    "ContentLength": 5242880,
    "ETag": "\"37a6259cc0c1dae299a7866489dff0bd-1\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20240102 11:37:42.620" endtime="20240102 11:37:43.144"/>
</kw>
<status status="PASS" starttime="20240102 11:37:42.619" endtime="20240102 11:37:43.144"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/part1</arg>
<arg>/tmp/part-result</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:37:43.147" level="INFO">Running command 'md5sum /tmp/part1 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:37:43.158" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:37:43.158" level="INFO">${output} = 5650f96ec78393def779eb0404e9cc96</msg>
<status status="PASS" starttime="20240102 11:37:43.146" endtime="20240102 11:37:43.158"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:37:43.159" level="INFO">5650f96ec78393def779eb0404e9cc96</msg>
<status status="PASS" starttime="20240102 11:37:43.158" endtime="20240102 11:37:43.159"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:37:43.159" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:37:43.159" endtime="20240102 11:37:43.159"/>
</kw>
<status status="PASS" starttime="20240102 11:37:43.145" endtime="20240102 11:37:43.159"/>
</kw>
<msg timestamp="20240102 11:37:43.160" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:37:43.145" endtime="20240102 11:37:43.160"/>
</kw>
<msg timestamp="20240102 11:37:43.160" level="INFO">${checksumbefore} = 5650f96ec78393def779eb0404e9cc96</msg>
<status status="PASS" starttime="20240102 11:37:43.145" endtime="20240102 11:37:43.160"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:37:43.162" level="INFO">Running command 'md5sum /tmp/part-result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:37:43.173" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:37:43.173" level="INFO">${output} = 5650f96ec78393def779eb0404e9cc96</msg>
<status status="PASS" starttime="20240102 11:37:43.161" endtime="20240102 11:37:43.173"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:37:43.174" level="INFO">5650f96ec78393def779eb0404e9cc96</msg>
<status status="PASS" starttime="20240102 11:37:43.173" endtime="20240102 11:37:43.174"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:37:43.174" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:37:43.174" endtime="20240102 11:37:43.174"/>
</kw>
<status status="PASS" starttime="20240102 11:37:43.161" endtime="20240102 11:37:43.174"/>
</kw>
<msg timestamp="20240102 11:37:43.175" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:37:43.160" endtime="20240102 11:37:43.175"/>
</kw>
<msg timestamp="20240102 11:37:43.175" level="INFO">${checksumafter} = 5650f96ec78393def779eb0404e9cc96</msg>
<status status="PASS" starttime="20240102 11:37:43.160" endtime="20240102 11:37:43.175"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240102 11:37:43.175" endtime="20240102 11:37:43.175"/>
</kw>
<status status="PASS" starttime="20240102 11:37:43.144" endtime="20240102 11:37:43.175"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20240102 11:37:40.277" endtime="20240102 11:37:43.176"/>
</test>
<test id="s1-s1-s8-t12" name="Test Multipart Upload Put With Copy and range" line="287">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20240102 11:37:43.178" level="INFO">${randStr} = 8006035476</msg>
<status status="PASS" starttime="20240102 11:37:43.177" endtime="20240102 11:37:43.178"/>
</kw>
<msg timestamp="20240102 11:37:43.178" level="INFO">${random} = ozone-test-8006035476</msg>
<status status="PASS" starttime="20240102 11:37:43.177" endtime="20240102 11:37:43.178"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20240102 11:37:43.178" level="INFO">${PREFIX} = ozone-test-8006035476</msg>
<status status="PASS" starttime="20240102 11:37:43.178" endtime="20240102 11:37:43.178"/>
</kw>
<status status="PASS" starttime="20240102 11:37:43.177" endtime="20240102 11:37:43.178"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Create Random file</arg>
<arg>10</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Create Random file">
<arg>10</arg>
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=${size_in_megabytes} status=none</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:37:43.182" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=10 status=none 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:37:43.216" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:37:43.216" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240102 11:37:43.180" endtime="20240102 11:37:43.216"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:37:43.217" level="INFO"/>
<status status="PASS" starttime="20240102 11:37:43.216" endtime="20240102 11:37:43.217"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:37:43.217" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:37:43.217" endtime="20240102 11:37:43.218"/>
</kw>
<status status="PASS" starttime="20240102 11:37:43.180" endtime="20240102 11:37:43.218"/>
</kw>
<msg timestamp="20240102 11:37:43.218" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:37:43.180" endtime="20240102 11:37:43.218"/>
</kw>
<status status="PASS" starttime="20240102 11:37:43.179" endtime="20240102 11:37:43.218"/>
</kw>
<status status="PASS" starttime="20240102 11:37:43.179" endtime="20240102 11:37:43.218"/>
</kw>
<status status="PASS" starttime="20240102 11:37:43.179" endtime="20240102 11:37:43.218"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/copyrange/source --body /tmp/part1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:37:43.221" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket erasure --key ozone-test-8006035476/copyrange/source --body /tmp/part1 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:37:43.968" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:37:43.968" level="INFO">${output} = {
    "ETag": "\"001c01e7812f5d636c421f640bad9625\""
}</msg>
<status status="PASS" starttime="20240102 11:37:43.220" endtime="20240102 11:37:43.968"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:37:43.969" level="INFO">{
    "ETag": "\"001c01e7812f5d636c421f640bad9625\""
}</msg>
<status status="PASS" starttime="20240102 11:37:43.969" endtime="20240102 11:37:43.969"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:37:43.970" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:37:43.970" endtime="20240102 11:37:43.970"/>
</kw>
<status status="PASS" starttime="20240102 11:37:43.220" endtime="20240102 11:37:43.970"/>
</kw>
<msg timestamp="20240102 11:37:43.971" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:37:43.219" endtime="20240102 11:37:43.971"/>
</kw>
<msg timestamp="20240102 11:37:43.971" level="INFO">${output} = {
    "ETag": "\"001c01e7812f5d636c421f640bad9625\""
}</msg>
<status status="PASS" starttime="20240102 11:37:43.219" endtime="20240102 11:37:43.971"/>
</kw>
<msg timestamp="20240102 11:37:43.971" level="INFO">${result} = {
    "ETag": "\"001c01e7812f5d636c421f640bad9625\""
}</msg>
<status status="PASS" starttime="20240102 11:37:43.218" endtime="20240102 11:37:43.971"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:37:43.976" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket erasure --key ozone-test-8006035476/copyrange/destination 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:37:44.470" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:37:44.470" level="INFO">${output} = {
    "Bucket": "erasure",
    "Key": "ozone-test-8006035476/copyrange/destination",
    "UploadId": "47553d02-bfd1-4ffd-9a2c-98f85504c734-111686153955377200"
}</msg>
<status status="PASS" starttime="20240102 11:37:43.974" endtime="20240102 11:37:44.470"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:37:44.472" level="INFO">{
    "Bucket": "erasure",
    "Key": "ozone-test-8006035476/copyrange/destination",
    "UploadId": "47553d02-bfd1-4ffd-9a2c-98f85504c734-111686153955377200"
}</msg>
<status status="PASS" starttime="20240102 11:37:44.471" endtime="20240102 11:37:44.472"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:37:44.472" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:37:44.472" endtime="20240102 11:37:44.472"/>
</kw>
<status status="PASS" starttime="20240102 11:37:43.973" endtime="20240102 11:37:44.473"/>
</kw>
<msg timestamp="20240102 11:37:44.473" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:37:43.973" endtime="20240102 11:37:44.473"/>
</kw>
<msg timestamp="20240102 11:37:44.473" level="INFO">${output} = {
    "Bucket": "erasure",
    "Key": "ozone-test-8006035476/copyrange/destination",
    "UploadId": "47553d02-bfd1-4ffd-9a2c-98f85504c734-111686153955377200"
}</msg>
<status status="PASS" starttime="20240102 11:37:43.972" endtime="20240102 11:37:44.473"/>
</kw>
<msg timestamp="20240102 11:37:44.473" level="INFO">${result} = {
    "Bucket": "erasure",
    "Key": "ozone-test-8006035476/copyrange/destination",
    "UploadId": "47553d02-bfd1-4ffd-9a2c-98f85504c734-111686153955377200"
}</msg>
<status status="PASS" starttime="20240102 11:37:43.971" endtime="20240102 11:37:44.473"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${uploadID}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:37:44.476" level="INFO">Running command 'echo '{
    "Bucket": "erasure",
    "Key": "ozone-test-8006035476/copyrange/destination",
    "UploadId": "47553d02-bfd1-4ffd-9a2c-98f85504c734-111686153955377200"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:37:44.503" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:37:44.503" level="INFO">${output} = 47553d02-bfd1-4ffd-9a2c-98f85504c734-111686153955377200</msg>
<status status="PASS" starttime="20240102 11:37:44.474" endtime="20240102 11:37:44.503"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:37:44.504" level="INFO">47553d02-bfd1-4ffd-9a2c-98f85504c734-111686153955377200</msg>
<status status="PASS" starttime="20240102 11:37:44.503" endtime="20240102 11:37:44.504"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:37:44.504" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:37:44.504" endtime="20240102 11:37:44.504"/>
</kw>
<msg timestamp="20240102 11:37:44.504" level="INFO">${uploadID} = 47553d02-bfd1-4ffd-9a2c-98f85504c734-111686153955377200</msg>
<status status="PASS" starttime="20240102 11:37:44.473" endtime="20240102 11:37:44.505"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:37:44.505" endtime="20240102 11:37:44.505"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>UploadId</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:37:44.505" endtime="20240102 11:37:44.505"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part-copy --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination --upload-id ${uploadID} --part-number 1 --copy-source ${BUCKET}/${PREFIX}/copyrange/source --copy-source-range bytes=0-10485757</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:37:44.509" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part-copy --bucket erasure --key ozone-test-8006035476/copyrange/destination --upload-id 47553d02-bfd1-4ffd-9a2c-98f85504c734-111686153955377200 --part-number 1 --copy-source erasure/ozone-test-8006035476/copyrange/source --copy-source-range bytes=0-10485757 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:37:45.266" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:37:45.266" level="INFO">${output} = {
    "CopyPartResult": {
        "ETag": "/s3v/erasure/ozone-test-8006035476/copyrange/destination-47553d02-bfd1-4ffd-9a2c-98f85504c734-111686153955377200-1",
        "LastModified": "2024-01-02T11:3...</msg>
<status status="PASS" starttime="20240102 11:37:44.508" endtime="20240102 11:37:45.266"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:37:45.267" level="INFO">{
    "CopyPartResult": {
        "ETag": "/s3v/erasure/ozone-test-8006035476/copyrange/destination-47553d02-bfd1-4ffd-9a2c-98f85504c734-111686153955377200-1",
        "LastModified": "2024-01-02T11:37:45.210Z"
    }
}</msg>
<status status="PASS" starttime="20240102 11:37:45.267" endtime="20240102 11:37:45.267"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:37:45.268" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:37:45.267" endtime="20240102 11:37:45.268"/>
</kw>
<status status="PASS" starttime="20240102 11:37:44.507" endtime="20240102 11:37:45.268"/>
</kw>
<msg timestamp="20240102 11:37:45.268" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:37:44.507" endtime="20240102 11:37:45.268"/>
</kw>
<msg timestamp="20240102 11:37:45.268" level="INFO">${output} = {
    "CopyPartResult": {
        "ETag": "/s3v/erasure/ozone-test-8006035476/copyrange/destination-47553d02-bfd1-4ffd-9a2c-98f85504c734-111686153955377200-1",
        "LastModified": "2024-01-02T11:3...</msg>
<status status="PASS" starttime="20240102 11:37:44.506" endtime="20240102 11:37:45.268"/>
</kw>
<msg timestamp="20240102 11:37:45.269" level="INFO">${result} = {
    "CopyPartResult": {
        "ETag": "/s3v/erasure/ozone-test-8006035476/copyrange/destination-47553d02-bfd1-4ffd-9a2c-98f85504c734-111686153955377200-1",
        "LastModified": "2024-01-02T11:3...</msg>
<status status="PASS" starttime="20240102 11:37:44.506" endtime="20240102 11:37:45.269"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:37:45.269" endtime="20240102 11:37:45.269"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>LastModified</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:37:45.269" endtime="20240102 11:37:45.269"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag1}</var>
<arg>echo '${result}' | jq -r '.CopyPartResult.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:37:45.272" level="INFO">Running command 'echo '{
    "CopyPartResult": {
        "ETag": "/s3v/erasure/ozone-test-8006035476/copyrange/destination-47553d02-bfd1-4ffd-9a2c-98f85504c734-111686153955377200-1",
        "LastModified": "2024-01-02T11:37:45.210Z"
    }
}' | jq -r '.CopyPartResult.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:37:45.298" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:37:45.298" level="INFO">${output} = /s3v/erasure/ozone-test-8006035476/copyrange/destination-47553d02-bfd1-4ffd-9a2c-98f85504c734-111686153955377200-1</msg>
<status status="PASS" starttime="20240102 11:37:45.270" endtime="20240102 11:37:45.298"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:37:45.299" level="INFO">/s3v/erasure/ozone-test-8006035476/copyrange/destination-47553d02-bfd1-4ffd-9a2c-98f85504c734-111686153955377200-1</msg>
<status status="PASS" starttime="20240102 11:37:45.298" endtime="20240102 11:37:45.299"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:37:45.299" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:37:45.299" endtime="20240102 11:37:45.299"/>
</kw>
<msg timestamp="20240102 11:37:45.300" level="INFO">${eTag1} = /s3v/erasure/ozone-test-8006035476/copyrange/destination-47553d02-bfd1-4ffd-9a2c-98f85504c734-111686153955377200-1</msg>
<status status="PASS" starttime="20240102 11:37:45.270" endtime="20240102 11:37:45.300"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part-copy --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination --upload-id ${uploadID} --part-number 2 --copy-source ${BUCKET}/${PREFIX}/copyrange/source --copy-source-range bytes=10485758-10485759</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:37:45.303" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part-copy --bucket erasure --key ozone-test-8006035476/copyrange/destination --upload-id 47553d02-bfd1-4ffd-9a2c-98f85504c734-111686153955377200 --part-number 2 --copy-source erasure/ozone-test-8006035476/copyrange/source --copy-source-range bytes=10485758-10485759 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:37:45.848" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:37:45.849" level="INFO">${output} = {
    "CopyPartResult": {
        "ETag": "/s3v/erasure/ozone-test-8006035476/copyrange/destination-47553d02-bfd1-4ffd-9a2c-98f85504c734-111686153955377200-2",
        "LastModified": "2024-01-02T11:3...</msg>
<status status="PASS" starttime="20240102 11:37:45.302" endtime="20240102 11:37:45.849"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:37:45.850" level="INFO">{
    "CopyPartResult": {
        "ETag": "/s3v/erasure/ozone-test-8006035476/copyrange/destination-47553d02-bfd1-4ffd-9a2c-98f85504c734-111686153955377200-2",
        "LastModified": "2024-01-02T11:37:45.797Z"
    }
}</msg>
<status status="PASS" starttime="20240102 11:37:45.849" endtime="20240102 11:37:45.850"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:37:45.850" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:37:45.850" endtime="20240102 11:37:45.850"/>
</kw>
<status status="PASS" starttime="20240102 11:37:45.301" endtime="20240102 11:37:45.850"/>
</kw>
<msg timestamp="20240102 11:37:45.850" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:37:45.301" endtime="20240102 11:37:45.851"/>
</kw>
<msg timestamp="20240102 11:37:45.851" level="INFO">${output} = {
    "CopyPartResult": {
        "ETag": "/s3v/erasure/ozone-test-8006035476/copyrange/destination-47553d02-bfd1-4ffd-9a2c-98f85504c734-111686153955377200-2",
        "LastModified": "2024-01-02T11:3...</msg>
<status status="PASS" starttime="20240102 11:37:45.301" endtime="20240102 11:37:45.851"/>
</kw>
<msg timestamp="20240102 11:37:45.851" level="INFO">${result} = {
    "CopyPartResult": {
        "ETag": "/s3v/erasure/ozone-test-8006035476/copyrange/destination-47553d02-bfd1-4ffd-9a2c-98f85504c734-111686153955377200-2",
        "LastModified": "2024-01-02T11:3...</msg>
<status status="PASS" starttime="20240102 11:37:45.300" endtime="20240102 11:37:45.851"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:37:45.851" endtime="20240102 11:37:45.851"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>LastModified</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:37:45.852" endtime="20240102 11:37:45.852"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag2}</var>
<arg>echo '${result}' | jq -r '.CopyPartResult.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:37:45.854" level="INFO">Running command 'echo '{
    "CopyPartResult": {
        "ETag": "/s3v/erasure/ozone-test-8006035476/copyrange/destination-47553d02-bfd1-4ffd-9a2c-98f85504c734-111686153955377200-2",
        "LastModified": "2024-01-02T11:37:45.797Z"
    }
}' | jq -r '.CopyPartResult.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:37:45.885" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:37:45.885" level="INFO">${output} = /s3v/erasure/ozone-test-8006035476/copyrange/destination-47553d02-bfd1-4ffd-9a2c-98f85504c734-111686153955377200-2</msg>
<status status="PASS" starttime="20240102 11:37:45.853" endtime="20240102 11:37:45.885"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:37:45.885" level="INFO">/s3v/erasure/ozone-test-8006035476/copyrange/destination-47553d02-bfd1-4ffd-9a2c-98f85504c734-111686153955377200-2</msg>
<status status="PASS" starttime="20240102 11:37:45.885" endtime="20240102 11:37:45.886"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:37:45.886" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:37:45.886" endtime="20240102 11:37:45.886"/>
</kw>
<msg timestamp="20240102 11:37:45.886" level="INFO">${eTag2} = /s3v/erasure/ozone-test-8006035476/copyrange/destination-47553d02-bfd1-4ffd-9a2c-98f85504c734-111686153955377200-2</msg>
<status status="PASS" starttime="20240102 11:37:45.852" endtime="20240102 11:37:45.886"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination --multipart-upload 'Parts=[{ETag=${eTag1},PartNumber=1},{ETag=${eTag2},PartNumber=2}]'</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:37:45.890" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --upload-id 47553d02-bfd1-4ffd-9a2c-98f85504c734-111686153955377200 --bucket erasure --key ozone-test-8006035476/copyrange/destination --multipart-upload 'Parts=[{ETag=/s3v/erasure/ozone-test-8006035476/copyrange/destination-47553d02-bfd1-4ffd-9a2c-98f85504c734-111686153955377200-1,PartNumber=1},{ETag=/s3v/erasure/ozone-test-8006035476/copyrange/destination-47553d02-bfd1-4ffd-9a2c-98f85504c734-111686153955377200-2,PartNumber=2}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:37:46.330" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:37:46.331" level="INFO">${output} = {
    "Location": "erasure",
    "Bucket": "erasure",
    "Key": "ozone-test-8006035476/copyrange/destination",
    "ETag": "\"24d794dfc756320ffadb905d526299bc-2\""
}</msg>
<status status="PASS" starttime="20240102 11:37:45.888" endtime="20240102 11:37:46.331"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:37:46.332" level="INFO">{
    "Location": "erasure",
    "Bucket": "erasure",
    "Key": "ozone-test-8006035476/copyrange/destination",
    "ETag": "\"24d794dfc756320ffadb905d526299bc-2\""
}</msg>
<status status="PASS" starttime="20240102 11:37:46.331" endtime="20240102 11:37:46.332"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:37:46.332" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:37:46.332" endtime="20240102 11:37:46.332"/>
</kw>
<status status="PASS" starttime="20240102 11:37:45.888" endtime="20240102 11:37:46.332"/>
</kw>
<msg timestamp="20240102 11:37:46.332" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:37:45.888" endtime="20240102 11:37:46.332"/>
</kw>
<msg timestamp="20240102 11:37:46.333" level="INFO">${output} = {
    "Location": "erasure",
    "Bucket": "erasure",
    "Key": "ozone-test-8006035476/copyrange/destination",
    "ETag": "\"24d794dfc756320ffadb905d526299bc-2\""
}</msg>
<status status="PASS" starttime="20240102 11:37:45.887" endtime="20240102 11:37:46.333"/>
</kw>
<status status="PASS" starttime="20240102 11:37:45.886" endtime="20240102 11:37:46.333"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination /tmp/part-result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:37:46.336" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket erasure --key ozone-test-8006035476/copyrange/destination /tmp/part-result 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:37:46.976" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:37:46.976" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 02 Jan 2024 11:37:46 GMT",
    "ContentLength": 10485760,
    "ETag": "\"24d794dfc756320ffadb905d526299bc-2\"",
    "CacheControl": "no-cache",...</msg>
<status status="PASS" starttime="20240102 11:37:46.335" endtime="20240102 11:37:46.976"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:37:46.977" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 02 Jan 2024 11:37:46 GMT",
    "ContentLength": 10485760,
    "ETag": "\"24d794dfc756320ffadb905d526299bc-2\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Tue, 02 Jan 2024 11:37:46 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20240102 11:37:46.976" endtime="20240102 11:37:46.977"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:37:46.978" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:37:46.977" endtime="20240102 11:37:46.978"/>
</kw>
<status status="PASS" starttime="20240102 11:37:46.335" endtime="20240102 11:37:46.978"/>
</kw>
<msg timestamp="20240102 11:37:46.978" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:37:46.334" endtime="20240102 11:37:46.978"/>
</kw>
<msg timestamp="20240102 11:37:46.978" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 02 Jan 2024 11:37:46 GMT",
    "ContentLength": 10485760,
    "ETag": "\"24d794dfc756320ffadb905d526299bc-2\"",
    "CacheControl": "no-cache",...</msg>
<status status="PASS" starttime="20240102 11:37:46.334" endtime="20240102 11:37:46.978"/>
</kw>
<status status="PASS" starttime="20240102 11:37:46.333" endtime="20240102 11:37:46.978"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/part1</arg>
<arg>/tmp/part-result</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:37:46.981" level="INFO">Running command 'md5sum /tmp/part1 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:37:47.001" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:37:47.001" level="INFO">${output} = 001c01e7812f5d636c421f640bad9625</msg>
<status status="PASS" starttime="20240102 11:37:46.980" endtime="20240102 11:37:47.001"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:37:47.002" level="INFO">001c01e7812f5d636c421f640bad9625</msg>
<status status="PASS" starttime="20240102 11:37:47.001" endtime="20240102 11:37:47.002"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:37:47.002" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:37:47.002" endtime="20240102 11:37:47.003"/>
</kw>
<status status="PASS" starttime="20240102 11:37:46.980" endtime="20240102 11:37:47.003"/>
</kw>
<msg timestamp="20240102 11:37:47.003" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:37:46.979" endtime="20240102 11:37:47.003"/>
</kw>
<msg timestamp="20240102 11:37:47.003" level="INFO">${checksumbefore} = 001c01e7812f5d636c421f640bad9625</msg>
<status status="PASS" starttime="20240102 11:37:46.979" endtime="20240102 11:37:47.003"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:37:47.006" level="INFO">Running command 'md5sum /tmp/part-result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:37:47.025" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:37:47.025" level="INFO">${output} = 001c01e7812f5d636c421f640bad9625</msg>
<status status="PASS" starttime="20240102 11:37:47.004" endtime="20240102 11:37:47.025"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:37:47.026" level="INFO">001c01e7812f5d636c421f640bad9625</msg>
<status status="PASS" starttime="20240102 11:37:47.026" endtime="20240102 11:37:47.026"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:37:47.027" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:37:47.027" endtime="20240102 11:37:47.027"/>
</kw>
<status status="PASS" starttime="20240102 11:37:47.004" endtime="20240102 11:37:47.027"/>
</kw>
<msg timestamp="20240102 11:37:47.027" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:37:47.004" endtime="20240102 11:37:47.027"/>
</kw>
<msg timestamp="20240102 11:37:47.028" level="INFO">${checksumafter} = 001c01e7812f5d636c421f640bad9625</msg>
<status status="PASS" starttime="20240102 11:37:47.003" endtime="20240102 11:37:47.028"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240102 11:37:47.028" endtime="20240102 11:37:47.028"/>
</kw>
<status status="PASS" starttime="20240102 11:37:46.978" endtime="20240102 11:37:47.028"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20240102 11:37:43.176" endtime="20240102 11:37:47.028"/>
</test>
<test id="s1-s1-s8-t13" name="Test Multipart Upload Put With Copy and range with IfModifiedSince" line="314">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20240102 11:37:47.031" level="INFO">${randStr} = 8927362968</msg>
<status status="PASS" starttime="20240102 11:37:47.030" endtime="20240102 11:37:47.031"/>
</kw>
<msg timestamp="20240102 11:37:47.031" level="INFO">${random} = ozone-test-8927362968</msg>
<status status="PASS" starttime="20240102 11:37:47.030" endtime="20240102 11:37:47.031"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20240102 11:37:47.032" level="INFO">${PREFIX} = ozone-test-8927362968</msg>
<status status="PASS" starttime="20240102 11:37:47.031" endtime="20240102 11:37:47.032"/>
</kw>
<status status="PASS" starttime="20240102 11:37:47.030" endtime="20240102 11:37:47.032"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Create Random file</arg>
<arg>10</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Create Random file">
<arg>10</arg>
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=${size_in_megabytes} status=none</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:37:47.035" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=10 status=none 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:37:47.070" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:37:47.070" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240102 11:37:47.034" endtime="20240102 11:37:47.070"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:37:47.071" level="INFO"/>
<status status="PASS" starttime="20240102 11:37:47.071" endtime="20240102 11:37:47.071"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:37:47.072" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:37:47.072" endtime="20240102 11:37:47.072"/>
</kw>
<status status="PASS" starttime="20240102 11:37:47.033" endtime="20240102 11:37:47.072"/>
</kw>
<msg timestamp="20240102 11:37:47.072" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:37:47.033" endtime="20240102 11:37:47.073"/>
</kw>
<status status="PASS" starttime="20240102 11:37:47.032" endtime="20240102 11:37:47.073"/>
</kw>
<status status="PASS" starttime="20240102 11:37:47.032" endtime="20240102 11:37:47.073"/>
</kw>
<status status="PASS" starttime="20240102 11:37:47.032" endtime="20240102 11:37:47.073"/>
</kw>
<kw name="Get Current Date" library="DateTime">
<var>${curDate}</var>
<doc>Returns current local or UTC time with an optional increment.</doc>
<msg timestamp="20240102 11:37:47.073" level="INFO">${curDate} = 2024-01-02 11:37:47.073</msg>
<status status="PASS" starttime="20240102 11:37:47.073" endtime="20240102 11:37:47.073"/>
</kw>
<kw name="Subtract Time From Date" library="DateTime">
<var>${beforeCreate}</var>
<arg>${curDate}</arg>
<arg>1 day</arg>
<doc>Subtracts time from date and returns the resulting date.</doc>
<msg timestamp="20240102 11:37:47.077" level="INFO">${beforeCreate} = 2024-01-01 11:37:47.073</msg>
<status status="PASS" starttime="20240102 11:37:47.074" endtime="20240102 11:37:47.077"/>
</kw>
<kw name="Add Time To Date" library="DateTime">
<var>${tomorrow}</var>
<arg>${curDate}</arg>
<arg>1 day</arg>
<doc>Adds time to date and returns the resulting date.</doc>
<msg timestamp="20240102 11:37:47.077" level="INFO">${tomorrow} = 2024-01-03 11:37:47.073</msg>
<status status="PASS" starttime="20240102 11:37:47.077" endtime="20240102 11:37:47.077"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/copyrange/source --body /tmp/part1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:37:47.081" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket erasure --key ozone-test-8927362968/copyrange/source --body /tmp/part1 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:37:47.757" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:37:47.758" level="INFO">${output} = {
    "ETag": "\"0b2a52c84dbe8dd4203b5ef0ce55c2e0\""
}</msg>
<status status="PASS" starttime="20240102 11:37:47.079" endtime="20240102 11:37:47.758"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:37:47.758" level="INFO">{
    "ETag": "\"0b2a52c84dbe8dd4203b5ef0ce55c2e0\""
}</msg>
<status status="PASS" starttime="20240102 11:37:47.758" endtime="20240102 11:37:47.759"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:37:47.759" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:37:47.759" endtime="20240102 11:37:47.759"/>
</kw>
<status status="PASS" starttime="20240102 11:37:47.079" endtime="20240102 11:37:47.759"/>
</kw>
<msg timestamp="20240102 11:37:47.759" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:37:47.078" endtime="20240102 11:37:47.759"/>
</kw>
<msg timestamp="20240102 11:37:47.760" level="INFO">${output} = {
    "ETag": "\"0b2a52c84dbe8dd4203b5ef0ce55c2e0\""
}</msg>
<status status="PASS" starttime="20240102 11:37:47.078" endtime="20240102 11:37:47.760"/>
</kw>
<msg timestamp="20240102 11:37:47.760" level="INFO">${result} = {
    "ETag": "\"0b2a52c84dbe8dd4203b5ef0ce55c2e0\""
}</msg>
<status status="PASS" starttime="20240102 11:37:47.077" endtime="20240102 11:37:47.760"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:37:47.763" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket erasure --key ozone-test-8927362968/copyrange/destination 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:37:48.234" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:37:48.234" level="INFO">${output} = {
    "Bucket": "erasure",
    "Key": "ozone-test-8927362968/copyrange/destination",
    "UploadId": "f7576e87-26b8-4204-9eb2-3f5205e45904-111686154202251316"
}</msg>
<status status="PASS" starttime="20240102 11:37:47.762" endtime="20240102 11:37:48.234"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:37:48.235" level="INFO">{
    "Bucket": "erasure",
    "Key": "ozone-test-8927362968/copyrange/destination",
    "UploadId": "f7576e87-26b8-4204-9eb2-3f5205e45904-111686154202251316"
}</msg>
<status status="PASS" starttime="20240102 11:37:48.234" endtime="20240102 11:37:48.235"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:37:48.235" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:37:48.235" endtime="20240102 11:37:48.236"/>
</kw>
<status status="PASS" starttime="20240102 11:37:47.761" endtime="20240102 11:37:48.236"/>
</kw>
<msg timestamp="20240102 11:37:48.236" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:37:47.761" endtime="20240102 11:37:48.236"/>
</kw>
<msg timestamp="20240102 11:37:48.236" level="INFO">${output} = {
    "Bucket": "erasure",
    "Key": "ozone-test-8927362968/copyrange/destination",
    "UploadId": "f7576e87-26b8-4204-9eb2-3f5205e45904-111686154202251316"
}</msg>
<status status="PASS" starttime="20240102 11:37:47.760" endtime="20240102 11:37:48.236"/>
</kw>
<msg timestamp="20240102 11:37:48.236" level="INFO">${result} = {
    "Bucket": "erasure",
    "Key": "ozone-test-8927362968/copyrange/destination",
    "UploadId": "f7576e87-26b8-4204-9eb2-3f5205e45904-111686154202251316"
}</msg>
<status status="PASS" starttime="20240102 11:37:47.760" endtime="20240102 11:37:48.236"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${uploadID}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:37:48.239" level="INFO">Running command 'echo '{
    "Bucket": "erasure",
    "Key": "ozone-test-8927362968/copyrange/destination",
    "UploadId": "f7576e87-26b8-4204-9eb2-3f5205e45904-111686154202251316"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:37:48.265" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:37:48.265" level="INFO">${output} = f7576e87-26b8-4204-9eb2-3f5205e45904-111686154202251316</msg>
<status status="PASS" starttime="20240102 11:37:48.237" endtime="20240102 11:37:48.265"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:37:48.266" level="INFO">f7576e87-26b8-4204-9eb2-3f5205e45904-111686154202251316</msg>
<status status="PASS" starttime="20240102 11:37:48.266" endtime="20240102 11:37:48.266"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:37:48.267" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:37:48.266" endtime="20240102 11:37:48.267"/>
</kw>
<msg timestamp="20240102 11:37:48.267" level="INFO">${uploadID} = f7576e87-26b8-4204-9eb2-3f5205e45904-111686154202251316</msg>
<status status="PASS" starttime="20240102 11:37:48.236" endtime="20240102 11:37:48.267"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:37:48.267" endtime="20240102 11:37:48.268"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>UploadId</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:37:48.268" endtime="20240102 11:37:48.268"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>head-object --bucket ${BUCKET} --key ${PREFIX}/copyrange/source</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:37:48.271" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket erasure --key ozone-test-8927362968/copyrange/source 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:37:48.740" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:37:48.740" level="INFO">${output} = {
    "LastModified": "Tue, 02 Jan 2024 11:37:47 GMT",
    "ContentLength": 10485760,
    "ETag": "\"0b2a52c84dbe8dd4203b5ef0ce55c2e0\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/oct...</msg>
<status status="PASS" starttime="20240102 11:37:48.270" endtime="20240102 11:37:48.740"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:37:48.741" level="INFO">{
    "LastModified": "Tue, 02 Jan 2024 11:37:47 GMT",
    "ContentLength": 10485760,
    "ETag": "\"0b2a52c84dbe8dd4203b5ef0ce55c2e0\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-stream",
    "Expires": "Tue, 02 Jan 2024 11:37:48 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20240102 11:37:48.741" endtime="20240102 11:37:48.741"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:37:48.742" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:37:48.742" endtime="20240102 11:37:48.742"/>
</kw>
<status status="PASS" starttime="20240102 11:37:48.269" endtime="20240102 11:37:48.742"/>
</kw>
<msg timestamp="20240102 11:37:48.742" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:37:48.269" endtime="20240102 11:37:48.742"/>
</kw>
<msg timestamp="20240102 11:37:48.742" level="INFO">${output} = {
    "LastModified": "Tue, 02 Jan 2024 11:37:47 GMT",
    "ContentLength": 10485760,
    "ETag": "\"0b2a52c84dbe8dd4203b5ef0ce55c2e0\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/oct...</msg>
<status status="PASS" starttime="20240102 11:37:48.269" endtime="20240102 11:37:48.742"/>
</kw>
<msg timestamp="20240102 11:37:48.743" level="INFO">${result} = {
    "LastModified": "Tue, 02 Jan 2024 11:37:47 GMT",
    "ContentLength": 10485760,
    "ETag": "\"0b2a52c84dbe8dd4203b5ef0ce55c2e0\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/oct...</msg>
<status status="PASS" starttime="20240102 11:37:48.268" endtime="20240102 11:37:48.743"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${lastModified}</var>
<arg>echo '${result}' | jq -r '.LastModified'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:37:48.745" level="INFO">Running command 'echo '{
    "LastModified": "Tue, 02 Jan 2024 11:37:47 GMT",
    "ContentLength": 10485760,
    "ETag": "\"0b2a52c84dbe8dd4203b5ef0ce55c2e0\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-stream",
    "Expires": "Tue, 02 Jan 2024 11:37:48 GMT",
    "Metadata": {}
}' | jq -r '.LastModified' 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:37:48.771" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:37:48.771" level="INFO">${output} = Tue, 02 Jan 2024 11:37:47 GMT</msg>
<status status="PASS" starttime="20240102 11:37:48.743" endtime="20240102 11:37:48.771"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:37:48.772" level="INFO">Tue, 02 Jan 2024 11:37:47 GMT</msg>
<status status="PASS" starttime="20240102 11:37:48.771" endtime="20240102 11:37:48.772"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:37:48.772" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:37:48.772" endtime="20240102 11:37:48.772"/>
</kw>
<msg timestamp="20240102 11:37:48.773" level="INFO">${lastModified} = Tue, 02 Jan 2024 11:37:47 GMT</msg>
<status status="PASS" starttime="20240102 11:37:48.743" endtime="20240102 11:37:48.773"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${LastModified}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:37:48.773" endtime="20240102 11:37:48.773"/>
</kw>
<kw name="Convert Date" library="DateTime">
<var>${lmDate}</var>
<arg>${lastModified}</arg>
<arg>date_format=%a, %d %b %Y %H:%M:%S %Z</arg>
<doc>Converts between supported `date formats`.</doc>
<msg timestamp="20240102 11:37:48.775" level="INFO">${lmDate} = 2024-01-02 11:37:47.000</msg>
<status status="PASS" starttime="20240102 11:37:48.773" endtime="20240102 11:37:48.776"/>
</kw>
<kw name="Add Time To Date" library="DateTime">
<var>${afterCreate}</var>
<arg>${lmDate}</arg>
<arg>3 seconds</arg>
<doc>Adds time to date and returns the resulting date.</doc>
<msg timestamp="20240102 11:37:48.776" level="INFO">${afterCreate} = 2024-01-02 11:37:50.000</msg>
<status status="PASS" starttime="20240102 11:37:48.776" endtime="20240102 11:37:48.776"/>
</kw>
<kw name="Wait Til Date Past">
<arg>${afterCreate}</arg>
<kw name="Get Current Date" library="DateTime">
<var>${latestDate}</var>
<arg>UTC</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<msg timestamp="20240102 11:37:48.777" level="INFO">${latestDate} = 2024-01-02 11:37:48.777</msg>
<status status="PASS" starttime="20240102 11:37:48.777" endtime="20240102 11:37:48.777"/>
</kw>
<kw name="Subtract Date From Date" library="DateTime">
<var>${sleepSeconds}</var>
<arg>${date}</arg>
<arg>${latestDate}</arg>
<doc>Subtracts date from another date and returns time between.</doc>
<msg timestamp="20240102 11:37:48.778" level="INFO">${sleepSeconds} = 1.223</msg>
<status status="PASS" starttime="20240102 11:37:48.777" endtime="20240102 11:37:48.778"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${sleepSeconds} &gt; 0</arg>
<arg>Sleep</arg>
<arg>${sleepSeconds}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Sleep" library="BuiltIn">
<arg>${sleepSeconds}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240102 11:37:50.002" level="INFO">Slept 1 second 223 milliseconds</msg>
<status status="PASS" starttime="20240102 11:37:48.778" endtime="20240102 11:37:50.002"/>
</kw>
<status status="PASS" starttime="20240102 11:37:48.778" endtime="20240102 11:37:50.002"/>
</kw>
<status status="PASS" starttime="20240102 11:37:48.776" endtime="20240102 11:37:50.002"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>upload-part-copy --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination --upload-id ${uploadID} --part-number 1 --copy-source ${BUCKET}/${PREFIX}/copyrange/source --copy-source-range bytes=0-10485757 --copy-source-if-modified-since '${afterCreate}'</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:37:50.006" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part-copy --bucket erasure --key ozone-test-8927362968/copyrange/destination --upload-id f7576e87-26b8-4204-9eb2-3f5205e45904-111686154202251316 --part-number 1 --copy-source erasure/ozone-test-8927362968/copyrange/source --copy-source-range bytes=0-10485757 --copy-source-if-modified-since '2024-01-02 11:37:50.000' 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:37:50.476" level="INFO">${rc} = 255</msg>
<msg timestamp="20240102 11:37:50.477" level="INFO">${output} = 
An error occurred (PreconditionFailed) when calling the UploadPartCopy operation: At least one of the pre-conditions you specified did not hold</msg>
<status status="PASS" starttime="20240102 11:37:50.004" endtime="20240102 11:37:50.477"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:37:50.477" level="INFO">
An error occurred (PreconditionFailed) when calling the UploadPartCopy operation: At least one of the pre-conditions you specified did not hold</msg>
<status status="PASS" starttime="20240102 11:37:50.477" endtime="20240102 11:37:50.478"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:37:50.478" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:37:50.478" endtime="20240102 11:37:50.478"/>
</kw>
<msg timestamp="20240102 11:37:50.478" level="INFO">${output} = 
An error occurred (PreconditionFailed) when calling the UploadPartCopy operation: At least one of the pre-conditions you specified did not hold</msg>
<status status="PASS" starttime="20240102 11:37:50.003" endtime="20240102 11:37:50.478"/>
</kw>
<msg timestamp="20240102 11:37:50.479" level="INFO">${result} = 
An error occurred (PreconditionFailed) when calling the UploadPartCopy operation: At least one of the pre-conditions you specified did not hold</msg>
<status status="PASS" starttime="20240102 11:37:50.002" endtime="20240102 11:37:50.479"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PreconditionFailed</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:37:50.479" endtime="20240102 11:37:50.479"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>upload-part-copy --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination --upload-id ${uploadID} --part-number 2 --copy-source ${BUCKET}/${PREFIX}/copyrange/source --copy-source-range bytes=10485758-10485759 --copy-source-if-unmodified-since '${beforeCreate}'</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:37:50.482" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part-copy --bucket erasure --key ozone-test-8927362968/copyrange/destination --upload-id f7576e87-26b8-4204-9eb2-3f5205e45904-111686154202251316 --part-number 2 --copy-source erasure/ozone-test-8927362968/copyrange/source --copy-source-range bytes=10485758-10485759 --copy-source-if-unmodified-since '2024-01-01 11:37:47.073' 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:37:50.946" level="INFO">${rc} = 255</msg>
<msg timestamp="20240102 11:37:50.946" level="INFO">${output} = 
An error occurred (PreconditionFailed) when calling the UploadPartCopy operation: At least one of the pre-conditions you specified did not hold</msg>
<status status="PASS" starttime="20240102 11:37:50.481" endtime="20240102 11:37:50.946"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:37:50.947" level="INFO">
An error occurred (PreconditionFailed) when calling the UploadPartCopy operation: At least one of the pre-conditions you specified did not hold</msg>
<status status="PASS" starttime="20240102 11:37:50.946" endtime="20240102 11:37:50.947"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:37:50.947" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:37:50.947" endtime="20240102 11:37:50.948"/>
</kw>
<msg timestamp="20240102 11:37:50.948" level="INFO">${output} = 
An error occurred (PreconditionFailed) when calling the UploadPartCopy operation: At least one of the pre-conditions you specified did not hold</msg>
<status status="PASS" starttime="20240102 11:37:50.480" endtime="20240102 11:37:50.948"/>
</kw>
<msg timestamp="20240102 11:37:50.948" level="INFO">${result} = 
An error occurred (PreconditionFailed) when calling the UploadPartCopy operation: At least one of the pre-conditions you specified did not hold</msg>
<status status="PASS" starttime="20240102 11:37:50.479" endtime="20240102 11:37:50.948"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PreconditionFailed</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:37:50.948" endtime="20240102 11:37:50.948"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>upload-part-copy --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination --upload-id ${uploadID} --part-number 1 --copy-source ${BUCKET}/${PREFIX}/copyrange/source --copy-source-range bytes=0-10485757 --copy-source-if-modified-since '${beforeCreate}'</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:37:50.951" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part-copy --bucket erasure --key ozone-test-8927362968/copyrange/destination --upload-id f7576e87-26b8-4204-9eb2-3f5205e45904-111686154202251316 --part-number 1 --copy-source erasure/ozone-test-8927362968/copyrange/source --copy-source-range bytes=0-10485757 --copy-source-if-modified-since '2024-01-01 11:37:47.073' 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:37:51.956" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:37:51.956" level="INFO">${output} = {
    "CopyPartResult": {
        "ETag": "/s3v/erasure/ozone-test-8927362968/copyrange/destination-f7576e87-26b8-4204-9eb2-3f5205e45904-111686154202251316-1",
        "LastModified": "2024-01-02T11:3...</msg>
<status status="PASS" starttime="20240102 11:37:50.950" endtime="20240102 11:37:51.956"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:37:51.957" level="INFO">{
    "CopyPartResult": {
        "ETag": "/s3v/erasure/ozone-test-8927362968/copyrange/destination-f7576e87-26b8-4204-9eb2-3f5205e45904-111686154202251316-1",
        "LastModified": "2024-01-02T11:37:51.813Z"
    }
}</msg>
<status status="PASS" starttime="20240102 11:37:51.956" endtime="20240102 11:37:51.957"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:37:51.958" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:37:51.957" endtime="20240102 11:37:51.958"/>
</kw>
<msg timestamp="20240102 11:37:51.958" level="INFO">${output} = {
    "CopyPartResult": {
        "ETag": "/s3v/erasure/ozone-test-8927362968/copyrange/destination-f7576e87-26b8-4204-9eb2-3f5205e45904-111686154202251316-1",
        "LastModified": "2024-01-02T11:3...</msg>
<status status="PASS" starttime="20240102 11:37:50.949" endtime="20240102 11:37:51.958"/>
</kw>
<msg timestamp="20240102 11:37:51.958" level="INFO">${result} = {
    "CopyPartResult": {
        "ETag": "/s3v/erasure/ozone-test-8927362968/copyrange/destination-f7576e87-26b8-4204-9eb2-3f5205e45904-111686154202251316-1",
        "LastModified": "2024-01-02T11:3...</msg>
<status status="PASS" starttime="20240102 11:37:50.949" endtime="20240102 11:37:51.958"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:37:51.959" endtime="20240102 11:37:51.959"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>LastModified</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:37:51.959" endtime="20240102 11:37:51.959"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag1}</var>
<arg>echo '${result}' | jq -r '.CopyPartResult.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:37:51.968" level="INFO">Running command 'echo '{
    "CopyPartResult": {
        "ETag": "/s3v/erasure/ozone-test-8927362968/copyrange/destination-f7576e87-26b8-4204-9eb2-3f5205e45904-111686154202251316-1",
        "LastModified": "2024-01-02T11:37:51.813Z"
    }
}' | jq -r '.CopyPartResult.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:37:52.037" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:37:52.037" level="INFO">${output} = /s3v/erasure/ozone-test-8927362968/copyrange/destination-f7576e87-26b8-4204-9eb2-3f5205e45904-111686154202251316-1</msg>
<status status="PASS" starttime="20240102 11:37:51.960" endtime="20240102 11:37:52.037"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:37:52.045" level="INFO">/s3v/erasure/ozone-test-8927362968/copyrange/destination-f7576e87-26b8-4204-9eb2-3f5205e45904-111686154202251316-1</msg>
<status status="PASS" starttime="20240102 11:37:52.044" endtime="20240102 11:37:52.045"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:37:52.046" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:37:52.045" endtime="20240102 11:37:52.046"/>
</kw>
<msg timestamp="20240102 11:37:52.046" level="INFO">${eTag1} = /s3v/erasure/ozone-test-8927362968/copyrange/destination-f7576e87-26b8-4204-9eb2-3f5205e45904-111686154202251316-1</msg>
<status status="PASS" starttime="20240102 11:37:51.960" endtime="20240102 11:37:52.046"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>upload-part-copy --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination --upload-id ${uploadID} --part-number 2 --copy-source ${BUCKET}/${PREFIX}/copyrange/source --copy-source-range bytes=10485758-10485759 --copy-source-if-unmodified-since '${afterCreate}'</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:37:52.056" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part-copy --bucket erasure --key ozone-test-8927362968/copyrange/destination --upload-id f7576e87-26b8-4204-9eb2-3f5205e45904-111686154202251316 --part-number 2 --copy-source erasure/ozone-test-8927362968/copyrange/source --copy-source-range bytes=10485758-10485759 --copy-source-if-unmodified-since '2024-01-02 11:37:50.000' 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:37:52.640" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:37:52.640" level="INFO">${output} = {
    "CopyPartResult": {
        "ETag": "/s3v/erasure/ozone-test-8927362968/copyrange/destination-f7576e87-26b8-4204-9eb2-3f5205e45904-111686154202251316-2",
        "LastModified": "2024-01-02T11:3...</msg>
<status status="PASS" starttime="20240102 11:37:52.049" endtime="20240102 11:37:52.640"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:37:52.641" level="INFO">{
    "CopyPartResult": {
        "ETag": "/s3v/erasure/ozone-test-8927362968/copyrange/destination-f7576e87-26b8-4204-9eb2-3f5205e45904-111686154202251316-2",
        "LastModified": "2024-01-02T11:37:52.586Z"
    }
}</msg>
<status status="PASS" starttime="20240102 11:37:52.640" endtime="20240102 11:37:52.641"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:37:52.642" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:37:52.641" endtime="20240102 11:37:52.642"/>
</kw>
<msg timestamp="20240102 11:37:52.642" level="INFO">${output} = {
    "CopyPartResult": {
        "ETag": "/s3v/erasure/ozone-test-8927362968/copyrange/destination-f7576e87-26b8-4204-9eb2-3f5205e45904-111686154202251316-2",
        "LastModified": "2024-01-02T11:3...</msg>
<status status="PASS" starttime="20240102 11:37:52.048" endtime="20240102 11:37:52.642"/>
</kw>
<msg timestamp="20240102 11:37:52.642" level="INFO">${result} = {
    "CopyPartResult": {
        "ETag": "/s3v/erasure/ozone-test-8927362968/copyrange/destination-f7576e87-26b8-4204-9eb2-3f5205e45904-111686154202251316-2",
        "LastModified": "2024-01-02T11:3...</msg>
<status status="PASS" starttime="20240102 11:37:52.046" endtime="20240102 11:37:52.642"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:37:52.642" endtime="20240102 11:37:52.642"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>LastModified</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:37:52.643" endtime="20240102 11:37:52.643"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag2}</var>
<arg>echo '${result}' | jq -r '.CopyPartResult.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:37:52.645" level="INFO">Running command 'echo '{
    "CopyPartResult": {
        "ETag": "/s3v/erasure/ozone-test-8927362968/copyrange/destination-f7576e87-26b8-4204-9eb2-3f5205e45904-111686154202251316-2",
        "LastModified": "2024-01-02T11:37:52.586Z"
    }
}' | jq -r '.CopyPartResult.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:37:52.670" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:37:52.670" level="INFO">${output} = /s3v/erasure/ozone-test-8927362968/copyrange/destination-f7576e87-26b8-4204-9eb2-3f5205e45904-111686154202251316-2</msg>
<status status="PASS" starttime="20240102 11:37:52.644" endtime="20240102 11:37:52.671"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:37:52.671" level="INFO">/s3v/erasure/ozone-test-8927362968/copyrange/destination-f7576e87-26b8-4204-9eb2-3f5205e45904-111686154202251316-2</msg>
<status status="PASS" starttime="20240102 11:37:52.671" endtime="20240102 11:37:52.671"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:37:52.672" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:37:52.672" endtime="20240102 11:37:52.672"/>
</kw>
<msg timestamp="20240102 11:37:52.672" level="INFO">${eTag2} = /s3v/erasure/ozone-test-8927362968/copyrange/destination-f7576e87-26b8-4204-9eb2-3f5205e45904-111686154202251316-2</msg>
<status status="PASS" starttime="20240102 11:37:52.643" endtime="20240102 11:37:52.672"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>upload-part-copy --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination --upload-id ${uploadID} --part-number 1 --copy-source ${BUCKET}/${PREFIX}/copyrange/source --copy-source-range bytes=0-10485757 --copy-source-if-modified-since '${tomorrow}'</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:37:52.675" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part-copy --bucket erasure --key ozone-test-8927362968/copyrange/destination --upload-id f7576e87-26b8-4204-9eb2-3f5205e45904-111686154202251316 --part-number 1 --copy-source erasure/ozone-test-8927362968/copyrange/source --copy-source-range bytes=0-10485757 --copy-source-if-modified-since '2024-01-03 11:37:47.073' 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:37:53.586" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:37:53.586" level="INFO">${output} = {
    "CopyPartResult": {
        "ETag": "/s3v/erasure/ozone-test-8927362968/copyrange/destination-f7576e87-26b8-4204-9eb2-3f5205e45904-111686154202251316-1",
        "LastModified": "2024-01-02T11:3...</msg>
<status status="PASS" starttime="20240102 11:37:52.674" endtime="20240102 11:37:53.586"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:37:53.587" level="INFO">{
    "CopyPartResult": {
        "ETag": "/s3v/erasure/ozone-test-8927362968/copyrange/destination-f7576e87-26b8-4204-9eb2-3f5205e45904-111686154202251316-1",
        "LastModified": "2024-01-02T11:37:53.438Z"
    }
}</msg>
<status status="PASS" starttime="20240102 11:37:53.586" endtime="20240102 11:37:53.587"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:37:53.589" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:37:53.587" endtime="20240102 11:37:53.589"/>
</kw>
<msg timestamp="20240102 11:37:53.589" level="INFO">${output} = {
    "CopyPartResult": {
        "ETag": "/s3v/erasure/ozone-test-8927362968/copyrange/destination-f7576e87-26b8-4204-9eb2-3f5205e45904-111686154202251316-1",
        "LastModified": "2024-01-02T11:3...</msg>
<status status="PASS" starttime="20240102 11:37:52.673" endtime="20240102 11:37:53.589"/>
</kw>
<msg timestamp="20240102 11:37:53.590" level="INFO">${result} = {
    "CopyPartResult": {
        "ETag": "/s3v/erasure/ozone-test-8927362968/copyrange/destination-f7576e87-26b8-4204-9eb2-3f5205e45904-111686154202251316-1",
        "LastModified": "2024-01-02T11:3...</msg>
<status status="PASS" starttime="20240102 11:37:52.672" endtime="20240102 11:37:53.590"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:37:53.590" endtime="20240102 11:37:53.590"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>LastModified</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:37:53.590" endtime="20240102 11:37:53.591"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag1}</var>
<arg>echo '${result}' | jq -r '.CopyPartResult.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:37:53.593" level="INFO">Running command 'echo '{
    "CopyPartResult": {
        "ETag": "/s3v/erasure/ozone-test-8927362968/copyrange/destination-f7576e87-26b8-4204-9eb2-3f5205e45904-111686154202251316-1",
        "LastModified": "2024-01-02T11:37:53.438Z"
    }
}' | jq -r '.CopyPartResult.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:37:53.633" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:37:53.633" level="INFO">${output} = /s3v/erasure/ozone-test-8927362968/copyrange/destination-f7576e87-26b8-4204-9eb2-3f5205e45904-111686154202251316-1</msg>
<status status="PASS" starttime="20240102 11:37:53.591" endtime="20240102 11:37:53.634"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:37:53.635" level="INFO">/s3v/erasure/ozone-test-8927362968/copyrange/destination-f7576e87-26b8-4204-9eb2-3f5205e45904-111686154202251316-1</msg>
<status status="PASS" starttime="20240102 11:37:53.634" endtime="20240102 11:37:53.635"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:37:53.635" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:37:53.635" endtime="20240102 11:37:53.636"/>
</kw>
<msg timestamp="20240102 11:37:53.636" level="INFO">${eTag1} = /s3v/erasure/ozone-test-8927362968/copyrange/destination-f7576e87-26b8-4204-9eb2-3f5205e45904-111686154202251316-1</msg>
<status status="PASS" starttime="20240102 11:37:53.591" endtime="20240102 11:37:53.636"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination --multipart-upload 'Parts=[{ETag=${eTag1},PartNumber=1},{ETag=${eTag2},PartNumber=2}]'</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:37:53.641" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --upload-id f7576e87-26b8-4204-9eb2-3f5205e45904-111686154202251316 --bucket erasure --key ozone-test-8927362968/copyrange/destination --multipart-upload 'Parts=[{ETag=/s3v/erasure/ozone-test-8927362968/copyrange/destination-f7576e87-26b8-4204-9eb2-3f5205e45904-111686154202251316-1,PartNumber=1},{ETag=/s3v/erasure/ozone-test-8927362968/copyrange/destination-f7576e87-26b8-4204-9eb2-3f5205e45904-111686154202251316-2,PartNumber=2}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:37:54.119" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:37:54.119" level="INFO">${output} = {
    "Location": "erasure",
    "Bucket": "erasure",
    "Key": "ozone-test-8927362968/copyrange/destination",
    "ETag": "\"24d794dfc756320ffadb905d526299bc-2\""
}</msg>
<status status="PASS" starttime="20240102 11:37:53.638" endtime="20240102 11:37:54.119"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:37:54.120" level="INFO">{
    "Location": "erasure",
    "Bucket": "erasure",
    "Key": "ozone-test-8927362968/copyrange/destination",
    "ETag": "\"24d794dfc756320ffadb905d526299bc-2\""
}</msg>
<status status="PASS" starttime="20240102 11:37:54.120" endtime="20240102 11:37:54.120"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:37:54.121" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:37:54.120" endtime="20240102 11:37:54.121"/>
</kw>
<status status="PASS" starttime="20240102 11:37:53.638" endtime="20240102 11:37:54.121"/>
</kw>
<msg timestamp="20240102 11:37:54.121" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:37:53.638" endtime="20240102 11:37:54.121"/>
</kw>
<msg timestamp="20240102 11:37:54.121" level="INFO">${output} = {
    "Location": "erasure",
    "Bucket": "erasure",
    "Key": "ozone-test-8927362968/copyrange/destination",
    "ETag": "\"24d794dfc756320ffadb905d526299bc-2\""
}</msg>
<status status="PASS" starttime="20240102 11:37:53.637" endtime="20240102 11:37:54.121"/>
</kw>
<status status="PASS" starttime="20240102 11:37:53.636" endtime="20240102 11:37:54.121"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination /tmp/part-result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:37:54.125" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket erasure --key ozone-test-8927362968/copyrange/destination /tmp/part-result 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:37:54.670" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:37:54.670" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 02 Jan 2024 11:37:54 GMT",
    "ContentLength": 10485760,
    "ETag": "\"24d794dfc756320ffadb905d526299bc-2\"",
    "CacheControl": "no-cache",...</msg>
<status status="PASS" starttime="20240102 11:37:54.123" endtime="20240102 11:37:54.670"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:37:54.671" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 02 Jan 2024 11:37:54 GMT",
    "ContentLength": 10485760,
    "ETag": "\"24d794dfc756320ffadb905d526299bc-2\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Tue, 02 Jan 2024 11:37:54 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20240102 11:37:54.670" endtime="20240102 11:37:54.671"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:37:54.671" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:37:54.671" endtime="20240102 11:37:54.671"/>
</kw>
<status status="PASS" starttime="20240102 11:37:54.123" endtime="20240102 11:37:54.672"/>
</kw>
<msg timestamp="20240102 11:37:54.672" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:37:54.123" endtime="20240102 11:37:54.672"/>
</kw>
<msg timestamp="20240102 11:37:54.672" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 02 Jan 2024 11:37:54 GMT",
    "ContentLength": 10485760,
    "ETag": "\"24d794dfc756320ffadb905d526299bc-2\"",
    "CacheControl": "no-cache",...</msg>
<status status="PASS" starttime="20240102 11:37:54.122" endtime="20240102 11:37:54.672"/>
</kw>
<status status="PASS" starttime="20240102 11:37:54.122" endtime="20240102 11:37:54.672"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/part1</arg>
<arg>/tmp/part-result</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:37:54.675" level="INFO">Running command 'md5sum /tmp/part1 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:37:54.695" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:37:54.695" level="INFO">${output} = 0b2a52c84dbe8dd4203b5ef0ce55c2e0</msg>
<status status="PASS" starttime="20240102 11:37:54.674" endtime="20240102 11:37:54.695"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:37:54.696" level="INFO">0b2a52c84dbe8dd4203b5ef0ce55c2e0</msg>
<status status="PASS" starttime="20240102 11:37:54.695" endtime="20240102 11:37:54.696"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:37:54.696" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:37:54.696" endtime="20240102 11:37:54.697"/>
</kw>
<status status="PASS" starttime="20240102 11:37:54.673" endtime="20240102 11:37:54.697"/>
</kw>
<msg timestamp="20240102 11:37:54.697" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:37:54.673" endtime="20240102 11:37:54.697"/>
</kw>
<msg timestamp="20240102 11:37:54.697" level="INFO">${checksumbefore} = 0b2a52c84dbe8dd4203b5ef0ce55c2e0</msg>
<status status="PASS" starttime="20240102 11:37:54.673" endtime="20240102 11:37:54.697"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:37:54.699" level="INFO">Running command 'md5sum /tmp/part-result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:37:54.718" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:37:54.718" level="INFO">${output} = 0b2a52c84dbe8dd4203b5ef0ce55c2e0</msg>
<status status="PASS" starttime="20240102 11:37:54.698" endtime="20240102 11:37:54.718"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:37:54.719" level="INFO">0b2a52c84dbe8dd4203b5ef0ce55c2e0</msg>
<status status="PASS" starttime="20240102 11:37:54.719" endtime="20240102 11:37:54.719"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:37:54.720" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:37:54.719" endtime="20240102 11:37:54.720"/>
</kw>
<status status="PASS" starttime="20240102 11:37:54.698" endtime="20240102 11:37:54.720"/>
</kw>
<msg timestamp="20240102 11:37:54.720" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:37:54.697" endtime="20240102 11:37:54.720"/>
</kw>
<msg timestamp="20240102 11:37:54.720" level="INFO">${checksumafter} = 0b2a52c84dbe8dd4203b5ef0ce55c2e0</msg>
<status status="PASS" starttime="20240102 11:37:54.697" endtime="20240102 11:37:54.720"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240102 11:37:54.720" endtime="20240102 11:37:54.721"/>
</kw>
<status status="PASS" starttime="20240102 11:37:54.672" endtime="20240102 11:37:54.721"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20240102 11:37:47.029" endtime="20240102 11:37:54.721"/>
</test>
<test id="s1-s1-s8-t14" name="Test Multipart Upload list" line="367">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20240102 11:37:54.723" level="INFO">${randStr} = 3227807120</msg>
<status status="PASS" starttime="20240102 11:37:54.723" endtime="20240102 11:37:54.723"/>
</kw>
<msg timestamp="20240102 11:37:54.723" level="INFO">${random} = ozone-test-3227807120</msg>
<status status="PASS" starttime="20240102 11:37:54.722" endtime="20240102 11:37:54.723"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20240102 11:37:54.724" level="INFO">${PREFIX} = ozone-test-3227807120</msg>
<status status="PASS" starttime="20240102 11:37:54.723" endtime="20240102 11:37:54.724"/>
</kw>
<status status="PASS" starttime="20240102 11:37:54.722" endtime="20240102 11:37:54.724"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/listtest/key1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:37:54.727" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket erasure --key ozone-test-3227807120/listtest/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:37:55.177" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:37:55.177" level="INFO">${output} = {
    "Bucket": "erasure",
    "Key": "ozone-test-3227807120/listtest/key1",
    "UploadId": "6fee0bc6-256f-4985-84a2-b5028f63e670-111686154658119736"
}</msg>
<status status="PASS" starttime="20240102 11:37:54.725" endtime="20240102 11:37:55.177"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:37:55.178" level="INFO">{
    "Bucket": "erasure",
    "Key": "ozone-test-3227807120/listtest/key1",
    "UploadId": "6fee0bc6-256f-4985-84a2-b5028f63e670-111686154658119736"
}</msg>
<status status="PASS" starttime="20240102 11:37:55.177" endtime="20240102 11:37:55.178"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:37:55.179" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:37:55.178" endtime="20240102 11:37:55.179"/>
</kw>
<status status="PASS" starttime="20240102 11:37:54.725" endtime="20240102 11:37:55.179"/>
</kw>
<msg timestamp="20240102 11:37:55.179" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:37:54.725" endtime="20240102 11:37:55.179"/>
</kw>
<msg timestamp="20240102 11:37:55.179" level="INFO">${output} = {
    "Bucket": "erasure",
    "Key": "ozone-test-3227807120/listtest/key1",
    "UploadId": "6fee0bc6-256f-4985-84a2-b5028f63e670-111686154658119736"
}</msg>
<status status="PASS" starttime="20240102 11:37:54.724" endtime="20240102 11:37:55.179"/>
</kw>
<msg timestamp="20240102 11:37:55.179" level="INFO">${result} = {
    "Bucket": "erasure",
    "Key": "ozone-test-3227807120/listtest/key1",
    "UploadId": "6fee0bc6-256f-4985-84a2-b5028f63e670-111686154658119736"
}</msg>
<status status="PASS" starttime="20240102 11:37:54.724" endtime="20240102 11:37:55.179"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${uploadID1}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:37:55.182" level="INFO">Running command 'echo '{
    "Bucket": "erasure",
    "Key": "ozone-test-3227807120/listtest/key1",
    "UploadId": "6fee0bc6-256f-4985-84a2-b5028f63e670-111686154658119736"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:37:55.207" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:37:55.207" level="INFO">${output} = 6fee0bc6-256f-4985-84a2-b5028f63e670-111686154658119736</msg>
<status status="PASS" starttime="20240102 11:37:55.180" endtime="20240102 11:37:55.207"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:37:55.208" level="INFO">6fee0bc6-256f-4985-84a2-b5028f63e670-111686154658119736</msg>
<status status="PASS" starttime="20240102 11:37:55.208" endtime="20240102 11:37:55.208"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:37:55.209" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:37:55.208" endtime="20240102 11:37:55.209"/>
</kw>
<msg timestamp="20240102 11:37:55.209" level="INFO">${uploadID1} = 6fee0bc6-256f-4985-84a2-b5028f63e670-111686154658119736</msg>
<status status="PASS" starttime="20240102 11:37:55.180" endtime="20240102 11:37:55.209"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:37:55.209" endtime="20240102 11:37:55.210"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/listtest/key1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:37:55.210" endtime="20240102 11:37:55.210"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>UploadId</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:37:55.210" endtime="20240102 11:37:55.210"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/listtest/key2</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:37:55.214" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket erasure --key ozone-test-3227807120/listtest/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:37:55.656" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:37:55.656" level="INFO">${output} = {
    "Bucket": "erasure",
    "Key": "ozone-test-3227807120/listtest/key2",
    "UploadId": "1c538441-f512-4345-b75f-474b22e3204d-111686154689577017"
}</msg>
<status status="PASS" starttime="20240102 11:37:55.212" endtime="20240102 11:37:55.656"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:37:55.657" level="INFO">{
    "Bucket": "erasure",
    "Key": "ozone-test-3227807120/listtest/key2",
    "UploadId": "1c538441-f512-4345-b75f-474b22e3204d-111686154689577017"
}</msg>
<status status="PASS" starttime="20240102 11:37:55.656" endtime="20240102 11:37:55.657"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:37:55.657" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:37:55.657" endtime="20240102 11:37:55.658"/>
</kw>
<status status="PASS" starttime="20240102 11:37:55.212" endtime="20240102 11:37:55.658"/>
</kw>
<msg timestamp="20240102 11:37:55.658" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:37:55.211" endtime="20240102 11:37:55.658"/>
</kw>
<msg timestamp="20240102 11:37:55.658" level="INFO">${output} = {
    "Bucket": "erasure",
    "Key": "ozone-test-3227807120/listtest/key2",
    "UploadId": "1c538441-f512-4345-b75f-474b22e3204d-111686154689577017"
}</msg>
<status status="PASS" starttime="20240102 11:37:55.211" endtime="20240102 11:37:55.658"/>
</kw>
<msg timestamp="20240102 11:37:55.658" level="INFO">${result} = {
    "Bucket": "erasure",
    "Key": "ozone-test-3227807120/listtest/key2",
    "UploadId": "1c538441-f512-4345-b75f-474b22e3204d-111686154689577017"
}</msg>
<status status="PASS" starttime="20240102 11:37:55.210" endtime="20240102 11:37:55.658"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${uploadID2}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:37:55.660" level="INFO">Running command 'echo '{
    "Bucket": "erasure",
    "Key": "ozone-test-3227807120/listtest/key2",
    "UploadId": "1c538441-f512-4345-b75f-474b22e3204d-111686154689577017"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:37:55.686" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:37:55.686" level="INFO">${output} = 1c538441-f512-4345-b75f-474b22e3204d-111686154689577017</msg>
<status status="PASS" starttime="20240102 11:37:55.659" endtime="20240102 11:37:55.686"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:37:55.687" level="INFO">1c538441-f512-4345-b75f-474b22e3204d-111686154689577017</msg>
<status status="PASS" starttime="20240102 11:37:55.687" endtime="20240102 11:37:55.687"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:37:55.688" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:37:55.687" endtime="20240102 11:37:55.688"/>
</kw>
<msg timestamp="20240102 11:37:55.688" level="INFO">${uploadID2} = 1c538441-f512-4345-b75f-474b22e3204d-111686154689577017</msg>
<status status="PASS" starttime="20240102 11:37:55.658" endtime="20240102 11:37:55.688"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:37:55.688" endtime="20240102 11:37:55.688"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/listtest/key2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:37:55.688" endtime="20240102 11:37:55.689"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>UploadId</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:37:55.689" endtime="20240102 11:37:55.689"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-multipart-uploads --bucket ${BUCKET} --prefix ${PREFIX}/listtest</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:37:55.692" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-multipart-uploads --bucket erasure --prefix ozone-test-3227807120/listtest 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:37:56.142" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:37:56.142" level="INFO">${output} = {
    "Uploads": [
        {
            "UploadId": "6fee0bc6-256f-4985-84a2-b5028f63e670-111686154658119736",
            "Key": "ozone-test-3227807120/listtest/key1",
            "Initiated": "2024...</msg>
<status status="PASS" starttime="20240102 11:37:55.691" endtime="20240102 11:37:56.142"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:37:56.143" level="INFO">{
    "Uploads": [
        {
            "UploadId": "6fee0bc6-256f-4985-84a2-b5028f63e670-111686154658119736",
            "Key": "ozone-test-3227807120/listtest/key1",
            "Initiated": "2024-01-02T11:37:55.130Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "1c538441-f512-4345-b75f-474b22e3204d-111686154689577017",
            "Key": "ozone-test-3227807120/listtest/key2",
            "Initiated": "2024-01-02T11:37:55.610Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        }
    ]
}</msg>
<status status="PASS" starttime="20240102 11:37:56.143" endtime="20240102 11:37:56.143"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:37:56.144" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:37:56.144" endtime="20240102 11:37:56.144"/>
</kw>
<status status="PASS" starttime="20240102 11:37:55.690" endtime="20240102 11:37:56.144"/>
</kw>
<msg timestamp="20240102 11:37:56.144" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:37:55.690" endtime="20240102 11:37:56.144"/>
</kw>
<msg timestamp="20240102 11:37:56.145" level="INFO">${output} = {
    "Uploads": [
        {
            "UploadId": "6fee0bc6-256f-4985-84a2-b5028f63e670-111686154658119736",
            "Key": "ozone-test-3227807120/listtest/key1",
            "Initiated": "2024...</msg>
<status status="PASS" starttime="20240102 11:37:55.690" endtime="20240102 11:37:56.145"/>
</kw>
<msg timestamp="20240102 11:37:56.145" level="INFO">${result} = {
    "Uploads": [
        {
            "UploadId": "6fee0bc6-256f-4985-84a2-b5028f63e670-111686154658119736",
            "Key": "ozone-test-3227807120/listtest/key1",
            "Initiated": "2024...</msg>
<status status="PASS" starttime="20240102 11:37:55.689" endtime="20240102 11:37:56.145"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${uploadID1}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:37:56.145" endtime="20240102 11:37:56.145"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${uploadID2}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:37:56.145" endtime="20240102 11:37:56.146"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${count}</var>
<arg>echo '${result}' | jq -r '.Uploads | length'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:37:56.148" level="INFO">Running command 'echo '{
    "Uploads": [
        {
            "UploadId": "6fee0bc6-256f-4985-84a2-b5028f63e670-111686154658119736",
            "Key": "ozone-test-3227807120/listtest/key1",
            "Initiated": "2024-01-02T11:37:55.130Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "1c538441-f512-4345-b75f-474b22e3204d-111686154689577017",
            "Key": "ozone-test-3227807120/listtest/key2",
            "Initiated": "2024-01-02T11:37:55.610Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        }
    ]
}' | jq -r '.Uploads | length' 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:37:56.173" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:37:56.173" level="INFO">${output} = 2</msg>
<status status="PASS" starttime="20240102 11:37:56.146" endtime="20240102 11:37:56.173"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:37:56.174" level="INFO">2</msg>
<status status="PASS" starttime="20240102 11:37:56.174" endtime="20240102 11:37:56.174"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:37:56.175" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:37:56.174" endtime="20240102 11:37:56.175"/>
</kw>
<msg timestamp="20240102 11:37:56.175" level="INFO">${count} = 2</msg>
<status status="PASS" starttime="20240102 11:37:56.146" endtime="20240102 11:37:56.175"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${count}</arg>
<arg>2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240102 11:37:56.175" endtime="20240102 11:37:56.176"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20240102 11:37:54.721" endtime="20240102 11:37:56.176"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20240102 11:37:13.193" endtime="20240102 11:37:56.177"/>
</suite>
<suite id="s1-s1-s9" name="Objectcopy" source="/opt/hadoop/smoketest/s3/objectcopy.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20240102 11:37:56.188" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:37:56.188" endtime="20240102 11:37:56.188"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20240102 11:37:56.188" endtime="20240102 11:37:56.188"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20240102 11:37:56.188" endtime="20240102 11:37:56.188"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20240102 11:37:56.188" endtime="20240102 11:37:56.188"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20240102 11:37:56.188" endtime="20240102 11:37:56.189"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20240102 11:37:56.189" endtime="20240102 11:37:56.189"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20240102 11:37:56.189" endtime="20240102 11:37:56.189"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20240102 11:37:56.189" endtime="20240102 11:37:56.189"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20240102 11:37:56.189" endtime="20240102 11:37:56.189"/>
</kw>
<status status="PASS" starttime="20240102 11:37:56.187" endtime="20240102 11:37:56.189"/>
</kw>
<test id="s1-s1-s9-t1" name="Copy Object Happy Scenario" line="37">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${DESTBUCKET}' == 'generated1'</arg>
<arg>Create Dest Bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create Dest Bucket">
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20240102 11:37:56.191" level="INFO">${postfix} = 85433</msg>
<status status="PASS" starttime="20240102 11:37:56.191" endtime="20240102 11:37:56.191"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${DESTBUCKET}</arg>
<arg>destbucket-${postfix}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20240102 11:37:56.191" level="INFO">${DESTBUCKET} = destbucket-85433</msg>
<status status="PASS" starttime="20240102 11:37:56.191" endtime="20240102 11:37:56.191"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>create-bucket --bucket ${DESTBUCKET}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:37:56.194" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket destbucket-85433 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:37:56.647" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:37:56.647" level="INFO">${output} = {
    "Location": "http://s3g:9878/destbucket-85433"
}</msg>
<status status="PASS" starttime="20240102 11:37:56.193" endtime="20240102 11:37:56.647"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:37:56.648" level="INFO">{
    "Location": "http://s3g:9878/destbucket-85433"
}</msg>
<status status="PASS" starttime="20240102 11:37:56.647" endtime="20240102 11:37:56.648"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:37:56.648" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:37:56.648" endtime="20240102 11:37:56.649"/>
</kw>
<status status="PASS" starttime="20240102 11:37:56.193" endtime="20240102 11:37:56.649"/>
</kw>
<msg timestamp="20240102 11:37:56.649" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:37:56.192" endtime="20240102 11:37:56.649"/>
</kw>
<msg timestamp="20240102 11:37:56.649" level="INFO">${output} = {
    "Location": "http://s3g:9878/destbucket-85433"
}</msg>
<status status="PASS" starttime="20240102 11:37:56.192" endtime="20240102 11:37:56.649"/>
</kw>
<status status="PASS" starttime="20240102 11:37:56.192" endtime="20240102 11:37:56.649"/>
</kw>
<status status="PASS" starttime="20240102 11:37:56.190" endtime="20240102 11:37:56.649"/>
</kw>
<status status="PASS" starttime="20240102 11:37:56.190" endtime="20240102 11:37:56.649"/>
</kw>
<kw name="Execute" library="os">
<arg>date &gt; /tmp/copyfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:37:56.652" level="INFO">Running command 'date &gt; /tmp/copyfile'.</msg>
<msg timestamp="20240102 11:37:56.654" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:37:56.654" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240102 11:37:56.651" endtime="20240102 11:37:56.654"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:37:56.655" level="INFO"/>
<status status="PASS" starttime="20240102 11:37:56.654" endtime="20240102 11:37:56.655"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:37:56.655" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:37:56.655" endtime="20240102 11:37:56.655"/>
</kw>
<status status="PASS" starttime="20240102 11:37:56.650" endtime="20240102 11:37:56.655"/>
</kw>
<msg timestamp="20240102 11:37:56.655" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:37:56.650" endtime="20240102 11:37:56.655"/>
</kw>
<status status="PASS" starttime="20240102 11:37:56.649" endtime="20240102 11:37:56.656"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/copyobject/key=value/f1 --body /tmp/copyfile</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:37:56.659" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket erasure --key ozone-test-3227807120/copyobject/key=value/f1 --body /tmp/copyfile 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:37:57.134" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:37:57.134" level="INFO">${output} = {
    "ETag": "\"d722f06c3438af7841fb9da6bdd553a5\""
}</msg>
<status status="PASS" starttime="20240102 11:37:56.657" endtime="20240102 11:37:57.134"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:37:57.135" level="INFO">{
    "ETag": "\"d722f06c3438af7841fb9da6bdd553a5\""
}</msg>
<status status="PASS" starttime="20240102 11:37:57.135" endtime="20240102 11:37:57.135"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:37:57.136" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:37:57.135" endtime="20240102 11:37:57.136"/>
</kw>
<status status="PASS" starttime="20240102 11:37:56.657" endtime="20240102 11:37:57.136"/>
</kw>
<msg timestamp="20240102 11:37:57.136" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:37:56.657" endtime="20240102 11:37:57.136"/>
</kw>
<msg timestamp="20240102 11:37:57.137" level="INFO">${output} = {
    "ETag": "\"d722f06c3438af7841fb9da6bdd553a5\""
}</msg>
<status status="PASS" starttime="20240102 11:37:56.656" endtime="20240102 11:37:57.137"/>
</kw>
<msg timestamp="20240102 11:37:57.137" level="INFO">${result} = {
    "ETag": "\"d722f06c3438af7841fb9da6bdd553a5\""
}</msg>
<status status="PASS" starttime="20240102 11:37:56.656" endtime="20240102 11:37:57.137"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${BUCKET} --prefix ${PREFIX}/copyobject/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:37:57.140" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket erasure --prefix ozone-test-3227807120/copyobject/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:37:57.596" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:37:57.596" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-3227807120/copyobject/key=value/",
            "LastModified": "2024-01-02T11:37:57.058Z",
            "ETag": "2024-01-02T11:37:57.058Z",
...</msg>
<status status="PASS" starttime="20240102 11:37:57.139" endtime="20240102 11:37:57.596"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:37:57.597" level="INFO">{
    "Contents": [
        {
            "Key": "ozone-test-3227807120/copyobject/key=value/",
            "LastModified": "2024-01-02T11:37:57.058Z",
            "ETag": "2024-01-02T11:37:57.058Z",
            "Size": 0,
            "StorageClass": "STANDARD"
        },
        {
            "Key": "ozone-test-3227807120/copyobject/key=value/f1",
            "LastModified": "2024-01-02T11:37:57.088Z",
            "ETag": "2024-01-02T11:37:57.088Z",
            "Size": 29,
            "StorageClass": "STANDARD"
        }
    ]
}</msg>
<status status="PASS" starttime="20240102 11:37:57.597" endtime="20240102 11:37:57.597"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:37:57.598" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:37:57.597" endtime="20240102 11:37:57.598"/>
</kw>
<status status="PASS" starttime="20240102 11:37:57.138" endtime="20240102 11:37:57.598"/>
</kw>
<msg timestamp="20240102 11:37:57.598" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:37:57.138" endtime="20240102 11:37:57.598"/>
</kw>
<msg timestamp="20240102 11:37:57.598" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-3227807120/copyobject/key=value/",
            "LastModified": "2024-01-02T11:37:57.058Z",
            "ETag": "2024-01-02T11:37:57.058Z",
...</msg>
<status status="PASS" starttime="20240102 11:37:57.138" endtime="20240102 11:37:57.598"/>
</kw>
<msg timestamp="20240102 11:37:57.599" level="INFO">${result} = {
    "Contents": [
        {
            "Key": "ozone-test-3227807120/copyobject/key=value/",
            "LastModified": "2024-01-02T11:37:57.058Z",
            "ETag": "2024-01-02T11:37:57.058Z",
...</msg>
<status status="PASS" starttime="20240102 11:37:57.137" endtime="20240102 11:37:57.599"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>f1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:37:57.599" endtime="20240102 11:37:57.599"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>copy-object --bucket ${DESTBUCKET} --key ${PREFIX}/copyobject/key=value/f1 --copy-source ${BUCKET}/${PREFIX}/copyobject/key=value/f1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:37:57.602" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 copy-object --bucket destbucket-85433 --key ozone-test-3227807120/copyobject/key=value/f1 --copy-source erasure/ozone-test-3227807120/copyobject/key=value/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:37:58.403" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:37:58.403" level="INFO">${output} = {
    "CopyObjectResult": {
        "ETag": "e87de085-c68b-4b5f-beed-5d1d04130ccf",
        "LastModified": "2024-01-02T11:37:58.348Z"
    }
}</msg>
<status status="PASS" starttime="20240102 11:37:57.601" endtime="20240102 11:37:58.403"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:37:58.404" level="INFO">{
    "CopyObjectResult": {
        "ETag": "e87de085-c68b-4b5f-beed-5d1d04130ccf",
        "LastModified": "2024-01-02T11:37:58.348Z"
    }
}</msg>
<status status="PASS" starttime="20240102 11:37:58.404" endtime="20240102 11:37:58.404"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:37:58.405" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:37:58.404" endtime="20240102 11:37:58.405"/>
</kw>
<status status="PASS" starttime="20240102 11:37:57.601" endtime="20240102 11:37:58.405"/>
</kw>
<msg timestamp="20240102 11:37:58.405" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:37:57.600" endtime="20240102 11:37:58.405"/>
</kw>
<msg timestamp="20240102 11:37:58.405" level="INFO">${output} = {
    "CopyObjectResult": {
        "ETag": "e87de085-c68b-4b5f-beed-5d1d04130ccf",
        "LastModified": "2024-01-02T11:37:58.348Z"
    }
}</msg>
<status status="PASS" starttime="20240102 11:37:57.600" endtime="20240102 11:37:58.405"/>
</kw>
<msg timestamp="20240102 11:37:58.405" level="INFO">${result} = {
    "CopyObjectResult": {
        "ETag": "e87de085-c68b-4b5f-beed-5d1d04130ccf",
        "LastModified": "2024-01-02T11:37:58.348Z"
    }
}</msg>
<status status="PASS" starttime="20240102 11:37:57.599" endtime="20240102 11:37:58.405"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${DESTBUCKET} --prefix ${PREFIX}/copyobject/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:37:58.409" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket destbucket-85433 --prefix ozone-test-3227807120/copyobject/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:37:58.854" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:37:58.854" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-3227807120/copyobject/key=value/f1",
            "LastModified": "2024-01-02T11:37:58.348Z",
            "ETag": "2024-01-02T11:37:58.348Z"...</msg>
<status status="PASS" starttime="20240102 11:37:58.407" endtime="20240102 11:37:58.854"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:37:58.855" level="INFO">{
    "Contents": [
        {
            "Key": "ozone-test-3227807120/copyobject/key=value/f1",
            "LastModified": "2024-01-02T11:37:58.348Z",
            "ETag": "2024-01-02T11:37:58.348Z",
            "Size": 29,
            "StorageClass": "STANDARD"
        }
    ]
}</msg>
<status status="PASS" starttime="20240102 11:37:58.854" endtime="20240102 11:37:58.855"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:37:58.855" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:37:58.855" endtime="20240102 11:37:58.855"/>
</kw>
<status status="PASS" starttime="20240102 11:37:58.407" endtime="20240102 11:37:58.855"/>
</kw>
<msg timestamp="20240102 11:37:58.855" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:37:58.407" endtime="20240102 11:37:58.856"/>
</kw>
<msg timestamp="20240102 11:37:58.856" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-3227807120/copyobject/key=value/f1",
            "LastModified": "2024-01-02T11:37:58.348Z",
            "ETag": "2024-01-02T11:37:58.348Z"...</msg>
<status status="PASS" starttime="20240102 11:37:58.406" endtime="20240102 11:37:58.856"/>
</kw>
<msg timestamp="20240102 11:37:58.856" level="INFO">${result} = {
    "Contents": [
        {
            "Key": "ozone-test-3227807120/copyobject/key=value/f1",
            "LastModified": "2024-01-02T11:37:58.348Z",
            "ETag": "2024-01-02T11:37:58.348Z"...</msg>
<status status="PASS" starttime="20240102 11:37:58.406" endtime="20240102 11:37:58.856"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>f1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:37:58.856" endtime="20240102 11:37:58.856"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>copy-object --bucket ${DESTBUCKET} --key ${PREFIX}/copyobject/key=value/f1 --copy-source ${BUCKET}/${PREFIX}/copyobject/key=value/f1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:37:58.860" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 copy-object --bucket destbucket-85433 --key ozone-test-3227807120/copyobject/key=value/f1 --copy-source erasure/ozone-test-3227807120/copyobject/key=value/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:37:59.409" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:37:59.409" level="INFO">${output} = {
    "CopyObjectResult": {
        "ETag": "4caf71c9-80fb-4ba8-bfc8-63565d086fe5",
        "LastModified": "2024-01-02T11:37:59.336Z"
    }
}</msg>
<status status="PASS" starttime="20240102 11:37:58.859" endtime="20240102 11:37:59.409"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:37:59.410" level="INFO">{
    "CopyObjectResult": {
        "ETag": "4caf71c9-80fb-4ba8-bfc8-63565d086fe5",
        "LastModified": "2024-01-02T11:37:59.336Z"
    }
}</msg>
<status status="PASS" starttime="20240102 11:37:59.410" endtime="20240102 11:37:59.410"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:37:59.411" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:37:59.411" endtime="20240102 11:37:59.411"/>
</kw>
<status status="PASS" starttime="20240102 11:37:58.858" endtime="20240102 11:37:59.411"/>
</kw>
<msg timestamp="20240102 11:37:59.411" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:37:58.858" endtime="20240102 11:37:59.411"/>
</kw>
<msg timestamp="20240102 11:37:59.412" level="INFO">${output} = {
    "CopyObjectResult": {
        "ETag": "4caf71c9-80fb-4ba8-bfc8-63565d086fe5",
        "LastModified": "2024-01-02T11:37:59.336Z"
    }
}</msg>
<status status="PASS" starttime="20240102 11:37:58.857" endtime="20240102 11:37:59.412"/>
</kw>
<msg timestamp="20240102 11:37:59.412" level="INFO">${result} = {
    "CopyObjectResult": {
        "ETag": "4caf71c9-80fb-4ba8-bfc8-63565d086fe5",
        "LastModified": "2024-01-02T11:37:59.336Z"
    }
}</msg>
<status status="PASS" starttime="20240102 11:37:58.857" endtime="20240102 11:37:59.412"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${DESTBUCKET} --prefix ${PREFIX}/copyobject/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:37:59.415" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket destbucket-85433 --prefix ozone-test-3227807120/copyobject/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:37:59.851" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:37:59.851" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-3227807120/copyobject/key=value/f1",
            "LastModified": "2024-01-02T11:37:59.336Z",
            "ETag": "2024-01-02T11:37:59.336Z"...</msg>
<status status="PASS" starttime="20240102 11:37:59.414" endtime="20240102 11:37:59.851"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:37:59.852" level="INFO">{
    "Contents": [
        {
            "Key": "ozone-test-3227807120/copyobject/key=value/f1",
            "LastModified": "2024-01-02T11:37:59.336Z",
            "ETag": "2024-01-02T11:37:59.336Z",
            "Size": 29,
            "StorageClass": "STANDARD"
        }
    ]
}</msg>
<status status="PASS" starttime="20240102 11:37:59.851" endtime="20240102 11:37:59.852"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:37:59.853" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:37:59.852" endtime="20240102 11:37:59.853"/>
</kw>
<status status="PASS" starttime="20240102 11:37:59.413" endtime="20240102 11:37:59.853"/>
</kw>
<msg timestamp="20240102 11:37:59.853" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:37:59.413" endtime="20240102 11:37:59.853"/>
</kw>
<msg timestamp="20240102 11:37:59.853" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-3227807120/copyobject/key=value/f1",
            "LastModified": "2024-01-02T11:37:59.336Z",
            "ETag": "2024-01-02T11:37:59.336Z"...</msg>
<status status="PASS" starttime="20240102 11:37:59.413" endtime="20240102 11:37:59.853"/>
</kw>
<msg timestamp="20240102 11:37:59.853" level="INFO">${result} = {
    "Contents": [
        {
            "Key": "ozone-test-3227807120/copyobject/key=value/f1",
            "LastModified": "2024-01-02T11:37:59.336Z",
            "ETag": "2024-01-02T11:37:59.336Z"...</msg>
<status status="PASS" starttime="20240102 11:37:59.412" endtime="20240102 11:37:59.853"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>f1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:37:59.854" endtime="20240102 11:37:59.854"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20240102 11:37:56.189" endtime="20240102 11:37:59.854"/>
</test>
<test id="s1-s1-s9-t2" name="Copy Object Where Bucket is not available" line="52">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>copy-object --bucket dfdfdfdfdfnonexistent --key ${PREFIX}/copyobject/key=value/f1 --copy-source ${BUCKET}/${PREFIX}/copyobject/key=value/f1</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:37:59.858" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 copy-object --bucket dfdfdfdfdfnonexistent --key ozone-test-3227807120/copyobject/key=value/f1 --copy-source erasure/ozone-test-3227807120/copyobject/key=value/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:38:00.311" level="INFO">${rc} = 255</msg>
<msg timestamp="20240102 11:38:00.311" level="INFO">${output} = 
An error occurred (NoSuchBucket) when calling the CopyObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20240102 11:37:59.856" endtime="20240102 11:38:00.311"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:38:00.312" level="INFO">
An error occurred (NoSuchBucket) when calling the CopyObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20240102 11:38:00.311" endtime="20240102 11:38:00.312"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:38:00.312" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:38:00.312" endtime="20240102 11:38:00.313"/>
</kw>
<msg timestamp="20240102 11:38:00.313" level="INFO">${output} = 
An error occurred (NoSuchBucket) when calling the CopyObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20240102 11:37:59.856" endtime="20240102 11:38:00.313"/>
</kw>
<msg timestamp="20240102 11:38:00.313" level="INFO">${result} = 
An error occurred (NoSuchBucket) when calling the CopyObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20240102 11:37:59.855" endtime="20240102 11:38:00.313"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NoSuchBucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:38:00.313" endtime="20240102 11:38:00.313"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>copy-object --bucket ${DESTBUCKET} --key ${PREFIX}/copyobject/key=value/f1 --copy-source dfdfdfdfdfnonexistent/${PREFIX}/copyobject/key=value/f1</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:38:00.316" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 copy-object --bucket destbucket-85433 --key ozone-test-3227807120/copyobject/key=value/f1 --copy-source dfdfdfdfdfnonexistent/ozone-test-3227807120/copyobject/key=value/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:38:00.825" level="INFO">${rc} = 255</msg>
<msg timestamp="20240102 11:38:00.825" level="INFO">${output} = 
An error occurred (NoSuchBucket) when calling the CopyObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20240102 11:38:00.315" endtime="20240102 11:38:00.825"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:38:00.826" level="INFO">
An error occurred (NoSuchBucket) when calling the CopyObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20240102 11:38:00.825" endtime="20240102 11:38:00.826"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:38:00.827" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:38:00.826" endtime="20240102 11:38:00.827"/>
</kw>
<msg timestamp="20240102 11:38:00.827" level="INFO">${output} = 
An error occurred (NoSuchBucket) when calling the CopyObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20240102 11:38:00.314" endtime="20240102 11:38:00.827"/>
</kw>
<msg timestamp="20240102 11:38:00.827" level="INFO">${result} = 
An error occurred (NoSuchBucket) when calling the CopyObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20240102 11:38:00.314" endtime="20240102 11:38:00.827"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NoSuchBucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:38:00.827" endtime="20240102 11:38:00.828"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20240102 11:37:59.855" endtime="20240102 11:38:00.828"/>
</test>
<test id="s1-s1-s9-t3" name="Copy Object Where both source and dest are same with change to storageclass" line="58">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>copy-object --storage-class REDUCED_REDUNDANCY --bucket ${DESTBUCKET} --key ${PREFIX}/copyobject/key=value/f1 --copy-source ${DESTBUCKET}/${PREFIX}/copyobject/key=value/f1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:38:00.833" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 copy-object --storage-class REDUCED_REDUNDANCY --bucket destbucket-85433 --key ozone-test-3227807120/copyobject/key=value/f1 --copy-source destbucket-85433/ozone-test-3227807120/copyobject/key=value/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:38:01.263" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:38:01.263" level="INFO">${output} = {
    "CopyObjectResult": {
        "ETag": "7fae4b9e-bed9-4b93-8d37-d7bdaea11e3f",
        "LastModified": "2024-01-02T11:38:01.225Z"
    }
}</msg>
<status status="PASS" starttime="20240102 11:38:00.831" endtime="20240102 11:38:01.264"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:38:01.264" level="INFO">{
    "CopyObjectResult": {
        "ETag": "7fae4b9e-bed9-4b93-8d37-d7bdaea11e3f",
        "LastModified": "2024-01-02T11:38:01.225Z"
    }
}</msg>
<status status="PASS" starttime="20240102 11:38:01.264" endtime="20240102 11:38:01.265"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:38:01.265" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:38:01.265" endtime="20240102 11:38:01.265"/>
</kw>
<status status="PASS" starttime="20240102 11:38:00.830" endtime="20240102 11:38:01.265"/>
</kw>
<msg timestamp="20240102 11:38:01.265" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:38:00.830" endtime="20240102 11:38:01.265"/>
</kw>
<msg timestamp="20240102 11:38:01.266" level="INFO">${output} = {
    "CopyObjectResult": {
        "ETag": "7fae4b9e-bed9-4b93-8d37-d7bdaea11e3f",
        "LastModified": "2024-01-02T11:38:01.225Z"
    }
}</msg>
<status status="PASS" starttime="20240102 11:38:00.830" endtime="20240102 11:38:01.266"/>
</kw>
<msg timestamp="20240102 11:38:01.266" level="INFO">${result} = {
    "CopyObjectResult": {
        "ETag": "7fae4b9e-bed9-4b93-8d37-d7bdaea11e3f",
        "LastModified": "2024-01-02T11:38:01.225Z"
    }
}</msg>
<status status="PASS" starttime="20240102 11:38:00.829" endtime="20240102 11:38:01.266"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:38:01.266" endtime="20240102 11:38:01.266"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20240102 11:38:00.828" endtime="20240102 11:38:01.267"/>
</test>
<test id="s1-s1-s9-t4" name="Copy Object Where Key not available" line="62">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>copy-object --bucket ${DESTBUCKET} --key ${PREFIX}/copyobject/key=value/f1 --copy-source ${BUCKET}/nonnonexistentkey</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:38:01.270" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 copy-object --bucket destbucket-85433 --key ozone-test-3227807120/copyobject/key=value/f1 --copy-source erasure/nonnonexistentkey 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:38:01.716" level="INFO">${rc} = 255</msg>
<msg timestamp="20240102 11:38:01.716" level="INFO">${output} = 
An error occurred (NoSuchKey) when calling the CopyObject operation: The specified key does not exist</msg>
<status status="PASS" starttime="20240102 11:38:01.269" endtime="20240102 11:38:01.716"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:38:01.717" level="INFO">
An error occurred (NoSuchKey) when calling the CopyObject operation: The specified key does not exist</msg>
<status status="PASS" starttime="20240102 11:38:01.717" endtime="20240102 11:38:01.717"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:38:01.718" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:38:01.718" endtime="20240102 11:38:01.718"/>
</kw>
<msg timestamp="20240102 11:38:01.718" level="INFO">${output} = 
An error occurred (NoSuchKey) when calling the CopyObject operation: The specified key does not exist</msg>
<status status="PASS" starttime="20240102 11:38:01.268" endtime="20240102 11:38:01.718"/>
</kw>
<msg timestamp="20240102 11:38:01.718" level="INFO">${result} = 
An error occurred (NoSuchKey) when calling the CopyObject operation: The specified key does not exist</msg>
<status status="PASS" starttime="20240102 11:38:01.268" endtime="20240102 11:38:01.718"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NoSuchKey</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:38:01.718" endtime="20240102 11:38:01.719"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20240102 11:38:01.267" endtime="20240102 11:38:01.719"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20240102 11:37:56.179" endtime="20240102 11:38:01.720"/>
</suite>
<suite id="s1-s1-s10" name="Objectcopys3A" source="/opt/hadoop/smoketest/s3/objectcopys3a.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20240102 11:38:01.730" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:38:01.729" endtime="20240102 11:38:01.730"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20240102 11:38:01.730" endtime="20240102 11:38:01.730"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20240102 11:38:01.730" endtime="20240102 11:38:01.730"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20240102 11:38:01.730" endtime="20240102 11:38:01.730"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20240102 11:38:01.730" endtime="20240102 11:38:01.730"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20240102 11:38:01.731" endtime="20240102 11:38:01.731"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20240102 11:38:01.731" endtime="20240102 11:38:01.731"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20240102 11:38:01.731" endtime="20240102 11:38:01.731"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20240102 11:38:01.731" endtime="20240102 11:38:01.731"/>
</kw>
<status status="PASS" starttime="20240102 11:38:01.729" endtime="20240102 11:38:01.731"/>
</kw>
<test id="s1-s1-s10-t1" name="Put object s3a simulation" line="30">
<kw name="Execute" library="os">
<arg>echo "Randomtext" &gt; /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:38:01.734" level="INFO">Running command 'echo "Randomtext" &gt; /tmp/testfile'.</msg>
<msg timestamp="20240102 11:38:01.735" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:38:01.735" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240102 11:38:01.733" endtime="20240102 11:38:01.735"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:38:01.736" level="INFO"/>
<status status="PASS" starttime="20240102 11:38:01.736" endtime="20240102 11:38:01.736"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:38:01.737" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:38:01.736" endtime="20240102 11:38:01.737"/>
</kw>
<status status="PASS" starttime="20240102 11:38:01.732" endtime="20240102 11:38:01.737"/>
</kw>
<msg timestamp="20240102 11:38:01.737" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:38:01.732" endtime="20240102 11:38:01.737"/>
</kw>
<status status="PASS" starttime="20240102 11:38:01.732" endtime="20240102 11:38:01.737"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>head-object --bucket ${BUCKET} --key ${PREFIX}/word.txt</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:38:01.739" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket erasure --key ozone-test-3227807120/word.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:38:02.203" level="INFO">${rc} = 255</msg>
<msg timestamp="20240102 11:38:02.204" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20240102 11:38:01.738" endtime="20240102 11:38:02.204"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:38:02.205" level="INFO">
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20240102 11:38:02.204" endtime="20240102 11:38:02.205"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:38:02.205" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:38:02.205" endtime="20240102 11:38:02.205"/>
</kw>
<msg timestamp="20240102 11:38:02.205" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20240102 11:38:01.738" endtime="20240102 11:38:02.205"/>
</kw>
<msg timestamp="20240102 11:38:02.206" level="INFO">${result} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20240102 11:38:01.737" endtime="20240102 11:38:02.206"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${BUCKET} --prefix ${PREFIX}/word.txt/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:38:02.209" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket erasure --prefix ozone-test-3227807120/word.txt/ 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:38:02.665" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:38:02.665" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240102 11:38:02.207" endtime="20240102 11:38:02.665"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:38:02.666" level="INFO"/>
<status status="PASS" starttime="20240102 11:38:02.665" endtime="20240102 11:38:02.666"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:38:02.667" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:38:02.666" endtime="20240102 11:38:02.667"/>
</kw>
<status status="PASS" starttime="20240102 11:38:02.207" endtime="20240102 11:38:02.667"/>
</kw>
<msg timestamp="20240102 11:38:02.667" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:38:02.207" endtime="20240102 11:38:02.667"/>
</kw>
<msg timestamp="20240102 11:38:02.667" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240102 11:38:02.206" endtime="20240102 11:38:02.667"/>
</kw>
<msg timestamp="20240102 11:38:02.667" level="INFO">${result} = </msg>
<status status="PASS" starttime="20240102 11:38:02.206" endtime="20240102 11:38:02.667"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>word.txt</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:38:02.667" endtime="20240102 11:38:02.668"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>head-object --bucket ${BUCKET} --key ${PREFIX}/word.txt._COPYING_</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:38:02.670" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket erasure --key ozone-test-3227807120/word.txt._COPYING_ 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:38:03.103" level="INFO">${rc} = 255</msg>
<msg timestamp="20240102 11:38:03.103" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20240102 11:38:02.669" endtime="20240102 11:38:03.103"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:38:03.104" level="INFO">
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20240102 11:38:03.103" endtime="20240102 11:38:03.104"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:38:03.105" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:38:03.104" endtime="20240102 11:38:03.105"/>
</kw>
<msg timestamp="20240102 11:38:03.105" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20240102 11:38:02.668" endtime="20240102 11:38:03.105"/>
</kw>
<msg timestamp="20240102 11:38:03.105" level="INFO">${result} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20240102 11:38:02.668" endtime="20240102 11:38:03.105"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${BUCKET} --prefix ${PREFIX}/word.txt._COPYING_/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:38:03.108" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket erasure --prefix ozone-test-3227807120/word.txt._COPYING_/ 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:38:03.587" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:38:03.587" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240102 11:38:03.107" endtime="20240102 11:38:03.587"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:38:03.588" level="INFO"/>
<status status="PASS" starttime="20240102 11:38:03.588" endtime="20240102 11:38:03.588"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:38:03.589" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:38:03.588" endtime="20240102 11:38:03.589"/>
</kw>
<status status="PASS" starttime="20240102 11:38:03.106" endtime="20240102 11:38:03.589"/>
</kw>
<msg timestamp="20240102 11:38:03.589" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:38:03.106" endtime="20240102 11:38:03.589"/>
</kw>
<msg timestamp="20240102 11:38:03.589" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240102 11:38:03.106" endtime="20240102 11:38:03.589"/>
</kw>
<msg timestamp="20240102 11:38:03.589" level="INFO">${result} = </msg>
<status status="PASS" starttime="20240102 11:38:03.105" endtime="20240102 11:38:03.589"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>word.txt._COPYING_</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:38:03.590" endtime="20240102 11:38:03.590"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/word.txt._COPYING_ --body /tmp/testfile</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:38:03.593" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket erasure --key ozone-test-3227807120/word.txt._COPYING_ --body /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:38:04.115" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:38:04.115" level="INFO">${output} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20240102 11:38:03.592" endtime="20240102 11:38:04.115"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:38:04.116" level="INFO">{
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20240102 11:38:04.116" endtime="20240102 11:38:04.116"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:38:04.117" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:38:04.117" endtime="20240102 11:38:04.117"/>
</kw>
<status status="PASS" starttime="20240102 11:38:03.591" endtime="20240102 11:38:04.117"/>
</kw>
<msg timestamp="20240102 11:38:04.117" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:38:03.591" endtime="20240102 11:38:04.117"/>
</kw>
<msg timestamp="20240102 11:38:04.117" level="INFO">${output} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20240102 11:38:03.590" endtime="20240102 11:38:04.117"/>
</kw>
<msg timestamp="20240102 11:38:04.118" level="INFO">${result} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20240102 11:38:03.590" endtime="20240102 11:38:04.118"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<arg>head-object --bucket ${BUCKET} --key ${PREFIX}/word.txt._COPYING_</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:38:04.120" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket erasure --key ozone-test-3227807120/word.txt._COPYING_ 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:38:04.563" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:38:04.563" level="INFO">${output} = {
    "LastModified": "Tue, 02 Jan 2024 11:38:04 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20240102 11:38:04.119" endtime="20240102 11:38:04.563"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:38:04.564" level="INFO">{
    "LastModified": "Tue, 02 Jan 2024 11:38:04 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-stream",
    "Expires": "Tue, 02 Jan 2024 11:38:04 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20240102 11:38:04.563" endtime="20240102 11:38:04.564"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:38:04.565" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:38:04.564" endtime="20240102 11:38:04.565"/>
</kw>
<msg timestamp="20240102 11:38:04.565" level="INFO">${output} = {
    "LastModified": "Tue, 02 Jan 2024 11:38:04 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20240102 11:38:04.118" endtime="20240102 11:38:04.565"/>
</kw>
<status status="PASS" starttime="20240102 11:38:04.118" endtime="20240102 11:38:04.565"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<arg>head-object --bucket ${BUCKET} --key ${PREFIX}/word.txt</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:38:04.568" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket erasure --key ozone-test-3227807120/word.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:38:05.016" level="INFO">${rc} = 255</msg>
<msg timestamp="20240102 11:38:05.016" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20240102 11:38:04.566" endtime="20240102 11:38:05.016"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:38:05.017" level="INFO">
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20240102 11:38:05.017" endtime="20240102 11:38:05.017"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:38:05.018" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:38:05.017" endtime="20240102 11:38:05.018"/>
</kw>
<msg timestamp="20240102 11:38:05.018" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20240102 11:38:04.566" endtime="20240102 11:38:05.018"/>
</kw>
<status status="PASS" starttime="20240102 11:38:04.565" endtime="20240102 11:38:05.018"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${BUCKET} --prefix ${PREFIX}/word.txt/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:38:05.021" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket erasure --prefix ozone-test-3227807120/word.txt/ 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:38:05.467" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:38:05.467" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240102 11:38:05.020" endtime="20240102 11:38:05.467"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:38:05.468" level="INFO"/>
<status status="PASS" starttime="20240102 11:38:05.467" endtime="20240102 11:38:05.468"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:38:05.468" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:38:05.468" endtime="20240102 11:38:05.469"/>
</kw>
<status status="PASS" starttime="20240102 11:38:05.019" endtime="20240102 11:38:05.469"/>
</kw>
<msg timestamp="20240102 11:38:05.469" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:38:05.019" endtime="20240102 11:38:05.469"/>
</kw>
<msg timestamp="20240102 11:38:05.469" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240102 11:38:05.019" endtime="20240102 11:38:05.469"/>
</kw>
<msg timestamp="20240102 11:38:05.469" level="INFO">${result} = </msg>
<status status="PASS" starttime="20240102 11:38:05.018" endtime="20240102 11:38:05.469"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>word.txt._COPYING_</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:38:05.469" endtime="20240102 11:38:05.470"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>copy-object --bucket ${BUCKET} --key ${PREFIX}/word.txt --copy-source ${BUCKET}/${PREFIX}/word.txt._COPYING_</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:38:05.473" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 copy-object --bucket erasure --key ozone-test-3227807120/word.txt --copy-source erasure/ozone-test-3227807120/word.txt._COPYING_ 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:38:06.014" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:38:06.014" level="INFO">${output} = {
    "CopyObjectResult": {
        "ETag": "cc306ef3-bd89-4698-80c6-de1cd5d53918",
        "LastModified": "2024-01-02T11:38:05.945Z"
    }
}</msg>
<status status="PASS" starttime="20240102 11:38:05.471" endtime="20240102 11:38:06.014"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:38:06.015" level="INFO">{
    "CopyObjectResult": {
        "ETag": "cc306ef3-bd89-4698-80c6-de1cd5d53918",
        "LastModified": "2024-01-02T11:38:05.945Z"
    }
}</msg>
<status status="PASS" starttime="20240102 11:38:06.015" endtime="20240102 11:38:06.016"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:38:06.016" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:38:06.016" endtime="20240102 11:38:06.016"/>
</kw>
<status status="PASS" starttime="20240102 11:38:05.471" endtime="20240102 11:38:06.016"/>
</kw>
<msg timestamp="20240102 11:38:06.016" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:38:05.471" endtime="20240102 11:38:06.017"/>
</kw>
<msg timestamp="20240102 11:38:06.017" level="INFO">${output} = {
    "CopyObjectResult": {
        "ETag": "cc306ef3-bd89-4698-80c6-de1cd5d53918",
        "LastModified": "2024-01-02T11:38:05.945Z"
    }
}</msg>
<status status="PASS" starttime="20240102 11:38:05.470" endtime="20240102 11:38:06.017"/>
</kw>
<msg timestamp="20240102 11:38:06.017" level="INFO">${result} = {
    "CopyObjectResult": {
        "ETag": "cc306ef3-bd89-4698-80c6-de1cd5d53918",
        "LastModified": "2024-01-02T11:38:05.945Z"
    }
}</msg>
<status status="PASS" starttime="20240102 11:38:05.470" endtime="20240102 11:38:06.017"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<arg>head-object --bucket ${BUCKET} --key ${PREFIX}/word.txt</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:38:06.020" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket erasure --key ozone-test-3227807120/word.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:38:06.500" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:38:06.501" level="INFO">${output} = {
    "LastModified": "Tue, 02 Jan 2024 11:38:05 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20240102 11:38:06.018" endtime="20240102 11:38:06.501"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:38:06.502" level="INFO">{
    "LastModified": "Tue, 02 Jan 2024 11:38:05 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-stream",
    "Expires": "Tue, 02 Jan 2024 11:38:06 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20240102 11:38:06.501" endtime="20240102 11:38:06.502"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:38:06.502" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:38:06.502" endtime="20240102 11:38:06.502"/>
</kw>
<msg timestamp="20240102 11:38:06.502" level="INFO">${output} = {
    "LastModified": "Tue, 02 Jan 2024 11:38:05 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20240102 11:38:06.018" endtime="20240102 11:38:06.502"/>
</kw>
<status status="PASS" starttime="20240102 11:38:06.017" endtime="20240102 11:38:06.503"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>delete-object --bucket ${BUCKET} --key ${PREFIX}/word.txt._COPYING_</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:38:06.506" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-object --bucket erasure --key ozone-test-3227807120/word.txt._COPYING_ 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:38:06.946" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:38:06.946" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240102 11:38:06.504" endtime="20240102 11:38:06.947"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:38:06.947" level="INFO"/>
<status status="PASS" starttime="20240102 11:38:06.947" endtime="20240102 11:38:06.948"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:38:06.948" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:38:06.948" endtime="20240102 11:38:06.948"/>
</kw>
<status status="PASS" starttime="20240102 11:38:06.504" endtime="20240102 11:38:06.948"/>
</kw>
<msg timestamp="20240102 11:38:06.948" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:38:06.504" endtime="20240102 11:38:06.948"/>
</kw>
<msg timestamp="20240102 11:38:06.949" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240102 11:38:06.503" endtime="20240102 11:38:06.949"/>
</kw>
<status status="PASS" starttime="20240102 11:38:06.503" endtime="20240102 11:38:06.949"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<arg>head-object --bucket ${BUCKET} --key ${PREFIX}/word.txt._COPYING_</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:38:06.951" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket erasure --key ozone-test-3227807120/word.txt._COPYING_ 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:38:07.409" level="INFO">${rc} = 255</msg>
<msg timestamp="20240102 11:38:07.409" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20240102 11:38:06.950" endtime="20240102 11:38:07.409"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:38:07.410" level="INFO">
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20240102 11:38:07.410" endtime="20240102 11:38:07.410"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:38:07.411" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:38:07.410" endtime="20240102 11:38:07.411"/>
</kw>
<msg timestamp="20240102 11:38:07.411" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20240102 11:38:06.949" endtime="20240102 11:38:07.411"/>
</kw>
<status status="PASS" starttime="20240102 11:38:06.949" endtime="20240102 11:38:07.411"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20240102 11:38:01.731" endtime="20240102 11:38:07.411"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20240102 11:38:01.721" endtime="20240102 11:38:07.412"/>
</suite>
<suite id="s1-s1-s11" name="Objectdelete" source="/opt/hadoop/smoketest/s3/objectdelete.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20240102 11:38:07.423" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:38:07.423" endtime="20240102 11:38:07.423"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20240102 11:38:07.423" endtime="20240102 11:38:07.423"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20240102 11:38:07.423" endtime="20240102 11:38:07.423"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20240102 11:38:07.423" endtime="20240102 11:38:07.423"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20240102 11:38:07.423" endtime="20240102 11:38:07.423"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20240102 11:38:07.424" endtime="20240102 11:38:07.424"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20240102 11:38:07.424" endtime="20240102 11:38:07.424"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20240102 11:38:07.424" endtime="20240102 11:38:07.424"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20240102 11:38:07.424" endtime="20240102 11:38:07.424"/>
</kw>
<status status="PASS" starttime="20240102 11:38:07.422" endtime="20240102 11:38:07.424"/>
</kw>
<test id="s1-s1-s11-t1" name="Delete file with s3api" line="30">
<kw name="Execute" library="os">
<arg>date &gt; /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:38:07.427" level="INFO">Running command 'date &gt; /tmp/testfile'.</msg>
<msg timestamp="20240102 11:38:07.429" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:38:07.429" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240102 11:38:07.426" endtime="20240102 11:38:07.429"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:38:07.430" level="INFO"/>
<status status="PASS" starttime="20240102 11:38:07.430" endtime="20240102 11:38:07.430"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:38:07.431" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:38:07.430" endtime="20240102 11:38:07.431"/>
</kw>
<status status="PASS" starttime="20240102 11:38:07.425" endtime="20240102 11:38:07.431"/>
</kw>
<msg timestamp="20240102 11:38:07.431" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:38:07.425" endtime="20240102 11:38:07.431"/>
</kw>
<status status="PASS" starttime="20240102 11:38:07.425" endtime="20240102 11:38:07.431"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/deletetestapi/key=value/f1 --body /tmp/testfile</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:38:07.434" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket erasure --key ozone-test-3227807120/deletetestapi/key=value/f1 --body /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:38:07.937" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:38:07.937" level="INFO">${output} = {
    "ETag": "\"e5fda15814bbeb653ecf510cd9e80995\""
}</msg>
<status status="PASS" starttime="20240102 11:38:07.433" endtime="20240102 11:38:07.937"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:38:07.938" level="INFO">{
    "ETag": "\"e5fda15814bbeb653ecf510cd9e80995\""
}</msg>
<status status="PASS" starttime="20240102 11:38:07.937" endtime="20240102 11:38:07.938"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:38:07.938" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:38:07.938" endtime="20240102 11:38:07.938"/>
</kw>
<status status="PASS" starttime="20240102 11:38:07.432" endtime="20240102 11:38:07.938"/>
</kw>
<msg timestamp="20240102 11:38:07.938" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:38:07.432" endtime="20240102 11:38:07.939"/>
</kw>
<msg timestamp="20240102 11:38:07.939" level="INFO">${output} = {
    "ETag": "\"e5fda15814bbeb653ecf510cd9e80995\""
}</msg>
<status status="PASS" starttime="20240102 11:38:07.432" endtime="20240102 11:38:07.939"/>
</kw>
<msg timestamp="20240102 11:38:07.939" level="INFO">${result} = {
    "ETag": "\"e5fda15814bbeb653ecf510cd9e80995\""
}</msg>
<status status="PASS" starttime="20240102 11:38:07.431" endtime="20240102 11:38:07.939"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${BUCKET} --prefix ${PREFIX}/deletetestapi/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:38:07.942" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket erasure --prefix ozone-test-3227807120/deletetestapi/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:38:08.403" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:38:08.403" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-3227807120/deletetestapi/key=value/",
            "LastModified": "2024-01-02T11:38:07.852Z",
            "ETag": "2024-01-02T11:38:07.852Z...</msg>
<status status="PASS" starttime="20240102 11:38:07.941" endtime="20240102 11:38:08.403"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:38:08.404" level="INFO">{
    "Contents": [
        {
            "Key": "ozone-test-3227807120/deletetestapi/key=value/",
            "LastModified": "2024-01-02T11:38:07.852Z",
            "ETag": "2024-01-02T11:38:07.852Z",
            "Size": 0,
            "StorageClass": "STANDARD"
        },
        {
            "Key": "ozone-test-3227807120/deletetestapi/key=value/f1",
            "LastModified": "2024-01-02T11:38:07.889Z",
            "ETag": "2024-01-02T11:38:07.889Z",
            "Size": 29,
            "StorageClass": "STANDARD"
        }
    ]
}</msg>
<status status="PASS" starttime="20240102 11:38:08.404" endtime="20240102 11:38:08.404"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:38:08.405" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:38:08.405" endtime="20240102 11:38:08.405"/>
</kw>
<status status="PASS" starttime="20240102 11:38:07.940" endtime="20240102 11:38:08.405"/>
</kw>
<msg timestamp="20240102 11:38:08.405" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:38:07.940" endtime="20240102 11:38:08.405"/>
</kw>
<msg timestamp="20240102 11:38:08.405" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-3227807120/deletetestapi/key=value/",
            "LastModified": "2024-01-02T11:38:07.852Z",
            "ETag": "2024-01-02T11:38:07.852Z...</msg>
<status status="PASS" starttime="20240102 11:38:07.940" endtime="20240102 11:38:08.406"/>
</kw>
<msg timestamp="20240102 11:38:08.406" level="INFO">${result} = {
    "Contents": [
        {
            "Key": "ozone-test-3227807120/deletetestapi/key=value/",
            "LastModified": "2024-01-02T11:38:07.852Z",
            "ETag": "2024-01-02T11:38:07.852Z...</msg>
<status status="PASS" starttime="20240102 11:38:07.939" endtime="20240102 11:38:08.406"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>"${PREFIX}/deletetestapi/key=value/f1"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:38:08.406" endtime="20240102 11:38:08.406"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>delete-object --bucket ${BUCKET} --key ${PREFIX}/deletetestapi/key=value/f1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:38:08.409" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-object --bucket erasure --key ozone-test-3227807120/deletetestapi/key=value/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:38:08.856" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:38:08.856" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240102 11:38:08.408" endtime="20240102 11:38:08.856"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:38:08.857" level="INFO"/>
<status status="PASS" starttime="20240102 11:38:08.857" endtime="20240102 11:38:08.857"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:38:08.858" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:38:08.857" endtime="20240102 11:38:08.858"/>
</kw>
<status status="PASS" starttime="20240102 11:38:08.408" endtime="20240102 11:38:08.858"/>
</kw>
<msg timestamp="20240102 11:38:08.858" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:38:08.407" endtime="20240102 11:38:08.858"/>
</kw>
<msg timestamp="20240102 11:38:08.858" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240102 11:38:08.407" endtime="20240102 11:38:08.858"/>
</kw>
<msg timestamp="20240102 11:38:08.859" level="INFO">${result} = </msg>
<status status="PASS" starttime="20240102 11:38:08.406" endtime="20240102 11:38:08.859"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${BUCKET} --prefix ${PREFIX}/deletetestapi/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:38:08.862" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket erasure --prefix ozone-test-3227807120/deletetestapi/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:38:09.315" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:38:09.315" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-3227807120/deletetestapi/key=value/",
            "LastModified": "2024-01-02T11:38:07.852Z",
            "ETag": "2024-01-02T11:38:07.852Z...</msg>
<status status="PASS" starttime="20240102 11:38:08.861" endtime="20240102 11:38:09.315"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:38:09.316" level="INFO">{
    "Contents": [
        {
            "Key": "ozone-test-3227807120/deletetestapi/key=value/",
            "LastModified": "2024-01-02T11:38:07.852Z",
            "ETag": "2024-01-02T11:38:07.852Z",
            "Size": 0,
            "StorageClass": "STANDARD"
        }
    ]
}</msg>
<status status="PASS" starttime="20240102 11:38:09.316" endtime="20240102 11:38:09.316"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:38:09.317" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:38:09.317" endtime="20240102 11:38:09.317"/>
</kw>
<status status="PASS" starttime="20240102 11:38:08.860" endtime="20240102 11:38:09.317"/>
</kw>
<msg timestamp="20240102 11:38:09.317" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:38:08.860" endtime="20240102 11:38:09.317"/>
</kw>
<msg timestamp="20240102 11:38:09.317" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-3227807120/deletetestapi/key=value/",
            "LastModified": "2024-01-02T11:38:07.852Z",
            "ETag": "2024-01-02T11:38:07.852Z...</msg>
<status status="PASS" starttime="20240102 11:38:08.859" endtime="20240102 11:38:09.318"/>
</kw>
<msg timestamp="20240102 11:38:09.318" level="INFO">${result} = {
    "Contents": [
        {
            "Key": "ozone-test-3227807120/deletetestapi/key=value/",
            "LastModified": "2024-01-02T11:38:07.852Z",
            "ETag": "2024-01-02T11:38:07.852Z...</msg>
<status status="PASS" starttime="20240102 11:38:08.859" endtime="20240102 11:38:09.318"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>"${PREFIX}/deletetestapi/key=value/f1"</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:38:09.318" endtime="20240102 11:38:09.318"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20240102 11:38:07.424" endtime="20240102 11:38:09.318"/>
</test>
<test id="s1-s1-s11-t2" name="Delete file with s3api, file doesn't exist" line="39">
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>ls s3://${BUCKET}/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:38:09.323" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://erasure/ 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:38:09.794" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:38:09.794" level="INFO">${output} =                            PRE dir1/
                           PRE multipart/
                           PRE ozone-test-3227807120/
                           PRE ozone-test-4246724062/
             ...</msg>
<status status="PASS" starttime="20240102 11:38:09.321" endtime="20240102 11:38:09.794"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:38:09.795" level="INFO">                           PRE dir1/
                           PRE multipart/
                           PRE ozone-test-3227807120/
                           PRE ozone-test-4246724062/
                           PRE ozone-test-4443196438/
                           PRE ozone-test-4849489839/
                           PRE ozone-test-5391798798/
                           PRE ozone-test-5727091207/
                           PRE ozone-test-5788869696/
                           PRE ozone-test-7065559026/
                           PRE ozone-test-8006035476/
                           PRE ozone-test-8436724060/
                           PRE ozone-test-8927362968/
                           PRE specialchars/
2024-01-02 11:36:53       4068 README1.md
2024-01-02 11:36:52       4068 README10.md
2024-01-02 11:36:53   10485761 multiUpload.1.gz
2024-01-02 11:36:53   10485761 multiUpload.2.gz
2024-01-02 11:36:55   20971522 onqhfjyyou
2024-01-02 11:36:47         29 testfile</msg>
<status status="PASS" starttime="20240102 11:38:09.794" endtime="20240102 11:38:09.795"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:38:09.795" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:38:09.795" endtime="20240102 11:38:09.796"/>
</kw>
<status status="PASS" starttime="20240102 11:38:09.321" endtime="20240102 11:38:09.796"/>
</kw>
<msg timestamp="20240102 11:38:09.796" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:38:09.320" endtime="20240102 11:38:09.796"/>
</kw>
<msg timestamp="20240102 11:38:09.796" level="INFO">${output} =                            PRE dir1/
                           PRE multipart/
                           PRE ozone-test-3227807120/
                           PRE ozone-test-4246724062/
             ...</msg>
<status status="PASS" starttime="20240102 11:38:09.320" endtime="20240102 11:38:09.796"/>
</kw>
<msg timestamp="20240102 11:38:09.796" level="INFO">${result} =                            PRE dir1/
                           PRE multipart/
                           PRE ozone-test-3227807120/
                           PRE ozone-test-4246724062/
             ...</msg>
<status status="PASS" starttime="20240102 11:38:09.320" endtime="20240102 11:38:09.796"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>thereisnosuchfile</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:38:09.796" endtime="20240102 11:38:09.797"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>delete-object --bucket ${BUCKET} --key thereisnosuchfile</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:38:09.800" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-object --bucket erasure --key thereisnosuchfile 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:38:10.306" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:38:10.306" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240102 11:38:09.798" endtime="20240102 11:38:10.306"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:38:10.307" level="INFO"/>
<status status="PASS" starttime="20240102 11:38:10.306" endtime="20240102 11:38:10.307"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:38:10.307" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:38:10.307" endtime="20240102 11:38:10.307"/>
</kw>
<status status="PASS" starttime="20240102 11:38:09.798" endtime="20240102 11:38:10.307"/>
</kw>
<msg timestamp="20240102 11:38:10.307" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:38:09.798" endtime="20240102 11:38:10.307"/>
</kw>
<msg timestamp="20240102 11:38:10.308" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240102 11:38:09.797" endtime="20240102 11:38:10.308"/>
</kw>
<msg timestamp="20240102 11:38:10.308" level="INFO">${result} = </msg>
<status status="PASS" starttime="20240102 11:38:09.797" endtime="20240102 11:38:10.308"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>ls s3://${BUCKET}/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:38:10.311" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://erasure/ 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:38:10.784" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:38:10.784" level="INFO">${output} =                            PRE dir1/
                           PRE multipart/
                           PRE ozone-test-3227807120/
                           PRE ozone-test-4246724062/
             ...</msg>
<status status="PASS" starttime="20240102 11:38:10.309" endtime="20240102 11:38:10.784"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:38:10.785" level="INFO">                           PRE dir1/
                           PRE multipart/
                           PRE ozone-test-3227807120/
                           PRE ozone-test-4246724062/
                           PRE ozone-test-4443196438/
                           PRE ozone-test-4849489839/
                           PRE ozone-test-5391798798/
                           PRE ozone-test-5727091207/
                           PRE ozone-test-5788869696/
                           PRE ozone-test-7065559026/
                           PRE ozone-test-8006035476/
                           PRE ozone-test-8436724060/
                           PRE ozone-test-8927362968/
                           PRE specialchars/
2024-01-02 11:36:53       4068 README1.md
2024-01-02 11:36:52       4068 README10.md
2024-01-02 11:36:53   10485761 multiUpload.1.gz
2024-01-02 11:36:53   10485761 multiUpload.2.gz
2024-01-02 11:36:55   20971522 onqhfjyyou
2024-01-02 11:36:47         29 testfile</msg>
<status status="PASS" starttime="20240102 11:38:10.784" endtime="20240102 11:38:10.785"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:38:10.786" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:38:10.785" endtime="20240102 11:38:10.786"/>
</kw>
<status status="PASS" starttime="20240102 11:38:10.309" endtime="20240102 11:38:10.786"/>
</kw>
<msg timestamp="20240102 11:38:10.786" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:38:10.309" endtime="20240102 11:38:10.786"/>
</kw>
<msg timestamp="20240102 11:38:10.786" level="INFO">${output} =                            PRE dir1/
                           PRE multipart/
                           PRE ozone-test-3227807120/
                           PRE ozone-test-4246724062/
             ...</msg>
<status status="PASS" starttime="20240102 11:38:10.308" endtime="20240102 11:38:10.787"/>
</kw>
<msg timestamp="20240102 11:38:10.787" level="INFO">${result} =                            PRE dir1/
                           PRE multipart/
                           PRE ozone-test-3227807120/
                           PRE ozone-test-4246724062/
             ...</msg>
<status status="PASS" starttime="20240102 11:38:10.308" endtime="20240102 11:38:10.787"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>thereisnosuchfile</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:38:10.787" endtime="20240102 11:38:10.787"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20240102 11:38:09.319" endtime="20240102 11:38:10.787"/>
</test>
<test id="s1-s1-s11-t3" name="Delete dir with s3api" line="46">
<kw name="Execute" library="os">
<arg>date &gt; /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:38:10.791" level="INFO">Running command 'date &gt; /tmp/testfile'.</msg>
<msg timestamp="20240102 11:38:10.793" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:38:10.793" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240102 11:38:10.789" endtime="20240102 11:38:10.793"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:38:10.794" level="INFO"/>
<status status="PASS" starttime="20240102 11:38:10.793" endtime="20240102 11:38:10.794"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:38:10.794" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:38:10.794" endtime="20240102 11:38:10.794"/>
</kw>
<status status="PASS" starttime="20240102 11:38:10.789" endtime="20240102 11:38:10.794"/>
</kw>
<msg timestamp="20240102 11:38:10.794" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:38:10.789" endtime="20240102 11:38:10.794"/>
</kw>
<status status="PASS" starttime="20240102 11:38:10.788" endtime="20240102 11:38:10.795"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>cp /tmp/testfile s3://${BUCKET}/${PREFIX}/deletetestapidir/key=value/f1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:38:10.798" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 cp /tmp/testfile s3://erasure/ozone-test-3227807120/deletetestapidir/key=value/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:38:11.295" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:38:11.295" level="INFO">${output} = Completed 29 Bytes/29 Bytes (505 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://erasure/ozone-test-3227807120/deletetestapidir/key=value/f1</msg>
<status status="PASS" starttime="20240102 11:38:10.796" endtime="20240102 11:38:11.296"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:38:11.297" level="INFO">Completed 29 Bytes/29 Bytes (505 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://erasure/ozone-test-3227807120/deletetestapidir/key=value/f1</msg>
<status status="PASS" starttime="20240102 11:38:11.296" endtime="20240102 11:38:11.297"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:38:11.297" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:38:11.297" endtime="20240102 11:38:11.298"/>
</kw>
<status status="PASS" starttime="20240102 11:38:10.796" endtime="20240102 11:38:11.298"/>
</kw>
<msg timestamp="20240102 11:38:11.298" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:38:10.796" endtime="20240102 11:38:11.298"/>
</kw>
<msg timestamp="20240102 11:38:11.298" level="INFO">${output} = Completed 29 Bytes/29 Bytes (505 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://erasure/ozone-test-3227807120/deletetestapidir/key=value/f1</msg>
<status status="PASS" starttime="20240102 11:38:10.795" endtime="20240102 11:38:11.298"/>
</kw>
<msg timestamp="20240102 11:38:11.298" level="INFO">${result} = Completed 29 Bytes/29 Bytes (505 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://erasure/ozone-test-3227807120/deletetestapidir/key=value/f1</msg>
<status status="PASS" starttime="20240102 11:38:10.795" endtime="20240102 11:38:11.298"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>ls s3://${BUCKET}/${PREFIX}/deletetestapidir/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:38:11.302" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://erasure/ozone-test-3227807120/deletetestapidir/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:38:11.777" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:38:11.777" level="INFO">${output} = 2024-01-02 11:38:11          0 
2024-01-02 11:38:11         29 f1</msg>
<status status="PASS" starttime="20240102 11:38:11.301" endtime="20240102 11:38:11.777"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:38:11.778" level="INFO">2024-01-02 11:38:11          0 
2024-01-02 11:38:11         29 f1</msg>
<status status="PASS" starttime="20240102 11:38:11.778" endtime="20240102 11:38:11.778"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:38:11.779" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:38:11.779" endtime="20240102 11:38:11.779"/>
</kw>
<status status="PASS" starttime="20240102 11:38:11.300" endtime="20240102 11:38:11.779"/>
</kw>
<msg timestamp="20240102 11:38:11.779" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:38:11.300" endtime="20240102 11:38:11.779"/>
</kw>
<msg timestamp="20240102 11:38:11.779" level="INFO">${output} = 2024-01-02 11:38:11          0 
2024-01-02 11:38:11         29 f1</msg>
<status status="PASS" starttime="20240102 11:38:11.299" endtime="20240102 11:38:11.779"/>
</kw>
<msg timestamp="20240102 11:38:11.780" level="INFO">${result} = 2024-01-02 11:38:11          0 
2024-01-02 11:38:11         29 f1</msg>
<status status="PASS" starttime="20240102 11:38:11.299" endtime="20240102 11:38:11.780"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>f1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:38:11.780" endtime="20240102 11:38:11.780"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>delete-object --bucket ${BUCKET} --key ${PREFIX}/deletetestapidir/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:38:11.784" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-object --bucket erasure --key ozone-test-3227807120/deletetestapidir/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:38:12.249" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:38:12.249" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240102 11:38:11.782" endtime="20240102 11:38:12.249"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:38:12.250" level="INFO"/>
<status status="PASS" starttime="20240102 11:38:12.249" endtime="20240102 11:38:12.250"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:38:12.250" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:38:12.250" endtime="20240102 11:38:12.251"/>
</kw>
<status status="PASS" starttime="20240102 11:38:11.781" endtime="20240102 11:38:12.251"/>
</kw>
<msg timestamp="20240102 11:38:12.251" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:38:11.781" endtime="20240102 11:38:12.251"/>
</kw>
<msg timestamp="20240102 11:38:12.251" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240102 11:38:11.781" endtime="20240102 11:38:12.251"/>
</kw>
<msg timestamp="20240102 11:38:12.251" level="INFO">${result} = </msg>
<status status="PASS" starttime="20240102 11:38:11.780" endtime="20240102 11:38:12.251"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>ls s3://${BUCKET}/${PREFIX}/deletetestapidir/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:38:12.256" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://erasure/ozone-test-3227807120/deletetestapidir/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:38:12.726" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:38:12.726" level="INFO">${output} = 2024-01-02 11:38:11          0 
2024-01-02 11:38:11         29 f1</msg>
<status status="PASS" starttime="20240102 11:38:12.254" endtime="20240102 11:38:12.726"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:38:12.727" level="INFO">2024-01-02 11:38:11          0 
2024-01-02 11:38:11         29 f1</msg>
<status status="PASS" starttime="20240102 11:38:12.726" endtime="20240102 11:38:12.727"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:38:12.727" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:38:12.727" endtime="20240102 11:38:12.727"/>
</kw>
<status status="PASS" starttime="20240102 11:38:12.253" endtime="20240102 11:38:12.727"/>
</kw>
<msg timestamp="20240102 11:38:12.728" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:38:12.253" endtime="20240102 11:38:12.728"/>
</kw>
<msg timestamp="20240102 11:38:12.728" level="INFO">${output} = 2024-01-02 11:38:11          0 
2024-01-02 11:38:11         29 f1</msg>
<status status="PASS" starttime="20240102 11:38:12.252" endtime="20240102 11:38:12.728"/>
</kw>
<msg timestamp="20240102 11:38:12.728" level="INFO">${result} = 2024-01-02 11:38:11          0 
2024-01-02 11:38:11         29 f1</msg>
<status status="PASS" starttime="20240102 11:38:12.252" endtime="20240102 11:38:12.728"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>f1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:38:12.728" endtime="20240102 11:38:12.728"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>delete-object --bucket ${BUCKET} --key ${PREFIX}/deletetestapidir/key=value/f1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:38:12.732" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-object --bucket erasure --key ozone-test-3227807120/deletetestapidir/key=value/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:38:13.208" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:38:13.208" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240102 11:38:12.730" endtime="20240102 11:38:13.208"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:38:13.209" level="INFO"/>
<status status="PASS" starttime="20240102 11:38:13.208" endtime="20240102 11:38:13.209"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:38:13.209" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:38:13.209" endtime="20240102 11:38:13.209"/>
</kw>
<status status="PASS" starttime="20240102 11:38:12.730" endtime="20240102 11:38:13.209"/>
</kw>
<msg timestamp="20240102 11:38:13.209" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:38:12.730" endtime="20240102 11:38:13.209"/>
</kw>
<msg timestamp="20240102 11:38:13.210" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240102 11:38:12.729" endtime="20240102 11:38:13.210"/>
</kw>
<msg timestamp="20240102 11:38:13.210" level="INFO">${result} = </msg>
<status status="PASS" starttime="20240102 11:38:12.729" endtime="20240102 11:38:13.210"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20240102 11:38:10.788" endtime="20240102 11:38:13.210"/>
</test>
<test id="s1-s1-s11-t4" name="Delete file with s3api, file doesn't exist, prefix of a real file" line="57">
<kw name="Execute" library="os">
<arg>date &gt; /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:38:13.214" level="INFO">Running command 'date &gt; /tmp/testfile'.</msg>
<msg timestamp="20240102 11:38:13.216" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:38:13.216" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240102 11:38:13.212" endtime="20240102 11:38:13.216"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:38:13.217" level="INFO"/>
<status status="PASS" starttime="20240102 11:38:13.216" endtime="20240102 11:38:13.217"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:38:13.217" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:38:13.217" endtime="20240102 11:38:13.217"/>
</kw>
<status status="PASS" starttime="20240102 11:38:13.212" endtime="20240102 11:38:13.217"/>
</kw>
<msg timestamp="20240102 11:38:13.217" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:38:13.212" endtime="20240102 11:38:13.217"/>
</kw>
<status status="PASS" starttime="20240102 11:38:13.211" endtime="20240102 11:38:13.218"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>cp /tmp/testfile s3://${BUCKET}/${PREFIX}/deletetestapiprefix/key=value/filefile</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:38:13.221" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 cp /tmp/testfile s3://erasure/ozone-test-3227807120/deletetestapiprefix/key=value/filefile 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:38:13.725" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:38:13.725" level="INFO">${output} = Completed 29 Bytes/29 Bytes (439 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://erasure/ozone-test-3227807120/deletetestapiprefix/key=value/filefile</msg>
<status status="PASS" starttime="20240102 11:38:13.220" endtime="20240102 11:38:13.725"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:38:13.726" level="INFO">Completed 29 Bytes/29 Bytes (439 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://erasure/ozone-test-3227807120/deletetestapiprefix/key=value/filefile</msg>
<status status="PASS" starttime="20240102 11:38:13.725" endtime="20240102 11:38:13.726"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:38:13.726" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:38:13.726" endtime="20240102 11:38:13.726"/>
</kw>
<status status="PASS" starttime="20240102 11:38:13.219" endtime="20240102 11:38:13.726"/>
</kw>
<msg timestamp="20240102 11:38:13.726" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:38:13.219" endtime="20240102 11:38:13.726"/>
</kw>
<msg timestamp="20240102 11:38:13.727" level="INFO">${output} = Completed 29 Bytes/29 Bytes (439 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://erasure/ozone-test-3227807120/deletetestapiprefix/key=value/filefile</msg>
<status status="PASS" starttime="20240102 11:38:13.218" endtime="20240102 11:38:13.727"/>
</kw>
<msg timestamp="20240102 11:38:13.727" level="INFO">${result} = Completed 29 Bytes/29 Bytes (439 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://erasure/ozone-test-3227807120/deletetestapiprefix/key=value/filefile</msg>
<status status="PASS" starttime="20240102 11:38:13.218" endtime="20240102 11:38:13.727"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>ls s3://${BUCKET}/${PREFIX}/deletetestapiprefix/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:38:13.730" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://erasure/ozone-test-3227807120/deletetestapiprefix/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:38:14.197" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:38:14.197" level="INFO">${output} = 2024-01-02 11:38:13          0 
2024-01-02 11:38:13         29 filefile</msg>
<status status="PASS" starttime="20240102 11:38:13.729" endtime="20240102 11:38:14.197"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:38:14.198" level="INFO">2024-01-02 11:38:13          0 
2024-01-02 11:38:13         29 filefile</msg>
<status status="PASS" starttime="20240102 11:38:14.198" endtime="20240102 11:38:14.198"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:38:14.199" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:38:14.198" endtime="20240102 11:38:14.199"/>
</kw>
<status status="PASS" starttime="20240102 11:38:13.728" endtime="20240102 11:38:14.199"/>
</kw>
<msg timestamp="20240102 11:38:14.199" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:38:13.728" endtime="20240102 11:38:14.199"/>
</kw>
<msg timestamp="20240102 11:38:14.199" level="INFO">${output} = 2024-01-02 11:38:13          0 
2024-01-02 11:38:13         29 filefile</msg>
<status status="PASS" starttime="20240102 11:38:13.728" endtime="20240102 11:38:14.199"/>
</kw>
<msg timestamp="20240102 11:38:14.200" level="INFO">${result} = 2024-01-02 11:38:13          0 
2024-01-02 11:38:13         29 filefile</msg>
<status status="PASS" starttime="20240102 11:38:13.727" endtime="20240102 11:38:14.200"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>filefile</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:38:14.200" endtime="20240102 11:38:14.200"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>delete-object --bucket ${BUCKET} --key ${PREFIX}/deletetestapiprefix/key=value/file</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:38:14.203" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-object --bucket erasure --key ozone-test-3227807120/deletetestapiprefix/key=value/file 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:38:14.664" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:38:14.664" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240102 11:38:14.202" endtime="20240102 11:38:14.664"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:38:14.665" level="INFO"/>
<status status="PASS" starttime="20240102 11:38:14.664" endtime="20240102 11:38:14.665"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:38:14.665" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:38:14.665" endtime="20240102 11:38:14.665"/>
</kw>
<status status="PASS" starttime="20240102 11:38:14.201" endtime="20240102 11:38:14.665"/>
</kw>
<msg timestamp="20240102 11:38:14.665" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:38:14.201" endtime="20240102 11:38:14.665"/>
</kw>
<msg timestamp="20240102 11:38:14.666" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240102 11:38:14.201" endtime="20240102 11:38:14.666"/>
</kw>
<msg timestamp="20240102 11:38:14.666" level="INFO">${result} = </msg>
<status status="PASS" starttime="20240102 11:38:14.200" endtime="20240102 11:38:14.666"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>ls s3://${BUCKET}/${PREFIX}/deletetestapiprefix/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:38:14.669" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://erasure/ozone-test-3227807120/deletetestapiprefix/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:38:15.109" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:38:15.109" level="INFO">${output} = 2024-01-02 11:38:13          0 
2024-01-02 11:38:13         29 filefile</msg>
<status status="PASS" starttime="20240102 11:38:14.668" endtime="20240102 11:38:15.109"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:38:15.110" level="INFO">2024-01-02 11:38:13          0 
2024-01-02 11:38:13         29 filefile</msg>
<status status="PASS" starttime="20240102 11:38:15.109" endtime="20240102 11:38:15.110"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:38:15.110" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:38:15.110" endtime="20240102 11:38:15.110"/>
</kw>
<status status="PASS" starttime="20240102 11:38:14.667" endtime="20240102 11:38:15.111"/>
</kw>
<msg timestamp="20240102 11:38:15.111" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:38:14.667" endtime="20240102 11:38:15.111"/>
</kw>
<msg timestamp="20240102 11:38:15.111" level="INFO">${output} = 2024-01-02 11:38:13          0 
2024-01-02 11:38:13         29 filefile</msg>
<status status="PASS" starttime="20240102 11:38:14.667" endtime="20240102 11:38:15.111"/>
</kw>
<msg timestamp="20240102 11:38:15.111" level="INFO">${result} = 2024-01-02 11:38:13          0 
2024-01-02 11:38:13         29 filefile</msg>
<status status="PASS" starttime="20240102 11:38:14.666" endtime="20240102 11:38:15.111"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>filefile</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:38:15.111" endtime="20240102 11:38:15.112"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>delete-object --bucket ${BUCKET} --key ${PREFIX}/deletetestapiprefix/key=value/filefile</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:38:15.115" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-object --bucket erasure --key ozone-test-3227807120/deletetestapiprefix/key=value/filefile 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:38:15.727" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:38:15.727" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240102 11:38:15.114" endtime="20240102 11:38:15.727"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:38:15.728" level="INFO"/>
<status status="PASS" starttime="20240102 11:38:15.727" endtime="20240102 11:38:15.728"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:38:15.728" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:38:15.728" endtime="20240102 11:38:15.728"/>
</kw>
<status status="PASS" starttime="20240102 11:38:15.113" endtime="20240102 11:38:15.728"/>
</kw>
<msg timestamp="20240102 11:38:15.729" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:38:15.113" endtime="20240102 11:38:15.729"/>
</kw>
<msg timestamp="20240102 11:38:15.729" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240102 11:38:15.112" endtime="20240102 11:38:15.729"/>
</kw>
<msg timestamp="20240102 11:38:15.729" level="INFO">${result} = </msg>
<status status="PASS" starttime="20240102 11:38:15.112" endtime="20240102 11:38:15.729"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20240102 11:38:13.211" endtime="20240102 11:38:15.729"/>
</test>
<test id="s1-s1-s11-t5" name="Delete file with s3api, bucket doesn't exist" line="69">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>delete-object --bucket ${BUCKET}-nosuchbucket --key f1</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:38:15.733" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-object --bucket erasure-nosuchbucket --key f1 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:38:16.174" level="INFO">${rc} = 255</msg>
<msg timestamp="20240102 11:38:16.174" level="INFO">${output} = 
An error occurred (NoSuchBucket) when calling the DeleteObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20240102 11:38:15.731" endtime="20240102 11:38:16.174"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:38:16.175" level="INFO">
An error occurred (NoSuchBucket) when calling the DeleteObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20240102 11:38:16.175" endtime="20240102 11:38:16.175"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:38:16.176" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:38:16.175" endtime="20240102 11:38:16.176"/>
</kw>
<msg timestamp="20240102 11:38:16.176" level="INFO">${output} = 
An error occurred (NoSuchBucket) when calling the DeleteObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20240102 11:38:15.731" endtime="20240102 11:38:16.176"/>
</kw>
<msg timestamp="20240102 11:38:16.176" level="INFO">${result} = 
An error occurred (NoSuchBucket) when calling the DeleteObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20240102 11:38:15.730" endtime="20240102 11:38:16.176"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NoSuchBucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:38:16.176" endtime="20240102 11:38:16.177"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20240102 11:38:15.730" endtime="20240102 11:38:16.177"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20240102 11:38:07.413" endtime="20240102 11:38:16.178"/>
</suite>
<suite id="s1-s1-s12" name="Objecthead" source="/opt/hadoop/smoketest/s3/objecthead.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20240102 11:38:16.188" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:38:16.187" endtime="20240102 11:38:16.188"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20240102 11:38:16.188" endtime="20240102 11:38:16.188"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20240102 11:38:16.188" endtime="20240102 11:38:16.188"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20240102 11:38:16.188" endtime="20240102 11:38:16.188"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20240102 11:38:16.188" endtime="20240102 11:38:16.188"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20240102 11:38:16.188" endtime="20240102 11:38:16.189"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20240102 11:38:16.189" endtime="20240102 11:38:16.189"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20240102 11:38:16.189" endtime="20240102 11:38:16.189"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20240102 11:38:16.189" endtime="20240102 11:38:16.189"/>
</kw>
<status status="PASS" starttime="20240102 11:38:16.187" endtime="20240102 11:38:16.189"/>
</kw>
<test id="s1-s1-s12-t1" name="Head existing object" line="32">
<kw name="Execute" library="os">
<arg>echo "Randomtext" &gt; /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:38:16.192" level="INFO">Running command 'echo "Randomtext" &gt; /tmp/testfile'.</msg>
<msg timestamp="20240102 11:38:16.193" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:38:16.193" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240102 11:38:16.191" endtime="20240102 11:38:16.193"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:38:16.194" level="INFO"/>
<status status="PASS" starttime="20240102 11:38:16.194" endtime="20240102 11:38:16.194"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:38:16.195" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:38:16.194" endtime="20240102 11:38:16.195"/>
</kw>
<status status="PASS" starttime="20240102 11:38:16.190" endtime="20240102 11:38:16.195"/>
</kw>
<msg timestamp="20240102 11:38:16.195" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:38:16.190" endtime="20240102 11:38:16.195"/>
</kw>
<status status="PASS" starttime="20240102 11:38:16.190" endtime="20240102 11:38:16.195"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/headobject/key=value/f1 --body /tmp/testfile</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:38:16.197" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket erasure --key ozone-test-3227807120/headobject/key=value/f1 --body /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:38:16.687" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:38:16.687" level="INFO">${output} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20240102 11:38:16.196" endtime="20240102 11:38:16.687"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:38:16.688" level="INFO">{
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20240102 11:38:16.687" endtime="20240102 11:38:16.688"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:38:16.688" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:38:16.688" endtime="20240102 11:38:16.688"/>
</kw>
<msg timestamp="20240102 11:38:16.689" level="INFO">${output} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20240102 11:38:16.196" endtime="20240102 11:38:16.689"/>
</kw>
<msg timestamp="20240102 11:38:16.689" level="INFO">${result} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20240102 11:38:16.195" endtime="20240102 11:38:16.689"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>head-object --bucket ${BUCKET} --key ${PREFIX}/headobject/key=value/f1</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:38:16.691" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket erasure --key ozone-test-3227807120/headobject/key=value/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:38:17.136" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:38:17.136" level="INFO">${output} = {
    "LastModified": "Tue, 02 Jan 2024 11:38:16 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20240102 11:38:16.690" endtime="20240102 11:38:17.136"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:38:17.137" level="INFO">{
    "LastModified": "Tue, 02 Jan 2024 11:38:16 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-stream",
    "Expires": "Tue, 02 Jan 2024 11:38:17 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20240102 11:38:17.136" endtime="20240102 11:38:17.137"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:38:17.137" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:38:17.137" endtime="20240102 11:38:17.137"/>
</kw>
<msg timestamp="20240102 11:38:17.138" level="INFO">${output} = {
    "LastModified": "Tue, 02 Jan 2024 11:38:16 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20240102 11:38:16.690" endtime="20240102 11:38:17.138"/>
</kw>
<msg timestamp="20240102 11:38:17.138" level="INFO">${result} = {
    "LastModified": "Tue, 02 Jan 2024 11:38:16 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20240102 11:38:16.689" endtime="20240102 11:38:17.138"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>delete-object --bucket ${BUCKET} --key ${PREFIX}/headobject/key=value/f1</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:38:17.141" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-object --bucket erasure --key ozone-test-3227807120/headobject/key=value/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:38:17.598" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:38:17.598" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240102 11:38:17.139" endtime="20240102 11:38:17.598"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:38:17.599" level="INFO"/>
<status status="PASS" starttime="20240102 11:38:17.599" endtime="20240102 11:38:17.599"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:38:17.600" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:38:17.599" endtime="20240102 11:38:17.600"/>
</kw>
<msg timestamp="20240102 11:38:17.600" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240102 11:38:17.139" endtime="20240102 11:38:17.600"/>
</kw>
<msg timestamp="20240102 11:38:17.600" level="INFO">${result} = </msg>
<status status="PASS" starttime="20240102 11:38:17.138" endtime="20240102 11:38:17.600"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20240102 11:38:16.189" endtime="20240102 11:38:17.601"/>
</test>
<test id="s1-s1-s12-t2" name="Head object in non existing bucket" line="39">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>head-object --bucket ${BUCKET}-non-existent --key ${PREFIX}/headobject/key=value/f1</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:38:17.604" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket erasure-non-existent --key ozone-test-3227807120/headobject/key=value/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:38:18.036" level="INFO">${rc} = 255</msg>
<msg timestamp="20240102 11:38:18.036" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20240102 11:38:17.603" endtime="20240102 11:38:18.036"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:38:18.037" level="INFO">
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20240102 11:38:18.036" endtime="20240102 11:38:18.037"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:38:18.037" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:38:18.037" endtime="20240102 11:38:18.037"/>
</kw>
<msg timestamp="20240102 11:38:18.037" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20240102 11:38:17.602" endtime="20240102 11:38:18.037"/>
</kw>
<msg timestamp="20240102 11:38:18.038" level="INFO">${result} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20240102 11:38:17.602" endtime="20240102 11:38:18.038"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>404</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:38:18.038" endtime="20240102 11:38:18.038"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Not Found</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:38:18.038" endtime="20240102 11:38:18.039"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20240102 11:38:17.601" endtime="20240102 11:38:18.039"/>
</test>
<test id="s1-s1-s12-t3" name="Head object where path is a directory" line="43">
<kw name="Create legacy bucket" library="commonawslib">
<var>${legacy-bucket}</var>
<kw name="Generate Ozone String" library="commonawslib">
<var>${postfix}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20240102 11:38:18.041" level="INFO">${randStr} = 8458095952</msg>
<status status="PASS" starttime="20240102 11:38:18.041" endtime="20240102 11:38:18.041"/>
</kw>
<msg timestamp="20240102 11:38:18.041" level="INFO">${postfix} = ozone-test-8458095952</msg>
<status status="PASS" starttime="20240102 11:38:18.040" endtime="20240102 11:38:18.041"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${legacy_bucket}</var>
<arg>legacy-bucket-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240102 11:38:18.042" level="INFO">${legacy_bucket} = legacy-bucket-ozone-test-8458095952</msg>
<status status="PASS" starttime="20240102 11:38:18.041" endtime="20240102 11:38:18.042"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh bucket create -l LEGACY s3v/${legacy_bucket}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:38:18.044" level="INFO">Running command 'ozone sh bucket create -l LEGACY s3v/legacy-bucket-ozone-test-8458095952 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:38:21.218" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:38:21.218" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240102 11:38:18.042" endtime="20240102 11:38:21.218"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:38:21.219" level="INFO"/>
<status status="PASS" starttime="20240102 11:38:21.219" endtime="20240102 11:38:21.219"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:38:21.220" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:38:21.219" endtime="20240102 11:38:21.220"/>
</kw>
<msg timestamp="20240102 11:38:21.220" level="INFO">${result} = </msg>
<status status="PASS" starttime="20240102 11:38:18.042" endtime="20240102 11:38:21.220"/>
</kw>
<msg timestamp="20240102 11:38:21.220" level="INFO">${legacy-bucket} = legacy-bucket-ozone-test-8458095952</msg>
<status status="PASS" starttime="20240102 11:38:18.040" endtime="20240102 11:38:21.221"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${legacy-bucket} --key ${PREFIX}/headobject/keyvalue/f1 --body /tmp/testfile</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:38:21.223" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket legacy-bucket-ozone-test-8458095952 --key ozone-test-3227807120/headobject/keyvalue/f1 --body /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:38:21.754" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:38:21.754" level="INFO">${output} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20240102 11:38:21.222" endtime="20240102 11:38:21.754"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:38:21.755" level="INFO">{
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20240102 11:38:21.754" endtime="20240102 11:38:21.755"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:38:21.755" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:38:21.755" endtime="20240102 11:38:21.755"/>
</kw>
<msg timestamp="20240102 11:38:21.756" level="INFO">${output} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20240102 11:38:21.221" endtime="20240102 11:38:21.756"/>
</kw>
<msg timestamp="20240102 11:38:21.756" level="INFO">${result} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20240102 11:38:21.221" endtime="20240102 11:38:21.756"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>head-object --bucket ${legacy-bucket} --key ${PREFIX}/headobject/keyvalue/</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:38:21.759" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket legacy-bucket-ozone-test-8458095952 --key ozone-test-3227807120/headobject/keyvalue/ 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:38:22.191" level="INFO">${rc} = 255</msg>
<msg timestamp="20240102 11:38:22.191" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20240102 11:38:21.757" endtime="20240102 11:38:22.191"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:38:22.192" level="INFO">
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20240102 11:38:22.192" endtime="20240102 11:38:22.192"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:38:22.193" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:38:22.192" endtime="20240102 11:38:22.193"/>
</kw>
<msg timestamp="20240102 11:38:22.193" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20240102 11:38:21.757" endtime="20240102 11:38:22.193"/>
</kw>
<msg timestamp="20240102 11:38:22.193" level="INFO">${result} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20240102 11:38:21.756" endtime="20240102 11:38:22.193"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>404</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:38:22.193" endtime="20240102 11:38:22.194"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Not Found</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:38:22.194" endtime="20240102 11:38:22.194"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20240102 11:38:18.039" endtime="20240102 11:38:22.194"/>
</test>
<test id="s1-s1-s12-t4" name="Head directory objects" line="50">
<kw name="Create obs bucket" library="commonawslib">
<var>${obs-bucket}</var>
<kw name="Generate Ozone String" library="commonawslib">
<var>${postfix}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20240102 11:38:22.196" level="INFO">${randStr} = 9720359735</msg>
<status status="PASS" starttime="20240102 11:38:22.196" endtime="20240102 11:38:22.196"/>
</kw>
<msg timestamp="20240102 11:38:22.197" level="INFO">${postfix} = ozone-test-9720359735</msg>
<status status="PASS" starttime="20240102 11:38:22.196" endtime="20240102 11:38:22.197"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${bucket}</var>
<arg>obs-bucket-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240102 11:38:22.197" level="INFO">${bucket} = obs-bucket-ozone-test-9720359735</msg>
<status status="PASS" starttime="20240102 11:38:22.197" endtime="20240102 11:38:22.197"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh bucket create -l OBJECT_STORE s3v/${bucket}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:38:22.199" level="INFO">Running command 'ozone sh bucket create -l OBJECT_STORE s3v/obs-bucket-ozone-test-9720359735 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:38:25.182" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:38:25.182" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240102 11:38:22.198" endtime="20240102 11:38:25.182"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:38:25.183" level="INFO"/>
<status status="PASS" starttime="20240102 11:38:25.182" endtime="20240102 11:38:25.183"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:38:25.183" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:38:25.183" endtime="20240102 11:38:25.183"/>
</kw>
<msg timestamp="20240102 11:38:25.184" level="INFO">${result} = </msg>
<status status="PASS" starttime="20240102 11:38:22.197" endtime="20240102 11:38:25.184"/>
</kw>
<msg timestamp="20240102 11:38:25.184" level="INFO">${obs-bucket} = obs-bucket-ozone-test-9720359735</msg>
<status status="PASS" starttime="20240102 11:38:22.195" endtime="20240102 11:38:25.184"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${obs-bucket} --key ${PREFIX}/mydir/ --body /tmp/testfile</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:38:25.186" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket obs-bucket-ozone-test-9720359735 --key ozone-test-3227807120/mydir/ --body /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:38:25.688" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:38:25.688" level="INFO">${output} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20240102 11:38:25.185" endtime="20240102 11:38:25.688"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:38:25.689" level="INFO">{
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20240102 11:38:25.689" endtime="20240102 11:38:25.689"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:38:25.690" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:38:25.689" endtime="20240102 11:38:25.690"/>
</kw>
<msg timestamp="20240102 11:38:25.690" level="INFO">${output} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20240102 11:38:25.184" endtime="20240102 11:38:25.690"/>
</kw>
<msg timestamp="20240102 11:38:25.690" level="INFO">${result} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20240102 11:38:25.184" endtime="20240102 11:38:25.690"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>head-object --bucket ${obs-bucket} --key ${PREFIX}/mydir</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:38:25.693" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket obs-bucket-ozone-test-9720359735 --key ozone-test-3227807120/mydir 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:38:26.131" level="INFO">${rc} = 255</msg>
<msg timestamp="20240102 11:38:26.131" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20240102 11:38:25.692" endtime="20240102 11:38:26.131"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:38:26.132" level="INFO">
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20240102 11:38:26.131" endtime="20240102 11:38:26.132"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:38:26.132" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:38:26.132" endtime="20240102 11:38:26.132"/>
</kw>
<msg timestamp="20240102 11:38:26.132" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20240102 11:38:25.691" endtime="20240102 11:38:26.132"/>
</kw>
<msg timestamp="20240102 11:38:26.133" level="INFO">${result} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20240102 11:38:25.691" endtime="20240102 11:38:26.133"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>404</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:38:26.133" endtime="20240102 11:38:26.133"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Not Found</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:38:26.133" endtime="20240102 11:38:26.133"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>head-object --bucket ${obs-bucket} --key ${PREFIX}/mydir/</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:38:26.136" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket obs-bucket-ozone-test-9720359735 --key ozone-test-3227807120/mydir/ 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:38:26.572" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:38:26.572" level="INFO">${output} = {
    "LastModified": "Tue, 02 Jan 2024 11:38:25 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20240102 11:38:26.135" endtime="20240102 11:38:26.572"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:38:26.573" level="INFO">{
    "LastModified": "Tue, 02 Jan 2024 11:38:25 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-stream",
    "Expires": "Tue, 02 Jan 2024 11:38:26 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20240102 11:38:26.573" endtime="20240102 11:38:26.573"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:38:26.574" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:38:26.573" endtime="20240102 11:38:26.574"/>
</kw>
<msg timestamp="20240102 11:38:26.574" level="INFO">${output} = {
    "LastModified": "Tue, 02 Jan 2024 11:38:25 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20240102 11:38:26.134" endtime="20240102 11:38:26.574"/>
</kw>
<msg timestamp="20240102 11:38:26.574" level="INFO">${result} = {
    "LastModified": "Tue, 02 Jan 2024 11:38:25 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20240102 11:38:26.134" endtime="20240102 11:38:26.574"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20240102 11:38:22.195" endtime="20240102 11:38:26.574"/>
</test>
<test id="s1-s1-s12-t5" name="Head non existing key" line="58">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>head-object --bucket ${BUCKET} --key ${PREFIX}/non-existent</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:38:26.578" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket erasure --key ozone-test-3227807120/non-existent 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:38:27.027" level="INFO">${rc} = 255</msg>
<msg timestamp="20240102 11:38:27.027" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20240102 11:38:26.576" endtime="20240102 11:38:27.027"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:38:27.028" level="INFO">
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20240102 11:38:27.028" endtime="20240102 11:38:27.028"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:38:27.029" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:38:27.028" endtime="20240102 11:38:27.029"/>
</kw>
<msg timestamp="20240102 11:38:27.029" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20240102 11:38:26.576" endtime="20240102 11:38:27.029"/>
</kw>
<msg timestamp="20240102 11:38:27.029" level="INFO">${result} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20240102 11:38:26.576" endtime="20240102 11:38:27.029"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>404</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:38:27.029" endtime="20240102 11:38:27.030"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Not Found</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:38:27.030" endtime="20240102 11:38:27.030"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20240102 11:38:26.575" endtime="20240102 11:38:27.030"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20240102 11:38:16.179" endtime="20240102 11:38:27.031"/>
</suite>
<suite id="s1-s1-s13" name="Objectmultidelete" source="/opt/hadoop/smoketest/s3/objectmultidelete.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20240102 11:38:27.042" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:38:27.042" endtime="20240102 11:38:27.042"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20240102 11:38:27.042" endtime="20240102 11:38:27.042"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20240102 11:38:27.042" endtime="20240102 11:38:27.042"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20240102 11:38:27.042" endtime="20240102 11:38:27.042"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20240102 11:38:27.042" endtime="20240102 11:38:27.042"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20240102 11:38:27.043" endtime="20240102 11:38:27.043"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20240102 11:38:27.043" endtime="20240102 11:38:27.043"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20240102 11:38:27.043" endtime="20240102 11:38:27.043"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20240102 11:38:27.043" endtime="20240102 11:38:27.043"/>
</kw>
<status status="PASS" starttime="20240102 11:38:27.041" endtime="20240102 11:38:27.043"/>
</kw>
<test id="s1-s1-s13-t1" name="Delete file with multi delete" line="31">
<kw name="Execute" library="os">
<arg>date &gt; /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:38:27.046" level="INFO">Running command 'date &gt; /tmp/testfile'.</msg>
<msg timestamp="20240102 11:38:27.048" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:38:27.048" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240102 11:38:27.045" endtime="20240102 11:38:27.048"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:38:27.049" level="INFO"/>
<status status="PASS" starttime="20240102 11:38:27.048" endtime="20240102 11:38:27.049"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:38:27.049" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:38:27.049" endtime="20240102 11:38:27.049"/>
</kw>
<status status="PASS" starttime="20240102 11:38:27.044" endtime="20240102 11:38:27.049"/>
</kw>
<msg timestamp="20240102 11:38:27.049" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:38:27.044" endtime="20240102 11:38:27.050"/>
</kw>
<status status="PASS" starttime="20240102 11:38:27.044" endtime="20240102 11:38:27.050"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/multidelete/key=value/f1 --body /tmp/testfile</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:38:27.054" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket erasure --key ozone-test-3227807120/multidelete/key=value/f1 --body /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:38:27.556" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:38:27.556" level="INFO">${output} = {
    "ETag": "\"fdd5e7e1a810464ca9afa5e7186f4af1\""
}</msg>
<status status="PASS" starttime="20240102 11:38:27.052" endtime="20240102 11:38:27.556"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:38:27.557" level="INFO">{
    "ETag": "\"fdd5e7e1a810464ca9afa5e7186f4af1\""
}</msg>
<status status="PASS" starttime="20240102 11:38:27.557" endtime="20240102 11:38:27.557"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:38:27.558" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:38:27.557" endtime="20240102 11:38:27.558"/>
</kw>
<status status="PASS" starttime="20240102 11:38:27.052" endtime="20240102 11:38:27.558"/>
</kw>
<msg timestamp="20240102 11:38:27.558" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:38:27.052" endtime="20240102 11:38:27.558"/>
</kw>
<msg timestamp="20240102 11:38:27.558" level="INFO">${output} = {
    "ETag": "\"fdd5e7e1a810464ca9afa5e7186f4af1\""
}</msg>
<status status="PASS" starttime="20240102 11:38:27.050" endtime="20240102 11:38:27.558"/>
</kw>
<msg timestamp="20240102 11:38:27.558" level="INFO">${result} = {
    "ETag": "\"fdd5e7e1a810464ca9afa5e7186f4af1\""
}</msg>
<status status="PASS" starttime="20240102 11:38:27.050" endtime="20240102 11:38:27.558"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/multidelete/key=value/f2 --body /tmp/testfile</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:38:27.562" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket erasure --key ozone-test-3227807120/multidelete/key=value/f2 --body /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:38:28.047" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:38:28.047" level="INFO">${output} = {
    "ETag": "\"fdd5e7e1a810464ca9afa5e7186f4af1\""
}</msg>
<status status="PASS" starttime="20240102 11:38:27.560" endtime="20240102 11:38:28.047"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:38:28.048" level="INFO">{
    "ETag": "\"fdd5e7e1a810464ca9afa5e7186f4af1\""
}</msg>
<status status="PASS" starttime="20240102 11:38:28.047" endtime="20240102 11:38:28.048"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:38:28.048" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:38:28.048" endtime="20240102 11:38:28.048"/>
</kw>
<status status="PASS" starttime="20240102 11:38:27.560" endtime="20240102 11:38:28.049"/>
</kw>
<msg timestamp="20240102 11:38:28.049" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:38:27.560" endtime="20240102 11:38:28.049"/>
</kw>
<msg timestamp="20240102 11:38:28.049" level="INFO">${output} = {
    "ETag": "\"fdd5e7e1a810464ca9afa5e7186f4af1\""
}</msg>
<status status="PASS" starttime="20240102 11:38:27.559" endtime="20240102 11:38:28.049"/>
</kw>
<msg timestamp="20240102 11:38:28.049" level="INFO">${result} = {
    "ETag": "\"fdd5e7e1a810464ca9afa5e7186f4af1\""
}</msg>
<status status="PASS" starttime="20240102 11:38:27.559" endtime="20240102 11:38:28.049"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/multidelete/key=value/f3 --body /tmp/testfile</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:38:28.052" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket erasure --key ozone-test-3227807120/multidelete/key=value/f3 --body /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:38:28.585" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:38:28.585" level="INFO">${output} = {
    "ETag": "\"fdd5e7e1a810464ca9afa5e7186f4af1\""
}</msg>
<status status="PASS" starttime="20240102 11:38:28.051" endtime="20240102 11:38:28.585"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:38:28.586" level="INFO">{
    "ETag": "\"fdd5e7e1a810464ca9afa5e7186f4af1\""
}</msg>
<status status="PASS" starttime="20240102 11:38:28.586" endtime="20240102 11:38:28.586"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:38:28.587" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:38:28.586" endtime="20240102 11:38:28.587"/>
</kw>
<status status="PASS" starttime="20240102 11:38:28.051" endtime="20240102 11:38:28.587"/>
</kw>
<msg timestamp="20240102 11:38:28.587" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:38:28.050" endtime="20240102 11:38:28.587"/>
</kw>
<msg timestamp="20240102 11:38:28.587" level="INFO">${output} = {
    "ETag": "\"fdd5e7e1a810464ca9afa5e7186f4af1\""
}</msg>
<status status="PASS" starttime="20240102 11:38:28.050" endtime="20240102 11:38:28.587"/>
</kw>
<msg timestamp="20240102 11:38:28.588" level="INFO">${result} = {
    "ETag": "\"fdd5e7e1a810464ca9afa5e7186f4af1\""
}</msg>
<status status="PASS" starttime="20240102 11:38:28.049" endtime="20240102 11:38:28.588"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${BUCKET} --prefix ${PREFIX}/multidelete/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:38:28.591" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket erasure --prefix ozone-test-3227807120/multidelete/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:38:29.023" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:38:29.024" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-3227807120/multidelete/key=value/",
            "LastModified": "2024-01-02T11:38:27.461Z",
            "ETag": "2024-01-02T11:38:27.461Z",...</msg>
<status status="PASS" starttime="20240102 11:38:28.590" endtime="20240102 11:38:29.024"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:38:29.025" level="INFO">{
    "Contents": [
        {
            "Key": "ozone-test-3227807120/multidelete/key=value/",
            "LastModified": "2024-01-02T11:38:27.461Z",
            "ETag": "2024-01-02T11:38:27.461Z",
            "Size": 0,
            "StorageClass": "STANDARD"
        },
        {
            "Key": "ozone-test-3227807120/multidelete/key=value/f1",
            "LastModified": "2024-01-02T11:38:27.512Z",
            "ETag": "2024-01-02T11:38:27.512Z",
            "Size": 29,
            "StorageClass": "STANDARD"
        },
        {
            "Key": "ozone-test-3227807120/multidelete/key=value/f2",
            "LastModified": "2024-01-02T11:38:28.003Z",
            "ETag": "2024-01-02T11:38:28.003Z",
            "Size": 29,
            "StorageClass": "STANDARD"
        },
        {
            "Key": "ozone-test-3227807120/multidelete/key=value/f3",
            "LastModified": "2024-01-02T11:38:28.521Z",
            "ETag": "2024-01-02T11:38:28.521Z",
            "Size": 29,
            "StorageClass": "STANDARD"
        }
    ]
}</msg>
<status status="PASS" starttime="20240102 11:38:29.024" endtime="20240102 11:38:29.025"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:38:29.025" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:38:29.025" endtime="20240102 11:38:29.025"/>
</kw>
<status status="PASS" starttime="20240102 11:38:28.589" endtime="20240102 11:38:29.026"/>
</kw>
<msg timestamp="20240102 11:38:29.026" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:38:28.589" endtime="20240102 11:38:29.026"/>
</kw>
<msg timestamp="20240102 11:38:29.026" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-3227807120/multidelete/key=value/",
            "LastModified": "2024-01-02T11:38:27.461Z",
            "ETag": "2024-01-02T11:38:27.461Z",...</msg>
<status status="PASS" starttime="20240102 11:38:28.589" endtime="20240102 11:38:29.026"/>
</kw>
<msg timestamp="20240102 11:38:29.026" level="INFO">${result} = {
    "Contents": [
        {
            "Key": "ozone-test-3227807120/multidelete/key=value/",
            "LastModified": "2024-01-02T11:38:27.461Z",
            "ETag": "2024-01-02T11:38:27.461Z",...</msg>
<status status="PASS" starttime="20240102 11:38:28.588" endtime="20240102 11:38:29.026"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multidelete/key=value/f1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:38:29.026" endtime="20240102 11:38:29.027"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multidelete/key=value/f2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:38:29.027" endtime="20240102 11:38:29.027"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multidelete/key=value/f3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:38:29.027" endtime="20240102 11:38:29.028"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>STANDARD</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:38:29.028" endtime="20240102 11:38:29.028"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>REDUCED_REDUNDANCY</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:38:29.029" endtime="20240102 11:38:29.029"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>delete-objects --bucket ${BUCKET} --delete 'Objects=[{Key=${PREFIX}/multidelete/key=value/f1},{Key=${PREFIX}/multidelete/key=value/f2},{Key=${PREFIX}/multidelete/key=value/f4}]'</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:38:29.032" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-objects --bucket erasure --delete 'Objects=[{Key=ozone-test-3227807120/multidelete/key=value/f1},{Key=ozone-test-3227807120/multidelete/key=value/f2},{Key=ozone-test-3227807120/multidelete/key=value/f4}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:38:29.483" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:38:29.483" level="INFO">${output} = {
    "Deleted": [
        {
            "Key": "ozone-test-3227807120/multidelete/key=value/f1"
        },
        {
            "Key": "ozone-test-3227807120/multidelete/key=value/f2"
        },
   ...</msg>
<status status="PASS" starttime="20240102 11:38:29.031" endtime="20240102 11:38:29.484"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:38:29.484" level="INFO">{
    "Deleted": [
        {
            "Key": "ozone-test-3227807120/multidelete/key=value/f1"
        },
        {
            "Key": "ozone-test-3227807120/multidelete/key=value/f2"
        },
        {
            "Key": "ozone-test-3227807120/multidelete/key=value/f4"
        }
    ]
}</msg>
<status status="PASS" starttime="20240102 11:38:29.484" endtime="20240102 11:38:29.485"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:38:29.485" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:38:29.485" endtime="20240102 11:38:29.485"/>
</kw>
<status status="PASS" starttime="20240102 11:38:29.030" endtime="20240102 11:38:29.485"/>
</kw>
<msg timestamp="20240102 11:38:29.485" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:38:29.030" endtime="20240102 11:38:29.485"/>
</kw>
<msg timestamp="20240102 11:38:29.486" level="INFO">${output} = {
    "Deleted": [
        {
            "Key": "ozone-test-3227807120/multidelete/key=value/f1"
        },
        {
            "Key": "ozone-test-3227807120/multidelete/key=value/f2"
        },
   ...</msg>
<status status="PASS" starttime="20240102 11:38:29.030" endtime="20240102 11:38:29.486"/>
</kw>
<msg timestamp="20240102 11:38:29.486" level="INFO">${result} = {
    "Deleted": [
        {
            "Key": "ozone-test-3227807120/multidelete/key=value/f1"
        },
        {
            "Key": "ozone-test-3227807120/multidelete/key=value/f2"
        },
   ...</msg>
<status status="PASS" starttime="20240102 11:38:29.029" endtime="20240102 11:38:29.486"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Error</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:38:29.486" endtime="20240102 11:38:29.486"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${BUCKET} --prefix ${PREFIX}/multidelete/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:38:29.490" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket erasure --prefix ozone-test-3227807120/multidelete/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:38:29.945" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:38:29.945" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-3227807120/multidelete/key=value/",
            "LastModified": "2024-01-02T11:38:27.461Z",
            "ETag": "2024-01-02T11:38:27.461Z",...</msg>
<status status="PASS" starttime="20240102 11:38:29.488" endtime="20240102 11:38:29.945"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:38:29.946" level="INFO">{
    "Contents": [
        {
            "Key": "ozone-test-3227807120/multidelete/key=value/",
            "LastModified": "2024-01-02T11:38:27.461Z",
            "ETag": "2024-01-02T11:38:27.461Z",
            "Size": 0,
            "StorageClass": "STANDARD"
        },
        {
            "Key": "ozone-test-3227807120/multidelete/key=value/f3",
            "LastModified": "2024-01-02T11:38:28.521Z",
            "ETag": "2024-01-02T11:38:28.521Z",
            "Size": 29,
            "StorageClass": "STANDARD"
        }
    ]
}</msg>
<status status="PASS" starttime="20240102 11:38:29.945" endtime="20240102 11:38:29.946"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:38:29.946" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:38:29.946" endtime="20240102 11:38:29.946"/>
</kw>
<status status="PASS" starttime="20240102 11:38:29.488" endtime="20240102 11:38:29.947"/>
</kw>
<msg timestamp="20240102 11:38:29.947" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:38:29.487" endtime="20240102 11:38:29.947"/>
</kw>
<msg timestamp="20240102 11:38:29.947" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-3227807120/multidelete/key=value/",
            "LastModified": "2024-01-02T11:38:27.461Z",
            "ETag": "2024-01-02T11:38:27.461Z",...</msg>
<status status="PASS" starttime="20240102 11:38:29.487" endtime="20240102 11:38:29.947"/>
</kw>
<msg timestamp="20240102 11:38:29.947" level="INFO">${result} = {
    "Contents": [
        {
            "Key": "ozone-test-3227807120/multidelete/key=value/",
            "LastModified": "2024-01-02T11:38:27.461Z",
            "ETag": "2024-01-02T11:38:27.461Z",...</msg>
<status status="PASS" starttime="20240102 11:38:29.486" endtime="20240102 11:38:29.947"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multidelete/key=value/f1</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:38:29.947" endtime="20240102 11:38:29.948"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multidelete/key=value/f2</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:38:29.948" endtime="20240102 11:38:29.948"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multidelete/key=value/f3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:38:29.948" endtime="20240102 11:38:29.949"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>STANDARD</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:38:29.949" endtime="20240102 11:38:29.949"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>REDUCED_REDUNDANCY</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:38:29.949" endtime="20240102 11:38:29.950"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20240102 11:38:27.043" endtime="20240102 11:38:29.950"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20240102 11:38:27.033" endtime="20240102 11:38:29.950"/>
</suite>
<suite id="s1-s1-s14" name="Objectputget" source="/opt/hadoop/smoketest/s3/objectputget.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20240102 11:38:29.960" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:38:29.960" endtime="20240102 11:38:29.960"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20240102 11:38:29.960" endtime="20240102 11:38:29.960"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20240102 11:38:29.961" endtime="20240102 11:38:29.961"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20240102 11:38:29.961" endtime="20240102 11:38:29.961"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20240102 11:38:29.961" endtime="20240102 11:38:29.961"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20240102 11:38:29.961" endtime="20240102 11:38:29.961"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20240102 11:38:29.961" endtime="20240102 11:38:29.961"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20240102 11:38:29.961" endtime="20240102 11:38:29.961"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20240102 11:38:29.961" endtime="20240102 11:38:29.962"/>
</kw>
<status status="PASS" starttime="20240102 11:38:29.960" endtime="20240102 11:38:29.962"/>
</kw>
<test id="s1-s1-s14-t1" name="Put object to s3" line="32">
<kw name="Execute" library="os">
<arg>echo "Randomtext" &gt; /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:38:29.965" level="INFO">Running command 'echo "Randomtext" &gt; /tmp/testfile'.</msg>
<msg timestamp="20240102 11:38:29.966" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:38:29.966" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240102 11:38:29.963" endtime="20240102 11:38:29.966"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:38:29.967" level="INFO"/>
<status status="PASS" starttime="20240102 11:38:29.966" endtime="20240102 11:38:29.967"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:38:29.967" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:38:29.967" endtime="20240102 11:38:29.967"/>
</kw>
<status status="PASS" starttime="20240102 11:38:29.963" endtime="20240102 11:38:29.968"/>
</kw>
<msg timestamp="20240102 11:38:29.968" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:38:29.962" endtime="20240102 11:38:29.968"/>
</kw>
<status status="PASS" starttime="20240102 11:38:29.962" endtime="20240102 11:38:29.968"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --body /tmp/testfile</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:38:29.971" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket erasure --key ozone-test-3227807120/putobject/key=value/f1 --body /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:38:30.449" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:38:30.449" level="INFO">${output} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20240102 11:38:29.969" endtime="20240102 11:38:30.449"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:38:30.450" level="INFO">{
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20240102 11:38:30.450" endtime="20240102 11:38:30.450"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:38:30.451" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:38:30.450" endtime="20240102 11:38:30.451"/>
</kw>
<status status="PASS" starttime="20240102 11:38:29.969" endtime="20240102 11:38:30.451"/>
</kw>
<msg timestamp="20240102 11:38:30.451" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:38:29.969" endtime="20240102 11:38:30.451"/>
</kw>
<msg timestamp="20240102 11:38:30.451" level="INFO">${output} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20240102 11:38:29.968" endtime="20240102 11:38:30.451"/>
</kw>
<msg timestamp="20240102 11:38:30.451" level="INFO">${result} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20240102 11:38:29.968" endtime="20240102 11:38:30.451"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${BUCKET} --prefix ${PREFIX}/putobject/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:38:30.455" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket erasure --prefix ozone-test-3227807120/putobject/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:38:30.908" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:38:30.908" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-3227807120/putobject/key=value/",
            "LastModified": "2024-01-02T11:38:30.380Z",
            "ETag": "2024-01-02T11:38:30.380Z",
 ...</msg>
<status status="PASS" starttime="20240102 11:38:30.453" endtime="20240102 11:38:30.908"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:38:30.909" level="INFO">{
    "Contents": [
        {
            "Key": "ozone-test-3227807120/putobject/key=value/",
            "LastModified": "2024-01-02T11:38:30.380Z",
            "ETag": "2024-01-02T11:38:30.380Z",
            "Size": 0,
            "StorageClass": "STANDARD"
        },
        {
            "Key": "ozone-test-3227807120/putobject/key=value/f1",
            "LastModified": "2024-01-02T11:38:30.403Z",
            "ETag": "2024-01-02T11:38:30.403Z",
            "Size": 11,
            "StorageClass": "STANDARD"
        }
    ]
}</msg>
<status status="PASS" starttime="20240102 11:38:30.909" endtime="20240102 11:38:30.909"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:38:30.910" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:38:30.909" endtime="20240102 11:38:30.910"/>
</kw>
<status status="PASS" starttime="20240102 11:38:30.453" endtime="20240102 11:38:30.910"/>
</kw>
<msg timestamp="20240102 11:38:30.910" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:38:30.452" endtime="20240102 11:38:30.910"/>
</kw>
<msg timestamp="20240102 11:38:30.910" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-3227807120/putobject/key=value/",
            "LastModified": "2024-01-02T11:38:30.380Z",
            "ETag": "2024-01-02T11:38:30.380Z",
 ...</msg>
<status status="PASS" starttime="20240102 11:38:30.452" endtime="20240102 11:38:30.910"/>
</kw>
<msg timestamp="20240102 11:38:30.911" level="INFO">${result} = {
    "Contents": [
        {
            "Key": "ozone-test-3227807120/putobject/key=value/",
            "LastModified": "2024-01-02T11:38:30.380Z",
            "ETag": "2024-01-02T11:38:30.380Z",
 ...</msg>
<status status="PASS" starttime="20240102 11:38:30.452" endtime="20240102 11:38:30.911"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>f1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:38:30.911" endtime="20240102 11:38:30.911"/>
</kw>
<kw name="Execute" library="os">
<arg>touch -f /tmp/zerobyte</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:38:30.914" level="INFO">Running command 'touch -f /tmp/zerobyte 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:38:30.916" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:38:30.916" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240102 11:38:30.913" endtime="20240102 11:38:30.916"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:38:30.916" level="INFO"/>
<status status="PASS" starttime="20240102 11:38:30.916" endtime="20240102 11:38:30.916"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:38:30.917" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:38:30.917" endtime="20240102 11:38:30.917"/>
</kw>
<status status="PASS" starttime="20240102 11:38:30.912" endtime="20240102 11:38:30.917"/>
</kw>
<msg timestamp="20240102 11:38:30.917" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:38:30.912" endtime="20240102 11:38:30.917"/>
</kw>
<status status="PASS" starttime="20240102 11:38:30.911" endtime="20240102 11:38:30.917"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/zerobyte --body /tmp/zerobyte</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:38:30.920" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket erasure --key ozone-test-3227807120/putobject/key=value/zerobyte --body /tmp/zerobyte 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:38:31.383" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:38:31.383" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240102 11:38:30.919" endtime="20240102 11:38:31.383"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:38:31.384" level="INFO"/>
<status status="PASS" starttime="20240102 11:38:31.384" endtime="20240102 11:38:31.384"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:38:31.385" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:38:31.384" endtime="20240102 11:38:31.385"/>
</kw>
<status status="PASS" starttime="20240102 11:38:30.919" endtime="20240102 11:38:31.385"/>
</kw>
<msg timestamp="20240102 11:38:31.385" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:38:30.919" endtime="20240102 11:38:31.385"/>
</kw>
<msg timestamp="20240102 11:38:31.385" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240102 11:38:30.918" endtime="20240102 11:38:31.385"/>
</kw>
<msg timestamp="20240102 11:38:31.385" level="INFO">${result} = </msg>
<status status="PASS" starttime="20240102 11:38:30.918" endtime="20240102 11:38:31.385"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${BUCKET} --prefix ${PREFIX}/putobject/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:38:31.389" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket erasure --prefix ozone-test-3227807120/putobject/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:38:31.832" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:38:31.832" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-3227807120/putobject/key=value/",
            "LastModified": "2024-01-02T11:38:30.380Z",
            "ETag": "2024-01-02T11:38:30.380Z",
 ...</msg>
<status status="PASS" starttime="20240102 11:38:31.387" endtime="20240102 11:38:31.833"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:38:31.833" level="INFO">{
    "Contents": [
        {
            "Key": "ozone-test-3227807120/putobject/key=value/",
            "LastModified": "2024-01-02T11:38:30.380Z",
            "ETag": "2024-01-02T11:38:30.380Z",
            "Size": 0,
            "StorageClass": "STANDARD"
        },
        {
            "Key": "ozone-test-3227807120/putobject/key=value/f1",
            "LastModified": "2024-01-02T11:38:30.403Z",
            "ETag": "2024-01-02T11:38:30.403Z",
            "Size": 11,
            "StorageClass": "STANDARD"
        },
        {
            "Key": "ozone-test-3227807120/putobject/key=value/zerobyte/",
            "LastModified": "2024-01-02T11:38:31.326Z",
            "ETag": "2024-01-02T11:38:31.326Z",
            "Size": 0,
            "StorageClass": "STANDARD"
        }
    ]
}</msg>
<status status="PASS" starttime="20240102 11:38:31.833" endtime="20240102 11:38:31.834"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:38:31.834" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:38:31.834" endtime="20240102 11:38:31.834"/>
</kw>
<status status="PASS" starttime="20240102 11:38:31.387" endtime="20240102 11:38:31.834"/>
</kw>
<msg timestamp="20240102 11:38:31.834" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:38:31.387" endtime="20240102 11:38:31.834"/>
</kw>
<msg timestamp="20240102 11:38:31.835" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-3227807120/putobject/key=value/",
            "LastModified": "2024-01-02T11:38:30.380Z",
            "ETag": "2024-01-02T11:38:30.380Z",
 ...</msg>
<status status="PASS" starttime="20240102 11:38:31.386" endtime="20240102 11:38:31.835"/>
</kw>
<msg timestamp="20240102 11:38:31.835" level="INFO">${result} = {
    "Contents": [
        {
            "Key": "ozone-test-3227807120/putobject/key=value/",
            "LastModified": "2024-01-02T11:38:30.380Z",
            "ETag": "2024-01-02T11:38:30.380Z",
 ...</msg>
<status status="PASS" starttime="20240102 11:38:31.385" endtime="20240102 11:38:31.835"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>zerobyte</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:38:31.835" endtime="20240102 11:38:31.835"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20240102 11:38:29.962" endtime="20240102 11:38:31.835"/>
</test>
<test id="s1-s1-s14-t2" name="Get object from s3" line="44">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 /tmp/testfile.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:38:31.840" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket erasure --key ozone-test-3227807120/putobject/key=value/f1 /tmp/testfile.result 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:38:32.279" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:38:32.279" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 02 Jan 2024 11:38:30 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20240102 11:38:31.838" endtime="20240102 11:38:32.279"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:38:32.280" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 02 Jan 2024 11:38:30 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Tue, 02 Jan 2024 11:38:32 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20240102 11:38:32.280" endtime="20240102 11:38:32.280"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:38:32.281" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:38:32.280" endtime="20240102 11:38:32.281"/>
</kw>
<status status="PASS" starttime="20240102 11:38:31.838" endtime="20240102 11:38:32.281"/>
</kw>
<msg timestamp="20240102 11:38:32.281" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:38:31.838" endtime="20240102 11:38:32.281"/>
</kw>
<msg timestamp="20240102 11:38:32.281" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 02 Jan 2024 11:38:30 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20240102 11:38:31.837" endtime="20240102 11:38:32.282"/>
</kw>
<msg timestamp="20240102 11:38:32.282" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 02 Jan 2024 11:38:30 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20240102 11:38:31.837" endtime="20240102 11:38:32.282"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/testfile</arg>
<arg>/tmp/testfile.result</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:38:32.285" level="INFO">Running command 'md5sum /tmp/testfile | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:38:32.286" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:38:32.286" level="INFO">${output} = 09ad6a6e23191dd19110d0251c4c3186</msg>
<status status="PASS" starttime="20240102 11:38:32.283" endtime="20240102 11:38:32.286"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:38:32.287" level="INFO">09ad6a6e23191dd19110d0251c4c3186</msg>
<status status="PASS" starttime="20240102 11:38:32.287" endtime="20240102 11:38:32.287"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:38:32.288" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:38:32.287" endtime="20240102 11:38:32.288"/>
</kw>
<status status="PASS" starttime="20240102 11:38:32.283" endtime="20240102 11:38:32.288"/>
</kw>
<msg timestamp="20240102 11:38:32.288" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:38:32.283" endtime="20240102 11:38:32.288"/>
</kw>
<msg timestamp="20240102 11:38:32.288" level="INFO">${checksumbefore} = 09ad6a6e23191dd19110d0251c4c3186</msg>
<status status="PASS" starttime="20240102 11:38:32.282" endtime="20240102 11:38:32.288"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:38:32.291" level="INFO">Running command 'md5sum /tmp/testfile.result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:38:32.292" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:38:32.292" level="INFO">${output} = 09ad6a6e23191dd19110d0251c4c3186</msg>
<status status="PASS" starttime="20240102 11:38:32.289" endtime="20240102 11:38:32.293"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:38:32.293" level="INFO">09ad6a6e23191dd19110d0251c4c3186</msg>
<status status="PASS" starttime="20240102 11:38:32.293" endtime="20240102 11:38:32.293"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:38:32.294" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:38:32.293" endtime="20240102 11:38:32.294"/>
</kw>
<status status="PASS" starttime="20240102 11:38:32.289" endtime="20240102 11:38:32.294"/>
</kw>
<msg timestamp="20240102 11:38:32.294" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:38:32.289" endtime="20240102 11:38:32.294"/>
</kw>
<msg timestamp="20240102 11:38:32.294" level="INFO">${checksumafter} = 09ad6a6e23191dd19110d0251c4c3186</msg>
<status status="PASS" starttime="20240102 11:38:32.288" endtime="20240102 11:38:32.294"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240102 11:38:32.294" endtime="20240102 11:38:32.295"/>
</kw>
<status status="PASS" starttime="20240102 11:38:32.282" endtime="20240102 11:38:32.295"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20240102 11:38:31.836" endtime="20240102 11:38:32.295"/>
</test>
<test id="s1-s1-s14-t3" name="Get object with wrong signature" line="49">
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<msg timestamp="20240102 11:38:32.296" level="INFO">Execution passed with message:
Skip in unsecure cluster</msg>
<status status="PASS" starttime="20240102 11:38:32.296" endtime="20240102 11:38:32.297"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>curl -i -H 'Authorization: AWS scm/scm@EXAMPLE.COM:asdfqwerty' ${ENDPOINT_URL}/${BUCKET}/${PREFIX}/putobject/key=value/f1</arg>
<status status="NOT RUN" starttime="20240102 11:38:32.297" endtime="20240102 11:38:32.297"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>403 Forbidden</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20240102 11:38:32.297" endtime="20240102 11:38:32.297"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20240102 11:38:32.295" endtime="20240102 11:38:32.297">Skip in unsecure cluster</status>
</test>
<test id="s1-s1-s14-t4" name="Get Partial object from s3 with both start and endoffset" line="54">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --range bytes=0-4 /tmp/testfile1.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:38:32.301" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket erasure --key ozone-test-3227807120/putobject/key=value/f1 --range bytes=0-4 /tmp/testfile1.result 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:38:32.771" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:38:32.772" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 02 Jan 2024 11:38:30 GMT",
    "ContentLength": 5,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20240102 11:38:32.300" endtime="20240102 11:38:32.772"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:38:32.773" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 02 Jan 2024 11:38:30 GMT",
    "ContentLength": 5,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentRange": "bytes 0-4/11",
    "ContentType": "application/octet-stream",
    "Expires": "Tue, 02 Jan 2024 11:38:32 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20240102 11:38:32.772" endtime="20240102 11:38:32.773"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:38:32.774" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:38:32.773" endtime="20240102 11:38:32.774"/>
</kw>
<status status="PASS" starttime="20240102 11:38:32.299" endtime="20240102 11:38:32.774"/>
</kw>
<msg timestamp="20240102 11:38:32.774" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:38:32.299" endtime="20240102 11:38:32.774"/>
</kw>
<msg timestamp="20240102 11:38:32.774" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 02 Jan 2024 11:38:30 GMT",
    "ContentLength": 5,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20240102 11:38:32.299" endtime="20240102 11:38:32.774"/>
</kw>
<msg timestamp="20240102 11:38:32.774" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 02 Jan 2024 11:38:30 GMT",
    "ContentLength": 5,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20240102 11:38:32.298" endtime="20240102 11:38:32.774"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:38:32.774" endtime="20240102 11:38:32.775"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bytes 0-4/11</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:38:32.775" endtime="20240102 11:38:32.775"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:38:32.775" endtime="20240102 11:38:32.776"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>dd if=/tmp/testfile skip=0 bs=1 count=5 2&gt;/dev/null</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:38:32.778" level="INFO">Running command 'dd if=/tmp/testfile skip=0 bs=1 count=5 2&gt;/dev/null'.</msg>
<msg timestamp="20240102 11:38:32.780" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:38:32.780" level="INFO">${output} = Rando</msg>
<status status="PASS" starttime="20240102 11:38:32.777" endtime="20240102 11:38:32.780"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:38:32.781" level="INFO">Rando</msg>
<status status="PASS" starttime="20240102 11:38:32.780" endtime="20240102 11:38:32.781"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:38:32.781" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:38:32.781" endtime="20240102 11:38:32.781"/>
</kw>
<status status="PASS" starttime="20240102 11:38:32.776" endtime="20240102 11:38:32.781"/>
</kw>
<msg timestamp="20240102 11:38:32.781" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:38:32.776" endtime="20240102 11:38:32.781"/>
</kw>
<msg timestamp="20240102 11:38:32.782" level="INFO">${expectedData} = Rando</msg>
<status status="PASS" starttime="20240102 11:38:32.776" endtime="20240102 11:38:32.782"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile1.result</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:38:32.784" level="INFO">Running command 'cat /tmp/testfile1.result 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:38:32.785" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:38:32.785" level="INFO">${output} = Rando</msg>
<status status="PASS" starttime="20240102 11:38:32.783" endtime="20240102 11:38:32.786"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:38:32.786" level="INFO">Rando</msg>
<status status="PASS" starttime="20240102 11:38:32.786" endtime="20240102 11:38:32.786"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:38:32.787" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:38:32.786" endtime="20240102 11:38:32.787"/>
</kw>
<status status="PASS" starttime="20240102 11:38:32.782" endtime="20240102 11:38:32.787"/>
</kw>
<msg timestamp="20240102 11:38:32.787" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:38:32.782" endtime="20240102 11:38:32.787"/>
</kw>
<msg timestamp="20240102 11:38:32.787" level="INFO">${actualData} = Rando</msg>
<status status="PASS" starttime="20240102 11:38:32.782" endtime="20240102 11:38:32.787"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240102 11:38:32.787" endtime="20240102 11:38:32.788"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --range bytes=2-4 /tmp/testfile1.result1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:38:32.791" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket erasure --key ozone-test-3227807120/putobject/key=value/f1 --range bytes=2-4 /tmp/testfile1.result1 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:38:33.230" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:38:33.230" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 02 Jan 2024 11:38:30 GMT",
    "ContentLength": 3,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20240102 11:38:32.790" endtime="20240102 11:38:33.230"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:38:33.231" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 02 Jan 2024 11:38:30 GMT",
    "ContentLength": 3,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentRange": "bytes 2-4/11",
    "ContentType": "application/octet-stream",
    "Expires": "Tue, 02 Jan 2024 11:38:33 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20240102 11:38:33.230" endtime="20240102 11:38:33.231"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:38:33.231" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:38:33.231" endtime="20240102 11:38:33.231"/>
</kw>
<status status="PASS" starttime="20240102 11:38:32.789" endtime="20240102 11:38:33.231"/>
</kw>
<msg timestamp="20240102 11:38:33.231" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:38:32.789" endtime="20240102 11:38:33.232"/>
</kw>
<msg timestamp="20240102 11:38:33.232" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 02 Jan 2024 11:38:30 GMT",
    "ContentLength": 3,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20240102 11:38:32.789" endtime="20240102 11:38:33.232"/>
</kw>
<msg timestamp="20240102 11:38:33.232" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 02 Jan 2024 11:38:30 GMT",
    "ContentLength": 3,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20240102 11:38:32.788" endtime="20240102 11:38:33.232"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:38:33.232" endtime="20240102 11:38:33.232"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bytes 2-4/11</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:38:33.233" endtime="20240102 11:38:33.233"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:38:33.233" endtime="20240102 11:38:33.233"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>dd if=/tmp/testfile skip=2 bs=1 count=3 2&gt;/dev/null</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:38:33.236" level="INFO">Running command 'dd if=/tmp/testfile skip=2 bs=1 count=3 2&gt;/dev/null'.</msg>
<msg timestamp="20240102 11:38:33.238" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:38:33.238" level="INFO">${output} = ndo</msg>
<status status="PASS" starttime="20240102 11:38:33.235" endtime="20240102 11:38:33.238"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:38:33.239" level="INFO">ndo</msg>
<status status="PASS" starttime="20240102 11:38:33.238" endtime="20240102 11:38:33.239"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:38:33.239" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:38:33.239" endtime="20240102 11:38:33.239"/>
</kw>
<status status="PASS" starttime="20240102 11:38:33.234" endtime="20240102 11:38:33.239"/>
</kw>
<msg timestamp="20240102 11:38:33.240" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:38:33.234" endtime="20240102 11:38:33.240"/>
</kw>
<msg timestamp="20240102 11:38:33.240" level="INFO">${expectedData} = ndo</msg>
<status status="PASS" starttime="20240102 11:38:33.233" endtime="20240102 11:38:33.240"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile1.result1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:38:33.242" level="INFO">Running command 'cat /tmp/testfile1.result1 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:38:33.244" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:38:33.244" level="INFO">${output} = ndo</msg>
<status status="PASS" starttime="20240102 11:38:33.241" endtime="20240102 11:38:33.244"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:38:33.245" level="INFO">ndo</msg>
<status status="PASS" starttime="20240102 11:38:33.244" endtime="20240102 11:38:33.245"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:38:33.245" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:38:33.245" endtime="20240102 11:38:33.245"/>
</kw>
<status status="PASS" starttime="20240102 11:38:33.241" endtime="20240102 11:38:33.245"/>
</kw>
<msg timestamp="20240102 11:38:33.245" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:38:33.240" endtime="20240102 11:38:33.245"/>
</kw>
<msg timestamp="20240102 11:38:33.245" level="INFO">${actualData} = ndo</msg>
<status status="PASS" starttime="20240102 11:38:33.240" endtime="20240102 11:38:33.246"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240102 11:38:33.246" endtime="20240102 11:38:33.246"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --range bytes=2-1000 /tmp/testfile1.result2</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:38:33.249" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket erasure --key ozone-test-3227807120/putobject/key=value/f1 --range bytes=2-1000 /tmp/testfile1.result2 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:38:33.716" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:38:33.717" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 02 Jan 2024 11:38:30 GMT",
    "ContentLength": 9,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20240102 11:38:33.248" endtime="20240102 11:38:33.717"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:38:33.717" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 02 Jan 2024 11:38:30 GMT",
    "ContentLength": 9,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentRange": "bytes 2-10/11",
    "ContentType": "application/octet-stream",
    "Expires": "Tue, 02 Jan 2024 11:38:33 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20240102 11:38:33.717" endtime="20240102 11:38:33.718"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:38:33.718" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:38:33.718" endtime="20240102 11:38:33.718"/>
</kw>
<status status="PASS" starttime="20240102 11:38:33.247" endtime="20240102 11:38:33.718"/>
</kw>
<msg timestamp="20240102 11:38:33.718" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:38:33.247" endtime="20240102 11:38:33.718"/>
</kw>
<msg timestamp="20240102 11:38:33.719" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 02 Jan 2024 11:38:30 GMT",
    "ContentLength": 9,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20240102 11:38:33.247" endtime="20240102 11:38:33.719"/>
</kw>
<msg timestamp="20240102 11:38:33.719" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 02 Jan 2024 11:38:30 GMT",
    "ContentLength": 9,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20240102 11:38:33.246" endtime="20240102 11:38:33.719"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:38:33.719" endtime="20240102 11:38:33.719"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bytes 2-10/11</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:38:33.719" endtime="20240102 11:38:33.720"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:38:33.720" endtime="20240102 11:38:33.720"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>dd if=/tmp/testfile skip=2 bs=1 count=9 2&gt;/dev/null</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:38:33.723" level="INFO">Running command 'dd if=/tmp/testfile skip=2 bs=1 count=9 2&gt;/dev/null'.</msg>
<msg timestamp="20240102 11:38:33.724" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:38:33.724" level="INFO">${output} = ndomtext</msg>
<status status="PASS" starttime="20240102 11:38:33.721" endtime="20240102 11:38:33.724"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:38:33.725" level="INFO">ndomtext</msg>
<status status="PASS" starttime="20240102 11:38:33.725" endtime="20240102 11:38:33.725"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:38:33.726" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:38:33.725" endtime="20240102 11:38:33.726"/>
</kw>
<status status="PASS" starttime="20240102 11:38:33.721" endtime="20240102 11:38:33.726"/>
</kw>
<msg timestamp="20240102 11:38:33.726" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:38:33.721" endtime="20240102 11:38:33.726"/>
</kw>
<msg timestamp="20240102 11:38:33.726" level="INFO">${expectedData} = ndomtext</msg>
<status status="PASS" starttime="20240102 11:38:33.720" endtime="20240102 11:38:33.726"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile1.result2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:38:33.729" level="INFO">Running command 'cat /tmp/testfile1.result2 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:38:33.730" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:38:33.731" level="INFO">${output} = ndomtext</msg>
<status status="PASS" starttime="20240102 11:38:33.727" endtime="20240102 11:38:33.731"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:38:33.731" level="INFO">ndomtext</msg>
<status status="PASS" starttime="20240102 11:38:33.731" endtime="20240102 11:38:33.731"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:38:33.732" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:38:33.732" endtime="20240102 11:38:33.732"/>
</kw>
<status status="PASS" starttime="20240102 11:38:33.727" endtime="20240102 11:38:33.732"/>
</kw>
<msg timestamp="20240102 11:38:33.732" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:38:33.727" endtime="20240102 11:38:33.732"/>
</kw>
<msg timestamp="20240102 11:38:33.732" level="INFO">${actualData} = ndomtext</msg>
<status status="PASS" starttime="20240102 11:38:33.726" endtime="20240102 11:38:33.732"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240102 11:38:33.733" endtime="20240102 11:38:33.733"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20240102 11:38:32.298" endtime="20240102 11:38:33.733"/>
</test>
<test id="s1-s1-s14-t5" name="Get Partial object from s3 with both start and endoffset(start offset and endoffset is greater than file size)" line="80">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --range bytes=10000-10000 /tmp/testfile2.result</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:38:33.737" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket erasure --key ozone-test-3227807120/putobject/key=value/f1 --range bytes=10000-10000 /tmp/testfile2.result 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:38:34.188" level="INFO">${rc} = 255</msg>
<msg timestamp="20240102 11:38:34.188" level="INFO">${output} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20240102 11:38:33.735" endtime="20240102 11:38:34.188"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:38:34.189" level="INFO">
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20240102 11:38:34.189" endtime="20240102 11:38:34.189"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:38:34.190" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:38:34.189" endtime="20240102 11:38:34.190"/>
</kw>
<msg timestamp="20240102 11:38:34.190" level="INFO">${output} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20240102 11:38:33.735" endtime="20240102 11:38:34.190"/>
</kw>
<msg timestamp="20240102 11:38:34.190" level="INFO">${result} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20240102 11:38:33.734" endtime="20240102 11:38:34.190"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:38:34.190" endtime="20240102 11:38:34.191"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20240102 11:38:33.734" endtime="20240102 11:38:34.191"/>
</test>
<test id="s1-s1-s14-t6" name="Get Partial object from s3 with both start and endoffset(end offset is greater than file size)" line="85">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --range bytes=0-10000 /tmp/testfile2.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:38:34.195" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket erasure --key ozone-test-3227807120/putobject/key=value/f1 --range bytes=0-10000 /tmp/testfile2.result 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:38:34.642" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:38:34.642" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 02 Jan 2024 11:38:30 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20240102 11:38:34.194" endtime="20240102 11:38:34.642"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:38:34.643" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 02 Jan 2024 11:38:30 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentRange": "bytes 0-10/11",
    "ContentType": "application/octet-stream",
    "Expires": "Tue, 02 Jan 2024 11:38:34 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20240102 11:38:34.642" endtime="20240102 11:38:34.643"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:38:34.644" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:38:34.643" endtime="20240102 11:38:34.644"/>
</kw>
<status status="PASS" starttime="20240102 11:38:34.193" endtime="20240102 11:38:34.644"/>
</kw>
<msg timestamp="20240102 11:38:34.644" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:38:34.193" endtime="20240102 11:38:34.644"/>
</kw>
<msg timestamp="20240102 11:38:34.644" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 02 Jan 2024 11:38:30 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20240102 11:38:34.193" endtime="20240102 11:38:34.644"/>
</kw>
<msg timestamp="20240102 11:38:34.644" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 02 Jan 2024 11:38:30 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20240102 11:38:34.192" endtime="20240102 11:38:34.644"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:38:34.645" endtime="20240102 11:38:34.645"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bytes 0-10/11</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:38:34.645" endtime="20240102 11:38:34.645"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:38:34.645" endtime="20240102 11:38:34.646"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>cat /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:38:34.648" level="INFO">Running command 'cat /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:38:34.650" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:38:34.650" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20240102 11:38:34.647" endtime="20240102 11:38:34.650"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:38:34.651" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20240102 11:38:34.650" endtime="20240102 11:38:34.651"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:38:34.651" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:38:34.651" endtime="20240102 11:38:34.651"/>
</kw>
<status status="PASS" starttime="20240102 11:38:34.647" endtime="20240102 11:38:34.652"/>
</kw>
<msg timestamp="20240102 11:38:34.652" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:38:34.646" endtime="20240102 11:38:34.652"/>
</kw>
<msg timestamp="20240102 11:38:34.652" level="INFO">${expectedData} = Randomtext</msg>
<status status="PASS" starttime="20240102 11:38:34.646" endtime="20240102 11:38:34.652"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile2.result</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:38:34.654" level="INFO">Running command 'cat /tmp/testfile2.result 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:38:34.656" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:38:34.656" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20240102 11:38:34.653" endtime="20240102 11:38:34.656"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:38:34.657" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20240102 11:38:34.656" endtime="20240102 11:38:34.657"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:38:34.657" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:38:34.657" endtime="20240102 11:38:34.657"/>
</kw>
<status status="PASS" starttime="20240102 11:38:34.653" endtime="20240102 11:38:34.657"/>
</kw>
<msg timestamp="20240102 11:38:34.657" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:38:34.652" endtime="20240102 11:38:34.657"/>
</kw>
<msg timestamp="20240102 11:38:34.658" level="INFO">${actualData} = Randomtext</msg>
<status status="PASS" starttime="20240102 11:38:34.652" endtime="20240102 11:38:34.658"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240102 11:38:34.658" endtime="20240102 11:38:34.658"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20240102 11:38:34.191" endtime="20240102 11:38:34.658"/>
</test>
<test id="s1-s1-s14-t7" name="Get Partial object from s3 with only start offset" line="94">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --range bytes=0- /tmp/testfile3.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:38:34.662" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket erasure --key ozone-test-3227807120/putobject/key=value/f1 --range bytes=0- /tmp/testfile3.result 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:38:35.124" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:38:35.124" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 02 Jan 2024 11:38:30 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20240102 11:38:34.661" endtime="20240102 11:38:35.125"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:38:35.126" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 02 Jan 2024 11:38:30 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentRange": "bytes 0-10/11",
    "ContentType": "application/octet-stream",
    "Expires": "Tue, 02 Jan 2024 11:38:35 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20240102 11:38:35.125" endtime="20240102 11:38:35.126"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:38:35.126" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:38:35.126" endtime="20240102 11:38:35.126"/>
</kw>
<status status="PASS" starttime="20240102 11:38:34.660" endtime="20240102 11:38:35.127"/>
</kw>
<msg timestamp="20240102 11:38:35.127" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:38:34.660" endtime="20240102 11:38:35.127"/>
</kw>
<msg timestamp="20240102 11:38:35.127" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 02 Jan 2024 11:38:30 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20240102 11:38:34.660" endtime="20240102 11:38:35.127"/>
</kw>
<msg timestamp="20240102 11:38:35.127" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 02 Jan 2024 11:38:30 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20240102 11:38:34.659" endtime="20240102 11:38:35.127"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:38:35.127" endtime="20240102 11:38:35.128"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bytes 0-10/11</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:38:35.128" endtime="20240102 11:38:35.128"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:38:35.128" endtime="20240102 11:38:35.128"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>cat /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:38:35.131" level="INFO">Running command 'cat /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:38:35.133" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:38:35.133" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20240102 11:38:35.130" endtime="20240102 11:38:35.133"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:38:35.133" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20240102 11:38:35.133" endtime="20240102 11:38:35.134"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:38:35.134" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:38:35.134" endtime="20240102 11:38:35.134"/>
</kw>
<status status="PASS" starttime="20240102 11:38:35.129" endtime="20240102 11:38:35.134"/>
</kw>
<msg timestamp="20240102 11:38:35.134" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:38:35.129" endtime="20240102 11:38:35.134"/>
</kw>
<msg timestamp="20240102 11:38:35.135" level="INFO">${expectedData} = Randomtext</msg>
<status status="PASS" starttime="20240102 11:38:35.129" endtime="20240102 11:38:35.135"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile3.result</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:38:35.137" level="INFO">Running command 'cat /tmp/testfile3.result 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:38:35.138" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:38:35.138" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20240102 11:38:35.136" endtime="20240102 11:38:35.139"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:38:35.139" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20240102 11:38:35.139" endtime="20240102 11:38:35.139"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:38:35.140" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:38:35.139" endtime="20240102 11:38:35.140"/>
</kw>
<status status="PASS" starttime="20240102 11:38:35.135" endtime="20240102 11:38:35.140"/>
</kw>
<msg timestamp="20240102 11:38:35.140" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:38:35.135" endtime="20240102 11:38:35.140"/>
</kw>
<msg timestamp="20240102 11:38:35.140" level="INFO">${actualData} = Randomtext</msg>
<status status="PASS" starttime="20240102 11:38:35.135" endtime="20240102 11:38:35.140"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240102 11:38:35.140" endtime="20240102 11:38:35.141"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20240102 11:38:34.659" endtime="20240102 11:38:35.141"/>
</test>
<test id="s1-s1-s14-t8" name="Get Partial object from s3 with both start and endoffset which are equal" line="103">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --range bytes=0-0 /tmp/testfile4.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:38:35.145" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket erasure --key ozone-test-3227807120/putobject/key=value/f1 --range bytes=0-0 /tmp/testfile4.result 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:38:35.597" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:38:35.597" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 02 Jan 2024 11:38:30 GMT",
    "ContentLength": 1,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20240102 11:38:35.144" endtime="20240102 11:38:35.597"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:38:35.598" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 02 Jan 2024 11:38:30 GMT",
    "ContentLength": 1,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentRange": "bytes 0-0/11",
    "ContentType": "application/octet-stream",
    "Expires": "Tue, 02 Jan 2024 11:38:35 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20240102 11:38:35.598" endtime="20240102 11:38:35.598"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:38:35.599" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:38:35.599" endtime="20240102 11:38:35.599"/>
</kw>
<status status="PASS" starttime="20240102 11:38:35.143" endtime="20240102 11:38:35.599"/>
</kw>
<msg timestamp="20240102 11:38:35.599" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:38:35.143" endtime="20240102 11:38:35.599"/>
</kw>
<msg timestamp="20240102 11:38:35.599" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 02 Jan 2024 11:38:30 GMT",
    "ContentLength": 1,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20240102 11:38:35.143" endtime="20240102 11:38:35.600"/>
</kw>
<msg timestamp="20240102 11:38:35.600" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 02 Jan 2024 11:38:30 GMT",
    "ContentLength": 1,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20240102 11:38:35.142" endtime="20240102 11:38:35.600"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:38:35.600" endtime="20240102 11:38:35.600"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bytes 0-0/11</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:38:35.600" endtime="20240102 11:38:35.601"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:38:35.601" endtime="20240102 11:38:35.601"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>dd if=/tmp/testfile skip=0 bs=1 count=1 2&gt;/dev/null</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:38:35.604" level="INFO">Running command 'dd if=/tmp/testfile skip=0 bs=1 count=1 2&gt;/dev/null'.</msg>
<msg timestamp="20240102 11:38:35.605" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:38:35.605" level="INFO">${output} = R</msg>
<status status="PASS" starttime="20240102 11:38:35.602" endtime="20240102 11:38:35.605"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:38:35.606" level="INFO">R</msg>
<status status="PASS" starttime="20240102 11:38:35.606" endtime="20240102 11:38:35.606"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:38:35.606" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:38:35.606" endtime="20240102 11:38:35.607"/>
</kw>
<status status="PASS" starttime="20240102 11:38:35.602" endtime="20240102 11:38:35.607"/>
</kw>
<msg timestamp="20240102 11:38:35.607" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:38:35.602" endtime="20240102 11:38:35.607"/>
</kw>
<msg timestamp="20240102 11:38:35.607" level="INFO">${expectedData} = R</msg>
<status status="PASS" starttime="20240102 11:38:35.601" endtime="20240102 11:38:35.607"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile4.result</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:38:35.609" level="INFO">Running command 'cat /tmp/testfile4.result 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:38:35.611" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:38:35.611" level="INFO">${output} = R</msg>
<status status="PASS" starttime="20240102 11:38:35.608" endtime="20240102 11:38:35.611"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:38:35.612" level="INFO">R</msg>
<status status="PASS" starttime="20240102 11:38:35.611" endtime="20240102 11:38:35.612"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:38:35.612" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:38:35.612" endtime="20240102 11:38:35.612"/>
</kw>
<status status="PASS" starttime="20240102 11:38:35.608" endtime="20240102 11:38:35.612"/>
</kw>
<msg timestamp="20240102 11:38:35.612" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:38:35.607" endtime="20240102 11:38:35.612"/>
</kw>
<msg timestamp="20240102 11:38:35.613" level="INFO">${actualData} = R</msg>
<status status="PASS" starttime="20240102 11:38:35.607" endtime="20240102 11:38:35.613"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240102 11:38:35.613" endtime="20240102 11:38:35.613"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --range bytes=4-4 /tmp/testfile5.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:38:35.616" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket erasure --key ozone-test-3227807120/putobject/key=value/f1 --range bytes=4-4 /tmp/testfile5.result 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:38:36.070" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:38:36.070" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 02 Jan 2024 11:38:30 GMT",
    "ContentLength": 1,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20240102 11:38:35.615" endtime="20240102 11:38:36.070"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:38:36.071" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 02 Jan 2024 11:38:30 GMT",
    "ContentLength": 1,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentRange": "bytes 4-4/11",
    "ContentType": "application/octet-stream",
    "Expires": "Tue, 02 Jan 2024 11:38:36 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20240102 11:38:36.070" endtime="20240102 11:38:36.071"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:38:36.072" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:38:36.071" endtime="20240102 11:38:36.072"/>
</kw>
<status status="PASS" starttime="20240102 11:38:35.614" endtime="20240102 11:38:36.072"/>
</kw>
<msg timestamp="20240102 11:38:36.072" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:38:35.614" endtime="20240102 11:38:36.072"/>
</kw>
<msg timestamp="20240102 11:38:36.072" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 02 Jan 2024 11:38:30 GMT",
    "ContentLength": 1,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20240102 11:38:35.614" endtime="20240102 11:38:36.072"/>
</kw>
<msg timestamp="20240102 11:38:36.073" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 02 Jan 2024 11:38:30 GMT",
    "ContentLength": 1,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20240102 11:38:35.613" endtime="20240102 11:38:36.073"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:38:36.073" endtime="20240102 11:38:36.073"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bytes 4-4/11</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:38:36.073" endtime="20240102 11:38:36.073"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:38:36.073" endtime="20240102 11:38:36.074"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>dd if=/tmp/testfile skip=4 bs=1 count=1 2&gt;/dev/null</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:38:36.076" level="INFO">Running command 'dd if=/tmp/testfile skip=4 bs=1 count=1 2&gt;/dev/null'.</msg>
<msg timestamp="20240102 11:38:36.078" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:38:36.078" level="INFO">${output} = o</msg>
<status status="PASS" starttime="20240102 11:38:36.075" endtime="20240102 11:38:36.078"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:38:36.079" level="INFO">o</msg>
<status status="PASS" starttime="20240102 11:38:36.078" endtime="20240102 11:38:36.079"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:38:36.079" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:38:36.079" endtime="20240102 11:38:36.079"/>
</kw>
<status status="PASS" starttime="20240102 11:38:36.074" endtime="20240102 11:38:36.079"/>
</kw>
<msg timestamp="20240102 11:38:36.079" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:38:36.074" endtime="20240102 11:38:36.079"/>
</kw>
<msg timestamp="20240102 11:38:36.080" level="INFO">${expectedData} = o</msg>
<status status="PASS" starttime="20240102 11:38:36.074" endtime="20240102 11:38:36.080"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile5.result</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:38:36.082" level="INFO">Running command 'cat /tmp/testfile5.result 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:38:36.083" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:38:36.083" level="INFO">${output} = o</msg>
<status status="PASS" starttime="20240102 11:38:36.081" endtime="20240102 11:38:36.083"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:38:36.084" level="INFO">o</msg>
<status status="PASS" starttime="20240102 11:38:36.084" endtime="20240102 11:38:36.084"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:38:36.085" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:38:36.084" endtime="20240102 11:38:36.085"/>
</kw>
<status status="PASS" starttime="20240102 11:38:36.080" endtime="20240102 11:38:36.085"/>
</kw>
<msg timestamp="20240102 11:38:36.085" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:38:36.080" endtime="20240102 11:38:36.085"/>
</kw>
<msg timestamp="20240102 11:38:36.085" level="INFO">${actualData} = o</msg>
<status status="PASS" starttime="20240102 11:38:36.080" endtime="20240102 11:38:36.085"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240102 11:38:36.085" endtime="20240102 11:38:36.086"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20240102 11:38:35.141" endtime="20240102 11:38:36.086"/>
</test>
<test id="s1-s1-s14-t9" name="Get Partial object from s3 to get last n bytes" line="120">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --range bytes=-4 /tmp/testfile6.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:38:36.089" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket erasure --key ozone-test-3227807120/putobject/key=value/f1 --range bytes=-4 /tmp/testfile6.result 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:38:36.546" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:38:36.546" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 02 Jan 2024 11:38:30 GMT",
    "ContentLength": 4,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20240102 11:38:36.088" endtime="20240102 11:38:36.546"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:38:36.547" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 02 Jan 2024 11:38:30 GMT",
    "ContentLength": 4,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentRange": "bytes 7-10/11",
    "ContentType": "application/octet-stream",
    "Expires": "Tue, 02 Jan 2024 11:38:36 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20240102 11:38:36.546" endtime="20240102 11:38:36.547"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:38:36.548" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:38:36.547" endtime="20240102 11:38:36.548"/>
</kw>
<status status="PASS" starttime="20240102 11:38:36.088" endtime="20240102 11:38:36.548"/>
</kw>
<msg timestamp="20240102 11:38:36.548" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:38:36.088" endtime="20240102 11:38:36.548"/>
</kw>
<msg timestamp="20240102 11:38:36.548" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 02 Jan 2024 11:38:30 GMT",
    "ContentLength": 4,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20240102 11:38:36.087" endtime="20240102 11:38:36.548"/>
</kw>
<msg timestamp="20240102 11:38:36.548" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 02 Jan 2024 11:38:30 GMT",
    "ContentLength": 4,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20240102 11:38:36.087" endtime="20240102 11:38:36.548"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:38:36.549" endtime="20240102 11:38:36.549"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bytes 7-10/11</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:38:36.549" endtime="20240102 11:38:36.549"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:38:36.549" endtime="20240102 11:38:36.550"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>dd if=/tmp/testfile skip=7 bs=1 count=4 2&gt;/dev/null</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:38:36.553" level="INFO">Running command 'dd if=/tmp/testfile skip=7 bs=1 count=4 2&gt;/dev/null'.</msg>
<msg timestamp="20240102 11:38:36.555" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:38:36.556" level="INFO">${output} = ext</msg>
<status status="PASS" starttime="20240102 11:38:36.552" endtime="20240102 11:38:36.556"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:38:36.556" level="INFO">ext</msg>
<status status="PASS" starttime="20240102 11:38:36.556" endtime="20240102 11:38:36.557"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:38:36.557" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:38:36.557" endtime="20240102 11:38:36.557"/>
</kw>
<status status="PASS" starttime="20240102 11:38:36.551" endtime="20240102 11:38:36.557"/>
</kw>
<msg timestamp="20240102 11:38:36.557" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:38:36.550" endtime="20240102 11:38:36.558"/>
</kw>
<msg timestamp="20240102 11:38:36.558" level="INFO">${expectedData} = ext</msg>
<status status="PASS" starttime="20240102 11:38:36.550" endtime="20240102 11:38:36.558"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile6.result</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:38:36.561" level="INFO">Running command 'cat /tmp/testfile6.result 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:38:36.563" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:38:36.563" level="INFO">${output} = ext</msg>
<status status="PASS" starttime="20240102 11:38:36.559" endtime="20240102 11:38:36.563"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:38:36.564" level="INFO">ext</msg>
<status status="PASS" starttime="20240102 11:38:36.563" endtime="20240102 11:38:36.564"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:38:36.564" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:38:36.564" endtime="20240102 11:38:36.564"/>
</kw>
<status status="PASS" starttime="20240102 11:38:36.559" endtime="20240102 11:38:36.565"/>
</kw>
<msg timestamp="20240102 11:38:36.565" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:38:36.558" endtime="20240102 11:38:36.565"/>
</kw>
<msg timestamp="20240102 11:38:36.565" level="INFO">${actualData} = ext</msg>
<status status="PASS" starttime="20240102 11:38:36.558" endtime="20240102 11:38:36.565"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240102 11:38:36.565" endtime="20240102 11:38:36.566"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --range bytes=-10000 /tmp/testfile7.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:38:36.570" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket erasure --key ozone-test-3227807120/putobject/key=value/f1 --range bytes=-10000 /tmp/testfile7.result 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:38:37.022" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:38:37.022" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 02 Jan 2024 11:38:30 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20240102 11:38:36.568" endtime="20240102 11:38:37.022"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:38:37.023" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 02 Jan 2024 11:38:30 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentRange": "bytes 0-10/11",
    "ContentType": "application/octet-stream",
    "Expires": "Tue, 02 Jan 2024 11:38:36 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20240102 11:38:37.022" endtime="20240102 11:38:37.023"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:38:37.024" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:38:37.023" endtime="20240102 11:38:37.024"/>
</kw>
<status status="PASS" starttime="20240102 11:38:36.568" endtime="20240102 11:38:37.024"/>
</kw>
<msg timestamp="20240102 11:38:37.024" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:38:36.567" endtime="20240102 11:38:37.024"/>
</kw>
<msg timestamp="20240102 11:38:37.024" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 02 Jan 2024 11:38:30 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20240102 11:38:36.567" endtime="20240102 11:38:37.024"/>
</kw>
<msg timestamp="20240102 11:38:37.024" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 02 Jan 2024 11:38:30 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20240102 11:38:36.566" endtime="20240102 11:38:37.024"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:38:37.024" endtime="20240102 11:38:37.025"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bytes 0-10/11</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:38:37.025" endtime="20240102 11:38:37.025"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:38:37.025" endtime="20240102 11:38:37.026"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>cat /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:38:37.028" level="INFO">Running command 'cat /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:38:37.030" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:38:37.030" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20240102 11:38:37.027" endtime="20240102 11:38:37.030"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:38:37.031" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20240102 11:38:37.030" endtime="20240102 11:38:37.031"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:38:37.031" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:38:37.031" endtime="20240102 11:38:37.031"/>
</kw>
<status status="PASS" starttime="20240102 11:38:37.026" endtime="20240102 11:38:37.031"/>
</kw>
<msg timestamp="20240102 11:38:37.031" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:38:37.026" endtime="20240102 11:38:37.031"/>
</kw>
<msg timestamp="20240102 11:38:37.032" level="INFO">${expectedData} = Randomtext</msg>
<status status="PASS" starttime="20240102 11:38:37.026" endtime="20240102 11:38:37.032"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile7.result</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:38:37.034" level="INFO">Running command 'cat /tmp/testfile7.result 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:38:37.036" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:38:37.036" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20240102 11:38:37.033" endtime="20240102 11:38:37.036"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:38:37.037" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20240102 11:38:37.036" endtime="20240102 11:38:37.037"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:38:37.037" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:38:37.037" endtime="20240102 11:38:37.037"/>
</kw>
<status status="PASS" starttime="20240102 11:38:37.032" endtime="20240102 11:38:37.037"/>
</kw>
<msg timestamp="20240102 11:38:37.037" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:38:37.032" endtime="20240102 11:38:37.038"/>
</kw>
<msg timestamp="20240102 11:38:37.038" level="INFO">${actualData} = Randomtext</msg>
<status status="PASS" starttime="20240102 11:38:37.032" endtime="20240102 11:38:37.038"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240102 11:38:37.038" endtime="20240102 11:38:37.038"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20240102 11:38:36.086" endtime="20240102 11:38:37.038"/>
</test>
<test id="s1-s1-s14-t10" name="Incorrect values for end and start offset" line="138">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --range bytes=-11-10000 /tmp/testfile8.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:38:37.042" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket erasure --key ozone-test-3227807120/putobject/key=value/f1 --range bytes=-11-10000 /tmp/testfile8.result 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:38:37.488" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:38:37.489" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 02 Jan 2024 11:38:30 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20240102 11:38:37.041" endtime="20240102 11:38:37.489"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:38:37.489" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 02 Jan 2024 11:38:30 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Tue, 02 Jan 2024 11:38:37 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20240102 11:38:37.489" endtime="20240102 11:38:37.490"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:38:37.490" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:38:37.490" endtime="20240102 11:38:37.490"/>
</kw>
<status status="PASS" starttime="20240102 11:38:37.041" endtime="20240102 11:38:37.490"/>
</kw>
<msg timestamp="20240102 11:38:37.490" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:38:37.040" endtime="20240102 11:38:37.490"/>
</kw>
<msg timestamp="20240102 11:38:37.491" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 02 Jan 2024 11:38:30 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20240102 11:38:37.040" endtime="20240102 11:38:37.491"/>
</kw>
<msg timestamp="20240102 11:38:37.491" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 02 Jan 2024 11:38:30 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20240102 11:38:37.040" endtime="20240102 11:38:37.491"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:38:37.491" endtime="20240102 11:38:37.491"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:38:37.491" endtime="20240102 11:38:37.492"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>cat /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:38:37.494" level="INFO">Running command 'cat /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:38:37.496" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:38:37.496" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20240102 11:38:37.493" endtime="20240102 11:38:37.496"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:38:37.497" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20240102 11:38:37.496" endtime="20240102 11:38:37.497"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:38:37.497" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:38:37.497" endtime="20240102 11:38:37.497"/>
</kw>
<status status="PASS" starttime="20240102 11:38:37.492" endtime="20240102 11:38:37.497"/>
</kw>
<msg timestamp="20240102 11:38:37.497" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:38:37.492" endtime="20240102 11:38:37.497"/>
</kw>
<msg timestamp="20240102 11:38:37.498" level="INFO">${expectedData} = Randomtext</msg>
<status status="PASS" starttime="20240102 11:38:37.492" endtime="20240102 11:38:37.498"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile8.result</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:38:37.500" level="INFO">Running command 'cat /tmp/testfile8.result 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:38:37.502" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:38:37.502" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20240102 11:38:37.499" endtime="20240102 11:38:37.502"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:38:37.503" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20240102 11:38:37.502" endtime="20240102 11:38:37.503"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:38:37.503" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:38:37.503" endtime="20240102 11:38:37.503"/>
</kw>
<status status="PASS" starttime="20240102 11:38:37.498" endtime="20240102 11:38:37.503"/>
</kw>
<msg timestamp="20240102 11:38:37.503" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:38:37.498" endtime="20240102 11:38:37.503"/>
</kw>
<msg timestamp="20240102 11:38:37.504" level="INFO">${actualData} = Randomtext</msg>
<status status="PASS" starttime="20240102 11:38:37.498" endtime="20240102 11:38:37.504"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240102 11:38:37.504" endtime="20240102 11:38:37.504"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --range bytes=11-8 /tmp/testfile9.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:38:37.507" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket erasure --key ozone-test-3227807120/putobject/key=value/f1 --range bytes=11-8 /tmp/testfile9.result 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:38:37.954" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:38:37.954" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 02 Jan 2024 11:38:30 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20240102 11:38:37.506" endtime="20240102 11:38:37.954"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:38:37.955" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 02 Jan 2024 11:38:30 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Tue, 02 Jan 2024 11:38:37 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20240102 11:38:37.955" endtime="20240102 11:38:37.955"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:38:37.956" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:38:37.955" endtime="20240102 11:38:37.956"/>
</kw>
<status status="PASS" starttime="20240102 11:38:37.506" endtime="20240102 11:38:37.956"/>
</kw>
<msg timestamp="20240102 11:38:37.956" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:38:37.505" endtime="20240102 11:38:37.956"/>
</kw>
<msg timestamp="20240102 11:38:37.956" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 02 Jan 2024 11:38:30 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20240102 11:38:37.505" endtime="20240102 11:38:37.956"/>
</kw>
<msg timestamp="20240102 11:38:37.956" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 02 Jan 2024 11:38:30 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20240102 11:38:37.504" endtime="20240102 11:38:37.956"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:38:37.957" endtime="20240102 11:38:37.957"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:38:37.957" endtime="20240102 11:38:37.957"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>cat /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:38:37.960" level="INFO">Running command 'cat /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:38:37.961" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:38:37.961" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20240102 11:38:37.958" endtime="20240102 11:38:37.962"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:38:37.962" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20240102 11:38:37.962" endtime="20240102 11:38:37.962"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:38:37.963" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:38:37.962" endtime="20240102 11:38:37.963"/>
</kw>
<status status="PASS" starttime="20240102 11:38:37.958" endtime="20240102 11:38:37.963"/>
</kw>
<msg timestamp="20240102 11:38:37.963" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:38:37.958" endtime="20240102 11:38:37.963"/>
</kw>
<msg timestamp="20240102 11:38:37.963" level="INFO">${expectedData} = Randomtext</msg>
<status status="PASS" starttime="20240102 11:38:37.957" endtime="20240102 11:38:37.963"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile8.result</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:38:37.966" level="INFO">Running command 'cat /tmp/testfile8.result 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:38:37.967" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:38:37.967" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20240102 11:38:37.964" endtime="20240102 11:38:37.967"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:38:37.968" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20240102 11:38:37.967" endtime="20240102 11:38:37.968"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:38:37.968" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:38:37.968" endtime="20240102 11:38:37.968"/>
</kw>
<status status="PASS" starttime="20240102 11:38:37.964" endtime="20240102 11:38:37.969"/>
</kw>
<msg timestamp="20240102 11:38:37.969" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:38:37.964" endtime="20240102 11:38:37.969"/>
</kw>
<msg timestamp="20240102 11:38:37.969" level="INFO">${actualData} = Randomtext</msg>
<status status="PASS" starttime="20240102 11:38:37.963" endtime="20240102 11:38:37.969"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240102 11:38:37.969" endtime="20240102 11:38:37.969"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20240102 11:38:37.039" endtime="20240102 11:38:37.970"/>
</test>
<test id="s1-s1-s14-t11" name="Zero byte file" line="153">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info /s3v/${BUCKET}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:38:37.973" level="INFO">Running command 'ozone sh bucket info /s3v/erasure 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:38:41.296" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:38:41.296" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "s3v",
  "name" : "erasure",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 210786713,
  "usedNamespace" : 55,
  "creationTime" : "2024-01-02T...</msg>
<status status="PASS" starttime="20240102 11:38:37.972" endtime="20240102 11:38:41.296"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:38:41.297" level="INFO">{
  "metadata" : { },
  "volumeName" : "s3v",
  "name" : "erasure",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 210786713,
  "usedNamespace" : 55,
  "creationTime" : "2024-01-02T11:36:43.046Z",
  "modificationTime" : "2024-01-02T11:36:43.046Z",
  "sourcePathExist" : true,
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "FILE_SYSTEM_OPTIMIZED",
  "owner" : "hadoop",
  "replicationConfig" : {
    "data" : 3,
    "parity" : 2,
    "ecChunkSize" : 1048576,
    "codec" : "RS",
    "replicationType" : "EC",
    "requiredNodes" : 5
  },
  "link" : false
}</msg>
<status status="PASS" starttime="20240102 11:38:41.296" endtime="20240102 11:38:41.297"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:38:41.297" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:38:41.297" endtime="20240102 11:38:41.297"/>
</kw>
<status status="PASS" starttime="20240102 11:38:37.971" endtime="20240102 11:38:41.297"/>
</kw>
<msg timestamp="20240102 11:38:41.297" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:38:37.971" endtime="20240102 11:38:41.298"/>
</kw>
<msg timestamp="20240102 11:38:41.298" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "s3v",
  "name" : "erasure",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 210786713,
  "usedNamespace" : 55,
  "creationTime" : "2024-01-02T...</msg>
<status status="PASS" starttime="20240102 11:38:37.971" endtime="20240102 11:38:41.298"/>
</kw>
<kw name="Execute" library="os">
<var>${linked}</var>
<arg>echo '${result}' | jq -j '.sourceVolume,"/",.sourceBucket'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:38:41.301" level="INFO">Running command 'echo '{
  "metadata" : { },
  "volumeName" : "s3v",
  "name" : "erasure",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 210786713,
  "usedNamespace" : 55,
  "creationTime" : "2024-01-02T11:36:43.046Z",
  "modificationTime" : "2024-01-02T11:36:43.046Z",
  "sourcePathExist" : true,
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "FILE_SYSTEM_OPTIMIZED",
  "owner" : "hadoop",
  "replicationConfig" : {
    "data" : 3,
    "parity" : 2,
    "ecChunkSize" : 1048576,
    "codec" : "RS",
    "replicationType" : "EC",
    "requiredNodes" : 5
  },
  "link" : false
}' | jq -j '.sourceVolume,"/",.sourceBucket' 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:38:41.326" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:38:41.326" level="INFO">${output} = null/null</msg>
<status status="PASS" starttime="20240102 11:38:41.299" endtime="20240102 11:38:41.326"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:38:41.327" level="INFO">null/null</msg>
<status status="PASS" starttime="20240102 11:38:41.326" endtime="20240102 11:38:41.327"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:38:41.327" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:38:41.327" endtime="20240102 11:38:41.328"/>
</kw>
<status status="PASS" starttime="20240102 11:38:41.299" endtime="20240102 11:38:41.328"/>
</kw>
<msg timestamp="20240102 11:38:41.328" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:38:41.298" endtime="20240102 11:38:41.328"/>
</kw>
<msg timestamp="20240102 11:38:41.328" level="INFO">${linked} = null/null</msg>
<status status="PASS" starttime="20240102 11:38:41.298" endtime="20240102 11:38:41.328"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${eval}</var>
<arg>"source" in """${linked}"""</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20240102 11:38:41.329" level="INFO">${eval} = False</msg>
<status status="PASS" starttime="20240102 11:38:41.328" endtime="20240102 11:38:41.329"/>
</kw>
<if>
<branch type="IF" condition="${eval} == ${True}">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${linked}</arg>
<status status="NOT RUN" starttime="20240102 11:38:41.329" endtime="20240102 11:38:41.329"/>
</kw>
<status status="NOT RUN" starttime="20240102 11:38:41.329" endtime="20240102 11:38:41.329"/>
</branch>
<status status="PASS" starttime="20240102 11:38:41.329" endtime="20240102 11:38:41.329"/>
</if>
<kw name="Evaluate" library="BuiltIn">
<var>${fsolayout}</var>
<arg>"OPTIMIZED" in """${result}"""</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20240102 11:38:41.330" level="INFO">${fsolayout} = True</msg>
<status status="PASS" starttime="20240102 11:38:41.329" endtime="20240102 11:38:41.330"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/zerobyte --range bytes=0-0 /tmp/testfile2.result</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:38:41.332" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket erasure --key ozone-test-3227807120/putobject/key=value/zerobyte --range bytes=0-0 /tmp/testfile2.result 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:38:41.783" level="INFO">${rc} = 255</msg>
<msg timestamp="20240102 11:38:41.783" level="INFO">${output} = 
An error occurred (NoSuchKey) when calling the GetObject operation: The specified key does not exist</msg>
<status status="PASS" starttime="20240102 11:38:41.331" endtime="20240102 11:38:41.783"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:38:41.784" level="INFO">
An error occurred (NoSuchKey) when calling the GetObject operation: The specified key does not exist</msg>
<status status="PASS" starttime="20240102 11:38:41.783" endtime="20240102 11:38:41.784"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:38:41.784" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:38:41.784" endtime="20240102 11:38:41.784"/>
</kw>
<msg timestamp="20240102 11:38:41.785" level="INFO">${output} = 
An error occurred (NoSuchKey) when calling the GetObject operation: The specified key does not exist</msg>
<status status="PASS" starttime="20240102 11:38:41.330" endtime="20240102 11:38:41.785"/>
</kw>
<msg timestamp="20240102 11:38:41.785" level="INFO">${result} = 
An error occurred (NoSuchKey) when calling the GetObject operation: The specified key does not exist</msg>
<status status="PASS" starttime="20240102 11:38:41.330" endtime="20240102 11:38:41.785"/>
</kw>
<if>
<branch type="IF" condition="${fsolayout} == ${True}">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NoSuchKey</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:38:41.785" endtime="20240102 11:38:41.786"/>
</kw>
<status status="PASS" starttime="20240102 11:38:41.785" endtime="20240102 11:38:41.786"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20240102 11:38:41.786" endtime="20240102 11:38:41.786"/>
</kw>
<status status="NOT RUN" starttime="20240102 11:38:41.786" endtime="20240102 11:38:41.786"/>
</branch>
<status status="PASS" starttime="20240102 11:38:41.785" endtime="20240102 11:38:41.786"/>
</if>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/zerobyte --range bytes=0-1 /tmp/testfile2.result</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:38:41.789" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket erasure --key ozone-test-3227807120/putobject/key=value/zerobyte --range bytes=0-1 /tmp/testfile2.result 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:38:42.232" level="INFO">${rc} = 255</msg>
<msg timestamp="20240102 11:38:42.232" level="INFO">${output} = 
An error occurred (NoSuchKey) when calling the GetObject operation: The specified key does not exist</msg>
<status status="PASS" starttime="20240102 11:38:41.787" endtime="20240102 11:38:42.232"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:38:42.233" level="INFO">
An error occurred (NoSuchKey) when calling the GetObject operation: The specified key does not exist</msg>
<status status="PASS" starttime="20240102 11:38:42.232" endtime="20240102 11:38:42.233"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:38:42.233" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:38:42.233" endtime="20240102 11:38:42.234"/>
</kw>
<msg timestamp="20240102 11:38:42.234" level="INFO">${output} = 
An error occurred (NoSuchKey) when calling the GetObject operation: The specified key does not exist</msg>
<status status="PASS" starttime="20240102 11:38:41.787" endtime="20240102 11:38:42.234"/>
</kw>
<msg timestamp="20240102 11:38:42.234" level="INFO">${result} = 
An error occurred (NoSuchKey) when calling the GetObject operation: The specified key does not exist</msg>
<status status="PASS" starttime="20240102 11:38:41.786" endtime="20240102 11:38:42.234"/>
</kw>
<if>
<branch type="IF" condition="${fsolayout} == ${True}">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NoSuchKey</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:38:42.234" endtime="20240102 11:38:42.235"/>
</kw>
<status status="PASS" starttime="20240102 11:38:42.234" endtime="20240102 11:38:42.235"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20240102 11:38:42.235" endtime="20240102 11:38:42.235"/>
</kw>
<status status="NOT RUN" starttime="20240102 11:38:42.235" endtime="20240102 11:38:42.235"/>
</branch>
<status status="PASS" starttime="20240102 11:38:42.234" endtime="20240102 11:38:42.235"/>
</if>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/zerobyte --range bytes=0-10000 /tmp/testfile2.result</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:38:42.238" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket erasure --key ozone-test-3227807120/putobject/key=value/zerobyte --range bytes=0-10000 /tmp/testfile2.result 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:38:42.686" level="INFO">${rc} = 255</msg>
<msg timestamp="20240102 11:38:42.687" level="INFO">${output} = 
An error occurred (NoSuchKey) when calling the GetObject operation: The specified key does not exist</msg>
<status status="PASS" starttime="20240102 11:38:42.236" endtime="20240102 11:38:42.687"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:38:42.687" level="INFO">
An error occurred (NoSuchKey) when calling the GetObject operation: The specified key does not exist</msg>
<status status="PASS" starttime="20240102 11:38:42.687" endtime="20240102 11:38:42.688"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:38:42.688" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:38:42.688" endtime="20240102 11:38:42.688"/>
</kw>
<msg timestamp="20240102 11:38:42.688" level="INFO">${output} = 
An error occurred (NoSuchKey) when calling the GetObject operation: The specified key does not exist</msg>
<status status="PASS" starttime="20240102 11:38:42.236" endtime="20240102 11:38:42.688"/>
</kw>
<msg timestamp="20240102 11:38:42.688" level="INFO">${result} = 
An error occurred (NoSuchKey) when calling the GetObject operation: The specified key does not exist</msg>
<status status="PASS" starttime="20240102 11:38:42.235" endtime="20240102 11:38:42.689"/>
</kw>
<if>
<branch type="IF" condition="${fsolayout} == ${True}">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NoSuchKey</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:38:42.689" endtime="20240102 11:38:42.689"/>
</kw>
<status status="PASS" starttime="20240102 11:38:42.689" endtime="20240102 11:38:42.689"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20240102 11:38:42.689" endtime="20240102 11:38:42.690"/>
</kw>
<status status="NOT RUN" starttime="20240102 11:38:42.689" endtime="20240102 11:38:42.690"/>
</branch>
<status status="PASS" starttime="20240102 11:38:42.689" endtime="20240102 11:38:42.690"/>
</if>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20240102 11:38:37.970" endtime="20240102 11:38:42.690"/>
</test>
<test id="s1-s1-s14-t12" name="Create file with user defined metadata" line="183">
<kw name="Execute" library="os">
<arg>echo "Randomtext" &gt; /tmp/testfile2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:38:42.693" level="INFO">Running command 'echo "Randomtext" &gt; /tmp/testfile2'.</msg>
<msg timestamp="20240102 11:38:42.694" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:38:42.694" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240102 11:38:42.692" endtime="20240102 11:38:42.695"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:38:42.695" level="INFO"/>
<status status="PASS" starttime="20240102 11:38:42.695" endtime="20240102 11:38:42.695"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:38:42.696" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:38:42.695" endtime="20240102 11:38:42.696"/>
</kw>
<status status="PASS" starttime="20240102 11:38:42.692" endtime="20240102 11:38:42.696"/>
</kw>
<msg timestamp="20240102 11:38:42.696" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:38:42.691" endtime="20240102 11:38:42.696"/>
</kw>
<status status="PASS" starttime="20240102 11:38:42.691" endtime="20240102 11:38:42.696"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/putobject/custom-metadata/key1 --body /tmp/testfile2 --metadata="custom-key1=custom-value1,custom-key2=custom-value2"</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:38:42.699" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket erasure --key ozone-test-3227807120/putobject/custom-metadata/key1 --body /tmp/testfile2 --metadata="custom-key1=custom-value1,custom-key2=custom-value2" 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:38:43.224" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:38:43.224" level="INFO">${output} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20240102 11:38:42.698" endtime="20240102 11:38:43.224"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:38:43.225" level="INFO">{
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20240102 11:38:43.225" endtime="20240102 11:38:43.225"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:38:43.226" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:38:43.226" endtime="20240102 11:38:43.226"/>
</kw>
<status status="PASS" starttime="20240102 11:38:42.698" endtime="20240102 11:38:43.226"/>
</kw>
<msg timestamp="20240102 11:38:43.226" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:38:42.697" endtime="20240102 11:38:43.226"/>
</kw>
<msg timestamp="20240102 11:38:43.227" level="INFO">${output} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20240102 11:38:42.697" endtime="20240102 11:38:43.227"/>
</kw>
<status status="PASS" starttime="20240102 11:38:42.696" endtime="20240102 11:38:43.227"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>head-object --bucket ${BUCKET} --key ${PREFIX}/putobject/custom-metadata/key1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:38:43.231" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket erasure --key ozone-test-3227807120/putobject/custom-metadata/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:38:43.725" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:38:43.725" level="INFO">${output} = {
    "LastModified": "Tue, 02 Jan 2024 11:38:43 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20240102 11:38:43.229" endtime="20240102 11:38:43.726"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:38:43.726" level="INFO">{
    "LastModified": "Tue, 02 Jan 2024 11:38:43 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-stream",
    "Expires": "Tue, 02 Jan 2024 11:38:43 GMT",
    "Metadata": {
        "custom-key1": "custom-value1",
        "custom-key2": "custom-value2"
    }
}</msg>
<status status="PASS" starttime="20240102 11:38:43.726" endtime="20240102 11:38:43.727"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:38:43.727" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:38:43.727" endtime="20240102 11:38:43.727"/>
</kw>
<status status="PASS" starttime="20240102 11:38:43.229" endtime="20240102 11:38:43.727"/>
</kw>
<msg timestamp="20240102 11:38:43.727" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:38:43.228" endtime="20240102 11:38:43.727"/>
</kw>
<msg timestamp="20240102 11:38:43.728" level="INFO">${output} = {
    "LastModified": "Tue, 02 Jan 2024 11:38:43 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20240102 11:38:43.228" endtime="20240102 11:38:43.728"/>
</kw>
<msg timestamp="20240102 11:38:43.728" level="INFO">${result} = {
    "LastModified": "Tue, 02 Jan 2024 11:38:43 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20240102 11:38:43.227" endtime="20240102 11:38:43.728"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"custom-key1\": \"custom-value1\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:38:43.728" endtime="20240102 11:38:43.728"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"custom-key2\": \"custom-value2\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:38:43.728" endtime="20240102 11:38:43.729"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info /s3v/${BUCKET}/${PREFIX}/putobject/custom-metadata/key1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:38:43.731" level="INFO">Running command 'ozone sh key info /s3v/erasure/ozone-test-3227807120/putobject/custom-metadata/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:38:47.165" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:38:47.165" level="INFO">${output} = {
  "volumeName" : "s3v",
  "bucketName" : "erasure",
  "name" : "ozone-test-3227807120/putobject/custom-metadata/key1",
  "dataSize" : 11,
  "creationTime" : "2024-01-02T11:38:43.100Z",
  "modificati...</msg>
<status status="PASS" starttime="20240102 11:38:43.730" endtime="20240102 11:38:47.165"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:38:47.166" level="INFO">{
  "volumeName" : "s3v",
  "bucketName" : "erasure",
  "name" : "ozone-test-3227807120/putobject/custom-metadata/key1",
  "dataSize" : 11,
  "creationTime" : "2024-01-02T11:38:43.100Z",
  "modificationTime" : "2024-01-02T11:38:43.159Z",
  "replicationConfig" : {
    "data" : 3,
    "parity" : 2,
    "ecChunkSize" : 1048576,
    "codec" : "RS",
    "replicationType" : "EC",
    "requiredNodes" : 5
  },
  "metadata" : {
    "ETag" : "09ad6a6e23191dd19110d0251c4c3186",
    "custom-key1" : "custom-value1",
    "custom-key2" : "custom-value2"
  },
  "ozoneKeyLocations" : [ {
    "containerID" : 3,
    "localID" : 113750153625600093,
    "length" : 11,
    "offset" : 0,
    "keyOffset" : 0
  } ],
  "file" : true
}</msg>
<status status="PASS" starttime="20240102 11:38:47.165" endtime="20240102 11:38:47.166"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:38:47.166" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:38:47.166" endtime="20240102 11:38:47.166"/>
</kw>
<status status="PASS" starttime="20240102 11:38:43.730" endtime="20240102 11:38:47.167"/>
</kw>
<msg timestamp="20240102 11:38:47.167" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:38:43.729" endtime="20240102 11:38:47.167"/>
</kw>
<msg timestamp="20240102 11:38:47.167" level="INFO">${result} = {
  "volumeName" : "s3v",
  "bucketName" : "erasure",
  "name" : "ozone-test-3227807120/putobject/custom-metadata/key1",
  "dataSize" : 11,
  "creationTime" : "2024-01-02T11:38:43.100Z",
  "modificati...</msg>
<status status="PASS" starttime="20240102 11:38:43.729" endtime="20240102 11:38:47.167"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"custom-key1\" : \"custom-value1\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:38:47.167" endtime="20240102 11:38:47.168"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"custom-key2\" : \"custom-value2\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:38:47.168" endtime="20240102 11:38:47.168"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20240102 11:38:42.690" endtime="20240102 11:38:47.168"/>
</test>
<test id="s1-s1-s14-t13" name="Create file with user defined metadata with gdpr enabled value in request" line="195">
<kw name="Execute" library="os">
<arg>echo "Randomtext" &gt; /tmp/testfile2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:38:47.172" level="INFO">Running command 'echo "Randomtext" &gt; /tmp/testfile2'.</msg>
<msg timestamp="20240102 11:38:47.174" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:38:47.174" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240102 11:38:47.171" endtime="20240102 11:38:47.174"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:38:47.174" level="INFO"/>
<status status="PASS" starttime="20240102 11:38:47.174" endtime="20240102 11:38:47.174"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:38:47.175" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:38:47.175" endtime="20240102 11:38:47.175"/>
</kw>
<status status="PASS" starttime="20240102 11:38:47.170" endtime="20240102 11:38:47.175"/>
</kw>
<msg timestamp="20240102 11:38:47.175" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:38:47.170" endtime="20240102 11:38:47.175"/>
</kw>
<status status="PASS" starttime="20240102 11:38:47.170" endtime="20240102 11:38:47.175"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/putobject/custom-metadata/key2 --body /tmp/testfile2 --metadata="gdprEnabled=true,custom-key2=custom-value2"</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:38:47.178" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket erasure --key ozone-test-3227807120/putobject/custom-metadata/key2 --body /tmp/testfile2 --metadata="gdprEnabled=true,custom-key2=custom-value2" 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:38:47.677" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:38:47.677" level="INFO">${output} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20240102 11:38:47.177" endtime="20240102 11:38:47.677"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:38:47.678" level="INFO">{
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20240102 11:38:47.677" endtime="20240102 11:38:47.678"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:38:47.678" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:38:47.678" endtime="20240102 11:38:47.679"/>
</kw>
<status status="PASS" starttime="20240102 11:38:47.177" endtime="20240102 11:38:47.679"/>
</kw>
<msg timestamp="20240102 11:38:47.679" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:38:47.177" endtime="20240102 11:38:47.679"/>
</kw>
<msg timestamp="20240102 11:38:47.679" level="INFO">${output} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20240102 11:38:47.176" endtime="20240102 11:38:47.679"/>
</kw>
<status status="PASS" starttime="20240102 11:38:47.175" endtime="20240102 11:38:47.679"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>head-object --bucket ${BUCKET} --key ${PREFIX}/putobject/custom-metadata/key2</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:38:47.682" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket erasure --key ozone-test-3227807120/putobject/custom-metadata/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:38:48.125" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:38:48.125" level="INFO">${output} = {
    "LastModified": "Tue, 02 Jan 2024 11:38:47 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20240102 11:38:47.681" endtime="20240102 11:38:48.125"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:38:48.126" level="INFO">{
    "LastModified": "Tue, 02 Jan 2024 11:38:47 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-stream",
    "Expires": "Tue, 02 Jan 2024 11:38:48 GMT",
    "Metadata": {
        "custom-key2": "custom-value2"
    }
}</msg>
<status status="PASS" starttime="20240102 11:38:48.126" endtime="20240102 11:38:48.126"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:38:48.127" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:38:48.127" endtime="20240102 11:38:48.127"/>
</kw>
<status status="PASS" starttime="20240102 11:38:47.681" endtime="20240102 11:38:48.127"/>
</kw>
<msg timestamp="20240102 11:38:48.127" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:38:47.680" endtime="20240102 11:38:48.127"/>
</kw>
<msg timestamp="20240102 11:38:48.127" level="INFO">${output} = {
    "LastModified": "Tue, 02 Jan 2024 11:38:47 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20240102 11:38:47.680" endtime="20240102 11:38:48.127"/>
</kw>
<msg timestamp="20240102 11:38:48.128" level="INFO">${result} = {
    "LastModified": "Tue, 02 Jan 2024 11:38:47 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20240102 11:38:47.679" endtime="20240102 11:38:48.128"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"custom-key2\": \"custom-value2\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:38:48.128" endtime="20240102 11:38:48.128"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"gdprEnabled\": \"true\"</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:38:48.128" endtime="20240102 11:38:48.129"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20240102 11:38:47.169" endtime="20240102 11:38:48.129"/>
</test>
<test id="s1-s1-s14-t14" name="Create file with user defined metadata size larger than 2 KB" line="203">
<kw name="Execute" library="os">
<arg>echo "Randomtext" &gt; /tmp/testfile2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:38:48.132" level="INFO">Running command 'echo "Randomtext" &gt; /tmp/testfile2'.</msg>
<msg timestamp="20240102 11:38:48.133" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:38:48.134" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240102 11:38:48.131" endtime="20240102 11:38:48.134"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:38:48.134" level="INFO"/>
<status status="PASS" starttime="20240102 11:38:48.134" endtime="20240102 11:38:48.134"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:38:48.135" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:38:48.134" endtime="20240102 11:38:48.135"/>
</kw>
<status status="PASS" starttime="20240102 11:38:48.131" endtime="20240102 11:38:48.135"/>
</kw>
<msg timestamp="20240102 11:38:48.135" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:38:48.130" endtime="20240102 11:38:48.135"/>
</kw>
<status status="PASS" starttime="20240102 11:38:48.130" endtime="20240102 11:38:48.135"/>
</kw>
<kw name="Execute" library="os">
<var>${custom_metadata_value}</var>
<arg>printf 'v%.0s' {1..3000}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:38:48.138" level="INFO">Running command 'printf 'v%.0s' {1..3000} 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:38:48.140" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:38:48.140" level="INFO">${output} = vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv...</msg>
<status status="PASS" starttime="20240102 11:38:48.136" endtime="20240102 11:38:48.140"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:38:48.141" level="INFO">vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv</msg>
<status status="PASS" starttime="20240102 11:38:48.141" endtime="20240102 11:38:48.141"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:38:48.141" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:38:48.141" endtime="20240102 11:38:48.141"/>
</kw>
<status status="PASS" starttime="20240102 11:38:48.136" endtime="20240102 11:38:48.142"/>
</kw>
<msg timestamp="20240102 11:38:48.142" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:38:48.136" endtime="20240102 11:38:48.142"/>
</kw>
<msg timestamp="20240102 11:38:48.142" level="INFO">${custom_metadata_value} = vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv...</msg>
<status status="PASS" starttime="20240102 11:38:48.135" endtime="20240102 11:38:48.142"/>
</kw>
<kw name="Execute AWSS3APICli and ignore error" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/putobject/custom-metadata/key2 --body /tmp/testfile2 --metadata="custom-key1=${custom_metadata_value}"</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:38:48.145" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket erasure --key ozone-test-3227807120/putobject/custom-metadata/key2 --body /tmp/testfile2 --metadata="custom-key1=vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv" 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:38:48.592" level="INFO">${rc} = 255</msg>
<msg timestamp="20240102 11:38:48.592" level="INFO">${output} = 
An error occurred (MetadataTooLarge) when calling the PutObject operation: Illegal user defined metadata. Combined size exceeds the maximum allowed metadata size of 2KB</msg>
<status status="PASS" starttime="20240102 11:38:48.143" endtime="20240102 11:38:48.592"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:38:48.593" level="INFO">
An error occurred (MetadataTooLarge) when calling the PutObject operation: Illegal user defined metadata. Combined size exceeds the maximum allowed metadata size of 2KB</msg>
<status status="PASS" starttime="20240102 11:38:48.592" endtime="20240102 11:38:48.593"/>
</kw>
<msg timestamp="20240102 11:38:48.593" level="INFO">${output} = 
An error occurred (MetadataTooLarge) when calling the PutObject operation: Illegal user defined metadata. Combined size exceeds the maximum allowed metadata size of 2KB</msg>
<status status="PASS" starttime="20240102 11:38:48.143" endtime="20240102 11:38:48.593"/>
</kw>
<msg timestamp="20240102 11:38:48.593" level="INFO">${result} = 
An error occurred (MetadataTooLarge) when calling the PutObject operation: Illegal user defined metadata. Combined size exceeds the maximum allowed metadata size of 2KB</msg>
<status status="PASS" starttime="20240102 11:38:48.142" endtime="20240102 11:38:48.593"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>custom-key1: ${custom_metadata_value}</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:38:48.593" endtime="20240102 11:38:48.594"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20240102 11:38:48.129" endtime="20240102 11:38:48.594"/>
</test>
<test id="s1-s1-s14-t15" name="Create small file and expect ETag (MD5) in a reponse header" line="209">
<kw name="Execute" library="os">
<arg>head -c 1MB &lt;/dev/urandom &gt; /tmp/small_file</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:38:48.597" level="INFO">Running command 'head -c 1MB &lt;/dev/urandom &gt; /tmp/small_file'.</msg>
<msg timestamp="20240102 11:38:48.602" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:38:48.602" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240102 11:38:48.596" endtime="20240102 11:38:48.602"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:38:48.603" level="INFO"/>
<status status="PASS" starttime="20240102 11:38:48.603" endtime="20240102 11:38:48.603"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:38:48.604" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:38:48.603" endtime="20240102 11:38:48.604"/>
</kw>
<status status="PASS" starttime="20240102 11:38:48.596" endtime="20240102 11:38:48.604"/>
</kw>
<msg timestamp="20240102 11:38:48.604" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:38:48.595" endtime="20240102 11:38:48.604"/>
</kw>
<status status="PASS" starttime="20240102 11:38:48.595" endtime="20240102 11:38:48.604"/>
</kw>
<kw name="Execute" library="os">
<var>${file_md5_checksum}</var>
<arg>md5sum /tmp/small_file | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:38:48.607" level="INFO">Running command 'md5sum /tmp/small_file | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:38:48.610" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:38:48.610" level="INFO">${output} = 7adba11bb2e6e75dbd388daa80bc1d33</msg>
<status status="PASS" starttime="20240102 11:38:48.605" endtime="20240102 11:38:48.610"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:38:48.611" level="INFO">7adba11bb2e6e75dbd388daa80bc1d33</msg>
<status status="PASS" starttime="20240102 11:38:48.610" endtime="20240102 11:38:48.611"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:38:48.611" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:38:48.611" endtime="20240102 11:38:48.611"/>
</kw>
<status status="PASS" starttime="20240102 11:38:48.605" endtime="20240102 11:38:48.611"/>
</kw>
<msg timestamp="20240102 11:38:48.612" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:38:48.605" endtime="20240102 11:38:48.612"/>
</kw>
<msg timestamp="20240102 11:38:48.612" level="INFO">${file_md5_checksum} = 7adba11bb2e6e75dbd388daa80bc1d33</msg>
<status status="PASS" starttime="20240102 11:38:48.604" endtime="20240102 11:38:48.612"/>
</kw>
<kw name="Execute AWSS3CliDebug" library="commonawslib">
<var>${result}</var>
<arg>cp /tmp/small_file s3://${BUCKET}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws --debug s3 --endpoint ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:38:48.615" level="INFO">Running command 'aws --debug s3 --endpoint http://s3g:9878 cp /tmp/small_file s3://erasure 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:38:49.141" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:38:49.141" level="INFO">${output} = 2024-01-02 11:38:48,950 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1053-azure botocore/1.26.10
2024-01-02 11:38:48,950 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20240102 11:38:48.613" endtime="20240102 11:38:49.141"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:38:49.142" level="INFO">2024-01-02 11:38:48,950 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1053-azure botocore/1.26.10
2024-01-02 11:38:48,950 - MainThread - awscli.clidriver - DEBUG - Arguments entered to CLI: ['--debug', 's3', '--endpoint', 'http://s3g:9878', 'cp', '/tmp/small_file', 's3://erasure']
2024-01-02 11:38:48,951 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function add_scalar_parsers at 0x7efd9e46f9d8&gt;
2024-01-02 11:38:48,951 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function register_uri_param_handler at 0x7efd9f263730&gt;
2024-01-02 11:38:48,951 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function inject_assume_role_provider_cache at 0x7efd9f292ae8&gt;
2024-01-02 11:38:48,951 - MainThread - botocore.utils - DEBUG - IMDS ENDPOINT: http://169.254.169.254/
2024-01-02 11:38:48,955 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function attach_history_handler at 0x7efd9e59b400&gt;
2024-01-02 11:38:48,955 - MainThread - botocore.hooks - DEBUG - Event building-command-table.s3: calling handler &lt;function add_waiters at 0x7efd9e47e048&gt;
2024-01-02 11:38:48,955 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.s3.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7efda617e6d8&gt;
2024-01-02 11:38:48,955 - MainThread - botocore.hooks - DEBUG - Event building-command-table.cp: calling handler &lt;function add_waiters at 0x7efd9e47e048&gt;
2024-01-02 11:38:48,957 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.paths: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7efda617e6d8&gt;
2024-01-02 11:38:48,957 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.dryrun: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7efda617e6d8&gt;
2024-01-02 11:38:48,957 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7efd9f2662b0&gt;
2024-01-02 11:38:48,957 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.quiet: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7efda617e6d8&gt;
2024-01-02 11:38:48,958 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7efd9f2662b0&gt;
2024-01-02 11:38:48,958 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7efda617e6d8&gt;
2024-01-02 11:38:48,958 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.acl: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7efda617e6d8&gt;
2024-01-02 11:38:48,958 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.follow-symlinks: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7efda617e6d8&gt;
2024-01-02 11:38:48,958 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7efd9f2662b0&gt;
2024-01-02 11:38:48,958 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7efda617e6d8&gt;
2024-01-02 11:38:48,958 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7efda617e6d8&gt;
2024-01-02 11:38:48,958 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7efda617e6d8&gt;
2024-01-02 11:38:48,958 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-key: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7efda617e6d8&gt;
2024-01-02 11:38:48,959 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-kms-key-id: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7efda617e6d8&gt;
2024-01-02 11:38:48,959 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-copy-source: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7efda617e6d8&gt;
2024-01-02 11:38:48,959 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-copy-source-key: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7efda617e6d8&gt;
2024-01-02 11:38:48,959 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.storage-class: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7efda617e6d8&gt;
2024-01-02 11:38:48,959 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.grants: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7efda617e6d8&gt;
2024-01-02 11:38:48,959 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.website-redirect: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7efda617e6d8&gt;
2024-01-02 11:38:48,960 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-type: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7efda617e6d8&gt;
2024-01-02 11:38:48,960 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.cache-control: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7efda617e6d8&gt;
2024-01-02 11:38:48,960 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-disposition: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7efda617e6d8&gt;
2024-01-02 11:38:48,960 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-encoding: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7efda617e6d8&gt;
2024-01-02 11:38:48,960 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-language: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7efda617e6d8&gt;
2024-01-02 11:38:48,960 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.expires: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7efda617e6d8&gt;
2024-01-02 11:38:48,960 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.source-region: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7efda617e6d8&gt;
2024-01-02 11:38:48,961 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.only-show-errors: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7efda617e6d8&gt;
2024-01-02 11:38:48,961 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7efd9f2662b0&gt;
2024-01-02 11:38:48,961 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7efda617e6d8&gt;
2024-01-02 11:38:48,961 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.page-size: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7efda617e6d8&gt;
2024-01-02 11:38:48,961 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.ignore-glacier-warnings: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7efda617e6d8&gt;
2024-01-02 11:38:48,961 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7efd9f2662b0&gt;
2024-01-02 11:38:48,961 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.force-glacier-transfer: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7efda617e6d8&gt;
2024-01-02 11:38:48,961 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7efd9f2662b0&gt;
2024-01-02 11:38:48,961 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.request-payer: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7efda617e6d8&gt;
2024-01-02 11:38:48,961 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.metadata: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7efda617e6d8&gt;
2024-01-02 11:38:48,962 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.metadata-directive: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7efda617e6d8&gt;
2024-01-02 11:38:48,962 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.expected-size: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7efda617e6d8&gt;
2024-01-02 11:38:48,962 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7efda617e6d8&gt;
2024-01-02 11:38:48,962 - MainThread - botocore.credentials - DEBUG - Looking for credentials via: env
2024-01-02 11:38:48,962 - MainThread - botocore.credentials - INFO - Found credentials in environment variables.
2024-01-02 11:38:48,963 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/endpoints.json
2024-01-02 11:38:48,976 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/sdk-default-configuration.json
2024-01-02 11:38:48,976 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7efd9ff27378&gt;
2024-01-02 11:38:48,977 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/s3/2006-03-01/service-2.json
2024-01-02 11:38:48,987 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7efda02012f0&gt;
2024-01-02 11:38:48,987 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7efda02010d0&gt;
2024-01-02 11:38:48,987 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2024-01-02 11:38:48,990 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2024-01-02 11:38:48,990 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/_retry.json
2024-01-02 11:38:48,991 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2024-01-02 11:38:48,992 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2024-01-02 11:38:48,992 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7efd9ff27378&gt;
2024-01-02 11:38:48,993 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7efda02012f0&gt;
2024-01-02 11:38:48,993 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7efda02010d0&gt;
2024-01-02 11:38:48,993 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2024-01-02 11:38:48,995 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2024-01-02 11:38:48,996 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2024-01-02 11:38:48,997 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2024-01-02 11:38:48,997 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7efd9ff27378&gt;
2024-01-02 11:38:48,998 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7efda02012f0&gt;
2024-01-02 11:38:48,998 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7efda02010d0&gt;
2024-01-02 11:38:48,998 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2024-01-02 11:38:49,000 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2024-01-02 11:38:49,001 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2024-01-02 11:38:49,002 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2024-01-02 11:38:49,002 - MainThread - awscli.customizations.s3.s3handler - DEBUG - Using a multipart threshold of 8388608 and a part size of 8388608
2024-01-02 11:38:49,003 - MainThread - s3transfer.utils - DEBUG - Acquiring 0
2024-01-02 11:38:49,004 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - UploadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7efd9dd1f978&gt;}) about to wait for the following futures []
2024-01-02 11:38:49,004 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - UploadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7efd9dd1f978&gt;}) done waiting for dependent futures
2024-01-02 11:38:49,004 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - Executing task UploadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7efd9dd1f978&gt;}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7efd9dddc828&gt;, 'config': &lt;s3transfer.manager.TransferConfig object at 0x7efd9dd14978&gt;, 'osutil': &lt;s3transfer.utils.OSUtils object at 0x7efd9dd149e8&gt;, 'request_executor': &lt;s3transfer.futures.BoundedExecutor object at 0x7efd9dd14b70&gt;, 'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7efd9dd1f978&gt;}
2024-01-02 11:38:49,005 - ThreadPoolExecutor-1_0 - s3transfer.futures - DEBUG - Submitting task PutObjectTask(transfer_id=0, {'bucket': 'erasure', 'key': 'small_file', 'extra_args': {}}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7efd9dd14b70&gt; for transfer request: 0.
2024-01-02 11:38:49,005 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Acquiring 0
2024-01-02 11:38:49,005 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - PutObjectTask(transfer_id=0, {'bucket': 'erasure', 'key': 'small_file', 'extra_args': {}}) about to wait for the following futures []
2024-01-02 11:38:49,005 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - PutObjectTask(transfer_id=0, {'bucket': 'erasure', 'key': 'small_file', 'extra_args': {}}) done waiting for dependent futures
2024-01-02 11:38:49,006 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2024-01-02 11:38:49,006 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task PutObjectTask(transfer_id=0, {'bucket': 'erasure', 'key': 'small_file', 'extra_args': {}}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7efd9dddc828&gt;, 'fileobj': &lt;s3transfer.utils.ReadFileChunk object at 0x7efd9dd1fdd8&gt;, 'bucket': 'erasure', 'key': 'small_file', 'extra_args': {}}
2024-01-02 11:38:49,006 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function validate_ascii_metadata at 0x7efd9ff446a8&gt;
2024-01-02 11:38:49,006 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function sse_md5 at 0x7efd9ff40ae8&gt;
2024-01-02 11:38:49,006 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function convert_body_to_file_like_object at 0x7efd9ff44f28&gt;
2024-01-02 11:38:49,006 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function validate_bucket_name at 0x7efd9ff40a60&gt;
2024-01-02 11:38:49,006 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;bound method S3RegionRedirector.redirect_from_cache of &lt;botocore.utils.S3RegionRedirector object at 0x7efd9dddcd68&gt;&gt;
2024-01-02 11:38:49,006 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;bound method S3ArnParamHandler.handle_arn of &lt;botocore.utils.S3ArnParamHandler object at 0x7efd9ddac160&gt;&gt;
2024-01-02 11:38:49,007 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function generate_idempotent_uuid at 0x7efd9ff408c8&gt;
2024-01-02 11:38:49,007 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;function conditionally_calculate_md5 at 0x7efda08e70d0&gt;
2024-01-02 11:38:49,009 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;function add_expect_header at 0x7efd9ff40d90&gt;
2024-01-02 11:38:49,009 - ThreadPoolExecutor-0_0 - botocore.handlers - DEBUG - Adding expect 100 continue header to request.
2024-01-02 11:38:49,009 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;bound method S3RegionRedirector.set_request_url of &lt;botocore.utils.S3RegionRedirector object at 0x7efd9dddcd68&gt;&gt;
2024-01-02 11:38:49,009 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;function add_recursion_detection_header at 0x7efd9ff40598&gt;
2024-01-02 11:38:49,009 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;function inject_api_version_header_if_needed at 0x7efd9ff460d0&gt;
2024-01-02 11:38:49,009 - ThreadPoolExecutor-0_0 - botocore.endpoint - DEBUG - Making request for OperationModel(name=PutObject) with params: {'url_path': '/erasure/small_file', 'query_string': {}, 'method': 'PUT', 'headers': {'User-Agent': 'aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1053-azure botocore/1.26.10', 'Content-MD5': 'etuhG7Lm5129OI2qgLwdMw==', 'Expect': '100-continue'}, 'body': &lt;s3transfer.utils.ReadFileChunk object at 0x7efd9dd1fdd8&gt;, 'url': 'http://s3g:9878/erasure/small_file', 'context': {'client_region': 'us-west-1', 'client_config': &lt;botocore.config.Config object at 0x7efd9dddca20&gt;, 'has_streaming_input': True, 'auth_type': None, 'signing': {'bucket': 'erasure'}}}
2024-01-02 11:38:49,010 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.PutObject: calling handler &lt;function signal_not_transferring at 0x7efda2469158&gt;
2024-01-02 11:38:49,010 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.PutObject: calling handler &lt;bound method RequestSigner.handler of &lt;botocore.signers.RequestSigner object at 0x7efd9dddc9e8&gt;&gt;
2024-01-02 11:38:49,010 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event choose-signer.s3.PutObject: calling handler &lt;bound method S3EndpointSetter.set_signer of &lt;botocore.utils.S3EndpointSetter object at 0x7efd9ddac1d0&gt;&gt;
2024-01-02 11:38:49,010 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event choose-signer.s3.PutObject: calling handler &lt;function set_operation_specific_signer at 0x7efd9ff407b8&gt;
2024-01-02 11:38:49,010 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-sign.s3.PutObject: calling handler &lt;bound method S3EndpointSetter.set_endpoint of &lt;botocore.utils.S3EndpointSetter object at 0x7efd9ddac1d0&gt;&gt;
2024-01-02 11:38:49,010 - ThreadPoolExecutor-0_0 - botocore.utils - DEBUG - Using S3 path style addressing.
2024-01-02 11:38:49,011 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - Calculating signature using v4 auth.
2024-01-02 11:38:49,011 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - CanonicalRequest:
PUT
/erasure/small_file

content-md5:etuhG7Lm5129OI2qgLwdMw==
host:s3g:9878
x-amz-content-sha256:664881475fc55a59bb39edb4256dbdd3ed8795a516f2761448745af8f8a7b15a
x-amz-date:20240102T113849Z

content-md5;host;x-amz-content-sha256;x-amz-date
664881475fc55a59bb39edb4256dbdd3ed8795a516f2761448745af8f8a7b15a
2024-01-02 11:38:49,011 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - StringToSign:
AWS4-HMAC-SHA256
20240102T113849Z
20240102/us-west-1/s3/aws4_request
63d0a8e80cb4128f41cd8199a4a2b197dfc0ffbb2d92f2cb79f14e888e959b74
2024-01-02 11:38:49,011 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - Signature:
623db86fd688cac84eddb36b27e6714aa396e00800d551ecb0c4c712edea6230
2024-01-02 11:38:49,012 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.PutObject: calling handler &lt;function signal_transferring at 0x7efda24691e0&gt;
2024-01-02 11:38:49,012 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.PutObject: calling handler &lt;function add_retry_headers at 0x7efd9ff46730&gt;
2024-01-02 11:38:49,012 - ThreadPoolExecutor-0_0 - botocore.endpoint - DEBUG - Sending http request: &lt;AWSPreparedRequest stream_output=False, method=PUT, url=http://s3g:9878/erasure/small_file, headers={'User-Agent': b'aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1053-azure botocore/1.26.10', 'Content-MD5': b'etuhG7Lm5129OI2qgLwdMw==', 'Expect': b'100-continue', 'X-Amz-Date': b'20240102T113849Z', 'X-Amz-Content-SHA256': b'664881475fc55a59bb39edb4256dbdd3ed8795a516f2761448745af8f8a7b15a', 'Authorization': b'AWS4-HMAC-SHA256 Credential=dlfknslnfslf/20240102/us-west-1/s3/aws4_request, SignedHeaders=content-md5;host;x-amz-content-sha256;x-amz-date, Signature=623db86fd688cac84eddb36b27e6714aa396e00800d551ecb0c4c712edea6230', 'amz-sdk-invocation-id': b'4dd7a033-f9c7-4e19-992f-401f6dbb44ac', 'amz-sdk-request': b'attempt=1', 'Content-Length': '1000000'}&gt;
2024-01-02 11:38:49,013 - ThreadPoolExecutor-0_0 - urllib3.connectionpool - DEBUG - Starting new HTTP connection (1): s3g:9878
2024-01-02 11:38:49,014 - ThreadPoolExecutor-0_0 - botocore.awsrequest - DEBUG - Waiting for 100 Continue response.
2024-01-02 11:38:49,015 - ThreadPoolExecutor-0_0 - botocore.awsrequest - DEBUG - 100 Continue response seen, now sending request body.
Completed 256.0 KiB/976.6 KiB (10.5 MiB/s) with 1 file(s) remaining
Completed 512.0 KiB/976.6 KiB (19.8 MiB/s) with 1 file(s) remaining
Completed 768.0 KiB/976.6 KiB (26.0 MiB/s) with 1 file(s) remaining
2024-01-02 11:38:49,083 - ThreadPoolExecutor-0_0 - urllib3.connectionpool - DEBUG - http://s3g:9878 "PUT /erasure/small_file HTTP/1.1" 200 0
2024-01-02 11:38:49,084 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response headers: {'Date': 'Tue, 02 Jan 2024 11:38:49 GMT', 'Cache-Control': 'no-cache', 'Expires': 'Tue, 02 Jan 2024 11:38:49 GMT', 'Pragma': 'no-cache', 'Content-Type': 'text/plain;charset=utf-8', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'X-FRAME-OPTIONS': 'SAMEORIGIN', 'ETag': '"7adba11bb2e6e75dbd388daa80bc1d33"', 'Server': 'Ozone', 'x-amz-id-2': 'SVLSyFOKbT', 'x-amz-request-id': 'a45f2ec3-add3-4bae-8d0a-e784cc4a7b46', 'Content-Length': '0'}
2024-01-02 11:38:49,084 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response body:
b''
2024-01-02 11:38:49,085 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.PutObject: calling handler &lt;botocore.retryhandler.RetryHandler object at 0x7efd9dddcda0&gt;
2024-01-02 11:38:49,085 - ThreadPoolExecutor-0_0 - botocore.retryhandler - DEBUG - No retry needed.
2024-01-02 11:38:49,085 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.PutObject: calling handler &lt;bound method S3RegionRedirector.redirect_from_error of &lt;botocore.utils.S3RegionRedirector object at 0x7efd9dddcd68&gt;&gt;
2024-01-02 11:38:49,085 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event after-call.s3.PutObject: calling handler &lt;function enhance_error_msg at 0x7efd9e46f598&gt;
Completed 976.6 KiB/976.6 KiB (11.9 MiB/s) with 1 file(s) remaining
2024-01-02 11:38:49,085 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
upload: ../../tmp/small_file to s3://erasure/small_file            
2024-01-02 11:38:49,086 - Thread-1 - awscli.customizations.s3.results - DEBUG - Shutdown request received in result processing thread, shutting down result thread.</msg>
<status status="PASS" starttime="20240102 11:38:49.141" endtime="20240102 11:38:49.142"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:38:49.143" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:38:49.142" endtime="20240102 11:38:49.143"/>
</kw>
<status status="PASS" starttime="20240102 11:38:48.613" endtime="20240102 11:38:49.143"/>
</kw>
<msg timestamp="20240102 11:38:49.143" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:38:48.613" endtime="20240102 11:38:49.143"/>
</kw>
<msg timestamp="20240102 11:38:49.144" level="INFO">${output} = 2024-01-02 11:38:48,950 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1053-azure botocore/1.26.10
2024-01-02 11:38:48,950 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20240102 11:38:48.612" endtime="20240102 11:38:49.144"/>
</kw>
<msg timestamp="20240102 11:38:49.144" level="INFO">${result} = 2024-01-02 11:38:48,950 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1053-azure botocore/1.26.10
2024-01-02 11:38:48,950 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20240102 11:38:48.612" endtime="20240102 11:38:49.144"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>(?i)Response header.*ETag':\ '"${file_md5_checksum}"'</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20240102 11:38:49.144" endtime="20240102 11:38:49.145"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20240102 11:38:48.594" endtime="20240102 11:38:49.145"/>
</test>
<test id="s1-s1-s14-t16" name="Download small file end expect ETag (MD5) in a response header" line="216">
<kw name="Execute" library="os">
<var>${file_md5_checksum}</var>
<arg>md5sum /tmp/small_file | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:38:49.149" level="INFO">Running command 'md5sum /tmp/small_file | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:38:49.153" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:38:49.153" level="INFO">${output} = 7adba11bb2e6e75dbd388daa80bc1d33</msg>
<status status="PASS" starttime="20240102 11:38:49.147" endtime="20240102 11:38:49.153"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:38:49.154" level="INFO">7adba11bb2e6e75dbd388daa80bc1d33</msg>
<status status="PASS" starttime="20240102 11:38:49.153" endtime="20240102 11:38:49.154"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:38:49.154" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:38:49.154" endtime="20240102 11:38:49.154"/>
</kw>
<status status="PASS" starttime="20240102 11:38:49.147" endtime="20240102 11:38:49.154"/>
</kw>
<msg timestamp="20240102 11:38:49.154" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:38:49.147" endtime="20240102 11:38:49.154"/>
</kw>
<msg timestamp="20240102 11:38:49.155" level="INFO">${file_md5_checksum} = 7adba11bb2e6e75dbd388daa80bc1d33</msg>
<status status="PASS" starttime="20240102 11:38:49.146" endtime="20240102 11:38:49.155"/>
</kw>
<kw name="Execute AWSS3CliDebug" library="commonawslib">
<var>${result}</var>
<arg>cp s3://${BUCKET}/small_file /tmp/small_file_downloaded</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws --debug s3 --endpoint ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:38:49.158" level="INFO">Running command 'aws --debug s3 --endpoint http://s3g:9878 cp s3://erasure/small_file /tmp/small_file_downloaded 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:38:49.649" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:38:49.649" level="INFO">${output} = 2024-01-02 11:38:49,500 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1053-azure botocore/1.26.10
2024-01-02 11:38:49,500 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20240102 11:38:49.156" endtime="20240102 11:38:49.649"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:38:49.651" level="INFO">2024-01-02 11:38:49,500 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1053-azure botocore/1.26.10
2024-01-02 11:38:49,500 - MainThread - awscli.clidriver - DEBUG - Arguments entered to CLI: ['--debug', 's3', '--endpoint', 'http://s3g:9878', 'cp', 's3://erasure/small_file', '/tmp/small_file_downloaded']
2024-01-02 11:38:49,501 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function add_scalar_parsers at 0x7f81e659a9d8&gt;
2024-01-02 11:38:49,501 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function register_uri_param_handler at 0x7f81e738e730&gt;
2024-01-02 11:38:49,501 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function inject_assume_role_provider_cache at 0x7f81e73bdae8&gt;
2024-01-02 11:38:49,501 - MainThread - botocore.utils - DEBUG - IMDS ENDPOINT: http://169.254.169.254/
2024-01-02 11:38:49,504 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function attach_history_handler at 0x7f81e66c6400&gt;
2024-01-02 11:38:49,505 - MainThread - botocore.hooks - DEBUG - Event building-command-table.s3: calling handler &lt;function add_waiters at 0x7f81e65a9048&gt;
2024-01-02 11:38:49,505 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.s3.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f81ee2a9710&gt;
2024-01-02 11:38:49,505 - MainThread - botocore.hooks - DEBUG - Event building-command-table.cp: calling handler &lt;function add_waiters at 0x7f81e65a9048&gt;
2024-01-02 11:38:49,507 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.paths: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f81ee2a9710&gt;
2024-01-02 11:38:49,507 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.dryrun: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f81ee2a9710&gt;
2024-01-02 11:38:49,507 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f81e73912b0&gt;
2024-01-02 11:38:49,508 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.quiet: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f81ee2a9710&gt;
2024-01-02 11:38:49,508 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f81e73912b0&gt;
2024-01-02 11:38:49,508 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f81ee2a9710&gt;
2024-01-02 11:38:49,508 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.acl: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f81ee2a9710&gt;
2024-01-02 11:38:49,508 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.follow-symlinks: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f81ee2a9710&gt;
2024-01-02 11:38:49,508 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f81e73912b0&gt;
2024-01-02 11:38:49,508 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f81ee2a9710&gt;
2024-01-02 11:38:49,508 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f81ee2a9710&gt;
2024-01-02 11:38:49,509 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f81ee2a9710&gt;
2024-01-02 11:38:49,509 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-key: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f81ee2a9710&gt;
2024-01-02 11:38:49,509 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-kms-key-id: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f81ee2a9710&gt;
2024-01-02 11:38:49,509 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-copy-source: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f81ee2a9710&gt;
2024-01-02 11:38:49,509 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-copy-source-key: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f81ee2a9710&gt;
2024-01-02 11:38:49,509 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.storage-class: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f81ee2a9710&gt;
2024-01-02 11:38:49,509 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.grants: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f81ee2a9710&gt;
2024-01-02 11:38:49,509 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.website-redirect: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f81ee2a9710&gt;
2024-01-02 11:38:49,509 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-type: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f81ee2a9710&gt;
2024-01-02 11:38:49,510 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.cache-control: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f81ee2a9710&gt;
2024-01-02 11:38:49,510 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-disposition: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f81ee2a9710&gt;
2024-01-02 11:38:49,510 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-encoding: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f81ee2a9710&gt;
2024-01-02 11:38:49,510 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-language: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f81ee2a9710&gt;
2024-01-02 11:38:49,510 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.expires: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f81ee2a9710&gt;
2024-01-02 11:38:49,510 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.source-region: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f81ee2a9710&gt;
2024-01-02 11:38:49,510 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.only-show-errors: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f81ee2a9710&gt;
2024-01-02 11:38:49,510 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f81e73912b0&gt;
2024-01-02 11:38:49,510 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f81ee2a9710&gt;
2024-01-02 11:38:49,511 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.page-size: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f81ee2a9710&gt;
2024-01-02 11:38:49,511 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.ignore-glacier-warnings: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f81ee2a9710&gt;
2024-01-02 11:38:49,511 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f81e73912b0&gt;
2024-01-02 11:38:49,511 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.force-glacier-transfer: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f81ee2a9710&gt;
2024-01-02 11:38:49,511 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f81e73912b0&gt;
2024-01-02 11:38:49,511 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.request-payer: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f81ee2a9710&gt;
2024-01-02 11:38:49,511 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.metadata: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f81ee2a9710&gt;
2024-01-02 11:38:49,511 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.metadata-directive: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f81ee2a9710&gt;
2024-01-02 11:38:49,511 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.expected-size: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f81ee2a9710&gt;
2024-01-02 11:38:49,512 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f81ee2a9710&gt;
2024-01-02 11:38:49,512 - MainThread - botocore.credentials - DEBUG - Looking for credentials via: env
2024-01-02 11:38:49,512 - MainThread - botocore.credentials - INFO - Found credentials in environment variables.
2024-01-02 11:38:49,512 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/endpoints.json
2024-01-02 11:38:49,525 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/sdk-default-configuration.json
2024-01-02 11:38:49,526 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7f81e8052378&gt;
2024-01-02 11:38:49,526 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/s3/2006-03-01/service-2.json
2024-01-02 11:38:49,536 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7f81e832c2f0&gt;
2024-01-02 11:38:49,536 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7f81e832c0d0&gt;
2024-01-02 11:38:49,536 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2024-01-02 11:38:49,538 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2024-01-02 11:38:49,539 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/_retry.json
2024-01-02 11:38:49,539 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2024-01-02 11:38:49,540 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2024-01-02 11:38:49,540 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7f81e8052378&gt;
2024-01-02 11:38:49,541 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7f81e832c2f0&gt;
2024-01-02 11:38:49,541 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7f81e832c0d0&gt;
2024-01-02 11:38:49,541 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2024-01-02 11:38:49,543 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2024-01-02 11:38:49,544 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2024-01-02 11:38:49,545 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2024-01-02 11:38:49,545 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7f81e8052378&gt;
2024-01-02 11:38:49,546 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7f81e832c2f0&gt;
2024-01-02 11:38:49,546 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7f81e832c0d0&gt;
2024-01-02 11:38:49,546 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2024-01-02 11:38:49,548 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2024-01-02 11:38:49,549 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2024-01-02 11:38:49,550 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2024-01-02 11:38:49,550 - MainThread - awscli.customizations.s3.s3handler - DEBUG - Using a multipart threshold of 8388608 and a part size of 8388608
2024-01-02 11:38:49,551 - MainThread - botocore.hooks - DEBUG - Event before-parameter-build.s3.HeadObject: calling handler &lt;function sse_md5 at 0x7f81e806bae8&gt;
2024-01-02 11:38:49,551 - MainThread - botocore.hooks - DEBUG - Event before-parameter-build.s3.HeadObject: calling handler &lt;function validate_bucket_name at 0x7f81e806ba60&gt;
2024-01-02 11:38:49,551 - MainThread - botocore.hooks - DEBUG - Event before-parameter-build.s3.HeadObject: calling handler &lt;bound method S3RegionRedirector.redirect_from_cache of &lt;botocore.utils.S3RegionRedirector object at 0x7f81e5e3f320&gt;&gt;
2024-01-02 11:38:49,551 - MainThread - botocore.hooks - DEBUG - Event before-parameter-build.s3.HeadObject: calling handler &lt;bound method S3ArnParamHandler.handle_arn of &lt;botocore.utils.S3ArnParamHandler object at 0x7f81e5e3f6d8&gt;&gt;
2024-01-02 11:38:49,551 - MainThread - botocore.hooks - DEBUG - Event before-parameter-build.s3.HeadObject: calling handler &lt;function generate_idempotent_uuid at 0x7f81e806b8c8&gt;
2024-01-02 11:38:49,551 - MainThread - botocore.hooks - DEBUG - Event before-call.s3.HeadObject: calling handler &lt;function add_expect_header at 0x7f81e806bd90&gt;
2024-01-02 11:38:49,551 - MainThread - botocore.hooks - DEBUG - Event before-call.s3.HeadObject: calling handler &lt;bound method S3RegionRedirector.set_request_url of &lt;botocore.utils.S3RegionRedirector object at 0x7f81e5e3f320&gt;&gt;
2024-01-02 11:38:49,551 - MainThread - botocore.hooks - DEBUG - Event before-call.s3.HeadObject: calling handler &lt;function add_recursion_detection_header at 0x7f81e806b598&gt;
2024-01-02 11:38:49,551 - MainThread - botocore.hooks - DEBUG - Event before-call.s3.HeadObject: calling handler &lt;function inject_api_version_header_if_needed at 0x7f81e80710d0&gt;
2024-01-02 11:38:49,552 - MainThread - botocore.endpoint - DEBUG - Making request for OperationModel(name=HeadObject) with params: {'url_path': '/erasure/small_file', 'query_string': {}, 'method': 'HEAD', 'headers': {'User-Agent': 'aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1053-azure botocore/1.26.10'}, 'body': b'', 'url': 'http://s3g:9878/erasure/small_file', 'context': {'client_region': 'us-west-1', 'client_config': &lt;botocore.config.Config object at 0x7f81e5eeef98&gt;, 'has_streaming_input': False, 'auth_type': None, 'signing': {'bucket': 'erasure'}}}
2024-01-02 11:38:49,552 - MainThread - botocore.hooks - DEBUG - Event request-created.s3.HeadObject: calling handler &lt;bound method RequestSigner.handler of &lt;botocore.signers.RequestSigner object at 0x7f81e5eeef60&gt;&gt;
2024-01-02 11:38:49,552 - MainThread - botocore.hooks - DEBUG - Event choose-signer.s3.HeadObject: calling handler &lt;bound method S3EndpointSetter.set_signer of &lt;botocore.utils.S3EndpointSetter object at 0x7f81e5e3f748&gt;&gt;
2024-01-02 11:38:49,552 - MainThread - botocore.hooks - DEBUG - Event choose-signer.s3.HeadObject: calling handler &lt;function set_operation_specific_signer at 0x7f81e806b7b8&gt;
2024-01-02 11:38:49,552 - MainThread - botocore.hooks - DEBUG - Event before-sign.s3.HeadObject: calling handler &lt;bound method S3EndpointSetter.set_endpoint of &lt;botocore.utils.S3EndpointSetter object at 0x7f81e5e3f748&gt;&gt;
2024-01-02 11:38:49,552 - MainThread - botocore.utils - DEBUG - Using S3 path style addressing.
2024-01-02 11:38:49,553 - MainThread - botocore.auth - DEBUG - Calculating signature using v4 auth.
2024-01-02 11:38:49,553 - MainThread - botocore.auth - DEBUG - CanonicalRequest:
HEAD
/erasure/small_file

host:s3g:9878
x-amz-content-sha256:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
x-amz-date:20240102T113849Z

host;x-amz-content-sha256;x-amz-date
e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
2024-01-02 11:38:49,553 - MainThread - botocore.auth - DEBUG - StringToSign:
AWS4-HMAC-SHA256
20240102T113849Z
20240102/us-west-1/s3/aws4_request
74290df794d14150a297362de9d7d5746b8aeab493392c53b166137a0488b7d2
2024-01-02 11:38:49,553 - MainThread - botocore.auth - DEBUG - Signature:
53525e4a69681ae470faac71a2b769877b52310354fbc203c57e977e174d2fe4
2024-01-02 11:38:49,553 - MainThread - botocore.hooks - DEBUG - Event request-created.s3.HeadObject: calling handler &lt;function add_retry_headers at 0x7f81e8071730&gt;
2024-01-02 11:38:49,553 - MainThread - botocore.endpoint - DEBUG - Sending http request: &lt;AWSPreparedRequest stream_output=False, method=HEAD, url=http://s3g:9878/erasure/small_file, headers={'User-Agent': b'aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1053-azure botocore/1.26.10', 'X-Amz-Date': b'20240102T113849Z', 'X-Amz-Content-SHA256': b'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855', 'Authorization': b'AWS4-HMAC-SHA256 Credential=dlfknslnfslf/20240102/us-west-1/s3/aws4_request, SignedHeaders=host;x-amz-content-sha256;x-amz-date, Signature=53525e4a69681ae470faac71a2b769877b52310354fbc203c57e977e174d2fe4', 'amz-sdk-invocation-id': b'dd078e65-c845-4d6b-bfb3-9e7583296b41', 'amz-sdk-request': b'attempt=1'}&gt;
2024-01-02 11:38:49,554 - MainThread - urllib3.connectionpool - DEBUG - Starting new HTTP connection (1): s3g:9878
2024-01-02 11:38:49,561 - MainThread - urllib3.connectionpool - DEBUG - http://s3g:9878 "HEAD /erasure/small_file HTTP/1.1" 200 0
2024-01-02 11:38:49,562 - MainThread - botocore.parsers - DEBUG - Response headers: {'Date': 'Tue, 02 Jan 2024 11:38:49 GMT', 'Cache-Control': 'no-cache', 'Expires': 'Tue, 02 Jan 2024 11:38:49 GMT', 'Pragma': 'no-cache', 'Content-Type': 'binary/octet-stream', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'X-FRAME-OPTIONS': 'SAMEORIGIN', 'ETag': '"7adba11bb2e6e75dbd388daa80bc1d33"', 'Last-Modified': 'Tue, 02 Jan 2024 11:38:49 GMT', 'Server': 'Ozone', 'x-amz-id-2': 'YAsgTZIsg', 'x-amz-request-id': 'ae89d948-9394-4dfc-b45c-c32314ae543e', 'Content-Length': '1000000'}
2024-01-02 11:38:49,562 - MainThread - botocore.parsers - DEBUG - Response body:
b''
2024-01-02 11:38:49,563 - MainThread - botocore.hooks - DEBUG - Event needs-retry.s3.HeadObject: calling handler &lt;botocore.retryhandler.RetryHandler object at 0x7f81e5e3f358&gt;
2024-01-02 11:38:49,563 - MainThread - botocore.retryhandler - DEBUG - No retry needed.
2024-01-02 11:38:49,563 - MainThread - botocore.hooks - DEBUG - Event needs-retry.s3.HeadObject: calling handler &lt;bound method S3RegionRedirector.redirect_from_error of &lt;botocore.utils.S3RegionRedirector object at 0x7f81e5e3f320&gt;&gt;
2024-01-02 11:38:49,563 - MainThread - botocore.hooks - DEBUG - Event after-call.s3.HeadObject: calling handler &lt;function enhance_error_msg at 0x7f81e659a598&gt;
2024-01-02 11:38:49,564 - MainThread - s3transfer.utils - DEBUG - Acquiring 0
2024-01-02 11:38:49,565 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - DownloadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f81e5e66898&gt;}) about to wait for the following futures []
2024-01-02 11:38:49,565 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - DownloadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f81e5e66898&gt;}) done waiting for dependent futures
2024-01-02 11:38:49,565 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - Executing task DownloadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f81e5e66898&gt;}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7f81e5f07828&gt;, 'config': &lt;s3transfer.manager.TransferConfig object at 0x7f81e5e3f978&gt;, 'osutil': &lt;s3transfer.utils.OSUtils object at 0x7f81e5e3f9e8&gt;, 'request_executor': &lt;s3transfer.futures.BoundedExecutor object at 0x7f81e5e3fb70&gt;, 'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f81e5e66898&gt;, 'io_executor': &lt;s3transfer.futures.BoundedExecutor object at 0x7f81e5e3ff60&gt;}
2024-01-02 11:38:49,566 - ThreadPoolExecutor-1_0 - s3transfer.futures - DEBUG - Submitting task ImmediatelyWriteIOGetObjectTask(transfer_id=0, {'bucket': 'erasure', 'key': 'small_file', 'extra_args': {}}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f81e5e3fb70&gt; for transfer request: 0.
2024-01-02 11:38:49,566 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Acquiring 0
2024-01-02 11:38:49,566 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - ImmediatelyWriteIOGetObjectTask(transfer_id=0, {'bucket': 'erasure', 'key': 'small_file', 'extra_args': {}}) about to wait for the following futures []
2024-01-02 11:38:49,566 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - ImmediatelyWriteIOGetObjectTask(transfer_id=0, {'bucket': 'erasure', 'key': 'small_file', 'extra_args': {}}) done waiting for dependent futures
2024-01-02 11:38:49,567 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task ImmediatelyWriteIOGetObjectTask(transfer_id=0, {'bucket': 'erasure', 'key': 'small_file', 'extra_args': {}}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7f81e5f07828&gt;, 'bucket': 'erasure', 'key': 'small_file', 'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f81e5e66be0&gt;, 'extra_args': {}, 'callbacks': [functools.partial(&lt;bound method BaseSubscriber.on_progress of &lt;awscli.customizations.s3.utils.ProvideSizeSubscriber object at 0x7f81e5e66ba8&gt;&gt;, future=&lt;s3transfer.futures.TransferFuture object at 0x7f81e5e66898&gt;), functools.partial(&lt;bound method BaseSubscriber.on_progress of &lt;awscli.customizations.s3.utils.DirectoryCreatorSubscriber object at 0x7f81e5e66a90&gt;&gt;, future=&lt;s3transfer.futures.TransferFuture object at 0x7f81e5e66898&gt;), functools.partial(&lt;bound method BaseSubscriber.on_progress of &lt;awscli.customizations.s3.utils.ProvideLastModifiedTimeSubscriber object at 0x7f81e5e66ac8&gt;&gt;, future=&lt;s3transfer.futures.TransferFuture object at 0x7f81e5e66898&gt;), functools.partial(&lt;bound method BaseResultSubscriber.on_progress of &lt;awscli.customizations.s3.results.DownloadResultSubscriber object at 0x7f81e5e66f98&gt;&gt;, future=&lt;s3transfer.futures.TransferFuture object at 0x7f81e5e66898&gt;)], 'max_attempts': 5, 'download_output_manager': &lt;s3transfer.download.DownloadFilenameOutputManager object at 0x7f81e5e669e8&gt;, 'io_chunksize': 262144, 'bandwidth_limiter': None}
2024-01-02 11:38:49,567 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;function sse_md5 at 0x7f81e806bae8&gt;
2024-01-02 11:38:49,567 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;function validate_bucket_name at 0x7f81e806ba60&gt;
2024-01-02 11:38:49,567 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2024-01-02 11:38:49,567 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;bound method S3RegionRedirector.redirect_from_cache of &lt;botocore.utils.S3RegionRedirector object at 0x7f81e5f07d68&gt;&gt;
2024-01-02 11:38:49,567 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;bound method S3ArnParamHandler.handle_arn of &lt;botocore.utils.S3ArnParamHandler object at 0x7f81e5ed7160&gt;&gt;
2024-01-02 11:38:49,567 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;function generate_idempotent_uuid at 0x7f81e806b8c8&gt;
2024-01-02 11:38:49,568 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.GetObject: calling handler &lt;function add_expect_header at 0x7f81e806bd90&gt;
2024-01-02 11:38:49,568 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.GetObject: calling handler &lt;bound method S3RegionRedirector.set_request_url of &lt;botocore.utils.S3RegionRedirector object at 0x7f81e5f07d68&gt;&gt;
2024-01-02 11:38:49,568 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.GetObject: calling handler &lt;function add_recursion_detection_header at 0x7f81e806b598&gt;
2024-01-02 11:38:49,568 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.GetObject: calling handler &lt;function inject_api_version_header_if_needed at 0x7f81e80710d0&gt;
2024-01-02 11:38:49,568 - ThreadPoolExecutor-0_0 - botocore.endpoint - DEBUG - Making request for OperationModel(name=GetObject) with params: {'url_path': '/erasure/small_file', 'query_string': {}, 'method': 'GET', 'headers': {'User-Agent': 'aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1053-azure botocore/1.26.10'}, 'body': b'', 'url': 'http://s3g:9878/erasure/small_file', 'context': {'client_region': 'us-west-1', 'client_config': &lt;botocore.config.Config object at 0x7f81e5f07a20&gt;, 'has_streaming_input': False, 'auth_type': None, 'signing': {'bucket': 'erasure'}}}
2024-01-02 11:38:49,569 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.GetObject: calling handler &lt;function signal_not_transferring at 0x7f81ea594158&gt;
2024-01-02 11:38:49,569 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.GetObject: calling handler &lt;bound method RequestSigner.handler of &lt;botocore.signers.RequestSigner object at 0x7f81e5f079e8&gt;&gt;
2024-01-02 11:38:49,569 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event choose-signer.s3.GetObject: calling handler &lt;bound method S3EndpointSetter.set_signer of &lt;botocore.utils.S3EndpointSetter object at 0x7f81e5ed71d0&gt;&gt;
2024-01-02 11:38:49,569 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event choose-signer.s3.GetObject: calling handler &lt;function set_operation_specific_signer at 0x7f81e806b7b8&gt;
2024-01-02 11:38:49,569 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-sign.s3.GetObject: calling handler &lt;bound method S3EndpointSetter.set_endpoint of &lt;botocore.utils.S3EndpointSetter object at 0x7f81e5ed71d0&gt;&gt;
2024-01-02 11:38:49,569 - ThreadPoolExecutor-0_0 - botocore.utils - DEBUG - Using S3 path style addressing.
2024-01-02 11:38:49,569 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - Calculating signature using v4 auth.
2024-01-02 11:38:49,569 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - CanonicalRequest:
GET
/erasure/small_file

host:s3g:9878
x-amz-content-sha256:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
x-amz-date:20240102T113849Z

host;x-amz-content-sha256;x-amz-date
e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
2024-01-02 11:38:49,570 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - StringToSign:
AWS4-HMAC-SHA256
20240102T113849Z
20240102/us-west-1/s3/aws4_request
ecd51ce4b8ec36d61f14a462d13ee28f87e609d27482b3b6d507b7bbbad0c8a7
2024-01-02 11:38:49,570 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - Signature:
10e946413815e4725315f5fa2f58f644ee04430a896c1caefd86a91ae19db57f
2024-01-02 11:38:49,570 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.GetObject: calling handler &lt;function signal_transferring at 0x7f81ea5941e0&gt;
2024-01-02 11:38:49,570 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.GetObject: calling handler &lt;function add_retry_headers at 0x7f81e8071730&gt;
2024-01-02 11:38:49,570 - ThreadPoolExecutor-0_0 - botocore.endpoint - DEBUG - Sending http request: &lt;AWSPreparedRequest stream_output=True, method=GET, url=http://s3g:9878/erasure/small_file, headers={'User-Agent': b'aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1053-azure botocore/1.26.10', 'X-Amz-Date': b'20240102T113849Z', 'X-Amz-Content-SHA256': b'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855', 'Authorization': b'AWS4-HMAC-SHA256 Credential=dlfknslnfslf/20240102/us-west-1/s3/aws4_request, SignedHeaders=host;x-amz-content-sha256;x-amz-date, Signature=10e946413815e4725315f5fa2f58f644ee04430a896c1caefd86a91ae19db57f', 'amz-sdk-invocation-id': b'11636bc1-4d40-4fee-a32c-7a99cba66e07', 'amz-sdk-request': b'attempt=1'}&gt;
2024-01-02 11:38:49,570 - ThreadPoolExecutor-0_0 - urllib3.connectionpool - DEBUG - Starting new HTTP connection (1): s3g:9878
2024-01-02 11:38:49,589 - ThreadPoolExecutor-0_0 - urllib3.connectionpool - DEBUG - http://s3g:9878 "GET /erasure/small_file HTTP/1.1" 200 1000000
2024-01-02 11:38:49,590 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response headers: {'Date': 'Tue, 02 Jan 2024 11:38:49 GMT', 'Cache-Control': 'no-cache', 'Expires': 'Tue, 02 Jan 2024 11:38:49 GMT', 'Pragma': 'no-cache', 'Content-Type': 'application/octet-stream', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'X-FRAME-OPTIONS': 'SAMEORIGIN', 'ETag': '"7adba11bb2e6e75dbd388daa80bc1d33"', 'Accept-Ranges': 'bytes', 'Last-Modified': 'Tue, 02 Jan 2024 11:38:49 GMT', 'Server': 'Ozone', 'x-amz-id-2': 'ELbe5wMr', 'x-amz-request-id': '495a77f2-1e13-4e8d-a35c-8e6026714829', 'Content-Length': '1000000'}
2024-01-02 11:38:49,590 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response body:
&lt;botocore.response.StreamingBody object at 0x7f81e4d19e80&gt;
2024-01-02 11:38:49,591 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.GetObject: calling handler &lt;botocore.retryhandler.RetryHandler object at 0x7f81e5f07da0&gt;
2024-01-02 11:38:49,591 - ThreadPoolExecutor-0_0 - botocore.retryhandler - DEBUG - No retry needed.
2024-01-02 11:38:49,591 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.GetObject: calling handler &lt;bound method S3RegionRedirector.redirect_from_error of &lt;botocore.utils.S3RegionRedirector object at 0x7f81e5f07d68&gt;&gt;
2024-01-02 11:38:49,592 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event after-call.s3.GetObject: calling handler &lt;function enhance_error_msg at 0x7f81e659a598&gt;
2024-01-02 11:38:49,592 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 0}) about to wait for the following futures []
Completed 256.0 KiB/976.6 KiB (9.9 MiB/s) with 1 file(s) remaining
2024-01-02 11:38:49,593 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 0}) done waiting for dependent futures
2024-01-02 11:38:49,593 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 0}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f81e5e66be0&gt;, 'offset': 0}
2024-01-02 11:38:49,593 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 262144}) about to wait for the following futures []
Completed 512.0 KiB/976.6 KiB (19.0 MiB/s) with 1 file(s) remaining
2024-01-02 11:38:49,594 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 262144}) done waiting for dependent futures
2024-01-02 11:38:49,594 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 262144}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f81e5e66be0&gt;, 'offset': 262144}
2024-01-02 11:38:49,594 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 524288}) about to wait for the following futures []
Completed 768.0 KiB/976.6 KiB (27.9 MiB/s) with 1 file(s) remaining
2024-01-02 11:38:49,594 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 524288}) done waiting for dependent futures
2024-01-02 11:38:49,594 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 524288}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f81e5e66be0&gt;, 'offset': 524288}
2024-01-02 11:38:49,595 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 786432}) about to wait for the following futures []
2024-01-02 11:38:49,595 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 786432}) done waiting for dependent futures
Completed 976.6 KiB/976.6 KiB (34.8 MiB/s) with 1 file(s) remaining
2024-01-02 11:38:49,595 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 786432}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f81e5e66be0&gt;, 'offset': 786432}
2024-01-02 11:38:49,595 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IORenameFileTask(transfer_id=0, {'final_filename': '/tmp/small_file_downloaded'}) about to wait for the following futures []
2024-01-02 11:38:49,595 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IORenameFileTask(transfer_id=0, {'final_filename': '/tmp/small_file_downloaded'}) done waiting for dependent futures
2024-01-02 11:38:49,595 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task IORenameFileTask(transfer_id=0, {'final_filename': '/tmp/small_file_downloaded'}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f81e5e66be0&gt;, 'final_filename': '/tmp/small_file_downloaded', 'osutil': &lt;s3transfer.utils.OSUtils object at 0x7f81e5e3f9e8&gt;}
2024-01-02 11:38:49,596 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
download: s3://erasure/small_file to ../../tmp/small_file_downloaded
2024-01-02 11:38:49,596 - Thread-1 - awscli.customizations.s3.results - DEBUG - Shutdown request received in result processing thread, shutting down result thread.</msg>
<status status="PASS" starttime="20240102 11:38:49.650" endtime="20240102 11:38:49.651"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:38:49.652" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:38:49.651" endtime="20240102 11:38:49.652"/>
</kw>
<status status="PASS" starttime="20240102 11:38:49.156" endtime="20240102 11:38:49.652"/>
</kw>
<msg timestamp="20240102 11:38:49.652" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:38:49.156" endtime="20240102 11:38:49.652"/>
</kw>
<msg timestamp="20240102 11:38:49.654" level="INFO">${output} = 2024-01-02 11:38:49,500 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1053-azure botocore/1.26.10
2024-01-02 11:38:49,500 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20240102 11:38:49.155" endtime="20240102 11:38:49.654"/>
</kw>
<msg timestamp="20240102 11:38:49.654" level="INFO">${result} = 2024-01-02 11:38:49,500 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1053-azure botocore/1.26.10
2024-01-02 11:38:49,500 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20240102 11:38:49.155" endtime="20240102 11:38:49.654"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>(?is)HEAD /${BUCKET}/small_file.*?Response headers.*?ETag': '"${file_md5_checksum}"'</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20240102 11:38:49.654" endtime="20240102 11:38:49.656"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>(?is)GET /${BUCKET}/small_file.*?Response headers.*?ETag':\ '"${file_md5_checksum}"'</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20240102 11:38:49.656" endtime="20240102 11:38:49.657"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<arg>rm s3://${BUCKET}/small_file</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:38:49.661" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 rm s3://erasure/small_file 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:38:50.087" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:38:50.087" level="INFO">${output} = delete: s3://erasure/small_file</msg>
<status status="PASS" starttime="20240102 11:38:49.659" endtime="20240102 11:38:50.087"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:38:50.088" level="INFO">delete: s3://erasure/small_file</msg>
<status status="PASS" starttime="20240102 11:38:50.087" endtime="20240102 11:38:50.088"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:38:50.088" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:38:50.088" endtime="20240102 11:38:50.088"/>
</kw>
<status status="PASS" starttime="20240102 11:38:49.659" endtime="20240102 11:38:50.089"/>
</kw>
<msg timestamp="20240102 11:38:50.089" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:38:49.658" endtime="20240102 11:38:50.089"/>
</kw>
<msg timestamp="20240102 11:38:50.089" level="INFO">${output} = delete: s3://erasure/small_file</msg>
<status status="PASS" starttime="20240102 11:38:49.658" endtime="20240102 11:38:50.089"/>
</kw>
<status status="PASS" starttime="20240102 11:38:49.657" endtime="20240102 11:38:50.089"/>
</kw>
<kw name="Execute" library="os">
<arg>rm /tmp/small_file_downloaded</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:38:50.092" level="INFO">Running command 'rm /tmp/small_file_downloaded 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:38:50.093" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:38:50.093" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240102 11:38:50.090" endtime="20240102 11:38:50.093"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:38:50.094" level="INFO"/>
<status status="PASS" starttime="20240102 11:38:50.094" endtime="20240102 11:38:50.094"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:38:50.095" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:38:50.094" endtime="20240102 11:38:50.095"/>
</kw>
<status status="PASS" starttime="20240102 11:38:50.090" endtime="20240102 11:38:50.095"/>
</kw>
<msg timestamp="20240102 11:38:50.095" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:38:50.090" endtime="20240102 11:38:50.095"/>
</kw>
<status status="PASS" starttime="20240102 11:38:50.089" endtime="20240102 11:38:50.095"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20240102 11:38:49.146" endtime="20240102 11:38:50.095"/>
</test>
<test id="s1-s1-s14-t17" name="Create key with custom etag metadata and expect it won't conflict with ETag response header of HEAD request" line="225">
<kw name="Execute" library="os">
<var>${file_md5_checksum}</var>
<arg>md5sum /tmp/small_file | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:38:50.099" level="INFO">Running command 'md5sum /tmp/small_file | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:38:50.102" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:38:50.102" level="INFO">${output} = 7adba11bb2e6e75dbd388daa80bc1d33</msg>
<status status="PASS" starttime="20240102 11:38:50.098" endtime="20240102 11:38:50.102"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:38:50.103" level="INFO">7adba11bb2e6e75dbd388daa80bc1d33</msg>
<status status="PASS" starttime="20240102 11:38:50.103" endtime="20240102 11:38:50.103"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:38:50.104" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:38:50.103" endtime="20240102 11:38:50.104"/>
</kw>
<status status="PASS" starttime="20240102 11:38:50.097" endtime="20240102 11:38:50.104"/>
</kw>
<msg timestamp="20240102 11:38:50.104" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:38:50.097" endtime="20240102 11:38:50.104"/>
</kw>
<msg timestamp="20240102 11:38:50.104" level="INFO">${file_md5_checksum} = 7adba11bb2e6e75dbd388daa80bc1d33</msg>
<status status="PASS" starttime="20240102 11:38:50.096" endtime="20240102 11:38:50.104"/>
</kw>
<kw name="Execute AWSS3CliDebug" library="commonawslib">
<arg>cp --metadata "ETag=custom-etag-value" /tmp/small_file s3://${BUCKET}/test_file</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws --debug s3 --endpoint ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:38:50.107" level="INFO">Running command 'aws --debug s3 --endpoint http://s3g:9878 cp --metadata "ETag=custom-etag-value" /tmp/small_file s3://erasure/test_file 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:38:50.716" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:38:50.716" level="INFO">${output} = 2024-01-02 11:38:50,453 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1053-azure botocore/1.26.10
2024-01-02 11:38:50,454 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20240102 11:38:50.106" endtime="20240102 11:38:50.716"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:38:50.717" level="INFO">2024-01-02 11:38:50,453 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1053-azure botocore/1.26.10
2024-01-02 11:38:50,454 - MainThread - awscli.clidriver - DEBUG - Arguments entered to CLI: ['--debug', 's3', '--endpoint', 'http://s3g:9878', 'cp', '--metadata', 'ETag=custom-etag-value', '/tmp/small_file', 's3://erasure/test_file']
2024-01-02 11:38:50,454 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function add_scalar_parsers at 0x7f09549289d8&gt;
2024-01-02 11:38:50,454 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function register_uri_param_handler at 0x7f095571c730&gt;
2024-01-02 11:38:50,454 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function inject_assume_role_provider_cache at 0x7f095574bae8&gt;
2024-01-02 11:38:50,455 - MainThread - botocore.utils - DEBUG - IMDS ENDPOINT: http://169.254.169.254/
2024-01-02 11:38:50,458 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function attach_history_handler at 0x7f0954a54400&gt;
2024-01-02 11:38:50,458 - MainThread - botocore.hooks - DEBUG - Event building-command-table.s3: calling handler &lt;function add_waiters at 0x7f0954937048&gt;
2024-01-02 11:38:50,459 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.s3.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f095c637710&gt;
2024-01-02 11:38:50,459 - MainThread - botocore.hooks - DEBUG - Event building-command-table.cp: calling handler &lt;function add_waiters at 0x7f0954937048&gt;
2024-01-02 11:38:50,460 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.paths: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f095c637710&gt;
2024-01-02 11:38:50,461 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.dryrun: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f095c637710&gt;
2024-01-02 11:38:50,461 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f095571f2b0&gt;
2024-01-02 11:38:50,461 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.quiet: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f095c637710&gt;
2024-01-02 11:38:50,461 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f095571f2b0&gt;
2024-01-02 11:38:50,461 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f095c637710&gt;
2024-01-02 11:38:50,461 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.acl: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f095c637710&gt;
2024-01-02 11:38:50,461 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.follow-symlinks: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f095c637710&gt;
2024-01-02 11:38:50,461 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f095571f2b0&gt;
2024-01-02 11:38:50,461 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f095c637710&gt;
2024-01-02 11:38:50,462 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f095c637710&gt;
2024-01-02 11:38:50,462 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f095c637710&gt;
2024-01-02 11:38:50,462 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-key: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f095c637710&gt;
2024-01-02 11:38:50,462 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-kms-key-id: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f095c637710&gt;
2024-01-02 11:38:50,462 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-copy-source: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f095c637710&gt;
2024-01-02 11:38:50,462 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-copy-source-key: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f095c637710&gt;
2024-01-02 11:38:50,462 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.storage-class: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f095c637710&gt;
2024-01-02 11:38:50,462 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.grants: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f095c637710&gt;
2024-01-02 11:38:50,463 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.website-redirect: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f095c637710&gt;
2024-01-02 11:38:50,463 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-type: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f095c637710&gt;
2024-01-02 11:38:50,463 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.cache-control: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f095c637710&gt;
2024-01-02 11:38:50,463 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-disposition: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f095c637710&gt;
2024-01-02 11:38:50,463 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-encoding: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f095c637710&gt;
2024-01-02 11:38:50,463 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-language: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f095c637710&gt;
2024-01-02 11:38:50,463 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.expires: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f095c637710&gt;
2024-01-02 11:38:50,463 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.source-region: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f095c637710&gt;
2024-01-02 11:38:50,464 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.only-show-errors: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f095c637710&gt;
2024-01-02 11:38:50,464 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f095571f2b0&gt;
2024-01-02 11:38:50,464 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f095c637710&gt;
2024-01-02 11:38:50,464 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.page-size: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f095c637710&gt;
2024-01-02 11:38:50,464 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.ignore-glacier-warnings: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f095c637710&gt;
2024-01-02 11:38:50,464 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f095571f2b0&gt;
2024-01-02 11:38:50,464 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.force-glacier-transfer: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f095c637710&gt;
2024-01-02 11:38:50,464 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f095571f2b0&gt;
2024-01-02 11:38:50,464 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.request-payer: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f095c637710&gt;
2024-01-02 11:38:50,465 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.metadata: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f095c637710&gt;
2024-01-02 11:38:50,465 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f095571f2b0&gt;
2024-01-02 11:38:50,465 - MainThread - awscli.argprocess - DEBUG - Parsing param --metadata as shorthand
2024-01-02 11:38:50,465 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.metadata-directive: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f095c637710&gt;
2024-01-02 11:38:50,465 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.expected-size: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f095c637710&gt;
2024-01-02 11:38:50,465 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f095c637710&gt;
2024-01-02 11:38:50,465 - MainThread - botocore.credentials - DEBUG - Looking for credentials via: env
2024-01-02 11:38:50,466 - MainThread - botocore.credentials - INFO - Found credentials in environment variables.
2024-01-02 11:38:50,466 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/endpoints.json
2024-01-02 11:38:50,480 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/sdk-default-configuration.json
2024-01-02 11:38:50,480 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7f09563e1378&gt;
2024-01-02 11:38:50,481 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/s3/2006-03-01/service-2.json
2024-01-02 11:38:50,491 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7f09566ba2f0&gt;
2024-01-02 11:38:50,491 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7f09566ba0d0&gt;
2024-01-02 11:38:50,491 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2024-01-02 11:38:50,493 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2024-01-02 11:38:50,494 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/_retry.json
2024-01-02 11:38:50,495 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2024-01-02 11:38:50,495 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2024-01-02 11:38:50,496 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7f09563e1378&gt;
2024-01-02 11:38:50,497 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7f09566ba2f0&gt;
2024-01-02 11:38:50,497 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7f09566ba0d0&gt;
2024-01-02 11:38:50,497 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2024-01-02 11:38:50,499 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2024-01-02 11:38:50,500 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2024-01-02 11:38:50,501 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2024-01-02 11:38:50,501 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7f09563e1378&gt;
2024-01-02 11:38:50,502 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7f09566ba2f0&gt;
2024-01-02 11:38:50,502 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7f09566ba0d0&gt;
2024-01-02 11:38:50,503 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2024-01-02 11:38:50,505 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2024-01-02 11:38:50,505 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2024-01-02 11:38:50,506 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2024-01-02 11:38:50,506 - MainThread - awscli.customizations.s3.s3handler - DEBUG - Using a multipart threshold of 8388608 and a part size of 8388608
2024-01-02 11:38:50,507 - MainThread - s3transfer.utils - DEBUG - Acquiring 0
2024-01-02 11:38:50,508 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - UploadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f09541da9e8&gt;}) about to wait for the following futures []
2024-01-02 11:38:50,508 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - UploadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f09541da9e8&gt;}) done waiting for dependent futures
2024-01-02 11:38:50,508 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - Executing task UploadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f09541da9e8&gt;}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7f0954296898&gt;, 'config': &lt;s3transfer.manager.TransferConfig object at 0x7f09541cf9e8&gt;, 'osutil': &lt;s3transfer.utils.OSUtils object at 0x7f09541cfa58&gt;, 'request_executor': &lt;s3transfer.futures.BoundedExecutor object at 0x7f09541cfbe0&gt;, 'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f09541da9e8&gt;}
2024-01-02 11:38:50,509 - ThreadPoolExecutor-1_0 - s3transfer.futures - DEBUG - Submitting task PutObjectTask(transfer_id=0, {'bucket': 'erasure', 'key': 'test_file', 'extra_args': {'Metadata': {'ETag': 'custom-etag-value'}}}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f09541cfbe0&gt; for transfer request: 0.
2024-01-02 11:38:50,509 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Acquiring 0
2024-01-02 11:38:50,509 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - PutObjectTask(transfer_id=0, {'bucket': 'erasure', 'key': 'test_file', 'extra_args': {'Metadata': {'ETag': 'custom-etag-value'}}}) about to wait for the following futures []
2024-01-02 11:38:50,509 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - PutObjectTask(transfer_id=0, {'bucket': 'erasure', 'key': 'test_file', 'extra_args': {'Metadata': {'ETag': 'custom-etag-value'}}}) done waiting for dependent futures
2024-01-02 11:38:50,510 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task PutObjectTask(transfer_id=0, {'bucket': 'erasure', 'key': 'test_file', 'extra_args': {'Metadata': {'ETag': 'custom-etag-value'}}}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7f0954296898&gt;, 'fileobj': &lt;s3transfer.utils.ReadFileChunk object at 0x7f09541daa58&gt;, 'bucket': 'erasure', 'key': 'test_file', 'extra_args': {'Metadata': {'ETag': 'custom-etag-value'}}}
2024-01-02 11:38:50,510 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function validate_ascii_metadata at 0x7f09563fd6a8&gt;
2024-01-02 11:38:50,510 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function sse_md5 at 0x7f09563f9ae8&gt;
2024-01-02 11:38:50,510 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function convert_body_to_file_like_object at 0x7f09563fdf28&gt;
2024-01-02 11:38:50,510 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function validate_bucket_name at 0x7f09563f9a60&gt;
2024-01-02 11:38:50,510 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;bound method S3RegionRedirector.redirect_from_cache of &lt;botocore.utils.S3RegionRedirector object at 0x7f0954296dd8&gt;&gt;
2024-01-02 11:38:50,510 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;bound method S3ArnParamHandler.handle_arn of &lt;botocore.utils.S3ArnParamHandler object at 0x7f09542671d0&gt;&gt;
2024-01-02 11:38:50,511 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function generate_idempotent_uuid at 0x7f09563f98c8&gt;
2024-01-02 11:38:50,511 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2024-01-02 11:38:50,511 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;function conditionally_calculate_md5 at 0x7f0956da00d0&gt;
2024-01-02 11:38:50,513 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;function add_expect_header at 0x7f09563f9d90&gt;
2024-01-02 11:38:50,513 - ThreadPoolExecutor-0_0 - botocore.handlers - DEBUG - Adding expect 100 continue header to request.
2024-01-02 11:38:50,513 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;bound method S3RegionRedirector.set_request_url of &lt;botocore.utils.S3RegionRedirector object at 0x7f0954296dd8&gt;&gt;
2024-01-02 11:38:50,513 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;function add_recursion_detection_header at 0x7f09563f9598&gt;
2024-01-02 11:38:50,513 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;function inject_api_version_header_if_needed at 0x7f09563ff0d0&gt;
2024-01-02 11:38:50,513 - ThreadPoolExecutor-0_0 - botocore.endpoint - DEBUG - Making request for OperationModel(name=PutObject) with params: {'url_path': '/erasure/test_file', 'query_string': {}, 'method': 'PUT', 'headers': {'x-amz-meta-ETag': 'custom-etag-value', 'User-Agent': 'aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1053-azure botocore/1.26.10', 'Content-MD5': 'etuhG7Lm5129OI2qgLwdMw==', 'Expect': '100-continue'}, 'body': &lt;s3transfer.utils.ReadFileChunk object at 0x7f09541daa58&gt;, 'url': 'http://s3g:9878/erasure/test_file', 'context': {'client_region': 'us-west-1', 'client_config': &lt;botocore.config.Config object at 0x7f0954296a90&gt;, 'has_streaming_input': True, 'auth_type': None, 'signing': {'bucket': 'erasure'}}}
2024-01-02 11:38:50,514 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.PutObject: calling handler &lt;function signal_not_transferring at 0x7f0958922158&gt;
2024-01-02 11:38:50,514 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.PutObject: calling handler &lt;bound method RequestSigner.handler of &lt;botocore.signers.RequestSigner object at 0x7f0954296a58&gt;&gt;
2024-01-02 11:38:50,514 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event choose-signer.s3.PutObject: calling handler &lt;bound method S3EndpointSetter.set_signer of &lt;botocore.utils.S3EndpointSetter object at 0x7f0954267240&gt;&gt;
2024-01-02 11:38:50,514 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event choose-signer.s3.PutObject: calling handler &lt;function set_operation_specific_signer at 0x7f09563f97b8&gt;
2024-01-02 11:38:50,514 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-sign.s3.PutObject: calling handler &lt;bound method S3EndpointSetter.set_endpoint of &lt;botocore.utils.S3EndpointSetter object at 0x7f0954267240&gt;&gt;
2024-01-02 11:38:50,514 - ThreadPoolExecutor-0_0 - botocore.utils - DEBUG - Using S3 path style addressing.
2024-01-02 11:38:50,516 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - Calculating signature using v4 auth.
2024-01-02 11:38:50,516 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - CanonicalRequest:
PUT
/erasure/test_file

content-md5:etuhG7Lm5129OI2qgLwdMw==
host:s3g:9878
x-amz-content-sha256:664881475fc55a59bb39edb4256dbdd3ed8795a516f2761448745af8f8a7b15a
x-amz-date:20240102T113850Z
x-amz-meta-etag:custom-etag-value

content-md5;host;x-amz-content-sha256;x-amz-date;x-amz-meta-etag
664881475fc55a59bb39edb4256dbdd3ed8795a516f2761448745af8f8a7b15a
2024-01-02 11:38:50,516 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - StringToSign:
AWS4-HMAC-SHA256
20240102T113850Z
20240102/us-west-1/s3/aws4_request
ae746456e7450f42c7722dec80796a2d23332b64271d6170a0f77474b6b429c5
2024-01-02 11:38:50,516 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - Signature:
ed46384f080935def9df6f33213f5ace0ce109c16a85c26cef801543034bcfbe
2024-01-02 11:38:50,516 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.PutObject: calling handler &lt;function signal_transferring at 0x7f09589221e0&gt;
2024-01-02 11:38:50,516 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.PutObject: calling handler &lt;function add_retry_headers at 0x7f09563ff730&gt;
2024-01-02 11:38:50,516 - ThreadPoolExecutor-0_0 - botocore.endpoint - DEBUG - Sending http request: &lt;AWSPreparedRequest stream_output=False, method=PUT, url=http://s3g:9878/erasure/test_file, headers={'x-amz-meta-ETag': b'custom-etag-value', 'User-Agent': b'aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1053-azure botocore/1.26.10', 'Content-MD5': b'etuhG7Lm5129OI2qgLwdMw==', 'Expect': b'100-continue', 'X-Amz-Date': b'20240102T113850Z', 'X-Amz-Content-SHA256': b'664881475fc55a59bb39edb4256dbdd3ed8795a516f2761448745af8f8a7b15a', 'Authorization': b'AWS4-HMAC-SHA256 Credential=dlfknslnfslf/20240102/us-west-1/s3/aws4_request, SignedHeaders=content-md5;host;x-amz-content-sha256;x-amz-date;x-amz-meta-etag, Signature=ed46384f080935def9df6f33213f5ace0ce109c16a85c26cef801543034bcfbe', 'amz-sdk-invocation-id': b'e2a3b5a4-566b-4d36-9062-ec896a5ad03d', 'amz-sdk-request': b'attempt=1', 'Content-Length': '1000000'}&gt;
2024-01-02 11:38:50,517 - ThreadPoolExecutor-0_0 - urllib3.connectionpool - DEBUG - Starting new HTTP connection (1): s3g:9878
2024-01-02 11:38:50,518 - ThreadPoolExecutor-0_0 - botocore.awsrequest - DEBUG - Waiting for 100 Continue response.
2024-01-02 11:38:50,520 - ThreadPoolExecutor-0_0 - botocore.awsrequest - DEBUG - 100 Continue response seen, now sending request body.
Completed 256.0 KiB/976.6 KiB (11.3 MiB/s) with 1 file(s) remaining
Completed 512.0 KiB/976.6 KiB (21.6 MiB/s) with 1 file(s) remaining
Completed 768.0 KiB/976.6 KiB (31.3 MiB/s) with 1 file(s) remaining
2024-01-02 11:38:50,640 - ThreadPoolExecutor-0_0 - urllib3.connectionpool - DEBUG - http://s3g:9878 "PUT /erasure/test_file HTTP/1.1" 200 0
2024-01-02 11:38:50,641 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response headers: {'Date': 'Tue, 02 Jan 2024 11:38:50 GMT', 'Cache-Control': 'no-cache', 'Expires': 'Tue, 02 Jan 2024 11:38:50 GMT', 'Pragma': 'no-cache', 'Content-Type': 'text/plain;charset=utf-8', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'X-FRAME-OPTIONS': 'SAMEORIGIN', 'ETag': '"7adba11bb2e6e75dbd388daa80bc1d33"', 'Server': 'Ozone', 'x-amz-id-2': 'D3zkdXxHHD6aaH', 'x-amz-request-id': '7ed5a98b-5d8b-47d0-a273-93b2e82a3cd4', 'Content-Length': '0'}
2024-01-02 11:38:50,641 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response body:
b''
2024-01-02 11:38:50,642 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.PutObject: calling handler &lt;botocore.retryhandler.RetryHandler object at 0x7f0954296e10&gt;
2024-01-02 11:38:50,642 - ThreadPoolExecutor-0_0 - botocore.retryhandler - DEBUG - No retry needed.
2024-01-02 11:38:50,642 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.PutObject: calling handler &lt;bound method S3RegionRedirector.redirect_from_error of &lt;botocore.utils.S3RegionRedirector object at 0x7f0954296dd8&gt;&gt;
2024-01-02 11:38:50,642 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event after-call.s3.PutObject: calling handler &lt;function enhance_error_msg at 0x7f0954928598&gt;
Completed 976.6 KiB/976.6 KiB (7.2 MiB/s) with 1 file(s) remaining 
upload: ../../tmp/small_file to s3://erasure/test_file             
2024-01-02 11:38:50,642 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2024-01-02 11:38:50,643 - Thread-1 - awscli.customizations.s3.results - DEBUG - Shutdown request received in result processing thread, shutting down result thread.</msg>
<status status="PASS" starttime="20240102 11:38:50.716" endtime="20240102 11:38:50.717"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:38:50.718" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:38:50.717" endtime="20240102 11:38:50.718"/>
</kw>
<status status="PASS" starttime="20240102 11:38:50.105" endtime="20240102 11:38:50.718"/>
</kw>
<msg timestamp="20240102 11:38:50.718" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:38:50.105" endtime="20240102 11:38:50.718"/>
</kw>
<msg timestamp="20240102 11:38:50.719" level="INFO">${output} = 2024-01-02 11:38:50,453 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1053-azure botocore/1.26.10
2024-01-02 11:38:50,454 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20240102 11:38:50.105" endtime="20240102 11:38:50.719"/>
</kw>
<status status="PASS" starttime="20240102 11:38:50.104" endtime="20240102 11:38:50.719"/>
</kw>
<kw name="Execute AWSS3CliDebug" library="commonawslib">
<var>${result}</var>
<arg>cp s3://${BUCKET}/test_file /tmp/test_file_downloaded</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws --debug s3 --endpoint ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:38:50.722" level="INFO">Running command 'aws --debug s3 --endpoint http://s3g:9878 cp s3://erasure/test_file /tmp/test_file_downloaded 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:38:51.194" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:38:51.194" level="INFO">${output} = 2024-01-02 11:38:51,057 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1053-azure botocore/1.26.10
2024-01-02 11:38:51,058 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20240102 11:38:50.721" endtime="20240102 11:38:51.194"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:38:51.195" level="INFO">2024-01-02 11:38:51,057 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1053-azure botocore/1.26.10
2024-01-02 11:38:51,058 - MainThread - awscli.clidriver - DEBUG - Arguments entered to CLI: ['--debug', 's3', '--endpoint', 'http://s3g:9878', 'cp', 's3://erasure/test_file', '/tmp/test_file_downloaded']
2024-01-02 11:38:51,058 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function add_scalar_parsers at 0x7fa45591b9d8&gt;
2024-01-02 11:38:51,058 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function register_uri_param_handler at 0x7fa45670f730&gt;
2024-01-02 11:38:51,058 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function inject_assume_role_provider_cache at 0x7fa45673eae8&gt;
2024-01-02 11:38:51,059 - MainThread - botocore.utils - DEBUG - IMDS ENDPOINT: http://169.254.169.254/
2024-01-02 11:38:51,062 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function attach_history_handler at 0x7fa455a47400&gt;
2024-01-02 11:38:51,062 - MainThread - botocore.hooks - DEBUG - Event building-command-table.s3: calling handler &lt;function add_waiters at 0x7fa45592a048&gt;
2024-01-02 11:38:51,063 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.s3.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa45d62a710&gt;
2024-01-02 11:38:51,063 - MainThread - botocore.hooks - DEBUG - Event building-command-table.cp: calling handler &lt;function add_waiters at 0x7fa45592a048&gt;
2024-01-02 11:38:51,064 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.paths: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa45d62a710&gt;
2024-01-02 11:38:51,065 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.dryrun: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa45d62a710&gt;
2024-01-02 11:38:51,065 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7fa4567122b0&gt;
2024-01-02 11:38:51,065 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.quiet: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa45d62a710&gt;
2024-01-02 11:38:51,065 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7fa4567122b0&gt;
2024-01-02 11:38:51,065 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa45d62a710&gt;
2024-01-02 11:38:51,065 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.acl: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa45d62a710&gt;
2024-01-02 11:38:51,065 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.follow-symlinks: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa45d62a710&gt;
2024-01-02 11:38:51,065 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7fa4567122b0&gt;
2024-01-02 11:38:51,066 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa45d62a710&gt;
2024-01-02 11:38:51,066 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa45d62a710&gt;
2024-01-02 11:38:51,066 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa45d62a710&gt;
2024-01-02 11:38:51,066 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-key: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa45d62a710&gt;
2024-01-02 11:38:51,066 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-kms-key-id: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa45d62a710&gt;
2024-01-02 11:38:51,066 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-copy-source: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa45d62a710&gt;
2024-01-02 11:38:51,066 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-copy-source-key: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa45d62a710&gt;
2024-01-02 11:38:51,066 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.storage-class: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa45d62a710&gt;
2024-01-02 11:38:51,067 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.grants: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa45d62a710&gt;
2024-01-02 11:38:51,067 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.website-redirect: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa45d62a710&gt;
2024-01-02 11:38:51,067 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-type: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa45d62a710&gt;
2024-01-02 11:38:51,067 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.cache-control: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa45d62a710&gt;
2024-01-02 11:38:51,067 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-disposition: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa45d62a710&gt;
2024-01-02 11:38:51,067 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-encoding: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa45d62a710&gt;
2024-01-02 11:38:51,067 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-language: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa45d62a710&gt;
2024-01-02 11:38:51,068 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.expires: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa45d62a710&gt;
2024-01-02 11:38:51,068 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.source-region: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa45d62a710&gt;
2024-01-02 11:38:51,068 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.only-show-errors: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa45d62a710&gt;
2024-01-02 11:38:51,068 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7fa4567122b0&gt;
2024-01-02 11:38:51,068 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa45d62a710&gt;
2024-01-02 11:38:51,068 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.page-size: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa45d62a710&gt;
2024-01-02 11:38:51,068 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.ignore-glacier-warnings: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa45d62a710&gt;
2024-01-02 11:38:51,068 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7fa4567122b0&gt;
2024-01-02 11:38:51,068 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.force-glacier-transfer: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa45d62a710&gt;
2024-01-02 11:38:51,069 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7fa4567122b0&gt;
2024-01-02 11:38:51,069 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.request-payer: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa45d62a710&gt;
2024-01-02 11:38:51,069 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.metadata: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa45d62a710&gt;
2024-01-02 11:38:51,069 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.metadata-directive: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa45d62a710&gt;
2024-01-02 11:38:51,069 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.expected-size: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa45d62a710&gt;
2024-01-02 11:38:51,069 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa45d62a710&gt;
2024-01-02 11:38:51,069 - MainThread - botocore.credentials - DEBUG - Looking for credentials via: env
2024-01-02 11:38:51,069 - MainThread - botocore.credentials - INFO - Found credentials in environment variables.
2024-01-02 11:38:51,070 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/endpoints.json
2024-01-02 11:38:51,083 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/sdk-default-configuration.json
2024-01-02 11:38:51,083 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7fa4573d3378&gt;
2024-01-02 11:38:51,084 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/s3/2006-03-01/service-2.json
2024-01-02 11:38:51,093 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7fa4576ad2f0&gt;
2024-01-02 11:38:51,093 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7fa4576ad0d0&gt;
2024-01-02 11:38:51,094 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2024-01-02 11:38:51,096 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2024-01-02 11:38:51,097 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/_retry.json
2024-01-02 11:38:51,097 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2024-01-02 11:38:51,098 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2024-01-02 11:38:51,098 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7fa4573d3378&gt;
2024-01-02 11:38:51,099 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7fa4576ad2f0&gt;
2024-01-02 11:38:51,099 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7fa4576ad0d0&gt;
2024-01-02 11:38:51,099 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2024-01-02 11:38:51,101 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2024-01-02 11:38:51,102 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2024-01-02 11:38:51,103 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2024-01-02 11:38:51,103 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7fa4573d3378&gt;
2024-01-02 11:38:51,104 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7fa4576ad2f0&gt;
2024-01-02 11:38:51,104 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7fa4576ad0d0&gt;
2024-01-02 11:38:51,104 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2024-01-02 11:38:51,106 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2024-01-02 11:38:51,107 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2024-01-02 11:38:51,108 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2024-01-02 11:38:51,108 - MainThread - awscli.customizations.s3.s3handler - DEBUG - Using a multipart threshold of 8388608 and a part size of 8388608
2024-01-02 11:38:51,109 - MainThread - botocore.hooks - DEBUG - Event before-parameter-build.s3.HeadObject: calling handler &lt;function sse_md5 at 0x7fa4573ecae8&gt;
2024-01-02 11:38:51,109 - MainThread - botocore.hooks - DEBUG - Event before-parameter-build.s3.HeadObject: calling handler &lt;function validate_bucket_name at 0x7fa4573eca60&gt;
2024-01-02 11:38:51,109 - MainThread - botocore.hooks - DEBUG - Event before-parameter-build.s3.HeadObject: calling handler &lt;bound method S3RegionRedirector.redirect_from_cache of &lt;botocore.utils.S3RegionRedirector object at 0x7fa4551c0320&gt;&gt;
2024-01-02 11:38:51,109 - MainThread - botocore.hooks - DEBUG - Event before-parameter-build.s3.HeadObject: calling handler &lt;bound method S3ArnParamHandler.handle_arn of &lt;botocore.utils.S3ArnParamHandler object at 0x7fa4551c06d8&gt;&gt;
2024-01-02 11:38:51,109 - MainThread - botocore.hooks - DEBUG - Event before-parameter-build.s3.HeadObject: calling handler &lt;function generate_idempotent_uuid at 0x7fa4573ec8c8&gt;
2024-01-02 11:38:51,109 - MainThread - botocore.hooks - DEBUG - Event before-call.s3.HeadObject: calling handler &lt;function add_expect_header at 0x7fa4573ecd90&gt;
2024-01-02 11:38:51,109 - MainThread - botocore.hooks - DEBUG - Event before-call.s3.HeadObject: calling handler &lt;bound method S3RegionRedirector.set_request_url of &lt;botocore.utils.S3RegionRedirector object at 0x7fa4551c0320&gt;&gt;
2024-01-02 11:38:51,109 - MainThread - botocore.hooks - DEBUG - Event before-call.s3.HeadObject: calling handler &lt;function add_recursion_detection_header at 0x7fa4573ec598&gt;
2024-01-02 11:38:51,109 - MainThread - botocore.hooks - DEBUG - Event before-call.s3.HeadObject: calling handler &lt;function inject_api_version_header_if_needed at 0x7fa4573f20d0&gt;
2024-01-02 11:38:51,109 - MainThread - botocore.endpoint - DEBUG - Making request for OperationModel(name=HeadObject) with params: {'url_path': '/erasure/test_file', 'query_string': {}, 'method': 'HEAD', 'headers': {'User-Agent': 'aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1053-azure botocore/1.26.10'}, 'body': b'', 'url': 'http://s3g:9878/erasure/test_file', 'context': {'client_region': 'us-west-1', 'client_config': &lt;botocore.config.Config object at 0x7fa45526ff98&gt;, 'has_streaming_input': False, 'auth_type': None, 'signing': {'bucket': 'erasure'}}}
2024-01-02 11:38:51,110 - MainThread - botocore.hooks - DEBUG - Event request-created.s3.HeadObject: calling handler &lt;bound method RequestSigner.handler of &lt;botocore.signers.RequestSigner object at 0x7fa45526ff60&gt;&gt;
2024-01-02 11:38:51,110 - MainThread - botocore.hooks - DEBUG - Event choose-signer.s3.HeadObject: calling handler &lt;bound method S3EndpointSetter.set_signer of &lt;botocore.utils.S3EndpointSetter object at 0x7fa4551c0748&gt;&gt;
2024-01-02 11:38:51,110 - MainThread - botocore.hooks - DEBUG - Event choose-signer.s3.HeadObject: calling handler &lt;function set_operation_specific_signer at 0x7fa4573ec7b8&gt;
2024-01-02 11:38:51,110 - MainThread - botocore.hooks - DEBUG - Event before-sign.s3.HeadObject: calling handler &lt;bound method S3EndpointSetter.set_endpoint of &lt;botocore.utils.S3EndpointSetter object at 0x7fa4551c0748&gt;&gt;
2024-01-02 11:38:51,110 - MainThread - botocore.utils - DEBUG - Using S3 path style addressing.
2024-01-02 11:38:51,111 - MainThread - botocore.auth - DEBUG - Calculating signature using v4 auth.
2024-01-02 11:38:51,111 - MainThread - botocore.auth - DEBUG - CanonicalRequest:
HEAD
/erasure/test_file

host:s3g:9878
x-amz-content-sha256:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
x-amz-date:20240102T113851Z

host;x-amz-content-sha256;x-amz-date
e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
2024-01-02 11:38:51,111 - MainThread - botocore.auth - DEBUG - StringToSign:
AWS4-HMAC-SHA256
20240102T113851Z
20240102/us-west-1/s3/aws4_request
97f71365dc3ab05cf620a89888305c697aa3590b0b9fd084d5b9c69af435298c
2024-01-02 11:38:51,111 - MainThread - botocore.auth - DEBUG - Signature:
ac19326101712846bf97489f7bada5a2853066df30e5dfaa8d80c61feb87dfe3
2024-01-02 11:38:51,111 - MainThread - botocore.hooks - DEBUG - Event request-created.s3.HeadObject: calling handler &lt;function add_retry_headers at 0x7fa4573f2730&gt;
2024-01-02 11:38:51,111 - MainThread - botocore.endpoint - DEBUG - Sending http request: &lt;AWSPreparedRequest stream_output=False, method=HEAD, url=http://s3g:9878/erasure/test_file, headers={'User-Agent': b'aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1053-azure botocore/1.26.10', 'X-Amz-Date': b'20240102T113851Z', 'X-Amz-Content-SHA256': b'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855', 'Authorization': b'AWS4-HMAC-SHA256 Credential=dlfknslnfslf/20240102/us-west-1/s3/aws4_request, SignedHeaders=host;x-amz-content-sha256;x-amz-date, Signature=ac19326101712846bf97489f7bada5a2853066df30e5dfaa8d80c61feb87dfe3', 'amz-sdk-invocation-id': b'6e6e9392-e38f-46b8-b259-3623663728ef', 'amz-sdk-request': b'attempt=1'}&gt;
2024-01-02 11:38:51,112 - MainThread - urllib3.connectionpool - DEBUG - Starting new HTTP connection (1): s3g:9878
2024-01-02 11:38:51,120 - MainThread - urllib3.connectionpool - DEBUG - http://s3g:9878 "HEAD /erasure/test_file HTTP/1.1" 200 0
2024-01-02 11:38:51,120 - MainThread - botocore.parsers - DEBUG - Response headers: {'Date': 'Tue, 02 Jan 2024 11:38:51 GMT', 'Cache-Control': 'no-cache', 'Expires': 'Tue, 02 Jan 2024 11:38:51 GMT', 'Pragma': 'no-cache', 'Content-Type': 'binary/octet-stream', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'X-FRAME-OPTIONS': 'SAMEORIGIN', 'ETag': '"7adba11bb2e6e75dbd388daa80bc1d33"', 'Last-Modified': 'Tue, 02 Jan 2024 11:38:50 GMT', 'x-amz-meta-etag': 'custom-etag-value', 'Server': 'Ozone', 'x-amz-id-2': '7cbPVkwLH3v8', 'x-amz-request-id': '16b1c594-ff0a-46c1-95b2-e80deb355397', 'Content-Length': '1000000'}
2024-01-02 11:38:51,121 - MainThread - botocore.parsers - DEBUG - Response body:
b''
2024-01-02 11:38:51,121 - MainThread - botocore.hooks - DEBUG - Event needs-retry.s3.HeadObject: calling handler &lt;botocore.retryhandler.RetryHandler object at 0x7fa4551c0358&gt;
2024-01-02 11:38:51,121 - MainThread - botocore.retryhandler - DEBUG - No retry needed.
2024-01-02 11:38:51,121 - MainThread - botocore.hooks - DEBUG - Event needs-retry.s3.HeadObject: calling handler &lt;bound method S3RegionRedirector.redirect_from_error of &lt;botocore.utils.S3RegionRedirector object at 0x7fa4551c0320&gt;&gt;
2024-01-02 11:38:51,122 - MainThread - botocore.hooks - DEBUG - Event after-call.s3.HeadObject: calling handler &lt;function enhance_error_msg at 0x7fa45591b598&gt;
2024-01-02 11:38:51,123 - MainThread - s3transfer.utils - DEBUG - Acquiring 0
2024-01-02 11:38:51,123 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - DownloadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7fa4551e7898&gt;}) about to wait for the following futures []
2024-01-02 11:38:51,123 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - DownloadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7fa4551e7898&gt;}) done waiting for dependent futures
2024-01-02 11:38:51,124 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - Executing task DownloadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7fa4551e7898&gt;}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7fa455288828&gt;, 'config': &lt;s3transfer.manager.TransferConfig object at 0x7fa4551c0978&gt;, 'osutil': &lt;s3transfer.utils.OSUtils object at 0x7fa4551c09e8&gt;, 'request_executor': &lt;s3transfer.futures.BoundedExecutor object at 0x7fa4551c0b70&gt;, 'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7fa4551e7898&gt;, 'io_executor': &lt;s3transfer.futures.BoundedExecutor object at 0x7fa4551c0f60&gt;}
2024-01-02 11:38:51,124 - ThreadPoolExecutor-1_0 - s3transfer.futures - DEBUG - Submitting task ImmediatelyWriteIOGetObjectTask(transfer_id=0, {'bucket': 'erasure', 'key': 'test_file', 'extra_args': {}}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7fa4551c0b70&gt; for transfer request: 0.
2024-01-02 11:38:51,124 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Acquiring 0
2024-01-02 11:38:51,124 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - ImmediatelyWriteIOGetObjectTask(transfer_id=0, {'bucket': 'erasure', 'key': 'test_file', 'extra_args': {}}) about to wait for the following futures []
2024-01-02 11:38:51,124 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - ImmediatelyWriteIOGetObjectTask(transfer_id=0, {'bucket': 'erasure', 'key': 'test_file', 'extra_args': {}}) done waiting for dependent futures
2024-01-02 11:38:51,125 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task ImmediatelyWriteIOGetObjectTask(transfer_id=0, {'bucket': 'erasure', 'key': 'test_file', 'extra_args': {}}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7fa455288828&gt;, 'bucket': 'erasure', 'key': 'test_file', 'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7fa4551e7c50&gt;, 'extra_args': {}, 'callbacks': [functools.partial(&lt;bound method BaseSubscriber.on_progress of &lt;awscli.customizations.s3.utils.ProvideSizeSubscriber object at 0x7fa4551e7ba8&gt;&gt;, future=&lt;s3transfer.futures.TransferFuture object at 0x7fa4551e7898&gt;), functools.partial(&lt;bound method BaseSubscriber.on_progress of &lt;awscli.customizations.s3.utils.DirectoryCreatorSubscriber object at 0x7fa4551e7a90&gt;&gt;, future=&lt;s3transfer.futures.TransferFuture object at 0x7fa4551e7898&gt;), functools.partial(&lt;bound method BaseSubscriber.on_progress of &lt;awscli.customizations.s3.utils.ProvideLastModifiedTimeSubscriber object at 0x7fa4551e7ac8&gt;&gt;, future=&lt;s3transfer.futures.TransferFuture object at 0x7fa4551e7898&gt;), functools.partial(&lt;bound method BaseResultSubscriber.on_progress of &lt;awscli.customizations.s3.results.DownloadResultSubscriber object at 0x7fa4551e7f98&gt;&gt;, future=&lt;s3transfer.futures.TransferFuture object at 0x7fa4551e7898&gt;)], 'max_attempts': 5, 'download_output_manager': &lt;s3transfer.download.DownloadFilenameOutputManager object at 0x7fa4551e79e8&gt;, 'io_chunksize': 262144, 'bandwidth_limiter': None}
2024-01-02 11:38:51,125 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;function sse_md5 at 0x7fa4573ecae8&gt;
2024-01-02 11:38:51,125 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;function validate_bucket_name at 0x7fa4573eca60&gt;
2024-01-02 11:38:51,125 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;bound method S3RegionRedirector.redirect_from_cache of &lt;botocore.utils.S3RegionRedirector object at 0x7fa455288d68&gt;&gt;
2024-01-02 11:38:51,125 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;bound method S3ArnParamHandler.handle_arn of &lt;botocore.utils.S3ArnParamHandler object at 0x7fa455258160&gt;&gt;
2024-01-02 11:38:51,125 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;function generate_idempotent_uuid at 0x7fa4573ec8c8&gt;
2024-01-02 11:38:51,125 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.GetObject: calling handler &lt;function add_expect_header at 0x7fa4573ecd90&gt;
2024-01-02 11:38:51,126 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2024-01-02 11:38:51,126 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.GetObject: calling handler &lt;bound method S3RegionRedirector.set_request_url of &lt;botocore.utils.S3RegionRedirector object at 0x7fa455288d68&gt;&gt;
2024-01-02 11:38:51,126 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.GetObject: calling handler &lt;function add_recursion_detection_header at 0x7fa4573ec598&gt;
2024-01-02 11:38:51,126 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.GetObject: calling handler &lt;function inject_api_version_header_if_needed at 0x7fa4573f20d0&gt;
2024-01-02 11:38:51,126 - ThreadPoolExecutor-0_0 - botocore.endpoint - DEBUG - Making request for OperationModel(name=GetObject) with params: {'url_path': '/erasure/test_file', 'query_string': {}, 'method': 'GET', 'headers': {'User-Agent': 'aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1053-azure botocore/1.26.10'}, 'body': b'', 'url': 'http://s3g:9878/erasure/test_file', 'context': {'client_region': 'us-west-1', 'client_config': &lt;botocore.config.Config object at 0x7fa455288a20&gt;, 'has_streaming_input': False, 'auth_type': None, 'signing': {'bucket': 'erasure'}}}
2024-01-02 11:38:51,126 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.GetObject: calling handler &lt;function signal_not_transferring at 0x7fa459915158&gt;
2024-01-02 11:38:51,126 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.GetObject: calling handler &lt;bound method RequestSigner.handler of &lt;botocore.signers.RequestSigner object at 0x7fa4552889e8&gt;&gt;
2024-01-02 11:38:51,127 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event choose-signer.s3.GetObject: calling handler &lt;bound method S3EndpointSetter.set_signer of &lt;botocore.utils.S3EndpointSetter object at 0x7fa4552581d0&gt;&gt;
2024-01-02 11:38:51,127 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event choose-signer.s3.GetObject: calling handler &lt;function set_operation_specific_signer at 0x7fa4573ec7b8&gt;
2024-01-02 11:38:51,127 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-sign.s3.GetObject: calling handler &lt;bound method S3EndpointSetter.set_endpoint of &lt;botocore.utils.S3EndpointSetter object at 0x7fa4552581d0&gt;&gt;
2024-01-02 11:38:51,127 - ThreadPoolExecutor-0_0 - botocore.utils - DEBUG - Using S3 path style addressing.
2024-01-02 11:38:51,127 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - Calculating signature using v4 auth.
2024-01-02 11:38:51,127 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - CanonicalRequest:
GET
/erasure/test_file

host:s3g:9878
x-amz-content-sha256:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
x-amz-date:20240102T113851Z

host;x-amz-content-sha256;x-amz-date
e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
2024-01-02 11:38:51,127 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - StringToSign:
AWS4-HMAC-SHA256
20240102T113851Z
20240102/us-west-1/s3/aws4_request
1a53838695bf9bb371816c09548fca3434d0e8a6ab90d708cf899e0a2ad6c9bc
2024-01-02 11:38:51,127 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - Signature:
e672e5c0e7db9e47b2e513cfe7a22de835c03c60b210ce9f9914e3cbe5733968
2024-01-02 11:38:51,127 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.GetObject: calling handler &lt;function signal_transferring at 0x7fa4599151e0&gt;
2024-01-02 11:38:51,127 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.GetObject: calling handler &lt;function add_retry_headers at 0x7fa4573f2730&gt;
2024-01-02 11:38:51,128 - ThreadPoolExecutor-0_0 - botocore.endpoint - DEBUG - Sending http request: &lt;AWSPreparedRequest stream_output=True, method=GET, url=http://s3g:9878/erasure/test_file, headers={'User-Agent': b'aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1053-azure botocore/1.26.10', 'X-Amz-Date': b'20240102T113851Z', 'X-Amz-Content-SHA256': b'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855', 'Authorization': b'AWS4-HMAC-SHA256 Credential=dlfknslnfslf/20240102/us-west-1/s3/aws4_request, SignedHeaders=host;x-amz-content-sha256;x-amz-date, Signature=e672e5c0e7db9e47b2e513cfe7a22de835c03c60b210ce9f9914e3cbe5733968', 'amz-sdk-invocation-id': b'389ce71d-e06b-4a1e-b546-1c0bbb30f755', 'amz-sdk-request': b'attempt=1'}&gt;
2024-01-02 11:38:51,128 - ThreadPoolExecutor-0_0 - urllib3.connectionpool - DEBUG - Starting new HTTP connection (1): s3g:9878
2024-01-02 11:38:51,147 - ThreadPoolExecutor-0_0 - urllib3.connectionpool - DEBUG - http://s3g:9878 "GET /erasure/test_file HTTP/1.1" 200 1000000
2024-01-02 11:38:51,147 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response headers: {'Date': 'Tue, 02 Jan 2024 11:38:51 GMT', 'Cache-Control': 'no-cache', 'Expires': 'Tue, 02 Jan 2024 11:38:51 GMT', 'Pragma': 'no-cache', 'Content-Type': 'application/octet-stream', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'X-FRAME-OPTIONS': 'SAMEORIGIN', 'ETag': '"7adba11bb2e6e75dbd388daa80bc1d33"', 'Accept-Ranges': 'bytes', 'Last-Modified': 'Tue, 02 Jan 2024 11:38:50 GMT', 'Server': 'Ozone', 'x-amz-id-2': 'AuJfqtkuWFdk5', 'x-amz-request-id': '7d0b4153-8497-4036-8066-d97ba0da9934', 'Content-Length': '1000000'}
2024-01-02 11:38:51,148 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response body:
&lt;botocore.response.StreamingBody object at 0x7fa45401cef0&gt;
2024-01-02 11:38:51,149 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.GetObject: calling handler &lt;botocore.retryhandler.RetryHandler object at 0x7fa455288da0&gt;
2024-01-02 11:38:51,149 - ThreadPoolExecutor-0_0 - botocore.retryhandler - DEBUG - No retry needed.
2024-01-02 11:38:51,149 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.GetObject: calling handler &lt;bound method S3RegionRedirector.redirect_from_error of &lt;botocore.utils.S3RegionRedirector object at 0x7fa455288d68&gt;&gt;
2024-01-02 11:38:51,149 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event after-call.s3.GetObject: calling handler &lt;function enhance_error_msg at 0x7fa45591b598&gt;
2024-01-02 11:38:51,150 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 0}) about to wait for the following futures []
2024-01-02 11:38:51,150 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 0}) done waiting for dependent futures
2024-01-02 11:38:51,150 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 0}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7fa4551e7c50&gt;, 'offset': 0}
2024-01-02 11:38:51,151 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 262144}) about to wait for the following futures []
2024-01-02 11:38:51,151 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 262144}) done waiting for dependent futures
2024-01-02 11:38:51,151 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 262144}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7fa4551e7c50&gt;, 'offset': 262144}
2024-01-02 11:38:51,152 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 524288}) about to wait for the following futures []
2024-01-02 11:38:51,152 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 524288}) done waiting for dependent futures
2024-01-02 11:38:51,152 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 524288}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7fa4551e7c50&gt;, 'offset': 524288}
Completed 256.0 KiB/976.6 KiB (9.7 MiB/s) with 1 file(s) remaining
Completed 512.0 KiB/976.6 KiB (18.3 MiB/s) with 1 file(s) remaining
Completed 768.0 KiB/976.6 KiB (26.8 MiB/s) with 1 file(s) remaining
2024-01-02 11:38:51,153 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 786432}) about to wait for the following futures []
Completed 976.6 KiB/976.6 KiB (33.2 MiB/s) with 1 file(s) remaining
2024-01-02 11:38:51,153 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 786432}) done waiting for dependent futures
2024-01-02 11:38:51,153 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 786432}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7fa4551e7c50&gt;, 'offset': 786432}
2024-01-02 11:38:51,153 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IORenameFileTask(transfer_id=0, {'final_filename': '/tmp/test_file_downloaded'}) about to wait for the following futures []
2024-01-02 11:38:51,154 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IORenameFileTask(transfer_id=0, {'final_filename': '/tmp/test_file_downloaded'}) done waiting for dependent futures
2024-01-02 11:38:51,154 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task IORenameFileTask(transfer_id=0, {'final_filename': '/tmp/test_file_downloaded'}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7fa4551e7c50&gt;, 'final_filename': '/tmp/test_file_downloaded', 'osutil': &lt;s3transfer.utils.OSUtils object at 0x7fa4551c09e8&gt;}
download: s3://erasure/test_file to ../../tmp/test_file_downloaded 
2024-01-02 11:38:51,155 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2024-01-02 11:38:51,155 - Thread-1 - awscli.customizations.s3.results - DEBUG - Shutdown request received in result processing thread, shutting down result thread.</msg>
<status status="PASS" starttime="20240102 11:38:51.195" endtime="20240102 11:38:51.196"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:38:51.196" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:38:51.196" endtime="20240102 11:38:51.196"/>
</kw>
<status status="PASS" starttime="20240102 11:38:50.720" endtime="20240102 11:38:51.196"/>
</kw>
<msg timestamp="20240102 11:38:51.196" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:38:50.720" endtime="20240102 11:38:51.197"/>
</kw>
<msg timestamp="20240102 11:38:51.197" level="INFO">${output} = 2024-01-02 11:38:51,057 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1053-azure botocore/1.26.10
2024-01-02 11:38:51,058 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20240102 11:38:50.720" endtime="20240102 11:38:51.197"/>
</kw>
<msg timestamp="20240102 11:38:51.197" level="INFO">${result} = 2024-01-02 11:38:51,057 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1053-azure botocore/1.26.10
2024-01-02 11:38:51,058 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20240102 11:38:50.719" endtime="20240102 11:38:51.197"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<var>${match}</var>
<var>${ETag}</var>
<var>${etagCustom}</var>
<arg>${result}</arg>
<arg>HEAD /${BUCKET}/test_file\ .*?Response headers.*?ETag':\ '"(.*?)"'.*?x-amz-meta-etag':\ '(.*?)'</arg>
<arg>flags=DOTALL</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<msg timestamp="20240102 11:38:51.199" level="INFO">${match} = HEAD /erasure/test_file HTTP/1.1" 200 0
2024-01-02 11:38:51,120 - MainThread - botocore.parsers - DEBUG - Response headers: {'Date': 'Tue, 02 Jan 2024 11:38:51 GMT', 'Cache-Control': 'no-cache', 'Expi...</msg>
<msg timestamp="20240102 11:38:51.199" level="INFO">${ETag} = 7adba11bb2e6e75dbd388daa80bc1d33</msg>
<msg timestamp="20240102 11:38:51.199" level="INFO">${etagCustom} = custom-etag-value</msg>
<status status="PASS" starttime="20240102 11:38:51.198" endtime="20240102 11:38:51.199"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${ETag}</arg>
<arg>${file_md5_checksum}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20240102 11:38:51.199" endtime="20240102 11:38:51.199"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${etagCustom}</arg>
<arg>custom-etag-value</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20240102 11:38:51.199" endtime="20240102 11:38:51.200"/>
</kw>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<arg>${ETag}</arg>
<arg>${etagCustom}</arg>
<doc>Fails if objects are equal after converting them to strings.</doc>
<status status="PASS" starttime="20240102 11:38:51.200" endtime="20240102 11:38:51.200"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<arg>rm s3://${BUCKET}/test_file</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:38:51.203" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 rm s3://erasure/test_file 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:38:51.639" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:38:51.639" level="INFO">${output} = delete: s3://erasure/test_file</msg>
<status status="PASS" starttime="20240102 11:38:51.202" endtime="20240102 11:38:51.639"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:38:51.640" level="INFO">delete: s3://erasure/test_file</msg>
<status status="PASS" starttime="20240102 11:38:51.639" endtime="20240102 11:38:51.640"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:38:51.640" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:38:51.640" endtime="20240102 11:38:51.640"/>
</kw>
<status status="PASS" starttime="20240102 11:38:51.201" endtime="20240102 11:38:51.640"/>
</kw>
<msg timestamp="20240102 11:38:51.641" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:38:51.201" endtime="20240102 11:38:51.641"/>
</kw>
<msg timestamp="20240102 11:38:51.641" level="INFO">${output} = delete: s3://erasure/test_file</msg>
<status status="PASS" starttime="20240102 11:38:51.201" endtime="20240102 11:38:51.641"/>
</kw>
<status status="PASS" starttime="20240102 11:38:51.200" endtime="20240102 11:38:51.641"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -rf /tmp/small_file</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:38:51.644" level="INFO">Running command 'rm -rf /tmp/small_file 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:38:51.646" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:38:51.646" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240102 11:38:51.642" endtime="20240102 11:38:51.646"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:38:51.646" level="INFO"/>
<status status="PASS" starttime="20240102 11:38:51.646" endtime="20240102 11:38:51.646"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:38:51.647" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:38:51.647" endtime="20240102 11:38:51.647"/>
</kw>
<status status="PASS" starttime="20240102 11:38:51.642" endtime="20240102 11:38:51.647"/>
</kw>
<msg timestamp="20240102 11:38:51.647" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:38:51.641" endtime="20240102 11:38:51.647"/>
</kw>
<status status="PASS" starttime="20240102 11:38:51.641" endtime="20240102 11:38:51.647"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -rf /tmp/test_file_downloaded</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:38:51.650" level="INFO">Running command 'rm -rf /tmp/test_file_downloaded 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:38:51.651" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:38:51.651" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240102 11:38:51.648" endtime="20240102 11:38:51.651"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:38:51.652" level="INFO"/>
<status status="PASS" starttime="20240102 11:38:51.651" endtime="20240102 11:38:51.652"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:38:51.652" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:38:51.652" endtime="20240102 11:38:51.652"/>
</kw>
<status status="PASS" starttime="20240102 11:38:51.648" endtime="20240102 11:38:51.652"/>
</kw>
<msg timestamp="20240102 11:38:51.653" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:38:51.648" endtime="20240102 11:38:51.653"/>
</kw>
<status status="PASS" starttime="20240102 11:38:51.647" endtime="20240102 11:38:51.653"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20240102 11:38:50.096" endtime="20240102 11:38:51.653"/>
</test>
<test id="s1-s1-s14-t18" name="Create&amp;Download big file by multipart upload and expect ETag in a file download response" line="238">
<kw name="Execute" library="os">
<arg>head -c 10MB &lt;/dev/urandom &gt; /tmp/big_file</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:38:51.656" level="INFO">Running command 'head -c 10MB &lt;/dev/urandom &gt; /tmp/big_file'.</msg>
<msg timestamp="20240102 11:38:51.689" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:38:51.689" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240102 11:38:51.655" endtime="20240102 11:38:51.689"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:38:51.690" level="INFO"/>
<status status="PASS" starttime="20240102 11:38:51.690" endtime="20240102 11:38:51.690"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:38:51.691" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:38:51.690" endtime="20240102 11:38:51.691"/>
</kw>
<status status="PASS" starttime="20240102 11:38:51.655" endtime="20240102 11:38:51.691"/>
</kw>
<msg timestamp="20240102 11:38:51.691" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:38:51.654" endtime="20240102 11:38:51.691"/>
</kw>
<status status="PASS" starttime="20240102 11:38:51.654" endtime="20240102 11:38:51.691"/>
</kw>
<kw name="Execute AWSS3CliDebug" library="commonawslib">
<var>${result}</var>
<arg>cp /tmp/big_file s3://${BUCKET}/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws --debug s3 --endpoint ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:38:51.694" level="INFO">Running command 'aws --debug s3 --endpoint http://s3g:9878 cp /tmp/big_file s3://erasure/ 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:38:52.534" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:38:52.535" level="INFO">${output} = 2024-01-02 11:38:52,038 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1053-azure botocore/1.26.10
2024-01-02 11:38:52,038 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20240102 11:38:51.693" endtime="20240102 11:38:52.535"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:38:52.536" level="INFO">2024-01-02 11:38:52,038 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1053-azure botocore/1.26.10
2024-01-02 11:38:52,038 - MainThread - awscli.clidriver - DEBUG - Arguments entered to CLI: ['--debug', 's3', '--endpoint', 'http://s3g:9878', 'cp', '/tmp/big_file', 's3://erasure/']
2024-01-02 11:38:52,039 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function add_scalar_parsers at 0x7fc1286619d8&gt;
2024-01-02 11:38:52,039 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function register_uri_param_handler at 0x7fc129455730&gt;
2024-01-02 11:38:52,039 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function inject_assume_role_provider_cache at 0x7fc129484ae8&gt;
2024-01-02 11:38:52,040 - MainThread - botocore.utils - DEBUG - IMDS ENDPOINT: http://169.254.169.254/
2024-01-02 11:38:52,043 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function attach_history_handler at 0x7fc12878d400&gt;
2024-01-02 11:38:52,043 - MainThread - botocore.hooks - DEBUG - Event building-command-table.s3: calling handler &lt;function add_waiters at 0x7fc128670048&gt;
2024-01-02 11:38:52,043 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.s3.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fc1303706d8&gt;
2024-01-02 11:38:52,044 - MainThread - botocore.hooks - DEBUG - Event building-command-table.cp: calling handler &lt;function add_waiters at 0x7fc128670048&gt;
2024-01-02 11:38:52,045 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.paths: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fc1303706d8&gt;
2024-01-02 11:38:52,045 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.dryrun: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fc1303706d8&gt;
2024-01-02 11:38:52,045 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7fc1294582b0&gt;
2024-01-02 11:38:52,046 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.quiet: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fc1303706d8&gt;
2024-01-02 11:38:52,046 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7fc1294582b0&gt;
2024-01-02 11:38:52,046 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fc1303706d8&gt;
2024-01-02 11:38:52,046 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.acl: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fc1303706d8&gt;
2024-01-02 11:38:52,046 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.follow-symlinks: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fc1303706d8&gt;
2024-01-02 11:38:52,046 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7fc1294582b0&gt;
2024-01-02 11:38:52,046 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fc1303706d8&gt;
2024-01-02 11:38:52,046 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fc1303706d8&gt;
2024-01-02 11:38:52,046 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fc1303706d8&gt;
2024-01-02 11:38:52,046 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-key: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fc1303706d8&gt;
2024-01-02 11:38:52,047 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-kms-key-id: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fc1303706d8&gt;
2024-01-02 11:38:52,047 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-copy-source: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fc1303706d8&gt;
2024-01-02 11:38:52,047 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-copy-source-key: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fc1303706d8&gt;
2024-01-02 11:38:52,047 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.storage-class: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fc1303706d8&gt;
2024-01-02 11:38:52,047 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.grants: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fc1303706d8&gt;
2024-01-02 11:38:52,047 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.website-redirect: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fc1303706d8&gt;
2024-01-02 11:38:52,047 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-type: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fc1303706d8&gt;
2024-01-02 11:38:52,047 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.cache-control: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fc1303706d8&gt;
2024-01-02 11:38:52,048 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-disposition: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fc1303706d8&gt;
2024-01-02 11:38:52,048 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-encoding: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fc1303706d8&gt;
2024-01-02 11:38:52,048 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-language: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fc1303706d8&gt;
2024-01-02 11:38:52,048 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.expires: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fc1303706d8&gt;
2024-01-02 11:38:52,048 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.source-region: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fc1303706d8&gt;
2024-01-02 11:38:52,048 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.only-show-errors: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fc1303706d8&gt;
2024-01-02 11:38:52,048 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7fc1294582b0&gt;
2024-01-02 11:38:52,048 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fc1303706d8&gt;
2024-01-02 11:38:52,048 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.page-size: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fc1303706d8&gt;
2024-01-02 11:38:52,049 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.ignore-glacier-warnings: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fc1303706d8&gt;
2024-01-02 11:38:52,049 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7fc1294582b0&gt;
2024-01-02 11:38:52,049 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.force-glacier-transfer: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fc1303706d8&gt;
2024-01-02 11:38:52,049 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7fc1294582b0&gt;
2024-01-02 11:38:52,049 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.request-payer: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fc1303706d8&gt;
2024-01-02 11:38:52,049 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.metadata: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fc1303706d8&gt;
2024-01-02 11:38:52,049 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.metadata-directive: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fc1303706d8&gt;
2024-01-02 11:38:52,049 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.expected-size: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fc1303706d8&gt;
2024-01-02 11:38:52,049 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fc1303706d8&gt;
2024-01-02 11:38:52,050 - MainThread - botocore.credentials - DEBUG - Looking for credentials via: env
2024-01-02 11:38:52,050 - MainThread - botocore.credentials - INFO - Found credentials in environment variables.
2024-01-02 11:38:52,050 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/endpoints.json
2024-01-02 11:38:52,064 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/sdk-default-configuration.json
2024-01-02 11:38:52,064 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7fc12a119378&gt;
2024-01-02 11:38:52,065 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/s3/2006-03-01/service-2.json
2024-01-02 11:38:52,074 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7fc12a3f32f0&gt;
2024-01-02 11:38:52,074 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7fc12a3f30d0&gt;
2024-01-02 11:38:52,075 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2024-01-02 11:38:52,077 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2024-01-02 11:38:52,078 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/_retry.json
2024-01-02 11:38:52,078 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2024-01-02 11:38:52,079 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2024-01-02 11:38:52,079 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7fc12a119378&gt;
2024-01-02 11:38:52,080 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7fc12a3f32f0&gt;
2024-01-02 11:38:52,080 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7fc12a3f30d0&gt;
2024-01-02 11:38:52,080 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2024-01-02 11:38:52,082 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2024-01-02 11:38:52,083 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2024-01-02 11:38:52,084 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2024-01-02 11:38:52,084 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7fc12a119378&gt;
2024-01-02 11:38:52,085 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7fc12a3f32f0&gt;
2024-01-02 11:38:52,085 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7fc12a3f30d0&gt;
2024-01-02 11:38:52,085 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2024-01-02 11:38:52,087 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2024-01-02 11:38:52,088 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2024-01-02 11:38:52,089 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2024-01-02 11:38:52,089 - MainThread - awscli.customizations.s3.s3handler - DEBUG - Using a multipart threshold of 8388608 and a part size of 8388608
2024-01-02 11:38:52,090 - MainThread - s3transfer.utils - DEBUG - Acquiring 0
2024-01-02 11:38:52,090 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - UploadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7fc127f10978&gt;}) about to wait for the following futures []
2024-01-02 11:38:52,091 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - UploadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7fc127f10978&gt;}) done waiting for dependent futures
2024-01-02 11:38:52,091 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - Executing task UploadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7fc127f10978&gt;}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7fc127fce828&gt;, 'config': &lt;s3transfer.manager.TransferConfig object at 0x7fc127f06978&gt;, 'osutil': &lt;s3transfer.utils.OSUtils object at 0x7fc127f069e8&gt;, 'request_executor': &lt;s3transfer.futures.BoundedExecutor object at 0x7fc127f06b70&gt;, 'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7fc127f10978&gt;}
2024-01-02 11:38:52,092 - ThreadPoolExecutor-1_0 - s3transfer.futures - DEBUG - Submitting task CreateMultipartUploadTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'extra_args': {}}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7fc127f06b70&gt; for transfer request: 0.
2024-01-02 11:38:52,092 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Acquiring 0
2024-01-02 11:38:52,092 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - CreateMultipartUploadTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'extra_args': {}}) about to wait for the following futures []
2024-01-02 11:38:52,092 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - CreateMultipartUploadTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'extra_args': {}}) done waiting for dependent futures
2024-01-02 11:38:52,092 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task CreateMultipartUploadTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'extra_args': {}}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7fc127fce828&gt;, 'bucket': 'erasure', 'key': 'big_file', 'extra_args': {}}
2024-01-02 11:38:52,093 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CreateMultipartUpload: calling handler &lt;function validate_ascii_metadata at 0x7fc12a1366a8&gt;
2024-01-02 11:38:52,093 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CreateMultipartUpload: calling handler &lt;function sse_md5 at 0x7fc12a132ae8&gt;
2024-01-02 11:38:52,093 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CreateMultipartUpload: calling handler &lt;function validate_bucket_name at 0x7fc12a132a60&gt;
2024-01-02 11:38:52,093 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CreateMultipartUpload: calling handler &lt;bound method S3RegionRedirector.redirect_from_cache of &lt;botocore.utils.S3RegionRedirector object at 0x7fc127fced68&gt;&gt;
2024-01-02 11:38:52,093 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CreateMultipartUpload: calling handler &lt;bound method S3ArnParamHandler.handle_arn of &lt;botocore.utils.S3ArnParamHandler object at 0x7fc127f9e160&gt;&gt;
2024-01-02 11:38:52,093 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CreateMultipartUpload: calling handler &lt;function generate_idempotent_uuid at 0x7fc12a1328c8&gt;
2024-01-02 11:38:52,093 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.CreateMultipartUpload: calling handler &lt;function add_expect_header at 0x7fc12a132d90&gt;
2024-01-02 11:38:52,093 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.CreateMultipartUpload: calling handler &lt;bound method S3RegionRedirector.set_request_url of &lt;botocore.utils.S3RegionRedirector object at 0x7fc127fced68&gt;&gt;
2024-01-02 11:38:52,094 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.CreateMultipartUpload: calling handler &lt;function add_recursion_detection_header at 0x7fc12a132598&gt;
2024-01-02 11:38:52,094 - ThreadPoolExecutor-1_0 - s3transfer.futures - DEBUG - Submitting task UploadPartTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'part_number': 1, 'extra_args': {}}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7fc127f06b70&gt; for transfer request: 0.
2024-01-02 11:38:52,094 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.CreateMultipartUpload: calling handler &lt;function inject_api_version_header_if_needed at 0x7fc12a1380d0&gt;
2024-01-02 11:38:52,094 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Acquiring 0
2024-01-02 11:38:52,094 - ThreadPoolExecutor-0_0 - botocore.endpoint - DEBUG - Making request for OperationModel(name=CreateMultipartUpload) with params: {'url_path': '/erasure/big_file?uploads', 'query_string': {}, 'method': 'POST', 'headers': {'User-Agent': 'aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1053-azure botocore/1.26.10'}, 'body': b'', 'url': 'http://s3g:9878/erasure/big_file?uploads', 'context': {'client_region': 'us-west-1', 'client_config': &lt;botocore.config.Config object at 0x7fc127fcea20&gt;, 'has_streaming_input': False, 'auth_type': None, 'signing': {'bucket': 'erasure'}}}
2024-01-02 11:38:52,095 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.CreateMultipartUpload: calling handler &lt;function signal_not_transferring at 0x7fc12c65b158&gt;
2024-01-02 11:38:52,095 - ThreadPoolExecutor-0_1 - s3transfer.tasks - DEBUG - UploadPartTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'part_number': 1, 'extra_args': {}}) about to wait for the following futures [&lt;s3transfer.futures.ExecutorFuture object at 0x7fc127f307b8&gt;]
2024-01-02 11:38:52,095 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.CreateMultipartUpload: calling handler &lt;bound method RequestSigner.handler of &lt;botocore.signers.RequestSigner object at 0x7fc127fce9e8&gt;&gt;
2024-01-02 11:38:52,095 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event choose-signer.s3.CreateMultipartUpload: calling handler &lt;bound method S3EndpointSetter.set_signer of &lt;botocore.utils.S3EndpointSetter object at 0x7fc127f9e1d0&gt;&gt;
2024-01-02 11:38:52,095 - ThreadPoolExecutor-1_0 - s3transfer.futures - DEBUG - Submitting task UploadPartTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'part_number': 2, 'extra_args': {}}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7fc127f06b70&gt; for transfer request: 0.
2024-01-02 11:38:52,095 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event choose-signer.s3.CreateMultipartUpload: calling handler &lt;function set_operation_specific_signer at 0x7fc12a1327b8&gt;
2024-01-02 11:38:52,095 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-sign.s3.CreateMultipartUpload: calling handler &lt;bound method S3EndpointSetter.set_endpoint of &lt;botocore.utils.S3EndpointSetter object at 0x7fc127f9e1d0&gt;&gt;
2024-01-02 11:38:52,095 - ThreadPoolExecutor-0_1 - s3transfer.tasks - DEBUG - UploadPartTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'part_number': 1, 'extra_args': {}}) about to wait for &lt;s3transfer.futures.ExecutorFuture object at 0x7fc127f307b8&gt;
2024-01-02 11:38:52,096 - ThreadPoolExecutor-0_0 - botocore.utils - DEBUG - Using S3 path style addressing.
2024-01-02 11:38:52,096 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - Calculating signature using v4 auth.
2024-01-02 11:38:52,095 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Acquiring 0
2024-01-02 11:38:52,096 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - CanonicalRequest:
POST
/erasure/big_file
uploads=
host:s3g:9878
x-amz-content-sha256:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
x-amz-date:20240102T113852Z

host;x-amz-content-sha256;x-amz-date
e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
2024-01-02 11:38:52,096 - ThreadPoolExecutor-0_2 - s3transfer.tasks - DEBUG - UploadPartTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'part_number': 2, 'extra_args': {}}) about to wait for the following futures [&lt;s3transfer.futures.ExecutorFuture object at 0x7fc127f307b8&gt;]
2024-01-02 11:38:52,096 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - StringToSign:
AWS4-HMAC-SHA256
20240102T113852Z
20240102/us-west-1/s3/aws4_request
51e31c09de38b58d73495ccd0c5982ec10a163a836971a59a73f8c7643c026b2
2024-01-02 11:38:52,097 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - Signature:
340aa78825dae1d96cea26a213d53f0927127f74492a2a6febb1ad00a47abad4
2024-01-02 11:38:52,097 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.CreateMultipartUpload: calling handler &lt;function signal_transferring at 0x7fc12c65b1e0&gt;
2024-01-02 11:38:52,097 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.CreateMultipartUpload: calling handler &lt;function add_retry_headers at 0x7fc12a138730&gt;
2024-01-02 11:38:52,097 - ThreadPoolExecutor-0_0 - botocore.endpoint - DEBUG - Sending http request: &lt;AWSPreparedRequest stream_output=False, method=POST, url=http://s3g:9878/erasure/big_file?uploads, headers={'User-Agent': b'aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1053-azure botocore/1.26.10', 'X-Amz-Date': b'20240102T113852Z', 'X-Amz-Content-SHA256': b'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855', 'Authorization': b'AWS4-HMAC-SHA256 Credential=dlfknslnfslf/20240102/us-west-1/s3/aws4_request, SignedHeaders=host;x-amz-content-sha256;x-amz-date, Signature=340aa78825dae1d96cea26a213d53f0927127f74492a2a6febb1ad00a47abad4', 'amz-sdk-invocation-id': b'0b8f1524-95f9-4d84-bdbb-eab663ada3ab', 'amz-sdk-request': b'attempt=1', 'Content-Length': '0'}&gt;
2024-01-02 11:38:52,098 - ThreadPoolExecutor-0_0 - urllib3.connectionpool - DEBUG - Starting new HTTP connection (1): s3g:9878
2024-01-02 11:38:52,096 - ThreadPoolExecutor-1_0 - s3transfer.futures - DEBUG - Submitting task CompleteMultipartUploadTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'extra_args': {}}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7fc127f06b70&gt; for transfer request: 0.
2024-01-02 11:38:52,096 - ThreadPoolExecutor-0_2 - s3transfer.tasks - DEBUG - UploadPartTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'part_number': 2, 'extra_args': {}}) about to wait for &lt;s3transfer.futures.ExecutorFuture object at 0x7fc127f307b8&gt;
2024-01-02 11:38:52,098 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Acquiring 0
2024-01-02 11:38:52,099 - ThreadPoolExecutor-0_3 - s3transfer.tasks - DEBUG - CompleteMultipartUploadTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'extra_args': {}}) about to wait for the following futures [&lt;s3transfer.futures.ExecutorFuture object at 0x7fc127f307b8&gt;, &lt;s3transfer.futures.ExecutorFuture object at 0x7fc127f30f60&gt;, &lt;s3transfer.futures.ExecutorFuture object at 0x7fc124db5518&gt;]
2024-01-02 11:38:52,099 - ThreadPoolExecutor-0_3 - s3transfer.tasks - DEBUG - CompleteMultipartUploadTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'extra_args': {}}) about to wait for &lt;s3transfer.futures.ExecutorFuture object at 0x7fc127f307b8&gt;
2024-01-02 11:38:52,099 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2024-01-02 11:38:52,110 - ThreadPoolExecutor-0_0 - urllib3.connectionpool - DEBUG - http://s3g:9878 "POST /erasure/big_file?uploads HTTP/1.1" 200 285
2024-01-02 11:38:52,111 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response headers: {'Date': 'Tue, 02 Jan 2024 11:38:52 GMT', 'Cache-Control': 'no-cache', 'Expires': 'Tue, 02 Jan 2024 11:38:52 GMT', 'Pragma': 'no-cache', 'Content-Type': 'application/xml', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'X-FRAME-OPTIONS': 'SAMEORIGIN', 'Server': 'Ozone', 'x-amz-id-2': 'xm3A4cb29', 'x-amz-request-id': '1e2113b9-c9c7-4e1c-910e-aed2eb6128b2', 'Content-Length': '285'}
2024-01-02 11:38:52,111 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response body:
b'&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?&gt;&lt;InitiateMultipartUploadResult xmlns="http://s3.amazonaws.com/doc/2006-03-01/"&gt;&lt;Bucket&gt;erasure&lt;/Bucket&gt;&lt;Key&gt;big_file&lt;/Key&gt;&lt;UploadId&gt;68620e58-e0d7-4a7e-bf61-5f8123d7182c-111686158392033357&lt;/UploadId&gt;&lt;/InitiateMultipartUploadResult&gt;'
2024-01-02 11:38:52,112 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.CreateMultipartUpload: calling handler &lt;botocore.retryhandler.RetryHandler object at 0x7fc127fceda0&gt;
2024-01-02 11:38:52,112 - ThreadPoolExecutor-0_0 - botocore.retryhandler - DEBUG - No retry needed.
2024-01-02 11:38:52,112 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.CreateMultipartUpload: calling handler &lt;bound method S3RegionRedirector.redirect_from_error of &lt;botocore.utils.S3RegionRedirector object at 0x7fc127fced68&gt;&gt;
2024-01-02 11:38:52,112 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event after-call.s3.CreateMultipartUpload: calling handler &lt;function enhance_error_msg at 0x7fc128661598&gt;
2024-01-02 11:38:52,112 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2024-01-02 11:38:52,112 - ThreadPoolExecutor-0_1 - s3transfer.tasks - DEBUG - UploadPartTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'part_number': 1, 'extra_args': {}}) done waiting for dependent futures
2024-01-02 11:38:52,112 - ThreadPoolExecutor-0_3 - s3transfer.tasks - DEBUG - CompleteMultipartUploadTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'extra_args': {}}) about to wait for &lt;s3transfer.futures.ExecutorFuture object at 0x7fc127f30f60&gt;
2024-01-02 11:38:52,113 - ThreadPoolExecutor-0_2 - s3transfer.tasks - DEBUG - UploadPartTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'part_number': 2, 'extra_args': {}}) done waiting for dependent futures
2024-01-02 11:38:52,113 - ThreadPoolExecutor-0_1 - s3transfer.tasks - DEBUG - Executing task UploadPartTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'part_number': 1, 'extra_args': {}}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7fc127fce828&gt;, 'fileobj': &lt;s3transfer.utils.ReadFileChunk object at 0x7fc127f308d0&gt;, 'bucket': 'erasure', 'key': 'big_file', 'part_number': 1, 'extra_args': {}, 'upload_id': '68620e58-e0d7-4a7e-bf61-5f8123d7182c-111686158392033357'}
2024-01-02 11:38:52,113 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;function sse_md5 at 0x7fc12a132ae8&gt;
2024-01-02 11:38:52,113 - ThreadPoolExecutor-0_2 - s3transfer.tasks - DEBUG - Executing task UploadPartTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'part_number': 2, 'extra_args': {}}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7fc127fce828&gt;, 'fileobj': &lt;s3transfer.utils.ReadFileChunk object at 0x7fc124db50f0&gt;, 'bucket': 'erasure', 'key': 'big_file', 'part_number': 2, 'extra_args': {}, 'upload_id': '68620e58-e0d7-4a7e-bf61-5f8123d7182c-111686158392033357'}
2024-01-02 11:38:52,113 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;function convert_body_to_file_like_object at 0x7fc12a136f28&gt;
2024-01-02 11:38:52,113 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;function sse_md5 at 0x7fc12a132ae8&gt;
2024-01-02 11:38:52,114 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;function validate_bucket_name at 0x7fc12a132a60&gt;
2024-01-02 11:38:52,114 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;function convert_body_to_file_like_object at 0x7fc12a136f28&gt;
2024-01-02 11:38:52,114 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;bound method S3RegionRedirector.redirect_from_cache of &lt;botocore.utils.S3RegionRedirector object at 0x7fc127fced68&gt;&gt;
2024-01-02 11:38:52,114 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;function validate_bucket_name at 0x7fc12a132a60&gt;
2024-01-02 11:38:52,114 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;bound method S3ArnParamHandler.handle_arn of &lt;botocore.utils.S3ArnParamHandler object at 0x7fc127f9e160&gt;&gt;
2024-01-02 11:38:52,114 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;bound method S3RegionRedirector.redirect_from_cache of &lt;botocore.utils.S3RegionRedirector object at 0x7fc127fced68&gt;&gt;
2024-01-02 11:38:52,114 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;function generate_idempotent_uuid at 0x7fc12a1328c8&gt;
2024-01-02 11:38:52,114 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;bound method S3ArnParamHandler.handle_arn of &lt;botocore.utils.S3ArnParamHandler object at 0x7fc127f9e160&gt;&gt;
2024-01-02 11:38:52,114 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;function conditionally_calculate_md5 at 0x7fc12aad90d0&gt;
2024-01-02 11:38:52,114 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;function generate_idempotent_uuid at 0x7fc12a1328c8&gt;
2024-01-02 11:38:52,115 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;function conditionally_calculate_md5 at 0x7fc12aad90d0&gt;
2024-01-02 11:38:52,118 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;function add_expect_header at 0x7fc12a132d90&gt;
2024-01-02 11:38:52,118 - ThreadPoolExecutor-0_2 - botocore.handlers - DEBUG - Adding expect 100 continue header to request.
2024-01-02 11:38:52,118 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;bound method S3RegionRedirector.set_request_url of &lt;botocore.utils.S3RegionRedirector object at 0x7fc127fced68&gt;&gt;
2024-01-02 11:38:52,118 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;function add_recursion_detection_header at 0x7fc12a132598&gt;
2024-01-02 11:38:52,118 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;function inject_api_version_header_if_needed at 0x7fc12a1380d0&gt;
2024-01-02 11:38:52,118 - ThreadPoolExecutor-0_2 - botocore.endpoint - DEBUG - Making request for OperationModel(name=UploadPart) with params: {'url_path': '/erasure/big_file', 'query_string': {'uploadId': '68620e58-e0d7-4a7e-bf61-5f8123d7182c-111686158392033357', 'partNumber': 2}, 'method': 'PUT', 'headers': {'User-Agent': 'aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1053-azure botocore/1.26.10', 'Content-MD5': 'vJI6LXu6A9tfRxMvGnweYQ==', 'Expect': '100-continue'}, 'body': &lt;s3transfer.utils.ReadFileChunk object at 0x7fc124db50f0&gt;, 'url': 'http://s3g:9878/erasure/big_file?uploadId=68620e58-e0d7-4a7e-bf61-5f8123d7182c-111686158392033357&amp;partNumber=2', 'context': {'client_region': 'us-west-1', 'client_config': &lt;botocore.config.Config object at 0x7fc127fcea20&gt;, 'has_streaming_input': True, 'auth_type': None, 'signing': {'bucket': 'erasure'}}}
2024-01-02 11:38:52,119 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event request-created.s3.UploadPart: calling handler &lt;function signal_not_transferring at 0x7fc12c65b158&gt;
2024-01-02 11:38:52,119 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event request-created.s3.UploadPart: calling handler &lt;bound method RequestSigner.handler of &lt;botocore.signers.RequestSigner object at 0x7fc127fce9e8&gt;&gt;
2024-01-02 11:38:52,119 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event choose-signer.s3.UploadPart: calling handler &lt;bound method S3EndpointSetter.set_signer of &lt;botocore.utils.S3EndpointSetter object at 0x7fc127f9e1d0&gt;&gt;
2024-01-02 11:38:52,119 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event choose-signer.s3.UploadPart: calling handler &lt;function set_operation_specific_signer at 0x7fc12a1327b8&gt;
2024-01-02 11:38:52,119 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-sign.s3.UploadPart: calling handler &lt;bound method S3EndpointSetter.set_endpoint of &lt;botocore.utils.S3EndpointSetter object at 0x7fc127f9e1d0&gt;&gt;
2024-01-02 11:38:52,121 - ThreadPoolExecutor-0_2 - botocore.auth - DEBUG - Calculating signature using v4 auth.
2024-01-02 11:38:52,121 - ThreadPoolExecutor-0_2 - botocore.auth - DEBUG - CanonicalRequest:
PUT
/erasure/big_file
partNumber=2&amp;uploadId=68620e58-e0d7-4a7e-bf61-5f8123d7182c-111686158392033357
content-md5:vJI6LXu6A9tfRxMvGnweYQ==
host:s3g:9878
x-amz-content-sha256:05eb9d50508d6c967d5008932a3a3d38f3907e4c84639fa52e2475fe78d7c384
x-amz-date:20240102T113852Z

content-md5;host;x-amz-content-sha256;x-amz-date
05eb9d50508d6c967d5008932a3a3d38f3907e4c84639fa52e2475fe78d7c384
2024-01-02 11:38:52,121 - ThreadPoolExecutor-0_2 - botocore.auth - DEBUG - StringToSign:
AWS4-HMAC-SHA256
20240102T113852Z
20240102/us-west-1/s3/aws4_request
0ea58fff5a0687722e52b4d05c50517f5e3a4224e3351104e1d34420a95305de
2024-01-02 11:38:52,121 - ThreadPoolExecutor-0_2 - botocore.auth - DEBUG - Signature:
82a62ff39327e415333f7088a51c0c46a425eb609fef41ce92bd21f2fed96f3b
2024-01-02 11:38:52,121 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event request-created.s3.UploadPart: calling handler &lt;function signal_transferring at 0x7fc12c65b1e0&gt;
2024-01-02 11:38:52,121 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event request-created.s3.UploadPart: calling handler &lt;function add_retry_headers at 0x7fc12a138730&gt;
2024-01-02 11:38:52,121 - ThreadPoolExecutor-0_2 - botocore.endpoint - DEBUG - Sending http request: &lt;AWSPreparedRequest stream_output=False, method=PUT, url=http://s3g:9878/erasure/big_file?uploadId=68620e58-e0d7-4a7e-bf61-5f8123d7182c-111686158392033357&amp;partNumber=2, headers={'User-Agent': b'aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1053-azure botocore/1.26.10', 'Content-MD5': b'vJI6LXu6A9tfRxMvGnweYQ==', 'Expect': b'100-continue', 'X-Amz-Date': b'20240102T113852Z', 'X-Amz-Content-SHA256': b'05eb9d50508d6c967d5008932a3a3d38f3907e4c84639fa52e2475fe78d7c384', 'Authorization': b'AWS4-HMAC-SHA256 Credential=dlfknslnfslf/20240102/us-west-1/s3/aws4_request, SignedHeaders=content-md5;host;x-amz-content-sha256;x-amz-date, Signature=82a62ff39327e415333f7088a51c0c46a425eb609fef41ce92bd21f2fed96f3b', 'amz-sdk-invocation-id': b'9e8cac05-a2d6-4cd7-9b5c-64b24f984316', 'amz-sdk-request': b'attempt=1', 'Content-Length': '1611392'}&gt;
2024-01-02 11:38:52,122 - ThreadPoolExecutor-0_2 - botocore.awsrequest - DEBUG - Waiting for 100 Continue response.
2024-01-02 11:38:52,123 - ThreadPoolExecutor-0_2 - botocore.awsrequest - DEBUG - 100 Continue response seen, now sending request body.
2024-01-02 11:38:52,132 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;function add_expect_header at 0x7fc12a132d90&gt;
2024-01-02 11:38:52,133 - ThreadPoolExecutor-0_1 - botocore.handlers - DEBUG - Adding expect 100 continue header to request.
2024-01-02 11:38:52,133 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;bound method S3RegionRedirector.set_request_url of &lt;botocore.utils.S3RegionRedirector object at 0x7fc127fced68&gt;&gt;
2024-01-02 11:38:52,133 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;function add_recursion_detection_header at 0x7fc12a132598&gt;
2024-01-02 11:38:52,133 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;function inject_api_version_header_if_needed at 0x7fc12a1380d0&gt;
2024-01-02 11:38:52,133 - ThreadPoolExecutor-0_1 - botocore.endpoint - DEBUG - Making request for OperationModel(name=UploadPart) with params: {'url_path': '/erasure/big_file', 'query_string': {'uploadId': '68620e58-e0d7-4a7e-bf61-5f8123d7182c-111686158392033357', 'partNumber': 1}, 'method': 'PUT', 'headers': {'User-Agent': 'aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1053-azure botocore/1.26.10', 'Content-MD5': '5YeeptzFjYuMUYnfHFwoLA==', 'Expect': '100-continue'}, 'body': &lt;s3transfer.utils.ReadFileChunk object at 0x7fc127f308d0&gt;, 'url': 'http://s3g:9878/erasure/big_file?uploadId=68620e58-e0d7-4a7e-bf61-5f8123d7182c-111686158392033357&amp;partNumber=1', 'context': {'client_region': 'us-west-1', 'client_config': &lt;botocore.config.Config object at 0x7fc127fcea20&gt;, 'has_streaming_input': True, 'auth_type': None, 'signing': {'bucket': 'erasure'}}}
2024-01-02 11:38:52,133 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event request-created.s3.UploadPart: calling handler &lt;function signal_not_transferring at 0x7fc12c65b158&gt;
2024-01-02 11:38:52,133 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event request-created.s3.UploadPart: calling handler &lt;bound method RequestSigner.handler of &lt;botocore.signers.RequestSigner object at 0x7fc127fce9e8&gt;&gt;
2024-01-02 11:38:52,133 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event choose-signer.s3.UploadPart: calling handler &lt;bound method S3EndpointSetter.set_signer of &lt;botocore.utils.S3EndpointSetter object at 0x7fc127f9e1d0&gt;&gt;
2024-01-02 11:38:52,134 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event choose-signer.s3.UploadPart: calling handler &lt;function set_operation_specific_signer at 0x7fc12a1327b8&gt;
2024-01-02 11:38:52,134 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-sign.s3.UploadPart: calling handler &lt;bound method S3EndpointSetter.set_endpoint of &lt;botocore.utils.S3EndpointSetter object at 0x7fc127f9e1d0&gt;&gt;
Completed 256.0 KiB/9.5 MiB (5.5 MiB/s) with 1 file(s) remaining
Completed 512.0 KiB/9.5 MiB (10.7 MiB/s) with 1 file(s) remaining
Completed 768.0 KiB/9.5 MiB (15.7 MiB/s) with 1 file(s) remaining
Completed 1.0 MiB/9.5 MiB (20.6 MiB/s) with 1 file(s) remaining  
2024-01-02 11:38:52,141 - ThreadPoolExecutor-0_1 - botocore.auth - DEBUG - Calculating signature using v4 auth.
2024-01-02 11:38:52,141 - ThreadPoolExecutor-0_1 - botocore.auth - DEBUG - CanonicalRequest:
PUT
/erasure/big_file
partNumber=1&amp;uploadId=68620e58-e0d7-4a7e-bf61-5f8123d7182c-111686158392033357
content-md5:5YeeptzFjYuMUYnfHFwoLA==
host:s3g:9878
x-amz-content-sha256:44afbc337929b429613e1706d70c373ac11d687352c086a5546e76fdb1b8374c
x-amz-date:20240102T113852Z

content-md5;host;x-amz-content-sha256;x-amz-date
44afbc337929b429613e1706d70c373ac11d687352c086a5546e76fdb1b8374c
2024-01-02 11:38:52,141 - ThreadPoolExecutor-0_1 - botocore.auth - DEBUG - StringToSign:
AWS4-HMAC-SHA256
20240102T113852Z
20240102/us-west-1/s3/aws4_request
2a2496c7498d6396b8f6e1607e6637cd5cb4db045c5b5d7433ec181c016eda1c
2024-01-02 11:38:52,141 - ThreadPoolExecutor-0_1 - botocore.auth - DEBUG - Signature:
7a06e0e29426f750c235c64870e73d4765003b9beafa9826564b7b7ea9c478d6
2024-01-02 11:38:52,141 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event request-created.s3.UploadPart: calling handler &lt;function signal_transferring at 0x7fc12c65b1e0&gt;
2024-01-02 11:38:52,142 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event request-created.s3.UploadPart: calling handler &lt;function add_retry_headers at 0x7fc12a138730&gt;
2024-01-02 11:38:52,142 - ThreadPoolExecutor-0_1 - botocore.endpoint - DEBUG - Sending http request: &lt;AWSPreparedRequest stream_output=False, method=PUT, url=http://s3g:9878/erasure/big_file?uploadId=68620e58-e0d7-4a7e-bf61-5f8123d7182c-111686158392033357&amp;partNumber=1, headers={'User-Agent': b'aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1053-azure botocore/1.26.10', 'Content-MD5': b'5YeeptzFjYuMUYnfHFwoLA==', 'Expect': b'100-continue', 'X-Amz-Date': b'20240102T113852Z', 'X-Amz-Content-SHA256': b'44afbc337929b429613e1706d70c373ac11d687352c086a5546e76fdb1b8374c', 'Authorization': b'AWS4-HMAC-SHA256 Credential=dlfknslnfslf/20240102/us-west-1/s3/aws4_request, SignedHeaders=content-md5;host;x-amz-content-sha256;x-amz-date, Signature=7a06e0e29426f750c235c64870e73d4765003b9beafa9826564b7b7ea9c478d6', 'amz-sdk-invocation-id': b'6ade2c68-1ab1-4b32-8ecb-e9e4d67d02be', 'amz-sdk-request': b'attempt=1', 'Content-Length': '8388608'}&gt;
2024-01-02 11:38:52,142 - ThreadPoolExecutor-0_1 - urllib3.connectionpool - DEBUG - Starting new HTTP connection (2): s3g:9878
2024-01-02 11:38:52,143 - ThreadPoolExecutor-0_1 - botocore.awsrequest - DEBUG - Waiting for 100 Continue response.
Completed 1.2 MiB/9.5 MiB (24.2 MiB/s) with 1 file(s) remaining  
Completed 1.5 MiB/9.5 MiB (28.8 MiB/s) with 1 file(s) remaining  
2024-01-02 11:38:52,145 - ThreadPoolExecutor-0_1 - botocore.awsrequest - DEBUG - 100 Continue response seen, now sending request body.
Completed 1.8 MiB/9.5 MiB (26.1 MiB/s) with 1 file(s) remaining  
Completed 2.0 MiB/9.5 MiB (29.4 MiB/s) with 1 file(s) remaining  
Completed 2.2 MiB/9.5 MiB (32.7 MiB/s) with 1 file(s) remaining  
Completed 2.5 MiB/9.5 MiB (35.9 MiB/s) with 1 file(s) remaining  
Completed 2.8 MiB/9.5 MiB (39.0 MiB/s) with 1 file(s) remaining  
Completed 3.0 MiB/9.5 MiB (42.0 MiB/s) with 1 file(s) remaining  
Completed 3.2 MiB/9.5 MiB (45.0 MiB/s) with 1 file(s) remaining  
Completed 3.5 MiB/9.5 MiB (47.9 MiB/s) with 1 file(s) remaining  
Completed 3.8 MiB/9.5 MiB (50.9 MiB/s) with 1 file(s) remaining  
Completed 4.0 MiB/9.5 MiB (53.9 MiB/s) with 1 file(s) remaining  
Completed 4.2 MiB/9.5 MiB (57.0 MiB/s) with 1 file(s) remaining  
Completed 4.5 MiB/9.5 MiB (59.9 MiB/s) with 1 file(s) remaining  
Completed 4.8 MiB/9.5 MiB (56.8 MiB/s) with 1 file(s) remaining  
Completed 5.0 MiB/9.5 MiB (59.2 MiB/s) with 1 file(s) remaining  
Completed 5.2 MiB/9.5 MiB (60.6 MiB/s) with 1 file(s) remaining  
Completed 5.5 MiB/9.5 MiB (62.8 MiB/s) with 1 file(s) remaining  
Completed 5.8 MiB/9.5 MiB (57.9 MiB/s) with 1 file(s) remaining  
Completed 6.0 MiB/9.5 MiB (53.9 MiB/s) with 1 file(s) remaining  
Completed 6.2 MiB/9.5 MiB (55.9 MiB/s) with 1 file(s) remaining  
Completed 6.5 MiB/9.5 MiB (57.8 MiB/s) with 1 file(s) remaining  
Completed 6.8 MiB/9.5 MiB (59.3 MiB/s) with 1 file(s) remaining  
Completed 7.0 MiB/9.5 MiB (61.2 MiB/s) with 1 file(s) remaining  
Completed 7.2 MiB/9.5 MiB (62.5 MiB/s) with 1 file(s) remaining  
Completed 7.5 MiB/9.5 MiB (63.6 MiB/s) with 1 file(s) remaining  
Completed 7.8 MiB/9.5 MiB (64.5 MiB/s) with 1 file(s) remaining  
Completed 8.0 MiB/9.5 MiB (66.2 MiB/s) with 1 file(s) remaining  
Completed 8.2 MiB/9.5 MiB (67.3 MiB/s) with 1 file(s) remaining  
Completed 8.5 MiB/9.5 MiB (68.3 MiB/s) with 1 file(s) remaining  
Completed 8.8 MiB/9.5 MiB (59.4 MiB/s) with 1 file(s) remaining  
Completed 9.0 MiB/9.5 MiB (60.7 MiB/s) with 1 file(s) remaining  
Completed 9.2 MiB/9.5 MiB (62.2 MiB/s) with 1 file(s) remaining  
Completed 9.5 MiB/9.5 MiB (63.1 MiB/s) with 1 file(s) remaining  
2024-01-02 11:38:52,287 - ThreadPoolExecutor-0_2 - urllib3.connectionpool - DEBUG - http://s3g:9878 "PUT /erasure/big_file?uploadId=68620e58-e0d7-4a7e-bf61-5f8123d7182c-111686158392033357&amp;partNumber=2 HTTP/1.1" 200 0
2024-01-02 11:38:52,287 - ThreadPoolExecutor-0_2 - botocore.parsers - DEBUG - Response headers: {'Date': 'Tue, 02 Jan 2024 11:38:52 GMT', 'Cache-Control': 'no-cache', 'Expires': 'Tue, 02 Jan 2024 11:38:52 GMT', 'Pragma': 'no-cache', 'Content-Type': 'text/plain;charset=utf-8', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'X-FRAME-OPTIONS': 'SAMEORIGIN', 'ETag': '/s3v/erasure/big_file-68620e58-e0d7-4a7e-bf61-5f8123d7182c-111686158392033357-2', 'Server': 'Ozone', 'x-amz-id-2': 'HFAfguRtjPr3', 'x-amz-request-id': '22d111bc-ffa4-4c19-98b7-9f4fa16f6662', 'Content-Length': '0'}
2024-01-02 11:38:52,287 - ThreadPoolExecutor-0_2 - botocore.parsers - DEBUG - Response body:
b''
2024-01-02 11:38:52,288 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event needs-retry.s3.UploadPart: calling handler &lt;botocore.retryhandler.RetryHandler object at 0x7fc127fceda0&gt;
2024-01-02 11:38:52,288 - ThreadPoolExecutor-0_2 - botocore.retryhandler - DEBUG - No retry needed.
2024-01-02 11:38:52,288 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event needs-retry.s3.UploadPart: calling handler &lt;bound method S3RegionRedirector.redirect_from_error of &lt;botocore.utils.S3RegionRedirector object at 0x7fc127fced68&gt;&gt;
2024-01-02 11:38:52,288 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event after-call.s3.UploadPart: calling handler &lt;function enhance_error_msg at 0x7fc128661598&gt;
Completed 9.5 MiB/9.5 MiB (48.5 MiB/s) with 1 file(s) remaining  
2024-01-02 11:38:52,289 - ThreadPoolExecutor-0_2 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2024-01-02 11:38:52,440 - ThreadPoolExecutor-0_1 - urllib3.connectionpool - DEBUG - http://s3g:9878 "PUT /erasure/big_file?uploadId=68620e58-e0d7-4a7e-bf61-5f8123d7182c-111686158392033357&amp;partNumber=1 HTTP/1.1" 200 0
2024-01-02 11:38:52,440 - ThreadPoolExecutor-0_1 - botocore.parsers - DEBUG - Response headers: {'Date': 'Tue, 02 Jan 2024 11:38:52 GMT', 'Cache-Control': 'no-cache', 'Expires': 'Tue, 02 Jan 2024 11:38:52 GMT', 'Pragma': 'no-cache', 'Content-Type': 'text/plain;charset=utf-8', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'X-FRAME-OPTIONS': 'SAMEORIGIN', 'ETag': '/s3v/erasure/big_file-68620e58-e0d7-4a7e-bf61-5f8123d7182c-111686158392033357-1', 'Server': 'Ozone', 'x-amz-id-2': '73pV1r3d7kX', 'x-amz-request-id': 'f37baeae-1b41-4092-b63d-b31135512a79', 'Content-Length': '0'}
2024-01-02 11:38:52,441 - ThreadPoolExecutor-0_1 - botocore.parsers - DEBUG - Response body:
b''
2024-01-02 11:38:52,441 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event needs-retry.s3.UploadPart: calling handler &lt;botocore.retryhandler.RetryHandler object at 0x7fc127fceda0&gt;
2024-01-02 11:38:52,441 - ThreadPoolExecutor-0_1 - botocore.retryhandler - DEBUG - No retry needed.
2024-01-02 11:38:52,441 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event needs-retry.s3.UploadPart: calling handler &lt;bound method S3RegionRedirector.redirect_from_error of &lt;botocore.utils.S3RegionRedirector object at 0x7fc127fced68&gt;&gt;
2024-01-02 11:38:52,441 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event after-call.s3.UploadPart: calling handler &lt;function enhance_error_msg at 0x7fc128661598&gt;
2024-01-02 11:38:52,441 - ThreadPoolExecutor-0_1 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2024-01-02 11:38:52,441 - ThreadPoolExecutor-0_3 - s3transfer.tasks - DEBUG - CompleteMultipartUploadTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'extra_args': {}}) about to wait for &lt;s3transfer.futures.ExecutorFuture object at 0x7fc124db5518&gt;
2024-01-02 11:38:52,441 - ThreadPoolExecutor-0_3 - s3transfer.tasks - DEBUG - CompleteMultipartUploadTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'extra_args': {}}) done waiting for dependent futures
2024-01-02 11:38:52,442 - ThreadPoolExecutor-0_3 - s3transfer.tasks - DEBUG - Executing task CompleteMultipartUploadTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'extra_args': {}}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7fc127fce828&gt;, 'bucket': 'erasure', 'key': 'big_file', 'extra_args': {}, 'upload_id': '68620e58-e0d7-4a7e-bf61-5f8123d7182c-111686158392033357', 'parts': [{'ETag': '/s3v/erasure/big_file-68620e58-e0d7-4a7e-bf61-5f8123d7182c-111686158392033357-1', 'PartNumber': 1}, {'ETag': '/s3v/erasure/big_file-68620e58-e0d7-4a7e-bf61-5f8123d7182c-111686158392033357-2', 'PartNumber': 2}]}
2024-01-02 11:38:52,442 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CompleteMultipartUpload: calling handler &lt;function validate_bucket_name at 0x7fc12a132a60&gt;
2024-01-02 11:38:52,442 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CompleteMultipartUpload: calling handler &lt;bound method S3RegionRedirector.redirect_from_cache of &lt;botocore.utils.S3RegionRedirector object at 0x7fc127fced68&gt;&gt;
2024-01-02 11:38:52,443 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CompleteMultipartUpload: calling handler &lt;bound method S3ArnParamHandler.handle_arn of &lt;botocore.utils.S3ArnParamHandler object at 0x7fc127f9e160&gt;&gt;
2024-01-02 11:38:52,443 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CompleteMultipartUpload: calling handler &lt;function generate_idempotent_uuid at 0x7fc12a1328c8&gt;
2024-01-02 11:38:52,443 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-call.s3.CompleteMultipartUpload: calling handler &lt;function add_expect_header at 0x7fc12a132d90&gt;
2024-01-02 11:38:52,444 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-call.s3.CompleteMultipartUpload: calling handler &lt;bound method S3RegionRedirector.set_request_url of &lt;botocore.utils.S3RegionRedirector object at 0x7fc127fced68&gt;&gt;
2024-01-02 11:38:52,444 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-call.s3.CompleteMultipartUpload: calling handler &lt;function add_recursion_detection_header at 0x7fc12a132598&gt;
2024-01-02 11:38:52,444 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-call.s3.CompleteMultipartUpload: calling handler &lt;function inject_api_version_header_if_needed at 0x7fc12a1380d0&gt;
2024-01-02 11:38:52,444 - ThreadPoolExecutor-0_3 - botocore.endpoint - DEBUG - Making request for OperationModel(name=CompleteMultipartUpload) with params: {'url_path': '/erasure/big_file', 'query_string': {'uploadId': '68620e58-e0d7-4a7e-bf61-5f8123d7182c-111686158392033357'}, 'method': 'POST', 'headers': {'User-Agent': 'aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1053-azure botocore/1.26.10'}, 'body': b'&lt;CompleteMultipartUpload xmlns="http://s3.amazonaws.com/doc/2006-03-01/"&gt;&lt;Part&gt;&lt;ETag&gt;/s3v/erasure/big_file-68620e58-e0d7-4a7e-bf61-5f8123d7182c-111686158392033357-1&lt;/ETag&gt;&lt;PartNumber&gt;1&lt;/PartNumber&gt;&lt;/Part&gt;&lt;Part&gt;&lt;ETag&gt;/s3v/erasure/big_file-68620e58-e0d7-4a7e-bf61-5f8123d7182c-111686158392033357-2&lt;/ETag&gt;&lt;PartNumber&gt;2&lt;/PartNumber&gt;&lt;/Part&gt;&lt;/CompleteMultipartUpload&gt;', 'url': 'http://s3g:9878/erasure/big_file?uploadId=68620e58-e0d7-4a7e-bf61-5f8123d7182c-111686158392033357', 'context': {'client_region': 'us-west-1', 'client_config': &lt;botocore.config.Config object at 0x7fc127fcea20&gt;, 'has_streaming_input': False, 'auth_type': None, 'signing': {'bucket': 'erasure'}}}
2024-01-02 11:38:52,444 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event request-created.s3.CompleteMultipartUpload: calling handler &lt;function signal_not_transferring at 0x7fc12c65b158&gt;
2024-01-02 11:38:52,444 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event request-created.s3.CompleteMultipartUpload: calling handler &lt;bound method RequestSigner.handler of &lt;botocore.signers.RequestSigner object at 0x7fc127fce9e8&gt;&gt;
2024-01-02 11:38:52,444 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event choose-signer.s3.CompleteMultipartUpload: calling handler &lt;bound method S3EndpointSetter.set_signer of &lt;botocore.utils.S3EndpointSetter object at 0x7fc127f9e1d0&gt;&gt;
2024-01-02 11:38:52,445 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event choose-signer.s3.CompleteMultipartUpload: calling handler &lt;function set_operation_specific_signer at 0x7fc12a1327b8&gt;
2024-01-02 11:38:52,445 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-sign.s3.CompleteMultipartUpload: calling handler &lt;bound method S3EndpointSetter.set_endpoint of &lt;botocore.utils.S3EndpointSetter object at 0x7fc127f9e1d0&gt;&gt;
2024-01-02 11:38:52,445 - ThreadPoolExecutor-0_3 - botocore.auth - DEBUG - Calculating signature using v4 auth.
2024-01-02 11:38:52,445 - ThreadPoolExecutor-0_3 - botocore.auth - DEBUG - CanonicalRequest:
POST
/erasure/big_file
uploadId=68620e58-e0d7-4a7e-bf61-5f8123d7182c-111686158392033357
host:s3g:9878
x-amz-content-sha256:78cf16574fa47b63dc1590efa7f3594a75861ccd8a51cb39d507c4def8f8baa9
x-amz-date:20240102T113852Z

host;x-amz-content-sha256;x-amz-date
78cf16574fa47b63dc1590efa7f3594a75861ccd8a51cb39d507c4def8f8baa9
2024-01-02 11:38:52,445 - ThreadPoolExecutor-0_3 - botocore.auth - DEBUG - StringToSign:
AWS4-HMAC-SHA256
20240102T113852Z
20240102/us-west-1/s3/aws4_request
e68c9f76f24f03865ef67c5dc2511727c17ceba46f2917b1fc1ec75873b06c57
2024-01-02 11:38:52,445 - ThreadPoolExecutor-0_3 - botocore.auth - DEBUG - Signature:
85aef99f13e73f244a2e1a863775560305570f480127c58fea8376808fefc651
2024-01-02 11:38:52,446 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event request-created.s3.CompleteMultipartUpload: calling handler &lt;function signal_transferring at 0x7fc12c65b1e0&gt;
2024-01-02 11:38:52,446 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event request-created.s3.CompleteMultipartUpload: calling handler &lt;function add_retry_headers at 0x7fc12a138730&gt;
2024-01-02 11:38:52,446 - ThreadPoolExecutor-0_3 - botocore.endpoint - DEBUG - Sending http request: &lt;AWSPreparedRequest stream_output=False, method=POST, url=http://s3g:9878/erasure/big_file?uploadId=68620e58-e0d7-4a7e-bf61-5f8123d7182c-111686158392033357, headers={'User-Agent': b'aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1053-azure botocore/1.26.10', 'X-Amz-Date': b'20240102T113852Z', 'X-Amz-Content-SHA256': b'78cf16574fa47b63dc1590efa7f3594a75861ccd8a51cb39d507c4def8f8baa9', 'Authorization': b'AWS4-HMAC-SHA256 Credential=dlfknslnfslf/20240102/us-west-1/s3/aws4_request, SignedHeaders=host;x-amz-content-sha256;x-amz-date, Signature=85aef99f13e73f244a2e1a863775560305570f480127c58fea8376808fefc651', 'amz-sdk-invocation-id': b'3cca9d32-1ee7-4c91-8b04-8ba346e0b702', 'amz-sdk-request': b'attempt=1', 'Content-Length': '361'}&gt;
2024-01-02 11:38:52,466 - ThreadPoolExecutor-0_3 - urllib3.connectionpool - DEBUG - http://s3g:9878 "POST /erasure/big_file?uploadId=68620e58-e0d7-4a7e-bf61-5f8123d7182c-111686158392033357 HTTP/1.1" 200 286
2024-01-02 11:38:52,466 - ThreadPoolExecutor-0_3 - botocore.parsers - DEBUG - Response headers: {'Date': 'Tue, 02 Jan 2024 11:38:52 GMT', 'Cache-Control': 'no-cache', 'Expires': 'Tue, 02 Jan 2024 11:38:52 GMT', 'Pragma': 'no-cache', 'Content-Type': 'application/xml', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'X-FRAME-OPTIONS': 'SAMEORIGIN', 'Server': 'Ozone', 'x-amz-id-2': 'fvn4I2DfL', 'x-amz-request-id': '1e117f34-f287-42e5-85c2-865480d2bac4', 'Content-Length': '286'}
2024-01-02 11:38:52,466 - ThreadPoolExecutor-0_3 - botocore.parsers - DEBUG - Response body:
b'&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?&gt;&lt;CompleteMultipartUploadResult xmlns="http://s3.amazonaws.com/doc/2006-03-01/"&gt;&lt;Location&gt;erasure&lt;/Location&gt;&lt;Bucket&gt;erasure&lt;/Bucket&gt;&lt;Key&gt;big_file&lt;/Key&gt;&lt;ETag&gt;"82e0464439ba9856e13bcc6dabd29669-2"&lt;/ETag&gt;&lt;/CompleteMultipartUploadResult&gt;'
2024-01-02 11:38:52,467 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event needs-retry.s3.CompleteMultipartUpload: calling handler &lt;function check_for_200_error at 0x7fc12a1326a8&gt;
2024-01-02 11:38:52,467 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event needs-retry.s3.CompleteMultipartUpload: calling handler &lt;botocore.retryhandler.RetryHandler object at 0x7fc127fceda0&gt;
2024-01-02 11:38:52,467 - ThreadPoolExecutor-0_3 - botocore.retryhandler - DEBUG - No retry needed.
2024-01-02 11:38:52,467 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event needs-retry.s3.CompleteMultipartUpload: calling handler &lt;bound method S3RegionRedirector.redirect_from_error of &lt;botocore.utils.S3RegionRedirector object at 0x7fc127fced68&gt;&gt;
2024-01-02 11:38:52,467 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event after-call.s3.CompleteMultipartUpload: calling handler &lt;function enhance_error_msg at 0x7fc128661598&gt;
2024-01-02 11:38:52,468 - ThreadPoolExecutor-0_3 - s3transfer.utils - DEBUG - Releasing acquire 0/None
upload: ../../tmp/big_file to s3://erasure/big_file              
2024-01-02 11:38:52,469 - Thread-1 - awscli.customizations.s3.results - DEBUG - Shutdown request received in result processing thread, shutting down result thread.</msg>
<status status="PASS" starttime="20240102 11:38:52.535" endtime="20240102 11:38:52.536"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:38:52.536" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:38:52.536" endtime="20240102 11:38:52.537"/>
</kw>
<status status="PASS" starttime="20240102 11:38:51.692" endtime="20240102 11:38:52.537"/>
</kw>
<msg timestamp="20240102 11:38:52.537" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:38:51.692" endtime="20240102 11:38:52.537"/>
</kw>
<msg timestamp="20240102 11:38:52.538" level="INFO">${output} = 2024-01-02 11:38:52,038 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1053-azure botocore/1.26.10
2024-01-02 11:38:52,038 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20240102 11:38:51.692" endtime="20240102 11:38:52.538"/>
</kw>
<msg timestamp="20240102 11:38:52.538" level="INFO">${result} = 2024-01-02 11:38:52,038 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1053-azure botocore/1.26.10
2024-01-02 11:38:52,038 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20240102 11:38:51.691" endtime="20240102 11:38:52.538"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<var>${match}</var>
<var>${etag1}</var>
<arg>${result}</arg>
<arg>(?is)POST /${BUCKET}/big_file\\?uploadId=.*?Response body.*?ETag&gt;"(.*?-2)"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<msg timestamp="20240102 11:38:52.540" level="INFO">${match} = POST /erasure/big_file?uploadId=68620e58-e0d7-4a7e-bf61-5f8123d7182c-111686158392033357 HTTP/1.1" 200 286
2024-01-02 11:38:52,466 - ThreadPoolExecutor-0_3 - botocore.parsers - DEBUG - Response headers...</msg>
<msg timestamp="20240102 11:38:52.540" level="INFO">${etag1} = 82e0464439ba9856e13bcc6dabd29669-2</msg>
<status status="PASS" starttime="20240102 11:38:52.538" endtime="20240102 11:38:52.540"/>
</kw>
<kw name="Execute AWSS3CliDebug" library="commonawslib">
<var>${file_download_result}</var>
<arg>cp s3://${BUCKET}/big_file /tmp/big_file_downloaded</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws --debug s3 --endpoint ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:38:52.544" level="INFO">Running command 'aws --debug s3 --endpoint http://s3g:9878 cp s3://erasure/big_file /tmp/big_file_downloaded 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:38:53.188" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:38:53.188" level="INFO">${output} = 2024-01-02 11:38:52,878 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1053-azure botocore/1.26.10
2024-01-02 11:38:52,878 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20240102 11:38:52.542" endtime="20240102 11:38:53.188"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:38:53.190" level="INFO">2024-01-02 11:38:52,878 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1053-azure botocore/1.26.10
2024-01-02 11:38:52,878 - MainThread - awscli.clidriver - DEBUG - Arguments entered to CLI: ['--debug', 's3', '--endpoint', 'http://s3g:9878', 'cp', 's3://erasure/big_file', '/tmp/big_file_downloaded']
2024-01-02 11:38:52,878 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function add_scalar_parsers at 0x7effc77a29d8&gt;
2024-01-02 11:38:52,878 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function register_uri_param_handler at 0x7effc8596730&gt;
2024-01-02 11:38:52,879 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function inject_assume_role_provider_cache at 0x7effc85c5ae8&gt;
2024-01-02 11:38:52,879 - MainThread - botocore.utils - DEBUG - IMDS ENDPOINT: http://169.254.169.254/
2024-01-02 11:38:52,882 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function attach_history_handler at 0x7effc78ce400&gt;
2024-01-02 11:38:52,882 - MainThread - botocore.hooks - DEBUG - Event building-command-table.s3: calling handler &lt;function add_waiters at 0x7effc77b1048&gt;
2024-01-02 11:38:52,883 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.s3.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7effcf4b16d8&gt;
2024-01-02 11:38:52,883 - MainThread - botocore.hooks - DEBUG - Event building-command-table.cp: calling handler &lt;function add_waiters at 0x7effc77b1048&gt;
2024-01-02 11:38:52,885 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.paths: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7effcf4b16d8&gt;
2024-01-02 11:38:52,885 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.dryrun: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7effcf4b16d8&gt;
2024-01-02 11:38:52,885 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7effc85992b0&gt;
2024-01-02 11:38:52,885 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.quiet: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7effcf4b16d8&gt;
2024-01-02 11:38:52,885 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7effc85992b0&gt;
2024-01-02 11:38:52,885 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7effcf4b16d8&gt;
2024-01-02 11:38:52,885 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.acl: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7effcf4b16d8&gt;
2024-01-02 11:38:52,886 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.follow-symlinks: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7effcf4b16d8&gt;
2024-01-02 11:38:52,886 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7effc85992b0&gt;
2024-01-02 11:38:52,886 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7effcf4b16d8&gt;
2024-01-02 11:38:52,886 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7effcf4b16d8&gt;
2024-01-02 11:38:52,886 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7effcf4b16d8&gt;
2024-01-02 11:38:52,886 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-key: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7effcf4b16d8&gt;
2024-01-02 11:38:52,886 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-kms-key-id: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7effcf4b16d8&gt;
2024-01-02 11:38:52,886 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-copy-source: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7effcf4b16d8&gt;
2024-01-02 11:38:52,886 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-copy-source-key: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7effcf4b16d8&gt;
2024-01-02 11:38:52,887 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.storage-class: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7effcf4b16d8&gt;
2024-01-02 11:38:52,887 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.grants: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7effcf4b16d8&gt;
2024-01-02 11:38:52,887 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.website-redirect: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7effcf4b16d8&gt;
2024-01-02 11:38:52,887 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-type: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7effcf4b16d8&gt;
2024-01-02 11:38:52,887 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.cache-control: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7effcf4b16d8&gt;
2024-01-02 11:38:52,887 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-disposition: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7effcf4b16d8&gt;
2024-01-02 11:38:52,887 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-encoding: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7effcf4b16d8&gt;
2024-01-02 11:38:52,887 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-language: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7effcf4b16d8&gt;
2024-01-02 11:38:52,887 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.expires: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7effcf4b16d8&gt;
2024-01-02 11:38:52,888 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.source-region: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7effcf4b16d8&gt;
2024-01-02 11:38:52,888 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.only-show-errors: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7effcf4b16d8&gt;
2024-01-02 11:38:52,888 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7effc85992b0&gt;
2024-01-02 11:38:52,888 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7effcf4b16d8&gt;
2024-01-02 11:38:52,888 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.page-size: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7effcf4b16d8&gt;
2024-01-02 11:38:52,888 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.ignore-glacier-warnings: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7effcf4b16d8&gt;
2024-01-02 11:38:52,888 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7effc85992b0&gt;
2024-01-02 11:38:52,888 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.force-glacier-transfer: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7effcf4b16d8&gt;
2024-01-02 11:38:52,888 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7effc85992b0&gt;
2024-01-02 11:38:52,888 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.request-payer: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7effcf4b16d8&gt;
2024-01-02 11:38:52,889 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.metadata: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7effcf4b16d8&gt;
2024-01-02 11:38:52,889 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.metadata-directive: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7effcf4b16d8&gt;
2024-01-02 11:38:52,889 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.expected-size: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7effcf4b16d8&gt;
2024-01-02 11:38:52,889 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7effcf4b16d8&gt;
2024-01-02 11:38:52,889 - MainThread - botocore.credentials - DEBUG - Looking for credentials via: env
2024-01-02 11:38:52,889 - MainThread - botocore.credentials - INFO - Found credentials in environment variables.
2024-01-02 11:38:52,890 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/endpoints.json
2024-01-02 11:38:52,902 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/sdk-default-configuration.json
2024-01-02 11:38:52,903 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7effc925a378&gt;
2024-01-02 11:38:52,904 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/s3/2006-03-01/service-2.json
2024-01-02 11:38:52,913 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7effc95342f0&gt;
2024-01-02 11:38:52,913 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7effc95340d0&gt;
2024-01-02 11:38:52,913 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2024-01-02 11:38:52,915 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2024-01-02 11:38:52,916 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/_retry.json
2024-01-02 11:38:52,916 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2024-01-02 11:38:52,917 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2024-01-02 11:38:52,917 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7effc925a378&gt;
2024-01-02 11:38:52,918 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7effc95342f0&gt;
2024-01-02 11:38:52,918 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7effc95340d0&gt;
2024-01-02 11:38:52,919 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2024-01-02 11:38:52,921 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2024-01-02 11:38:52,921 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2024-01-02 11:38:52,922 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2024-01-02 11:38:52,922 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7effc925a378&gt;
2024-01-02 11:38:52,923 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7effc95342f0&gt;
2024-01-02 11:38:52,923 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7effc95340d0&gt;
2024-01-02 11:38:52,924 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2024-01-02 11:38:52,926 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2024-01-02 11:38:52,926 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2024-01-02 11:38:52,927 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2024-01-02 11:38:52,927 - MainThread - awscli.customizations.s3.s3handler - DEBUG - Using a multipart threshold of 8388608 and a part size of 8388608
2024-01-02 11:38:52,928 - MainThread - botocore.hooks - DEBUG - Event before-parameter-build.s3.HeadObject: calling handler &lt;function sse_md5 at 0x7effc9273ae8&gt;
2024-01-02 11:38:52,928 - MainThread - botocore.hooks - DEBUG - Event before-parameter-build.s3.HeadObject: calling handler &lt;function validate_bucket_name at 0x7effc9273a60&gt;
2024-01-02 11:38:52,928 - MainThread - botocore.hooks - DEBUG - Event before-parameter-build.s3.HeadObject: calling handler &lt;bound method S3RegionRedirector.redirect_from_cache of &lt;botocore.utils.S3RegionRedirector object at 0x7effc7047320&gt;&gt;
2024-01-02 11:38:52,928 - MainThread - botocore.hooks - DEBUG - Event before-parameter-build.s3.HeadObject: calling handler &lt;bound method S3ArnParamHandler.handle_arn of &lt;botocore.utils.S3ArnParamHandler object at 0x7effc70476d8&gt;&gt;
2024-01-02 11:38:52,928 - MainThread - botocore.hooks - DEBUG - Event before-parameter-build.s3.HeadObject: calling handler &lt;function generate_idempotent_uuid at 0x7effc92738c8&gt;
2024-01-02 11:38:52,929 - MainThread - botocore.hooks - DEBUG - Event before-call.s3.HeadObject: calling handler &lt;function add_expect_header at 0x7effc9273d90&gt;
2024-01-02 11:38:52,929 - MainThread - botocore.hooks - DEBUG - Event before-call.s3.HeadObject: calling handler &lt;bound method S3RegionRedirector.set_request_url of &lt;botocore.utils.S3RegionRedirector object at 0x7effc7047320&gt;&gt;
2024-01-02 11:38:52,929 - MainThread - botocore.hooks - DEBUG - Event before-call.s3.HeadObject: calling handler &lt;function add_recursion_detection_header at 0x7effc9273598&gt;
2024-01-02 11:38:52,929 - MainThread - botocore.hooks - DEBUG - Event before-call.s3.HeadObject: calling handler &lt;function inject_api_version_header_if_needed at 0x7effc92790d0&gt;
2024-01-02 11:38:52,929 - MainThread - botocore.endpoint - DEBUG - Making request for OperationModel(name=HeadObject) with params: {'url_path': '/erasure/big_file', 'query_string': {}, 'method': 'HEAD', 'headers': {'User-Agent': 'aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1053-azure botocore/1.26.10'}, 'body': b'', 'url': 'http://s3g:9878/erasure/big_file', 'context': {'client_region': 'us-west-1', 'client_config': &lt;botocore.config.Config object at 0x7effc70f6f98&gt;, 'has_streaming_input': False, 'auth_type': None, 'signing': {'bucket': 'erasure'}}}
2024-01-02 11:38:52,929 - MainThread - botocore.hooks - DEBUG - Event request-created.s3.HeadObject: calling handler &lt;bound method RequestSigner.handler of &lt;botocore.signers.RequestSigner object at 0x7effc70f6f60&gt;&gt;
2024-01-02 11:38:52,929 - MainThread - botocore.hooks - DEBUG - Event choose-signer.s3.HeadObject: calling handler &lt;bound method S3EndpointSetter.set_signer of &lt;botocore.utils.S3EndpointSetter object at 0x7effc7047748&gt;&gt;
2024-01-02 11:38:52,929 - MainThread - botocore.hooks - DEBUG - Event choose-signer.s3.HeadObject: calling handler &lt;function set_operation_specific_signer at 0x7effc92737b8&gt;
2024-01-02 11:38:52,930 - MainThread - botocore.hooks - DEBUG - Event before-sign.s3.HeadObject: calling handler &lt;bound method S3EndpointSetter.set_endpoint of &lt;botocore.utils.S3EndpointSetter object at 0x7effc7047748&gt;&gt;
2024-01-02 11:38:52,930 - MainThread - botocore.utils - DEBUG - Using S3 path style addressing.
2024-01-02 11:38:52,930 - MainThread - botocore.auth - DEBUG - Calculating signature using v4 auth.
2024-01-02 11:38:52,930 - MainThread - botocore.auth - DEBUG - CanonicalRequest:
HEAD
/erasure/big_file

host:s3g:9878
x-amz-content-sha256:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
x-amz-date:20240102T113852Z

host;x-amz-content-sha256;x-amz-date
e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
2024-01-02 11:38:52,930 - MainThread - botocore.auth - DEBUG - StringToSign:
AWS4-HMAC-SHA256
20240102T113852Z
20240102/us-west-1/s3/aws4_request
04ade4f4896abe1f3ac2fc1a460a1552f12f2f2051304930ed8debe7f3a22fec
2024-01-02 11:38:52,930 - MainThread - botocore.auth - DEBUG - Signature:
554241d1212c6a3c26f052e181e7d2ea7d6dbc1400d12c6e2451c5a6f209159d
2024-01-02 11:38:52,930 - MainThread - botocore.hooks - DEBUG - Event request-created.s3.HeadObject: calling handler &lt;function add_retry_headers at 0x7effc9279730&gt;
2024-01-02 11:38:52,930 - MainThread - botocore.endpoint - DEBUG - Sending http request: &lt;AWSPreparedRequest stream_output=False, method=HEAD, url=http://s3g:9878/erasure/big_file, headers={'User-Agent': b'aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1053-azure botocore/1.26.10', 'X-Amz-Date': b'20240102T113852Z', 'X-Amz-Content-SHA256': b'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855', 'Authorization': b'AWS4-HMAC-SHA256 Credential=dlfknslnfslf/20240102/us-west-1/s3/aws4_request, SignedHeaders=host;x-amz-content-sha256;x-amz-date, Signature=554241d1212c6a3c26f052e181e7d2ea7d6dbc1400d12c6e2451c5a6f209159d', 'amz-sdk-invocation-id': b'fcf7bf9d-9e25-4ff9-a0f9-55b1fb6c7915', 'amz-sdk-request': b'attempt=1'}&gt;
2024-01-02 11:38:52,931 - MainThread - urllib3.connectionpool - DEBUG - Starting new HTTP connection (1): s3g:9878
2024-01-02 11:38:52,938 - MainThread - urllib3.connectionpool - DEBUG - http://s3g:9878 "HEAD /erasure/big_file HTTP/1.1" 200 0
2024-01-02 11:38:52,938 - MainThread - botocore.parsers - DEBUG - Response headers: {'Date': 'Tue, 02 Jan 2024 11:38:52 GMT', 'Cache-Control': 'no-cache', 'Expires': 'Tue, 02 Jan 2024 11:38:52 GMT', 'Pragma': 'no-cache', 'Content-Type': 'binary/octet-stream', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'X-FRAME-OPTIONS': 'SAMEORIGIN', 'ETag': '"82e0464439ba9856e13bcc6dabd29669-2"', 'Last-Modified': 'Tue, 02 Jan 2024 11:38:52 GMT', 'Server': 'Ozone', 'x-amz-id-2': 'iAWh1AMiTeokkg', 'x-amz-request-id': '3385620c-27ce-4858-b95f-833eab4aa164', 'Content-Length': '10000000'}
2024-01-02 11:38:52,938 - MainThread - botocore.parsers - DEBUG - Response body:
b''
2024-01-02 11:38:52,939 - MainThread - botocore.hooks - DEBUG - Event needs-retry.s3.HeadObject: calling handler &lt;botocore.retryhandler.RetryHandler object at 0x7effc7047358&gt;
2024-01-02 11:38:52,939 - MainThread - botocore.retryhandler - DEBUG - No retry needed.
2024-01-02 11:38:52,939 - MainThread - botocore.hooks - DEBUG - Event needs-retry.s3.HeadObject: calling handler &lt;bound method S3RegionRedirector.redirect_from_error of &lt;botocore.utils.S3RegionRedirector object at 0x7effc7047320&gt;&gt;
2024-01-02 11:38:52,939 - MainThread - botocore.hooks - DEBUG - Event after-call.s3.HeadObject: calling handler &lt;function enhance_error_msg at 0x7effc77a2598&gt;
2024-01-02 11:38:52,940 - MainThread - s3transfer.utils - DEBUG - Acquiring 0
2024-01-02 11:38:52,941 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - DownloadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7effc706e7b8&gt;}) about to wait for the following futures []
2024-01-02 11:38:52,941 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - DownloadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7effc706e7b8&gt;}) done waiting for dependent futures
2024-01-02 11:38:52,941 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - Executing task DownloadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7effc706e7b8&gt;}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7effc710f828&gt;, 'config': &lt;s3transfer.manager.TransferConfig object at 0x7effc7047978&gt;, 'osutil': &lt;s3transfer.utils.OSUtils object at 0x7effc70479e8&gt;, 'request_executor': &lt;s3transfer.futures.BoundedExecutor object at 0x7effc7047b70&gt;, 'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7effc706e7b8&gt;, 'io_executor': &lt;s3transfer.futures.BoundedExecutor object at 0x7effc7047f60&gt;}
2024-01-02 11:38:52,941 - ThreadPoolExecutor-1_0 - s3transfer.futures - DEBUG - Submitting task GetObjectTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'extra_args': {'Range': 'bytes=0-8388607'}}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7effc7047b70&gt; for transfer request: 0.
2024-01-02 11:38:52,942 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Acquiring 0
2024-01-02 11:38:52,942 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - GetObjectTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'extra_args': {'Range': 'bytes=0-8388607'}}) about to wait for the following futures []
2024-01-02 11:38:52,942 - ThreadPoolExecutor-1_0 - s3transfer.futures - DEBUG - Submitting task GetObjectTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'extra_args': {'Range': 'bytes=8388608-'}}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7effc7047b70&gt; for transfer request: 0.
2024-01-02 11:38:52,942 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - GetObjectTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'extra_args': {'Range': 'bytes=0-8388607'}}) done waiting for dependent futures
2024-01-02 11:38:52,942 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Acquiring 0
2024-01-02 11:38:52,943 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task GetObjectTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'extra_args': {'Range': 'bytes=0-8388607'}}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7effc710f828&gt;, 'bucket': 'erasure', 'key': 'big_file', 'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7effc706e9e8&gt;, 'extra_args': {'Range': 'bytes=0-8388607'}, 'callbacks': [functools.partial(&lt;bound method BaseSubscriber.on_progress of &lt;awscli.customizations.s3.utils.ProvideSizeSubscriber object at 0x7effc706eba8&gt;&gt;, future=&lt;s3transfer.futures.TransferFuture object at 0x7effc706e7b8&gt;), functools.partial(&lt;bound method BaseSubscriber.on_progress of &lt;awscli.customizations.s3.utils.DirectoryCreatorSubscriber object at 0x7effc706ea90&gt;&gt;, future=&lt;s3transfer.futures.TransferFuture object at 0x7effc706e7b8&gt;), functools.partial(&lt;bound method BaseSubscriber.on_progress of &lt;awscli.customizations.s3.utils.ProvideLastModifiedTimeSubscriber object at 0x7effc706eac8&gt;&gt;, future=&lt;s3transfer.futures.TransferFuture object at 0x7effc706e7b8&gt;), functools.partial(&lt;bound method BaseResultSubscriber.on_progress of &lt;awscli.customizations.s3.results.DownloadResultSubscriber object at 0x7effc706ef28&gt;&gt;, future=&lt;s3transfer.futures.TransferFuture object at 0x7effc706e7b8&gt;)], 'max_attempts': 5, 'start_index': 0, 'download_output_manager': &lt;s3transfer.download.DownloadFilenameOutputManager object at 0x7effc706ec50&gt;, 'io_chunksize': 262144, 'bandwidth_limiter': None}
2024-01-02 11:38:52,943 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;function sse_md5 at 0x7effc9273ae8&gt;
2024-01-02 11:38:52,943 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;function validate_bucket_name at 0x7effc9273a60&gt;
2024-01-02 11:38:52,943 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;bound method S3RegionRedirector.redirect_from_cache of &lt;botocore.utils.S3RegionRedirector object at 0x7effc710fd68&gt;&gt;
2024-01-02 11:38:52,943 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;bound method S3ArnParamHandler.handle_arn of &lt;botocore.utils.S3ArnParamHandler object at 0x7effc70df160&gt;&gt;
2024-01-02 11:38:52,943 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;function generate_idempotent_uuid at 0x7effc92738c8&gt;
2024-01-02 11:38:52,944 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.GetObject: calling handler &lt;function add_expect_header at 0x7effc9273d90&gt;
2024-01-02 11:38:52,944 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.GetObject: calling handler &lt;bound method S3RegionRedirector.set_request_url of &lt;botocore.utils.S3RegionRedirector object at 0x7effc710fd68&gt;&gt;
2024-01-02 11:38:52,944 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.GetObject: calling handler &lt;function add_recursion_detection_header at 0x7effc9273598&gt;
2024-01-02 11:38:52,944 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.GetObject: calling handler &lt;function inject_api_version_header_if_needed at 0x7effc92790d0&gt;
2024-01-02 11:38:52,944 - ThreadPoolExecutor-0_0 - botocore.endpoint - DEBUG - Making request for OperationModel(name=GetObject) with params: {'url_path': '/erasure/big_file', 'query_string': {}, 'method': 'GET', 'headers': {'Range': 'bytes=0-8388607', 'User-Agent': 'aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1053-azure botocore/1.26.10'}, 'body': b'', 'url': 'http://s3g:9878/erasure/big_file', 'context': {'client_region': 'us-west-1', 'client_config': &lt;botocore.config.Config object at 0x7effc710fa20&gt;, 'has_streaming_input': False, 'auth_type': None, 'signing': {'bucket': 'erasure'}}}
2024-01-02 11:38:52,944 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.GetObject: calling handler &lt;function signal_not_transferring at 0x7effcb79c158&gt;
2024-01-02 11:38:52,944 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.GetObject: calling handler &lt;bound method RequestSigner.handler of &lt;botocore.signers.RequestSigner object at 0x7effc710f9e8&gt;&gt;
2024-01-02 11:38:52,945 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event choose-signer.s3.GetObject: calling handler &lt;bound method S3EndpointSetter.set_signer of &lt;botocore.utils.S3EndpointSetter object at 0x7effc70df1d0&gt;&gt;
2024-01-02 11:38:52,945 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event choose-signer.s3.GetObject: calling handler &lt;function set_operation_specific_signer at 0x7effc92737b8&gt;
2024-01-02 11:38:52,945 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-sign.s3.GetObject: calling handler &lt;bound method S3EndpointSetter.set_endpoint of &lt;botocore.utils.S3EndpointSetter object at 0x7effc70df1d0&gt;&gt;
2024-01-02 11:38:52,945 - ThreadPoolExecutor-0_0 - botocore.utils - DEBUG - Using S3 path style addressing.
2024-01-02 11:38:52,945 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - Calculating signature using v4 auth.
2024-01-02 11:38:52,945 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - CanonicalRequest:
GET
/erasure/big_file

host:s3g:9878
range:bytes=0-8388607
x-amz-content-sha256:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
x-amz-date:20240102T113852Z

host;range;x-amz-content-sha256;x-amz-date
e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
2024-01-02 11:38:52,945 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - StringToSign:
AWS4-HMAC-SHA256
20240102T113852Z
20240102/us-west-1/s3/aws4_request
c50980e0e63c31bfdb1dad04c1eb5e58bc5bc6e22b6e69c881d7c1debf935df6
2024-01-02 11:38:52,945 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - Signature:
ab6b0600d84818c43adcd79ecba5cbb58d35880b41bf1fe532392b3fb02d18ce
2024-01-02 11:38:52,945 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.GetObject: calling handler &lt;function signal_transferring at 0x7effcb79c1e0&gt;
2024-01-02 11:38:52,945 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.GetObject: calling handler &lt;function add_retry_headers at 0x7effc9279730&gt;
2024-01-02 11:38:52,946 - ThreadPoolExecutor-0_0 - botocore.endpoint - DEBUG - Sending http request: &lt;AWSPreparedRequest stream_output=True, method=GET, url=http://s3g:9878/erasure/big_file, headers={'Range': b'bytes=0-8388607', 'User-Agent': b'aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1053-azure botocore/1.26.10', 'X-Amz-Date': b'20240102T113852Z', 'X-Amz-Content-SHA256': b'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855', 'Authorization': b'AWS4-HMAC-SHA256 Credential=dlfknslnfslf/20240102/us-west-1/s3/aws4_request, SignedHeaders=host;range;x-amz-content-sha256;x-amz-date, Signature=ab6b0600d84818c43adcd79ecba5cbb58d35880b41bf1fe532392b3fb02d18ce', 'amz-sdk-invocation-id': b'afb8660f-91b2-4d36-abe1-189754a0db43', 'amz-sdk-request': b'attempt=1'}&gt;
2024-01-02 11:38:52,946 - ThreadPoolExecutor-0_0 - urllib3.connectionpool - DEBUG - Starting new HTTP connection (1): s3g:9878
2024-01-02 11:38:52,946 - ThreadPoolExecutor-0_1 - s3transfer.tasks - DEBUG - GetObjectTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'extra_args': {'Range': 'bytes=8388608-'}}) about to wait for the following futures []
2024-01-02 11:38:52,947 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2024-01-02 11:38:52,947 - ThreadPoolExecutor-0_1 - s3transfer.tasks - DEBUG - GetObjectTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'extra_args': {'Range': 'bytes=8388608-'}}) done waiting for dependent futures
2024-01-02 11:38:52,947 - ThreadPoolExecutor-0_1 - s3transfer.tasks - DEBUG - Executing task GetObjectTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'extra_args': {'Range': 'bytes=8388608-'}}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7effc710f828&gt;, 'bucket': 'erasure', 'key': 'big_file', 'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7effc706e9e8&gt;, 'extra_args': {'Range': 'bytes=8388608-'}, 'callbacks': [functools.partial(&lt;bound method BaseSubscriber.on_progress of &lt;awscli.customizations.s3.utils.ProvideSizeSubscriber object at 0x7effc706eba8&gt;&gt;, future=&lt;s3transfer.futures.TransferFuture object at 0x7effc706e7b8&gt;), functools.partial(&lt;bound method BaseSubscriber.on_progress of &lt;awscli.customizations.s3.utils.DirectoryCreatorSubscriber object at 0x7effc706ea90&gt;&gt;, future=&lt;s3transfer.futures.TransferFuture object at 0x7effc706e7b8&gt;), functools.partial(&lt;bound method BaseSubscriber.on_progress of &lt;awscli.customizations.s3.utils.ProvideLastModifiedTimeSubscriber object at 0x7effc706eac8&gt;&gt;, future=&lt;s3transfer.futures.TransferFuture object at 0x7effc706e7b8&gt;), functools.partial(&lt;bound method BaseResultSubscriber.on_progress of &lt;awscli.customizations.s3.results.DownloadResultSubscriber object at 0x7effc706ef28&gt;&gt;, future=&lt;s3transfer.futures.TransferFuture object at 0x7effc706e7b8&gt;)], 'max_attempts': 5, 'start_index': 8388608, 'download_output_manager': &lt;s3transfer.download.DownloadFilenameOutputManager object at 0x7effc706ec50&gt;, 'io_chunksize': 262144, 'bandwidth_limiter': None}
2024-01-02 11:38:52,947 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;function sse_md5 at 0x7effc9273ae8&gt;
2024-01-02 11:38:52,947 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;function validate_bucket_name at 0x7effc9273a60&gt;
2024-01-02 11:38:52,947 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;bound method S3RegionRedirector.redirect_from_cache of &lt;botocore.utils.S3RegionRedirector object at 0x7effc710fd68&gt;&gt;
2024-01-02 11:38:52,947 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;bound method S3ArnParamHandler.handle_arn of &lt;botocore.utils.S3ArnParamHandler object at 0x7effc70df160&gt;&gt;
2024-01-02 11:38:52,947 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;function generate_idempotent_uuid at 0x7effc92738c8&gt;
2024-01-02 11:38:52,947 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-call.s3.GetObject: calling handler &lt;function add_expect_header at 0x7effc9273d90&gt;
2024-01-02 11:38:52,947 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-call.s3.GetObject: calling handler &lt;bound method S3RegionRedirector.set_request_url of &lt;botocore.utils.S3RegionRedirector object at 0x7effc710fd68&gt;&gt;
2024-01-02 11:38:52,948 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-call.s3.GetObject: calling handler &lt;function add_recursion_detection_header at 0x7effc9273598&gt;
2024-01-02 11:38:52,948 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-call.s3.GetObject: calling handler &lt;function inject_api_version_header_if_needed at 0x7effc92790d0&gt;
2024-01-02 11:38:52,948 - ThreadPoolExecutor-0_1 - botocore.endpoint - DEBUG - Making request for OperationModel(name=GetObject) with params: {'url_path': '/erasure/big_file', 'query_string': {}, 'method': 'GET', 'headers': {'Range': 'bytes=8388608-', 'User-Agent': 'aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1053-azure botocore/1.26.10'}, 'body': b'', 'url': 'http://s3g:9878/erasure/big_file', 'context': {'client_region': 'us-west-1', 'client_config': &lt;botocore.config.Config object at 0x7effc710fa20&gt;, 'has_streaming_input': False, 'auth_type': None, 'signing': {'bucket': 'erasure'}}}
2024-01-02 11:38:52,948 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event request-created.s3.GetObject: calling handler &lt;function signal_not_transferring at 0x7effcb79c158&gt;
2024-01-02 11:38:52,948 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event request-created.s3.GetObject: calling handler &lt;bound method RequestSigner.handler of &lt;botocore.signers.RequestSigner object at 0x7effc710f9e8&gt;&gt;
2024-01-02 11:38:52,948 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event choose-signer.s3.GetObject: calling handler &lt;bound method S3EndpointSetter.set_signer of &lt;botocore.utils.S3EndpointSetter object at 0x7effc70df1d0&gt;&gt;
2024-01-02 11:38:52,948 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event choose-signer.s3.GetObject: calling handler &lt;function set_operation_specific_signer at 0x7effc92737b8&gt;
2024-01-02 11:38:52,948 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-sign.s3.GetObject: calling handler &lt;bound method S3EndpointSetter.set_endpoint of &lt;botocore.utils.S3EndpointSetter object at 0x7effc70df1d0&gt;&gt;
2024-01-02 11:38:52,948 - ThreadPoolExecutor-0_1 - botocore.auth - DEBUG - Calculating signature using v4 auth.
2024-01-02 11:38:52,948 - ThreadPoolExecutor-0_1 - botocore.auth - DEBUG - CanonicalRequest:
GET
/erasure/big_file

host:s3g:9878
range:bytes=8388608-
x-amz-content-sha256:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
x-amz-date:20240102T113852Z

host;range;x-amz-content-sha256;x-amz-date
e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
2024-01-02 11:38:52,948 - ThreadPoolExecutor-0_1 - botocore.auth - DEBUG - StringToSign:
AWS4-HMAC-SHA256
20240102T113852Z
20240102/us-west-1/s3/aws4_request
bbb32a6a32cc2ec33ca07cae5cb68db85f44f7a36544f621792ac61c7057885b
2024-01-02 11:38:52,948 - ThreadPoolExecutor-0_1 - botocore.auth - DEBUG - Signature:
f66761d7f44493509291015574843fed2f1ed4ad8b31113a4f354970947ed617
2024-01-02 11:38:52,948 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event request-created.s3.GetObject: calling handler &lt;function signal_transferring at 0x7effcb79c1e0&gt;
2024-01-02 11:38:52,948 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event request-created.s3.GetObject: calling handler &lt;function add_retry_headers at 0x7effc9279730&gt;
2024-01-02 11:38:52,949 - ThreadPoolExecutor-0_1 - botocore.endpoint - DEBUG - Sending http request: &lt;AWSPreparedRequest stream_output=True, method=GET, url=http://s3g:9878/erasure/big_file, headers={'Range': b'bytes=8388608-', 'User-Agent': b'aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1053-azure botocore/1.26.10', 'X-Amz-Date': b'20240102T113852Z', 'X-Amz-Content-SHA256': b'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855', 'Authorization': b'AWS4-HMAC-SHA256 Credential=dlfknslnfslf/20240102/us-west-1/s3/aws4_request, SignedHeaders=host;range;x-amz-content-sha256;x-amz-date, Signature=f66761d7f44493509291015574843fed2f1ed4ad8b31113a4f354970947ed617', 'amz-sdk-invocation-id': b'f0dfd721-0393-4372-917d-4d2bad15febf', 'amz-sdk-request': b'attempt=1'}&gt;
2024-01-02 11:38:52,949 - ThreadPoolExecutor-0_1 - urllib3.connectionpool - DEBUG - Starting new HTTP connection (2): s3g:9878
2024-01-02 11:38:52,968 - ThreadPoolExecutor-0_1 - urllib3.connectionpool - DEBUG - http://s3g:9878 "GET /erasure/big_file HTTP/1.1" 206 1611392
2024-01-02 11:38:52,969 - ThreadPoolExecutor-0_1 - botocore.parsers - DEBUG - Response headers: {'Date': 'Tue, 02 Jan 2024 11:38:52 GMT', 'Cache-Control': 'no-cache', 'Expires': 'Tue, 02 Jan 2024 11:38:52 GMT', 'Pragma': 'no-cache', 'Content-Type': 'application/octet-stream', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'X-FRAME-OPTIONS': 'SAMEORIGIN', 'Content-Range': 'bytes 8388608-9999999/10000000', 'ETag': '"82e0464439ba9856e13bcc6dabd29669-2"', 'Accept-Ranges': 'bytes', 'Last-Modified': 'Tue, 02 Jan 2024 11:38:52 GMT', 'Server': 'Ozone', 'x-amz-id-2': 'v4xy3Ti8PZ2', 'x-amz-request-id': '571f87a7-90d9-45b3-8027-314f069a2076', 'Content-Length': '1611392'}
2024-01-02 11:38:52,969 - ThreadPoolExecutor-0_1 - botocore.parsers - DEBUG - Response body:
&lt;botocore.response.StreamingBody object at 0x7effc4a949e8&gt;
2024-01-02 11:38:52,970 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event needs-retry.s3.GetObject: calling handler &lt;botocore.retryhandler.RetryHandler object at 0x7effc710fda0&gt;
2024-01-02 11:38:52,970 - ThreadPoolExecutor-0_1 - botocore.retryhandler - DEBUG - No retry needed.
2024-01-02 11:38:52,970 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event needs-retry.s3.GetObject: calling handler &lt;bound method S3RegionRedirector.redirect_from_error of &lt;botocore.utils.S3RegionRedirector object at 0x7effc710fd68&gt;&gt;
2024-01-02 11:38:52,970 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event after-call.s3.GetObject: calling handler &lt;function enhance_error_msg at 0x7effc77a2598&gt;
2024-01-02 11:38:52,971 - ThreadPoolExecutor-0_0 - urllib3.connectionpool - DEBUG - http://s3g:9878 "GET /erasure/big_file HTTP/1.1" 206 8388608
2024-01-02 11:38:52,971 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response headers: {'Date': 'Tue, 02 Jan 2024 11:38:52 GMT', 'Cache-Control': 'no-cache', 'Expires': 'Tue, 02 Jan 2024 11:38:52 GMT', 'Pragma': 'no-cache', 'Content-Type': 'application/octet-stream', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'X-FRAME-OPTIONS': 'SAMEORIGIN', 'Content-Range': 'bytes 0-8388607/10000000', 'ETag': '"82e0464439ba9856e13bcc6dabd29669-2"', 'Accept-Ranges': 'bytes', 'Last-Modified': 'Tue, 02 Jan 2024 11:38:52 GMT', 'Server': 'Ozone', 'x-amz-id-2': 'ISMsOWT3RWl', 'x-amz-request-id': 'b7d3122a-faaf-48c1-a3be-c2f980a53eb2', 'Content-Length': '8388608'}
2024-01-02 11:38:52,971 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response body:
&lt;botocore.response.StreamingBody object at 0x7effc4a94240&gt;
2024-01-02 11:38:52,971 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.GetObject: calling handler &lt;botocore.retryhandler.RetryHandler object at 0x7effc710fda0&gt;
2024-01-02 11:38:52,971 - ThreadPoolExecutor-0_0 - botocore.retryhandler - DEBUG - No retry needed.
2024-01-02 11:38:52,971 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.GetObject: calling handler &lt;bound method S3RegionRedirector.redirect_from_error of &lt;botocore.utils.S3RegionRedirector object at 0x7effc710fd68&gt;&gt;
2024-01-02 11:38:52,971 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event after-call.s3.GetObject: calling handler &lt;function enhance_error_msg at 0x7effc77a2598&gt;
Completed 256.0 KiB/9.5 MiB (8.4 MiB/s) with 1 file(s) remaining
2024-01-02 11:38:52,972 - ThreadPoolExecutor-0_1 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 8388608}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7effc7047f60&gt; for transfer request: 0.
2024-01-02 11:38:52,972 - ThreadPoolExecutor-0_1 - s3transfer.utils - DEBUG - Acquiring 0
2024-01-02 11:38:52,974 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 0}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7effc7047f60&gt; for transfer request: 0.
2024-01-02 11:38:52,974 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
Completed 512.0 KiB/9.5 MiB (15.8 MiB/s) with 1 file(s) remaining
2024-01-02 11:38:52,974 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 8388608}) about to wait for the following futures []
2024-01-02 11:38:52,974 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 8388608}) done waiting for dependent futures
2024-01-02 11:38:52,975 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 8388608}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7effc706e9e8&gt;, 'offset': 8388608}
2024-01-02 11:38:52,975 - ThreadPoolExecutor-0_1 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 8650752}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7effc7047f60&gt; for transfer request: 0.
Completed 768.0 KiB/9.5 MiB (22.4 MiB/s) with 1 file(s) remaining
Completed 1.0 MiB/9.5 MiB (29.7 MiB/s) with 1 file(s) remaining  
2024-01-02 11:38:52,976 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 262144}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7effc7047f60&gt; for transfer request: 0.
2024-01-02 11:38:52,976 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
2024-01-02 11:38:52,976 - ThreadPoolExecutor-0_1 - s3transfer.utils - DEBUG - Acquiring 0
2024-01-02 11:38:52,976 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2024-01-02 11:38:52,976 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 0}) about to wait for the following futures []
2024-01-02 11:38:52,976 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 0}) done waiting for dependent futures
2024-01-02 11:38:52,977 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 0}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7effc706e9e8&gt;, 'offset': 0}
Completed 1.2 MiB/9.5 MiB (36.0 MiB/s) with 1 file(s) remaining  
2024-01-02 11:38:52,977 - ThreadPoolExecutor-0_1 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 8912896}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7effc7047f60&gt; for transfer request: 0.
Completed 1.5 MiB/9.5 MiB (40.3 MiB/s) with 1 file(s) remaining  
2024-01-02 11:38:52,979 - ThreadPoolExecutor-0_1 - s3transfer.utils - DEBUG - Acquiring 0
Completed 1.8 MiB/9.5 MiB (46.3 MiB/s) with 1 file(s) remaining  
2024-01-02 11:38:52,979 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 524288}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7effc7047f60&gt; for transfer request: 0.
2024-01-02 11:38:52,980 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
Completed 2.0 MiB/9.5 MiB (52.1 MiB/s) with 1 file(s) remaining  
2024-01-02 11:38:52,980 - ThreadPoolExecutor-0_1 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 9175040}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7effc7047f60&gt; for transfer request: 0.
2024-01-02 11:38:52,981 - ThreadPoolExecutor-0_1 - s3transfer.utils - DEBUG - Acquiring 0
2024-01-02 11:38:52,980 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 786432}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7effc7047f60&gt; for transfer request: 0.
2024-01-02 11:38:52,982 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
2024-01-02 11:38:52,982 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2024-01-02 11:38:52,982 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 262144}) about to wait for the following futures []
2024-01-02 11:38:52,982 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 262144}) done waiting for dependent futures
2024-01-02 11:38:52,983 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 262144}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7effc706e9e8&gt;, 'offset': 262144}
2024-01-02 11:38:52,983 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2024-01-02 11:38:52,983 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 8650752}) about to wait for the following futures []
2024-01-02 11:38:52,983 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 8650752}) done waiting for dependent futures
2024-01-02 11:38:52,983 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 8650752}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7effc706e9e8&gt;, 'offset': 8650752}
2024-01-02 11:38:52,984 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2024-01-02 11:38:52,984 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 8912896}) about to wait for the following futures []
2024-01-02 11:38:52,984 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 8912896}) done waiting for dependent futures
2024-01-02 11:38:52,984 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 8912896}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7effc706e9e8&gt;, 'offset': 8912896}
2024-01-02 11:38:52,984 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2024-01-02 11:38:52,985 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 524288}) about to wait for the following futures []
2024-01-02 11:38:52,985 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 524288}) done waiting for dependent futures
2024-01-02 11:38:52,985 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 524288}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7effc706e9e8&gt;, 'offset': 524288}
2024-01-02 11:38:52,985 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2024-01-02 11:38:52,985 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 9175040}) about to wait for the following futures []
2024-01-02 11:38:52,986 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 9175040}) done waiting for dependent futures
2024-01-02 11:38:52,986 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 9175040}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7effc706e9e8&gt;, 'offset': 9175040}
2024-01-02 11:38:52,986 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2024-01-02 11:38:52,986 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 786432}) about to wait for the following futures []
2024-01-02 11:38:52,986 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 786432}) done waiting for dependent futures
2024-01-02 11:38:52,987 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 786432}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7effc706e9e8&gt;, 'offset': 786432}
2024-01-02 11:38:52,987 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
Completed 2.2 MiB/9.5 MiB (44.6 MiB/s) with 1 file(s) remaining  
2024-01-02 11:38:52,992 - ThreadPoolExecutor-0_1 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 9437184}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7effc7047f60&gt; for transfer request: 0.
2024-01-02 11:38:52,993 - ThreadPoolExecutor-0_1 - s3transfer.utils - DEBUG - Acquiring 0
2024-01-02 11:38:52,993 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 9437184}) about to wait for the following futures []
2024-01-02 11:38:52,993 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 9437184}) done waiting for dependent futures
2024-01-02 11:38:52,993 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 9437184}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7effc706e9e8&gt;, 'offset': 9437184}
2024-01-02 11:38:52,993 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
Completed 2.5 MiB/9.5 MiB (48.4 MiB/s) with 1 file(s) remaining  
2024-01-02 11:38:52,994 - ThreadPoolExecutor-0_1 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 9699328}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7effc7047f60&gt; for transfer request: 0.
2024-01-02 11:38:52,994 - ThreadPoolExecutor-0_1 - s3transfer.utils - DEBUG - Acquiring 0
Completed 2.5 MiB/9.5 MiB (48.6 MiB/s) with 1 file(s) remaining  
2024-01-02 11:38:52,994 - ThreadPoolExecutor-0_1 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 9961472}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7effc7047f60&gt; for transfer request: 0.
2024-01-02 11:38:52,994 - ThreadPoolExecutor-0_1 - s3transfer.utils - DEBUG - Acquiring 0
2024-01-02 11:38:52,995 - ThreadPoolExecutor-0_1 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2024-01-02 11:38:52,998 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 1048576}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7effc7047f60&gt; for transfer request: 0.
2024-01-02 11:38:52,998 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
2024-01-02 11:38:52,999 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 1310720}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7effc7047f60&gt; for transfer request: 0.
2024-01-02 11:38:52,999 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
2024-01-02 11:38:52,999 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 1572864}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7effc7047f60&gt; for transfer request: 0.
2024-01-02 11:38:52,999 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
2024-01-02 11:38:53,000 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 1835008}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7effc7047f60&gt; for transfer request: 0.
2024-01-02 11:38:53,000 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
2024-01-02 11:38:53,000 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 9699328}) about to wait for the following futures []
2024-01-02 11:38:53,000 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 9699328}) done waiting for dependent futures
2024-01-02 11:38:53,000 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 9699328}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7effc706e9e8&gt;, 'offset': 9699328}
2024-01-02 11:38:53,001 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2024-01-02 11:38:53,001 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 9961472}) about to wait for the following futures []
2024-01-02 11:38:53,001 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 9961472}) done waiting for dependent futures
2024-01-02 11:38:53,002 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 9961472}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7effc706e9e8&gt;, 'offset': 9961472}
2024-01-02 11:38:53,002 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2024-01-02 11:38:53,002 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 1048576}) about to wait for the following futures []
2024-01-02 11:38:53,002 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 1048576}) done waiting for dependent futures
2024-01-02 11:38:53,002 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 1048576}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7effc706e9e8&gt;, 'offset': 1048576}
2024-01-02 11:38:53,002 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2024-01-02 11:38:53,002 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 1310720}) about to wait for the following futures []
2024-01-02 11:38:53,002 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 1310720}) done waiting for dependent futures
2024-01-02 11:38:53,002 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 1310720}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7effc706e9e8&gt;, 'offset': 1310720}
2024-01-02 11:38:53,003 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2024-01-02 11:38:53,003 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 1572864}) about to wait for the following futures []
2024-01-02 11:38:53,003 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 1572864}) done waiting for dependent futures
2024-01-02 11:38:53,003 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 1572864}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7effc706e9e8&gt;, 'offset': 1572864}
Completed 2.8 MiB/9.5 MiB (49.4 MiB/s) with 1 file(s) remaining  
Completed 3.0 MiB/9.5 MiB (53.4 MiB/s) with 1 file(s) remaining  
Completed 3.3 MiB/9.5 MiB (57.4 MiB/s) with 1 file(s) remaining  
Completed 3.5 MiB/9.5 MiB (61.4 MiB/s) with 1 file(s) remaining  
Completed 3.8 MiB/9.5 MiB (58.6 MiB/s) with 1 file(s) remaining  
2024-01-02 11:38:53,007 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 2097152}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7effc7047f60&gt; for transfer request: 0.
2024-01-02 11:38:53,007 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
2024-01-02 11:38:53,007 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2024-01-02 11:38:53,007 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 1835008}) about to wait for the following futures []
2024-01-02 11:38:53,007 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 1835008}) done waiting for dependent futures
2024-01-02 11:38:53,007 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 1835008}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7effc706e9e8&gt;, 'offset': 1835008}
2024-01-02 11:38:53,008 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
Completed 4.0 MiB/9.5 MiB (61.4 MiB/s) with 1 file(s) remaining  
2024-01-02 11:38:53,008 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 2097152}) about to wait for the following futures []
2024-01-02 11:38:53,008 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 2097152}) done waiting for dependent futures
2024-01-02 11:38:53,008 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 2097152}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7effc706e9e8&gt;, 'offset': 2097152}
2024-01-02 11:38:53,008 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2024-01-02 11:38:53,008 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 2359296}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7effc7047f60&gt; for transfer request: 0.
2024-01-02 11:38:53,008 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
Completed 4.3 MiB/9.5 MiB (64.2 MiB/s) with 1 file(s) remaining  
2024-01-02 11:38:53,009 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 2621440}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7effc7047f60&gt; for transfer request: 0.
2024-01-02 11:38:53,009 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
Completed 4.5 MiB/9.5 MiB (67.5 MiB/s) with 1 file(s) remaining  
2024-01-02 11:38:53,009 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 2883584}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7effc7047f60&gt; for transfer request: 0.
2024-01-02 11:38:53,009 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
2024-01-02 11:38:53,009 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 2359296}) about to wait for the following futures []
2024-01-02 11:38:53,010 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 2359296}) done waiting for dependent futures
2024-01-02 11:38:53,010 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 2359296}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7effc706e9e8&gt;, 'offset': 2359296}
2024-01-02 11:38:53,010 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2024-01-02 11:38:53,010 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 2621440}) about to wait for the following futures []
2024-01-02 11:38:53,010 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 2621440}) done waiting for dependent futures
2024-01-02 11:38:53,010 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 2621440}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7effc706e9e8&gt;, 'offset': 2621440}
2024-01-02 11:38:53,010 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2024-01-02 11:38:53,010 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 2883584}) about to wait for the following futures []
2024-01-02 11:38:53,011 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 2883584}) done waiting for dependent futures
2024-01-02 11:38:53,011 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 2883584}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7effc706e9e8&gt;, 'offset': 2883584}
2024-01-02 11:38:53,011 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2024-01-02 11:38:53,020 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 3145728}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7effc7047f60&gt; for transfer request: 0.
Completed 4.8 MiB/9.5 MiB (61.7 MiB/s) with 1 file(s) remaining  
2024-01-02 11:38:53,020 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
2024-01-02 11:38:53,020 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 3145728}) about to wait for the following futures []
Completed 5.0 MiB/9.5 MiB (64.3 MiB/s) with 1 file(s) remaining  
2024-01-02 11:38:53,020 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 3407872}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7effc7047f60&gt; for transfer request: 0.
2024-01-02 11:38:53,020 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 3145728}) done waiting for dependent futures
2024-01-02 11:38:53,020 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
2024-01-02 11:38:53,021 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 3145728}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7effc706e9e8&gt;, 'offset': 3145728}
2024-01-02 11:38:53,021 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 3670016}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7effc7047f60&gt; for transfer request: 0.
Completed 5.3 MiB/9.5 MiB (66.9 MiB/s) with 1 file(s) remaining  
2024-01-02 11:38:53,021 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
2024-01-02 11:38:53,021 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 3932160}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7effc7047f60&gt; for transfer request: 0.
2024-01-02 11:38:53,021 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
Completed 5.5 MiB/9.5 MiB (69.7 MiB/s) with 1 file(s) remaining  
2024-01-02 11:38:53,022 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2024-01-02 11:38:53,022 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 3407872}) about to wait for the following futures []
2024-01-02 11:38:53,022 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 3407872}) done waiting for dependent futures
2024-01-02 11:38:53,022 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 3407872}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7effc706e9e8&gt;, 'offset': 3407872}
2024-01-02 11:38:53,022 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2024-01-02 11:38:53,022 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 3670016}) about to wait for the following futures []
2024-01-02 11:38:53,022 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 3670016}) done waiting for dependent futures
2024-01-02 11:38:53,022 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 3670016}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7effc706e9e8&gt;, 'offset': 3670016}
2024-01-02 11:38:53,022 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2024-01-02 11:38:53,022 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 3932160}) about to wait for the following futures []
2024-01-02 11:38:53,022 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 3932160}) done waiting for dependent futures
2024-01-02 11:38:53,023 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 3932160}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7effc706e9e8&gt;, 'offset': 3932160}
2024-01-02 11:38:53,023 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2024-01-02 11:38:53,035 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 4194304}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7effc7047f60&gt; for transfer request: 0.
2024-01-02 11:38:53,035 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
2024-01-02 11:38:53,035 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 4456448}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7effc7047f60&gt; for transfer request: 0.
2024-01-02 11:38:53,035 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
2024-01-02 11:38:53,036 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 4718592}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7effc7047f60&gt; for transfer request: 0.
2024-01-02 11:38:53,036 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
2024-01-02 11:38:53,039 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 4980736}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7effc7047f60&gt; for transfer request: 0.
2024-01-02 11:38:53,039 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
Completed 5.8 MiB/9.5 MiB (62.5 MiB/s) with 1 file(s) remaining  
Completed 6.0 MiB/9.5 MiB (64.8 MiB/s) with 1 file(s) remaining  
Completed 6.3 MiB/9.5 MiB (67.2 MiB/s) with 1 file(s) remaining  
Completed 6.5 MiB/9.5 MiB (67.3 MiB/s) with 1 file(s) remaining  
2024-01-02 11:38:53,040 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 4194304}) about to wait for the following futures []
2024-01-02 11:38:53,040 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 4194304}) done waiting for dependent futures
2024-01-02 11:38:53,040 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 4194304}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7effc706e9e8&gt;, 'offset': 4194304}
2024-01-02 11:38:53,042 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2024-01-02 11:38:53,042 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 4456448}) about to wait for the following futures []
2024-01-02 11:38:53,042 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 4456448}) done waiting for dependent futures
2024-01-02 11:38:53,042 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 4456448}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7effc706e9e8&gt;, 'offset': 4456448}
2024-01-02 11:38:53,043 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2024-01-02 11:38:53,044 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 4718592}) about to wait for the following futures []
2024-01-02 11:38:53,044 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 4718592}) done waiting for dependent futures
2024-01-02 11:38:53,045 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 4718592}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7effc706e9e8&gt;, 'offset': 4718592}
2024-01-02 11:38:53,045 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2024-01-02 11:38:53,045 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 4980736}) about to wait for the following futures []
2024-01-02 11:38:53,045 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 4980736}) done waiting for dependent futures
2024-01-02 11:38:53,045 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 4980736}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7effc706e9e8&gt;, 'offset': 4980736}
2024-01-02 11:38:53,045 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2024-01-02 11:38:53,050 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 5242880}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7effc7047f60&gt; for transfer request: 0.
2024-01-02 11:38:53,050 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
Completed 6.8 MiB/9.5 MiB (62.9 MiB/s) with 1 file(s) remaining  
2024-01-02 11:38:53,050 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 5242880}) about to wait for the following futures []
Completed 7.0 MiB/9.5 MiB (64.8 MiB/s) with 1 file(s) remaining  
2024-01-02 11:38:53,051 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 5242880}) done waiting for dependent futures
2024-01-02 11:38:53,051 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 5242880}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7effc706e9e8&gt;, 'offset': 5242880}
2024-01-02 11:38:53,051 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2024-01-02 11:38:53,051 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 5505024}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7effc7047f60&gt; for transfer request: 0.
2024-01-02 11:38:53,051 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
Completed 7.3 MiB/9.5 MiB (65.7 MiB/s) with 1 file(s) remaining  
2024-01-02 11:38:53,053 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 5767168}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7effc7047f60&gt; for transfer request: 0.
2024-01-02 11:38:53,053 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
Completed 7.5 MiB/9.5 MiB (67.6 MiB/s) with 1 file(s) remaining  
2024-01-02 11:38:53,053 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 5505024}) about to wait for the following futures []
2024-01-02 11:38:53,054 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 5505024}) done waiting for dependent futures
2024-01-02 11:38:53,054 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 5505024}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7effc706e9e8&gt;, 'offset': 5505024}
2024-01-02 11:38:53,054 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 6029312}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7effc7047f60&gt; for transfer request: 0.
2024-01-02 11:38:53,054 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
2024-01-02 11:38:53,054 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2024-01-02 11:38:53,055 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 5767168}) about to wait for the following futures []
2024-01-02 11:38:53,055 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 5767168}) done waiting for dependent futures
2024-01-02 11:38:53,055 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 5767168}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7effc706e9e8&gt;, 'offset': 5767168}
2024-01-02 11:38:53,055 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2024-01-02 11:38:53,056 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 6029312}) about to wait for the following futures []
2024-01-02 11:38:53,056 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 6029312}) done waiting for dependent futures
2024-01-02 11:38:53,056 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 6029312}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7effc706e9e8&gt;, 'offset': 6029312}
2024-01-02 11:38:53,056 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
Completed 7.8 MiB/9.5 MiB (63.5 MiB/s) with 1 file(s) remaining  
2024-01-02 11:38:53,065 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 6291456}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7effc7047f60&gt; for transfer request: 0.
2024-01-02 11:38:53,065 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
Completed 8.0 MiB/9.5 MiB (65.1 MiB/s) with 1 file(s) remaining  
2024-01-02 11:38:53,065 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 6553600}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7effc7047f60&gt; for transfer request: 0.
2024-01-02 11:38:53,066 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
Completed 8.3 MiB/9.5 MiB (66.8 MiB/s) with 1 file(s) remaining  
2024-01-02 11:38:53,066 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 6815744}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7effc7047f60&gt; for transfer request: 0.
2024-01-02 11:38:53,066 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
2024-01-02 11:38:53,066 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 6291456}) about to wait for the following futures []
2024-01-02 11:38:53,066 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 6291456}) done waiting for dependent futures
2024-01-02 11:38:53,066 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 6291456}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7effc706e9e8&gt;, 'offset': 6291456}
2024-01-02 11:38:53,067 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2024-01-02 11:38:53,067 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 6553600}) about to wait for the following futures []
2024-01-02 11:38:53,067 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 6553600}) done waiting for dependent futures
2024-01-02 11:38:53,067 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 6553600}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7effc706e9e8&gt;, 'offset': 6553600}
2024-01-02 11:38:53,067 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2024-01-02 11:38:53,067 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 6815744}) about to wait for the following futures []
2024-01-02 11:38:53,067 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 6815744}) done waiting for dependent futures
2024-01-02 11:38:53,067 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 6815744}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7effc706e9e8&gt;, 'offset': 6815744}
2024-01-02 11:38:53,068 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
Completed 8.5 MiB/9.5 MiB (67.4 MiB/s) with 1 file(s) remaining  
2024-01-02 11:38:53,069 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 7077888}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7effc7047f60&gt; for transfer request: 0.
2024-01-02 11:38:53,069 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
2024-01-02 11:38:53,069 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 7077888}) about to wait for the following futures []
2024-01-02 11:38:53,069 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 7077888}) done waiting for dependent futures
2024-01-02 11:38:53,069 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 7077888}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7effc706e9e8&gt;, 'offset': 7077888}
2024-01-02 11:38:53,069 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
Completed 8.8 MiB/9.5 MiB (62.6 MiB/s) with 1 file(s) remaining  
2024-01-02 11:38:53,082 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 7340032}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7effc7047f60&gt; for transfer request: 0.
2024-01-02 11:38:53,083 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
2024-01-02 11:38:53,083 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 7340032}) about to wait for the following futures []
2024-01-02 11:38:53,083 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 7340032}) done waiting for dependent futures
2024-01-02 11:38:53,083 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 7340032}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7effc706e9e8&gt;, 'offset': 7340032}
2024-01-02 11:38:53,083 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
Completed 9.0 MiB/9.5 MiB (62.1 MiB/s) with 1 file(s) remaining  
2024-01-02 11:38:53,087 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 7602176}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7effc7047f60&gt; for transfer request: 0.
2024-01-02 11:38:53,088 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
Completed 9.3 MiB/9.5 MiB (63.6 MiB/s) with 1 file(s) remaining  
2024-01-02 11:38:53,088 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 7864320}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7effc7047f60&gt; for transfer request: 0.
2024-01-02 11:38:53,088 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
Completed 9.5 MiB/9.5 MiB (65.1 MiB/s) with 1 file(s) remaining  
2024-01-02 11:38:53,088 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 7602176}) about to wait for the following futures []
2024-01-02 11:38:53,089 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 7602176}) done waiting for dependent futures
2024-01-02 11:38:53,089 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 7602176}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7effc706e9e8&gt;, 'offset': 7602176}
2024-01-02 11:38:53,089 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2024-01-02 11:38:53,089 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 7864320}) about to wait for the following futures []
2024-01-02 11:38:53,089 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 7864320}) done waiting for dependent futures
2024-01-02 11:38:53,089 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 7864320}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7effc706e9e8&gt;, 'offset': 7864320}
2024-01-02 11:38:53,089 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 8126464}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7effc7047f60&gt; for transfer request: 0.
2024-01-02 11:38:53,089 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
2024-01-02 11:38:53,090 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IORenameFileTask(transfer_id=0, {'final_filename': '/tmp/big_file_downloaded'}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7effc7047f60&gt; for transfer request: 0.
2024-01-02 11:38:53,090 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
2024-01-02 11:38:53,090 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2024-01-02 11:38:53,090 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2024-01-02 11:38:53,090 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 8126464}) about to wait for the following futures []
2024-01-02 11:38:53,090 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 8126464}) done waiting for dependent futures
2024-01-02 11:38:53,090 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 8126464}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7effc706e9e8&gt;, 'offset': 8126464}
2024-01-02 11:38:53,091 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2024-01-02 11:38:53,091 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IORenameFileTask(transfer_id=0, {'final_filename': '/tmp/big_file_downloaded'}) about to wait for the following futures []
2024-01-02 11:38:53,091 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IORenameFileTask(transfer_id=0, {'final_filename': '/tmp/big_file_downloaded'}) done waiting for dependent futures
2024-01-02 11:38:53,091 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IORenameFileTask(transfer_id=0, {'final_filename': '/tmp/big_file_downloaded'}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7effc706e9e8&gt;, 'final_filename': '/tmp/big_file_downloaded', 'osutil': &lt;s3transfer.utils.OSUtils object at 0x7effc70479e8&gt;}
download: s3://erasure/big_file to ../../tmp/big_file_downloaded 
2024-01-02 11:38:53,092 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2024-01-02 11:38:53,100 - Thread-1 - awscli.customizations.s3.results - DEBUG - Shutdown request received in result processing thread, shutting down result thread.</msg>
<status status="PASS" starttime="20240102 11:38:53.189" endtime="20240102 11:38:53.190"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:38:53.191" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:38:53.190" endtime="20240102 11:38:53.191"/>
</kw>
<status status="PASS" starttime="20240102 11:38:52.542" endtime="20240102 11:38:53.191"/>
</kw>
<msg timestamp="20240102 11:38:53.191" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:38:52.541" endtime="20240102 11:38:53.191"/>
</kw>
<msg timestamp="20240102 11:38:53.193" level="INFO">${output} = 2024-01-02 11:38:52,878 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1053-azure botocore/1.26.10
2024-01-02 11:38:52,878 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20240102 11:38:52.541" endtime="20240102 11:38:53.193"/>
</kw>
<msg timestamp="20240102 11:38:53.193" level="INFO">${file_download_result} = 2024-01-02 11:38:52,878 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1053-azure botocore/1.26.10
2024-01-02 11:38:52,878 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20240102 11:38:52.540" endtime="20240102 11:38:53.194"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<var>${match}</var>
<var>${etag2}</var>
<arg>${file_download_result}</arg>
<arg>(?is)GET /${BUCKET}/big_file.*?Response headers.*?ETag':\ '"(.*?-2)"'</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<msg timestamp="20240102 11:38:53.195" level="INFO">${match} = GET /erasure/big_file HTTP/1.1" 206 1611392
2024-01-02 11:38:52,969 - ThreadPoolExecutor-0_1 - botocore.parsers - DEBUG - Response headers: {'Date': 'Tue, 02 Jan 2024 11:38:52 GMT', 'Cache-Control': '...</msg>
<msg timestamp="20240102 11:38:53.195" level="INFO">${etag2} = 82e0464439ba9856e13bcc6dabd29669-2</msg>
<status status="PASS" starttime="20240102 11:38:53.194" endtime="20240102 11:38:53.195"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${etag1}</arg>
<arg>${etag2}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20240102 11:38:53.195" endtime="20240102 11:38:53.196"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<arg>rm s3://${BUCKET}/big_file</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:38:53.199" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 rm s3://erasure/big_file 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:38:53.648" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:38:53.648" level="INFO">${output} = delete: s3://erasure/big_file</msg>
<status status="PASS" starttime="20240102 11:38:53.197" endtime="20240102 11:38:53.648"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:38:53.649" level="INFO">delete: s3://erasure/big_file</msg>
<status status="PASS" starttime="20240102 11:38:53.649" endtime="20240102 11:38:53.649"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:38:53.650" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:38:53.649" endtime="20240102 11:38:53.650"/>
</kw>
<status status="PASS" starttime="20240102 11:38:53.197" endtime="20240102 11:38:53.650"/>
</kw>
<msg timestamp="20240102 11:38:53.650" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:38:53.197" endtime="20240102 11:38:53.650"/>
</kw>
<msg timestamp="20240102 11:38:53.650" level="INFO">${output} = delete: s3://erasure/big_file</msg>
<status status="PASS" starttime="20240102 11:38:53.196" endtime="20240102 11:38:53.650"/>
</kw>
<status status="PASS" starttime="20240102 11:38:53.196" endtime="20240102 11:38:53.650"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -rf /tmp/big_file</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:38:53.653" level="INFO">Running command 'rm -rf /tmp/big_file 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:38:53.656" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:38:53.656" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240102 11:38:53.652" endtime="20240102 11:38:53.656"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:38:53.656" level="INFO"/>
<status status="PASS" starttime="20240102 11:38:53.656" endtime="20240102 11:38:53.656"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:38:53.657" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:38:53.657" endtime="20240102 11:38:53.657"/>
</kw>
<status status="PASS" starttime="20240102 11:38:53.651" endtime="20240102 11:38:53.657"/>
</kw>
<msg timestamp="20240102 11:38:53.657" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:38:53.651" endtime="20240102 11:38:53.657"/>
</kw>
<status status="PASS" starttime="20240102 11:38:53.651" endtime="20240102 11:38:53.657"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20240102 11:38:51.653" endtime="20240102 11:38:53.657"/>
</test>
<test id="s1-s1-s14-t19" name="Create key twice with different content and expect different ETags" line="249">
<kw name="Execute" library="os">
<arg>head -c 1MiB &lt;/dev/urandom &gt; /tmp/file1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:38:53.661" level="INFO">Running command 'head -c 1MiB &lt;/dev/urandom &gt; /tmp/file1'.</msg>
<msg timestamp="20240102 11:38:53.666" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:38:53.666" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240102 11:38:53.660" endtime="20240102 11:38:53.666"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:38:53.666" level="INFO"/>
<status status="PASS" starttime="20240102 11:38:53.666" endtime="20240102 11:38:53.666"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:38:53.667" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:38:53.667" endtime="20240102 11:38:53.667"/>
</kw>
<status status="PASS" starttime="20240102 11:38:53.659" endtime="20240102 11:38:53.667"/>
</kw>
<msg timestamp="20240102 11:38:53.667" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:38:53.659" endtime="20240102 11:38:53.667"/>
</kw>
<status status="PASS" starttime="20240102 11:38:53.659" endtime="20240102 11:38:53.667"/>
</kw>
<kw name="Execute" library="os">
<arg>head -c 1MiB &lt;/dev/urandom &gt; /tmp/file2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:38:53.670" level="INFO">Running command 'head -c 1MiB &lt;/dev/urandom &gt; /tmp/file2'.</msg>
<msg timestamp="20240102 11:38:53.675" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:38:53.675" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240102 11:38:53.669" endtime="20240102 11:38:53.675"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:38:53.675" level="INFO"/>
<status status="PASS" starttime="20240102 11:38:53.675" endtime="20240102 11:38:53.676"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:38:53.676" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:38:53.676" endtime="20240102 11:38:53.676"/>
</kw>
<status status="PASS" starttime="20240102 11:38:53.668" endtime="20240102 11:38:53.676"/>
</kw>
<msg timestamp="20240102 11:38:53.676" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:38:53.668" endtime="20240102 11:38:53.676"/>
</kw>
<status status="PASS" starttime="20240102 11:38:53.668" endtime="20240102 11:38:53.676"/>
</kw>
<kw name="Execute AWSS3CliDebug" library="commonawslib">
<var>${file1UploadResult}</var>
<arg>cp /tmp/file1 s3://${BUCKET}/test_key_to_check_etag_differences</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws --debug s3 --endpoint ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:38:53.679" level="INFO">Running command 'aws --debug s3 --endpoint http://s3g:9878 cp /tmp/file1 s3://erasure/test_key_to_check_etag_differences 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:38:54.220" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:38:54.220" level="INFO">${output} = 2024-01-02 11:38:54,011 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1053-azure botocore/1.26.10
2024-01-02 11:38:54,011 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20240102 11:38:53.678" endtime="20240102 11:38:54.220"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:38:54.221" level="INFO">2024-01-02 11:38:54,011 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1053-azure botocore/1.26.10
2024-01-02 11:38:54,011 - MainThread - awscli.clidriver - DEBUG - Arguments entered to CLI: ['--debug', 's3', '--endpoint', 'http://s3g:9878', 'cp', '/tmp/file1', 's3://erasure/test_key_to_check_etag_differences']
2024-01-02 11:38:54,011 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function add_scalar_parsers at 0x7f174dd0f9d8&gt;
2024-01-02 11:38:54,012 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function register_uri_param_handler at 0x7f174eb03730&gt;
2024-01-02 11:38:54,012 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function inject_assume_role_provider_cache at 0x7f174eb32ae8&gt;
2024-01-02 11:38:54,012 - MainThread - botocore.utils - DEBUG - IMDS ENDPOINT: http://169.254.169.254/
2024-01-02 11:38:54,015 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function attach_history_handler at 0x7f174de3c400&gt;
2024-01-02 11:38:54,016 - MainThread - botocore.hooks - DEBUG - Event building-command-table.s3: calling handler &lt;function add_waiters at 0x7f174dd1d048&gt;
2024-01-02 11:38:54,016 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.s3.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f1755a1e6d8&gt;
2024-01-02 11:38:54,016 - MainThread - botocore.hooks - DEBUG - Event building-command-table.cp: calling handler &lt;function add_waiters at 0x7f174dd1d048&gt;
2024-01-02 11:38:54,018 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.paths: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f1755a1e6d8&gt;
2024-01-02 11:38:54,018 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.dryrun: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f1755a1e6d8&gt;
2024-01-02 11:38:54,018 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f174eb062b0&gt;
2024-01-02 11:38:54,018 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.quiet: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f1755a1e6d8&gt;
2024-01-02 11:38:54,018 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f174eb062b0&gt;
2024-01-02 11:38:54,018 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f1755a1e6d8&gt;
2024-01-02 11:38:54,019 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.acl: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f1755a1e6d8&gt;
2024-01-02 11:38:54,019 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.follow-symlinks: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f1755a1e6d8&gt;
2024-01-02 11:38:54,019 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f174eb062b0&gt;
2024-01-02 11:38:54,019 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f1755a1e6d8&gt;
2024-01-02 11:38:54,019 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f1755a1e6d8&gt;
2024-01-02 11:38:54,019 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f1755a1e6d8&gt;
2024-01-02 11:38:54,019 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-key: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f1755a1e6d8&gt;
2024-01-02 11:38:54,019 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-kms-key-id: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f1755a1e6d8&gt;
2024-01-02 11:38:54,019 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-copy-source: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f1755a1e6d8&gt;
2024-01-02 11:38:54,020 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-copy-source-key: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f1755a1e6d8&gt;
2024-01-02 11:38:54,020 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.storage-class: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f1755a1e6d8&gt;
2024-01-02 11:38:54,020 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.grants: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f1755a1e6d8&gt;
2024-01-02 11:38:54,020 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.website-redirect: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f1755a1e6d8&gt;
2024-01-02 11:38:54,020 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-type: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f1755a1e6d8&gt;
2024-01-02 11:38:54,020 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.cache-control: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f1755a1e6d8&gt;
2024-01-02 11:38:54,020 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-disposition: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f1755a1e6d8&gt;
2024-01-02 11:38:54,020 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-encoding: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f1755a1e6d8&gt;
2024-01-02 11:38:54,021 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-language: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f1755a1e6d8&gt;
2024-01-02 11:38:54,021 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.expires: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f1755a1e6d8&gt;
2024-01-02 11:38:54,021 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.source-region: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f1755a1e6d8&gt;
2024-01-02 11:38:54,021 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.only-show-errors: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f1755a1e6d8&gt;
2024-01-02 11:38:54,021 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f174eb062b0&gt;
2024-01-02 11:38:54,021 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f1755a1e6d8&gt;
2024-01-02 11:38:54,021 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.page-size: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f1755a1e6d8&gt;
2024-01-02 11:38:54,021 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.ignore-glacier-warnings: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f1755a1e6d8&gt;
2024-01-02 11:38:54,021 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f174eb062b0&gt;
2024-01-02 11:38:54,022 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.force-glacier-transfer: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f1755a1e6d8&gt;
2024-01-02 11:38:54,022 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f174eb062b0&gt;
2024-01-02 11:38:54,022 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.request-payer: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f1755a1e6d8&gt;
2024-01-02 11:38:54,022 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.metadata: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f1755a1e6d8&gt;
2024-01-02 11:38:54,022 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.metadata-directive: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f1755a1e6d8&gt;
2024-01-02 11:38:54,022 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.expected-size: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f1755a1e6d8&gt;
2024-01-02 11:38:54,022 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f1755a1e6d8&gt;
2024-01-02 11:38:54,022 - MainThread - botocore.credentials - DEBUG - Looking for credentials via: env
2024-01-02 11:38:54,022 - MainThread - botocore.credentials - INFO - Found credentials in environment variables.
2024-01-02 11:38:54,023 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/endpoints.json
2024-01-02 11:38:54,036 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/sdk-default-configuration.json
2024-01-02 11:38:54,037 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7f174f7c7378&gt;
2024-01-02 11:38:54,037 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/s3/2006-03-01/service-2.json
2024-01-02 11:38:54,047 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7f174faa02f0&gt;
2024-01-02 11:38:54,047 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7f174faa00d0&gt;
2024-01-02 11:38:54,047 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2024-01-02 11:38:54,049 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2024-01-02 11:38:54,050 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/_retry.json
2024-01-02 11:38:54,050 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2024-01-02 11:38:54,051 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2024-01-02 11:38:54,052 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7f174f7c7378&gt;
2024-01-02 11:38:54,052 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7f174faa02f0&gt;
2024-01-02 11:38:54,052 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7f174faa00d0&gt;
2024-01-02 11:38:54,053 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2024-01-02 11:38:54,055 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2024-01-02 11:38:54,055 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2024-01-02 11:38:54,056 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2024-01-02 11:38:54,056 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7f174f7c7378&gt;
2024-01-02 11:38:54,057 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7f174faa02f0&gt;
2024-01-02 11:38:54,057 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7f174faa00d0&gt;
2024-01-02 11:38:54,058 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2024-01-02 11:38:54,060 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2024-01-02 11:38:54,060 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2024-01-02 11:38:54,061 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2024-01-02 11:38:54,062 - MainThread - awscli.customizations.s3.s3handler - DEBUG - Using a multipart threshold of 8388608 and a part size of 8388608
2024-01-02 11:38:54,062 - MainThread - s3transfer.utils - DEBUG - Acquiring 0
2024-01-02 11:38:54,063 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - UploadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f174d5be9e8&gt;}) about to wait for the following futures []
2024-01-02 11:38:54,063 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - UploadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f174d5be9e8&gt;}) done waiting for dependent futures
2024-01-02 11:38:54,064 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - Executing task UploadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f174d5be9e8&gt;}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7f174d67c828&gt;, 'config': &lt;s3transfer.manager.TransferConfig object at 0x7f174d5b39b0&gt;, 'osutil': &lt;s3transfer.utils.OSUtils object at 0x7f174d5b3a20&gt;, 'request_executor': &lt;s3transfer.futures.BoundedExecutor object at 0x7f174d5b3ba8&gt;, 'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f174d5be9e8&gt;}
2024-01-02 11:38:54,064 - ThreadPoolExecutor-1_0 - s3transfer.futures - DEBUG - Submitting task PutObjectTask(transfer_id=0, {'bucket': 'erasure', 'key': 'test_key_to_check_etag_differences', 'extra_args': {}}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f174d5b3ba8&gt; for transfer request: 0.
2024-01-02 11:38:54,064 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Acquiring 0
2024-01-02 11:38:54,065 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - PutObjectTask(transfer_id=0, {'bucket': 'erasure', 'key': 'test_key_to_check_etag_differences', 'extra_args': {}}) about to wait for the following futures []
2024-01-02 11:38:54,065 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - PutObjectTask(transfer_id=0, {'bucket': 'erasure', 'key': 'test_key_to_check_etag_differences', 'extra_args': {}}) done waiting for dependent futures
2024-01-02 11:38:54,065 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task PutObjectTask(transfer_id=0, {'bucket': 'erasure', 'key': 'test_key_to_check_etag_differences', 'extra_args': {}}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7f174d67c828&gt;, 'fileobj': &lt;s3transfer.utils.ReadFileChunk object at 0x7f174d5bef60&gt;, 'bucket': 'erasure', 'key': 'test_key_to_check_etag_differences', 'extra_args': {}}
2024-01-02 11:38:54,065 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function validate_ascii_metadata at 0x7f174f7e46a8&gt;
2024-01-02 11:38:54,065 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function sse_md5 at 0x7f174f7e0ae8&gt;
2024-01-02 11:38:54,066 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2024-01-02 11:38:54,066 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function convert_body_to_file_like_object at 0x7f174f7e4f28&gt;
2024-01-02 11:38:54,066 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function validate_bucket_name at 0x7f174f7e0a60&gt;
2024-01-02 11:38:54,066 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;bound method S3RegionRedirector.redirect_from_cache of &lt;botocore.utils.S3RegionRedirector object at 0x7f174d67cd68&gt;&gt;
2024-01-02 11:38:54,066 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;bound method S3ArnParamHandler.handle_arn of &lt;botocore.utils.S3ArnParamHandler object at 0x7f174d64c160&gt;&gt;
2024-01-02 11:38:54,066 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function generate_idempotent_uuid at 0x7f174f7e08c8&gt;
2024-01-02 11:38:54,066 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;function conditionally_calculate_md5 at 0x7f17501870d0&gt;
2024-01-02 11:38:54,069 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;function add_expect_header at 0x7f174f7e0d90&gt;
2024-01-02 11:38:54,069 - ThreadPoolExecutor-0_0 - botocore.handlers - DEBUG - Adding expect 100 continue header to request.
2024-01-02 11:38:54,069 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;bound method S3RegionRedirector.set_request_url of &lt;botocore.utils.S3RegionRedirector object at 0x7f174d67cd68&gt;&gt;
2024-01-02 11:38:54,069 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;function add_recursion_detection_header at 0x7f174f7e0598&gt;
2024-01-02 11:38:54,069 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;function inject_api_version_header_if_needed at 0x7f174f7e60d0&gt;
2024-01-02 11:38:54,069 - ThreadPoolExecutor-0_0 - botocore.endpoint - DEBUG - Making request for OperationModel(name=PutObject) with params: {'url_path': '/erasure/test_key_to_check_etag_differences', 'query_string': {}, 'method': 'PUT', 'headers': {'User-Agent': 'aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1053-azure botocore/1.26.10', 'Content-MD5': 'lkc3CfMUau29yNfYyLJqUg==', 'Expect': '100-continue'}, 'body': &lt;s3transfer.utils.ReadFileChunk object at 0x7f174d5bef60&gt;, 'url': 'http://s3g:9878/erasure/test_key_to_check_etag_differences', 'context': {'client_region': 'us-west-1', 'client_config': &lt;botocore.config.Config object at 0x7f174d67ca20&gt;, 'has_streaming_input': True, 'auth_type': None, 'signing': {'bucket': 'erasure'}}}
2024-01-02 11:38:54,069 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.PutObject: calling handler &lt;function signal_not_transferring at 0x7f1751d09158&gt;
2024-01-02 11:38:54,069 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.PutObject: calling handler &lt;bound method RequestSigner.handler of &lt;botocore.signers.RequestSigner object at 0x7f174d67c9e8&gt;&gt;
2024-01-02 11:38:54,069 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event choose-signer.s3.PutObject: calling handler &lt;bound method S3EndpointSetter.set_signer of &lt;botocore.utils.S3EndpointSetter object at 0x7f174d64c1d0&gt;&gt;
2024-01-02 11:38:54,069 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event choose-signer.s3.PutObject: calling handler &lt;function set_operation_specific_signer at 0x7f174f7e07b8&gt;
2024-01-02 11:38:54,070 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-sign.s3.PutObject: calling handler &lt;bound method S3EndpointSetter.set_endpoint of &lt;botocore.utils.S3EndpointSetter object at 0x7f174d64c1d0&gt;&gt;
2024-01-02 11:38:54,070 - ThreadPoolExecutor-0_0 - botocore.utils - DEBUG - Using S3 path style addressing.
2024-01-02 11:38:54,071 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - Calculating signature using v4 auth.
2024-01-02 11:38:54,071 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - CanonicalRequest:
PUT
/erasure/test_key_to_check_etag_differences

content-md5:lkc3CfMUau29yNfYyLJqUg==
host:s3g:9878
x-amz-content-sha256:7e2d880d0268cc57bd852468eec7db563f6ef953dbfd5420d90b28fbab55406f
x-amz-date:20240102T113854Z

content-md5;host;x-amz-content-sha256;x-amz-date
7e2d880d0268cc57bd852468eec7db563f6ef953dbfd5420d90b28fbab55406f
2024-01-02 11:38:54,071 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - StringToSign:
AWS4-HMAC-SHA256
20240102T113854Z
20240102/us-west-1/s3/aws4_request
519f180eae9862bea2c3368d8746a9f03a2dcab6ae9b3e4faa19588190f19a3a
2024-01-02 11:38:54,071 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - Signature:
c68662c1f3181e25ee79435e0333081eeeb62f9f87177ae500404a0271486da1
2024-01-02 11:38:54,071 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.PutObject: calling handler &lt;function signal_transferring at 0x7f1751d091e0&gt;
2024-01-02 11:38:54,071 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.PutObject: calling handler &lt;function add_retry_headers at 0x7f174f7e6730&gt;
2024-01-02 11:38:54,071 - ThreadPoolExecutor-0_0 - botocore.endpoint - DEBUG - Sending http request: &lt;AWSPreparedRequest stream_output=False, method=PUT, url=http://s3g:9878/erasure/test_key_to_check_etag_differences, headers={'User-Agent': b'aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1053-azure botocore/1.26.10', 'Content-MD5': b'lkc3CfMUau29yNfYyLJqUg==', 'Expect': b'100-continue', 'X-Amz-Date': b'20240102T113854Z', 'X-Amz-Content-SHA256': b'7e2d880d0268cc57bd852468eec7db563f6ef953dbfd5420d90b28fbab55406f', 'Authorization': b'AWS4-HMAC-SHA256 Credential=dlfknslnfslf/20240102/us-west-1/s3/aws4_request, SignedHeaders=content-md5;host;x-amz-content-sha256;x-amz-date, Signature=c68662c1f3181e25ee79435e0333081eeeb62f9f87177ae500404a0271486da1', 'amz-sdk-invocation-id': b'015cc3c7-47dc-4017-944d-712cb2c6c4dc', 'amz-sdk-request': b'attempt=1', 'Content-Length': '1048576'}&gt;
2024-01-02 11:38:54,072 - ThreadPoolExecutor-0_0 - urllib3.connectionpool - DEBUG - Starting new HTTP connection (1): s3g:9878
2024-01-02 11:38:54,073 - ThreadPoolExecutor-0_0 - botocore.awsrequest - DEBUG - Waiting for 100 Continue response.
2024-01-02 11:38:54,075 - ThreadPoolExecutor-0_0 - botocore.awsrequest - DEBUG - 100 Continue response seen, now sending request body.
Completed 256.0 KiB/1.0 MiB (10.9 MiB/s) with 1 file(s) remaining
Completed 512.0 KiB/1.0 MiB (20.6 MiB/s) with 1 file(s) remaining
Completed 768.0 KiB/1.0 MiB (29.5 MiB/s) with 1 file(s) remaining
Completed 1.0 MiB/1.0 MiB (37.6 MiB/s) with 1 file(s) remaining  
2024-01-02 11:38:54,178 - ThreadPoolExecutor-0_0 - urllib3.connectionpool - DEBUG - http://s3g:9878 "PUT /erasure/test_key_to_check_etag_differences HTTP/1.1" 200 0
2024-01-02 11:38:54,178 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response headers: {'Date': 'Tue, 02 Jan 2024 11:38:54 GMT', 'Cache-Control': 'no-cache', 'Expires': 'Tue, 02 Jan 2024 11:38:54 GMT', 'Pragma': 'no-cache', 'Content-Type': 'text/plain;charset=utf-8', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'X-FRAME-OPTIONS': 'SAMEORIGIN', 'ETag': '"96473709f3146aedbdc8d7d8c8b26a52"', 'Server': 'Ozone', 'x-amz-id-2': 'TfiJTK3lWK', 'x-amz-request-id': '124ca90e-4c89-450d-97a2-5aa93a97cfcf', 'Content-Length': '0'}
2024-01-02 11:38:54,178 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response body:
b''
2024-01-02 11:38:54,179 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.PutObject: calling handler &lt;botocore.retryhandler.RetryHandler object at 0x7f174d67cda0&gt;
2024-01-02 11:38:54,179 - ThreadPoolExecutor-0_0 - botocore.retryhandler - DEBUG - No retry needed.
2024-01-02 11:38:54,179 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.PutObject: calling handler &lt;bound method S3RegionRedirector.redirect_from_error of &lt;botocore.utils.S3RegionRedirector object at 0x7f174d67cd68&gt;&gt;
2024-01-02 11:38:54,179 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event after-call.s3.PutObject: calling handler &lt;function enhance_error_msg at 0x7f174dd0f598&gt;
2024-01-02 11:38:54,179 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
upload: ../../tmp/file1 to s3://erasure/test_key_to_check_etag_differences
2024-01-02 11:38:54,180 - Thread-1 - awscli.customizations.s3.results - DEBUG - Shutdown request received in result processing thread, shutting down result thread.</msg>
<status status="PASS" starttime="20240102 11:38:54.220" endtime="20240102 11:38:54.221"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:38:54.222" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:38:54.221" endtime="20240102 11:38:54.222"/>
</kw>
<status status="PASS" starttime="20240102 11:38:53.678" endtime="20240102 11:38:54.222"/>
</kw>
<msg timestamp="20240102 11:38:54.222" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:38:53.677" endtime="20240102 11:38:54.222"/>
</kw>
<msg timestamp="20240102 11:38:54.223" level="INFO">${output} = 2024-01-02 11:38:54,011 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1053-azure botocore/1.26.10
2024-01-02 11:38:54,011 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20240102 11:38:53.677" endtime="20240102 11:38:54.223"/>
</kw>
<msg timestamp="20240102 11:38:54.223" level="INFO">${file1UploadResult} = 2024-01-02 11:38:54,011 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1053-azure botocore/1.26.10
2024-01-02 11:38:54,011 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20240102 11:38:53.677" endtime="20240102 11:38:54.223"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<var>${match}</var>
<var>${etag1}</var>
<arg>${file1UploadResult}</arg>
<arg>PUT /${BUCKET}/test_key_to_check_etag_differences\ .*?Response headers.*?ETag':\ '"(.*?)"'</arg>
<arg>flags=DOTALL</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<msg timestamp="20240102 11:38:54.224" level="INFO">${match} = PUT /erasure/test_key_to_check_etag_differences HTTP/1.1" 200 0
2024-01-02 11:38:54,178 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response headers: {'Date': 'Tue, 02 Jan 2024 11:38:54 GMT'...</msg>
<msg timestamp="20240102 11:38:54.224" level="INFO">${etag1} = 96473709f3146aedbdc8d7d8c8b26a52</msg>
<status status="PASS" starttime="20240102 11:38:54.223" endtime="20240102 11:38:54.224"/>
</kw>
<kw name="Execute AWSS3CliDebug" library="commonawslib">
<var>${file2UploadResult}</var>
<arg>cp /tmp/file2 s3://${BUCKET}/test_key_to_check_etag_differences</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws --debug s3 --endpoint ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:38:54.227" level="INFO">Running command 'aws --debug s3 --endpoint http://s3g:9878 cp /tmp/file2 s3://erasure/test_key_to_check_etag_differences 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:38:54.739" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:38:54.739" level="INFO">${output} = 2024-01-02 11:38:54,565 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1053-azure botocore/1.26.10
2024-01-02 11:38:54,566 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20240102 11:38:54.226" endtime="20240102 11:38:54.739"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:38:54.740" level="INFO">2024-01-02 11:38:54,565 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1053-azure botocore/1.26.10
2024-01-02 11:38:54,566 - MainThread - awscli.clidriver - DEBUG - Arguments entered to CLI: ['--debug', 's3', '--endpoint', 'http://s3g:9878', 'cp', '/tmp/file2', 's3://erasure/test_key_to_check_etag_differences']
2024-01-02 11:38:54,566 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function add_scalar_parsers at 0x7fd78e5c79d8&gt;
2024-01-02 11:38:54,566 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function register_uri_param_handler at 0x7fd78f3bb730&gt;
2024-01-02 11:38:54,566 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function inject_assume_role_provider_cache at 0x7fd78f3eaae8&gt;
2024-01-02 11:38:54,567 - MainThread - botocore.utils - DEBUG - IMDS ENDPOINT: http://169.254.169.254/
2024-01-02 11:38:54,570 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function attach_history_handler at 0x7fd78e6f3400&gt;
2024-01-02 11:38:54,570 - MainThread - botocore.hooks - DEBUG - Event building-command-table.s3: calling handler &lt;function add_waiters at 0x7fd78e5d6048&gt;
2024-01-02 11:38:54,571 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.s3.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fd7962d66d8&gt;
2024-01-02 11:38:54,571 - MainThread - botocore.hooks - DEBUG - Event building-command-table.cp: calling handler &lt;function add_waiters at 0x7fd78e5d6048&gt;
2024-01-02 11:38:54,572 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.paths: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fd7962d66d8&gt;
2024-01-02 11:38:54,572 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.dryrun: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fd7962d66d8&gt;
2024-01-02 11:38:54,573 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7fd78f3be2b0&gt;
2024-01-02 11:38:54,573 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.quiet: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fd7962d66d8&gt;
2024-01-02 11:38:54,573 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7fd78f3be2b0&gt;
2024-01-02 11:38:54,573 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fd7962d66d8&gt;
2024-01-02 11:38:54,573 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.acl: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fd7962d66d8&gt;
2024-01-02 11:38:54,573 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.follow-symlinks: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fd7962d66d8&gt;
2024-01-02 11:38:54,573 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7fd78f3be2b0&gt;
2024-01-02 11:38:54,573 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fd7962d66d8&gt;
2024-01-02 11:38:54,573 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fd7962d66d8&gt;
2024-01-02 11:38:54,574 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fd7962d66d8&gt;
2024-01-02 11:38:54,574 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-key: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fd7962d66d8&gt;
2024-01-02 11:38:54,574 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-kms-key-id: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fd7962d66d8&gt;
2024-01-02 11:38:54,574 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-copy-source: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fd7962d66d8&gt;
2024-01-02 11:38:54,574 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-copy-source-key: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fd7962d66d8&gt;
2024-01-02 11:38:54,574 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.storage-class: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fd7962d66d8&gt;
2024-01-02 11:38:54,574 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.grants: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fd7962d66d8&gt;
2024-01-02 11:38:54,574 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.website-redirect: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fd7962d66d8&gt;
2024-01-02 11:38:54,575 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-type: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fd7962d66d8&gt;
2024-01-02 11:38:54,575 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.cache-control: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fd7962d66d8&gt;
2024-01-02 11:38:54,575 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-disposition: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fd7962d66d8&gt;
2024-01-02 11:38:54,575 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-encoding: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fd7962d66d8&gt;
2024-01-02 11:38:54,575 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-language: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fd7962d66d8&gt;
2024-01-02 11:38:54,575 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.expires: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fd7962d66d8&gt;
2024-01-02 11:38:54,576 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.source-region: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fd7962d66d8&gt;
2024-01-02 11:38:54,576 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.only-show-errors: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fd7962d66d8&gt;
2024-01-02 11:38:54,576 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7fd78f3be2b0&gt;
2024-01-02 11:38:54,576 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fd7962d66d8&gt;
2024-01-02 11:38:54,576 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.page-size: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fd7962d66d8&gt;
2024-01-02 11:38:54,576 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.ignore-glacier-warnings: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fd7962d66d8&gt;
2024-01-02 11:38:54,576 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7fd78f3be2b0&gt;
2024-01-02 11:38:54,576 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.force-glacier-transfer: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fd7962d66d8&gt;
2024-01-02 11:38:54,576 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7fd78f3be2b0&gt;
2024-01-02 11:38:54,576 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.request-payer: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fd7962d66d8&gt;
2024-01-02 11:38:54,577 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.metadata: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fd7962d66d8&gt;
2024-01-02 11:38:54,577 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.metadata-directive: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fd7962d66d8&gt;
2024-01-02 11:38:54,577 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.expected-size: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fd7962d66d8&gt;
2024-01-02 11:38:54,577 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fd7962d66d8&gt;
2024-01-02 11:38:54,577 - MainThread - botocore.credentials - DEBUG - Looking for credentials via: env
2024-01-02 11:38:54,577 - MainThread - botocore.credentials - INFO - Found credentials in environment variables.
2024-01-02 11:38:54,578 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/endpoints.json
2024-01-02 11:38:54,590 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/sdk-default-configuration.json
2024-01-02 11:38:54,591 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7fd79007f378&gt;
2024-01-02 11:38:54,592 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/s3/2006-03-01/service-2.json
2024-01-02 11:38:54,601 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7fd7903582f0&gt;
2024-01-02 11:38:54,601 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7fd7903580d0&gt;
2024-01-02 11:38:54,601 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2024-01-02 11:38:54,603 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2024-01-02 11:38:54,604 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/_retry.json
2024-01-02 11:38:54,604 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2024-01-02 11:38:54,605 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2024-01-02 11:38:54,606 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7fd79007f378&gt;
2024-01-02 11:38:54,606 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7fd7903582f0&gt;
2024-01-02 11:38:54,606 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7fd7903580d0&gt;
2024-01-02 11:38:54,607 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2024-01-02 11:38:54,609 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2024-01-02 11:38:54,609 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2024-01-02 11:38:54,610 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2024-01-02 11:38:54,610 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7fd79007f378&gt;
2024-01-02 11:38:54,611 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7fd7903582f0&gt;
2024-01-02 11:38:54,611 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7fd7903580d0&gt;
2024-01-02 11:38:54,612 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2024-01-02 11:38:54,614 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2024-01-02 11:38:54,614 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2024-01-02 11:38:54,615 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2024-01-02 11:38:54,615 - MainThread - awscli.customizations.s3.s3handler - DEBUG - Using a multipart threshold of 8388608 and a part size of 8388608
2024-01-02 11:38:54,616 - MainThread - s3transfer.utils - DEBUG - Acquiring 0
2024-01-02 11:38:54,617 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - UploadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7fd78de769e8&gt;}) about to wait for the following futures []
2024-01-02 11:38:54,617 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - UploadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7fd78de769e8&gt;}) done waiting for dependent futures
2024-01-02 11:38:54,617 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - Executing task UploadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7fd78de769e8&gt;}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7fd78df34828&gt;, 'config': &lt;s3transfer.manager.TransferConfig object at 0x7fd78de6c9b0&gt;, 'osutil': &lt;s3transfer.utils.OSUtils object at 0x7fd78de6ca20&gt;, 'request_executor': &lt;s3transfer.futures.BoundedExecutor object at 0x7fd78de6cba8&gt;, 'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7fd78de769e8&gt;}
2024-01-02 11:38:54,618 - ThreadPoolExecutor-1_0 - s3transfer.futures - DEBUG - Submitting task PutObjectTask(transfer_id=0, {'bucket': 'erasure', 'key': 'test_key_to_check_etag_differences', 'extra_args': {}}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7fd78de6cba8&gt; for transfer request: 0.
2024-01-02 11:38:54,618 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Acquiring 0
2024-01-02 11:38:54,618 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - PutObjectTask(transfer_id=0, {'bucket': 'erasure', 'key': 'test_key_to_check_etag_differences', 'extra_args': {}}) about to wait for the following futures []
2024-01-02 11:38:54,618 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - PutObjectTask(transfer_id=0, {'bucket': 'erasure', 'key': 'test_key_to_check_etag_differences', 'extra_args': {}}) done waiting for dependent futures
2024-01-02 11:38:54,619 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task PutObjectTask(transfer_id=0, {'bucket': 'erasure', 'key': 'test_key_to_check_etag_differences', 'extra_args': {}}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7fd78df34828&gt;, 'fileobj': &lt;s3transfer.utils.ReadFileChunk object at 0x7fd78de76f60&gt;, 'bucket': 'erasure', 'key': 'test_key_to_check_etag_differences', 'extra_args': {}}
2024-01-02 11:38:54,619 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function validate_ascii_metadata at 0x7fd79009c6a8&gt;
2024-01-02 11:38:54,619 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function sse_md5 at 0x7fd790098ae8&gt;
2024-01-02 11:38:54,619 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function convert_body_to_file_like_object at 0x7fd79009cf28&gt;
2024-01-02 11:38:54,619 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function validate_bucket_name at 0x7fd790098a60&gt;
2024-01-02 11:38:54,619 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;bound method S3RegionRedirector.redirect_from_cache of &lt;botocore.utils.S3RegionRedirector object at 0x7fd78df34d68&gt;&gt;
2024-01-02 11:38:54,619 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;bound method S3ArnParamHandler.handle_arn of &lt;botocore.utils.S3ArnParamHandler object at 0x7fd78df04160&gt;&gt;
2024-01-02 11:38:54,619 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function generate_idempotent_uuid at 0x7fd7900988c8&gt;
2024-01-02 11:38:54,620 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;function conditionally_calculate_md5 at 0x7fd790a3f0d0&gt;
2024-01-02 11:38:54,620 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2024-01-02 11:38:54,622 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;function add_expect_header at 0x7fd790098d90&gt;
2024-01-02 11:38:54,622 - ThreadPoolExecutor-0_0 - botocore.handlers - DEBUG - Adding expect 100 continue header to request.
2024-01-02 11:38:54,622 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;bound method S3RegionRedirector.set_request_url of &lt;botocore.utils.S3RegionRedirector object at 0x7fd78df34d68&gt;&gt;
2024-01-02 11:38:54,622 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;function add_recursion_detection_header at 0x7fd790098598&gt;
2024-01-02 11:38:54,622 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;function inject_api_version_header_if_needed at 0x7fd79009e0d0&gt;
2024-01-02 11:38:54,622 - ThreadPoolExecutor-0_0 - botocore.endpoint - DEBUG - Making request for OperationModel(name=PutObject) with params: {'url_path': '/erasure/test_key_to_check_etag_differences', 'query_string': {}, 'method': 'PUT', 'headers': {'User-Agent': 'aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1053-azure botocore/1.26.10', 'Content-MD5': 'ZNTVJSMgAUM8Wez4slmQDg==', 'Expect': '100-continue'}, 'body': &lt;s3transfer.utils.ReadFileChunk object at 0x7fd78de76f60&gt;, 'url': 'http://s3g:9878/erasure/test_key_to_check_etag_differences', 'context': {'client_region': 'us-west-1', 'client_config': &lt;botocore.config.Config object at 0x7fd78df34a20&gt;, 'has_streaming_input': True, 'auth_type': None, 'signing': {'bucket': 'erasure'}}}
2024-01-02 11:38:54,623 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.PutObject: calling handler &lt;function signal_not_transferring at 0x7fd7925c1158&gt;
2024-01-02 11:38:54,623 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.PutObject: calling handler &lt;bound method RequestSigner.handler of &lt;botocore.signers.RequestSigner object at 0x7fd78df349e8&gt;&gt;
2024-01-02 11:38:54,623 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event choose-signer.s3.PutObject: calling handler &lt;bound method S3EndpointSetter.set_signer of &lt;botocore.utils.S3EndpointSetter object at 0x7fd78df041d0&gt;&gt;
2024-01-02 11:38:54,623 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event choose-signer.s3.PutObject: calling handler &lt;function set_operation_specific_signer at 0x7fd7900987b8&gt;
2024-01-02 11:38:54,623 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-sign.s3.PutObject: calling handler &lt;bound method S3EndpointSetter.set_endpoint of &lt;botocore.utils.S3EndpointSetter object at 0x7fd78df041d0&gt;&gt;
2024-01-02 11:38:54,623 - ThreadPoolExecutor-0_0 - botocore.utils - DEBUG - Using S3 path style addressing.
2024-01-02 11:38:54,624 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - Calculating signature using v4 auth.
2024-01-02 11:38:54,625 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - CanonicalRequest:
PUT
/erasure/test_key_to_check_etag_differences

content-md5:ZNTVJSMgAUM8Wez4slmQDg==
host:s3g:9878
x-amz-content-sha256:a6d30129f0f3caa97029775f4973abe82b773ba7628c48dc71a352a2e0e29a8a
x-amz-date:20240102T113854Z

content-md5;host;x-amz-content-sha256;x-amz-date
a6d30129f0f3caa97029775f4973abe82b773ba7628c48dc71a352a2e0e29a8a
2024-01-02 11:38:54,625 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - StringToSign:
AWS4-HMAC-SHA256
20240102T113854Z
20240102/us-west-1/s3/aws4_request
f4abe27b72d5c08647e4ed3ed0538e3a81364e6a7a04bde494964f92870148d8
2024-01-02 11:38:54,625 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - Signature:
eec7ae2426eb1c57875284ec2e4b6ae905d8a3bf52cad9ea5f489fbfbb00967b
2024-01-02 11:38:54,625 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.PutObject: calling handler &lt;function signal_transferring at 0x7fd7925c11e0&gt;
2024-01-02 11:38:54,625 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.PutObject: calling handler &lt;function add_retry_headers at 0x7fd79009e730&gt;
2024-01-02 11:38:54,625 - ThreadPoolExecutor-0_0 - botocore.endpoint - DEBUG - Sending http request: &lt;AWSPreparedRequest stream_output=False, method=PUT, url=http://s3g:9878/erasure/test_key_to_check_etag_differences, headers={'User-Agent': b'aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1053-azure botocore/1.26.10', 'Content-MD5': b'ZNTVJSMgAUM8Wez4slmQDg==', 'Expect': b'100-continue', 'X-Amz-Date': b'20240102T113854Z', 'X-Amz-Content-SHA256': b'a6d30129f0f3caa97029775f4973abe82b773ba7628c48dc71a352a2e0e29a8a', 'Authorization': b'AWS4-HMAC-SHA256 Credential=dlfknslnfslf/20240102/us-west-1/s3/aws4_request, SignedHeaders=content-md5;host;x-amz-content-sha256;x-amz-date, Signature=eec7ae2426eb1c57875284ec2e4b6ae905d8a3bf52cad9ea5f489fbfbb00967b', 'amz-sdk-invocation-id': b'a233902c-37b6-470a-932b-dbf50152869f', 'amz-sdk-request': b'attempt=1', 'Content-Length': '1048576'}&gt;
2024-01-02 11:38:54,626 - ThreadPoolExecutor-0_0 - urllib3.connectionpool - DEBUG - Starting new HTTP connection (1): s3g:9878
2024-01-02 11:38:54,627 - ThreadPoolExecutor-0_0 - botocore.awsrequest - DEBUG - Waiting for 100 Continue response.
2024-01-02 11:38:54,628 - ThreadPoolExecutor-0_0 - botocore.awsrequest - DEBUG - 100 Continue response seen, now sending request body.
Completed 256.0 KiB/1.0 MiB (11.5 MiB/s) with 1 file(s) remaining
Completed 512.0 KiB/1.0 MiB (21.6 MiB/s) with 1 file(s) remaining
Completed 768.0 KiB/1.0 MiB (31.0 MiB/s) with 1 file(s) remaining
Completed 1.0 MiB/1.0 MiB (39.9 MiB/s) with 1 file(s) remaining  
2024-01-02 11:38:54,687 - ThreadPoolExecutor-0_0 - urllib3.connectionpool - DEBUG - http://s3g:9878 "PUT /erasure/test_key_to_check_etag_differences HTTP/1.1" 200 0
2024-01-02 11:38:54,688 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response headers: {'Date': 'Tue, 02 Jan 2024 11:38:54 GMT', 'Cache-Control': 'no-cache', 'Expires': 'Tue, 02 Jan 2024 11:38:54 GMT', 'Pragma': 'no-cache', 'Content-Type': 'text/plain;charset=utf-8', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'X-FRAME-OPTIONS': 'SAMEORIGIN', 'ETag': '"64d4d525232001433c59ecf8b259900e"', 'Server': 'Ozone', 'x-amz-id-2': 'EDfCxURq1OUm1OO', 'x-amz-request-id': '49561e63-c3f7-4082-8f00-6bf47b07fe2a', 'Content-Length': '0'}
2024-01-02 11:38:54,688 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response body:
b''
2024-01-02 11:38:54,689 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.PutObject: calling handler &lt;botocore.retryhandler.RetryHandler object at 0x7fd78df34da0&gt;
2024-01-02 11:38:54,689 - ThreadPoolExecutor-0_0 - botocore.retryhandler - DEBUG - No retry needed.
2024-01-02 11:38:54,689 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.PutObject: calling handler &lt;bound method S3RegionRedirector.redirect_from_error of &lt;botocore.utils.S3RegionRedirector object at 0x7fd78df34d68&gt;&gt;
2024-01-02 11:38:54,689 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event after-call.s3.PutObject: calling handler &lt;function enhance_error_msg at 0x7fd78e5c7598&gt;
2024-01-02 11:38:54,690 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
upload: ../../tmp/file2 to s3://erasure/test_key_to_check_etag_differences
2024-01-02 11:38:54,690 - Thread-1 - awscli.customizations.s3.results - DEBUG - Shutdown request received in result processing thread, shutting down result thread.</msg>
<status status="PASS" starttime="20240102 11:38:54.739" endtime="20240102 11:38:54.740"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:38:54.740" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:38:54.740" endtime="20240102 11:38:54.741"/>
</kw>
<status status="PASS" starttime="20240102 11:38:54.225" endtime="20240102 11:38:54.741"/>
</kw>
<msg timestamp="20240102 11:38:54.741" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:38:54.225" endtime="20240102 11:38:54.741"/>
</kw>
<msg timestamp="20240102 11:38:54.741" level="INFO">${output} = 2024-01-02 11:38:54,565 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1053-azure botocore/1.26.10
2024-01-02 11:38:54,566 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20240102 11:38:54.225" endtime="20240102 11:38:54.741"/>
</kw>
<msg timestamp="20240102 11:38:54.742" level="INFO">${file2UploadResult} = 2024-01-02 11:38:54,565 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1053-azure botocore/1.26.10
2024-01-02 11:38:54,566 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20240102 11:38:54.224" endtime="20240102 11:38:54.742"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<var>${match}</var>
<var>${etag2}</var>
<arg>${file2UploadResult}</arg>
<arg>PUT /${BUCKET}/test_key_to_check_etag_differences\ .*?Response headers.*?ETag':\ '"(.*?)"'</arg>
<arg>flags=DOTALL</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<msg timestamp="20240102 11:38:54.742" level="INFO">${match} = PUT /erasure/test_key_to_check_etag_differences HTTP/1.1" 200 0
2024-01-02 11:38:54,688 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response headers: {'Date': 'Tue, 02 Jan 2024 11:38:54 GMT'...</msg>
<msg timestamp="20240102 11:38:54.742" level="INFO">${etag2} = 64d4d525232001433c59ecf8b259900e</msg>
<status status="PASS" starttime="20240102 11:38:54.742" endtime="20240102 11:38:54.742"/>
</kw>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<arg>${etag1}</arg>
<arg>${etag2}</arg>
<doc>Fails if objects are equal after converting them to strings.</doc>
<status status="PASS" starttime="20240102 11:38:54.743" endtime="20240102 11:38:54.743"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<arg>rm s3://${BUCKET}/test_key_to_check_etag_differences</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:38:54.747" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 rm s3://erasure/test_key_to_check_etag_differences 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:38:55.180" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:38:55.180" level="INFO">${output} = delete: s3://erasure/test_key_to_check_etag_differences</msg>
<status status="PASS" starttime="20240102 11:38:54.744" endtime="20240102 11:38:55.180"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:38:55.181" level="INFO">delete: s3://erasure/test_key_to_check_etag_differences</msg>
<status status="PASS" starttime="20240102 11:38:55.181" endtime="20240102 11:38:55.181"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:38:55.182" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:38:55.181" endtime="20240102 11:38:55.182"/>
</kw>
<status status="PASS" starttime="20240102 11:38:54.744" endtime="20240102 11:38:55.182"/>
</kw>
<msg timestamp="20240102 11:38:55.182" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:38:54.744" endtime="20240102 11:38:55.182"/>
</kw>
<msg timestamp="20240102 11:38:55.182" level="INFO">${output} = delete: s3://erasure/test_key_to_check_etag_differences</msg>
<status status="PASS" starttime="20240102 11:38:54.743" endtime="20240102 11:38:55.182"/>
</kw>
<status status="PASS" starttime="20240102 11:38:54.743" endtime="20240102 11:38:55.182"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -rf /tmp/file1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:38:55.185" level="INFO">Running command 'rm -rf /tmp/file1 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:38:55.187" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:38:55.187" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240102 11:38:55.184" endtime="20240102 11:38:55.187"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:38:55.188" level="INFO"/>
<status status="PASS" starttime="20240102 11:38:55.187" endtime="20240102 11:38:55.188"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:38:55.188" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:38:55.188" endtime="20240102 11:38:55.188"/>
</kw>
<status status="PASS" starttime="20240102 11:38:55.183" endtime="20240102 11:38:55.188"/>
</kw>
<msg timestamp="20240102 11:38:55.188" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:38:55.183" endtime="20240102 11:38:55.188"/>
</kw>
<status status="PASS" starttime="20240102 11:38:55.183" endtime="20240102 11:38:55.189"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -rf /tmp/file2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:38:55.191" level="INFO">Running command 'rm -rf /tmp/file2 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:38:55.192" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:38:55.192" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240102 11:38:55.190" endtime="20240102 11:38:55.193"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:38:55.193" level="INFO"/>
<status status="PASS" starttime="20240102 11:38:55.193" endtime="20240102 11:38:55.193"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:38:55.194" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:38:55.193" endtime="20240102 11:38:55.194"/>
</kw>
<status status="PASS" starttime="20240102 11:38:55.189" endtime="20240102 11:38:55.194"/>
</kw>
<msg timestamp="20240102 11:38:55.194" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:38:55.189" endtime="20240102 11:38:55.194"/>
</kw>
<status status="PASS" starttime="20240102 11:38:55.189" endtime="20240102 11:38:55.194"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20240102 11:38:53.658" endtime="20240102 11:38:55.194"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20240102 11:38:29.951" endtime="20240102 11:38:55.196"/>
</suite>
<suite id="s1-s1-s15" name="S3 Getsecret" source="/opt/hadoop/smoketest/s3/s3_getsecret.robot">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20240102 11:38:55.202" endtime="20240102 11:38:55.203"/>
</kw>
<test id="s1-s1-s15-t1" name="Without OM service ID" line="32">
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>N/A</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<msg timestamp="20240102 11:38:55.204" level="INFO">Execution passed with message:
N/A</msg>
<status status="PASS" starttime="20240102 11:38:55.204" endtime="20240102 11:38:55.204"/>
</kw>
<kw name="Revoke secrets">
<status status="NOT RUN" starttime="20240102 11:38:55.204" endtime="20240102 11:38:55.204"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone s3 getsecret -u testuser2</arg>
<status status="NOT RUN" starttime="20240102 11:38:55.204" endtime="20240102 11:38:55.204"/>
</kw>
<kw name="Verify output">
<arg>${output}</arg>
<status status="NOT RUN" starttime="20240102 11:38:55.204" endtime="20240102 11:38:55.204"/>
</kw>
<kw name="Revoke secrets">
<status status="NOT RUN" starttime="20240102 11:38:55.204" endtime="20240102 11:38:55.204"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20240102 11:38:55.203" endtime="20240102 11:38:55.205">N/A</status>
</test>
<test id="s1-s1-s15-t2" name="With OM service ID" line="39">
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${OM_HA_PARAM}' == '${EMPTY}'</arg>
<arg>duplicate test in non-HA env.</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<msg timestamp="20240102 11:38:55.206" level="INFO">Execution passed with message:
duplicate test in non-HA env.</msg>
<status status="PASS" starttime="20240102 11:38:55.205" endtime="20240102 11:38:55.206"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>N/A</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="NOT RUN" starttime="20240102 11:38:55.206" endtime="20240102 11:38:55.206"/>
</kw>
<kw name="Revoke secrets">
<status status="NOT RUN" starttime="20240102 11:38:55.206" endtime="20240102 11:38:55.206"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone s3 getsecret -u testuser2 ${OM_HA_PARAM}</arg>
<status status="NOT RUN" starttime="20240102 11:38:55.206" endtime="20240102 11:38:55.207"/>
</kw>
<kw name="Verify output">
<arg>${output}</arg>
<status status="NOT RUN" starttime="20240102 11:38:55.207" endtime="20240102 11:38:55.207"/>
</kw>
<kw name="Revoke secrets">
<status status="NOT RUN" starttime="20240102 11:38:55.207" endtime="20240102 11:38:55.207"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20240102 11:38:55.205" endtime="20240102 11:38:55.207">duplicate test in non-HA env.</status>
</test>
<doc>Test ozone s3 getsecret command</doc>
<status status="PASS" starttime="20240102 11:38:55.198" endtime="20240102 11:38:55.207"/>
</suite>
<suite id="s1-s1-s16" name="Secretgenerate" source="/opt/hadoop/smoketest/s3/secretgenerate.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20240102 11:38:55.216" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:38:55.216" endtime="20240102 11:38:55.216"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20240102 11:38:55.216" endtime="20240102 11:38:55.216"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20240102 11:38:55.216" endtime="20240102 11:38:55.217"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20240102 11:38:55.217" endtime="20240102 11:38:55.217"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20240102 11:38:55.217" endtime="20240102 11:38:55.217"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20240102 11:38:55.217" endtime="20240102 11:38:55.217"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20240102 11:38:55.217" endtime="20240102 11:38:55.217"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20240102 11:38:55.217" endtime="20240102 11:38:55.217"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20240102 11:38:55.217" endtime="20240102 11:38:55.217"/>
</kw>
<status status="PASS" starttime="20240102 11:38:55.216" endtime="20240102 11:38:55.218"/>
</kw>
<test id="s1-s1-s16-t1" name="S3 Gateway Generate Secret" line="32">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20240102 11:38:55.218" endtime="20240102 11:38:55.218"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl -X PUT --negotiate -u : -v ${ENDPOINT_URL}/secret</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:38:55.221" level="INFO">Running command 'curl -X PUT --negotiate -u : -v http://s3g:9878/secret 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:38:55.243" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:38:55.243" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20240102 11:38:55.219" endtime="20240102 11:38:55.244"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:38:55.244" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to s3g port 9878 (#0)
*   Trying 172.18.0.6...
* Connected to s3g (172.18.0.6) port 9878 (#0)
&gt; PUT /secret HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: s3g:9878
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 400 Bad Request
&lt; Date: Tue, 02 Jan 2024 11:38:55 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Tue, 02 Jan 2024 11:38:55 GMT
&lt; Pragma: no-cache
&lt; Content-Type: text/plain
&lt; X-Content-Type-Options: nosniff
&lt; X-XSS-Protection: 1; mode=block
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; Server: Ozone
&lt; x-amz-id-2: 1jqnTTdL
&lt; x-amz-request-id: 306a2b4b-617f-4ea8-ad93-830775092e11
&lt; Content-Length: 31
&lt; 
{ [data not shown]

100    31  100    31    0     0   1739      0 --:--:-- --:--:-- --:--:--  1823
* Connection #0 to host s3g left intact
S3 Secret endpoint is disabled.</msg>
<status status="PASS" starttime="20240102 11:38:55.244" endtime="20240102 11:38:55.245"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:38:55.245" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:38:55.245" endtime="20240102 11:38:55.245"/>
</kw>
<status status="PASS" starttime="20240102 11:38:55.219" endtime="20240102 11:38:55.245"/>
</kw>
<msg timestamp="20240102 11:38:55.245" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:38:55.219" endtime="20240102 11:38:55.245"/>
</kw>
<msg timestamp="20240102 11:38:55.246" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20240102 11:38:55.219" endtime="20240102 11:38:55.246"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>HTTP/1.1 200 OK</arg>
<arg>ignore_case=True</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20240102 11:38:55.246" endtime="20240102 11:38:55.246"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>&lt;awsAccessKey&gt;.*&lt;/awsAccessKey&gt;&lt;awsSecret&gt;.*&lt;/awsSecret&gt;</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="NOT RUN" starttime="20240102 11:38:55.246" endtime="20240102 11:38:55.246"/>
</kw>
<status status="NOT RUN" starttime="20240102 11:38:55.246" endtime="20240102 11:38:55.246"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>S3 Secret endpoint is disabled.</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:38:55.247" endtime="20240102 11:38:55.247"/>
</kw>
<status status="PASS" starttime="20240102 11:38:55.246" endtime="20240102 11:38:55.247"/>
</branch>
<status status="PASS" starttime="20240102 11:38:55.246" endtime="20240102 11:38:55.247"/>
</if>
<tag>no-bucket-type</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20240102 11:38:55.218" endtime="20240102 11:38:55.247"/>
</test>
<test id="s1-s1-s16-t2" name="S3 Gateway Generate Secret By Username" line="42">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20240102 11:38:55.248" endtime="20240102 11:38:55.249"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl -X PUT --negotiate -u : -v ${ENDPOINT_URL}/secret/testuser2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:38:55.251" level="INFO">Running command 'curl -X PUT --negotiate -u : -v http://s3g:9878/secret/testuser2 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:38:55.262" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:38:55.262" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20240102 11:38:55.250" endtime="20240102 11:38:55.262"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:38:55.263" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to s3g port 9878 (#0)
*   Trying 172.18.0.6...
* Connected to s3g (172.18.0.6) port 9878 (#0)
&gt; PUT /secret/testuser2 HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: s3g:9878
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 400 Bad Request
&lt; Date: Tue, 02 Jan 2024 11:38:55 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Tue, 02 Jan 2024 11:38:55 GMT
&lt; Pragma: no-cache
&lt; Content-Type: text/plain
&lt; X-Content-Type-Options: nosniff
&lt; X-XSS-Protection: 1; mode=block
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; Server: Ozone
&lt; x-amz-id-2: R0BRM6dElS
&lt; x-amz-request-id: 3cf0afc8-c6c0-4ea4-9fbb-00bebf3c50be
&lt; Content-Length: 31
&lt; 
{ [data not shown]

100    31  100    31    0     0   4933      0 --:--:-- --:--:-- --:--:--  5166
* Connection #0 to host s3g left intact
S3 Secret endpoint is disabled.</msg>
<status status="PASS" starttime="20240102 11:38:55.262" endtime="20240102 11:38:55.263"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:38:55.263" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:38:55.263" endtime="20240102 11:38:55.263"/>
</kw>
<status status="PASS" starttime="20240102 11:38:55.250" endtime="20240102 11:38:55.263"/>
</kw>
<msg timestamp="20240102 11:38:55.263" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:38:55.249" endtime="20240102 11:38:55.264"/>
</kw>
<msg timestamp="20240102 11:38:55.264" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20240102 11:38:55.249" endtime="20240102 11:38:55.264"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>HTTP/1.1 200 OK</arg>
<arg>ignore_case=True</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20240102 11:38:55.264" endtime="20240102 11:38:55.264"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>&lt;awsAccessKey&gt;.*&lt;/awsAccessKey&gt;&lt;awsSecret&gt;.*&lt;/awsSecret&gt;</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="NOT RUN" starttime="20240102 11:38:55.264" endtime="20240102 11:38:55.264"/>
</kw>
<status status="NOT RUN" starttime="20240102 11:38:55.264" endtime="20240102 11:38:55.264"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>S3 Secret endpoint is disabled.</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:38:55.265" endtime="20240102 11:38:55.265"/>
</kw>
<status status="PASS" starttime="20240102 11:38:55.265" endtime="20240102 11:38:55.265"/>
</branch>
<status status="PASS" starttime="20240102 11:38:55.264" endtime="20240102 11:38:55.265"/>
</if>
<tag>no-bucket-type</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20240102 11:38:55.248" endtime="20240102 11:38:55.265"/>
</test>
<doc>S3 Secret Generate test</doc>
<status status="PASS" starttime="20240102 11:38:55.208" endtime="20240102 11:38:55.266"/>
</suite>
<suite id="s1-s1-s17" name="Secretrevoke" source="/opt/hadoop/smoketest/s3/secretrevoke.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20240102 11:38:55.275" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:38:55.275" endtime="20240102 11:38:55.275"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20240102 11:38:55.275" endtime="20240102 11:38:55.275"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20240102 11:38:55.276" endtime="20240102 11:38:55.276"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20240102 11:38:55.276" endtime="20240102 11:38:55.276"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20240102 11:38:55.276" endtime="20240102 11:38:55.276"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20240102 11:38:55.276" endtime="20240102 11:38:55.276"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20240102 11:38:55.276" endtime="20240102 11:38:55.276"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20240102 11:38:55.276" endtime="20240102 11:38:55.276"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20240102 11:38:55.276" endtime="20240102 11:38:55.276"/>
</kw>
<status status="PASS" starttime="20240102 11:38:55.275" endtime="20240102 11:38:55.277"/>
</kw>
<test id="s1-s1-s17-t1" name="S3 Gateway Revoke Secret" line="33">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20240102 11:38:55.277" endtime="20240102 11:38:55.277"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl -X DELETE --negotiate -u : -v ${ENDPOINT_URL}/secret</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:38:55.280" level="INFO">Running command 'curl -X DELETE --negotiate -u : -v http://s3g:9878/secret 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:38:55.290" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:38:55.291" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20240102 11:38:55.279" endtime="20240102 11:38:55.291"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:38:55.291" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to s3g port 9878 (#0)
*   Trying 172.18.0.6...
* Connected to s3g (172.18.0.6) port 9878 (#0)
&gt; DELETE /secret HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: s3g:9878
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 400 Bad Request
&lt; Date: Tue, 02 Jan 2024 11:38:55 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Tue, 02 Jan 2024 11:38:55 GMT
&lt; Pragma: no-cache
&lt; Content-Type: text/plain
&lt; X-Content-Type-Options: nosniff
&lt; X-XSS-Protection: 1; mode=block
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; Server: Ozone
&lt; x-amz-id-2: woj5dIWaD2PScpF
&lt; x-amz-request-id: 1acc28ee-0b3c-4032-8d1a-781914595501
&lt; Content-Length: 31
&lt; 
{ [data not shown]

100    31  100    31    0     0   4853      0 --:--:-- --:--:-- --:--:--  5166
* Connection #0 to host s3g left intact
S3 Secret endpoint is disabled.</msg>
<status status="PASS" starttime="20240102 11:38:55.291" endtime="20240102 11:38:55.292"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:38:55.292" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:38:55.292" endtime="20240102 11:38:55.292"/>
</kw>
<status status="PASS" starttime="20240102 11:38:55.278" endtime="20240102 11:38:55.292"/>
</kw>
<msg timestamp="20240102 11:38:55.292" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:38:55.278" endtime="20240102 11:38:55.292"/>
</kw>
<msg timestamp="20240102 11:38:55.293" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20240102 11:38:55.278" endtime="20240102 11:38:55.293"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>HTTP/1.1 200 OK</arg>
<arg>ignore_case=True</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20240102 11:38:55.293" endtime="20240102 11:38:55.293"/>
</kw>
<status status="NOT RUN" starttime="20240102 11:38:55.293" endtime="20240102 11:38:55.293"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>S3 Secret endpoint is disabled.</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:38:55.293" endtime="20240102 11:38:55.294"/>
</kw>
<status status="PASS" starttime="20240102 11:38:55.293" endtime="20240102 11:38:55.294"/>
</branch>
<status status="PASS" starttime="20240102 11:38:55.293" endtime="20240102 11:38:55.294"/>
</if>
<tag>no-bucket-type</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20240102 11:38:55.277" endtime="20240102 11:38:55.294"/>
</test>
<test id="s1-s1-s17-t2" name="S3 Gateway Revoke Secret By Username" line="42">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20240102 11:38:55.295" endtime="20240102 11:38:55.295"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl -X DELETE --negotiate -u : -v ${ENDPOINT_URL}/secret/testuser2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:38:55.299" level="INFO">Running command 'curl -X DELETE --negotiate -u : -v http://s3g:9878/secret/testuser2 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:38:55.310" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:38:55.310" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20240102 11:38:55.297" endtime="20240102 11:38:55.310"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:38:55.311" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to s3g port 9878 (#0)
*   Trying 172.18.0.6...
* Connected to s3g (172.18.0.6) port 9878 (#0)
&gt; DELETE /secret/testuser2 HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: s3g:9878
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 400 Bad Request
&lt; Date: Tue, 02 Jan 2024 11:38:55 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Tue, 02 Jan 2024 11:38:55 GMT
&lt; Pragma: no-cache
&lt; Content-Type: text/plain
&lt; X-Content-Type-Options: nosniff
&lt; X-XSS-Protection: 1; mode=block
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; Server: Ozone
&lt; x-amz-id-2: S7yd5W63Dz2DmEj
&lt; x-amz-request-id: db27881b-6fe7-4e91-9402-3504a224e443
&lt; Content-Length: 31
&lt; 
{ [data not shown]

100    31  100    31    0     0   4791      0 --:--:-- --:--:-- --:--:--  5166
* Connection #0 to host s3g left intact
S3 Secret endpoint is disabled.</msg>
<status status="PASS" starttime="20240102 11:38:55.310" endtime="20240102 11:38:55.311"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:38:55.312" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:38:55.311" endtime="20240102 11:38:55.312"/>
</kw>
<status status="PASS" starttime="20240102 11:38:55.296" endtime="20240102 11:38:55.312"/>
</kw>
<msg timestamp="20240102 11:38:55.312" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:38:55.296" endtime="20240102 11:38:55.312"/>
</kw>
<msg timestamp="20240102 11:38:55.312" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20240102 11:38:55.296" endtime="20240102 11:38:55.312"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>HTTP/1.1 200 OK</arg>
<arg>ignore_case=True</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20240102 11:38:55.313" endtime="20240102 11:38:55.313"/>
</kw>
<status status="NOT RUN" starttime="20240102 11:38:55.312" endtime="20240102 11:38:55.313"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>S3 Secret endpoint is disabled.</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:38:55.313" endtime="20240102 11:38:55.313"/>
</kw>
<status status="PASS" starttime="20240102 11:38:55.313" endtime="20240102 11:38:55.314"/>
</branch>
<status status="PASS" starttime="20240102 11:38:55.312" endtime="20240102 11:38:55.314"/>
</if>
<tag>no-bucket-type</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20240102 11:38:55.295" endtime="20240102 11:38:55.314"/>
</test>
<doc>S3 Secret Revoke test</doc>
<status status="PASS" starttime="20240102 11:38:55.267" endtime="20240102 11:38:55.314"/>
</suite>
<suite id="s1-s1-s18" name="Webui" source="/opt/hadoop/smoketest/s3/webui.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20240102 11:38:55.324" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:38:55.324" endtime="20240102 11:38:55.324"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20240102 11:38:55.324" endtime="20240102 11:38:55.324"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20240102 11:38:55.325" endtime="20240102 11:38:55.325"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20240102 11:38:55.325" endtime="20240102 11:38:55.325"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20240102 11:38:55.325" endtime="20240102 11:38:55.325"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20240102 11:38:55.325" endtime="20240102 11:38:55.325"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20240102 11:38:55.325" endtime="20240102 11:38:55.325"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20240102 11:38:55.325" endtime="20240102 11:38:55.325"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20240102 11:38:55.326" endtime="20240102 11:38:55.326"/>
</kw>
<status status="PASS" starttime="20240102 11:38:55.324" endtime="20240102 11:38:55.326"/>
</kw>
<test id="s1-s1-s18-t1" name="S3 Gateway Web UI" line="32">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20240102 11:38:55.326" endtime="20240102 11:38:55.327"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -v ${ENDPOINT_URL}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:38:55.329" level="INFO">Running command 'curl --negotiate -u : -v http://s3g:9878 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:38:55.339" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:38:55.339" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20240102 11:38:55.328" endtime="20240102 11:38:55.339"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:38:55.340" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to s3g port 9878 (#0)
*   Trying 172.18.0.6...
* Connected to s3g (172.18.0.6) port 9878 (#0)
&gt; GET / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: s3g:9878
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 302 Found
&lt; Date: Tue, 02 Jan 2024 11:38:55 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Tue, 02 Jan 2024 11:38:55 GMT
&lt; Pragma: no-cache
&lt; Content-Type: text/plain;charset=utf-8
&lt; X-Content-Type-Options: nosniff
&lt; X-XSS-Protection: 1; mode=block
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; Location: http://s3g:9878/static/
&lt; Content-Length: 0
&lt; 

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0
* Connection #0 to host s3g left intact</msg>
<status status="PASS" starttime="20240102 11:38:55.339" endtime="20240102 11:38:55.340"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:38:55.340" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:38:55.340" endtime="20240102 11:38:55.341"/>
</kw>
<status status="PASS" starttime="20240102 11:38:55.327" endtime="20240102 11:38:55.341"/>
</kw>
<msg timestamp="20240102 11:38:55.341" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:38:55.327" endtime="20240102 11:38:55.341"/>
</kw>
<msg timestamp="20240102 11:38:55.341" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20240102 11:38:55.327" endtime="20240102 11:38:55.341"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location:</arg>
<arg>ignore_case=True</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:38:55.341" endtime="20240102 11:38:55.342"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>/static/</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:38:55.342" endtime="20240102 11:38:55.342"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -v ${ENDPOINT_URL}/static/index.html</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:38:55.345" level="INFO">Running command 'curl --negotiate -u : -v http://s3g:9878/static/index.html 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:38:55.360" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:38:55.360" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20240102 11:38:55.343" endtime="20240102 11:38:55.360"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:38:55.361" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to s3g port 9878 (#0)
*   Trying 172.18.0.6...
* Connected to s3g (172.18.0.6) port 9878 (#0)
&gt; GET /static/index.html HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: s3g:9878
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Tue, 02 Jan 2024 11:38:55 GMT
&lt; Content-Type: text/html
&lt; X-Content-Type-Options: nosniff
&lt; X-XSS-Protection: 1; mode=block
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; Last-Modified: Tue, 02 Jan 2024 11:18:18 GMT
&lt; Accept-Ranges: bytes
&lt; Content-Length: 3106
&lt; 
{ [data not shown]

100  3106  100  3106    0     0   281k      0 --:--:-- --:--:-- --:--:--  303k
* Connection #0 to host s3g left intact
&lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"&gt;
&lt;!--
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
--&gt;
&lt;html lang="en"&gt;
&lt;head&gt;
    &lt;meta charset="utf-8"&gt;
    &lt;meta http-equiv="X-UA-Compatible" content="IE=edge"&gt;
    &lt;meta name="viewport" content="width=device-width, initial-scale=1"&gt;
    &lt;meta http-equiv="Content-Security-Policy" content="script-src 'self';"&gt;
    &lt;!-- The above 3 meta tags *must* come first in the head; any other head content must come *after* these tags --&gt;
    &lt;meta name="description" content="Apache Ozone S3 gateway"&gt;

    &lt;title&gt;S3 gateway -- Apache Ozone&lt;/title&gt;

    &lt;link href="bootstrap-3.4.1/css/bootstrap.min.css" rel="stylesheet"&gt;
    &lt;link href="hadoop.css" rel="stylesheet"&gt;
    &lt;link href="ozone.css" rel="stylesheet"&gt;

&lt;/head&gt;

&lt;body&gt;

&lt;header class="navbar navbar-inverse navbar-fixed-top bs-docs-nav"&gt;
    &lt;div class="container-fluid"&gt;
        &lt;div class="navbar-header"&gt;
            &lt;button type="button" class="navbar-toggle collapsed"
                    data-toggle="collapse" data-target="#navbar"
                    aria-expanded="false" aria-controls="navbar"&gt;
                &lt;span class="sr-only"&gt;Toggle navigation&lt;/span&gt;
                &lt;span class="icon-bar"&gt;&lt;/span&gt;
                &lt;span class="icon-bar"&gt;&lt;/span&gt;
                &lt;span class="icon-bar"&gt;&lt;/span&gt;
            &lt;/button&gt;
            &lt;a class="navbar-brand" href="#"&gt;Ozone S3G&lt;/a&gt;
        &lt;/div&gt;
        &lt;div id="navbar" class="collapse navbar-collapse"&gt;
            &lt;ul class="nav navbar-nav" id="ui-tabs"&gt;
                &lt;li&gt;&lt;a href="docs"&gt;Documentation&lt;/a&gt;&lt;/li&gt;

            &lt;/ul&gt;
        &lt;/div&gt;&lt;!--/.nav-collapse --&gt;

    &lt;/div&gt;
&lt;/header&gt;


&lt;div class="container-fluid" style="margin: 12pt"&gt;

    &lt;h1&gt;S3 gateway&lt;/h1&gt;

    &lt;p&gt;This is an endpoint of Apache Ozone S3 gateway. Use it with any
        AWS S3 compatible tool
        with setting this url as an endpoint&lt;/p&gt;

    &lt;p&gt;For example with aws-cli:&lt;/p&gt;

    &lt;pre&gt;aws s3api --endpoint &lt;span id="s3gurl"&gt;&lt;/span&gt; create-bucket --bucket=wordcount&lt;/pre&gt;

    &lt;p&gt;For more information, please check the &lt;a href="docs"&gt;documentation.&lt;/a&gt;
    &lt;/p&gt;
&lt;/div&gt;&lt;!-- /.container --&gt;

&lt;script src="jquery-3.5.1.min.js"&gt;&lt;/script&gt;
&lt;script src="bootstrap-3.4.1/js/bootstrap.min.js"&gt;&lt;/script&gt;
&lt;script src="s3g.js"&gt;&lt;/script&gt;

&lt;/body&gt;
&lt;/html&gt;</msg>
<status status="PASS" starttime="20240102 11:38:55.360" endtime="20240102 11:38:55.361"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:38:55.362" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:38:55.361" endtime="20240102 11:38:55.362"/>
</kw>
<status status="PASS" starttime="20240102 11:38:55.343" endtime="20240102 11:38:55.362"/>
</kw>
<msg timestamp="20240102 11:38:55.362" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:38:55.343" endtime="20240102 11:38:55.362"/>
</kw>
<msg timestamp="20240102 11:38:55.362" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20240102 11:38:55.342" endtime="20240102 11:38:55.362"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Apache Ozone S3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:38:55.362" endtime="20240102 11:38:55.363"/>
</kw>
<tag>no-bucket-type</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20240102 11:38:55.326" endtime="20240102 11:38:55.363"/>
</test>
<doc>S3 gateway web ui test</doc>
<status status="PASS" starttime="20240102 11:38:55.315" endtime="20240102 11:38:55.364"/>
</suite>
<status status="PASS" starttime="20240102 11:36:32.612" endtime="20240102 11:38:55.366"/>
</suite>
<suite id="s1-s2" name="Basic" source="/opt/hadoop/smoketest/ec/basic.robot">
<kw name="Prepare For Tests" library="lib" type="SETUP">
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=/tmp/1mb bs=1048576 count=1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:38:57.383" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/1mb bs=1048576 count=1 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:38:57.388" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:38:57.388" level="INFO">${output} = 1+0 records in
1+0 records out
1048576 bytes (1.0 MB) copied, 0.00331393 s, 316 MB/s</msg>
<status status="PASS" starttime="20240102 11:38:57.382" endtime="20240102 11:38:57.388"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:38:57.389" level="INFO">1+0 records in
1+0 records out
1048576 bytes (1.0 MB) copied, 0.00331393 s, 316 MB/s</msg>
<status status="PASS" starttime="20240102 11:38:57.389" endtime="20240102 11:38:57.389"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:38:57.389" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:38:57.389" endtime="20240102 11:38:57.389"/>
</kw>
<status status="PASS" starttime="20240102 11:38:57.381" endtime="20240102 11:38:57.389"/>
</kw>
<msg timestamp="20240102 11:38:57.390" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:38:57.381" endtime="20240102 11:38:57.390"/>
</kw>
<status status="PASS" starttime="20240102 11:38:57.381" endtime="20240102 11:38:57.390"/>
</kw>
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=/tmp/2mb bs=1048576 count=2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:38:57.392" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/2mb bs=1048576 count=2 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:38:57.400" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:38:57.400" level="INFO">${output} = 2+0 records in
2+0 records out
2097152 bytes (2.1 MB) copied, 0.00657698 s, 319 MB/s</msg>
<status status="PASS" starttime="20240102 11:38:57.391" endtime="20240102 11:38:57.400"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:38:57.401" level="INFO">2+0 records in
2+0 records out
2097152 bytes (2.1 MB) copied, 0.00657698 s, 319 MB/s</msg>
<status status="PASS" starttime="20240102 11:38:57.401" endtime="20240102 11:38:57.401"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:38:57.401" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:38:57.401" endtime="20240102 11:38:57.401"/>
</kw>
<status status="PASS" starttime="20240102 11:38:57.390" endtime="20240102 11:38:57.402"/>
</kw>
<msg timestamp="20240102 11:38:57.402" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:38:57.390" endtime="20240102 11:38:57.402"/>
</kw>
<status status="PASS" starttime="20240102 11:38:57.390" endtime="20240102 11:38:57.402"/>
</kw>
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=/tmp/3mb bs=1048576 count=3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:38:57.404" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/3mb bs=1048576 count=3 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:38:57.415" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:38:57.415" level="INFO">${output} = 3+0 records in
3+0 records out
3145728 bytes (3.1 MB) copied, 0.00944981 s, 333 MB/s</msg>
<status status="PASS" starttime="20240102 11:38:57.403" endtime="20240102 11:38:57.415"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:38:57.416" level="INFO">3+0 records in
3+0 records out
3145728 bytes (3.1 MB) copied, 0.00944981 s, 333 MB/s</msg>
<status status="PASS" starttime="20240102 11:38:57.416" endtime="20240102 11:38:57.416"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:38:57.417" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:38:57.416" endtime="20240102 11:38:57.417"/>
</kw>
<status status="PASS" starttime="20240102 11:38:57.403" endtime="20240102 11:38:57.417"/>
</kw>
<msg timestamp="20240102 11:38:57.417" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:38:57.402" endtime="20240102 11:38:57.417"/>
</kw>
<status status="PASS" starttime="20240102 11:38:57.402" endtime="20240102 11:38:57.417"/>
</kw>
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=/tmp/100mb bs=1048576 count=100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:38:57.419" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/100mb bs=1048576 count=100 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:38:57.722" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:38:57.722" level="INFO">${output} = 100+0 records in
100+0 records out
104857600 bytes (105 MB) copied, 0.300849 s, 349 MB/s</msg>
<status status="PASS" starttime="20240102 11:38:57.418" endtime="20240102 11:38:57.722"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:38:57.723" level="INFO">100+0 records in
100+0 records out
104857600 bytes (105 MB) copied, 0.300849 s, 349 MB/s</msg>
<status status="PASS" starttime="20240102 11:38:57.723" endtime="20240102 11:38:57.723"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:38:57.724" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:38:57.723" endtime="20240102 11:38:57.724"/>
</kw>
<status status="PASS" starttime="20240102 11:38:57.418" endtime="20240102 11:38:57.724"/>
</kw>
<msg timestamp="20240102 11:38:57.724" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:38:57.418" endtime="20240102 11:38:57.724"/>
</kw>
<status status="PASS" starttime="20240102 11:38:57.417" endtime="20240102 11:38:57.724"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20240102 11:38:57.724" endtime="20240102 11:38:57.724"/>
</kw>
<status status="PASS" starttime="20240102 11:38:57.381" endtime="20240102 11:38:57.725"/>
</kw>
<test id="s1-s2-t1" name="Test Bucket Creation" line="62">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create /${VOLUME}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:38:57.728" level="INFO">Running command 'ozone sh volume create /vol3308 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:39:00.984" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:39:00.984" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240102 11:38:57.727" endtime="20240102 11:39:00.984"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:39:00.985" level="INFO"/>
<status status="PASS" starttime="20240102 11:39:00.985" endtime="20240102 11:39:00.985"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:39:00.985" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:39:00.985" endtime="20240102 11:39:00.986"/>
</kw>
<status status="PASS" starttime="20240102 11:38:57.727" endtime="20240102 11:39:00.986"/>
</kw>
<msg timestamp="20240102 11:39:00.986" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:38:57.726" endtime="20240102 11:39:00.986"/>
</kw>
<msg timestamp="20240102 11:39:00.986" level="INFO">${result} = </msg>
<status status="PASS" starttime="20240102 11:38:57.726" endtime="20240102 11:39:00.986"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:39:00.986" endtime="20240102 11:39:00.986"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket create /${VOLUME}/default</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:39:00.989" level="INFO">Running command 'ozone sh bucket create /vol3308/default 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:39:04.251" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:39:04.251" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240102 11:39:00.988" endtime="20240102 11:39:04.251"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:39:04.252" level="INFO"/>
<status status="PASS" starttime="20240102 11:39:04.252" endtime="20240102 11:39:04.252"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:39:04.253" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:39:04.252" endtime="20240102 11:39:04.253"/>
</kw>
<status status="PASS" starttime="20240102 11:39:00.987" endtime="20240102 11:39:04.253"/>
</kw>
<msg timestamp="20240102 11:39:04.253" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:39:00.987" endtime="20240102 11:39:04.253"/>
</kw>
<msg timestamp="20240102 11:39:04.253" level="INFO">${result} = </msg>
<status status="PASS" starttime="20240102 11:39:00.986" endtime="20240102 11:39:04.253"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:39:04.253" endtime="20240102 11:39:04.254"/>
</kw>
<kw name="Verify Bucket Empty Replication Config" library="shell">
<arg>/${VOLUME}/default</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${bucket} | jq -r '.replicationConfig'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:39:04.257" level="INFO">Running command 'ozone sh bucket info /vol3308/default | jq -r '.replicationConfig' 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:39:07.549" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:39:07.549" level="INFO">${output} = null</msg>
<status status="PASS" starttime="20240102 11:39:04.255" endtime="20240102 11:39:07.549"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:39:07.550" level="INFO">null</msg>
<status status="PASS" starttime="20240102 11:39:07.550" endtime="20240102 11:39:07.550"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:39:07.550" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:39:07.550" endtime="20240102 11:39:07.550"/>
</kw>
<status status="PASS" starttime="20240102 11:39:04.255" endtime="20240102 11:39:07.551"/>
</kw>
<msg timestamp="20240102 11:39:07.551" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:39:04.255" endtime="20240102 11:39:07.551"/>
</kw>
<msg timestamp="20240102 11:39:07.551" level="INFO">${result} = null</msg>
<status status="PASS" starttime="20240102 11:39:04.254" endtime="20240102 11:39:07.551"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>null</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240102 11:39:07.551" endtime="20240102 11:39:07.551"/>
</kw>
<status status="PASS" starttime="20240102 11:39:04.254" endtime="20240102 11:39:07.551"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket create --replication 3 --type RATIS /${VOLUME}/ratis</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:39:07.554" level="INFO">Running command 'ozone sh bucket create --replication 3 --type RATIS /vol3308/ratis 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:39:10.803" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:39:10.803" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240102 11:39:07.553" endtime="20240102 11:39:10.803"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:39:10.804" level="INFO"/>
<status status="PASS" starttime="20240102 11:39:10.803" endtime="20240102 11:39:10.804"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:39:10.804" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:39:10.804" endtime="20240102 11:39:10.804"/>
</kw>
<status status="PASS" starttime="20240102 11:39:07.552" endtime="20240102 11:39:10.804"/>
</kw>
<msg timestamp="20240102 11:39:10.804" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:39:07.552" endtime="20240102 11:39:10.804"/>
</kw>
<msg timestamp="20240102 11:39:10.805" level="INFO">${result} = </msg>
<status status="PASS" starttime="20240102 11:39:07.552" endtime="20240102 11:39:10.805"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:39:10.805" endtime="20240102 11:39:10.805"/>
</kw>
<kw name="Verify Bucket Replica Replication Config" library="shell">
<arg>/${VOLUME}/ratis</arg>
<arg>RATIS</arg>
<arg>THREE</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${bucket} | jq -r '.replicationConfig.replicationType, .replicationConfig.replicationFactor'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:39:10.808" level="INFO">Running command 'ozone sh bucket info /vol3308/ratis | jq -r '.replicationConfig.replicationType, .replicationConfig.replicationFactor' 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:39:14.033" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:39:14.033" level="INFO">${output} = RATIS
THREE</msg>
<status status="PASS" starttime="20240102 11:39:10.807" endtime="20240102 11:39:14.033"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:39:14.034" level="INFO">RATIS
THREE</msg>
<status status="PASS" starttime="20240102 11:39:14.033" endtime="20240102 11:39:14.034"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:39:14.034" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:39:14.034" endtime="20240102 11:39:14.034"/>
</kw>
<status status="PASS" starttime="20240102 11:39:10.806" endtime="20240102 11:39:14.034"/>
</kw>
<msg timestamp="20240102 11:39:14.035" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:39:10.806" endtime="20240102 11:39:14.035"/>
</kw>
<msg timestamp="20240102 11:39:14.035" level="INFO">${result} = RATIS
THREE</msg>
<status status="PASS" starttime="20240102 11:39:10.806" endtime="20240102 11:39:14.035"/>
</kw>
<kw name="Verify Replica Replication Config" library="shell">
<arg>${result}</arg>
<arg>${type}</arg>
<arg>${factor}</arg>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${type}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20240102 11:39:14.036" endtime="20240102 11:39:14.036"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${factor}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20240102 11:39:14.036" endtime="20240102 11:39:14.037"/>
</kw>
<status status="PASS" starttime="20240102 11:39:14.035" endtime="20240102 11:39:14.037"/>
</kw>
<status status="PASS" starttime="20240102 11:39:10.805" endtime="20240102 11:39:14.037"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket create --replication rs-3-2-1024k --type EC /${VOLUME}/ecbucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:39:14.039" level="INFO">Running command 'ozone sh bucket create --replication rs-3-2-1024k --type EC /vol3308/ecbucket 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:39:17.348" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:39:17.348" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240102 11:39:14.038" endtime="20240102 11:39:17.348"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:39:17.349" level="INFO"/>
<status status="PASS" starttime="20240102 11:39:17.348" endtime="20240102 11:39:17.349"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:39:17.349" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:39:17.349" endtime="20240102 11:39:17.349"/>
</kw>
<status status="PASS" starttime="20240102 11:39:14.037" endtime="20240102 11:39:17.349"/>
</kw>
<msg timestamp="20240102 11:39:17.349" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:39:14.037" endtime="20240102 11:39:17.349"/>
</kw>
<msg timestamp="20240102 11:39:17.350" level="INFO">${result} = </msg>
<status status="PASS" starttime="20240102 11:39:14.037" endtime="20240102 11:39:17.350"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:39:17.350" endtime="20240102 11:39:17.350"/>
</kw>
<kw name="Verify Bucket EC Replication Config" library="shell">
<arg>/${VOLUME}/ecbucket</arg>
<arg>RS</arg>
<arg>3</arg>
<arg>2</arg>
<arg>1048576</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${bucket} | jq -r '.replicationConfig.replicationType, .replicationConfig.codec, .replicationConfig.data, .replicationConfig.parity, .replicationConfig.ecChunkSize'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:39:17.353" level="INFO">Running command 'ozone sh bucket info /vol3308/ecbucket | jq -r '.replicationConfig.replicationType, .replicationConfig.codec, .replicationConfig.data, .replicationConfig.parity, .replicationConfig.ecChunkSize' 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:39:20.504" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:39:20.504" level="INFO">${output} = EC
RS
3
2
1048576</msg>
<status status="PASS" starttime="20240102 11:39:17.352" endtime="20240102 11:39:20.504"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:39:20.505" level="INFO">EC
RS
3
2
1048576</msg>
<status status="PASS" starttime="20240102 11:39:20.504" endtime="20240102 11:39:20.505"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:39:20.505" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:39:20.505" endtime="20240102 11:39:20.505"/>
</kw>
<status status="PASS" starttime="20240102 11:39:17.351" endtime="20240102 11:39:20.505"/>
</kw>
<msg timestamp="20240102 11:39:20.505" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:39:17.351" endtime="20240102 11:39:20.505"/>
</kw>
<msg timestamp="20240102 11:39:20.506" level="INFO">${result} = EC
RS
3
2
1048576</msg>
<status status="PASS" starttime="20240102 11:39:17.351" endtime="20240102 11:39:20.506"/>
</kw>
<kw name="Verify EC Replication Config" library="shell">
<arg>${result}</arg>
<arg>${encoding}</arg>
<arg>${data}</arg>
<arg>${parity}</arg>
<arg>${chunksize}</arg>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)EC$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20240102 11:39:20.506" endtime="20240102 11:39:20.507"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${encoding}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20240102 11:39:20.507" endtime="20240102 11:39:20.507"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${data}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20240102 11:39:20.508" endtime="20240102 11:39:20.508"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${parity}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20240102 11:39:20.508" endtime="20240102 11:39:20.508"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${chunksize}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20240102 11:39:20.508" endtime="20240102 11:39:20.509"/>
</kw>
<status status="PASS" starttime="20240102 11:39:20.506" endtime="20240102 11:39:20.509"/>
</kw>
<status status="PASS" starttime="20240102 11:39:17.350" endtime="20240102 11:39:20.509"/>
</kw>
<status status="PASS" starttime="20240102 11:38:57.725" endtime="20240102 11:39:20.509"/>
</test>
<test id="s1-s2-t2" name="Create 1MB Key In EC Bucket" line="75">
<kw name="Create Key In EC Bucket">
<arg>1mb</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${dir}</var>
<arg>/${VOLUME}/ecbucket/dir</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240102 11:39:20.510" level="INFO">${dir} = /vol3308/ecbucket/dir</msg>
<status status="PASS" starttime="20240102 11:39:20.510" endtime="20240102 11:39:20.510"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>${dir}/${size}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240102 11:39:20.511" level="INFO">${key} = /vol3308/ecbucket/dir/1mb</msg>
<status status="PASS" starttime="20240102 11:39:20.510" endtime="20240102 11:39:20.511"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${file}</var>
<arg>/tmp/${size}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240102 11:39:20.511" level="INFO">${file} = /tmp/1mb</msg>
<status status="PASS" starttime="20240102 11:39:20.511" endtime="20240102 11:39:20.511"/>
</kw>
<kw name="Create Key" library="shell">
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put ${args} ${key} ${file}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:39:20.515" level="INFO">Running command 'ozone sh key put  /vol3308/ecbucket/dir/1mb /tmp/1mb 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:39:25.604" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:39:25.604" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240102 11:39:20.513" endtime="20240102 11:39:25.604"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:39:25.605" level="INFO"/>
<status status="PASS" starttime="20240102 11:39:25.605" endtime="20240102 11:39:25.605"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:39:25.606" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:39:25.605" endtime="20240102 11:39:25.606"/>
</kw>
<status status="PASS" starttime="20240102 11:39:20.513" endtime="20240102 11:39:25.606"/>
</kw>
<msg timestamp="20240102 11:39:25.606" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:39:20.512" endtime="20240102 11:39:25.606"/>
</kw>
<msg timestamp="20240102 11:39:25.606" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240102 11:39:20.512" endtime="20240102 11:39:25.606"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:39:25.606" endtime="20240102 11:39:25.606"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Uploaded ${file} to ${key}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:39:25.607" level="INFO">Uploaded /tmp/1mb to /vol3308/ecbucket/dir/1mb</msg>
<status status="PASS" starttime="20240102 11:39:25.606" endtime="20240102 11:39:25.607"/>
</kw>
<status status="PASS" starttime="20240102 11:39:20.511" endtime="20240102 11:39:25.607"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20240102 11:39:25.608" level="INFO">${postfix} = 71520</msg>
<status status="PASS" starttime="20240102 11:39:25.608" endtime="20240102 11:39:25.608"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240102 11:39:25.609" level="INFO">${tmpfile} = /tmp/tempkey-71520</msg>
<status status="PASS" starttime="20240102 11:39:25.608" endtime="20240102 11:39:25.609"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:39:25.611" level="INFO">Running command 'ozone sh key get /vol3308/ecbucket/dir/1mb /tmp/tempkey-71520 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:39:30.537" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:39:30.537" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240102 11:39:25.610" endtime="20240102 11:39:30.537"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:39:30.538" level="INFO"/>
<status status="PASS" starttime="20240102 11:39:30.537" endtime="20240102 11:39:30.538"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:39:30.538" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:39:30.538" endtime="20240102 11:39:30.538"/>
</kw>
<status status="PASS" starttime="20240102 11:39:25.609" endtime="20240102 11:39:30.538"/>
</kw>
<msg timestamp="20240102 11:39:30.539" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:39:25.609" endtime="20240102 11:39:30.539"/>
</kw>
<status status="PASS" starttime="20240102 11:39:25.609" endtime="20240102 11:39:30.539"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20240102 11:39:30.540" level="INFO">Running command 'diff -q /tmp/1mb /tmp/tempkey-71520 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:39:30.542" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20240102 11:39:30.539" endtime="20240102 11:39:30.542"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:39:30.545" level="INFO">Running command 'rm -f /tmp/tempkey-71520 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:39:30.546" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:39:30.546" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240102 11:39:30.544" endtime="20240102 11:39:30.546"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:39:30.547" level="INFO"/>
<status status="PASS" starttime="20240102 11:39:30.547" endtime="20240102 11:39:30.547"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:39:30.547" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:39:30.547" endtime="20240102 11:39:30.547"/>
</kw>
<status status="PASS" starttime="20240102 11:39:30.543" endtime="20240102 11:39:30.548"/>
</kw>
<msg timestamp="20240102 11:39:30.548" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:39:30.543" endtime="20240102 11:39:30.548"/>
</kw>
<status status="PASS" starttime="20240102 11:39:30.542" endtime="20240102 11:39:30.548"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20240102 11:39:30.548" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20240102 11:39:30.548" endtime="20240102 11:39:30.548"/>
</kw>
<msg timestamp="20240102 11:39:30.548" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20240102 11:39:25.608" endtime="20240102 11:39:30.548"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${matches}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20240102 11:39:30.549" endtime="20240102 11:39:30.549"/>
</kw>
<status status="PASS" starttime="20240102 11:39:25.607" endtime="20240102 11:39:30.549"/>
</kw>
<kw name="Verify Key EC Replication Config" library="shell">
<arg>${key}</arg>
<arg>RS</arg>
<arg>3</arg>
<arg>2</arg>
<arg>1048576</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${key} | jq -r '.replicationConfig.replicationType, .replicationConfig.codec, .replicationConfig.data, .replicationConfig.parity, .replicationConfig.ecChunkSize'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:39:30.551" level="INFO">Running command 'ozone sh key info /vol3308/ecbucket/dir/1mb | jq -r '.replicationConfig.replicationType, .replicationConfig.codec, .replicationConfig.data, .replicationConfig.parity, .replicationConfig.ecChunkSize' 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:39:33.970" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:39:33.970" level="INFO">${output} = EC
RS
3
2
1048576</msg>
<status status="PASS" starttime="20240102 11:39:30.550" endtime="20240102 11:39:33.970"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:39:33.971" level="INFO">EC
RS
3
2
1048576</msg>
<status status="PASS" starttime="20240102 11:39:33.971" endtime="20240102 11:39:33.971"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:39:33.972" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:39:33.971" endtime="20240102 11:39:33.972"/>
</kw>
<status status="PASS" starttime="20240102 11:39:30.550" endtime="20240102 11:39:33.972"/>
</kw>
<msg timestamp="20240102 11:39:33.972" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:39:30.550" endtime="20240102 11:39:33.972"/>
</kw>
<msg timestamp="20240102 11:39:33.972" level="INFO">${result} = EC
RS
3
2
1048576</msg>
<status status="PASS" starttime="20240102 11:39:30.549" endtime="20240102 11:39:33.972"/>
</kw>
<kw name="Verify EC Replication Config" library="shell">
<arg>${result}</arg>
<arg>${encoding}</arg>
<arg>${data}</arg>
<arg>${parity}</arg>
<arg>${chunksize}</arg>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)EC$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20240102 11:39:33.973" endtime="20240102 11:39:33.973"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${encoding}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20240102 11:39:33.973" endtime="20240102 11:39:33.974"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${data}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20240102 11:39:33.974" endtime="20240102 11:39:33.974"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${parity}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20240102 11:39:33.974" endtime="20240102 11:39:33.974"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${chunksize}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20240102 11:39:33.974" endtime="20240102 11:39:33.975"/>
</kw>
<status status="PASS" starttime="20240102 11:39:33.972" endtime="20240102 11:39:33.975"/>
</kw>
<status status="PASS" starttime="20240102 11:39:30.549" endtime="20240102 11:39:33.975"/>
</kw>
<kw name="Verify Key EC Replication Config" library="shell">
<arg>${dir}</arg>
<arg>RS</arg>
<arg>3</arg>
<arg>2</arg>
<arg>1048576</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${key} | jq -r '.replicationConfig.replicationType, .replicationConfig.codec, .replicationConfig.data, .replicationConfig.parity, .replicationConfig.ecChunkSize'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:39:33.978" level="INFO">Running command 'ozone sh key info /vol3308/ecbucket/dir | jq -r '.replicationConfig.replicationType, .replicationConfig.codec, .replicationConfig.data, .replicationConfig.parity, .replicationConfig.ecChunkSize' 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:39:37.327" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:39:37.327" level="INFO">${output} = EC
RS
3
2
1048576</msg>
<status status="PASS" starttime="20240102 11:39:33.976" endtime="20240102 11:39:37.327"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:39:37.328" level="INFO">EC
RS
3
2
1048576</msg>
<status status="PASS" starttime="20240102 11:39:37.327" endtime="20240102 11:39:37.328"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:39:37.328" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:39:37.328" endtime="20240102 11:39:37.328"/>
</kw>
<status status="PASS" starttime="20240102 11:39:33.976" endtime="20240102 11:39:37.328"/>
</kw>
<msg timestamp="20240102 11:39:37.328" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:39:33.976" endtime="20240102 11:39:37.328"/>
</kw>
<msg timestamp="20240102 11:39:37.329" level="INFO">${result} = EC
RS
3
2
1048576</msg>
<status status="PASS" starttime="20240102 11:39:33.975" endtime="20240102 11:39:37.329"/>
</kw>
<kw name="Verify EC Replication Config" library="shell">
<arg>${result}</arg>
<arg>${encoding}</arg>
<arg>${data}</arg>
<arg>${parity}</arg>
<arg>${chunksize}</arg>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)EC$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20240102 11:39:37.329" endtime="20240102 11:39:37.330"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${encoding}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20240102 11:39:37.330" endtime="20240102 11:39:37.330"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${data}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20240102 11:39:37.330" endtime="20240102 11:39:37.330"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${parity}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20240102 11:39:37.330" endtime="20240102 11:39:37.331"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${chunksize}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20240102 11:39:37.331" endtime="20240102 11:39:37.331"/>
</kw>
<status status="PASS" starttime="20240102 11:39:37.329" endtime="20240102 11:39:37.331"/>
</kw>
<status status="PASS" starttime="20240102 11:39:33.975" endtime="20240102 11:39:37.331"/>
</kw>
<status status="PASS" starttime="20240102 11:39:20.510" endtime="20240102 11:39:37.331"/>
</kw>
<status status="PASS" starttime="20240102 11:39:20.509" endtime="20240102 11:39:37.331"/>
</test>
<test id="s1-s2-t3" name="Create 2MB Key In EC Bucket" line="78">
<kw name="Create Key In EC Bucket">
<arg>2mb</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${dir}</var>
<arg>/${VOLUME}/ecbucket/dir</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240102 11:39:37.333" level="INFO">${dir} = /vol3308/ecbucket/dir</msg>
<status status="PASS" starttime="20240102 11:39:37.332" endtime="20240102 11:39:37.333"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>${dir}/${size}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240102 11:39:37.333" level="INFO">${key} = /vol3308/ecbucket/dir/2mb</msg>
<status status="PASS" starttime="20240102 11:39:37.333" endtime="20240102 11:39:37.333"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${file}</var>
<arg>/tmp/${size}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240102 11:39:37.333" level="INFO">${file} = /tmp/2mb</msg>
<status status="PASS" starttime="20240102 11:39:37.333" endtime="20240102 11:39:37.333"/>
</kw>
<kw name="Create Key" library="shell">
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put ${args} ${key} ${file}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:39:37.337" level="INFO">Running command 'ozone sh key put  /vol3308/ecbucket/dir/2mb /tmp/2mb 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:39:42.206" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:39:42.206" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240102 11:39:37.336" endtime="20240102 11:39:42.206"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:39:42.207" level="INFO"/>
<status status="PASS" starttime="20240102 11:39:42.206" endtime="20240102 11:39:42.207"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:39:42.207" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:39:42.207" endtime="20240102 11:39:42.207"/>
</kw>
<status status="PASS" starttime="20240102 11:39:37.335" endtime="20240102 11:39:42.207"/>
</kw>
<msg timestamp="20240102 11:39:42.208" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:39:37.335" endtime="20240102 11:39:42.208"/>
</kw>
<msg timestamp="20240102 11:39:42.208" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240102 11:39:37.335" endtime="20240102 11:39:42.208"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:39:42.208" endtime="20240102 11:39:42.208"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Uploaded ${file} to ${key}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:39:42.208" level="INFO">Uploaded /tmp/2mb to /vol3308/ecbucket/dir/2mb</msg>
<status status="PASS" starttime="20240102 11:39:42.208" endtime="20240102 11:39:42.209"/>
</kw>
<status status="PASS" starttime="20240102 11:39:37.334" endtime="20240102 11:39:42.209"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20240102 11:39:42.210" level="INFO">${postfix} = 19694</msg>
<status status="PASS" starttime="20240102 11:39:42.210" endtime="20240102 11:39:42.210"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240102 11:39:42.210" level="INFO">${tmpfile} = /tmp/tempkey-19694</msg>
<status status="PASS" starttime="20240102 11:39:42.210" endtime="20240102 11:39:42.210"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:39:42.213" level="INFO">Running command 'ozone sh key get /vol3308/ecbucket/dir/2mb /tmp/tempkey-19694 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:39:46.901" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:39:46.901" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240102 11:39:42.211" endtime="20240102 11:39:46.901"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:39:46.902" level="INFO"/>
<status status="PASS" starttime="20240102 11:39:46.902" endtime="20240102 11:39:46.902"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:39:46.902" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:39:46.902" endtime="20240102 11:39:46.903"/>
</kw>
<status status="PASS" starttime="20240102 11:39:42.211" endtime="20240102 11:39:46.903"/>
</kw>
<msg timestamp="20240102 11:39:46.903" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:39:42.211" endtime="20240102 11:39:46.903"/>
</kw>
<status status="PASS" starttime="20240102 11:39:42.210" endtime="20240102 11:39:46.903"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20240102 11:39:46.905" level="INFO">Running command 'diff -q /tmp/2mb /tmp/tempkey-19694 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:39:46.907" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20240102 11:39:46.903" endtime="20240102 11:39:46.907"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:39:46.910" level="INFO">Running command 'rm -f /tmp/tempkey-19694 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:39:46.911" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:39:46.911" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240102 11:39:46.909" endtime="20240102 11:39:46.911"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:39:46.912" level="INFO"/>
<status status="PASS" starttime="20240102 11:39:46.912" endtime="20240102 11:39:46.912"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:39:46.912" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:39:46.912" endtime="20240102 11:39:46.912"/>
</kw>
<status status="PASS" starttime="20240102 11:39:46.908" endtime="20240102 11:39:46.913"/>
</kw>
<msg timestamp="20240102 11:39:46.913" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:39:46.908" endtime="20240102 11:39:46.913"/>
</kw>
<status status="PASS" starttime="20240102 11:39:46.907" endtime="20240102 11:39:46.913"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20240102 11:39:46.913" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20240102 11:39:46.913" endtime="20240102 11:39:46.913"/>
</kw>
<msg timestamp="20240102 11:39:46.914" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20240102 11:39:42.209" endtime="20240102 11:39:46.914"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${matches}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20240102 11:39:46.914" endtime="20240102 11:39:46.914"/>
</kw>
<status status="PASS" starttime="20240102 11:39:42.209" endtime="20240102 11:39:46.914"/>
</kw>
<kw name="Verify Key EC Replication Config" library="shell">
<arg>${key}</arg>
<arg>RS</arg>
<arg>3</arg>
<arg>2</arg>
<arg>1048576</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${key} | jq -r '.replicationConfig.replicationType, .replicationConfig.codec, .replicationConfig.data, .replicationConfig.parity, .replicationConfig.ecChunkSize'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:39:46.917" level="INFO">Running command 'ozone sh key info /vol3308/ecbucket/dir/2mb | jq -r '.replicationConfig.replicationType, .replicationConfig.codec, .replicationConfig.data, .replicationConfig.parity, .replicationConfig.ecChunkSize' 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:39:50.178" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:39:50.178" level="INFO">${output} = EC
RS
3
2
1048576</msg>
<status status="PASS" starttime="20240102 11:39:46.916" endtime="20240102 11:39:50.178"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:39:50.179" level="INFO">EC
RS
3
2
1048576</msg>
<status status="PASS" starttime="20240102 11:39:50.178" endtime="20240102 11:39:50.179"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:39:50.179" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:39:50.179" endtime="20240102 11:39:50.179"/>
</kw>
<status status="PASS" starttime="20240102 11:39:46.915" endtime="20240102 11:39:50.179"/>
</kw>
<msg timestamp="20240102 11:39:50.179" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:39:46.915" endtime="20240102 11:39:50.180"/>
</kw>
<msg timestamp="20240102 11:39:50.180" level="INFO">${result} = EC
RS
3
2
1048576</msg>
<status status="PASS" starttime="20240102 11:39:46.915" endtime="20240102 11:39:50.180"/>
</kw>
<kw name="Verify EC Replication Config" library="shell">
<arg>${result}</arg>
<arg>${encoding}</arg>
<arg>${data}</arg>
<arg>${parity}</arg>
<arg>${chunksize}</arg>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)EC$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20240102 11:39:50.180" endtime="20240102 11:39:50.181"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${encoding}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20240102 11:39:50.181" endtime="20240102 11:39:50.181"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${data}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20240102 11:39:50.181" endtime="20240102 11:39:50.181"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${parity}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20240102 11:39:50.182" endtime="20240102 11:39:50.182"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${chunksize}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20240102 11:39:50.182" endtime="20240102 11:39:50.182"/>
</kw>
<status status="PASS" starttime="20240102 11:39:50.180" endtime="20240102 11:39:50.182"/>
</kw>
<status status="PASS" starttime="20240102 11:39:46.914" endtime="20240102 11:39:50.182"/>
</kw>
<kw name="Verify Key EC Replication Config" library="shell">
<arg>${dir}</arg>
<arg>RS</arg>
<arg>3</arg>
<arg>2</arg>
<arg>1048576</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${key} | jq -r '.replicationConfig.replicationType, .replicationConfig.codec, .replicationConfig.data, .replicationConfig.parity, .replicationConfig.ecChunkSize'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:39:50.185" level="INFO">Running command 'ozone sh key info /vol3308/ecbucket/dir | jq -r '.replicationConfig.replicationType, .replicationConfig.codec, .replicationConfig.data, .replicationConfig.parity, .replicationConfig.ecChunkSize' 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:39:53.470" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:39:53.470" level="INFO">${output} = EC
RS
3
2
1048576</msg>
<status status="PASS" starttime="20240102 11:39:50.184" endtime="20240102 11:39:53.470"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:39:53.471" level="INFO">EC
RS
3
2
1048576</msg>
<status status="PASS" starttime="20240102 11:39:53.470" endtime="20240102 11:39:53.471"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:39:53.471" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:39:53.471" endtime="20240102 11:39:53.471"/>
</kw>
<status status="PASS" starttime="20240102 11:39:50.183" endtime="20240102 11:39:53.471"/>
</kw>
<msg timestamp="20240102 11:39:53.471" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:39:50.183" endtime="20240102 11:39:53.471"/>
</kw>
<msg timestamp="20240102 11:39:53.472" level="INFO">${result} = EC
RS
3
2
1048576</msg>
<status status="PASS" starttime="20240102 11:39:50.183" endtime="20240102 11:39:53.472"/>
</kw>
<kw name="Verify EC Replication Config" library="shell">
<arg>${result}</arg>
<arg>${encoding}</arg>
<arg>${data}</arg>
<arg>${parity}</arg>
<arg>${chunksize}</arg>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)EC$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20240102 11:39:53.472" endtime="20240102 11:39:53.473"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${encoding}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20240102 11:39:53.473" endtime="20240102 11:39:53.473"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${data}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20240102 11:39:53.473" endtime="20240102 11:39:53.473"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${parity}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20240102 11:39:53.474" endtime="20240102 11:39:53.474"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${chunksize}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20240102 11:39:53.474" endtime="20240102 11:39:53.474"/>
</kw>
<status status="PASS" starttime="20240102 11:39:53.472" endtime="20240102 11:39:53.474"/>
</kw>
<status status="PASS" starttime="20240102 11:39:50.182" endtime="20240102 11:39:53.474"/>
</kw>
<status status="PASS" starttime="20240102 11:39:37.332" endtime="20240102 11:39:53.474"/>
</kw>
<status status="PASS" starttime="20240102 11:39:37.332" endtime="20240102 11:39:53.474"/>
</test>
<test id="s1-s2-t4" name="Create 3MB Key In EC Bucket" line="81">
<kw name="Create Key In EC Bucket">
<arg>3mb</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${dir}</var>
<arg>/${VOLUME}/ecbucket/dir</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240102 11:39:53.476" level="INFO">${dir} = /vol3308/ecbucket/dir</msg>
<status status="PASS" starttime="20240102 11:39:53.476" endtime="20240102 11:39:53.476"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>${dir}/${size}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240102 11:39:53.476" level="INFO">${key} = /vol3308/ecbucket/dir/3mb</msg>
<status status="PASS" starttime="20240102 11:39:53.476" endtime="20240102 11:39:53.476"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${file}</var>
<arg>/tmp/${size}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240102 11:39:53.477" level="INFO">${file} = /tmp/3mb</msg>
<status status="PASS" starttime="20240102 11:39:53.476" endtime="20240102 11:39:53.477"/>
</kw>
<kw name="Create Key" library="shell">
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put ${args} ${key} ${file}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:39:53.480" level="INFO">Running command 'ozone sh key put  /vol3308/ecbucket/dir/3mb /tmp/3mb 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:39:58.574" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:39:58.574" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240102 11:39:53.479" endtime="20240102 11:39:58.574"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:39:58.575" level="INFO"/>
<status status="PASS" starttime="20240102 11:39:58.574" endtime="20240102 11:39:58.575"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:39:58.575" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:39:58.575" endtime="20240102 11:39:58.575"/>
</kw>
<status status="PASS" starttime="20240102 11:39:53.478" endtime="20240102 11:39:58.575"/>
</kw>
<msg timestamp="20240102 11:39:58.575" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:39:53.478" endtime="20240102 11:39:58.576"/>
</kw>
<msg timestamp="20240102 11:39:58.576" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240102 11:39:53.478" endtime="20240102 11:39:58.576"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:39:58.576" endtime="20240102 11:39:58.576"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Uploaded ${file} to ${key}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:39:58.576" level="INFO">Uploaded /tmp/3mb to /vol3308/ecbucket/dir/3mb</msg>
<status status="PASS" starttime="20240102 11:39:58.576" endtime="20240102 11:39:58.577"/>
</kw>
<status status="PASS" starttime="20240102 11:39:53.477" endtime="20240102 11:39:58.577"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20240102 11:39:58.578" level="INFO">${postfix} = 71952</msg>
<status status="PASS" starttime="20240102 11:39:58.578" endtime="20240102 11:39:58.578"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240102 11:39:58.578" level="INFO">${tmpfile} = /tmp/tempkey-71952</msg>
<status status="PASS" starttime="20240102 11:39:58.578" endtime="20240102 11:39:58.578"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:39:58.581" level="INFO">Running command 'ozone sh key get /vol3308/ecbucket/dir/3mb /tmp/tempkey-71952 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:40:03.312" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:40:03.312" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240102 11:39:58.580" endtime="20240102 11:40:03.312"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:40:03.313" level="INFO"/>
<status status="PASS" starttime="20240102 11:40:03.313" endtime="20240102 11:40:03.313"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:40:03.314" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:40:03.313" endtime="20240102 11:40:03.314"/>
</kw>
<status status="PASS" starttime="20240102 11:39:58.579" endtime="20240102 11:40:03.314"/>
</kw>
<msg timestamp="20240102 11:40:03.314" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:39:58.579" endtime="20240102 11:40:03.314"/>
</kw>
<status status="PASS" starttime="20240102 11:39:58.578" endtime="20240102 11:40:03.314"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20240102 11:40:03.316" level="INFO">Running command 'diff -q /tmp/3mb /tmp/tempkey-71952 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:40:03.318" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20240102 11:40:03.314" endtime="20240102 11:40:03.318"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:40:03.321" level="INFO">Running command 'rm -f /tmp/tempkey-71952 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:40:03.322" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:40:03.322" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240102 11:40:03.320" endtime="20240102 11:40:03.322"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:40:03.323" level="INFO"/>
<status status="PASS" starttime="20240102 11:40:03.323" endtime="20240102 11:40:03.323"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:40:03.323" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:40:03.323" endtime="20240102 11:40:03.323"/>
</kw>
<status status="PASS" starttime="20240102 11:40:03.319" endtime="20240102 11:40:03.324"/>
</kw>
<msg timestamp="20240102 11:40:03.324" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:40:03.319" endtime="20240102 11:40:03.324"/>
</kw>
<status status="PASS" starttime="20240102 11:40:03.318" endtime="20240102 11:40:03.324"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20240102 11:40:03.324" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20240102 11:40:03.324" endtime="20240102 11:40:03.324"/>
</kw>
<msg timestamp="20240102 11:40:03.325" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20240102 11:39:58.577" endtime="20240102 11:40:03.325"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${matches}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20240102 11:40:03.325" endtime="20240102 11:40:03.325"/>
</kw>
<status status="PASS" starttime="20240102 11:39:58.577" endtime="20240102 11:40:03.325"/>
</kw>
<kw name="Verify Key EC Replication Config" library="shell">
<arg>${key}</arg>
<arg>RS</arg>
<arg>3</arg>
<arg>2</arg>
<arg>1048576</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${key} | jq -r '.replicationConfig.replicationType, .replicationConfig.codec, .replicationConfig.data, .replicationConfig.parity, .replicationConfig.ecChunkSize'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:40:03.328" level="INFO">Running command 'ozone sh key info /vol3308/ecbucket/dir/3mb | jq -r '.replicationConfig.replicationType, .replicationConfig.codec, .replicationConfig.data, .replicationConfig.parity, .replicationConfig.ecChunkSize' 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:40:06.746" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:40:06.746" level="INFO">${output} = EC
RS
3
2
1048576</msg>
<status status="PASS" starttime="20240102 11:40:03.326" endtime="20240102 11:40:06.746"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:40:06.747" level="INFO">EC
RS
3
2
1048576</msg>
<status status="PASS" starttime="20240102 11:40:06.746" endtime="20240102 11:40:06.747"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:40:06.747" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:40:06.747" endtime="20240102 11:40:06.747"/>
</kw>
<status status="PASS" starttime="20240102 11:40:03.326" endtime="20240102 11:40:06.747"/>
</kw>
<msg timestamp="20240102 11:40:06.747" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:40:03.326" endtime="20240102 11:40:06.747"/>
</kw>
<msg timestamp="20240102 11:40:06.748" level="INFO">${result} = EC
RS
3
2
1048576</msg>
<status status="PASS" starttime="20240102 11:40:03.325" endtime="20240102 11:40:06.748"/>
</kw>
<kw name="Verify EC Replication Config" library="shell">
<arg>${result}</arg>
<arg>${encoding}</arg>
<arg>${data}</arg>
<arg>${parity}</arg>
<arg>${chunksize}</arg>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)EC$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20240102 11:40:06.748" endtime="20240102 11:40:06.749"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${encoding}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20240102 11:40:06.749" endtime="20240102 11:40:06.749"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${data}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20240102 11:40:06.749" endtime="20240102 11:40:06.749"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${parity}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20240102 11:40:06.750" endtime="20240102 11:40:06.750"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${chunksize}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20240102 11:40:06.750" endtime="20240102 11:40:06.750"/>
</kw>
<status status="PASS" starttime="20240102 11:40:06.748" endtime="20240102 11:40:06.750"/>
</kw>
<status status="PASS" starttime="20240102 11:40:03.325" endtime="20240102 11:40:06.750"/>
</kw>
<kw name="Verify Key EC Replication Config" library="shell">
<arg>${dir}</arg>
<arg>RS</arg>
<arg>3</arg>
<arg>2</arg>
<arg>1048576</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${key} | jq -r '.replicationConfig.replicationType, .replicationConfig.codec, .replicationConfig.data, .replicationConfig.parity, .replicationConfig.ecChunkSize'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:40:06.753" level="INFO">Running command 'ozone sh key info /vol3308/ecbucket/dir | jq -r '.replicationConfig.replicationType, .replicationConfig.codec, .replicationConfig.data, .replicationConfig.parity, .replicationConfig.ecChunkSize' 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:40:09.950" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:40:09.950" level="INFO">${output} = EC
RS
3
2
1048576</msg>
<status status="PASS" starttime="20240102 11:40:06.752" endtime="20240102 11:40:09.950"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:40:09.951" level="INFO">EC
RS
3
2
1048576</msg>
<status status="PASS" starttime="20240102 11:40:09.950" endtime="20240102 11:40:09.951"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:40:09.951" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:40:09.951" endtime="20240102 11:40:09.951"/>
</kw>
<status status="PASS" starttime="20240102 11:40:06.751" endtime="20240102 11:40:09.952"/>
</kw>
<msg timestamp="20240102 11:40:09.952" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:40:06.751" endtime="20240102 11:40:09.952"/>
</kw>
<msg timestamp="20240102 11:40:09.952" level="INFO">${result} = EC
RS
3
2
1048576</msg>
<status status="PASS" starttime="20240102 11:40:06.751" endtime="20240102 11:40:09.952"/>
</kw>
<kw name="Verify EC Replication Config" library="shell">
<arg>${result}</arg>
<arg>${encoding}</arg>
<arg>${data}</arg>
<arg>${parity}</arg>
<arg>${chunksize}</arg>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)EC$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20240102 11:40:09.953" endtime="20240102 11:40:09.953"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${encoding}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20240102 11:40:09.953" endtime="20240102 11:40:09.953"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${data}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20240102 11:40:09.953" endtime="20240102 11:40:09.954"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${parity}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20240102 11:40:09.954" endtime="20240102 11:40:09.954"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${chunksize}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20240102 11:40:09.954" endtime="20240102 11:40:09.954"/>
</kw>
<status status="PASS" starttime="20240102 11:40:09.952" endtime="20240102 11:40:09.954"/>
</kw>
<status status="PASS" starttime="20240102 11:40:06.750" endtime="20240102 11:40:09.954"/>
</kw>
<status status="PASS" starttime="20240102 11:39:53.475" endtime="20240102 11:40:09.954"/>
</kw>
<status status="PASS" starttime="20240102 11:39:53.475" endtime="20240102 11:40:09.955"/>
</test>
<test id="s1-s2-t5" name="Create 100MB Key In EC Bucket" line="84">
<kw name="Create Key In EC Bucket">
<arg>100mb</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${dir}</var>
<arg>/${VOLUME}/ecbucket/dir</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240102 11:40:09.956" level="INFO">${dir} = /vol3308/ecbucket/dir</msg>
<status status="PASS" starttime="20240102 11:40:09.956" endtime="20240102 11:40:09.956"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>${dir}/${size}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240102 11:40:09.956" level="INFO">${key} = /vol3308/ecbucket/dir/100mb</msg>
<status status="PASS" starttime="20240102 11:40:09.956" endtime="20240102 11:40:09.956"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${file}</var>
<arg>/tmp/${size}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240102 11:40:09.957" level="INFO">${file} = /tmp/100mb</msg>
<status status="PASS" starttime="20240102 11:40:09.956" endtime="20240102 11:40:09.957"/>
</kw>
<kw name="Create Key" library="shell">
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put ${args} ${key} ${file}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:40:09.960" level="INFO">Running command 'ozone sh key put  /vol3308/ecbucket/dir/100mb /tmp/100mb 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:40:17.572" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:40:17.573" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240102 11:40:09.959" endtime="20240102 11:40:17.573"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:40:17.573" level="INFO"/>
<status status="PASS" starttime="20240102 11:40:17.573" endtime="20240102 11:40:17.573"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:40:17.574" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:40:17.574" endtime="20240102 11:40:17.574"/>
</kw>
<status status="PASS" starttime="20240102 11:40:09.958" endtime="20240102 11:40:17.574"/>
</kw>
<msg timestamp="20240102 11:40:17.574" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:40:09.958" endtime="20240102 11:40:17.574"/>
</kw>
<msg timestamp="20240102 11:40:17.574" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240102 11:40:09.958" endtime="20240102 11:40:17.574"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:40:17.575" endtime="20240102 11:40:17.575"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Uploaded ${file} to ${key}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:40:17.575" level="INFO">Uploaded /tmp/100mb to /vol3308/ecbucket/dir/100mb</msg>
<status status="PASS" starttime="20240102 11:40:17.575" endtime="20240102 11:40:17.575"/>
</kw>
<status status="PASS" starttime="20240102 11:40:09.957" endtime="20240102 11:40:17.575"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20240102 11:40:17.577" level="INFO">${postfix} = 54854</msg>
<status status="PASS" starttime="20240102 11:40:17.576" endtime="20240102 11:40:17.577"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240102 11:40:17.577" level="INFO">${tmpfile} = /tmp/tempkey-54854</msg>
<status status="PASS" starttime="20240102 11:40:17.577" endtime="20240102 11:40:17.577"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:40:17.580" level="INFO">Running command 'ozone sh key get /vol3308/ecbucket/dir/100mb /tmp/tempkey-54854 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:40:23.836" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:40:23.836" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240102 11:40:17.578" endtime="20240102 11:40:23.836"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:40:23.837" level="INFO"/>
<status status="PASS" starttime="20240102 11:40:23.837" endtime="20240102 11:40:23.837"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:40:23.837" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:40:23.837" endtime="20240102 11:40:23.838"/>
</kw>
<status status="PASS" starttime="20240102 11:40:17.578" endtime="20240102 11:40:23.838"/>
</kw>
<msg timestamp="20240102 11:40:23.838" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:40:17.578" endtime="20240102 11:40:23.838"/>
</kw>
<status status="PASS" starttime="20240102 11:40:17.577" endtime="20240102 11:40:23.838"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20240102 11:40:23.840" level="INFO">Running command 'diff -q /tmp/100mb /tmp/tempkey-54854 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:40:23.877" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20240102 11:40:23.838" endtime="20240102 11:40:23.877"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:40:23.880" level="INFO">Running command 'rm -f /tmp/tempkey-54854 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:40:23.891" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:40:23.892" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240102 11:40:23.878" endtime="20240102 11:40:23.892"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:40:23.892" level="INFO"/>
<status status="PASS" starttime="20240102 11:40:23.892" endtime="20240102 11:40:23.892"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:40:23.893" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:40:23.892" endtime="20240102 11:40:23.893"/>
</kw>
<status status="PASS" starttime="20240102 11:40:23.878" endtime="20240102 11:40:23.893"/>
</kw>
<msg timestamp="20240102 11:40:23.893" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:40:23.878" endtime="20240102 11:40:23.893"/>
</kw>
<status status="PASS" starttime="20240102 11:40:23.877" endtime="20240102 11:40:23.893"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20240102 11:40:23.894" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20240102 11:40:23.893" endtime="20240102 11:40:23.894"/>
</kw>
<msg timestamp="20240102 11:40:23.894" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20240102 11:40:17.576" endtime="20240102 11:40:23.894"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${matches}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20240102 11:40:23.894" endtime="20240102 11:40:23.894"/>
</kw>
<status status="PASS" starttime="20240102 11:40:17.575" endtime="20240102 11:40:23.894"/>
</kw>
<kw name="Verify Key EC Replication Config" library="shell">
<arg>${key}</arg>
<arg>RS</arg>
<arg>3</arg>
<arg>2</arg>
<arg>1048576</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${key} | jq -r '.replicationConfig.replicationType, .replicationConfig.codec, .replicationConfig.data, .replicationConfig.parity, .replicationConfig.ecChunkSize'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:40:23.897" level="INFO">Running command 'ozone sh key info /vol3308/ecbucket/dir/100mb | jq -r '.replicationConfig.replicationType, .replicationConfig.codec, .replicationConfig.data, .replicationConfig.parity, .replicationConfig.ecChunkSize' 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:40:27.417" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:40:27.417" level="INFO">${output} = EC
RS
3
2
1048576</msg>
<status status="PASS" starttime="20240102 11:40:23.896" endtime="20240102 11:40:27.417"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:40:27.418" level="INFO">EC
RS
3
2
1048576</msg>
<status status="PASS" starttime="20240102 11:40:27.417" endtime="20240102 11:40:27.418"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:40:27.418" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:40:27.418" endtime="20240102 11:40:27.418"/>
</kw>
<status status="PASS" starttime="20240102 11:40:23.895" endtime="20240102 11:40:27.418"/>
</kw>
<msg timestamp="20240102 11:40:27.419" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:40:23.895" endtime="20240102 11:40:27.419"/>
</kw>
<msg timestamp="20240102 11:40:27.419" level="INFO">${result} = EC
RS
3
2
1048576</msg>
<status status="PASS" starttime="20240102 11:40:23.895" endtime="20240102 11:40:27.419"/>
</kw>
<kw name="Verify EC Replication Config" library="shell">
<arg>${result}</arg>
<arg>${encoding}</arg>
<arg>${data}</arg>
<arg>${parity}</arg>
<arg>${chunksize}</arg>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)EC$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20240102 11:40:27.420" endtime="20240102 11:40:27.420"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${encoding}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20240102 11:40:27.420" endtime="20240102 11:40:27.420"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${data}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20240102 11:40:27.420" endtime="20240102 11:40:27.421"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${parity}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20240102 11:40:27.421" endtime="20240102 11:40:27.421"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${chunksize}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20240102 11:40:27.421" endtime="20240102 11:40:27.421"/>
</kw>
<status status="PASS" starttime="20240102 11:40:27.419" endtime="20240102 11:40:27.422"/>
</kw>
<status status="PASS" starttime="20240102 11:40:23.894" endtime="20240102 11:40:27.422"/>
</kw>
<kw name="Verify Key EC Replication Config" library="shell">
<arg>${dir}</arg>
<arg>RS</arg>
<arg>3</arg>
<arg>2</arg>
<arg>1048576</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${key} | jq -r '.replicationConfig.replicationType, .replicationConfig.codec, .replicationConfig.data, .replicationConfig.parity, .replicationConfig.ecChunkSize'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:40:27.425" level="INFO">Running command 'ozone sh key info /vol3308/ecbucket/dir | jq -r '.replicationConfig.replicationType, .replicationConfig.codec, .replicationConfig.data, .replicationConfig.parity, .replicationConfig.ecChunkSize' 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:40:30.869" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:40:30.869" level="INFO">${output} = EC
RS
3
2
1048576</msg>
<status status="PASS" starttime="20240102 11:40:27.423" endtime="20240102 11:40:30.869"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:40:30.870" level="INFO">EC
RS
3
2
1048576</msg>
<status status="PASS" starttime="20240102 11:40:30.869" endtime="20240102 11:40:30.870"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:40:30.870" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:40:30.870" endtime="20240102 11:40:30.870"/>
</kw>
<status status="PASS" starttime="20240102 11:40:27.423" endtime="20240102 11:40:30.871"/>
</kw>
<msg timestamp="20240102 11:40:30.871" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:40:27.423" endtime="20240102 11:40:30.871"/>
</kw>
<msg timestamp="20240102 11:40:30.871" level="INFO">${result} = EC
RS
3
2
1048576</msg>
<status status="PASS" starttime="20240102 11:40:27.422" endtime="20240102 11:40:30.871"/>
</kw>
<kw name="Verify EC Replication Config" library="shell">
<arg>${result}</arg>
<arg>${encoding}</arg>
<arg>${data}</arg>
<arg>${parity}</arg>
<arg>${chunksize}</arg>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)EC$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20240102 11:40:30.872" endtime="20240102 11:40:30.873"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${encoding}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20240102 11:40:30.873" endtime="20240102 11:40:30.873"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${data}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20240102 11:40:30.874" endtime="20240102 11:40:30.874"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${parity}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20240102 11:40:30.874" endtime="20240102 11:40:30.875"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${chunksize}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20240102 11:40:30.875" endtime="20240102 11:40:30.875"/>
</kw>
<status status="PASS" starttime="20240102 11:40:30.871" endtime="20240102 11:40:30.875"/>
</kw>
<status status="PASS" starttime="20240102 11:40:27.422" endtime="20240102 11:40:30.875"/>
</kw>
<status status="PASS" starttime="20240102 11:40:09.955" endtime="20240102 11:40:30.876"/>
</kw>
<status status="PASS" starttime="20240102 11:40:09.955" endtime="20240102 11:40:30.876"/>
</test>
<test id="s1-s2-t6" name="Create Key in Default Bucket" line="87">
<kw name="Set Variable" library="BuiltIn">
<var>${size}</var>
<arg>1mb</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240102 11:40:30.877" level="INFO">${size} = 1mb</msg>
<status status="PASS" starttime="20240102 11:40:30.877" endtime="20240102 11:40:30.877"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${dir}</var>
<arg>/${VOLUME}/default/dir</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240102 11:40:30.878" level="INFO">${dir} = /vol3308/default/dir</msg>
<status status="PASS" starttime="20240102 11:40:30.878" endtime="20240102 11:40:30.878"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>${dir}/${size}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240102 11:40:30.878" level="INFO">${key} = /vol3308/default/dir/1mb</msg>
<status status="PASS" starttime="20240102 11:40:30.878" endtime="20240102 11:40:30.878"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${file}</var>
<arg>/tmp/${size}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240102 11:40:30.879" level="INFO">${file} = /tmp/1mb</msg>
<status status="PASS" starttime="20240102 11:40:30.879" endtime="20240102 11:40:30.879"/>
</kw>
<kw name="Create Key" library="shell">
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put ${args} ${key} ${file}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:40:30.884" level="INFO">Running command 'ozone sh key put  /vol3308/default/dir/1mb /tmp/1mb 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:40:35.954" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:40:35.954" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240102 11:40:30.882" endtime="20240102 11:40:35.954"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:40:35.955" level="INFO"/>
<status status="PASS" starttime="20240102 11:40:35.954" endtime="20240102 11:40:35.955"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:40:35.955" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:40:35.955" endtime="20240102 11:40:35.955"/>
</kw>
<status status="PASS" starttime="20240102 11:40:30.882" endtime="20240102 11:40:35.955"/>
</kw>
<msg timestamp="20240102 11:40:35.955" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:40:30.881" endtime="20240102 11:40:35.956"/>
</kw>
<msg timestamp="20240102 11:40:35.956" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240102 11:40:30.881" endtime="20240102 11:40:35.956"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:40:35.956" endtime="20240102 11:40:35.956"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Uploaded ${file} to ${key}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:40:35.956" level="INFO">Uploaded /tmp/1mb to /vol3308/default/dir/1mb</msg>
<status status="PASS" starttime="20240102 11:40:35.956" endtime="20240102 11:40:35.956"/>
</kw>
<status status="PASS" starttime="20240102 11:40:30.879" endtime="20240102 11:40:35.957"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20240102 11:40:35.958" level="INFO">${postfix} = 64180</msg>
<status status="PASS" starttime="20240102 11:40:35.958" endtime="20240102 11:40:35.958"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240102 11:40:35.958" level="INFO">${tmpfile} = /tmp/tempkey-64180</msg>
<status status="PASS" starttime="20240102 11:40:35.958" endtime="20240102 11:40:35.958"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:40:35.961" level="INFO">Running command 'ozone sh key get /vol3308/default/dir/1mb /tmp/tempkey-64180 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:40:40.547" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:40:40.547" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240102 11:40:35.959" endtime="20240102 11:40:40.547"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:40:40.548" level="INFO"/>
<status status="PASS" starttime="20240102 11:40:40.547" endtime="20240102 11:40:40.548"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:40:40.549" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:40:40.548" endtime="20240102 11:40:40.549"/>
</kw>
<status status="PASS" starttime="20240102 11:40:35.959" endtime="20240102 11:40:40.549"/>
</kw>
<msg timestamp="20240102 11:40:40.549" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:40:35.959" endtime="20240102 11:40:40.549"/>
</kw>
<status status="PASS" starttime="20240102 11:40:35.958" endtime="20240102 11:40:40.549"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20240102 11:40:40.552" level="INFO">Running command 'diff -q /tmp/1mb /tmp/tempkey-64180 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:40:40.554" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20240102 11:40:40.550" endtime="20240102 11:40:40.554"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:40:40.558" level="INFO">Running command 'rm -f /tmp/tempkey-64180 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:40:40.560" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:40:40.560" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240102 11:40:40.556" endtime="20240102 11:40:40.560"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:40:40.561" level="INFO"/>
<status status="PASS" starttime="20240102 11:40:40.560" endtime="20240102 11:40:40.561"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:40:40.561" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:40:40.561" endtime="20240102 11:40:40.561"/>
</kw>
<status status="PASS" starttime="20240102 11:40:40.556" endtime="20240102 11:40:40.561"/>
</kw>
<msg timestamp="20240102 11:40:40.561" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:40:40.555" endtime="20240102 11:40:40.562"/>
</kw>
<status status="PASS" starttime="20240102 11:40:40.555" endtime="20240102 11:40:40.562"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20240102 11:40:40.562" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20240102 11:40:40.562" endtime="20240102 11:40:40.562"/>
</kw>
<msg timestamp="20240102 11:40:40.562" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20240102 11:40:35.957" endtime="20240102 11:40:40.562"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${matches}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20240102 11:40:40.563" endtime="20240102 11:40:40.563"/>
</kw>
<status status="PASS" starttime="20240102 11:40:35.957" endtime="20240102 11:40:40.563"/>
</kw>
<kw name="Verify Key Replica Replication Config" library="shell">
<arg>${key}</arg>
<arg>RATIS</arg>
<arg>THREE</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${key} | jq -r '.replicationConfig.replicationType, .replicationConfig.replicationFactor'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:40:40.565" level="INFO">Running command 'ozone sh key info /vol3308/default/dir/1mb | jq -r '.replicationConfig.replicationType, .replicationConfig.replicationFactor' 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:40:44.123" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:40:44.123" level="INFO">${output} = RATIS
THREE</msg>
<status status="PASS" starttime="20240102 11:40:40.564" endtime="20240102 11:40:44.123"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:40:44.123" level="INFO">RATIS
THREE</msg>
<status status="PASS" starttime="20240102 11:40:44.123" endtime="20240102 11:40:44.124"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:40:44.124" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:40:44.124" endtime="20240102 11:40:44.124"/>
</kw>
<status status="PASS" starttime="20240102 11:40:40.564" endtime="20240102 11:40:44.124"/>
</kw>
<msg timestamp="20240102 11:40:44.124" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:40:40.564" endtime="20240102 11:40:44.124"/>
</kw>
<msg timestamp="20240102 11:40:44.124" level="INFO">${result} = RATIS
THREE</msg>
<status status="PASS" starttime="20240102 11:40:40.563" endtime="20240102 11:40:44.125"/>
</kw>
<kw name="Verify Replica Replication Config" library="shell">
<arg>${result}</arg>
<arg>${type}</arg>
<arg>${factor}</arg>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${type}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20240102 11:40:44.125" endtime="20240102 11:40:44.125"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${factor}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20240102 11:40:44.126" endtime="20240102 11:40:44.126"/>
</kw>
<status status="PASS" starttime="20240102 11:40:44.125" endtime="20240102 11:40:44.126"/>
</kw>
<status status="PASS" starttime="20240102 11:40:40.563" endtime="20240102 11:40:44.126"/>
</kw>
<kw name="Verify Key Replica Replication Config" library="shell">
<arg>${dir}</arg>
<arg>RATIS</arg>
<arg>THREE</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${key} | jq -r '.replicationConfig.replicationType, .replicationConfig.replicationFactor'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:40:44.129" level="INFO">Running command 'ozone sh key info /vol3308/default/dir | jq -r '.replicationConfig.replicationType, .replicationConfig.replicationFactor' 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:40:47.385" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:40:47.385" level="INFO">${output} = RATIS
THREE</msg>
<status status="PASS" starttime="20240102 11:40:44.127" endtime="20240102 11:40:47.385"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:40:47.386" level="INFO">RATIS
THREE</msg>
<status status="PASS" starttime="20240102 11:40:47.385" endtime="20240102 11:40:47.386"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:40:47.386" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:40:47.386" endtime="20240102 11:40:47.386"/>
</kw>
<status status="PASS" starttime="20240102 11:40:44.127" endtime="20240102 11:40:47.386"/>
</kw>
<msg timestamp="20240102 11:40:47.386" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:40:44.127" endtime="20240102 11:40:47.387"/>
</kw>
<msg timestamp="20240102 11:40:47.387" level="INFO">${result} = RATIS
THREE</msg>
<status status="PASS" starttime="20240102 11:40:44.127" endtime="20240102 11:40:47.387"/>
</kw>
<kw name="Verify Replica Replication Config" library="shell">
<arg>${result}</arg>
<arg>${type}</arg>
<arg>${factor}</arg>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${type}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20240102 11:40:47.387" endtime="20240102 11:40:47.388"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${factor}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20240102 11:40:47.388" endtime="20240102 11:40:47.389"/>
</kw>
<status status="PASS" starttime="20240102 11:40:47.387" endtime="20240102 11:40:47.389"/>
</kw>
<status status="PASS" starttime="20240102 11:40:44.126" endtime="20240102 11:40:47.389"/>
</kw>
<status status="PASS" starttime="20240102 11:40:30.876" endtime="20240102 11:40:47.389"/>
</test>
<test id="s1-s2-t7" name="Create Key in Ratis Bucket" line="97">
<kw name="Set Variable" library="BuiltIn">
<var>${size}</var>
<arg>1mb</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240102 11:40:47.390" level="INFO">${size} = 1mb</msg>
<status status="PASS" starttime="20240102 11:40:47.390" endtime="20240102 11:40:47.390"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${dir}</var>
<arg>/${VOLUME}/ratis/dir</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240102 11:40:47.391" level="INFO">${dir} = /vol3308/ratis/dir</msg>
<status status="PASS" starttime="20240102 11:40:47.390" endtime="20240102 11:40:47.391"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>${dir}/${size}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240102 11:40:47.391" level="INFO">${key} = /vol3308/ratis/dir/1mb</msg>
<status status="PASS" starttime="20240102 11:40:47.391" endtime="20240102 11:40:47.391"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${file}</var>
<arg>/tmp/${size}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240102 11:40:47.392" level="INFO">${file} = /tmp/1mb</msg>
<status status="PASS" starttime="20240102 11:40:47.391" endtime="20240102 11:40:47.392"/>
</kw>
<kw name="Create Key" library="shell">
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put ${args} ${key} ${file}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:40:47.395" level="INFO">Running command 'ozone sh key put  /vol3308/ratis/dir/1mb /tmp/1mb 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:40:52.397" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:40:52.397" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240102 11:40:47.394" endtime="20240102 11:40:52.397"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:40:52.398" level="INFO"/>
<status status="PASS" starttime="20240102 11:40:52.398" endtime="20240102 11:40:52.398"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:40:52.399" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:40:52.398" endtime="20240102 11:40:52.399"/>
</kw>
<status status="PASS" starttime="20240102 11:40:47.393" endtime="20240102 11:40:52.399"/>
</kw>
<msg timestamp="20240102 11:40:52.399" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:40:47.393" endtime="20240102 11:40:52.399"/>
</kw>
<msg timestamp="20240102 11:40:52.399" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240102 11:40:47.393" endtime="20240102 11:40:52.399"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:40:52.399" endtime="20240102 11:40:52.400"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Uploaded ${file} to ${key}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:40:52.400" level="INFO">Uploaded /tmp/1mb to /vol3308/ratis/dir/1mb</msg>
<status status="PASS" starttime="20240102 11:40:52.400" endtime="20240102 11:40:52.400"/>
</kw>
<status status="PASS" starttime="20240102 11:40:47.392" endtime="20240102 11:40:52.400"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20240102 11:40:52.401" level="INFO">${postfix} = 53502</msg>
<status status="PASS" starttime="20240102 11:40:52.401" endtime="20240102 11:40:52.401"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240102 11:40:52.402" level="INFO">${tmpfile} = /tmp/tempkey-53502</msg>
<status status="PASS" starttime="20240102 11:40:52.401" endtime="20240102 11:40:52.402"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:40:52.404" level="INFO">Running command 'ozone sh key get /vol3308/ratis/dir/1mb /tmp/tempkey-53502 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:40:57.092" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:40:57.092" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240102 11:40:52.403" endtime="20240102 11:40:57.092"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:40:57.093" level="INFO"/>
<status status="PASS" starttime="20240102 11:40:57.093" endtime="20240102 11:40:57.093"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:40:57.094" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:40:57.093" endtime="20240102 11:40:57.094"/>
</kw>
<status status="PASS" starttime="20240102 11:40:52.402" endtime="20240102 11:40:57.094"/>
</kw>
<msg timestamp="20240102 11:40:57.094" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:40:52.402" endtime="20240102 11:40:57.094"/>
</kw>
<status status="PASS" starttime="20240102 11:40:52.402" endtime="20240102 11:40:57.094"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20240102 11:40:57.096" level="INFO">Running command 'diff -q /tmp/1mb /tmp/tempkey-53502 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:40:57.097" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20240102 11:40:57.094" endtime="20240102 11:40:57.097"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:40:57.110" level="INFO">Running command 'rm -f /tmp/tempkey-53502 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:40:57.111" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:40:57.111" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240102 11:40:57.108" endtime="20240102 11:40:57.111"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:40:57.112" level="INFO"/>
<status status="PASS" starttime="20240102 11:40:57.112" endtime="20240102 11:40:57.112"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:40:57.112" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:40:57.112" endtime="20240102 11:40:57.113"/>
</kw>
<status status="PASS" starttime="20240102 11:40:57.099" endtime="20240102 11:40:57.113"/>
</kw>
<msg timestamp="20240102 11:40:57.113" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:40:57.098" endtime="20240102 11:40:57.113"/>
</kw>
<status status="PASS" starttime="20240102 11:40:57.098" endtime="20240102 11:40:57.113"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20240102 11:40:57.113" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20240102 11:40:57.113" endtime="20240102 11:40:57.113"/>
</kw>
<msg timestamp="20240102 11:40:57.114" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20240102 11:40:52.401" endtime="20240102 11:40:57.114"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${matches}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20240102 11:40:57.114" endtime="20240102 11:40:57.114"/>
</kw>
<status status="PASS" starttime="20240102 11:40:52.400" endtime="20240102 11:40:57.114"/>
</kw>
<kw name="Verify Key Replica Replication Config" library="shell">
<arg>${key}</arg>
<arg>RATIS</arg>
<arg>THREE</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${key} | jq -r '.replicationConfig.replicationType, .replicationConfig.replicationFactor'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:40:57.117" level="INFO">Running command 'ozone sh key info /vol3308/ratis/dir/1mb | jq -r '.replicationConfig.replicationType, .replicationConfig.replicationFactor' 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:41:00.334" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:41:00.334" level="INFO">${output} = RATIS
THREE</msg>
<status status="PASS" starttime="20240102 11:40:57.116" endtime="20240102 11:41:00.334"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:41:00.335" level="INFO">RATIS
THREE</msg>
<status status="PASS" starttime="20240102 11:41:00.335" endtime="20240102 11:41:00.336"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:41:00.336" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:41:00.336" endtime="20240102 11:41:00.336"/>
</kw>
<status status="PASS" starttime="20240102 11:40:57.115" endtime="20240102 11:41:00.336"/>
</kw>
<msg timestamp="20240102 11:41:00.336" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:40:57.115" endtime="20240102 11:41:00.337"/>
</kw>
<msg timestamp="20240102 11:41:00.337" level="INFO">${result} = RATIS
THREE</msg>
<status status="PASS" starttime="20240102 11:40:57.115" endtime="20240102 11:41:00.337"/>
</kw>
<kw name="Verify Replica Replication Config" library="shell">
<arg>${result}</arg>
<arg>${type}</arg>
<arg>${factor}</arg>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${type}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20240102 11:41:00.337" endtime="20240102 11:41:00.338"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${factor}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20240102 11:41:00.338" endtime="20240102 11:41:00.338"/>
</kw>
<status status="PASS" starttime="20240102 11:41:00.337" endtime="20240102 11:41:00.338"/>
</kw>
<status status="PASS" starttime="20240102 11:40:57.114" endtime="20240102 11:41:00.338"/>
</kw>
<kw name="Verify Key Replica Replication Config" library="shell">
<arg>${dir}</arg>
<arg>RATIS</arg>
<arg>THREE</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${key} | jq -r '.replicationConfig.replicationType, .replicationConfig.replicationFactor'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:41:00.341" level="INFO">Running command 'ozone sh key info /vol3308/ratis/dir | jq -r '.replicationConfig.replicationType, .replicationConfig.replicationFactor' 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:41:03.697" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:41:03.697" level="INFO">${output} = RATIS
THREE</msg>
<status status="PASS" starttime="20240102 11:41:00.340" endtime="20240102 11:41:03.697"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:41:03.698" level="INFO">RATIS
THREE</msg>
<status status="PASS" starttime="20240102 11:41:03.697" endtime="20240102 11:41:03.698"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:41:03.698" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:41:03.698" endtime="20240102 11:41:03.698"/>
</kw>
<status status="PASS" starttime="20240102 11:41:00.339" endtime="20240102 11:41:03.698"/>
</kw>
<msg timestamp="20240102 11:41:03.698" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:41:00.339" endtime="20240102 11:41:03.699"/>
</kw>
<msg timestamp="20240102 11:41:03.699" level="INFO">${result} = RATIS
THREE</msg>
<status status="PASS" starttime="20240102 11:41:00.339" endtime="20240102 11:41:03.699"/>
</kw>
<kw name="Verify Replica Replication Config" library="shell">
<arg>${result}</arg>
<arg>${type}</arg>
<arg>${factor}</arg>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${type}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20240102 11:41:03.699" endtime="20240102 11:41:03.700"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${factor}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20240102 11:41:03.700" endtime="20240102 11:41:03.700"/>
</kw>
<status status="PASS" starttime="20240102 11:41:03.699" endtime="20240102 11:41:03.700"/>
</kw>
<status status="PASS" starttime="20240102 11:41:00.338" endtime="20240102 11:41:03.700"/>
</kw>
<status status="PASS" starttime="20240102 11:40:47.390" endtime="20240102 11:41:03.700"/>
</test>
<test id="s1-s2-t8" name="Create Ratis Key In EC Bucket" line="107">
<kw name="Set Variable" library="BuiltIn">
<var>${size}</var>
<arg>1mb</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240102 11:41:03.701" level="INFO">${size} = 1mb</msg>
<status status="PASS" starttime="20240102 11:41:03.701" endtime="20240102 11:41:03.701"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${dir}</var>
<arg>/${VOLUME}/ecbucket/dir2</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240102 11:41:03.702" level="INFO">${dir} = /vol3308/ecbucket/dir2</msg>
<status status="PASS" starttime="20240102 11:41:03.701" endtime="20240102 11:41:03.702"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>${dir}/${size}Ratis</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240102 11:41:03.702" level="INFO">${key} = /vol3308/ecbucket/dir2/1mbRatis</msg>
<status status="PASS" starttime="20240102 11:41:03.702" endtime="20240102 11:41:03.702"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${file}</var>
<arg>/tmp/${size}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240102 11:41:03.703" level="INFO">${file} = /tmp/1mb</msg>
<status status="PASS" starttime="20240102 11:41:03.702" endtime="20240102 11:41:03.703"/>
</kw>
<kw name="Create Key" library="shell">
<arg>${key}</arg>
<arg>${file}</arg>
<arg>--replication=THREE --type=RATIS</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put ${args} ${key} ${file}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:41:03.706" level="INFO">Running command 'ozone sh key put --replication=THREE --type=RATIS /vol3308/ecbucket/dir2/1mbRatis /tmp/1mb 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:41:08.639" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:41:08.639" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240102 11:41:03.704" endtime="20240102 11:41:08.639"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:41:08.640" level="INFO"/>
<status status="PASS" starttime="20240102 11:41:08.639" endtime="20240102 11:41:08.640"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:41:08.640" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:41:08.640" endtime="20240102 11:41:08.640"/>
</kw>
<status status="PASS" starttime="20240102 11:41:03.704" endtime="20240102 11:41:08.640"/>
</kw>
<msg timestamp="20240102 11:41:08.641" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:41:03.704" endtime="20240102 11:41:08.641"/>
</kw>
<msg timestamp="20240102 11:41:08.641" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240102 11:41:03.703" endtime="20240102 11:41:08.641"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:41:08.641" endtime="20240102 11:41:08.641"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Uploaded ${file} to ${key}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:41:08.641" level="INFO">Uploaded /tmp/1mb to /vol3308/ecbucket/dir2/1mbRatis</msg>
<status status="PASS" starttime="20240102 11:41:08.641" endtime="20240102 11:41:08.642"/>
</kw>
<status status="PASS" starttime="20240102 11:41:03.703" endtime="20240102 11:41:08.642"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20240102 11:41:08.643" level="INFO">${postfix} = 34966</msg>
<status status="PASS" starttime="20240102 11:41:08.643" endtime="20240102 11:41:08.643"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240102 11:41:08.643" level="INFO">${tmpfile} = /tmp/tempkey-34966</msg>
<status status="PASS" starttime="20240102 11:41:08.643" endtime="20240102 11:41:08.643"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:41:08.646" level="INFO">Running command 'ozone sh key get /vol3308/ecbucket/dir2/1mbRatis /tmp/tempkey-34966 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:41:13.541" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:41:13.541" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240102 11:41:08.644" endtime="20240102 11:41:13.541"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:41:13.542" level="INFO"/>
<status status="PASS" starttime="20240102 11:41:13.542" endtime="20240102 11:41:13.542"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:41:13.543" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:41:13.542" endtime="20240102 11:41:13.543"/>
</kw>
<status status="PASS" starttime="20240102 11:41:08.644" endtime="20240102 11:41:13.543"/>
</kw>
<msg timestamp="20240102 11:41:13.543" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:41:08.644" endtime="20240102 11:41:13.543"/>
</kw>
<status status="PASS" starttime="20240102 11:41:08.643" endtime="20240102 11:41:13.543"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20240102 11:41:13.545" level="INFO">Running command 'diff -q /tmp/1mb /tmp/tempkey-34966 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:41:13.547" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20240102 11:41:13.543" endtime="20240102 11:41:13.547"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:41:13.549" level="INFO">Running command 'rm -f /tmp/tempkey-34966 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:41:13.551" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:41:13.551" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240102 11:41:13.548" endtime="20240102 11:41:13.551"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:41:13.552" level="INFO"/>
<status status="PASS" starttime="20240102 11:41:13.551" endtime="20240102 11:41:13.552"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:41:13.552" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:41:13.552" endtime="20240102 11:41:13.552"/>
</kw>
<status status="PASS" starttime="20240102 11:41:13.548" endtime="20240102 11:41:13.552"/>
</kw>
<msg timestamp="20240102 11:41:13.552" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:41:13.548" endtime="20240102 11:41:13.552"/>
</kw>
<status status="PASS" starttime="20240102 11:41:13.547" endtime="20240102 11:41:13.552"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20240102 11:41:13.553" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20240102 11:41:13.553" endtime="20240102 11:41:13.553"/>
</kw>
<msg timestamp="20240102 11:41:13.553" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20240102 11:41:08.642" endtime="20240102 11:41:13.553"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${matches}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20240102 11:41:13.553" endtime="20240102 11:41:13.553"/>
</kw>
<status status="PASS" starttime="20240102 11:41:08.642" endtime="20240102 11:41:13.554"/>
</kw>
<kw name="Verify Key Replica Replication Config" library="shell">
<arg>${key}</arg>
<arg>RATIS</arg>
<arg>THREE</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${key} | jq -r '.replicationConfig.replicationType, .replicationConfig.replicationFactor'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:41:13.556" level="INFO">Running command 'ozone sh key info /vol3308/ecbucket/dir2/1mbRatis | jq -r '.replicationConfig.replicationType, .replicationConfig.replicationFactor' 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:41:16.969" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:41:16.969" level="INFO">${output} = RATIS
THREE</msg>
<status status="PASS" starttime="20240102 11:41:13.555" endtime="20240102 11:41:16.969"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:41:16.970" level="INFO">RATIS
THREE</msg>
<status status="PASS" starttime="20240102 11:41:16.970" endtime="20240102 11:41:16.970"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:41:16.970" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:41:16.970" endtime="20240102 11:41:16.970"/>
</kw>
<status status="PASS" starttime="20240102 11:41:13.555" endtime="20240102 11:41:16.971"/>
</kw>
<msg timestamp="20240102 11:41:16.971" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:41:13.554" endtime="20240102 11:41:16.971"/>
</kw>
<msg timestamp="20240102 11:41:16.971" level="INFO">${result} = RATIS
THREE</msg>
<status status="PASS" starttime="20240102 11:41:13.554" endtime="20240102 11:41:16.971"/>
</kw>
<kw name="Verify Replica Replication Config" library="shell">
<arg>${result}</arg>
<arg>${type}</arg>
<arg>${factor}</arg>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${type}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20240102 11:41:16.972" endtime="20240102 11:41:16.972"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${factor}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20240102 11:41:16.972" endtime="20240102 11:41:16.972"/>
</kw>
<status status="PASS" starttime="20240102 11:41:16.971" endtime="20240102 11:41:16.972"/>
</kw>
<status status="PASS" starttime="20240102 11:41:13.554" endtime="20240102 11:41:16.972"/>
</kw>
<kw name="Verify Key EC Replication Config" library="shell">
<arg>${dir}</arg>
<arg>RS</arg>
<arg>3</arg>
<arg>2</arg>
<arg>1048576</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${key} | jq -r '.replicationConfig.replicationType, .replicationConfig.codec, .replicationConfig.data, .replicationConfig.parity, .replicationConfig.ecChunkSize'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:41:16.975" level="INFO">Running command 'ozone sh key info /vol3308/ecbucket/dir2 | jq -r '.replicationConfig.replicationType, .replicationConfig.codec, .replicationConfig.data, .replicationConfig.parity, .replicationConfig.ecChunkSize' 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:41:20.325" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:41:20.325" level="INFO">${output} = EC
RS
3
2
1048576</msg>
<status status="PASS" starttime="20240102 11:41:16.974" endtime="20240102 11:41:20.326"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:41:20.326" level="INFO">EC
RS
3
2
1048576</msg>
<status status="PASS" starttime="20240102 11:41:20.326" endtime="20240102 11:41:20.326"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:41:20.327" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:41:20.326" endtime="20240102 11:41:20.327"/>
</kw>
<status status="PASS" starttime="20240102 11:41:16.973" endtime="20240102 11:41:20.327"/>
</kw>
<msg timestamp="20240102 11:41:20.327" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:41:16.973" endtime="20240102 11:41:20.327"/>
</kw>
<msg timestamp="20240102 11:41:20.327" level="INFO">${result} = EC
RS
3
2
1048576</msg>
<status status="PASS" starttime="20240102 11:41:16.973" endtime="20240102 11:41:20.327"/>
</kw>
<kw name="Verify EC Replication Config" library="shell">
<arg>${result}</arg>
<arg>${encoding}</arg>
<arg>${data}</arg>
<arg>${parity}</arg>
<arg>${chunksize}</arg>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)EC$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20240102 11:41:20.328" endtime="20240102 11:41:20.329"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${encoding}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20240102 11:41:20.329" endtime="20240102 11:41:20.329"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${data}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20240102 11:41:20.329" endtime="20240102 11:41:20.329"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${parity}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20240102 11:41:20.329" endtime="20240102 11:41:20.330"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${chunksize}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20240102 11:41:20.330" endtime="20240102 11:41:20.330"/>
</kw>
<status status="PASS" starttime="20240102 11:41:20.327" endtime="20240102 11:41:20.330"/>
</kw>
<status status="PASS" starttime="20240102 11:41:16.972" endtime="20240102 11:41:20.330"/>
</kw>
<status status="PASS" starttime="20240102 11:41:03.701" endtime="20240102 11:41:20.330"/>
</test>
<test id="s1-s2-t9" name="Create EC Key In Ratis Bucket" line="117">
<kw name="Set Variable" library="BuiltIn">
<var>${size}</var>
<arg>1mb</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240102 11:41:20.331" level="INFO">${size} = 1mb</msg>
<status status="PASS" starttime="20240102 11:41:20.331" endtime="20240102 11:41:20.331"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${dir}</var>
<arg>/${VOLUME}/ratis/dir2</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240102 11:41:20.332" level="INFO">${dir} = /vol3308/ratis/dir2</msg>
<status status="PASS" starttime="20240102 11:41:20.332" endtime="20240102 11:41:20.332"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>${dir}/${size}EC</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240102 11:41:20.332" level="INFO">${key} = /vol3308/ratis/dir2/1mbEC</msg>
<status status="PASS" starttime="20240102 11:41:20.332" endtime="20240102 11:41:20.332"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${file}</var>
<arg>/tmp/${size}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240102 11:41:20.333" level="INFO">${file} = /tmp/1mb</msg>
<status status="PASS" starttime="20240102 11:41:20.333" endtime="20240102 11:41:20.333"/>
</kw>
<kw name="Create Key" library="shell">
<arg>${key}</arg>
<arg>${file}</arg>
<arg>--replication=rs-3-2-1024k --type=EC</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put ${args} ${key} ${file}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:41:20.337" level="INFO">Running command 'ozone sh key put --replication=rs-3-2-1024k --type=EC /vol3308/ratis/dir2/1mbEC /tmp/1mb 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:41:25.196" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:41:25.196" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240102 11:41:20.335" endtime="20240102 11:41:25.196"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:41:25.197" level="INFO"/>
<status status="PASS" starttime="20240102 11:41:25.197" endtime="20240102 11:41:25.197"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:41:25.197" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:41:25.197" endtime="20240102 11:41:25.198"/>
</kw>
<status status="PASS" starttime="20240102 11:41:20.334" endtime="20240102 11:41:25.198"/>
</kw>
<msg timestamp="20240102 11:41:25.198" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:41:20.334" endtime="20240102 11:41:25.198"/>
</kw>
<msg timestamp="20240102 11:41:25.198" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240102 11:41:20.334" endtime="20240102 11:41:25.198"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:41:25.198" endtime="20240102 11:41:25.198"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Uploaded ${file} to ${key}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:41:25.199" level="INFO">Uploaded /tmp/1mb to /vol3308/ratis/dir2/1mbEC</msg>
<status status="PASS" starttime="20240102 11:41:25.198" endtime="20240102 11:41:25.199"/>
</kw>
<status status="PASS" starttime="20240102 11:41:20.333" endtime="20240102 11:41:25.199"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20240102 11:41:25.200" level="INFO">${postfix} = 59125</msg>
<status status="PASS" starttime="20240102 11:41:25.200" endtime="20240102 11:41:25.200"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240102 11:41:25.201" level="INFO">${tmpfile} = /tmp/tempkey-59125</msg>
<status status="PASS" starttime="20240102 11:41:25.200" endtime="20240102 11:41:25.201"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:41:25.203" level="INFO">Running command 'ozone sh key get /vol3308/ratis/dir2/1mbEC /tmp/tempkey-59125 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:41:29.938" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:41:29.938" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240102 11:41:25.202" endtime="20240102 11:41:29.938"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:41:29.939" level="INFO"/>
<status status="PASS" starttime="20240102 11:41:29.938" endtime="20240102 11:41:29.939"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:41:29.939" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:41:29.939" endtime="20240102 11:41:29.940"/>
</kw>
<status status="PASS" starttime="20240102 11:41:25.201" endtime="20240102 11:41:29.940"/>
</kw>
<msg timestamp="20240102 11:41:29.940" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:41:25.201" endtime="20240102 11:41:29.940"/>
</kw>
<status status="PASS" starttime="20240102 11:41:25.201" endtime="20240102 11:41:29.940"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20240102 11:41:29.941" level="INFO">Running command 'diff -q /tmp/1mb /tmp/tempkey-59125 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:41:29.943" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20240102 11:41:29.940" endtime="20240102 11:41:29.943"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:41:29.946" level="INFO">Running command 'rm -f /tmp/tempkey-59125 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:41:29.948" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:41:29.948" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240102 11:41:29.945" endtime="20240102 11:41:29.948"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:41:29.948" level="INFO"/>
<status status="PASS" starttime="20240102 11:41:29.948" endtime="20240102 11:41:29.948"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:41:29.949" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:41:29.948" endtime="20240102 11:41:29.949"/>
</kw>
<status status="PASS" starttime="20240102 11:41:29.944" endtime="20240102 11:41:29.949"/>
</kw>
<msg timestamp="20240102 11:41:29.949" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:41:29.944" endtime="20240102 11:41:29.949"/>
</kw>
<status status="PASS" starttime="20240102 11:41:29.944" endtime="20240102 11:41:29.949"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20240102 11:41:29.950" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20240102 11:41:29.949" endtime="20240102 11:41:29.950"/>
</kw>
<msg timestamp="20240102 11:41:29.950" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20240102 11:41:25.199" endtime="20240102 11:41:29.950"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${matches}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20240102 11:41:29.950" endtime="20240102 11:41:29.950"/>
</kw>
<status status="PASS" starttime="20240102 11:41:25.199" endtime="20240102 11:41:29.950"/>
</kw>
<kw name="Verify Key EC Replication Config" library="shell">
<arg>${key}</arg>
<arg>RS</arg>
<arg>3</arg>
<arg>2</arg>
<arg>1048576</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${key} | jq -r '.replicationConfig.replicationType, .replicationConfig.codec, .replicationConfig.data, .replicationConfig.parity, .replicationConfig.ecChunkSize'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:41:29.953" level="INFO">Running command 'ozone sh key info /vol3308/ratis/dir2/1mbEC | jq -r '.replicationConfig.replicationType, .replicationConfig.codec, .replicationConfig.data, .replicationConfig.parity, .replicationConfig.ecChunkSize' 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:41:33.230" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:41:33.231" level="INFO">${output} = EC
RS
3
2
1048576</msg>
<status status="PASS" starttime="20240102 11:41:29.952" endtime="20240102 11:41:33.231"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:41:33.231" level="INFO">EC
RS
3
2
1048576</msg>
<status status="PASS" starttime="20240102 11:41:33.231" endtime="20240102 11:41:33.232"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:41:33.232" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:41:33.232" endtime="20240102 11:41:33.232"/>
</kw>
<status status="PASS" starttime="20240102 11:41:29.951" endtime="20240102 11:41:33.232"/>
</kw>
<msg timestamp="20240102 11:41:33.232" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:41:29.951" endtime="20240102 11:41:33.232"/>
</kw>
<msg timestamp="20240102 11:41:33.233" level="INFO">${result} = EC
RS
3
2
1048576</msg>
<status status="PASS" starttime="20240102 11:41:29.951" endtime="20240102 11:41:33.233"/>
</kw>
<kw name="Verify EC Replication Config" library="shell">
<arg>${result}</arg>
<arg>${encoding}</arg>
<arg>${data}</arg>
<arg>${parity}</arg>
<arg>${chunksize}</arg>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)EC$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20240102 11:41:33.233" endtime="20240102 11:41:33.234"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${encoding}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20240102 11:41:33.234" endtime="20240102 11:41:33.234"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${data}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20240102 11:41:33.234" endtime="20240102 11:41:33.234"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${parity}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20240102 11:41:33.234" endtime="20240102 11:41:33.235"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${chunksize}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20240102 11:41:33.235" endtime="20240102 11:41:33.235"/>
</kw>
<status status="PASS" starttime="20240102 11:41:33.233" endtime="20240102 11:41:33.235"/>
</kw>
<status status="PASS" starttime="20240102 11:41:29.950" endtime="20240102 11:41:33.235"/>
</kw>
<kw name="Verify Key Replica Replication Config" library="shell">
<arg>${dir}</arg>
<arg>RATIS</arg>
<arg>THREE</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${key} | jq -r '.replicationConfig.replicationType, .replicationConfig.replicationFactor'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:41:33.238" level="INFO">Running command 'ozone sh key info /vol3308/ratis/dir2 | jq -r '.replicationConfig.replicationType, .replicationConfig.replicationFactor' 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:41:36.728" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:41:36.728" level="INFO">${output} = RATIS
THREE</msg>
<status status="PASS" starttime="20240102 11:41:33.237" endtime="20240102 11:41:36.728"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:41:36.729" level="INFO">RATIS
THREE</msg>
<status status="PASS" starttime="20240102 11:41:36.729" endtime="20240102 11:41:36.729"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:41:36.730" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:41:36.729" endtime="20240102 11:41:36.730"/>
</kw>
<status status="PASS" starttime="20240102 11:41:33.236" endtime="20240102 11:41:36.730"/>
</kw>
<msg timestamp="20240102 11:41:36.730" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:41:33.236" endtime="20240102 11:41:36.730"/>
</kw>
<msg timestamp="20240102 11:41:36.730" level="INFO">${result} = RATIS
THREE</msg>
<status status="PASS" starttime="20240102 11:41:33.236" endtime="20240102 11:41:36.730"/>
</kw>
<kw name="Verify Replica Replication Config" library="shell">
<arg>${result}</arg>
<arg>${type}</arg>
<arg>${factor}</arg>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${type}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20240102 11:41:36.731" endtime="20240102 11:41:36.731"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${factor}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20240102 11:41:36.731" endtime="20240102 11:41:36.732"/>
</kw>
<status status="PASS" starttime="20240102 11:41:36.730" endtime="20240102 11:41:36.732"/>
</kw>
<status status="PASS" starttime="20240102 11:41:33.235" endtime="20240102 11:41:36.732"/>
</kw>
<status status="PASS" starttime="20240102 11:41:20.331" endtime="20240102 11:41:36.732"/>
</test>
<test id="s1-s2-t10" name="Test Invalid Replication Parameters" line="127">
<kw name="Execute And Ignore Error" library="os">
<var>${message}</var>
<arg>ozone sh bucket create --replication=rs-3-2-1024k --type=RATIS /${VOLUME}/foo</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:41:36.735" level="INFO">Running command 'ozone sh bucket create --replication=rs-3-2-1024k --type=RATIS /vol3308/foo 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:41:39.689" level="INFO">${rc} = 255</msg>
<msg timestamp="20240102 11:41:39.689" level="INFO">${output} = rs-3-2-1024k is not supported for RATIS replication type</msg>
<status status="PASS" starttime="20240102 11:41:36.733" endtime="20240102 11:41:39.689"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:41:39.690" level="INFO">rs-3-2-1024k is not supported for RATIS replication type</msg>
<status status="PASS" starttime="20240102 11:41:39.690" endtime="20240102 11:41:39.691"/>
</kw>
<msg timestamp="20240102 11:41:39.691" level="INFO">${message} = rs-3-2-1024k is not supported for RATIS replication type</msg>
<status status="PASS" starttime="20240102 11:41:36.733" endtime="20240102 11:41:39.691"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${message}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:41:39.691" endtime="20240102 11:41:39.691"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${message}</arg>
<arg>rs-3-2-1024k</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:41:39.691" endtime="20240102 11:41:39.692"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${message}</arg>
<arg>not supported</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:41:39.692" endtime="20240102 11:41:39.692"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${message}</var>
<arg>ozone sh key put --replication=rs-6-3-1024k --type=RATIS /${VOLUME}/foo/bar /tmp/1mb</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:41:39.694" level="INFO">Running command 'ozone sh key put --replication=rs-6-3-1024k --type=RATIS /vol3308/foo/bar /tmp/1mb 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:41:42.821" level="INFO">${rc} = 255</msg>
<msg timestamp="20240102 11:41:42.821" level="INFO">${output} = rs-6-3-1024k is not supported for RATIS replication type</msg>
<status status="PASS" starttime="20240102 11:41:39.693" endtime="20240102 11:41:42.821"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:41:42.822" level="INFO">rs-6-3-1024k is not supported for RATIS replication type</msg>
<status status="PASS" starttime="20240102 11:41:42.821" endtime="20240102 11:41:42.822"/>
</kw>
<msg timestamp="20240102 11:41:42.822" level="INFO">${message} = rs-6-3-1024k is not supported for RATIS replication type</msg>
<status status="PASS" starttime="20240102 11:41:39.692" endtime="20240102 11:41:42.822"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${message}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:41:42.822" endtime="20240102 11:41:42.822"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${message}</arg>
<arg>rs-6-3-1024k</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:41:42.822" endtime="20240102 11:41:42.823"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${message}</arg>
<arg>not supported</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:41:42.823" endtime="20240102 11:41:42.823"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${message}</var>
<arg>ozone sh bucket create --replication=rs-6-3-1024k --type=STAND_ALONE /${VOLUME}/foo</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:41:42.825" level="INFO">Running command 'ozone sh bucket create --replication=rs-6-3-1024k --type=STAND_ALONE /vol3308/foo 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:41:44.780" level="INFO">${rc} = 2</msg>
<msg timestamp="20240102 11:41:44.780" level="INFO">${output} = Could not invoke public void org.apache.hadoop.ozone.shell.ShellReplicationOptions.setType(java.lang.String) with STAND_ALONE (java.lang.IllegalArgumentException: Invalid value 'STAND_ALONE' for optio...</msg>
<status status="PASS" starttime="20240102 11:41:42.824" endtime="20240102 11:41:44.780"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:41:44.781" level="INFO">Could not invoke public void org.apache.hadoop.ozone.shell.ShellReplicationOptions.setType(java.lang.String) with STAND_ALONE (java.lang.IllegalArgumentException: Invalid value 'STAND_ALONE' for option '--type'. Unsupported replication type STAND_ALONE. Supported values are: RATIS, EC.)
Usage: ozone sh bucket create [-ghV] [-k=&lt;bekName&gt;] [-l=&lt;allowedBucketLayout&gt;]
                              [--namespace-quota=&lt;quotaInNamespace&gt;]
                              [--quota=&lt;quotaInBytes&gt;] [-r=&lt;replication&gt;]
                              [-t=&lt;type&gt;] [-u=&lt;ownerName&gt;] &lt;value&gt;
creates a bucket in a given volume
      &lt;value&gt;              URI of the volume/bucket.
                           Ozone URI could either be a full URI or short URI.
                           Full URI should start with o3://, in case of non-HA
                           clusters it should be followed by the host name and
                           optionally the port number. In case of HA clusters
                           the service id should be used. Service id provides a
                           logical name for multiple hosts and it is defined
                           in the property ozone.om.service.ids.
                           Example of a full URI with host name and port number
                           for a key:
                           o3://omhostname:9862/vol1/bucket1/key1
                           With a service id for a volume:
                           o3://omserviceid/vol1/
                           Short URI should start from the volume.
                           Example of a short URI for a bucket:
                           vol1/bucket1
                           Any unspecified information will be identified from
                           the config files.

  -g, --enforcegdpr        if true, indicates GDPR enforced bucket,
                             false/unspecified indicates otherwise
  -h, --help               Show this help message and exit.
  -k, --bucketkey=&lt;bekName&gt;
                           bucket encryption key name
  -l, --layout=&lt;allowedBucketLayout&gt;
                           Allowed Bucket Layouts: FILE_SYSTEM_OPTIMIZED,
                             OBJECT_STORE, LEGACY
      --namespace-quota=&lt;quotaInNamespace&gt;
                           For volume this parameter represents the number of
                             buckets, and for buckets represents the number of
                             keys (eg. 5)
      --quota, --space-quota=&lt;quotaInBytes&gt;
                           The maximum space quota can be used (eg. 1GB)
  -r, --replication=&lt;replication&gt;
                           Replication definition. Valid values are replication
                             type-specific.  For RATIS: ONE or THREE. In case
                             of EC, pass CODEC-DATA-PARITY-CHUNKSIZE,  e.g.
                             rs-3-2-1024k, rs-6-3-1024k, rs-10-4-1024k
  -t, --type, --replication-type=&lt;type&gt;
                           Replication type. Supported types are: RATIS, EC
  -u, --user=&lt;ownerName&gt;   Owner of the bucket. Defaults to current user if not
                             specified
  -V, --version            Print version information and exit.</msg>
<status status="PASS" starttime="20240102 11:41:44.780" endtime="20240102 11:41:44.781"/>
</kw>
<msg timestamp="20240102 11:41:44.781" level="INFO">${message} = Could not invoke public void org.apache.hadoop.ozone.shell.ShellReplicationOptions.setType(java.lang.String) with STAND_ALONE (java.lang.IllegalArgumentException: Invalid value 'STAND_ALONE' for optio...</msg>
<status status="PASS" starttime="20240102 11:41:42.823" endtime="20240102 11:41:44.781"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${message}</arg>
<arg>STAND_ALONE</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:41:44.781" endtime="20240102 11:41:44.781"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${message}</arg>
<arg>Invalid value</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:41:44.781" endtime="20240102 11:41:44.781"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${message}</var>
<arg>ozone sh key put --replication=rs-3-2-1024k --type=STAND_ALONE /${VOLUME}/foo/bar /tmp/1mb</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:41:44.783" level="INFO">Running command 'ozone sh key put --replication=rs-3-2-1024k --type=STAND_ALONE /vol3308/foo/bar /tmp/1mb 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:41:46.716" level="INFO">${rc} = 2</msg>
<msg timestamp="20240102 11:41:46.716" level="INFO">${output} = Could not invoke public void org.apache.hadoop.ozone.shell.ShellReplicationOptions.setType(java.lang.String) with STAND_ALONE (java.lang.IllegalArgumentException: Invalid value 'STAND_ALONE' for optio...</msg>
<status status="PASS" starttime="20240102 11:41:44.782" endtime="20240102 11:41:46.716"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:41:46.717" level="INFO">Could not invoke public void org.apache.hadoop.ozone.shell.ShellReplicationOptions.setType(java.lang.String) with STAND_ALONE (java.lang.IllegalArgumentException: Invalid value 'STAND_ALONE' for option '--type'. Unsupported replication type STAND_ALONE. Supported values are: RATIS, EC.)
Usage: ozone sh key put [-hV] [--stream] [-r=&lt;replication&gt;] [-t=&lt;type&gt;] &lt;value&gt;
                        &lt;fileName&gt;
creates or overwrites an existing key
      &lt;value&gt;      URI of the volume/bucket/key.
                   Ozone URI could either be a full URI or short URI.
                   Full URI should start with o3://, in case of non-HA
                   clusters it should be followed by the host name and
                   optionally the port number. In case of HA clusters
                   the service id should be used. Service id provides a
                   logical name for multiple hosts and it is defined
                   in the property ozone.om.service.ids.
                   Example of a full URI with host name and port number
                   for a key:
                   o3://omhostname:9862/vol1/bucket1/key1
                   With a service id for a volume:
                   o3://omserviceid/vol1/
                   Short URI should start from the volume.
                   Example of a short URI for a bucket:
                   vol1/bucket1
                   Any unspecified information will be identified from
                   the config files.

      &lt;fileName&gt;   File to upload
  -h, --help       Show this help message and exit.
  -r, --replication=&lt;replication&gt;
                   Replication definition. Valid values are replication
                     type-specific.  For RATIS: ONE or THREE. In case of EC,
                     pass CODEC-DATA-PARITY-CHUNKSIZE,  e.g. rs-3-2-1024k,
                     rs-6-3-1024k, rs-10-4-1024k
      --stream
  -t, --type, --replication-type=&lt;type&gt;
                   Replication type. Supported types are: RATIS, EC
  -V, --version    Print version information and exit.</msg>
<status status="PASS" starttime="20240102 11:41:46.717" endtime="20240102 11:41:46.717"/>
</kw>
<msg timestamp="20240102 11:41:46.717" level="INFO">${message} = Could not invoke public void org.apache.hadoop.ozone.shell.ShellReplicationOptions.setType(java.lang.String) with STAND_ALONE (java.lang.IllegalArgumentException: Invalid value 'STAND_ALONE' for optio...</msg>
<status status="PASS" starttime="20240102 11:41:44.782" endtime="20240102 11:41:46.717"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${message}</arg>
<arg>STAND_ALONE</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:41:46.718" endtime="20240102 11:41:46.718"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${message}</arg>
<arg>Invalid value</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:41:46.718" endtime="20240102 11:41:46.718"/>
</kw>
<status status="PASS" starttime="20240102 11:41:36.732" endtime="20240102 11:41:46.718"/>
</test>
<test id="s1-s2-t11" name="Invalid Replication With Misconfigured Client" line="143">
<kw name="Execute And Ignore Error" library="os">
<var>${message}</var>
<arg>ozone sh -Dozone.replication.allowed-configs="" bucket create --replication=rs-2-1-1024k --type=EC /${VOLUME}/invalid</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:41:46.721" level="INFO">Running command 'ozone sh -Dozone.replication.allowed-configs="" bucket create --replication=rs-2-1-1024k --type=EC /vol3308/invalid 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:41:49.686" level="INFO">${rc} = 255</msg>
<msg timestamp="20240102 11:41:49.686" level="INFO">${output} = INVALID_REQUEST Invalid replication config: EC{rs-2-1-1024k}</msg>
<status status="PASS" starttime="20240102 11:41:46.720" endtime="20240102 11:41:49.687"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:41:49.687" level="INFO">INVALID_REQUEST Invalid replication config: EC{rs-2-1-1024k}</msg>
<status status="PASS" starttime="20240102 11:41:49.687" endtime="20240102 11:41:49.687"/>
</kw>
<msg timestamp="20240102 11:41:49.688" level="INFO">${message} = INVALID_REQUEST Invalid replication config: EC{rs-2-1-1024k}</msg>
<status status="PASS" starttime="20240102 11:41:46.719" endtime="20240102 11:41:49.688"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${message}</arg>
<arg>INVALID_REQUEST Invalid replication config</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:41:49.688" endtime="20240102 11:41:49.688"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${message}</var>
<arg>ozone sh -Dozone.replication.allowed-configs="" key put --replication=rs-3-2-1024 --type=EC /${VOLUME}/ecbucket/invalid /tmp/1mb</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:41:49.690" level="INFO">Running command 'ozone sh -Dozone.replication.allowed-configs="" key put --replication=rs-3-2-1024 --type=EC /vol3308/ecbucket/invalid /tmp/1mb 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:41:52.873" level="INFO">${rc} = 255</msg>
<msg timestamp="20240102 11:41:52.873" level="INFO">${output} = INVALID_REQUEST Invalid replication config: EC{rs-3-2-1k}</msg>
<status status="PASS" starttime="20240102 11:41:49.689" endtime="20240102 11:41:52.873"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:41:52.874" level="INFO">INVALID_REQUEST Invalid replication config: EC{rs-3-2-1k}</msg>
<status status="PASS" starttime="20240102 11:41:52.873" endtime="20240102 11:41:52.874"/>
</kw>
<msg timestamp="20240102 11:41:52.874" level="INFO">${message} = INVALID_REQUEST Invalid replication config: EC{rs-3-2-1k}</msg>
<status status="PASS" starttime="20240102 11:41:49.688" endtime="20240102 11:41:52.874"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${message}</arg>
<arg>INVALID_REQUEST Invalid replication config</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:41:52.874" endtime="20240102 11:41:52.874"/>
</kw>
<status status="PASS" starttime="20240102 11:41:46.719" endtime="20240102 11:41:52.875"/>
</test>
<test id="s1-s2-t12" name="Check disk usage after create a file which uses EC replication type" line="152">
<kw name="Generate Random String" library="String">
<var>${vol}</var>
<arg>8</arg>
<arg>[LOWER]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20240102 11:41:52.876" level="INFO">${vol} = gluozbst</msg>
<status status="PASS" starttime="20240102 11:41:52.876" endtime="20240102 11:41:52.876"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${bucket}</var>
<arg>8</arg>
<arg>[LOWER]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20240102 11:41:52.876" level="INFO">${bucket} = xrtdmvcy</msg>
<status status="PASS" starttime="20240102 11:41:52.876" endtime="20240102 11:41:52.876"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create /${vol}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:41:52.879" level="INFO">Running command 'ozone sh volume create /gluozbst 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:41:56.017" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:41:56.017" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240102 11:41:52.877" endtime="20240102 11:41:56.017"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:41:56.018" level="INFO"/>
<status status="PASS" starttime="20240102 11:41:56.017" endtime="20240102 11:41:56.018"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:41:56.018" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:41:56.018" endtime="20240102 11:41:56.018"/>
</kw>
<status status="PASS" starttime="20240102 11:41:52.877" endtime="20240102 11:41:56.018"/>
</kw>
<msg timestamp="20240102 11:41:56.018" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:41:52.877" endtime="20240102 11:41:56.019"/>
</kw>
<status status="PASS" starttime="20240102 11:41:52.876" endtime="20240102 11:41:56.019"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create /${vol}/${bucket} --type EC --replication rs-3-2-1024k</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:41:56.021" level="INFO">Running command 'ozone sh bucket create /gluozbst/xrtdmvcy --type EC --replication rs-3-2-1024k 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:41:59.183" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:41:59.184" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240102 11:41:56.020" endtime="20240102 11:41:59.184"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:41:59.184" level="INFO"/>
<status status="PASS" starttime="20240102 11:41:59.184" endtime="20240102 11:41:59.185"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:41:59.185" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:41:59.185" endtime="20240102 11:41:59.185"/>
</kw>
<status status="PASS" starttime="20240102 11:41:56.020" endtime="20240102 11:41:59.185"/>
</kw>
<msg timestamp="20240102 11:41:59.185" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:41:56.019" endtime="20240102 11:41:59.185"/>
</kw>
<status status="PASS" starttime="20240102 11:41:56.019" endtime="20240102 11:41:59.185"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -put NOTICE.txt /${vol}/${bucket}/PUTFILE2.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:41:59.188" level="INFO">Running command 'ozone fs -put NOTICE.txt /gluozbst/xrtdmvcy/PUTFILE2.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:42:03.845" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:42:03.845" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240102 11:41:59.187" endtime="20240102 11:42:03.845"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:42:03.845" level="INFO"/>
<status status="PASS" starttime="20240102 11:42:03.845" endtime="20240102 11:42:03.845"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:42:03.846" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:42:03.846" endtime="20240102 11:42:03.846"/>
</kw>
<status status="PASS" starttime="20240102 11:41:59.186" endtime="20240102 11:42:03.846"/>
</kw>
<msg timestamp="20240102 11:42:03.846" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:41:59.186" endtime="20240102 11:42:03.846"/>
</kw>
<status status="PASS" starttime="20240102 11:41:59.186" endtime="20240102 11:42:03.846"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedFileLength}</var>
<arg>stat -c %s NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:42:03.849" level="INFO">Running command 'stat -c %s NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:42:03.851" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:42:03.851" level="INFO">${output} = 17289</msg>
<status status="PASS" starttime="20240102 11:42:03.848" endtime="20240102 11:42:03.851"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:42:03.852" level="INFO">17289</msg>
<status status="PASS" starttime="20240102 11:42:03.851" endtime="20240102 11:42:03.852"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:42:03.852" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:42:03.852" endtime="20240102 11:42:03.852"/>
</kw>
<status status="PASS" starttime="20240102 11:42:03.847" endtime="20240102 11:42:03.852"/>
</kw>
<msg timestamp="20240102 11:42:03.852" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:42:03.847" endtime="20240102 11:42:03.852"/>
</kw>
<msg timestamp="20240102 11:42:03.852" level="INFO">${expectedFileLength} = 17289</msg>
<status status="PASS" starttime="20240102 11:42:03.847" endtime="20240102 11:42:03.853"/>
</kw>
<kw name="Get Disk Usage of File with EC RS Replication">
<var>${expectedDiskUsage}</var>
<arg>${expectedFileLength}</arg>
<arg>3</arg>
<arg>2</arg>
<arg>1024</arg>
<kw name="Evaluate" library="BuiltIn">
<var>${ecChunkSize}</var>
<arg>${ecChunkSize} * 1024</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20240102 11:42:03.853" level="INFO">${ecChunkSize} = 1048576</msg>
<status status="PASS" starttime="20240102 11:42:03.853" endtime="20240102 11:42:03.853"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${dataStripeSize}</var>
<arg>${dataChunkCount} * ${ecChunkSize} * 1024</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20240102 11:42:03.854" level="INFO">${dataStripeSize} = 3221225472</msg>
<status status="PASS" starttime="20240102 11:42:03.854" endtime="20240102 11:42:03.854"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${fullStripes}</var>
<arg>${fileLength}/${dataStripeSize}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20240102 11:42:03.854" level="INFO">${fullStripes} = 5.367211997509003e-06</msg>
<status status="PASS" starttime="20240102 11:42:03.854" endtime="20240102 11:42:03.855"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${fullStripes}</var>
<arg>${fullStripes}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20240102 11:42:03.855" level="INFO">${fullStripes} = 0</msg>
<status status="PASS" starttime="20240102 11:42:03.855" endtime="20240102 11:42:03.855"/>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<var>${fullStripes}</var>
<arg>${fullStripes}</arg>
<arg>0</arg>
<doc>Converts the given item to a floating point number.</doc>
<msg timestamp="20240102 11:42:03.855" level="INFO">${fullStripes} = 0.0</msg>
<status status="PASS" starttime="20240102 11:42:03.855" endtime="20240102 11:42:03.856"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${partialFirstChunk}</var>
<arg>${fileLength} % ${dataStripeSize}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20240102 11:42:03.856" level="INFO">${partialFirstChunk} = 17289</msg>
<status status="PASS" starttime="20240102 11:42:03.856" endtime="20240102 11:42:03.856"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${ecChunkSize}</var>
<arg>${ecChunkSize}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20240102 11:42:03.856" level="INFO">${ecChunkSize} = 1048576</msg>
<status status="PASS" starttime="20240102 11:42:03.856" endtime="20240102 11:42:03.856"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${partialFirstChunk}</var>
<arg>${partialFirstChunk}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20240102 11:42:03.857" level="INFO">${partialFirstChunk} = 17289</msg>
<status status="PASS" starttime="20240102 11:42:03.857" endtime="20240102 11:42:03.857"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${partialFirstChunkOptions}</var>
<arg>${ecChunkSize}</arg>
<arg>${partialFirstChunk}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20240102 11:42:03.857" level="INFO">${partialFirstChunkOptions} = [1048576, 17289]</msg>
<status status="PASS" starttime="20240102 11:42:03.857" endtime="20240102 11:42:03.857"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${partialFirstChunk}</var>
<arg>min(${partialFirstChunkOptions})</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20240102 11:42:03.858" level="INFO">${partialFirstChunk} = 17289</msg>
<status status="PASS" starttime="20240102 11:42:03.857" endtime="20240102 11:42:03.858"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${replicationOverhead}</var>
<arg>${fullStripes} * 2 * 1024 * 1024 + ${partialFirstChunk} * 2</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20240102 11:42:03.858" level="INFO">${replicationOverhead} = 34578.0</msg>
<status status="PASS" starttime="20240102 11:42:03.858" endtime="20240102 11:42:03.858"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${expectedDiskUsage}</var>
<arg>${fileLength} + ${replicationOverhead}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20240102 11:42:03.859" level="INFO">${expectedDiskUsage} = 51867.0</msg>
<status status="PASS" starttime="20240102 11:42:03.859" endtime="20240102 11:42:03.859"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${expectedDiskUsage}</var>
<arg>${expectedDiskUsage}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20240102 11:42:03.859" level="INFO">${expectedDiskUsage} = 51867</msg>
<status status="PASS" starttime="20240102 11:42:03.859" endtime="20240102 11:42:03.859"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${expectedDiskUsage}</var>
<arg>${expectedDiskUsage}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20240102 11:42:03.860" level="INFO">${expectedDiskUsage} = 51867</msg>
<status status="PASS" starttime="20240102 11:42:03.859" endtime="20240102 11:42:03.860"/>
</kw>
<msg timestamp="20240102 11:42:03.860" level="INFO">${expectedDiskUsage} = 51867</msg>
<status status="PASS" starttime="20240102 11:42:03.853" endtime="20240102 11:42:03.860"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone fs -du /${vol}/${bucket}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:42:03.862" level="INFO">Running command 'ozone fs -du /gluozbst/xrtdmvcy 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:42:06.827" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:42:06.827" level="INFO">${output} = 17289  51867  /gluozbst/xrtdmvcy/PUTFILE2.txt</msg>
<status status="PASS" starttime="20240102 11:42:03.861" endtime="20240102 11:42:06.827"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:42:06.828" level="INFO">17289  51867  /gluozbst/xrtdmvcy/PUTFILE2.txt</msg>
<status status="PASS" starttime="20240102 11:42:06.827" endtime="20240102 11:42:06.828"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:42:06.828" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:42:06.828" endtime="20240102 11:42:06.828"/>
</kw>
<status status="PASS" starttime="20240102 11:42:03.861" endtime="20240102 11:42:06.828"/>
</kw>
<msg timestamp="20240102 11:42:06.828" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:42:03.860" endtime="20240102 11:42:06.828"/>
</kw>
<msg timestamp="20240102 11:42:06.829" level="INFO">${result} = 17289  51867  /gluozbst/xrtdmvcy/PUTFILE2.txt</msg>
<status status="PASS" starttime="20240102 11:42:03.860" endtime="20240102 11:42:06.829"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PUTFILE2.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:42:06.829" endtime="20240102 11:42:06.829"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expectedFileLength}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:42:06.829" endtime="20240102 11:42:06.829"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expectedDiskUsage}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240102 11:42:06.829" endtime="20240102 11:42:06.830"/>
</kw>
<status status="PASS" starttime="20240102 11:41:52.875" endtime="20240102 11:42:06.830"/>
</test>
<doc>Test EC shell commands</doc>
<status status="PASS" starttime="20240102 11:38:57.328" endtime="20240102 11:42:06.831"/>
</suite>
<suite id="s1-s3" name="read-4-datanodes" source="/opt/hadoop/smoketest/ec/read.robot">
<test id="s1-s3-t1" name="Read 1MB EC Key" line="25">
<kw name="Key Should Match Local File" library="shell">
<arg>/${VOLUME}/ecbucket/dir/1mb</arg>
<arg>/tmp/1mb</arg>
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20240102 11:42:12.310" level="INFO">${postfix} = 40196</msg>
<status status="PASS" starttime="20240102 11:42:12.309" endtime="20240102 11:42:12.310"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240102 11:42:12.310" level="INFO">${tmpfile} = /tmp/tempkey-40196</msg>
<status status="PASS" starttime="20240102 11:42:12.310" endtime="20240102 11:42:12.310"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:42:12.314" level="INFO">Running command 'ozone sh key get /vol3308/ecbucket/dir/1mb /tmp/tempkey-40196 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:42:17.014" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:42:17.014" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240102 11:42:12.312" endtime="20240102 11:42:17.015"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:42:17.015" level="INFO"/>
<status status="PASS" starttime="20240102 11:42:17.015" endtime="20240102 11:42:17.015"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:42:17.016" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:42:17.015" endtime="20240102 11:42:17.016"/>
</kw>
<status status="PASS" starttime="20240102 11:42:12.311" endtime="20240102 11:42:17.016"/>
</kw>
<msg timestamp="20240102 11:42:17.016" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:42:12.311" endtime="20240102 11:42:17.016"/>
</kw>
<status status="PASS" starttime="20240102 11:42:12.310" endtime="20240102 11:42:17.016"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20240102 11:42:17.018" level="INFO">Running command 'diff -q /tmp/1mb /tmp/tempkey-40196 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:42:17.020" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20240102 11:42:17.016" endtime="20240102 11:42:17.020"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:42:17.022" level="INFO">Running command 'rm -f /tmp/tempkey-40196 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:42:17.024" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:42:17.024" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240102 11:42:17.021" endtime="20240102 11:42:17.024"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:42:17.024" level="INFO"/>
<status status="PASS" starttime="20240102 11:42:17.024" endtime="20240102 11:42:17.024"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:42:17.025" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:42:17.024" endtime="20240102 11:42:17.025"/>
</kw>
<status status="PASS" starttime="20240102 11:42:17.021" endtime="20240102 11:42:17.025"/>
</kw>
<msg timestamp="20240102 11:42:17.025" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:42:17.020" endtime="20240102 11:42:17.025"/>
</kw>
<status status="PASS" starttime="20240102 11:42:17.020" endtime="20240102 11:42:17.025"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20240102 11:42:17.026" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20240102 11:42:17.025" endtime="20240102 11:42:17.026"/>
</kw>
<msg timestamp="20240102 11:42:17.026" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20240102 11:42:12.309" endtime="20240102 11:42:17.026"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${matches}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20240102 11:42:17.026" endtime="20240102 11:42:17.026"/>
</kw>
<status status="PASS" starttime="20240102 11:42:12.308" endtime="20240102 11:42:17.026"/>
</kw>
<status status="PASS" starttime="20240102 11:42:12.307" endtime="20240102 11:42:17.026"/>
</test>
<test id="s1-s3-t2" name="Read 2MB EC Key" line="28">
<kw name="Key Should Match Local File" library="shell">
<arg>/${VOLUME}/ecbucket/dir/2mb</arg>
<arg>/tmp/2mb</arg>
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20240102 11:42:17.029" level="INFO">${postfix} = 56692</msg>
<status status="PASS" starttime="20240102 11:42:17.028" endtime="20240102 11:42:17.029"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240102 11:42:17.029" level="INFO">${tmpfile} = /tmp/tempkey-56692</msg>
<status status="PASS" starttime="20240102 11:42:17.029" endtime="20240102 11:42:17.029"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:42:17.031" level="INFO">Running command 'ozone sh key get /vol3308/ecbucket/dir/2mb /tmp/tempkey-56692 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:42:21.858" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:42:21.859" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240102 11:42:17.030" endtime="20240102 11:42:21.859"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:42:21.859" level="INFO"/>
<status status="PASS" starttime="20240102 11:42:21.859" endtime="20240102 11:42:21.859"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:42:21.860" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:42:21.860" endtime="20240102 11:42:21.860"/>
</kw>
<status status="PASS" starttime="20240102 11:42:17.030" endtime="20240102 11:42:21.860"/>
</kw>
<msg timestamp="20240102 11:42:21.860" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:42:17.030" endtime="20240102 11:42:21.860"/>
</kw>
<status status="PASS" starttime="20240102 11:42:17.029" endtime="20240102 11:42:21.860"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20240102 11:42:21.862" level="INFO">Running command 'diff -q /tmp/2mb /tmp/tempkey-56692 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:42:21.865" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20240102 11:42:21.860" endtime="20240102 11:42:21.865"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:42:21.868" level="INFO">Running command 'rm -f /tmp/tempkey-56692 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:42:21.869" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:42:21.869" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240102 11:42:21.866" endtime="20240102 11:42:21.869"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:42:21.870" level="INFO"/>
<status status="PASS" starttime="20240102 11:42:21.870" endtime="20240102 11:42:21.870"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:42:21.870" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:42:21.870" endtime="20240102 11:42:21.870"/>
</kw>
<status status="PASS" starttime="20240102 11:42:21.866" endtime="20240102 11:42:21.871"/>
</kw>
<msg timestamp="20240102 11:42:21.871" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:42:21.866" endtime="20240102 11:42:21.871"/>
</kw>
<status status="PASS" starttime="20240102 11:42:21.865" endtime="20240102 11:42:21.871"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20240102 11:42:21.871" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20240102 11:42:21.871" endtime="20240102 11:42:21.871"/>
</kw>
<msg timestamp="20240102 11:42:21.872" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20240102 11:42:17.028" endtime="20240102 11:42:21.872"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${matches}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20240102 11:42:21.872" endtime="20240102 11:42:21.872"/>
</kw>
<status status="PASS" starttime="20240102 11:42:17.027" endtime="20240102 11:42:21.872"/>
</kw>
<status status="PASS" starttime="20240102 11:42:17.027" endtime="20240102 11:42:21.872"/>
</test>
<test id="s1-s3-t3" name="Read 3MB EC Key" line="31">
<kw name="Key Should Match Local File" library="shell">
<arg>/${VOLUME}/ecbucket/dir/3mb</arg>
<arg>/tmp/3mb</arg>
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20240102 11:42:21.874" level="INFO">${postfix} = 61427</msg>
<status status="PASS" starttime="20240102 11:42:21.874" endtime="20240102 11:42:21.874"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240102 11:42:21.874" level="INFO">${tmpfile} = /tmp/tempkey-61427</msg>
<status status="PASS" starttime="20240102 11:42:21.874" endtime="20240102 11:42:21.874"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:42:21.877" level="INFO">Running command 'ozone sh key get /vol3308/ecbucket/dir/3mb /tmp/tempkey-61427 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:43:02.673" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:43:02.673" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240102 11:42:21.876" endtime="20240102 11:43:02.673"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:43:02.674" level="INFO"/>
<status status="PASS" starttime="20240102 11:43:02.674" endtime="20240102 11:43:02.674"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:43:02.674" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:43:02.674" endtime="20240102 11:43:02.675"/>
</kw>
<status status="PASS" starttime="20240102 11:42:21.875" endtime="20240102 11:43:02.675"/>
</kw>
<msg timestamp="20240102 11:43:02.675" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:42:21.875" endtime="20240102 11:43:02.675"/>
</kw>
<status status="PASS" starttime="20240102 11:42:21.875" endtime="20240102 11:43:02.675"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20240102 11:43:02.677" level="INFO">Running command 'diff -q /tmp/3mb /tmp/tempkey-61427 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:43:02.679" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20240102 11:43:02.675" endtime="20240102 11:43:02.679"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:43:02.682" level="INFO">Running command 'rm -f /tmp/tempkey-61427 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:43:02.683" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:43:02.683" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240102 11:43:02.681" endtime="20240102 11:43:02.684"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:43:02.684" level="INFO"/>
<status status="PASS" starttime="20240102 11:43:02.684" endtime="20240102 11:43:02.684"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:43:02.684" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:43:02.684" endtime="20240102 11:43:02.685"/>
</kw>
<status status="PASS" starttime="20240102 11:43:02.680" endtime="20240102 11:43:02.685"/>
</kw>
<msg timestamp="20240102 11:43:02.685" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:43:02.680" endtime="20240102 11:43:02.685"/>
</kw>
<status status="PASS" starttime="20240102 11:43:02.679" endtime="20240102 11:43:02.685"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20240102 11:43:02.685" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20240102 11:43:02.685" endtime="20240102 11:43:02.685"/>
</kw>
<msg timestamp="20240102 11:43:02.686" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20240102 11:42:21.873" endtime="20240102 11:43:02.686"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${matches}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20240102 11:43:02.686" endtime="20240102 11:43:02.686"/>
</kw>
<status status="PASS" starttime="20240102 11:42:21.873" endtime="20240102 11:43:02.686"/>
</kw>
<status status="PASS" starttime="20240102 11:42:21.873" endtime="20240102 11:43:02.686"/>
</test>
<test id="s1-s3-t4" name="Read 100MB EC Key" line="34">
<kw name="Key Should Match Local File" library="shell">
<arg>/${VOLUME}/ecbucket/dir/100mb</arg>
<arg>/tmp/100mb</arg>
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20240102 11:43:02.688" level="INFO">${postfix} = 91583</msg>
<status status="PASS" starttime="20240102 11:43:02.688" endtime="20240102 11:43:02.688"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240102 11:43:02.689" level="INFO">${tmpfile} = /tmp/tempkey-91583</msg>
<status status="PASS" starttime="20240102 11:43:02.688" endtime="20240102 11:43:02.689"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:43:02.691" level="INFO">Running command 'ozone sh key get /vol3308/ecbucket/dir/100mb /tmp/tempkey-91583 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:43:12.989" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:43:12.989" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240102 11:43:02.690" endtime="20240102 11:43:12.989"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:43:12.990" level="INFO"/>
<status status="PASS" starttime="20240102 11:43:12.989" endtime="20240102 11:43:12.990"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:43:12.990" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:43:12.990" endtime="20240102 11:43:12.990"/>
</kw>
<status status="PASS" starttime="20240102 11:43:02.689" endtime="20240102 11:43:12.991"/>
</kw>
<msg timestamp="20240102 11:43:12.991" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:43:02.689" endtime="20240102 11:43:12.991"/>
</kw>
<status status="PASS" starttime="20240102 11:43:02.689" endtime="20240102 11:43:12.991"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20240102 11:43:12.992" level="INFO">Running command 'diff -q /tmp/100mb /tmp/tempkey-91583 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:43:13.030" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20240102 11:43:12.991" endtime="20240102 11:43:13.030"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:43:13.033" level="INFO">Running command 'rm -f /tmp/tempkey-91583 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:43:13.046" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:43:13.046" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240102 11:43:13.031" endtime="20240102 11:43:13.046"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:43:13.046" level="INFO"/>
<status status="PASS" starttime="20240102 11:43:13.046" endtime="20240102 11:43:13.046"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:43:13.047" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:43:13.047" endtime="20240102 11:43:13.048"/>
</kw>
<status status="PASS" starttime="20240102 11:43:13.031" endtime="20240102 11:43:13.048"/>
</kw>
<msg timestamp="20240102 11:43:13.048" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:43:13.031" endtime="20240102 11:43:13.048"/>
</kw>
<status status="PASS" starttime="20240102 11:43:13.030" endtime="20240102 11:43:13.048"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20240102 11:43:13.049" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20240102 11:43:13.048" endtime="20240102 11:43:13.049"/>
</kw>
<msg timestamp="20240102 11:43:13.049" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20240102 11:43:02.687" endtime="20240102 11:43:13.049"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${matches}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20240102 11:43:13.049" endtime="20240102 11:43:13.049"/>
</kw>
<status status="PASS" starttime="20240102 11:43:02.687" endtime="20240102 11:43:13.049"/>
</kw>
<status status="PASS" starttime="20240102 11:43:02.686" endtime="20240102 11:43:13.050"/>
</test>
<test id="s1-s3-t5" name="Read EC Key in Ratis Bucket" line="37">
<kw name="Key Should Match Local File" library="shell">
<arg>/${VOLUME}/ratis/dir2/1mbEC</arg>
<arg>/tmp/1mb</arg>
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20240102 11:43:13.052" level="INFO">${postfix} = 07870</msg>
<status status="PASS" starttime="20240102 11:43:13.051" endtime="20240102 11:43:13.052"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240102 11:43:13.052" level="INFO">${tmpfile} = /tmp/tempkey-07870</msg>
<status status="PASS" starttime="20240102 11:43:13.052" endtime="20240102 11:43:13.052"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:43:13.055" level="INFO">Running command 'ozone sh key get /vol3308/ratis/dir2/1mbEC /tmp/tempkey-07870 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:43:17.735" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:43:17.735" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240102 11:43:13.053" endtime="20240102 11:43:17.735"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:43:17.736" level="INFO"/>
<status status="PASS" starttime="20240102 11:43:17.736" endtime="20240102 11:43:17.736"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:43:17.737" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:43:17.736" endtime="20240102 11:43:17.737"/>
</kw>
<status status="PASS" starttime="20240102 11:43:13.053" endtime="20240102 11:43:17.737"/>
</kw>
<msg timestamp="20240102 11:43:17.737" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:43:13.052" endtime="20240102 11:43:17.737"/>
</kw>
<status status="PASS" starttime="20240102 11:43:13.052" endtime="20240102 11:43:17.737"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20240102 11:43:17.739" level="INFO">Running command 'diff -q /tmp/1mb /tmp/tempkey-07870 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:43:17.740" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20240102 11:43:17.737" endtime="20240102 11:43:17.741"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:43:17.743" level="INFO">Running command 'rm -f /tmp/tempkey-07870 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:43:17.745" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:43:17.745" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240102 11:43:17.742" endtime="20240102 11:43:17.745"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:43:17.745" level="INFO"/>
<status status="PASS" starttime="20240102 11:43:17.745" endtime="20240102 11:43:17.745"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:43:17.746" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:43:17.745" endtime="20240102 11:43:17.746"/>
</kw>
<status status="PASS" starttime="20240102 11:43:17.742" endtime="20240102 11:43:17.746"/>
</kw>
<msg timestamp="20240102 11:43:17.746" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:43:17.741" endtime="20240102 11:43:17.746"/>
</kw>
<status status="PASS" starttime="20240102 11:43:17.741" endtime="20240102 11:43:17.746"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20240102 11:43:17.746" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20240102 11:43:17.746" endtime="20240102 11:43:17.746"/>
</kw>
<msg timestamp="20240102 11:43:17.747" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20240102 11:43:13.051" endtime="20240102 11:43:17.747"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${matches}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20240102 11:43:17.747" endtime="20240102 11:43:17.747"/>
</kw>
<status status="PASS" starttime="20240102 11:43:13.050" endtime="20240102 11:43:17.747"/>
</kw>
<status status="PASS" starttime="20240102 11:43:13.050" endtime="20240102 11:43:17.747"/>
</test>
<doc>Test reading EC keys</doc>
<status status="PASS" starttime="20240102 11:42:12.263" endtime="20240102 11:43:17.748"/>
</suite>
<suite id="s1-s4" name="read-3-datanodes" source="/opt/hadoop/smoketest/ec/read.robot">
<test id="s1-s4-t1" name="Read 1MB EC Key" line="25">
<kw name="Key Should Match Local File" library="shell">
<arg>/${VOLUME}/ecbucket/dir/1mb</arg>
<arg>/tmp/1mb</arg>
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20240102 11:43:23.657" level="INFO">${postfix} = 42635</msg>
<status status="PASS" starttime="20240102 11:43:23.657" endtime="20240102 11:43:23.657"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240102 11:43:23.657" level="INFO">${tmpfile} = /tmp/tempkey-42635</msg>
<status status="PASS" starttime="20240102 11:43:23.657" endtime="20240102 11:43:23.657"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:43:23.660" level="INFO">Running command 'ozone sh key get /vol3308/ecbucket/dir/1mb /tmp/tempkey-42635 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:43:28.320" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:43:28.320" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240102 11:43:23.658" endtime="20240102 11:43:28.320"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:43:28.321" level="INFO"/>
<status status="PASS" starttime="20240102 11:43:28.320" endtime="20240102 11:43:28.321"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:43:28.321" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:43:28.321" endtime="20240102 11:43:28.321"/>
</kw>
<status status="PASS" starttime="20240102 11:43:23.658" endtime="20240102 11:43:28.321"/>
</kw>
<msg timestamp="20240102 11:43:28.322" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:43:23.658" endtime="20240102 11:43:28.322"/>
</kw>
<status status="PASS" starttime="20240102 11:43:23.657" endtime="20240102 11:43:28.322"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20240102 11:43:28.323" level="INFO">Running command 'diff -q /tmp/1mb /tmp/tempkey-42635 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:43:28.325" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20240102 11:43:28.322" endtime="20240102 11:43:28.325"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:43:28.328" level="INFO">Running command 'rm -f /tmp/tempkey-42635 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:43:28.330" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:43:28.330" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240102 11:43:28.327" endtime="20240102 11:43:28.330"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:43:28.330" level="INFO"/>
<status status="PASS" starttime="20240102 11:43:28.330" endtime="20240102 11:43:28.331"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:43:28.331" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:43:28.331" endtime="20240102 11:43:28.331"/>
</kw>
<status status="PASS" starttime="20240102 11:43:28.327" endtime="20240102 11:43:28.331"/>
</kw>
<msg timestamp="20240102 11:43:28.331" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:43:28.326" endtime="20240102 11:43:28.331"/>
</kw>
<status status="PASS" starttime="20240102 11:43:28.326" endtime="20240102 11:43:28.331"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20240102 11:43:28.332" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20240102 11:43:28.332" endtime="20240102 11:43:28.332"/>
</kw>
<msg timestamp="20240102 11:43:28.332" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20240102 11:43:23.656" endtime="20240102 11:43:28.332"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${matches}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20240102 11:43:28.332" endtime="20240102 11:43:28.332"/>
</kw>
<status status="PASS" starttime="20240102 11:43:23.656" endtime="20240102 11:43:28.332"/>
</kw>
<status status="PASS" starttime="20240102 11:43:23.655" endtime="20240102 11:43:28.333"/>
</test>
<test id="s1-s4-t2" name="Read 2MB EC Key" line="28">
<kw name="Key Should Match Local File" library="shell">
<arg>/${VOLUME}/ecbucket/dir/2mb</arg>
<arg>/tmp/2mb</arg>
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20240102 11:43:28.335" level="INFO">${postfix} = 86789</msg>
<status status="PASS" starttime="20240102 11:43:28.334" endtime="20240102 11:43:28.335"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240102 11:43:28.335" level="INFO">${tmpfile} = /tmp/tempkey-86789</msg>
<status status="PASS" starttime="20240102 11:43:28.335" endtime="20240102 11:43:28.335"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:43:28.337" level="INFO">Running command 'ozone sh key get /vol3308/ecbucket/dir/2mb /tmp/tempkey-86789 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:44:09.236" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:44:09.236" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240102 11:43:28.336" endtime="20240102 11:44:09.236"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:44:09.237" level="INFO"/>
<status status="PASS" starttime="20240102 11:44:09.236" endtime="20240102 11:44:09.237"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:44:09.237" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:44:09.237" endtime="20240102 11:44:09.237"/>
</kw>
<status status="PASS" starttime="20240102 11:43:28.336" endtime="20240102 11:44:09.237"/>
</kw>
<msg timestamp="20240102 11:44:09.237" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:43:28.336" endtime="20240102 11:44:09.238"/>
</kw>
<status status="PASS" starttime="20240102 11:43:28.335" endtime="20240102 11:44:09.238"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20240102 11:44:09.239" level="INFO">Running command 'diff -q /tmp/2mb /tmp/tempkey-86789 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:44:09.241" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20240102 11:44:09.238" endtime="20240102 11:44:09.241"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:44:09.244" level="INFO">Running command 'rm -f /tmp/tempkey-86789 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:44:09.246" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:44:09.246" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240102 11:44:09.243" endtime="20240102 11:44:09.246"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:44:09.246" level="INFO"/>
<status status="PASS" starttime="20240102 11:44:09.246" endtime="20240102 11:44:09.246"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:44:09.247" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:44:09.246" endtime="20240102 11:44:09.247"/>
</kw>
<status status="PASS" starttime="20240102 11:44:09.243" endtime="20240102 11:44:09.247"/>
</kw>
<msg timestamp="20240102 11:44:09.247" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:44:09.242" endtime="20240102 11:44:09.247"/>
</kw>
<status status="PASS" starttime="20240102 11:44:09.242" endtime="20240102 11:44:09.247"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20240102 11:44:09.248" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20240102 11:44:09.247" endtime="20240102 11:44:09.248"/>
</kw>
<msg timestamp="20240102 11:44:09.248" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20240102 11:43:28.334" endtime="20240102 11:44:09.248"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${matches}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20240102 11:44:09.248" endtime="20240102 11:44:09.248"/>
</kw>
<status status="PASS" starttime="20240102 11:43:28.334" endtime="20240102 11:44:09.248"/>
</kw>
<status status="PASS" starttime="20240102 11:43:28.333" endtime="20240102 11:44:09.248"/>
</test>
<test id="s1-s4-t3" name="Read 3MB EC Key" line="31">
<kw name="Key Should Match Local File" library="shell">
<arg>/${VOLUME}/ecbucket/dir/3mb</arg>
<arg>/tmp/3mb</arg>
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20240102 11:44:09.250" level="INFO">${postfix} = 94659</msg>
<status status="PASS" starttime="20240102 11:44:09.250" endtime="20240102 11:44:09.250"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240102 11:44:09.251" level="INFO">${tmpfile} = /tmp/tempkey-94659</msg>
<status status="PASS" starttime="20240102 11:44:09.250" endtime="20240102 11:44:09.251"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:44:09.253" level="INFO">Running command 'ozone sh key get /vol3308/ecbucket/dir/3mb /tmp/tempkey-94659 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:44:14.090" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:44:14.090" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240102 11:44:09.252" endtime="20240102 11:44:14.090"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:44:14.091" level="INFO"/>
<status status="PASS" starttime="20240102 11:44:14.090" endtime="20240102 11:44:14.091"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:44:14.091" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:44:14.091" endtime="20240102 11:44:14.091"/>
</kw>
<status status="PASS" starttime="20240102 11:44:09.251" endtime="20240102 11:44:14.091"/>
</kw>
<msg timestamp="20240102 11:44:14.092" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:44:09.251" endtime="20240102 11:44:14.092"/>
</kw>
<status status="PASS" starttime="20240102 11:44:09.251" endtime="20240102 11:44:14.092"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20240102 11:44:14.093" level="INFO">Running command 'diff -q /tmp/3mb /tmp/tempkey-94659 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:44:14.096" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20240102 11:44:14.092" endtime="20240102 11:44:14.096"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:44:14.099" level="INFO">Running command 'rm -f /tmp/tempkey-94659 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:44:14.101" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:44:14.101" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240102 11:44:14.098" endtime="20240102 11:44:14.101"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:44:14.101" level="INFO"/>
<status status="PASS" starttime="20240102 11:44:14.101" endtime="20240102 11:44:14.101"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:44:14.102" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:44:14.101" endtime="20240102 11:44:14.102"/>
</kw>
<status status="PASS" starttime="20240102 11:44:14.097" endtime="20240102 11:44:14.102"/>
</kw>
<msg timestamp="20240102 11:44:14.102" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:44:14.097" endtime="20240102 11:44:14.102"/>
</kw>
<status status="PASS" starttime="20240102 11:44:14.096" endtime="20240102 11:44:14.102"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20240102 11:44:14.103" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20240102 11:44:14.102" endtime="20240102 11:44:14.103"/>
</kw>
<msg timestamp="20240102 11:44:14.103" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20240102 11:44:09.250" endtime="20240102 11:44:14.103"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${matches}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20240102 11:44:14.103" endtime="20240102 11:44:14.103"/>
</kw>
<status status="PASS" starttime="20240102 11:44:09.249" endtime="20240102 11:44:14.103"/>
</kw>
<status status="PASS" starttime="20240102 11:44:09.249" endtime="20240102 11:44:14.103"/>
</test>
<test id="s1-s4-t4" name="Read 100MB EC Key" line="34">
<kw name="Key Should Match Local File" library="shell">
<arg>/${VOLUME}/ecbucket/dir/100mb</arg>
<arg>/tmp/100mb</arg>
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20240102 11:44:14.105" level="INFO">${postfix} = 19494</msg>
<status status="PASS" starttime="20240102 11:44:14.105" endtime="20240102 11:44:14.105"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240102 11:44:14.106" level="INFO">${tmpfile} = /tmp/tempkey-19494</msg>
<status status="PASS" starttime="20240102 11:44:14.106" endtime="20240102 11:44:14.106"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:44:14.108" level="INFO">Running command 'ozone sh key get /vol3308/ecbucket/dir/100mb /tmp/tempkey-19494 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:44:24.508" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:44:24.508" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240102 11:44:14.107" endtime="20240102 11:44:24.508"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:44:24.509" level="INFO"/>
<status status="PASS" starttime="20240102 11:44:24.509" endtime="20240102 11:44:24.509"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:44:24.509" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:44:24.509" endtime="20240102 11:44:24.509"/>
</kw>
<status status="PASS" starttime="20240102 11:44:14.106" endtime="20240102 11:44:24.510"/>
</kw>
<msg timestamp="20240102 11:44:24.510" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:44:14.106" endtime="20240102 11:44:24.510"/>
</kw>
<status status="PASS" starttime="20240102 11:44:14.106" endtime="20240102 11:44:24.510"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20240102 11:44:24.511" level="INFO">Running command 'diff -q /tmp/100mb /tmp/tempkey-19494 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:44:24.549" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20240102 11:44:24.510" endtime="20240102 11:44:24.549"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:44:24.552" level="INFO">Running command 'rm -f /tmp/tempkey-19494 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:44:24.564" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:44:24.564" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240102 11:44:24.551" endtime="20240102 11:44:24.565"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:44:24.565" level="INFO"/>
<status status="PASS" starttime="20240102 11:44:24.565" endtime="20240102 11:44:24.565"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:44:24.566" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:44:24.565" endtime="20240102 11:44:24.567"/>
</kw>
<status status="PASS" starttime="20240102 11:44:24.550" endtime="20240102 11:44:24.567"/>
</kw>
<msg timestamp="20240102 11:44:24.567" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:44:24.550" endtime="20240102 11:44:24.567"/>
</kw>
<status status="PASS" starttime="20240102 11:44:24.549" endtime="20240102 11:44:24.567"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20240102 11:44:24.567" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20240102 11:44:24.567" endtime="20240102 11:44:24.568"/>
</kw>
<msg timestamp="20240102 11:44:24.568" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20240102 11:44:14.105" endtime="20240102 11:44:24.568"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${matches}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20240102 11:44:24.568" endtime="20240102 11:44:24.568"/>
</kw>
<status status="PASS" starttime="20240102 11:44:14.104" endtime="20240102 11:44:24.568"/>
</kw>
<status status="PASS" starttime="20240102 11:44:14.104" endtime="20240102 11:44:24.568"/>
</test>
<test id="s1-s4-t5" name="Read EC Key in Ratis Bucket" line="37">
<kw name="Key Should Match Local File" library="shell">
<arg>/${VOLUME}/ratis/dir2/1mbEC</arg>
<arg>/tmp/1mb</arg>
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20240102 11:44:24.570" level="INFO">${postfix} = 66686</msg>
<status status="PASS" starttime="20240102 11:44:24.570" endtime="20240102 11:44:24.570"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240102 11:44:24.570" level="INFO">${tmpfile} = /tmp/tempkey-66686</msg>
<status status="PASS" starttime="20240102 11:44:24.570" endtime="20240102 11:44:24.570"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:44:24.573" level="INFO">Running command 'ozone sh key get /vol3308/ratis/dir2/1mbEC /tmp/tempkey-66686 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:44:29.539" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:44:29.539" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240102 11:44:24.572" endtime="20240102 11:44:29.539"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:44:29.540" level="INFO"/>
<status status="PASS" starttime="20240102 11:44:29.539" endtime="20240102 11:44:29.540"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:44:29.540" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:44:29.540" endtime="20240102 11:44:29.540"/>
</kw>
<status status="PASS" starttime="20240102 11:44:24.571" endtime="20240102 11:44:29.541"/>
</kw>
<msg timestamp="20240102 11:44:29.541" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:44:24.571" endtime="20240102 11:44:29.541"/>
</kw>
<status status="PASS" starttime="20240102 11:44:24.571" endtime="20240102 11:44:29.541"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20240102 11:44:29.542" level="INFO">Running command 'diff -q /tmp/1mb /tmp/tempkey-66686 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:44:29.544" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20240102 11:44:29.541" endtime="20240102 11:44:29.544"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:44:29.547" level="INFO">Running command 'rm -f /tmp/tempkey-66686 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:44:29.549" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:44:29.549" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240102 11:44:29.546" endtime="20240102 11:44:29.549"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:44:29.549" level="INFO"/>
<status status="PASS" starttime="20240102 11:44:29.549" endtime="20240102 11:44:29.549"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:44:29.550" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:44:29.549" endtime="20240102 11:44:29.550"/>
</kw>
<status status="PASS" starttime="20240102 11:44:29.545" endtime="20240102 11:44:29.550"/>
</kw>
<msg timestamp="20240102 11:44:29.550" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:44:29.545" endtime="20240102 11:44:29.550"/>
</kw>
<status status="PASS" starttime="20240102 11:44:29.545" endtime="20240102 11:44:29.550"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20240102 11:44:29.551" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20240102 11:44:29.550" endtime="20240102 11:44:29.551"/>
</kw>
<msg timestamp="20240102 11:44:29.551" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20240102 11:44:24.569" endtime="20240102 11:44:29.551"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${matches}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20240102 11:44:29.551" endtime="20240102 11:44:29.551"/>
</kw>
<status status="PASS" starttime="20240102 11:44:24.569" endtime="20240102 11:44:29.551"/>
</kw>
<status status="PASS" starttime="20240102 11:44:24.569" endtime="20240102 11:44:29.551"/>
</test>
<doc>Test reading EC keys</doc>
<status status="PASS" starttime="20240102 11:43:23.612" endtime="20240102 11:44:29.552"/>
</suite>
<suite id="s1-s5" name="EC-recovery" source="/opt/hadoop/smoketest/replication/wait.robot">
<test id="s1-s5-t1" name="Wait Until Container Replicated" line="32">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5min</arg>
<arg>10sec</arg>
<arg>Check Container Replicated</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check Container Replicated">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin container info --json "${container}" | jq '.pipeline.nodes | length'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:44:33.485" level="INFO">Running command 'ozone admin container info --json "1" | jq '.pipeline.nodes | length' 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:44:42.451" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:44:42.451" level="INFO">${output} = 3</msg>
<status status="PASS" starttime="20240102 11:44:33.479" endtime="20240102 11:44:42.451"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:44:42.452" level="INFO">3</msg>
<status status="PASS" starttime="20240102 11:44:42.451" endtime="20240102 11:44:42.452"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:44:42.454" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:44:42.453" endtime="20240102 11:44:42.454"/>
</kw>
<status status="PASS" starttime="20240102 11:44:33.479" endtime="20240102 11:44:42.454"/>
</kw>
<msg timestamp="20240102 11:44:42.454" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:44:33.478" endtime="20240102 11:44:42.454"/>
</kw>
<msg timestamp="20240102 11:44:42.455" level="INFO">${output} = 3</msg>
<status status="PASS" starttime="20240102 11:44:33.477" endtime="20240102 11:44:42.456"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${output}</arg>
<arg>${count}</arg>
<doc>Fails if the given objects are unequal.</doc>
<msg timestamp="20240102 11:44:42.457" level="FAIL">3 != 5</msg>
<status status="FAIL" starttime="20240102 11:44:42.456" endtime="20240102 11:44:42.457"/>
</kw>
<status status="FAIL" starttime="20240102 11:44:33.477" endtime="20240102 11:44:42.457"/>
</kw>
<kw name="Check Container Replicated">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin container info --json "${container}" | jq '.pipeline.nodes | length'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240102 11:44:52.464" level="INFO">Running command 'ozone admin container info --json "1" | jq '.pipeline.nodes | length' 2&gt;&amp;1'.</msg>
<msg timestamp="20240102 11:44:58.142" level="INFO">${rc} = 0</msg>
<msg timestamp="20240102 11:44:58.142" level="INFO">${output} = 5</msg>
<status status="PASS" starttime="20240102 11:44:52.460" endtime="20240102 11:44:58.142"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240102 11:44:58.143" level="INFO">5</msg>
<status status="PASS" starttime="20240102 11:44:58.142" endtime="20240102 11:44:58.143"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240102 11:44:58.143" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240102 11:44:58.143" endtime="20240102 11:44:58.143"/>
</kw>
<status status="PASS" starttime="20240102 11:44:52.460" endtime="20240102 11:44:58.144"/>
</kw>
<msg timestamp="20240102 11:44:58.144" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240102 11:44:52.459" endtime="20240102 11:44:58.144"/>
</kw>
<msg timestamp="20240102 11:44:58.144" level="INFO">${output} = 5</msg>
<status status="PASS" starttime="20240102 11:44:52.459" endtime="20240102 11:44:58.144"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${output}</arg>
<arg>${count}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240102 11:44:58.144" endtime="20240102 11:44:58.144"/>
</kw>
<status status="PASS" starttime="20240102 11:44:52.458" endtime="20240102 11:44:58.144"/>
</kw>
<status status="PASS" starttime="20240102 11:44:33.476" endtime="20240102 11:44:58.144"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20240102 11:44:33.476" endtime="20240102 11:44:58.145"/>
</test>
<doc>Wait for replication to succeed</doc>
<status status="PASS" starttime="20240102 11:44:33.392" endtime="20240102 11:44:58.145"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="488435"/>
</suite>
<statistics>
<total>
<stat pass="95" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="13" fail="0" skip="0">no-bucket-type</stat>
</tag>
<suite>
<stat pass="95" fail="0" skip="0" id="s1" name="ozone-ec">ozone-ec</stat>
<stat pass="72" fail="0" skip="0" id="s1-s1" name="S3">ozone-ec.S3</stat>
<stat pass="2" fail="0" skip="0" id="s1-s1-s1" name="Awss3">ozone-ec.S3.Awss3</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s2" name="Boto3">ozone-ec.S3.Boto3</stat>
<stat pass="4" fail="0" skip="0" id="s1-s1-s3" name="Bucketcreate">ozone-ec.S3.Bucketcreate</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s4" name="Bucketdelete">ozone-ec.S3.Bucketdelete</stat>
<stat pass="2" fail="0" skip="0" id="s1-s1-s5" name="Buckethead">ozone-ec.S3.Buckethead</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s6" name="Bucketlist">ozone-ec.S3.Bucketlist</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s7" name="Freon">ozone-ec.S3.Freon</stat>
<stat pass="14" fail="0" skip="0" id="s1-s1-s8" name="MultipartUpload">ozone-ec.S3.MultipartUpload</stat>
<stat pass="4" fail="0" skip="0" id="s1-s1-s9" name="Objectcopy">ozone-ec.S3.Objectcopy</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s10" name="Objectcopys3A">ozone-ec.S3.Objectcopys3A</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s11" name="Objectdelete">ozone-ec.S3.Objectdelete</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s12" name="Objecthead">ozone-ec.S3.Objecthead</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s13" name="Objectmultidelete">ozone-ec.S3.Objectmultidelete</stat>
<stat pass="19" fail="0" skip="0" id="s1-s1-s14" name="Objectputget">ozone-ec.S3.Objectputget</stat>
<stat pass="2" fail="0" skip="0" id="s1-s1-s15" name="S3 Getsecret">ozone-ec.S3.S3 Getsecret</stat>
<stat pass="2" fail="0" skip="0" id="s1-s1-s16" name="Secretgenerate">ozone-ec.S3.Secretgenerate</stat>
<stat pass="2" fail="0" skip="0" id="s1-s1-s17" name="Secretrevoke">ozone-ec.S3.Secretrevoke</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s18" name="Webui">ozone-ec.S3.Webui</stat>
<stat pass="12" fail="0" skip="0" id="s1-s2" name="Basic">ozone-ec.Basic</stat>
<stat pass="5" fail="0" skip="0" id="s1-s3" name="read-4-datanodes">ozone-ec.read-4-datanodes</stat>
<stat pass="5" fail="0" skip="0" id="s1-s4" name="read-3-datanodes">ozone-ec.read-3-datanodes</stat>
<stat pass="1" fail="0" skip="0" id="s1-s5" name="EC-recovery">ozone-ec.EC-recovery</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
