<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 7.0 (Python 3.8.10 on linux)" generated="2024-01-11T17:13:25.117510" rpa="false" schemaversion="5">
<suite id="s1" name="upgrade">
<suite id="s1-s1" name="1.3.0-1.4.0-1-original-check-finalization" source="/opt/ozone/smoketest/upgrade/check-finalization.robot">
<test id="s1-s1-t1" name="Check OM Finalized" line="23">
<kw name="Run Keyword If" owner="BuiltIn" type="SETUP">
<kw name="Kinit test user" owner="commonlib">
<kw name="Get test user principal" owner="commonlib">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-01-11T17:06:13.206000" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg time="2024-01-11T17:06:13.208000" level="INFO">${rc} = 0</msg>
<msg time="2024-01-11T17:06:13.208000" level="INFO">${output} = scm</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-01-11T17:06:13.204000" elapsed="0.004000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-01-11T17:06:13.209000" level="INFO">scm</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-01-11T17:06:13.209000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-01-11T17:06:13.209000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-01-11T17:06:13.209000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-01-11T17:06:13.203000" elapsed="0.007000"/>
</kw>
<msg time="2024-01-11T17:06:13.210000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-01-11T17:06:13.203000" elapsed="0.008000"/>
</kw>
<msg time="2024-01-11T17:06:13.211000" level="INFO">${instance} = scm</msg>
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<status status="PASS" start="2024-01-11T17:06:13.202000" elapsed="0.009000"/>
</kw>
<msg time="2024-01-11T17:06:13.211000" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<var>${TEST_USER}</var>
<arg>${user}</arg>
<status status="PASS" start="2024-01-11T17:06:13.202000" elapsed="0.009000"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2024-01-11T17:06:13.212000" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2024-01-11T17:06:13.211000" elapsed="0.001000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-01-11T17:06:13.214000" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg time="2024-01-11T17:06:13.248000" level="INFO">${rc} = 0</msg>
<msg time="2024-01-11T17:06:13.248000" level="INFO">${output} = </msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-01-11T17:06:13.213000" elapsed="0.035000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-01-11T17:06:13.248000" level="INFO"/>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-01-11T17:06:13.248000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-01-11T17:06:13.249000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-01-11T17:06:13.248000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-01-11T17:06:13.212000" elapsed="0.037000"/>
</kw>
<msg time="2024-01-11T17:06:13.249000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-01-11T17:06:13.212000" elapsed="0.037000"/>
</kw>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<status status="PASS" start="2024-01-11T17:06:13.212000" elapsed="0.038000"/>
</kw>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-01-11T17:06:13.212000" elapsed="0.038000"/>
</kw>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<status status="PASS" start="2024-01-11T17:06:13.201000" elapsed="0.049000"/>
</kw>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-01-11T17:06:13.201000" elapsed="0.049000"/>
</kw>
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-01-11T17:06:13.252000" level="INFO">Running command 'env 2&gt;&amp;1'.</msg>
<msg time="2024-01-11T17:06:13.253000" level="INFO">${rc} = 0</msg>
<msg time="2024-01-11T17:06:13.253000" level="INFO">${output} = OZONE-SITE.XML_ozone.httpfs.http.auth.kerberos.principal=HTTP/httpfs@EXAMPLE.COM
CORE-SITE.XML_hadoop.security.authentication=kerberos
OZONE-SITE.XML_ozone.recon.db.dir=/data/metadata/recon
OZONE-SITE...</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-01-11T17:06:13.251000" elapsed="0.002000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-01-11T17:06:13.254000" level="INFO">OZONE-SITE.XML_ozone.httpfs.http.auth.kerberos.principal=HTTP/httpfs@EXAMPLE.COM
CORE-SITE.XML_hadoop.security.authentication=kerberos
OZONE-SITE.XML_ozone.recon.db.dir=/data/metadata/recon
OZONE-SITE.XML_ozone.client.failover.max.attempts=6
OZONE-SITE.XML_ozone.s3g.kerberos.principal=s3g/s3g@EXAMPLE.COM
KMS-SITE.XML_hadoop.kms.proxyuser.s3g.users=*
HOSTNAME=scm1.org
HADOOP-POLICY.XML_hdds.security.client.scm.certificate.protocol.acl=*
OZONE-SITE.XML_hdds.grpc.tls.enabled=true
OZONE-SITE.XML_hdds.scm.http.auth.kerberos.principal=HTTP/scm@EXAMPLE.COM
OZONE-SITE.XML_ozone.s3.administrators=testuser,s3g
OZONE-SITE.XML_ozone.administrators=testuser,recon,om
OZONE-SITE.XML_ozone.recon.kerberos.principal=recon/recon@EXAMPLE.COM
OZONE-SITE.XML_hdds.scm.kerberos.keytab.file=/etc/security/keytabs/scm.keytab
HTTPFS-SITE.XML_httpfs.hadoop.authentication.type=kerberos
OZONE-SITE.XML_ozone.http.filter.initializers=org.apache.hadoop.security.AuthenticationFilterInitializer
OZONE-SITE.XML_ozone.httpfs.kerberos.principal=httpfs/httpfs@EXAMPLE.COM
CORE-SITE.XML_dfs.data.transfer.protection=authentication
OZONE-SITE.XML_ozone.recon.address=recon:9891
OZONE-SITE.XML_ozone.server.default.replication=3
HADOOP-POLICY.XML_hdds.security.client.scm.container.protocol.acl=*
OZONE-SITE.XML_ozone.acl.authorizer.class=org.apache.hadoop.ozone.security.acl.OzoneNativeAuthorizer
HDFS-SITE.XML_dfs.web.authentication.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
OZONE-SITE.XML_hdds.secret.key.expiry.duration=1h
OZONE-SITE.XML_hdds.scm.kerberos.principal=scm/scm@EXAMPLE.COM
OZONE_LOG_DIR=/var/log/hadoop
LD_LIBRARY_PATH=/usr/local/lib
OZONE-SITE.XML_ozone.om.nodes.omservice=om1,om2,om3
ENSURE_SCM_INITIALIZED=/data/metadata/scm/current/VERSION
HTTPFS-SITE.XML_hadoop.http.authentication.kerberos.principal=HTTP/httpfs@EXAMPLE.COM
OZONE-SITE.XML_ozone.s3g.http.auth.type=kerberos
HADOOP-POLICY.XML_ozone.om.security.client.protocol.acl=*
OZONE-SITE.XML_ozone.filesystem.snapshot.enabled=true
OM_SERVICE_ID=omservice
OZONE-SITE.XML_ozone.recon.om.snapshot.task.interval.delay=1m
CORE-SITE.XML_hadoop.http.authentication.simple.anonymous.allowed=false
HTTPFS-SITE.XML_httpfs.hadoop.authentication.kerberos.principal=httpfs/httpfs@EXAMPLE.COM
HADOOP-POLICY.XML_hdds.security.client.scm.block.protocol.acl=*
OZONE-SITE.XML_hdds.datanode.http.auth.kerberos.principal=HTTP/db@EXAMPLE.COM
OZONE-SITE.XML_hdds.scm.wait.time.after.safemode.exit=5s
KMS-SITE.XML_hadoop.kms.proxyuser.s3g.groups=*
OZONE-SITE.XML_hdds.scm.http.auth.type=kerberos
OZONE-SITE.XML_hdds.container.token.enabled=true
CORE-SITE.XML_hadoop.security.auth_to_local=DEFAULT
OZONE-SITE.XML_ozone.httpfs.http.auth.type=kerberos
OZONE-SITE.XML_ozone.security.enabled=true
OZONE-SITE.XML_ozone.metadata.dirs=/data/metadata
OZONE-SITE.XML_ozone.httpfs.http.auth.kerberos.keytab=/etc/security/keytabs/httpfs.keytab
OZONE-SITE.XML_ozone.security.http.kerberos.enabled=true
PATH=/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin
OZONE-SITE.XML_ozone.httpfs.kerberos.keytab.file=/etc/security/keytabs/httpfs.keytab
PWD=/opt/hadoop
OZONE-SITE.XML_ozone.acl.enabled=true
HDFS-SITE.XML_dfs.datanode.kerberos.principal=dn/dn@EXAMPLE.COM
OZONE-SITE.XML_ozone.om.kerberos.principal=om/om@EXAMPLE.COM
OZONE-SITE.XML_ozone.scm.container.size=1GB
JAVA_HOME=/usr/lib/jvm/jre/
OZONE-SITE.XML_hdds.scm.http.auth.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
CORE-SITE.XML_hadoop.proxyuser.httpfs.groups=*
OZONE-SITE.XML_hdds.scm.safemode.min.datanode=3
OZONE-SITE.XML_ozone.scm.pipeline.creation.interval=30s
OZONE-SITE.XML_ozone.om.service.ids=omservice
OZONE-SITE.XML_ozone.s3g.http.auth.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
OZONE-SITE.XML_hdds.datanode.http.auth.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
HDFS-SITE.XML_dfs.datanode.kerberos.keytab.file=/etc/security/keytabs/dn.keytab
OZONE-SITE.XML_ozone.om.kerberos.keytab.file=/etc/security/keytabs/om.keytab
OZONE-SITE.XML_hdds.secret.key.rotate.check.duration=1m
OZONE-SITE.XML_ozone.s3g.kerberos.keytab.file=/etc/security/keytabs/s3g.keytab
CORE-SITE.XML_hadoop.http.authentication.kerberos.principal=HTTP/ozone@EXAMPLE.COM
OZONE-SITE.XML_ozone.om.http.auth.kerberos.principal=HTTP/om@EXAMPLE.COM
OZONE-SITE.XML_ozone.recon.http.auth.type=kerberos
OZONE-SITE.XML_ozone.s3g.secret.http.auth.type=kerberos
OZONE-SITE.XML_ozone.scm.pipeline.allocated.timeout=2m
HTTPFS-SITE.XML_hadoop.http.authentication.kerberos.keytab=/etc/security/keytabs/httpfs.keytab
OZONE-SITE.XML_ozone.scm.primordial.node.id=scm1
OZONE_DATANODE_SECURE_USER=root
OZONE-SITE.XML_ozone.scm.pipeline.owner.container.count=1
OZONE_UPGRADE_FROM=1.3.0
OZONE-SITE.XML_ozone.scm.pipeline.scrub.interval=1m
WAITFOR=kdc:88
CORE-SITE.XML_hadoop.http.authentication.type=kerberos
OZONE-SITE.XML_ozone.recon.http.auth.kerberos.principal=HTTP/recon@EXAMPLE.COM
OZONE-SITE.XML_ozone.om.http.auth.type=kerberos
OZONE-SITE.XML_hdds.secret.key.rotate.duration=5m
SHLVL=1
HOME=/opt/hadoop
OZONE_CONF_DIR=/etc/hadoop
KMS-SITE.XML_hadoop.kms.proxyuser.s3g.hosts=*
OZONE-SITE.XML_ozone.om.ratis.enable=true
OZONE-SITE.XML_ozone.recon.http.auth.kerberos.keytab=/etc/security/keytabs/recon.keytab
no_proxy=om1,om2,om3,scm1,scm2,scm3,s3g,kdc,localhost,127.0.0.1
HDFS-SITE.XML_dfs.web.authentication.kerberos.principal=HTTP/ozone@EXAMPLE.COM
HTTPFS-SITE.XML_httpfs.hadoop.authentication.kerberos.keytab=/etc/security/keytabs/httpfs.keytab
OZONE-SITE.XML_hdds.datanode.dir=/data/hdds
OZONE-SITE.XML_ozone.s3g.secret.http.enabled=true
OZONE-SITE.XML_ozone.scm.nodes.scmservice=scm1,scm2,scm3
CORE-SITE.XML_hadoop.http.authentication.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
OZONE-SITE.XML_ozone.om.http.auth.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
OZONE-SITE.XML_ozone.scm.datanode.id.dir=/data
OZONE_UPGRADE_TO=1.4.0
HTTPFS-SITE.XML_hadoop.http.authentication.type=kerberos
CORE-SITE.XML_hadoop.http.authentication.signature.secret.file=/etc/security/http_secret
OZONE-SITE.XML_ozone.s3g.http.auth.kerberos.principal=HTTP/s3g@EXAMPLE.COM
OZONE-SITE.XML_ozone.scm.service.ids=scmservice
OZONE-SITE.XML_ozone.om.address.omservice.om3=om3
OZONE-SITE.XML_ozone.scm.address.scmservice.scm1=scm1.org
OZONE-SITE.XML_ozone.om.address.omservice.om2=om2
OZONE-SITE.XML_ozone.recon.kerberos.keytab.file=/etc/security/keytabs/recon.keytab
OZONE-SITE.XML_ozone.scm.address.scmservice.scm2=scm2.org
OZONE-SITE.XML_ozone.om.address.omservice.om1=om1
OZONE-SITE.XML_hdds.block.token.enabled=true
CORE-SITE.XML_hadoop.proxyuser.httpfs.hosts=*
OZONE-SITE.XML_ozone.scm.ratis.enable=true
OZONE-SITE.XML_ozone.scm.address.scmservice.scm3=scm3.org
OZONE-SITE.XML_hdds.datanode.http.auth.type=kerberos
HADOOP-POLICY.XML_hdds.security.client.datanode.container.protocol.acl=*
CORE-SITE.XML_hadoop.security.key.provider.path=kms://http@kms:9600/kms
OZONE-SITE.XML_hdds.datanode.volume.min.free.space=100MB
CORE-SITE.XML_hadoop.security.authorization=true
_=/usr/bin/env</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-01-11T17:06:13.254000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-01-11T17:06:13.255000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-01-11T17:06:13.254000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-01-11T17:06:13.250000" elapsed="0.005000"/>
</kw>
<msg time="2024-01-11T17:06:13.255000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-01-11T17:06:13.250000" elapsed="0.005000"/>
</kw>
<msg time="2024-01-11T17:06:13.256000" level="INFO">${result} = OZONE-SITE.XML_ozone.httpfs.http.auth.kerberos.principal=HTTP/httpfs@EXAMPLE.COM
CORE-SITE.XML_hadoop.security.authentication=kerberos
OZONE-SITE.XML_ozone.recon.db.dir=/data/metadata/recon
OZONE-SITE...</msg>
<var>${result}</var>
<arg>env</arg>
<status status="PASS" start="2024-01-11T17:06:13.250000" elapsed="0.006000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-01-11T17:06:13.256000" level="INFO">OZONE-SITE.XML_ozone.httpfs.http.auth.kerberos.principal=HTTP/httpfs@EXAMPLE.COM
CORE-SITE.XML_hadoop.security.authentication=kerberos
OZONE-SITE.XML_ozone.recon.db.dir=/data/metadata/recon
OZONE-SITE.XML_ozone.client.failover.max.attempts=6
OZONE-SITE.XML_ozone.s3g.kerberos.principal=s3g/s3g@EXAMPLE.COM
KMS-SITE.XML_hadoop.kms.proxyuser.s3g.users=*
HOSTNAME=scm1.org
HADOOP-POLICY.XML_hdds.security.client.scm.certificate.protocol.acl=*
OZONE-SITE.XML_hdds.grpc.tls.enabled=true
OZONE-SITE.XML_hdds.scm.http.auth.kerberos.principal=HTTP/scm@EXAMPLE.COM
OZONE-SITE.XML_ozone.s3.administrators=testuser,s3g
OZONE-SITE.XML_ozone.administrators=testuser,recon,om
OZONE-SITE.XML_ozone.recon.kerberos.principal=recon/recon@EXAMPLE.COM
OZONE-SITE.XML_hdds.scm.kerberos.keytab.file=/etc/security/keytabs/scm.keytab
HTTPFS-SITE.XML_httpfs.hadoop.authentication.type=kerberos
OZONE-SITE.XML_ozone.http.filter.initializers=org.apache.hadoop.security.AuthenticationFilterInitializer
OZONE-SITE.XML_ozone.httpfs.kerberos.principal=httpfs/httpfs@EXAMPLE.COM
CORE-SITE.XML_dfs.data.transfer.protection=authentication
OZONE-SITE.XML_ozone.recon.address=recon:9891
OZONE-SITE.XML_ozone.server.default.replication=3
HADOOP-POLICY.XML_hdds.security.client.scm.container.protocol.acl=*
OZONE-SITE.XML_ozone.acl.authorizer.class=org.apache.hadoop.ozone.security.acl.OzoneNativeAuthorizer
HDFS-SITE.XML_dfs.web.authentication.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
OZONE-SITE.XML_hdds.secret.key.expiry.duration=1h
OZONE-SITE.XML_hdds.scm.kerberos.principal=scm/scm@EXAMPLE.COM
OZONE_LOG_DIR=/var/log/hadoop
LD_LIBRARY_PATH=/usr/local/lib
OZONE-SITE.XML_ozone.om.nodes.omservice=om1,om2,om3
ENSURE_SCM_INITIALIZED=/data/metadata/scm/current/VERSION
HTTPFS-SITE.XML_hadoop.http.authentication.kerberos.principal=HTTP/httpfs@EXAMPLE.COM
OZONE-SITE.XML_ozone.s3g.http.auth.type=kerberos
HADOOP-POLICY.XML_ozone.om.security.client.protocol.acl=*
OZONE-SITE.XML_ozone.filesystem.snapshot.enabled=true
OM_SERVICE_ID=omservice
OZONE-SITE.XML_ozone.recon.om.snapshot.task.interval.delay=1m
CORE-SITE.XML_hadoop.http.authentication.simple.anonymous.allowed=false
HTTPFS-SITE.XML_httpfs.hadoop.authentication.kerberos.principal=httpfs/httpfs@EXAMPLE.COM
HADOOP-POLICY.XML_hdds.security.client.scm.block.protocol.acl=*
OZONE-SITE.XML_hdds.datanode.http.auth.kerberos.principal=HTTP/db@EXAMPLE.COM
OZONE-SITE.XML_hdds.scm.wait.time.after.safemode.exit=5s
KMS-SITE.XML_hadoop.kms.proxyuser.s3g.groups=*
OZONE-SITE.XML_hdds.scm.http.auth.type=kerberos
OZONE-SITE.XML_hdds.container.token.enabled=true
CORE-SITE.XML_hadoop.security.auth_to_local=DEFAULT
OZONE-SITE.XML_ozone.httpfs.http.auth.type=kerberos
OZONE-SITE.XML_ozone.security.enabled=true
OZONE-SITE.XML_ozone.metadata.dirs=/data/metadata
OZONE-SITE.XML_ozone.httpfs.http.auth.kerberos.keytab=/etc/security/keytabs/httpfs.keytab
OZONE-SITE.XML_ozone.security.http.kerberos.enabled=true
PATH=/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin
OZONE-SITE.XML_ozone.httpfs.kerberos.keytab.file=/etc/security/keytabs/httpfs.keytab
PWD=/opt/hadoop
OZONE-SITE.XML_ozone.acl.enabled=true
HDFS-SITE.XML_dfs.datanode.kerberos.principal=dn/dn@EXAMPLE.COM
OZONE-SITE.XML_ozone.om.kerberos.principal=om/om@EXAMPLE.COM
OZONE-SITE.XML_ozone.scm.container.size=1GB
JAVA_HOME=/usr/lib/jvm/jre/
OZONE-SITE.XML_hdds.scm.http.auth.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
CORE-SITE.XML_hadoop.proxyuser.httpfs.groups=*
OZONE-SITE.XML_hdds.scm.safemode.min.datanode=3
OZONE-SITE.XML_ozone.scm.pipeline.creation.interval=30s
OZONE-SITE.XML_ozone.om.service.ids=omservice
OZONE-SITE.XML_ozone.s3g.http.auth.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
OZONE-SITE.XML_hdds.datanode.http.auth.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
HDFS-SITE.XML_dfs.datanode.kerberos.keytab.file=/etc/security/keytabs/dn.keytab
OZONE-SITE.XML_ozone.om.kerberos.keytab.file=/etc/security/keytabs/om.keytab
OZONE-SITE.XML_hdds.secret.key.rotate.check.duration=1m
OZONE-SITE.XML_ozone.s3g.kerberos.keytab.file=/etc/security/keytabs/s3g.keytab
CORE-SITE.XML_hadoop.http.authentication.kerberos.principal=HTTP/ozone@EXAMPLE.COM
OZONE-SITE.XML_ozone.om.http.auth.kerberos.principal=HTTP/om@EXAMPLE.COM
OZONE-SITE.XML_ozone.recon.http.auth.type=kerberos
OZONE-SITE.XML_ozone.s3g.secret.http.auth.type=kerberos
OZONE-SITE.XML_ozone.scm.pipeline.allocated.timeout=2m
HTTPFS-SITE.XML_hadoop.http.authentication.kerberos.keytab=/etc/security/keytabs/httpfs.keytab
OZONE-SITE.XML_ozone.scm.primordial.node.id=scm1
OZONE_DATANODE_SECURE_USER=root
OZONE-SITE.XML_ozone.scm.pipeline.owner.container.count=1
OZONE_UPGRADE_FROM=1.3.0
OZONE-SITE.XML_ozone.scm.pipeline.scrub.interval=1m
WAITFOR=kdc:88
CORE-SITE.XML_hadoop.http.authentication.type=kerberos
OZONE-SITE.XML_ozone.recon.http.auth.kerberos.principal=HTTP/recon@EXAMPLE.COM
OZONE-SITE.XML_ozone.om.http.auth.type=kerberos
OZONE-SITE.XML_hdds.secret.key.rotate.duration=5m
SHLVL=1
HOME=/opt/hadoop
OZONE_CONF_DIR=/etc/hadoop
KMS-SITE.XML_hadoop.kms.proxyuser.s3g.hosts=*
OZONE-SITE.XML_ozone.om.ratis.enable=true
OZONE-SITE.XML_ozone.recon.http.auth.kerberos.keytab=/etc/security/keytabs/recon.keytab
no_proxy=om1,om2,om3,scm1,scm2,scm3,s3g,kdc,localhost,127.0.0.1
HDFS-SITE.XML_dfs.web.authentication.kerberos.principal=HTTP/ozone@EXAMPLE.COM
HTTPFS-SITE.XML_httpfs.hadoop.authentication.kerberos.keytab=/etc/security/keytabs/httpfs.keytab
OZONE-SITE.XML_hdds.datanode.dir=/data/hdds
OZONE-SITE.XML_ozone.s3g.secret.http.enabled=true
OZONE-SITE.XML_ozone.scm.nodes.scmservice=scm1,scm2,scm3
CORE-SITE.XML_hadoop.http.authentication.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
OZONE-SITE.XML_ozone.om.http.auth.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
OZONE-SITE.XML_ozone.scm.datanode.id.dir=/data
OZONE_UPGRADE_TO=1.4.0
HTTPFS-SITE.XML_hadoop.http.authentication.type=kerberos
CORE-SITE.XML_hadoop.http.authentication.signature.secret.file=/etc/security/http_secret
OZONE-SITE.XML_ozone.s3g.http.auth.kerberos.principal=HTTP/s3g@EXAMPLE.COM
OZONE-SITE.XML_ozone.scm.service.ids=scmservice
OZONE-SITE.XML_ozone.om.address.omservice.om3=om3
OZONE-SITE.XML_ozone.scm.address.scmservice.scm1=scm1.org
OZONE-SITE.XML_ozone.om.address.omservice.om2=om2
OZONE-SITE.XML_ozone.recon.kerberos.keytab.file=/etc/security/keytabs/recon.keytab
OZONE-SITE.XML_ozone.scm.address.scmservice.scm2=scm2.org
OZONE-SITE.XML_ozone.om.address.omservice.om1=om1
OZONE-SITE.XML_hdds.block.token.enabled=true
CORE-SITE.XML_hadoop.proxyuser.httpfs.hosts=*
OZONE-SITE.XML_ozone.scm.ratis.enable=true
OZONE-SITE.XML_ozone.scm.address.scmservice.scm3=scm3.org
OZONE-SITE.XML_hdds.datanode.http.auth.type=kerberos
HADOOP-POLICY.XML_hdds.security.client.datanode.container.protocol.acl=*
CORE-SITE.XML_hadoop.security.key.provider.path=kms://http@kms:9600/kms
OZONE-SITE.XML_hdds.datanode.volume.min.free.space=100MB
CORE-SITE.XML_hadoop.security.authorization=true
_=/usr/bin/env</msg>
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-01-11T17:06:13.256000" elapsed="0.000000"/>
</kw>
<kw name="Pass Execution If" owner="BuiltIn">
<arg>'%{OZONE_UPGRADE_FROM}' == '1.1.0'</arg>
<arg>OM finalization not supported in version %{OZONE_UPGRADE_FROM}</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" start="2024-01-11T17:06:13.256000" elapsed="0.000000"/>
</kw>
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-01-11T17:06:13.258000" level="INFO">Running command 'ozone admin om finalizationstatus 2&gt;&amp;1'.</msg>
<msg time="2024-01-11T17:06:15.388000" level="INFO">${rc} = 0</msg>
<msg time="2024-01-11T17:06:15.388000" level="INFO">${output} = ALREADY_FINALIZED</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-01-11T17:06:13.257000" elapsed="2.131000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-01-11T17:06:15.389000" level="INFO">ALREADY_FINALIZED</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-01-11T17:06:15.388000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-01-11T17:06:15.389000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-01-11T17:06:15.389000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-01-11T17:06:13.257000" elapsed="2.132000"/>
</kw>
<msg time="2024-01-11T17:06:15.390000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-01-11T17:06:13.257000" elapsed="2.133000"/>
</kw>
<msg time="2024-01-11T17:06:15.390000" level="INFO">${result} = ALREADY_FINALIZED</msg>
<var>${result}</var>
<arg>ozone admin om finalizationstatus</arg>
<status status="PASS" start="2024-01-11T17:06:13.257000" elapsed="2.133000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-01-11T17:06:15.390000" level="INFO">ALREADY_FINALIZED</msg>
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-01-11T17:06:15.390000" elapsed="0.000000"/>
</kw>
<kw name="Should Contain Any" owner="BuiltIn">
<arg>${result}</arg>
<arg>ALREADY_FINALIZED</arg>
<arg>FINALIZATION_DONE</arg>
<doc>Fails if ``container`` does not contain any of the ``*items``.</doc>
<status status="PASS" start="2024-01-11T17:06:15.391000" elapsed="0.000000"/>
</kw>
<tag>finalized</tag>
<tag>om</tag>
<timeout value="10 minutes"/>
<status status="PASS" start="2024-01-11T17:06:13.200000" elapsed="2.191000"/>
</test>
<test id="s1-s1-t2" name="Check SCM Finalized" line="32">
<kw name="Run Keyword If" owner="BuiltIn" type="SETUP">
<kw name="Kinit test user" owner="commonlib">
<kw name="Get test user principal" owner="commonlib">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-01-11T17:06:15.395000" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg time="2024-01-11T17:06:15.397000" level="INFO">${rc} = 0</msg>
<msg time="2024-01-11T17:06:15.397000" level="INFO">${output} = scm</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-01-11T17:06:15.394000" elapsed="0.003000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-01-11T17:06:15.398000" level="INFO">scm</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-01-11T17:06:15.397000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-01-11T17:06:15.398000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-01-11T17:06:15.398000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-01-11T17:06:15.394000" elapsed="0.005000"/>
</kw>
<msg time="2024-01-11T17:06:15.399000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-01-11T17:06:15.393000" elapsed="0.006000"/>
</kw>
<msg time="2024-01-11T17:06:15.399000" level="INFO">${instance} = scm</msg>
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<status status="PASS" start="2024-01-11T17:06:15.393000" elapsed="0.006000"/>
</kw>
<msg time="2024-01-11T17:06:15.399000" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<var>${TEST_USER}</var>
<arg>${user}</arg>
<status status="PASS" start="2024-01-11T17:06:15.393000" elapsed="0.007000"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2024-01-11T17:06:15.400000" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2024-01-11T17:06:15.400000" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-01-11T17:06:15.402000" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg time="2024-01-11T17:06:15.426000" level="INFO">${rc} = 0</msg>
<msg time="2024-01-11T17:06:15.426000" level="INFO">${output} = </msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-01-11T17:06:15.401000" elapsed="0.025000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-01-11T17:06:15.427000" level="INFO"/>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-01-11T17:06:15.426000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-01-11T17:06:15.427000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-01-11T17:06:15.427000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-01-11T17:06:15.401000" elapsed="0.026000"/>
</kw>
<msg time="2024-01-11T17:06:15.427000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-01-11T17:06:15.401000" elapsed="0.027000"/>
</kw>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<status status="PASS" start="2024-01-11T17:06:15.400000" elapsed="0.028000"/>
</kw>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-01-11T17:06:15.400000" elapsed="0.028000"/>
</kw>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<status status="PASS" start="2024-01-11T17:06:15.392000" elapsed="0.036000"/>
</kw>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-01-11T17:06:15.392000" elapsed="0.036000"/>
</kw>
<kw name="Pass Execution If" owner="BuiltIn">
<arg>'%{OZONE_UPGRADE_FROM}' == '1.1.0'</arg>
<arg>HDDS finalization not supported in version %{OZONE_UPGRADE_FROM}</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" start="2024-01-11T17:06:15.429000" elapsed="0.000000"/>
</kw>
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-01-11T17:06:15.431000" level="INFO">Running command 'ozone admin scm finalizationstatus 2&gt;&amp;1'.</msg>
<msg time="2024-01-11T17:06:17.566000" level="INFO">${rc} = 0</msg>
<msg time="2024-01-11T17:06:17.566000" level="INFO">${output} = FINALIZATION_DONE</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-01-11T17:06:15.430000" elapsed="2.136000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-01-11T17:06:17.567000" level="INFO">FINALIZATION_DONE</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-01-11T17:06:17.567000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-01-11T17:06:17.568000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-01-11T17:06:17.567000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-01-11T17:06:15.430000" elapsed="2.138000"/>
</kw>
<msg time="2024-01-11T17:06:17.568000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-01-11T17:06:15.429000" elapsed="2.139000"/>
</kw>
<msg time="2024-01-11T17:06:17.569000" level="INFO">${result} = FINALIZATION_DONE</msg>
<var>${result}</var>
<arg>ozone admin scm finalizationstatus</arg>
<status status="PASS" start="2024-01-11T17:06:15.429000" elapsed="2.140000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-01-11T17:06:17.569000" level="INFO">FINALIZATION_DONE</msg>
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-01-11T17:06:17.569000" elapsed="0.000000"/>
</kw>
<kw name="Should Contain Any" owner="BuiltIn">
<arg>${result}</arg>
<arg>ALREADY_FINALIZED</arg>
<arg>FINALIZATION_DONE</arg>
<doc>Fails if ``container`` does not contain any of the ``*items``.</doc>
<status status="PASS" start="2024-01-11T17:06:17.569000" elapsed="0.000000"/>
</kw>
<tag>finalized</tag>
<tag>scm</tag>
<timeout value="10 minutes"/>
<status status="PASS" start="2024-01-11T17:06:15.392000" elapsed="2.178000"/>
</test>
<doc>Finalize Upgrade of the Ozone cluster</doc>
<status status="PASS" start="2024-01-11T17:06:13.162000" elapsed="4.408000"/>
</suite>
<suite id="s1-s2" name="1.3.0-1.4.0-1-original-generate-old1" source="/opt/ozone/smoketest/upgrade/generate.robot">
<kw name="Run Keyword If" owner="BuiltIn" type="SETUP">
<kw name="Kinit test user" owner="commonlib">
<kw name="Get test user principal" owner="commonlib">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-01-11T17:06:20.510000" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg time="2024-01-11T17:06:20.513000" level="INFO">${rc} = 0</msg>
<msg time="2024-01-11T17:06:20.513000" level="INFO">${output} = scm</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-01-11T17:06:20.507000" elapsed="0.006000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-01-11T17:06:20.513000" level="INFO">scm</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-01-11T17:06:20.513000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-01-11T17:06:20.514000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-01-11T17:06:20.513000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-01-11T17:06:20.506000" elapsed="0.008000"/>
</kw>
<msg time="2024-01-11T17:06:20.514000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-01-11T17:06:20.506000" elapsed="0.009000"/>
</kw>
<msg time="2024-01-11T17:06:20.515000" level="INFO">${instance} = scm</msg>
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<status status="PASS" start="2024-01-11T17:06:20.506000" elapsed="0.009000"/>
</kw>
<msg time="2024-01-11T17:06:20.516000" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<var>${TEST_USER}</var>
<arg>${user}</arg>
<status status="PASS" start="2024-01-11T17:06:20.506000" elapsed="0.010000"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2024-01-11T17:06:20.516000" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2024-01-11T17:06:20.516000" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-01-11T17:06:20.519000" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg time="2024-01-11T17:06:20.548000" level="INFO">${rc} = 0</msg>
<msg time="2024-01-11T17:06:20.548000" level="INFO">${output} = </msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-01-11T17:06:20.518000" elapsed="0.030000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-01-11T17:06:20.549000" level="INFO"/>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-01-11T17:06:20.549000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-01-11T17:06:20.550000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-01-11T17:06:20.549000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-01-11T17:06:20.517000" elapsed="0.033000"/>
</kw>
<msg time="2024-01-11T17:06:20.550000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-01-11T17:06:20.517000" elapsed="0.033000"/>
</kw>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<status status="PASS" start="2024-01-11T17:06:20.517000" elapsed="0.034000"/>
</kw>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-01-11T17:06:20.516000" elapsed="0.035000"/>
</kw>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<status status="PASS" start="2024-01-11T17:06:20.505000" elapsed="0.046000"/>
</kw>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-01-11T17:06:20.505000" elapsed="0.046000"/>
</kw>
<test id="s1-s2-t1" name="Create a volume and bucket" line="29">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-01-11T17:06:20.555000" level="INFO">Running command 'ozone sh volume create old1-volume 2&gt;&amp;1'.</msg>
<msg time="2024-01-11T17:06:22.825000" level="INFO">${rc} = 0</msg>
<msg time="2024-01-11T17:06:22.826000" level="INFO">${output} = 2024-01-11 17:06:22,736 [main] INFO rpc.RpcClient: Creating Volume: old1-volume, with testuser as owner and space quota set to -1 bytes, counts quota set to -1</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-01-11T17:06:20.553000" elapsed="2.273000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-01-11T17:06:22.827000" level="INFO">2024-01-11 17:06:22,736 [main] INFO rpc.RpcClient: Creating Volume: old1-volume, with testuser as owner and space quota set to -1 bytes, counts quota set to -1</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-01-11T17:06:22.826000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-01-11T17:06:22.827000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-01-11T17:06:22.827000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-01-11T17:06:20.553000" elapsed="2.275000"/>
</kw>
<msg time="2024-01-11T17:06:22.828000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-01-11T17:06:20.553000" elapsed="2.275000"/>
</kw>
<msg time="2024-01-11T17:06:22.829000" level="INFO">${output} = 2024-01-11 17:06:22,736 [main] INFO rpc.RpcClient: Creating Volume: old1-volume, with testuser as owner and space quota set to -1 bytes, counts quota set to -1</msg>
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<status status="PASS" start="2024-01-11T17:06:20.552000" elapsed="2.277000"/>
</kw>
<kw name="Should Not Contain" owner="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" start="2024-01-11T17:06:22.829000" elapsed="0.001000"/>
</kw>
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-01-11T17:06:22.834000" level="INFO">Running command 'ozone sh bucket create /old1-volume/old1-bucket 2&gt;&amp;1'.</msg>
<msg time="2024-01-11T17:06:25.152000" level="INFO">${rc} = 0</msg>
<msg time="2024-01-11T17:06:25.152000" level="INFO">${output} = 2024-01-11 17:06:25,108 [main] INFO rpc.RpcClient: Creating Bucket: old1-volume/old1-bucket, with server-side default bucket layout, testuser as owner, Versioning false, Storage Type set to DISK and E...</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-01-11T17:06:22.831000" elapsed="2.321000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-01-11T17:06:25.153000" level="INFO">2024-01-11 17:06:25,108 [main] INFO rpc.RpcClient: Creating Bucket: old1-volume/old1-bucket, with server-side default bucket layout, testuser as owner, Versioning false, Storage Type set to DISK and Encryption set to false </msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-01-11T17:06:25.153000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-01-11T17:06:25.154000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-01-11T17:06:25.153000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-01-11T17:06:22.831000" elapsed="2.323000"/>
</kw>
<msg time="2024-01-11T17:06:25.154000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-01-11T17:06:22.830000" elapsed="2.324000"/>
</kw>
<msg time="2024-01-11T17:06:25.155000" level="INFO">${output} = 2024-01-11 17:06:25,108 [main] INFO rpc.RpcClient: Creating Bucket: old1-volume/old1-bucket, with server-side default bucket layout, testuser as owner, Versioning false, Storage Type set to DISK and E...</msg>
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<status status="PASS" start="2024-01-11T17:06:22.830000" elapsed="2.325000"/>
</kw>
<kw name="Should Not Contain" owner="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" start="2024-01-11T17:06:25.155000" elapsed="0.000000"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" start="2024-01-11T17:06:20.551000" elapsed="4.604000"/>
</test>
<test id="s1-s2-t2" name="Create key" line="36">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-01-11T17:06:25.158000" level="INFO">Running command 'echo "old1: key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg time="2024-01-11T17:06:25.159000" level="INFO">${rc} = 0</msg>
<msg time="2024-01-11T17:06:25.159000" level="INFO">${output} = </msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-01-11T17:06:25.157000" elapsed="0.002000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-01-11T17:06:25.160000" level="INFO"/>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-01-11T17:06:25.159000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-01-11T17:06:25.160000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-01-11T17:06:25.160000" elapsed="0.000000"/>
</kw>
<arg>echo "${PREFIX}: key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<status status="PASS" start="2024-01-11T17:06:25.156000" elapsed="0.005000"/>
</kw>
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-01-11T17:06:25.163000" level="INFO">Running command 'ozone sh key put /old1-volume/old1-bucket/old1-key /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg time="2024-01-11T17:06:29.636000" level="INFO">${rc} = 0</msg>
<msg time="2024-01-11T17:06:29.636000" level="INFO">${output} = 2024-01-11 17:06:27,938 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-01-11 17:06:28,017 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-01-11T17:06:25.162000" elapsed="4.474000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-01-11T17:06:29.637000" level="INFO">2024-01-11 17:06:27,938 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-01-11 17:06:28,017 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2024-01-11 17:06:28,017 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2024-01-11 17:06:28,235 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-01-11T17:06:29.636000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-01-11T17:06:29.637000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-01-11T17:06:29.637000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-01-11T17:06:25.162000" elapsed="4.476000"/>
</kw>
<msg time="2024-01-11T17:06:29.638000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-01-11T17:06:25.161000" elapsed="4.477000"/>
</kw>
<msg time="2024-01-11T17:06:29.638000" level="INFO">${output} = 2024-01-11 17:06:27,938 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-01-11 17:06:28,017 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/sourcekey</arg>
<status status="PASS" start="2024-01-11T17:06:25.161000" elapsed="4.477000"/>
</kw>
<kw name="Should Not Contain" owner="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" start="2024-01-11T17:06:29.638000" elapsed="0.000000"/>
</kw>
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-01-11T17:06:29.640000" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg time="2024-01-11T17:06:29.642000" level="INFO">${rc} = 0</msg>
<msg time="2024-01-11T17:06:29.642000" level="INFO">${output} = </msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-01-11T17:06:29.639000" elapsed="0.003000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-01-11T17:06:29.643000" level="INFO"/>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-01-11T17:06:29.642000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-01-11T17:06:29.643000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-01-11T17:06:29.643000" elapsed="0.000000"/>
</kw>
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<status status="PASS" start="2024-01-11T17:06:29.639000" elapsed="0.004000"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" start="2024-01-11T17:06:25.156000" elapsed="4.487000"/>
</test>
<test id="s1-s2-t3" name="Create a bucket in s3v volume" line="42">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-01-11T17:06:29.647000" level="INFO">Running command 'ozone sh bucket create /s3v/old1-bucket 2&gt;&amp;1'.</msg>
<msg time="2024-01-11T17:06:31.854000" level="INFO">${rc} = 0</msg>
<msg time="2024-01-11T17:06:31.855000" level="INFO">${output} = 2024-01-11 17:06:31,824 [main] INFO rpc.RpcClient: Creating Bucket: s3v/old1-bucket, with server-side default bucket layout, testuser as owner, Versioning false, Storage Type set to DISK and Encryptio...</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-01-11T17:06:29.646000" elapsed="2.209000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-01-11T17:06:31.855000" level="INFO">2024-01-11 17:06:31,824 [main] INFO rpc.RpcClient: Creating Bucket: s3v/old1-bucket, with server-side default bucket layout, testuser as owner, Versioning false, Storage Type set to DISK and Encryption set to false </msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-01-11T17:06:31.855000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-01-11T17:06:31.856000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-01-11T17:06:31.856000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-01-11T17:06:29.645000" elapsed="2.211000"/>
</kw>
<msg time="2024-01-11T17:06:31.856000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-01-11T17:06:29.645000" elapsed="2.212000"/>
</kw>
<msg time="2024-01-11T17:06:31.857000" level="INFO">${output} = 2024-01-11 17:06:31,824 [main] INFO rpc.RpcClient: Creating Bucket: s3v/old1-bucket, with server-side default bucket layout, testuser as owner, Versioning false, Storage Type set to DISK and Encryptio...</msg>
<var>${output}</var>
<arg>ozone sh bucket create /s3v/${PREFIX}-bucket</arg>
<status status="PASS" start="2024-01-11T17:06:29.645000" elapsed="2.212000"/>
</kw>
<kw name="Should Not Contain" owner="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" start="2024-01-11T17:06:31.857000" elapsed="0.000000"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" start="2024-01-11T17:06:29.644000" elapsed="2.213000"/>
</test>
<test id="s1-s2-t4" name="Create key in the bucket in s3v volume" line="47">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-01-11T17:06:31.860000" level="INFO">Running command 'echo "old1: another key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg time="2024-01-11T17:06:31.862000" level="INFO">${rc} = 0</msg>
<msg time="2024-01-11T17:06:31.862000" level="INFO">${output} = </msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-01-11T17:06:31.859000" elapsed="0.003000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-01-11T17:06:31.862000" level="INFO"/>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-01-11T17:06:31.862000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-01-11T17:06:31.863000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-01-11T17:06:31.862000" elapsed="0.001000"/>
</kw>
<arg>echo "${PREFIX}: another key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<status status="PASS" start="2024-01-11T17:06:31.858000" elapsed="0.005000"/>
</kw>
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-01-11T17:06:31.865000" level="INFO">Running command 'ozone sh key put /s3v/old1-bucket/key1-shell /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg time="2024-01-11T17:06:35.973000" level="INFO">${rc} = 0</msg>
<msg time="2024-01-11T17:06:35.973000" level="INFO">${output} = 2024-01-11 17:06:34,653 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-01-11 17:06:34,721 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-01-11T17:06:31.864000" elapsed="4.109000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-01-11T17:06:35.974000" level="INFO">2024-01-11 17:06:34,653 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-01-11 17:06:34,721 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2024-01-11 17:06:34,721 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2024-01-11 17:06:34,975 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-01-11T17:06:35.974000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-01-11T17:06:35.975000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-01-11T17:06:35.975000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-01-11T17:06:31.864000" elapsed="4.111000"/>
</kw>
<msg time="2024-01-11T17:06:35.975000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-01-11T17:06:31.864000" elapsed="4.112000"/>
</kw>
<msg time="2024-01-11T17:06:35.976000" level="INFO">${output} = 2024-01-11 17:06:34,653 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-01-11 17:06:34,721 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<var>${output}</var>
<arg>ozone sh key put /s3v/${PREFIX}-bucket/key1-shell /tmp/sourcekey</arg>
<status status="PASS" start="2024-01-11T17:06:31.863000" elapsed="4.113000"/>
</kw>
<kw name="Should Not Contain" owner="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" start="2024-01-11T17:06:35.976000" elapsed="0.000000"/>
</kw>
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-01-11T17:06:35.979000" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg time="2024-01-11T17:06:35.980000" level="INFO">${rc} = 0</msg>
<msg time="2024-01-11T17:06:35.980000" level="INFO">${output} = </msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-01-11T17:06:35.977000" elapsed="0.004000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-01-11T17:06:35.982000" level="INFO"/>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-01-11T17:06:35.981000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-01-11T17:06:35.982000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-01-11T17:06:35.982000" elapsed="0.000000"/>
</kw>
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<status status="PASS" start="2024-01-11T17:06:35.976000" elapsed="0.007000"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" start="2024-01-11T17:06:31.858000" elapsed="4.125000"/>
</test>
<test id="s1-s2-t5" name="Try to create a bucket using S3 API" line="53">
<kw name="Setup v4 headers" owner="commonawslib" type="SETUP">
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Kinit test user" owner="commonlib">
<kw name="Get test user principal" owner="commonlib">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-01-11T17:06:35.988000" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg time="2024-01-11T17:06:35.991000" level="INFO">${rc} = 0</msg>
<msg time="2024-01-11T17:06:35.991000" level="INFO">${output} = scm</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-01-11T17:06:35.987000" elapsed="0.004000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-01-11T17:06:35.991000" level="INFO">scm</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-01-11T17:06:35.991000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-01-11T17:06:35.992000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-01-11T17:06:35.991000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-01-11T17:06:35.987000" elapsed="0.005000"/>
</kw>
<msg time="2024-01-11T17:06:35.992000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-01-11T17:06:35.987000" elapsed="0.006000"/>
</kw>
<msg time="2024-01-11T17:06:35.993000" level="INFO">${instance} = scm</msg>
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<status status="PASS" start="2024-01-11T17:06:35.986000" elapsed="0.007000"/>
</kw>
<msg time="2024-01-11T17:06:35.993000" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<var>${TEST_USER}</var>
<arg>${user}</arg>
<status status="PASS" start="2024-01-11T17:06:35.986000" elapsed="0.007000"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2024-01-11T17:06:35.994000" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2024-01-11T17:06:35.993000" elapsed="0.001000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-01-11T17:06:35.996000" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg time="2024-01-11T17:06:36.031000" level="INFO">${rc} = 0</msg>
<msg time="2024-01-11T17:06:36.031000" level="INFO">${output} = </msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-01-11T17:06:35.995000" elapsed="0.036000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-01-11T17:06:36.032000" level="INFO"/>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-01-11T17:06:36.032000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-01-11T17:06:36.033000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-01-11T17:06:36.032000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-01-11T17:06:35.995000" elapsed="0.038000"/>
</kw>
<msg time="2024-01-11T17:06:36.033000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-01-11T17:06:35.994000" elapsed="0.039000"/>
</kw>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<status status="PASS" start="2024-01-11T17:06:35.994000" elapsed="0.040000"/>
</kw>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-01-11T17:06:35.994000" elapsed="0.040000"/>
</kw>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<status status="PASS" start="2024-01-11T17:06:35.985000" elapsed="0.049000"/>
</kw>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-01-11T17:06:35.985000" elapsed="0.049000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Setup secure v4 headers" owner="commonawslib">
<kw name="Execute And Ignore Error" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-01-11T17:06:36.037000" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg time="2024-01-11T17:06:37.922000" level="INFO">${rc} = 0</msg>
<msg time="2024-01-11T17:06:37.922000" level="INFO">${output} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=08d92fb47cab684dc3a6982986ef3907b0003d1567d0d7676bdf7bed47fe0463</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-01-11T17:06:36.035000" elapsed="1.887000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-01-11T17:06:37.923000" level="INFO">awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=08d92fb47cab684dc3a6982986ef3907b0003d1567d0d7676bdf7bed47fe0463</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-01-11T17:06:37.923000" elapsed="0.000000"/>
</kw>
<msg time="2024-01-11T17:06:37.923000" level="INFO">${result} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=08d92fb47cab684dc3a6982986ef3907b0003d1567d0d7676bdf7bed47fe0463</msg>
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<status status="PASS" start="2024-01-11T17:06:36.035000" elapsed="1.888000"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-01-11T17:06:37.924000" level="FAIL">'awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=08d92fb47cab684dc3a6982986ef3907b0003d1567d0d7676bdf7bed47fe0463' does not contain 'S3_SECRET_ALREADY_EXISTS'</msg>
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-01-11T17:06:37.924000" elapsed="0.001000"/>
</kw>
<msg time="2024-01-11T17:06:37.925000" level="INFO">${exists} = False</msg>
<var>${exists}</var>
<arg>Should Contain</arg>
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-01-11T17:06:37.924000" elapsed="0.001000"/>
</kw>
<if>
<branch type="IF" condition="${exists}">
<kw name="Execute" owner="os">
<arg>ozone s3 revokesecret -y ${OM_HA_PARAM}</arg>
<status status="NOT RUN" start="2024-01-11T17:06:37.925000" elapsed="0.000000"/>
</kw>
<kw name="Execute" owner="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<status status="NOT RUN" start="2024-01-11T17:06:37.925000" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-01-11T17:06:37.925000" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-01-11T17:06:37.925000" elapsed="0.000000"/>
</if>
<kw name="Get Regexp Matches" owner="String">
<msg time="2024-01-11T17:06:37.926000" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<status status="PASS" start="2024-01-11T17:06:37.925000" elapsed="0.001000"/>
</kw>
<kw name="Get Variable Value" owner="BuiltIn">
<msg time="2024-01-11T17:06:37.926000" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<status status="PASS" start="2024-01-11T17:06:37.926000" elapsed="0.000000"/>
</kw>
<kw name="Get Regexp Matches" owner="String">
<msg time="2024-01-11T17:06:37.927000" level="INFO">${secret} = ['08d92fb47cab684dc3a6982986ef3907b0003d1567d0d7676bdf7bed47fe0463']</msg>
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<status status="PASS" start="2024-01-11T17:06:37.926000" elapsed="0.001000"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-01-11T17:06:37.928000" level="INFO">${accessKey} = testuser/scm@EXAMPLE.COM</msg>
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-01-11T17:06:37.927000" elapsed="0.001000"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-01-11T17:06:37.929000" level="INFO">${secret} = 08d92fb47cab684dc3a6982986ef3907b0003d1567d0d7676bdf7bed47fe0463</msg>
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-01-11T17:06:37.928000" elapsed="0.001000"/>
</kw>
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-01-11T17:06:37.931000" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg time="2024-01-11T17:06:38.303000" level="INFO">${rc} = 0</msg>
<msg time="2024-01-11T17:06:38.303000" level="INFO">${output} = </msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-01-11T17:06:37.930000" elapsed="0.373000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-01-11T17:06:38.304000" level="INFO"/>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-01-11T17:06:38.303000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-01-11T17:06:38.304000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-01-11T17:06:38.304000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-01-11T17:06:37.929000" elapsed="0.375000"/>
</kw>
<msg time="2024-01-11T17:06:38.305000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-01-11T17:06:37.929000" elapsed="0.376000"/>
</kw>
<arg>aws configure set default.s3.signature_version s3v4</arg>
<status status="PASS" start="2024-01-11T17:06:37.929000" elapsed="0.376000"/>
</kw>
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-01-11T17:06:38.308000" level="INFO">Running command 'aws configure set aws_access_key_id testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg time="2024-01-11T17:06:38.677000" level="INFO">${rc} = 0</msg>
<msg time="2024-01-11T17:06:38.677000" level="INFO">${output} = </msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-01-11T17:06:38.306000" elapsed="0.371000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-01-11T17:06:38.678000" level="INFO"/>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-01-11T17:06:38.678000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-01-11T17:06:38.679000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-01-11T17:06:38.678000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-01-11T17:06:38.306000" elapsed="0.373000"/>
</kw>
<msg time="2024-01-11T17:06:38.679000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-01-11T17:06:38.306000" elapsed="0.373000"/>
</kw>
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<status status="PASS" start="2024-01-11T17:06:38.305000" elapsed="0.374000"/>
</kw>
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-01-11T17:06:38.682000" level="INFO">Running command 'aws configure set aws_secret_access_key 08d92fb47cab684dc3a6982986ef3907b0003d1567d0d7676bdf7bed47fe0463 2&gt;&amp;1'.</msg>
<msg time="2024-01-11T17:06:39.154000" level="INFO">${rc} = 0</msg>
<msg time="2024-01-11T17:06:39.154000" level="INFO">${output} = </msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-01-11T17:06:38.681000" elapsed="0.473000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-01-11T17:06:39.155000" level="INFO"/>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-01-11T17:06:39.155000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-01-11T17:06:39.156000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-01-11T17:06:39.155000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-01-11T17:06:38.680000" elapsed="0.476000"/>
</kw>
<msg time="2024-01-11T17:06:39.156000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-01-11T17:06:38.680000" elapsed="0.477000"/>
</kw>
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<status status="PASS" start="2024-01-11T17:06:38.680000" elapsed="0.477000"/>
</kw>
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-01-11T17:06:39.159000" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg time="2024-01-11T17:06:39.518000" level="INFO">${rc} = 0</msg>
<msg time="2024-01-11T17:06:39.518000" level="INFO">${output} = </msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-01-11T17:06:39.158000" elapsed="0.360000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-01-11T17:06:39.519000" level="INFO"/>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-01-11T17:06:39.519000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-01-11T17:06:39.520000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-01-11T17:06:39.519000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-01-11T17:06:39.157000" elapsed="0.363000"/>
</kw>
<msg time="2024-01-11T17:06:39.520000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-01-11T17:06:39.157000" elapsed="0.363000"/>
</kw>
<arg>aws configure set region us-west-1</arg>
<status status="PASS" start="2024-01-11T17:06:39.157000" elapsed="0.364000"/>
</kw>
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-01-11T17:06:39.523000" level="INFO">Running command 'aws configure set default.s3.addressing_style path 2&gt;&amp;1'.</msg>
<msg time="2024-01-11T17:06:39.896000" level="INFO">${rc} = 0</msg>
<msg time="2024-01-11T17:06:39.896000" level="INFO">${output} = </msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-01-11T17:06:39.522000" elapsed="0.374000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-01-11T17:06:39.897000" level="INFO"/>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-01-11T17:06:39.897000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-01-11T17:06:39.898000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-01-11T17:06:39.898000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-01-11T17:06:39.521000" elapsed="0.377000"/>
</kw>
<msg time="2024-01-11T17:06:39.898000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-01-11T17:06:39.521000" elapsed="0.378000"/>
</kw>
<arg>aws configure set default.s3.addressing_style ${OZONE_S3_ADDRESS_STYLE}</arg>
<status status="PASS" start="2024-01-11T17:06:39.521000" elapsed="0.378000"/>
</kw>
<status status="PASS" start="2024-01-11T17:06:36.034000" elapsed="3.865000"/>
</kw>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-01-11T17:06:36.034000" elapsed="3.865000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-01-11T17:06:39.899000" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-01-11T17:06:35.984000" elapsed="3.916000"/>
</kw>
<kw name="Generate Ozone String" owner="commonawslib">
<kw name="Generate Random String" owner="String">
<msg time="2024-01-11T17:06:39.900000" level="INFO">${randStr} = 2516688619</msg>
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<status status="PASS" start="2024-01-11T17:06:39.900000" elapsed="0.000000"/>
</kw>
<msg time="2024-01-11T17:06:39.901000" level="INFO">${random} = ozone-test-2516688619</msg>
<var>${random}</var>
<status status="PASS" start="2024-01-11T17:06:39.900000" elapsed="0.001000"/>
</kw>
<kw name="Create bucket with name" owner="commonawslib">
<kw name="Execute AWSS3APICli" owner="commonawslib">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-01-11T17:06:39.904000" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket old1-bucket-ozone-test-2516688619 2&gt;&amp;1'.</msg>
<msg time="2024-01-11T17:06:41.410000" level="INFO">${rc} = 0</msg>
<msg time="2024-01-11T17:06:41.410000" level="INFO">${output} = {
    "Location": "http://s3g:9878/old1-bucket-ozone-test-2516688619"
}</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-01-11T17:06:39.902000" elapsed="1.509000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-01-11T17:06:41.411000" level="INFO">{
    "Location": "http://s3g:9878/old1-bucket-ozone-test-2516688619"
}</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-01-11T17:06:41.411000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-01-11T17:06:41.412000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-01-11T17:06:41.411000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-01-11T17:06:39.902000" elapsed="1.510000"/>
</kw>
<msg time="2024-01-11T17:06:41.412000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-01-11T17:06:39.902000" elapsed="1.511000"/>
</kw>
<msg time="2024-01-11T17:06:41.413000" level="INFO">${output} = {
    "Location": "http://s3g:9878/old1-bucket-ozone-test-2516688619"
}</msg>
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<status status="PASS" start="2024-01-11T17:06:39.901000" elapsed="1.512000"/>
</kw>
<msg time="2024-01-11T17:06:41.413000" level="INFO">${result} = {
    "Location": "http://s3g:9878/old1-bucket-ozone-test-2516688619"
}</msg>
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<status status="PASS" start="2024-01-11T17:06:39.901000" elapsed="1.512000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-01-11T17:06:41.413000" elapsed="0.000000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-01-11T17:06:41.414000" elapsed="0.000000"/>
</kw>
<msg time="2024-01-11T17:06:41.414000" level="INFO">${output} = None</msg>
<var>${output}</var>
<arg>${PREFIX}-bucket-${random}</arg>
<status status="PASS" start="2024-01-11T17:06:39.901000" elapsed="1.513000"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${output}</arg>
<arg>${None}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2024-01-11T17:06:41.414000" elapsed="0.000000"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" start="2024-01-11T17:06:35.984000" elapsed="5.431000"/>
</test>
<test id="s1-s2-t6" name="Create key using S3 API" line="60">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-01-11T17:06:41.418000" level="INFO">Running command 'echo "old1: key created using S3 API" &gt; /tmp/sourcekey'.</msg>
<msg time="2024-01-11T17:06:41.419000" level="INFO">${rc} = 0</msg>
<msg time="2024-01-11T17:06:41.419000" level="INFO">${output} = </msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-01-11T17:06:41.416000" elapsed="0.003000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-01-11T17:06:41.419000" level="INFO"/>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-01-11T17:06:41.419000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-01-11T17:06:41.420000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-01-11T17:06:41.420000" elapsed="0.000000"/>
</kw>
<arg>echo "${PREFIX}: key created using S3 API" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<status status="PASS" start="2024-01-11T17:06:41.416000" elapsed="0.004000"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" owner="commonawslib">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-01-11T17:06:41.422000" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket old1-bucket --key key2-s3api --body /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg time="2024-01-11T17:06:42.669000" level="INFO">${rc} = 0</msg>
<msg time="2024-01-11T17:06:42.669000" level="INFO">${output} = </msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-01-11T17:06:41.421000" elapsed="1.248000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-01-11T17:06:42.670000" level="INFO"/>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-01-11T17:06:42.670000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-01-11T17:06:42.671000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-01-11T17:06:42.671000" elapsed="0.000000"/>
</kw>
<msg time="2024-01-11T17:06:42.671000" level="INFO">${output} = </msg>
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<status status="PASS" start="2024-01-11T17:06:41.421000" elapsed="1.250000"/>
</kw>
<msg time="2024-01-11T17:06:42.672000" level="INFO">${output} = </msg>
<var>${output}</var>
<arg>put-object --bucket ${PREFIX}-bucket --key key2-s3api --body /tmp/sourcekey</arg>
<arg>0</arg>
<status status="PASS" start="2024-01-11T17:06:41.420000" elapsed="1.252000"/>
</kw>
<kw name="Should Not Contain" owner="BuiltIn">
<arg>${output}</arg>
<arg>error</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" start="2024-01-11T17:06:42.672000" elapsed="0.000000"/>
</kw>
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-01-11T17:06:42.674000" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg time="2024-01-11T17:06:42.676000" level="INFO">${rc} = 0</msg>
<msg time="2024-01-11T17:06:42.676000" level="INFO">${output} = </msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-01-11T17:06:42.673000" elapsed="0.003000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-01-11T17:06:42.676000" level="INFO"/>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-01-11T17:06:42.676000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-01-11T17:06:42.677000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-01-11T17:06:42.677000" elapsed="0.000000"/>
</kw>
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<status status="PASS" start="2024-01-11T17:06:42.672000" elapsed="0.005000"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" start="2024-01-11T17:06:41.415000" elapsed="1.262000"/>
</test>
<doc>Generate data</doc>
<status status="PASS" start="2024-01-11T17:06:20.439000" elapsed="22.240000"/>
</suite>
<suite id="s1-s3" name="1.3.0-1.4.0-1-original-validate-old1" source="/opt/ozone/smoketest/upgrade/validate.robot">
<kw name="Run Keyword If" owner="BuiltIn" type="SETUP">
<kw name="Kinit test user" owner="commonlib">
<kw name="Get test user principal" owner="commonlib">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-01-11T17:06:45.657000" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg time="2024-01-11T17:06:45.660000" level="INFO">${rc} = 0</msg>
<msg time="2024-01-11T17:06:45.660000" level="INFO">${output} = scm</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-01-11T17:06:45.655000" elapsed="0.005000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-01-11T17:06:45.660000" level="INFO">scm</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-01-11T17:06:45.660000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-01-11T17:06:45.661000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-01-11T17:06:45.661000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-01-11T17:06:45.654000" elapsed="0.007000"/>
</kw>
<msg time="2024-01-11T17:06:45.661000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-01-11T17:06:45.654000" elapsed="0.008000"/>
</kw>
<msg time="2024-01-11T17:06:45.662000" level="INFO">${instance} = scm</msg>
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<status status="PASS" start="2024-01-11T17:06:45.654000" elapsed="0.008000"/>
</kw>
<msg time="2024-01-11T17:06:45.663000" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<var>${TEST_USER}</var>
<arg>${user}</arg>
<status status="PASS" start="2024-01-11T17:06:45.653000" elapsed="0.010000"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2024-01-11T17:06:45.663000" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2024-01-11T17:06:45.663000" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-01-11T17:06:45.665000" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg time="2024-01-11T17:06:45.707000" level="INFO">${rc} = 0</msg>
<msg time="2024-01-11T17:06:45.707000" level="INFO">${output} = </msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-01-11T17:06:45.664000" elapsed="0.043000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-01-11T17:06:45.707000" level="INFO"/>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-01-11T17:06:45.707000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-01-11T17:06:45.708000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-01-11T17:06:45.708000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-01-11T17:06:45.664000" elapsed="0.044000"/>
</kw>
<msg time="2024-01-11T17:06:45.708000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-01-11T17:06:45.664000" elapsed="0.044000"/>
</kw>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<status status="PASS" start="2024-01-11T17:06:45.664000" elapsed="0.045000"/>
</kw>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-01-11T17:06:45.663000" elapsed="0.046000"/>
</kw>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<status status="PASS" start="2024-01-11T17:06:45.653000" elapsed="0.056000"/>
</kw>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-01-11T17:06:45.653000" elapsed="0.056000"/>
</kw>
<test id="s1-s3-t1" name="Read data from previously created key" line="29">
<kw name="Generate Random String" owner="String">
<msg time="2024-01-11T17:06:45.710000" level="INFO">${random} = 12904</msg>
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<status status="PASS" start="2024-01-11T17:06:45.710000" elapsed="0.000000"/>
</kw>
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-01-11T17:06:45.713000" level="INFO">Running command 'ozone sh key get /old1-volume/old1-bucket/old1-key /tmp/key-12904 2&gt;&amp;1'.</msg>
<msg time="2024-01-11T17:06:49.597000" level="INFO">${rc} = 0</msg>
<msg time="2024-01-11T17:06:49.597000" level="INFO">${output} = 2024-01-11 17:06:48,471 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-01-11 17:06:48,539 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-01-11T17:06:45.712000" elapsed="3.885000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-01-11T17:06:49.598000" level="INFO">2024-01-11 17:06:48,471 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-01-11 17:06:48,539 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2024-01-11 17:06:48,539 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-01-11T17:06:49.598000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-01-11T17:06:49.599000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-01-11T17:06:49.598000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-01-11T17:06:45.711000" elapsed="3.888000"/>
</kw>
<msg time="2024-01-11T17:06:49.599000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-01-11T17:06:45.711000" elapsed="3.889000"/>
</kw>
<msg time="2024-01-11T17:06:49.600000" level="INFO">${output} = 2024-01-11 17:06:48,471 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-01-11 17:06:48,539 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<status status="PASS" start="2024-01-11T17:06:45.711000" elapsed="3.889000"/>
</kw>
<kw name="Should Not Contain" owner="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" start="2024-01-11T17:06:49.600000" elapsed="0.000000"/>
</kw>
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-01-11T17:06:49.602000" level="INFO">Running command 'cat /tmp/key-12904 2&gt;&amp;1'.</msg>
<msg time="2024-01-11T17:06:49.604000" level="INFO">${rc} = 0</msg>
<msg time="2024-01-11T17:06:49.604000" level="INFO">${output} = old1: key created using Ozone Shell</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-01-11T17:06:49.601000" elapsed="0.003000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-01-11T17:06:49.605000" level="INFO">old1: key created using Ozone Shell</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-01-11T17:06:49.604000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-01-11T17:06:49.605000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-01-11T17:06:49.605000" elapsed="0.000000"/>
</kw>
<msg time="2024-01-11T17:06:49.606000" level="INFO">${output} = old1: key created using Ozone Shell</msg>
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<status status="PASS" start="2024-01-11T17:06:49.600000" elapsed="0.006000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-01-11T17:06:49.606000" elapsed="0.000000"/>
</kw>
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-01-11T17:06:49.608000" level="INFO">Running command 'rm /tmp/key-12904 2&gt;&amp;1'.</msg>
<msg time="2024-01-11T17:06:49.609000" level="INFO">${rc} = 0</msg>
<msg time="2024-01-11T17:06:49.609000" level="INFO">${output} = </msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-01-11T17:06:49.607000" elapsed="0.002000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-01-11T17:06:49.610000" level="INFO"/>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-01-11T17:06:49.610000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-01-11T17:06:49.610000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-01-11T17:06:49.610000" elapsed="0.000000"/>
</kw>
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<status status="PASS" start="2024-01-11T17:06:49.606000" elapsed="0.005000"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" start="2024-01-11T17:06:45.709000" elapsed="3.902000"/>
</test>
<test id="s1-s3-t2" name="Read key created with Ozone Shell using S3 API" line="37">
<kw name="Setup v4 headers" owner="commonawslib" type="SETUP">
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Kinit test user" owner="commonlib">
<kw name="Get test user principal" owner="commonlib">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-01-11T17:06:49.615000" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg time="2024-01-11T17:06:49.617000" level="INFO">${rc} = 0</msg>
<msg time="2024-01-11T17:06:49.617000" level="INFO">${output} = scm</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-01-11T17:06:49.614000" elapsed="0.003000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-01-11T17:06:49.618000" level="INFO">scm</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-01-11T17:06:49.617000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-01-11T17:06:49.618000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-01-11T17:06:49.618000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-01-11T17:06:49.614000" elapsed="0.005000"/>
</kw>
<msg time="2024-01-11T17:06:49.619000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-01-11T17:06:49.614000" elapsed="0.005000"/>
</kw>
<msg time="2024-01-11T17:06:49.619000" level="INFO">${instance} = scm</msg>
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<status status="PASS" start="2024-01-11T17:06:49.613000" elapsed="0.006000"/>
</kw>
<msg time="2024-01-11T17:06:49.619000" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<var>${TEST_USER}</var>
<arg>${user}</arg>
<status status="PASS" start="2024-01-11T17:06:49.613000" elapsed="0.007000"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2024-01-11T17:06:49.620000" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2024-01-11T17:06:49.620000" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-01-11T17:06:49.623000" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg time="2024-01-11T17:06:49.741000" level="INFO">${rc} = 0</msg>
<msg time="2024-01-11T17:06:49.741000" level="INFO">${output} = </msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-01-11T17:06:49.622000" elapsed="0.119000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-01-11T17:06:49.742000" level="INFO"/>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-01-11T17:06:49.742000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-01-11T17:06:49.743000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-01-11T17:06:49.742000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-01-11T17:06:49.621000" elapsed="0.122000"/>
</kw>
<msg time="2024-01-11T17:06:49.743000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-01-11T17:06:49.621000" elapsed="0.123000"/>
</kw>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<status status="PASS" start="2024-01-11T17:06:49.620000" elapsed="0.124000"/>
</kw>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-01-11T17:06:49.620000" elapsed="0.124000"/>
</kw>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<status status="PASS" start="2024-01-11T17:06:49.613000" elapsed="0.131000"/>
</kw>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-01-11T17:06:49.612000" elapsed="0.132000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Setup secure v4 headers" owner="commonawslib">
<kw name="Execute And Ignore Error" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-01-11T17:06:49.747000" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg time="2024-01-11T17:06:51.552000" level="INFO">${rc} = 0</msg>
<msg time="2024-01-11T17:06:51.552000" level="INFO">${output} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=08d92fb47cab684dc3a6982986ef3907b0003d1567d0d7676bdf7bed47fe0463</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-01-11T17:06:49.745000" elapsed="1.807000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-01-11T17:06:51.553000" level="INFO">awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=08d92fb47cab684dc3a6982986ef3907b0003d1567d0d7676bdf7bed47fe0463</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-01-11T17:06:51.553000" elapsed="0.000000"/>
</kw>
<msg time="2024-01-11T17:06:51.554000" level="INFO">${result} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=08d92fb47cab684dc3a6982986ef3907b0003d1567d0d7676bdf7bed47fe0463</msg>
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<status status="PASS" start="2024-01-11T17:06:49.745000" elapsed="1.809000"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-01-11T17:06:51.555000" level="FAIL">'awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=08d92fb47cab684dc3a6982986ef3907b0003d1567d0d7676bdf7bed47fe0463' does not contain 'S3_SECRET_ALREADY_EXISTS'</msg>
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-01-11T17:06:51.554000" elapsed="0.001000"/>
</kw>
<msg time="2024-01-11T17:06:51.555000" level="INFO">${exists} = False</msg>
<var>${exists}</var>
<arg>Should Contain</arg>
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-01-11T17:06:51.554000" elapsed="0.001000"/>
</kw>
<if>
<branch type="IF" condition="${exists}">
<kw name="Execute" owner="os">
<arg>ozone s3 revokesecret -y ${OM_HA_PARAM}</arg>
<status status="NOT RUN" start="2024-01-11T17:06:51.555000" elapsed="0.000000"/>
</kw>
<kw name="Execute" owner="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<status status="NOT RUN" start="2024-01-11T17:06:51.555000" elapsed="0.001000"/>
</kw>
<status status="NOT RUN" start="2024-01-11T17:06:51.555000" elapsed="0.001000"/>
</branch>
<status status="PASS" start="2024-01-11T17:06:51.555000" elapsed="0.001000"/>
</if>
<kw name="Get Regexp Matches" owner="String">
<msg time="2024-01-11T17:06:51.556000" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<status status="PASS" start="2024-01-11T17:06:51.556000" elapsed="0.000000"/>
</kw>
<kw name="Get Variable Value" owner="BuiltIn">
<msg time="2024-01-11T17:06:51.557000" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<status status="PASS" start="2024-01-11T17:06:51.557000" elapsed="0.000000"/>
</kw>
<kw name="Get Regexp Matches" owner="String">
<msg time="2024-01-11T17:06:51.557000" level="INFO">${secret} = ['08d92fb47cab684dc3a6982986ef3907b0003d1567d0d7676bdf7bed47fe0463']</msg>
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<status status="PASS" start="2024-01-11T17:06:51.557000" elapsed="0.000000"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-01-11T17:06:51.558000" level="INFO">${accessKey} = testuser/scm@EXAMPLE.COM</msg>
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-01-11T17:06:51.558000" elapsed="0.000000"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-01-11T17:06:51.559000" level="INFO">${secret} = 08d92fb47cab684dc3a6982986ef3907b0003d1567d0d7676bdf7bed47fe0463</msg>
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-01-11T17:06:51.559000" elapsed="0.000000"/>
</kw>
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-01-11T17:06:51.562000" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg time="2024-01-11T17:06:51.929000" level="INFO">${rc} = 0</msg>
<msg time="2024-01-11T17:06:51.929000" level="INFO">${output} = </msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-01-11T17:06:51.560000" elapsed="0.369000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-01-11T17:06:51.930000" level="INFO"/>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-01-11T17:06:51.929000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-01-11T17:06:51.930000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-01-11T17:06:51.930000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-01-11T17:06:51.560000" elapsed="0.371000"/>
</kw>
<msg time="2024-01-11T17:06:51.931000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-01-11T17:06:51.560000" elapsed="0.371000"/>
</kw>
<arg>aws configure set default.s3.signature_version s3v4</arg>
<status status="PASS" start="2024-01-11T17:06:51.559000" elapsed="0.372000"/>
</kw>
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-01-11T17:06:51.934000" level="INFO">Running command 'aws configure set aws_access_key_id testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg time="2024-01-11T17:06:52.286000" level="INFO">${rc} = 0</msg>
<msg time="2024-01-11T17:06:52.286000" level="INFO">${output} = </msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-01-11T17:06:51.932000" elapsed="0.354000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-01-11T17:06:52.287000" level="INFO"/>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-01-11T17:06:52.287000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-01-11T17:06:52.287000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-01-11T17:06:52.287000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-01-11T17:06:51.932000" elapsed="0.356000"/>
</kw>
<msg time="2024-01-11T17:06:52.288000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-01-11T17:06:51.932000" elapsed="0.356000"/>
</kw>
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<status status="PASS" start="2024-01-11T17:06:51.931000" elapsed="0.357000"/>
</kw>
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-01-11T17:06:52.291000" level="INFO">Running command 'aws configure set aws_secret_access_key 08d92fb47cab684dc3a6982986ef3907b0003d1567d0d7676bdf7bed47fe0463 2&gt;&amp;1'.</msg>
<msg time="2024-01-11T17:06:52.649000" level="INFO">${rc} = 0</msg>
<msg time="2024-01-11T17:06:52.649000" level="INFO">${output} = </msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-01-11T17:06:52.290000" elapsed="0.359000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-01-11T17:06:52.650000" level="INFO"/>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-01-11T17:06:52.649000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-01-11T17:06:52.650000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-01-11T17:06:52.650000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-01-11T17:06:52.289000" elapsed="0.361000"/>
</kw>
<msg time="2024-01-11T17:06:52.650000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-01-11T17:06:52.289000" elapsed="0.362000"/>
</kw>
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<status status="PASS" start="2024-01-11T17:06:52.288000" elapsed="0.363000"/>
</kw>
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-01-11T17:06:52.653000" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg time="2024-01-11T17:06:53.009000" level="INFO">${rc} = 0</msg>
<msg time="2024-01-11T17:06:53.009000" level="INFO">${output} = </msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-01-11T17:06:52.652000" elapsed="0.357000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-01-11T17:06:53.009000" level="INFO"/>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-01-11T17:06:53.009000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-01-11T17:06:53.010000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-01-11T17:06:53.010000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-01-11T17:06:52.652000" elapsed="0.359000"/>
</kw>
<msg time="2024-01-11T17:06:53.011000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-01-11T17:06:52.651000" elapsed="0.360000"/>
</kw>
<arg>aws configure set region us-west-1</arg>
<status status="PASS" start="2024-01-11T17:06:52.651000" elapsed="0.360000"/>
</kw>
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-01-11T17:06:53.014000" level="INFO">Running command 'aws configure set default.s3.addressing_style path 2&gt;&amp;1'.</msg>
<msg time="2024-01-11T17:06:53.370000" level="INFO">${rc} = 0</msg>
<msg time="2024-01-11T17:06:53.370000" level="INFO">${output} = </msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-01-11T17:06:53.012000" elapsed="0.358000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-01-11T17:06:53.371000" level="INFO"/>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-01-11T17:06:53.370000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-01-11T17:06:53.371000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-01-11T17:06:53.371000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-01-11T17:06:53.012000" elapsed="0.360000"/>
</kw>
<msg time="2024-01-11T17:06:53.372000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-01-11T17:06:53.012000" elapsed="0.360000"/>
</kw>
<arg>aws configure set default.s3.addressing_style ${OZONE_S3_ADDRESS_STYLE}</arg>
<status status="PASS" start="2024-01-11T17:06:53.011000" elapsed="0.361000"/>
</kw>
<status status="PASS" start="2024-01-11T17:06:49.744000" elapsed="3.629000"/>
</kw>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-01-11T17:06:49.744000" elapsed="3.629000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-01-11T17:06:53.373000" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-01-11T17:06:49.612000" elapsed="3.761000"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" owner="commonawslib">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-01-11T17:06:53.376000" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket old1-bucket --key key1-shell /tmp/get-result 2&gt;&amp;1'.</msg>
<msg time="2024-01-11T17:06:53.937000" level="INFO">${rc} = 0</msg>
<msg time="2024-01-11T17:06:53.937000" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 11 Jan 2024 17:06:35 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-01-11T17:06:53.374000" elapsed="0.564000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-01-11T17:06:53.938000" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 11 Jan 2024 17:06:35 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Thu, 11 Jan 2024 17:06:53 GMT",
    "Metadata": {}
}</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-01-11T17:06:53.938000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-01-11T17:06:53.939000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-01-11T17:06:53.939000" elapsed="0.000000"/>
</kw>
<msg time="2024-01-11T17:06:53.939000" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 11 Jan 2024 17:06:35 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<status status="PASS" start="2024-01-11T17:06:53.374000" elapsed="0.565000"/>
</kw>
<msg time="2024-01-11T17:06:53.939000" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 11 Jan 2024 17:06:35 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key1-shell /tmp/get-result</arg>
<arg>0</arg>
<status status="PASS" start="2024-01-11T17:06:53.373000" elapsed="0.566000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-01-11T17:06:53.940000" elapsed="0.000000"/>
</kw>
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-01-11T17:06:53.942000" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg time="2024-01-11T17:06:53.943000" level="INFO">${rc} = 0</msg>
<msg time="2024-01-11T17:06:53.943000" level="INFO">${output} = old1: another key created using Ozone Shell</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-01-11T17:06:53.940000" elapsed="0.003000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-01-11T17:06:53.944000" level="INFO">old1: another key created using Ozone Shell</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-01-11T17:06:53.944000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-01-11T17:06:53.945000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-01-11T17:06:53.944000" elapsed="0.001000"/>
</kw>
<msg time="2024-01-11T17:06:53.945000" level="INFO">${output} = old1: another key created using Ozone Shell</msg>
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<status status="PASS" start="2024-01-11T17:06:53.940000" elapsed="0.005000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: another key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-01-11T17:06:53.945000" elapsed="0.000000"/>
</kw>
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-01-11T17:06:53.947000" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg time="2024-01-11T17:06:53.949000" level="INFO">${rc} = 0</msg>
<msg time="2024-01-11T17:06:53.949000" level="INFO">${output} = </msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-01-11T17:06:53.946000" elapsed="0.003000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-01-11T17:06:53.949000" level="INFO"/>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-01-11T17:06:53.949000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-01-11T17:06:53.950000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-01-11T17:06:53.950000" elapsed="0.000000"/>
</kw>
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<status status="PASS" start="2024-01-11T17:06:53.946000" elapsed="0.004000"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" start="2024-01-11T17:06:49.611000" elapsed="4.339000"/>
</test>
<test id="s1-s3-t3" name="Read key created with S3 API using S3 API" line="45">
<kw name="Setup v4 headers" owner="commonawslib" type="SETUP">
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Kinit test user" owner="commonlib">
<kw name="Get test user principal" owner="commonlib">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-01-11T17:06:53.955000" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg time="2024-01-11T17:06:53.957000" level="INFO">${rc} = 0</msg>
<msg time="2024-01-11T17:06:53.957000" level="INFO">${output} = scm</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-01-11T17:06:53.954000" elapsed="0.003000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-01-11T17:06:53.958000" level="INFO">scm</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-01-11T17:06:53.957000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-01-11T17:06:53.958000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-01-11T17:06:53.958000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-01-11T17:06:53.953000" elapsed="0.005000"/>
</kw>
<msg time="2024-01-11T17:06:53.958000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-01-11T17:06:53.953000" elapsed="0.006000"/>
</kw>
<msg time="2024-01-11T17:06:53.959000" level="INFO">${instance} = scm</msg>
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<status status="PASS" start="2024-01-11T17:06:53.953000" elapsed="0.006000"/>
</kw>
<msg time="2024-01-11T17:06:53.959000" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<var>${TEST_USER}</var>
<arg>${user}</arg>
<status status="PASS" start="2024-01-11T17:06:53.952000" elapsed="0.007000"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2024-01-11T17:06:53.960000" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2024-01-11T17:06:53.959000" elapsed="0.001000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-01-11T17:06:53.962000" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg time="2024-01-11T17:06:54.003000" level="INFO">${rc} = 0</msg>
<msg time="2024-01-11T17:06:54.003000" level="INFO">${output} = </msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-01-11T17:06:53.961000" elapsed="0.042000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-01-11T17:06:54.004000" level="INFO"/>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-01-11T17:06:54.004000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-01-11T17:06:54.005000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-01-11T17:06:54.004000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-01-11T17:06:53.961000" elapsed="0.044000"/>
</kw>
<msg time="2024-01-11T17:06:54.005000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-01-11T17:06:53.960000" elapsed="0.046000"/>
</kw>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<status status="PASS" start="2024-01-11T17:06:53.960000" elapsed="0.046000"/>
</kw>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-01-11T17:06:53.960000" elapsed="0.046000"/>
</kw>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<status status="PASS" start="2024-01-11T17:06:53.952000" elapsed="0.054000"/>
</kw>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-01-11T17:06:53.952000" elapsed="0.054000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Setup secure v4 headers" owner="commonawslib">
<kw name="Execute And Ignore Error" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-01-11T17:06:54.008000" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg time="2024-01-11T17:06:55.905000" level="INFO">${rc} = 0</msg>
<msg time="2024-01-11T17:06:55.905000" level="INFO">${output} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=08d92fb47cab684dc3a6982986ef3907b0003d1567d0d7676bdf7bed47fe0463</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-01-11T17:06:54.007000" elapsed="1.898000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-01-11T17:06:55.906000" level="INFO">awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=08d92fb47cab684dc3a6982986ef3907b0003d1567d0d7676bdf7bed47fe0463</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-01-11T17:06:55.906000" elapsed="0.000000"/>
</kw>
<msg time="2024-01-11T17:06:55.907000" level="INFO">${result} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=08d92fb47cab684dc3a6982986ef3907b0003d1567d0d7676bdf7bed47fe0463</msg>
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<status status="PASS" start="2024-01-11T17:06:54.007000" elapsed="1.900000"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-01-11T17:06:55.908000" level="FAIL">'awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=08d92fb47cab684dc3a6982986ef3907b0003d1567d0d7676bdf7bed47fe0463' does not contain 'S3_SECRET_ALREADY_EXISTS'</msg>
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-01-11T17:06:55.907000" elapsed="0.001000"/>
</kw>
<msg time="2024-01-11T17:06:55.908000" level="INFO">${exists} = False</msg>
<var>${exists}</var>
<arg>Should Contain</arg>
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-01-11T17:06:55.907000" elapsed="0.001000"/>
</kw>
<if>
<branch type="IF" condition="${exists}">
<kw name="Execute" owner="os">
<arg>ozone s3 revokesecret -y ${OM_HA_PARAM}</arg>
<status status="NOT RUN" start="2024-01-11T17:06:55.908000" elapsed="0.000000"/>
</kw>
<kw name="Execute" owner="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<status status="NOT RUN" start="2024-01-11T17:06:55.908000" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-01-11T17:06:55.908000" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-01-11T17:06:55.908000" elapsed="0.000000"/>
</if>
<kw name="Get Regexp Matches" owner="String">
<msg time="2024-01-11T17:06:55.909000" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<status status="PASS" start="2024-01-11T17:06:55.908000" elapsed="0.001000"/>
</kw>
<kw name="Get Variable Value" owner="BuiltIn">
<msg time="2024-01-11T17:06:55.909000" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<status status="PASS" start="2024-01-11T17:06:55.909000" elapsed="0.000000"/>
</kw>
<kw name="Get Regexp Matches" owner="String">
<msg time="2024-01-11T17:06:55.910000" level="INFO">${secret} = ['08d92fb47cab684dc3a6982986ef3907b0003d1567d0d7676bdf7bed47fe0463']</msg>
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<status status="PASS" start="2024-01-11T17:06:55.909000" elapsed="0.001000"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-01-11T17:06:55.911000" level="INFO">${accessKey} = testuser/scm@EXAMPLE.COM</msg>
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-01-11T17:06:55.910000" elapsed="0.001000"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-01-11T17:06:55.911000" level="INFO">${secret} = 08d92fb47cab684dc3a6982986ef3907b0003d1567d0d7676bdf7bed47fe0463</msg>
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-01-11T17:06:55.911000" elapsed="0.000000"/>
</kw>
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-01-11T17:06:55.914000" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg time="2024-01-11T17:06:56.308000" level="INFO">${rc} = 0</msg>
<msg time="2024-01-11T17:06:56.308000" level="INFO">${output} = </msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-01-11T17:06:55.912000" elapsed="0.396000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-01-11T17:06:56.309000" level="INFO"/>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-01-11T17:06:56.308000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-01-11T17:06:56.310000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-01-11T17:06:56.309000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-01-11T17:06:55.912000" elapsed="0.398000"/>
</kw>
<msg time="2024-01-11T17:06:56.310000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-01-11T17:06:55.912000" elapsed="0.398000"/>
</kw>
<arg>aws configure set default.s3.signature_version s3v4</arg>
<status status="PASS" start="2024-01-11T17:06:55.912000" elapsed="0.399000"/>
</kw>
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-01-11T17:06:56.313000" level="INFO">Running command 'aws configure set aws_access_key_id testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg time="2024-01-11T17:06:56.664000" level="INFO">${rc} = 0</msg>
<msg time="2024-01-11T17:06:56.664000" level="INFO">${output} = </msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-01-11T17:06:56.312000" elapsed="0.352000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-01-11T17:06:56.665000" level="INFO"/>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-01-11T17:06:56.665000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-01-11T17:06:56.666000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-01-11T17:06:56.665000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-01-11T17:06:56.311000" elapsed="0.355000"/>
</kw>
<msg time="2024-01-11T17:06:56.666000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-01-11T17:06:56.311000" elapsed="0.355000"/>
</kw>
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<status status="PASS" start="2024-01-11T17:06:56.311000" elapsed="0.355000"/>
</kw>
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-01-11T17:06:56.669000" level="INFO">Running command 'aws configure set aws_secret_access_key 08d92fb47cab684dc3a6982986ef3907b0003d1567d0d7676bdf7bed47fe0463 2&gt;&amp;1'.</msg>
<msg time="2024-01-11T17:06:57.031000" level="INFO">${rc} = 0</msg>
<msg time="2024-01-11T17:06:57.031000" level="INFO">${output} = </msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-01-11T17:06:56.668000" elapsed="0.363000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-01-11T17:06:57.032000" level="INFO"/>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-01-11T17:06:57.032000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-01-11T17:06:57.033000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-01-11T17:06:57.032000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-01-11T17:06:56.667000" elapsed="0.366000"/>
</kw>
<msg time="2024-01-11T17:06:57.033000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-01-11T17:06:56.667000" elapsed="0.367000"/>
</kw>
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<status status="PASS" start="2024-01-11T17:06:56.667000" elapsed="0.367000"/>
</kw>
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-01-11T17:06:57.036000" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg time="2024-01-11T17:06:57.385000" level="INFO">${rc} = 0</msg>
<msg time="2024-01-11T17:06:57.385000" level="INFO">${output} = </msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-01-11T17:06:57.035000" elapsed="0.350000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-01-11T17:06:57.386000" level="INFO"/>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-01-11T17:06:57.386000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-01-11T17:06:57.387000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-01-11T17:06:57.386000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-01-11T17:06:57.035000" elapsed="0.352000"/>
</kw>
<msg time="2024-01-11T17:06:57.387000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-01-11T17:06:57.034000" elapsed="0.353000"/>
</kw>
<arg>aws configure set region us-west-1</arg>
<status status="PASS" start="2024-01-11T17:06:57.034000" elapsed="0.354000"/>
</kw>
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-01-11T17:06:57.390000" level="INFO">Running command 'aws configure set default.s3.addressing_style path 2&gt;&amp;1'.</msg>
<msg time="2024-01-11T17:06:57.740000" level="INFO">${rc} = 0</msg>
<msg time="2024-01-11T17:06:57.740000" level="INFO">${output} = </msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-01-11T17:06:57.389000" elapsed="0.351000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-01-11T17:06:57.741000" level="INFO"/>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-01-11T17:06:57.740000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-01-11T17:06:57.742000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-01-11T17:06:57.741000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-01-11T17:06:57.388000" elapsed="0.354000"/>
</kw>
<msg time="2024-01-11T17:06:57.742000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-01-11T17:06:57.388000" elapsed="0.354000"/>
</kw>
<arg>aws configure set default.s3.addressing_style ${OZONE_S3_ADDRESS_STYLE}</arg>
<status status="PASS" start="2024-01-11T17:06:57.388000" elapsed="0.354000"/>
</kw>
<status status="PASS" start="2024-01-11T17:06:54.006000" elapsed="3.737000"/>
</kw>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-01-11T17:06:54.006000" elapsed="3.737000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-01-11T17:06:57.743000" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-01-11T17:06:53.951000" elapsed="3.792000"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" owner="commonawslib">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-01-11T17:06:57.746000" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket old1-bucket --key key2-s3api /tmp/get-result 2&gt;&amp;1'.</msg>
<msg time="2024-01-11T17:06:58.211000" level="INFO">${rc} = 0</msg>
<msg time="2024-01-11T17:06:58.211000" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 11 Jan 2024 17:06:42 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-01-11T17:06:57.745000" elapsed="0.466000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-01-11T17:06:58.212000" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 11 Jan 2024 17:06:42 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Thu, 11 Jan 2024 17:06:58 GMT",
    "Metadata": {}
}</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-01-11T17:06:58.212000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-01-11T17:06:58.213000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-01-11T17:06:58.212000" elapsed="0.001000"/>
</kw>
<msg time="2024-01-11T17:06:58.213000" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 11 Jan 2024 17:06:42 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<status status="PASS" start="2024-01-11T17:06:57.744000" elapsed="0.469000"/>
</kw>
<msg time="2024-01-11T17:06:58.213000" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 11 Jan 2024 17:06:42 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key2-s3api /tmp/get-result</arg>
<arg>0</arg>
<status status="PASS" start="2024-01-11T17:06:57.743000" elapsed="0.470000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-01-11T17:06:58.214000" elapsed="0.000000"/>
</kw>
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-01-11T17:06:58.216000" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg time="2024-01-11T17:06:58.217000" level="INFO">${rc} = 0</msg>
<msg time="2024-01-11T17:06:58.217000" level="INFO">${output} = old1: key created using S3 API</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-01-11T17:06:58.214000" elapsed="0.003000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-01-11T17:06:58.218000" level="INFO">old1: key created using S3 API</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-01-11T17:06:58.217000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-01-11T17:06:58.218000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-01-11T17:06:58.218000" elapsed="0.000000"/>
</kw>
<msg time="2024-01-11T17:06:58.219000" level="INFO">${output} = old1: key created using S3 API</msg>
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<status status="PASS" start="2024-01-11T17:06:58.214000" elapsed="0.005000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using S3 API</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-01-11T17:06:58.219000" elapsed="0.000000"/>
</kw>
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-01-11T17:06:58.221000" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg time="2024-01-11T17:06:58.222000" level="INFO">${rc} = 0</msg>
<msg time="2024-01-11T17:06:58.222000" level="INFO">${output} = </msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-01-11T17:06:58.219000" elapsed="0.003000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-01-11T17:06:58.223000" level="INFO"/>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-01-11T17:06:58.222000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-01-11T17:06:58.223000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-01-11T17:06:58.223000" elapsed="0.000000"/>
</kw>
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<status status="PASS" start="2024-01-11T17:06:58.219000" elapsed="0.004000"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" start="2024-01-11T17:06:53.951000" elapsed="4.273000"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" start="2024-01-11T17:06:45.592000" elapsed="12.633000"/>
</suite>
<suite id="s1-s4" name="1.3.0-1.4.0-1-original-prepare" source="/opt/ozone/smoketest/upgrade/prepare.robot">
<test id="s1-s4-t1" name="Prepare Ozone Manager" line="23">
<kw name="Run Keyword If" owner="BuiltIn" type="SETUP">
<kw name="Kinit test user" owner="commonlib">
<kw name="Get test user principal" owner="commonlib">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-01-11T17:07:01.181000" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg time="2024-01-11T17:07:01.183000" level="INFO">${rc} = 0</msg>
<msg time="2024-01-11T17:07:01.183000" level="INFO">${output} = scm</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-01-11T17:07:01.179000" elapsed="0.004000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-01-11T17:07:01.184000" level="INFO">scm</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-01-11T17:07:01.184000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-01-11T17:07:01.184000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-01-11T17:07:01.184000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-01-11T17:07:01.179000" elapsed="0.006000"/>
</kw>
<msg time="2024-01-11T17:07:01.185000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-01-11T17:07:01.179000" elapsed="0.007000"/>
</kw>
<msg time="2024-01-11T17:07:01.186000" level="INFO">${instance} = scm</msg>
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<status status="PASS" start="2024-01-11T17:07:01.178000" elapsed="0.008000"/>
</kw>
<msg time="2024-01-11T17:07:01.186000" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<var>${TEST_USER}</var>
<arg>${user}</arg>
<status status="PASS" start="2024-01-11T17:07:01.178000" elapsed="0.008000"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2024-01-11T17:07:01.187000" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2024-01-11T17:07:01.186000" elapsed="0.001000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-01-11T17:07:01.189000" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg time="2024-01-11T17:07:01.224000" level="INFO">${rc} = 0</msg>
<msg time="2024-01-11T17:07:01.224000" level="INFO">${output} = </msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-01-11T17:07:01.188000" elapsed="0.036000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-01-11T17:07:01.225000" level="INFO"/>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-01-11T17:07:01.225000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-01-11T17:07:01.226000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-01-11T17:07:01.225000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-01-11T17:07:01.188000" elapsed="0.038000"/>
</kw>
<msg time="2024-01-11T17:07:01.226000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-01-11T17:07:01.187000" elapsed="0.039000"/>
</kw>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<status status="PASS" start="2024-01-11T17:07:01.187000" elapsed="0.039000"/>
</kw>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-01-11T17:07:01.187000" elapsed="0.040000"/>
</kw>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<status status="PASS" start="2024-01-11T17:07:01.178000" elapsed="0.049000"/>
</kw>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-01-11T17:07:01.177000" elapsed="0.050000"/>
</kw>
<kw name="Pass Execution If" owner="BuiltIn">
<arg>'%{OZONE_UPGRADE_FROM}' == '1.1.0'</arg>
<arg>OM prepare is skipped for version %{OZONE_UPGRADE_FROM}</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" start="2024-01-11T17:07:01.227000" elapsed="0.000000"/>
</kw>
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-01-11T17:07:01.229000" level="INFO">Running command 'ozone admin om prepare -id omservice 2&gt;&amp;1'.</msg>
<msg time="2024-01-11T17:12:01.177000" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="FAIL" start="2024-01-11T17:07:01.228000" elapsed="299.949000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-01-11T17:12:01.178000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" start="2024-01-11T17:12:01.178000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="FAIL" start="2024-01-11T17:07:01.228000" elapsed="299.951000"/>
</kw>
<msg time="2024-01-11T17:12:01.179000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="FAIL" start="2024-01-11T17:07:01.228000" elapsed="299.951000"/>
</kw>
<var>${result}</var>
<arg>ozone admin om prepare -id %{OM_SERVICE_ID}</arg>
<status status="FAIL" start="2024-01-11T17:07:01.227000" elapsed="299.953000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>OM Preparation successful!</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="NOT RUN" start="2024-01-11T17:12:01.180000" elapsed="0.000000"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" start="2024-01-11T17:07:01.177000" elapsed="300.004000">Test timeout 5 minutes exceeded.</status>
</test>
<doc>Prepares OMs</doc>
<status status="FAIL" start="2024-01-11T17:07:01.139000" elapsed="300.044000"/>
</suite>
<status status="FAIL" elapsed="339.325000"/>
</suite>
<statistics>
<total>
<stat pass="11" fail="1" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="2" fail="0" skip="0">create-volume-and-bucket</stat>
<stat pass="2" fail="0" skip="0">finalized</stat>
<stat pass="1" fail="0" skip="0">om</stat>
<stat pass="1" fail="0" skip="0">scm</stat>
</tag>
<suite>
<stat pass="11" fail="1" skip="0" id="s1" name="upgrade">upgrade</stat>
<stat pass="2" fail="0" skip="0" id="s1-s1" name="1.3.0-1.4.0-1-original-check-finalization">upgrade.1.3.0-1.4.0-1-original-check-finalization</stat>
<stat pass="6" fail="0" skip="0" id="s1-s2" name="1.3.0-1.4.0-1-original-generate-old1">upgrade.1.3.0-1.4.0-1-original-generate-old1</stat>
<stat pass="3" fail="0" skip="0" id="s1-s3" name="1.3.0-1.4.0-1-original-validate-old1">upgrade.1.3.0-1.4.0-1-original-validate-old1</stat>
<stat pass="0" fail="1" skip="0" id="s1-s4" name="1.3.0-1.4.0-1-original-prepare">upgrade.1.3.0-1.4.0-1-original-prepare</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
