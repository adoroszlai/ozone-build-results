<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 7.0 (Python 3.8.10 on linux)" generated="2024-01-20T11:39:44.337879" rpa="false" schemaversion="5">
<suite id="s1" name="upgrade">
<suite id="s1-s1" name="1.3.0-1.4.0-1-original-check-finalization" source="/opt/ozone/smoketest/upgrade/check-finalization.robot">
<test id="s1-s1-t1" name="Check OM Finalized" line="23">
<kw name="Run Keyword If" owner="BuiltIn" type="SETUP">
<kw name="Kinit test user" owner="commonlib">
<kw name="Get test user principal" owner="commonlib">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-01-20T11:32:33.329000" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg time="2024-01-20T11:32:33.331000" level="INFO">${rc} = 0</msg>
<msg time="2024-01-20T11:32:33.331000" level="INFO">${output} = scm</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-01-20T11:32:33.326000" elapsed="0.005000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-01-20T11:32:33.332000" level="INFO">scm</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-01-20T11:32:33.331000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-01-20T11:32:33.332000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-01-20T11:32:33.332000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-01-20T11:32:33.326000" elapsed="0.006000"/>
</kw>
<msg time="2024-01-20T11:32:33.332000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-01-20T11:32:33.326000" elapsed="0.007000"/>
</kw>
<msg time="2024-01-20T11:32:33.333000" level="INFO">${instance} = scm</msg>
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<status status="PASS" start="2024-01-20T11:32:33.325000" elapsed="0.009000"/>
</kw>
<msg time="2024-01-20T11:32:33.334000" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<var>${TEST_USER}</var>
<arg>${user}</arg>
<status status="PASS" start="2024-01-20T11:32:33.325000" elapsed="0.009000"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2024-01-20T11:32:33.334000" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2024-01-20T11:32:33.334000" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-01-20T11:32:33.337000" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg time="2024-01-20T11:32:33.427000" level="INFO">${rc} = 0</msg>
<msg time="2024-01-20T11:32:33.427000" level="INFO">${output} = </msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-01-20T11:32:33.336000" elapsed="0.091000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-01-20T11:32:33.428000" level="INFO"/>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-01-20T11:32:33.427000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-01-20T11:32:33.428000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-01-20T11:32:33.428000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-01-20T11:32:33.335000" elapsed="0.094000"/>
</kw>
<msg time="2024-01-20T11:32:33.429000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-01-20T11:32:33.335000" elapsed="0.094000"/>
</kw>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<status status="PASS" start="2024-01-20T11:32:33.335000" elapsed="0.094000"/>
</kw>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-01-20T11:32:33.334000" elapsed="0.095000"/>
</kw>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<status status="PASS" start="2024-01-20T11:32:33.325000" elapsed="0.104000"/>
</kw>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-01-20T11:32:33.324000" elapsed="0.105000"/>
</kw>
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-01-20T11:32:33.432000" level="INFO">Running command 'env 2&gt;&amp;1'.</msg>
<msg time="2024-01-20T11:32:33.434000" level="INFO">${rc} = 0</msg>
<msg time="2024-01-20T11:32:33.434000" level="INFO">${output} = OZONE-SITE.XML_ozone.httpfs.http.auth.kerberos.principal=HTTP/httpfs@EXAMPLE.COM
CORE-SITE.XML_hadoop.security.authentication=kerberos
OZONE-SITE.XML_ozone.recon.db.dir=/data/metadata/recon
OZONE-SITE...</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-01-20T11:32:33.431000" elapsed="0.003000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-01-20T11:32:33.434000" level="INFO">OZONE-SITE.XML_ozone.httpfs.http.auth.kerberos.principal=HTTP/httpfs@EXAMPLE.COM
CORE-SITE.XML_hadoop.security.authentication=kerberos
OZONE-SITE.XML_ozone.recon.db.dir=/data/metadata/recon
OZONE-SITE.XML_ozone.client.failover.max.attempts=6
OZONE-SITE.XML_ozone.s3g.kerberos.principal=s3g/s3g@EXAMPLE.COM
KMS-SITE.XML_hadoop.kms.proxyuser.s3g.users=*
HOSTNAME=scm1.org
HADOOP-POLICY.XML_hdds.security.client.scm.certificate.protocol.acl=*
OZONE-SITE.XML_hdds.grpc.tls.enabled=true
OZONE-SITE.XML_hdds.scm.http.auth.kerberos.principal=HTTP/scm@EXAMPLE.COM
OZONE-SITE.XML_ozone.s3.administrators=testuser,s3g
OZONE-SITE.XML_ozone.administrators=testuser,recon,om
OZONE-SITE.XML_ozone.recon.kerberos.principal=recon/recon@EXAMPLE.COM
OZONE-SITE.XML_hdds.scm.kerberos.keytab.file=/etc/security/keytabs/scm.keytab
HTTPFS-SITE.XML_httpfs.hadoop.authentication.type=kerberos
OZONE-SITE.XML_ozone.http.filter.initializers=org.apache.hadoop.security.AuthenticationFilterInitializer
OZONE-SITE.XML_ozone.httpfs.kerberos.principal=httpfs/httpfs@EXAMPLE.COM
CORE-SITE.XML_dfs.data.transfer.protection=authentication
OZONE-SITE.XML_ozone.recon.address=recon:9891
OZONE-SITE.XML_ozone.server.default.replication=3
HADOOP-POLICY.XML_hdds.security.client.scm.container.protocol.acl=*
OZONE-SITE.XML_ozone.acl.authorizer.class=org.apache.hadoop.ozone.security.acl.OzoneNativeAuthorizer
HDFS-SITE.XML_dfs.web.authentication.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
OZONE-SITE.XML_hdds.secret.key.expiry.duration=1h
OZONE-SITE.XML_hdds.scm.kerberos.principal=scm/scm@EXAMPLE.COM
OZONE_LOG_DIR=/var/log/hadoop
LD_LIBRARY_PATH=/usr/local/lib
OZONE-SITE.XML_ozone.om.nodes.omservice=om1,om2,om3
ENSURE_SCM_INITIALIZED=/data/metadata/scm/current/VERSION
HTTPFS-SITE.XML_hadoop.http.authentication.kerberos.principal=HTTP/httpfs@EXAMPLE.COM
OZONE-SITE.XML_ozone.s3g.http.auth.type=kerberos
HADOOP-POLICY.XML_ozone.om.security.client.protocol.acl=*
OZONE-SITE.XML_ozone.filesystem.snapshot.enabled=true
OM_SERVICE_ID=omservice
OZONE-SITE.XML_ozone.recon.om.snapshot.task.interval.delay=1m
CORE-SITE.XML_hadoop.http.authentication.simple.anonymous.allowed=false
HTTPFS-SITE.XML_httpfs.hadoop.authentication.kerberos.principal=httpfs/httpfs@EXAMPLE.COM
HADOOP-POLICY.XML_hdds.security.client.scm.block.protocol.acl=*
OZONE-SITE.XML_hdds.datanode.http.auth.kerberos.principal=HTTP/db@EXAMPLE.COM
OZONE-SITE.XML_hdds.scm.wait.time.after.safemode.exit=5s
KMS-SITE.XML_hadoop.kms.proxyuser.s3g.groups=*
OZONE-SITE.XML_hdds.scm.http.auth.type=kerberos
OZONE-SITE.XML_hdds.container.token.enabled=true
CORE-SITE.XML_hadoop.security.auth_to_local=DEFAULT
OZONE-SITE.XML_ozone.httpfs.http.auth.type=kerberos
OZONE-SITE.XML_ozone.security.enabled=true
OZONE-SITE.XML_ozone.metadata.dirs=/data/metadata
OZONE-SITE.XML_ozone.httpfs.http.auth.kerberos.keytab=/etc/security/keytabs/httpfs.keytab
OZONE-SITE.XML_ozone.security.http.kerberos.enabled=true
PATH=/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin
OZONE-SITE.XML_ozone.httpfs.kerberos.keytab.file=/etc/security/keytabs/httpfs.keytab
PWD=/opt/hadoop
OZONE-SITE.XML_ozone.acl.enabled=true
HDFS-SITE.XML_dfs.datanode.kerberos.principal=dn/dn@EXAMPLE.COM
OZONE-SITE.XML_ozone.om.kerberos.principal=om/om@EXAMPLE.COM
OZONE-SITE.XML_ozone.scm.container.size=1GB
JAVA_HOME=/usr/lib/jvm/jre/
OZONE-SITE.XML_hdds.scm.http.auth.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
CORE-SITE.XML_hadoop.proxyuser.httpfs.groups=*
OZONE-SITE.XML_hdds.scm.safemode.min.datanode=3
OZONE-SITE.XML_ozone.scm.pipeline.creation.interval=30s
OZONE-SITE.XML_ozone.om.service.ids=omservice
OZONE-SITE.XML_ozone.s3g.http.auth.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
OZONE-SITE.XML_hdds.datanode.http.auth.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
HDFS-SITE.XML_dfs.datanode.kerberos.keytab.file=/etc/security/keytabs/dn.keytab
OZONE-SITE.XML_ozone.om.kerberos.keytab.file=/etc/security/keytabs/om.keytab
OZONE-SITE.XML_hdds.secret.key.rotate.check.duration=1m
OZONE-SITE.XML_ozone.s3g.kerberos.keytab.file=/etc/security/keytabs/s3g.keytab
CORE-SITE.XML_hadoop.http.authentication.kerberos.principal=HTTP/ozone@EXAMPLE.COM
OZONE-SITE.XML_ozone.om.http.auth.kerberos.principal=HTTP/om@EXAMPLE.COM
OZONE-SITE.XML_ozone.recon.http.auth.type=kerberos
OZONE-SITE.XML_ozone.s3g.secret.http.auth.type=kerberos
OZONE-SITE.XML_ozone.scm.pipeline.allocated.timeout=2m
HTTPFS-SITE.XML_hadoop.http.authentication.kerberos.keytab=/etc/security/keytabs/httpfs.keytab
OZONE-SITE.XML_ozone.scm.primordial.node.id=scm1
OZONE_DATANODE_SECURE_USER=root
OZONE-SITE.XML_ozone.scm.pipeline.owner.container.count=1
OZONE_UPGRADE_FROM=1.3.0
OZONE-SITE.XML_ozone.scm.pipeline.scrub.interval=1m
WAITFOR=kdc:88
CORE-SITE.XML_hadoop.http.authentication.type=kerberos
OZONE-SITE.XML_ozone.recon.http.auth.kerberos.principal=HTTP/recon@EXAMPLE.COM
OZONE-SITE.XML_ozone.om.http.auth.type=kerberos
OZONE-SITE.XML_hdds.secret.key.rotate.duration=5m
SHLVL=1
HOME=/opt/hadoop
OZONE_CONF_DIR=/etc/hadoop
KMS-SITE.XML_hadoop.kms.proxyuser.s3g.hosts=*
OZONE-SITE.XML_ozone.om.ratis.enable=true
OZONE-SITE.XML_ozone.recon.http.auth.kerberos.keytab=/etc/security/keytabs/recon.keytab
no_proxy=om1,om2,om3,scm1,scm2,scm3,s3g,kdc,localhost,127.0.0.1
HDFS-SITE.XML_dfs.web.authentication.kerberos.principal=HTTP/ozone@EXAMPLE.COM
HTTPFS-SITE.XML_httpfs.hadoop.authentication.kerberos.keytab=/etc/security/keytabs/httpfs.keytab
OZONE-SITE.XML_hdds.datanode.dir=/data/hdds
OZONE-SITE.XML_ozone.s3g.secret.http.enabled=true
OZONE-SITE.XML_ozone.scm.nodes.scmservice=scm1,scm2,scm3
CORE-SITE.XML_hadoop.http.authentication.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
OZONE-SITE.XML_ozone.om.http.auth.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
OZONE-SITE.XML_ozone.scm.datanode.id.dir=/data
OZONE_UPGRADE_TO=1.4.0
HTTPFS-SITE.XML_hadoop.http.authentication.type=kerberos
CORE-SITE.XML_hadoop.http.authentication.signature.secret.file=/etc/security/http_secret
OZONE-SITE.XML_ozone.s3g.http.auth.kerberos.principal=HTTP/s3g@EXAMPLE.COM
OZONE-SITE.XML_ozone.scm.service.ids=scmservice
OZONE-SITE.XML_ozone.om.address.omservice.om3=om3
OZONE-SITE.XML_ozone.scm.address.scmservice.scm1=scm1.org
OZONE-SITE.XML_ozone.om.address.omservice.om2=om2
OZONE-SITE.XML_ozone.recon.kerberos.keytab.file=/etc/security/keytabs/recon.keytab
OZONE-SITE.XML_ozone.scm.address.scmservice.scm2=scm2.org
OZONE-SITE.XML_ozone.om.address.omservice.om1=om1
OZONE-SITE.XML_hdds.block.token.enabled=true
CORE-SITE.XML_hadoop.proxyuser.httpfs.hosts=*
OZONE-SITE.XML_ozone.scm.ratis.enable=true
OZONE-SITE.XML_ozone.scm.address.scmservice.scm3=scm3.org
OZONE-SITE.XML_hdds.datanode.http.auth.type=kerberos
HADOOP-POLICY.XML_hdds.security.client.datanode.container.protocol.acl=*
CORE-SITE.XML_hadoop.security.key.provider.path=kms://http@kms:9600/kms
OZONE-SITE.XML_hdds.datanode.volume.min.free.space=100MB
CORE-SITE.XML_hadoop.security.authorization=true
_=/usr/bin/env</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-01-20T11:32:33.434000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-01-20T11:32:33.435000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-01-20T11:32:33.435000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-01-20T11:32:33.430000" elapsed="0.005000"/>
</kw>
<msg time="2024-01-20T11:32:33.435000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-01-20T11:32:33.430000" elapsed="0.005000"/>
</kw>
<msg time="2024-01-20T11:32:33.436000" level="INFO">${result} = OZONE-SITE.XML_ozone.httpfs.http.auth.kerberos.principal=HTTP/httpfs@EXAMPLE.COM
CORE-SITE.XML_hadoop.security.authentication=kerberos
OZONE-SITE.XML_ozone.recon.db.dir=/data/metadata/recon
OZONE-SITE...</msg>
<var>${result}</var>
<arg>env</arg>
<status status="PASS" start="2024-01-20T11:32:33.430000" elapsed="0.006000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-01-20T11:32:33.436000" level="INFO">OZONE-SITE.XML_ozone.httpfs.http.auth.kerberos.principal=HTTP/httpfs@EXAMPLE.COM
CORE-SITE.XML_hadoop.security.authentication=kerberos
OZONE-SITE.XML_ozone.recon.db.dir=/data/metadata/recon
OZONE-SITE.XML_ozone.client.failover.max.attempts=6
OZONE-SITE.XML_ozone.s3g.kerberos.principal=s3g/s3g@EXAMPLE.COM
KMS-SITE.XML_hadoop.kms.proxyuser.s3g.users=*
HOSTNAME=scm1.org
HADOOP-POLICY.XML_hdds.security.client.scm.certificate.protocol.acl=*
OZONE-SITE.XML_hdds.grpc.tls.enabled=true
OZONE-SITE.XML_hdds.scm.http.auth.kerberos.principal=HTTP/scm@EXAMPLE.COM
OZONE-SITE.XML_ozone.s3.administrators=testuser,s3g
OZONE-SITE.XML_ozone.administrators=testuser,recon,om
OZONE-SITE.XML_ozone.recon.kerberos.principal=recon/recon@EXAMPLE.COM
OZONE-SITE.XML_hdds.scm.kerberos.keytab.file=/etc/security/keytabs/scm.keytab
HTTPFS-SITE.XML_httpfs.hadoop.authentication.type=kerberos
OZONE-SITE.XML_ozone.http.filter.initializers=org.apache.hadoop.security.AuthenticationFilterInitializer
OZONE-SITE.XML_ozone.httpfs.kerberos.principal=httpfs/httpfs@EXAMPLE.COM
CORE-SITE.XML_dfs.data.transfer.protection=authentication
OZONE-SITE.XML_ozone.recon.address=recon:9891
OZONE-SITE.XML_ozone.server.default.replication=3
HADOOP-POLICY.XML_hdds.security.client.scm.container.protocol.acl=*
OZONE-SITE.XML_ozone.acl.authorizer.class=org.apache.hadoop.ozone.security.acl.OzoneNativeAuthorizer
HDFS-SITE.XML_dfs.web.authentication.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
OZONE-SITE.XML_hdds.secret.key.expiry.duration=1h
OZONE-SITE.XML_hdds.scm.kerberos.principal=scm/scm@EXAMPLE.COM
OZONE_LOG_DIR=/var/log/hadoop
LD_LIBRARY_PATH=/usr/local/lib
OZONE-SITE.XML_ozone.om.nodes.omservice=om1,om2,om3
ENSURE_SCM_INITIALIZED=/data/metadata/scm/current/VERSION
HTTPFS-SITE.XML_hadoop.http.authentication.kerberos.principal=HTTP/httpfs@EXAMPLE.COM
OZONE-SITE.XML_ozone.s3g.http.auth.type=kerberos
HADOOP-POLICY.XML_ozone.om.security.client.protocol.acl=*
OZONE-SITE.XML_ozone.filesystem.snapshot.enabled=true
OM_SERVICE_ID=omservice
OZONE-SITE.XML_ozone.recon.om.snapshot.task.interval.delay=1m
CORE-SITE.XML_hadoop.http.authentication.simple.anonymous.allowed=false
HTTPFS-SITE.XML_httpfs.hadoop.authentication.kerberos.principal=httpfs/httpfs@EXAMPLE.COM
HADOOP-POLICY.XML_hdds.security.client.scm.block.protocol.acl=*
OZONE-SITE.XML_hdds.datanode.http.auth.kerberos.principal=HTTP/db@EXAMPLE.COM
OZONE-SITE.XML_hdds.scm.wait.time.after.safemode.exit=5s
KMS-SITE.XML_hadoop.kms.proxyuser.s3g.groups=*
OZONE-SITE.XML_hdds.scm.http.auth.type=kerberos
OZONE-SITE.XML_hdds.container.token.enabled=true
CORE-SITE.XML_hadoop.security.auth_to_local=DEFAULT
OZONE-SITE.XML_ozone.httpfs.http.auth.type=kerberos
OZONE-SITE.XML_ozone.security.enabled=true
OZONE-SITE.XML_ozone.metadata.dirs=/data/metadata
OZONE-SITE.XML_ozone.httpfs.http.auth.kerberos.keytab=/etc/security/keytabs/httpfs.keytab
OZONE-SITE.XML_ozone.security.http.kerberos.enabled=true
PATH=/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin
OZONE-SITE.XML_ozone.httpfs.kerberos.keytab.file=/etc/security/keytabs/httpfs.keytab
PWD=/opt/hadoop
OZONE-SITE.XML_ozone.acl.enabled=true
HDFS-SITE.XML_dfs.datanode.kerberos.principal=dn/dn@EXAMPLE.COM
OZONE-SITE.XML_ozone.om.kerberos.principal=om/om@EXAMPLE.COM
OZONE-SITE.XML_ozone.scm.container.size=1GB
JAVA_HOME=/usr/lib/jvm/jre/
OZONE-SITE.XML_hdds.scm.http.auth.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
CORE-SITE.XML_hadoop.proxyuser.httpfs.groups=*
OZONE-SITE.XML_hdds.scm.safemode.min.datanode=3
OZONE-SITE.XML_ozone.scm.pipeline.creation.interval=30s
OZONE-SITE.XML_ozone.om.service.ids=omservice
OZONE-SITE.XML_ozone.s3g.http.auth.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
OZONE-SITE.XML_hdds.datanode.http.auth.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
HDFS-SITE.XML_dfs.datanode.kerberos.keytab.file=/etc/security/keytabs/dn.keytab
OZONE-SITE.XML_ozone.om.kerberos.keytab.file=/etc/security/keytabs/om.keytab
OZONE-SITE.XML_hdds.secret.key.rotate.check.duration=1m
OZONE-SITE.XML_ozone.s3g.kerberos.keytab.file=/etc/security/keytabs/s3g.keytab
CORE-SITE.XML_hadoop.http.authentication.kerberos.principal=HTTP/ozone@EXAMPLE.COM
OZONE-SITE.XML_ozone.om.http.auth.kerberos.principal=HTTP/om@EXAMPLE.COM
OZONE-SITE.XML_ozone.recon.http.auth.type=kerberos
OZONE-SITE.XML_ozone.s3g.secret.http.auth.type=kerberos
OZONE-SITE.XML_ozone.scm.pipeline.allocated.timeout=2m
HTTPFS-SITE.XML_hadoop.http.authentication.kerberos.keytab=/etc/security/keytabs/httpfs.keytab
OZONE-SITE.XML_ozone.scm.primordial.node.id=scm1
OZONE_DATANODE_SECURE_USER=root
OZONE-SITE.XML_ozone.scm.pipeline.owner.container.count=1
OZONE_UPGRADE_FROM=1.3.0
OZONE-SITE.XML_ozone.scm.pipeline.scrub.interval=1m
WAITFOR=kdc:88
CORE-SITE.XML_hadoop.http.authentication.type=kerberos
OZONE-SITE.XML_ozone.recon.http.auth.kerberos.principal=HTTP/recon@EXAMPLE.COM
OZONE-SITE.XML_ozone.om.http.auth.type=kerberos
OZONE-SITE.XML_hdds.secret.key.rotate.duration=5m
SHLVL=1
HOME=/opt/hadoop
OZONE_CONF_DIR=/etc/hadoop
KMS-SITE.XML_hadoop.kms.proxyuser.s3g.hosts=*
OZONE-SITE.XML_ozone.om.ratis.enable=true
OZONE-SITE.XML_ozone.recon.http.auth.kerberos.keytab=/etc/security/keytabs/recon.keytab
no_proxy=om1,om2,om3,scm1,scm2,scm3,s3g,kdc,localhost,127.0.0.1
HDFS-SITE.XML_dfs.web.authentication.kerberos.principal=HTTP/ozone@EXAMPLE.COM
HTTPFS-SITE.XML_httpfs.hadoop.authentication.kerberos.keytab=/etc/security/keytabs/httpfs.keytab
OZONE-SITE.XML_hdds.datanode.dir=/data/hdds
OZONE-SITE.XML_ozone.s3g.secret.http.enabled=true
OZONE-SITE.XML_ozone.scm.nodes.scmservice=scm1,scm2,scm3
CORE-SITE.XML_hadoop.http.authentication.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
OZONE-SITE.XML_ozone.om.http.auth.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
OZONE-SITE.XML_ozone.scm.datanode.id.dir=/data
OZONE_UPGRADE_TO=1.4.0
HTTPFS-SITE.XML_hadoop.http.authentication.type=kerberos
CORE-SITE.XML_hadoop.http.authentication.signature.secret.file=/etc/security/http_secret
OZONE-SITE.XML_ozone.s3g.http.auth.kerberos.principal=HTTP/s3g@EXAMPLE.COM
OZONE-SITE.XML_ozone.scm.service.ids=scmservice
OZONE-SITE.XML_ozone.om.address.omservice.om3=om3
OZONE-SITE.XML_ozone.scm.address.scmservice.scm1=scm1.org
OZONE-SITE.XML_ozone.om.address.omservice.om2=om2
OZONE-SITE.XML_ozone.recon.kerberos.keytab.file=/etc/security/keytabs/recon.keytab
OZONE-SITE.XML_ozone.scm.address.scmservice.scm2=scm2.org
OZONE-SITE.XML_ozone.om.address.omservice.om1=om1
OZONE-SITE.XML_hdds.block.token.enabled=true
CORE-SITE.XML_hadoop.proxyuser.httpfs.hosts=*
OZONE-SITE.XML_ozone.scm.ratis.enable=true
OZONE-SITE.XML_ozone.scm.address.scmservice.scm3=scm3.org
OZONE-SITE.XML_hdds.datanode.http.auth.type=kerberos
HADOOP-POLICY.XML_hdds.security.client.datanode.container.protocol.acl=*
CORE-SITE.XML_hadoop.security.key.provider.path=kms://http@kms:9600/kms
OZONE-SITE.XML_hdds.datanode.volume.min.free.space=100MB
CORE-SITE.XML_hadoop.security.authorization=true
_=/usr/bin/env</msg>
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-01-20T11:32:33.436000" elapsed="0.000000"/>
</kw>
<kw name="Pass Execution If" owner="BuiltIn">
<arg>'%{OZONE_UPGRADE_FROM}' == '1.1.0'</arg>
<arg>OM finalization not supported in version %{OZONE_UPGRADE_FROM}</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" start="2024-01-20T11:32:33.436000" elapsed="0.001000"/>
</kw>
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-01-20T11:32:33.439000" level="INFO">Running command 'ozone admin om finalizationstatus 2&gt;&amp;1'.</msg>
<msg time="2024-01-20T11:32:35.606000" level="INFO">${rc} = 0</msg>
<msg time="2024-01-20T11:32:35.606000" level="INFO">${output} = ALREADY_FINALIZED</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-01-20T11:32:33.438000" elapsed="2.168000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-01-20T11:32:35.607000" level="INFO">ALREADY_FINALIZED</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-01-20T11:32:35.606000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-01-20T11:32:35.607000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-01-20T11:32:35.607000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-01-20T11:32:33.437000" elapsed="2.171000"/>
</kw>
<msg time="2024-01-20T11:32:35.608000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-01-20T11:32:33.437000" elapsed="2.171000"/>
</kw>
<msg time="2024-01-20T11:32:35.608000" level="INFO">${result} = ALREADY_FINALIZED</msg>
<var>${result}</var>
<arg>ozone admin om finalizationstatus</arg>
<status status="PASS" start="2024-01-20T11:32:33.437000" elapsed="2.171000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-01-20T11:32:35.609000" level="INFO">ALREADY_FINALIZED</msg>
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-01-20T11:32:35.608000" elapsed="0.001000"/>
</kw>
<kw name="Should Contain Any" owner="BuiltIn">
<arg>${result}</arg>
<arg>ALREADY_FINALIZED</arg>
<arg>FINALIZATION_DONE</arg>
<doc>Fails if ``container`` does not contain any of the ``*items``.</doc>
<status status="PASS" start="2024-01-20T11:32:35.609000" elapsed="0.000000"/>
</kw>
<tag>finalized</tag>
<tag>om</tag>
<timeout value="10 minutes"/>
<status status="PASS" start="2024-01-20T11:32:33.324000" elapsed="2.285000"/>
</test>
<test id="s1-s1-t2" name="Check SCM Finalized" line="32">
<kw name="Run Keyword If" owner="BuiltIn" type="SETUP">
<kw name="Kinit test user" owner="commonlib">
<kw name="Get test user principal" owner="commonlib">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-01-20T11:32:35.614000" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg time="2024-01-20T11:32:35.616000" level="INFO">${rc} = 0</msg>
<msg time="2024-01-20T11:32:35.616000" level="INFO">${output} = scm</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-01-20T11:32:35.613000" elapsed="0.003000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-01-20T11:32:35.617000" level="INFO">scm</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-01-20T11:32:35.616000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-01-20T11:32:35.617000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-01-20T11:32:35.617000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-01-20T11:32:35.612000" elapsed="0.005000"/>
</kw>
<msg time="2024-01-20T11:32:35.617000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-01-20T11:32:35.612000" elapsed="0.006000"/>
</kw>
<msg time="2024-01-20T11:32:35.618000" level="INFO">${instance} = scm</msg>
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<status status="PASS" start="2024-01-20T11:32:35.611000" elapsed="0.007000"/>
</kw>
<msg time="2024-01-20T11:32:35.618000" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<var>${TEST_USER}</var>
<arg>${user}</arg>
<status status="PASS" start="2024-01-20T11:32:35.611000" elapsed="0.007000"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2024-01-20T11:32:35.618000" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2024-01-20T11:32:35.618000" elapsed="0.001000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-01-20T11:32:35.621000" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg time="2024-01-20T11:32:35.663000" level="INFO">${rc} = 0</msg>
<msg time="2024-01-20T11:32:35.663000" level="INFO">${output} = </msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-01-20T11:32:35.620000" elapsed="0.043000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-01-20T11:32:35.664000" level="INFO"/>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-01-20T11:32:35.664000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-01-20T11:32:35.665000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-01-20T11:32:35.664000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-01-20T11:32:35.619000" elapsed="0.046000"/>
</kw>
<msg time="2024-01-20T11:32:35.665000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-01-20T11:32:35.619000" elapsed="0.046000"/>
</kw>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<status status="PASS" start="2024-01-20T11:32:35.619000" elapsed="0.046000"/>
</kw>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-01-20T11:32:35.619000" elapsed="0.046000"/>
</kw>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<status status="PASS" start="2024-01-20T11:32:35.611000" elapsed="0.055000"/>
</kw>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-01-20T11:32:35.610000" elapsed="0.056000"/>
</kw>
<kw name="Pass Execution If" owner="BuiltIn">
<arg>'%{OZONE_UPGRADE_FROM}' == '1.1.0'</arg>
<arg>HDDS finalization not supported in version %{OZONE_UPGRADE_FROM}</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" start="2024-01-20T11:32:35.666000" elapsed="0.000000"/>
</kw>
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-01-20T11:32:35.668000" level="INFO">Running command 'ozone admin scm finalizationstatus 2&gt;&amp;1'.</msg>
<msg time="2024-01-20T11:32:37.707000" level="INFO">${rc} = 0</msg>
<msg time="2024-01-20T11:32:37.707000" level="INFO">${output} = FINALIZATION_DONE</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-01-20T11:32:35.667000" elapsed="2.040000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-01-20T11:32:37.708000" level="INFO">FINALIZATION_DONE</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-01-20T11:32:37.707000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-01-20T11:32:37.708000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-01-20T11:32:37.708000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-01-20T11:32:35.667000" elapsed="2.041000"/>
</kw>
<msg time="2024-01-20T11:32:37.708000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-01-20T11:32:35.666000" elapsed="2.043000"/>
</kw>
<msg time="2024-01-20T11:32:37.709000" level="INFO">${result} = FINALIZATION_DONE</msg>
<var>${result}</var>
<arg>ozone admin scm finalizationstatus</arg>
<status status="PASS" start="2024-01-20T11:32:35.666000" elapsed="2.043000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-01-20T11:32:37.709000" level="INFO">FINALIZATION_DONE</msg>
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-01-20T11:32:37.709000" elapsed="0.000000"/>
</kw>
<kw name="Should Contain Any" owner="BuiltIn">
<arg>${result}</arg>
<arg>ALREADY_FINALIZED</arg>
<arg>FINALIZATION_DONE</arg>
<doc>Fails if ``container`` does not contain any of the ``*items``.</doc>
<status status="PASS" start="2024-01-20T11:32:37.709000" elapsed="0.001000"/>
</kw>
<tag>finalized</tag>
<tag>scm</tag>
<timeout value="10 minutes"/>
<status status="PASS" start="2024-01-20T11:32:35.610000" elapsed="2.100000"/>
</test>
<doc>Finalize Upgrade of the Ozone cluster</doc>
<status status="PASS" start="2024-01-20T11:32:33.286000" elapsed="4.425000"/>
</suite>
<suite id="s1-s2" name="1.3.0-1.4.0-1-original-generate-old1" source="/opt/ozone/smoketest/upgrade/generate.robot">
<kw name="Run Keyword If" owner="BuiltIn" type="SETUP">
<kw name="Kinit test user" owner="commonlib">
<kw name="Get test user principal" owner="commonlib">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-01-20T11:32:40.671000" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg time="2024-01-20T11:32:40.673000" level="INFO">${rc} = 0</msg>
<msg time="2024-01-20T11:32:40.673000" level="INFO">${output} = scm</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-01-20T11:32:40.668000" elapsed="0.005000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-01-20T11:32:40.673000" level="INFO">scm</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-01-20T11:32:40.673000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-01-20T11:32:40.674000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-01-20T11:32:40.673000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-01-20T11:32:40.668000" elapsed="0.006000"/>
</kw>
<msg time="2024-01-20T11:32:40.674000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-01-20T11:32:40.667000" elapsed="0.008000"/>
</kw>
<msg time="2024-01-20T11:32:40.675000" level="INFO">${instance} = scm</msg>
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<status status="PASS" start="2024-01-20T11:32:40.667000" elapsed="0.008000"/>
</kw>
<msg time="2024-01-20T11:32:40.675000" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<var>${TEST_USER}</var>
<arg>${user}</arg>
<status status="PASS" start="2024-01-20T11:32:40.667000" elapsed="0.008000"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2024-01-20T11:32:40.676000" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2024-01-20T11:32:40.675000" elapsed="0.001000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-01-20T11:32:40.678000" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg time="2024-01-20T11:32:40.740000" level="INFO">${rc} = 0</msg>
<msg time="2024-01-20T11:32:40.740000" level="INFO">${output} = </msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-01-20T11:32:40.677000" elapsed="0.063000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-01-20T11:32:40.741000" level="INFO"/>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-01-20T11:32:40.741000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-01-20T11:32:40.742000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-01-20T11:32:40.741000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-01-20T11:32:40.677000" elapsed="0.065000"/>
</kw>
<msg time="2024-01-20T11:32:40.742000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-01-20T11:32:40.677000" elapsed="0.065000"/>
</kw>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<status status="PASS" start="2024-01-20T11:32:40.676000" elapsed="0.066000"/>
</kw>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-01-20T11:32:40.676000" elapsed="0.067000"/>
</kw>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<status status="PASS" start="2024-01-20T11:32:40.667000" elapsed="0.076000"/>
</kw>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-01-20T11:32:40.666000" elapsed="0.077000"/>
</kw>
<test id="s1-s2-t1" name="Create a volume and bucket" line="29">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-01-20T11:32:40.746000" level="INFO">Running command 'ozone sh volume create old1-volume 2&gt;&amp;1'.</msg>
<msg time="2024-01-20T11:32:43.033000" level="INFO">${rc} = 0</msg>
<msg time="2024-01-20T11:32:43.033000" level="INFO">${output} = 2024-01-20 11:32:42,930 [main] INFO rpc.RpcClient: Creating Volume: old1-volume, with testuser as owner and space quota set to -1 bytes, counts quota set to -1</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-01-20T11:32:40.745000" elapsed="2.288000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-01-20T11:32:43.034000" level="INFO">2024-01-20 11:32:42,930 [main] INFO rpc.RpcClient: Creating Volume: old1-volume, with testuser as owner and space quota set to -1 bytes, counts quota set to -1</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-01-20T11:32:43.034000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-01-20T11:32:43.035000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-01-20T11:32:43.035000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-01-20T11:32:40.744000" elapsed="2.292000"/>
</kw>
<msg time="2024-01-20T11:32:43.036000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-01-20T11:32:40.744000" elapsed="2.292000"/>
</kw>
<msg time="2024-01-20T11:32:43.037000" level="INFO">${output} = 2024-01-20 11:32:42,930 [main] INFO rpc.RpcClient: Creating Volume: old1-volume, with testuser as owner and space quota set to -1 bytes, counts quota set to -1</msg>
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<status status="PASS" start="2024-01-20T11:32:40.744000" elapsed="2.293000"/>
</kw>
<kw name="Should Not Contain" owner="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" start="2024-01-20T11:32:43.037000" elapsed="0.000000"/>
</kw>
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-01-20T11:32:43.047000" level="INFO">Running command 'ozone sh bucket create /old1-volume/old1-bucket 2&gt;&amp;1'.</msg>
<msg time="2024-01-20T11:32:45.301000" level="INFO">${rc} = 0</msg>
<msg time="2024-01-20T11:32:45.302000" level="INFO">${output} = 2024-01-20 11:32:45,245 [main] INFO rpc.RpcClient: Creating Bucket: old1-volume/old1-bucket, with server-side default bucket layout, testuser as owner, Versioning false, Storage Type set to DISK and E...</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-01-20T11:32:43.039000" elapsed="2.263000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-01-20T11:32:45.302000" level="INFO">2024-01-20 11:32:45,245 [main] INFO rpc.RpcClient: Creating Bucket: old1-volume/old1-bucket, with server-side default bucket layout, testuser as owner, Versioning false, Storage Type set to DISK and Encryption set to false </msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-01-20T11:32:45.302000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-01-20T11:32:45.303000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-01-20T11:32:45.303000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-01-20T11:32:43.039000" elapsed="2.264000"/>
</kw>
<msg time="2024-01-20T11:32:45.303000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-01-20T11:32:43.038000" elapsed="2.266000"/>
</kw>
<msg time="2024-01-20T11:32:45.304000" level="INFO">${output} = 2024-01-20 11:32:45,245 [main] INFO rpc.RpcClient: Creating Bucket: old1-volume/old1-bucket, with server-side default bucket layout, testuser as owner, Versioning false, Storage Type set to DISK and E...</msg>
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<status status="PASS" start="2024-01-20T11:32:43.037000" elapsed="2.267000"/>
</kw>
<kw name="Should Not Contain" owner="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" start="2024-01-20T11:32:45.304000" elapsed="0.000000"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" start="2024-01-20T11:32:40.743000" elapsed="4.561000"/>
</test>
<test id="s1-s2-t2" name="Create key" line="36">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-01-20T11:32:45.307000" level="INFO">Running command 'echo "old1: key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg time="2024-01-20T11:32:45.308000" level="INFO">${rc} = 0</msg>
<msg time="2024-01-20T11:32:45.308000" level="INFO">${output} = </msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-01-20T11:32:45.306000" elapsed="0.002000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-01-20T11:32:45.309000" level="INFO"/>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-01-20T11:32:45.309000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-01-20T11:32:45.309000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-01-20T11:32:45.309000" elapsed="0.001000"/>
</kw>
<arg>echo "${PREFIX}: key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<status status="PASS" start="2024-01-20T11:32:45.306000" elapsed="0.004000"/>
</kw>
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-01-20T11:32:45.312000" level="INFO">Running command 'ozone sh key put /old1-volume/old1-bucket/old1-key /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg time="2024-01-20T11:32:49.792000" level="INFO">${rc} = 0</msg>
<msg time="2024-01-20T11:32:49.792000" level="INFO">${output} = 2024-01-20 11:32:48,056 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-01-20 11:32:48,132 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-01-20T11:32:45.311000" elapsed="4.481000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-01-20T11:32:49.793000" level="INFO">2024-01-20 11:32:48,056 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-01-20 11:32:48,132 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2024-01-20 11:32:48,132 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2024-01-20 11:32:48,368 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-01-20T11:32:49.793000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-01-20T11:32:49.794000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-01-20T11:32:49.793000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-01-20T11:32:45.311000" elapsed="4.483000"/>
</kw>
<msg time="2024-01-20T11:32:49.794000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-01-20T11:32:45.310000" elapsed="4.484000"/>
</kw>
<msg time="2024-01-20T11:32:49.795000" level="INFO">${output} = 2024-01-20 11:32:48,056 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-01-20 11:32:48,132 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/sourcekey</arg>
<status status="PASS" start="2024-01-20T11:32:45.310000" elapsed="4.485000"/>
</kw>
<kw name="Should Not Contain" owner="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" start="2024-01-20T11:32:49.795000" elapsed="0.000000"/>
</kw>
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-01-20T11:32:49.797000" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg time="2024-01-20T11:32:49.798000" level="INFO">${rc} = 0</msg>
<msg time="2024-01-20T11:32:49.799000" level="INFO">${output} = </msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-01-20T11:32:49.796000" elapsed="0.003000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-01-20T11:32:49.799000" level="INFO"/>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-01-20T11:32:49.799000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-01-20T11:32:49.800000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-01-20T11:32:49.799000" elapsed="0.001000"/>
</kw>
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<status status="PASS" start="2024-01-20T11:32:49.795000" elapsed="0.005000"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" start="2024-01-20T11:32:45.305000" elapsed="4.495000"/>
</test>
<test id="s1-s2-t3" name="Create a bucket in s3v volume" line="42">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-01-20T11:32:49.803000" level="INFO">Running command 'ozone sh bucket create /s3v/old1-bucket 2&gt;&amp;1'.</msg>
<msg time="2024-01-20T11:32:51.934000" level="INFO">${rc} = 0</msg>
<msg time="2024-01-20T11:32:51.934000" level="INFO">${output} = 2024-01-20 11:32:51,906 [main] INFO rpc.RpcClient: Creating Bucket: s3v/old1-bucket, with server-side default bucket layout, testuser as owner, Versioning false, Storage Type set to DISK and Encryptio...</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-01-20T11:32:49.802000" elapsed="2.132000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-01-20T11:32:51.935000" level="INFO">2024-01-20 11:32:51,906 [main] INFO rpc.RpcClient: Creating Bucket: s3v/old1-bucket, with server-side default bucket layout, testuser as owner, Versioning false, Storage Type set to DISK and Encryption set to false </msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-01-20T11:32:51.935000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-01-20T11:32:51.936000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-01-20T11:32:51.935000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-01-20T11:32:49.802000" elapsed="2.134000"/>
</kw>
<msg time="2024-01-20T11:32:51.936000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-01-20T11:32:49.802000" elapsed="2.134000"/>
</kw>
<msg time="2024-01-20T11:32:51.937000" level="INFO">${output} = 2024-01-20 11:32:51,906 [main] INFO rpc.RpcClient: Creating Bucket: s3v/old1-bucket, with server-side default bucket layout, testuser as owner, Versioning false, Storage Type set to DISK and Encryptio...</msg>
<var>${output}</var>
<arg>ozone sh bucket create /s3v/${PREFIX}-bucket</arg>
<status status="PASS" start="2024-01-20T11:32:49.801000" elapsed="2.136000"/>
</kw>
<kw name="Should Not Contain" owner="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" start="2024-01-20T11:32:51.937000" elapsed="0.000000"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" start="2024-01-20T11:32:49.801000" elapsed="2.136000"/>
</test>
<test id="s1-s2-t4" name="Create key in the bucket in s3v volume" line="47">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-01-20T11:32:51.940000" level="INFO">Running command 'echo "old1: another key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg time="2024-01-20T11:32:51.941000" level="INFO">${rc} = 0</msg>
<msg time="2024-01-20T11:32:51.941000" level="INFO">${output} = </msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-01-20T11:32:51.939000" elapsed="0.002000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-01-20T11:32:51.942000" level="INFO"/>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-01-20T11:32:51.941000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-01-20T11:32:51.942000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-01-20T11:32:51.942000" elapsed="0.000000"/>
</kw>
<arg>echo "${PREFIX}: another key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<status status="PASS" start="2024-01-20T11:32:51.938000" elapsed="0.004000"/>
</kw>
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-01-20T11:32:51.945000" level="INFO">Running command 'ozone sh key put /s3v/old1-bucket/key1-shell /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg time="2024-01-20T11:32:55.998000" level="INFO">${rc} = 0</msg>
<msg time="2024-01-20T11:32:55.998000" level="INFO">${output} = 2024-01-20 11:32:54,658 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-01-20 11:32:54,721 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-01-20T11:32:51.944000" elapsed="4.054000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-01-20T11:32:55.999000" level="INFO">2024-01-20 11:32:54,658 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-01-20 11:32:54,721 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2024-01-20 11:32:54,722 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2024-01-20 11:32:54,957 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-01-20T11:32:55.999000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-01-20T11:32:56" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-01-20T11:32:55.999000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-01-20T11:32:51.943000" elapsed="4.057000"/>
</kw>
<msg time="2024-01-20T11:32:56" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-01-20T11:32:51.943000" elapsed="4.057000"/>
</kw>
<msg time="2024-01-20T11:32:56.001000" level="INFO">${output} = 2024-01-20 11:32:54,658 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-01-20 11:32:54,721 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<var>${output}</var>
<arg>ozone sh key put /s3v/${PREFIX}-bucket/key1-shell /tmp/sourcekey</arg>
<status status="PASS" start="2024-01-20T11:32:51.943000" elapsed="4.058000"/>
</kw>
<kw name="Should Not Contain" owner="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" start="2024-01-20T11:32:56.001000" elapsed="0.000000"/>
</kw>
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-01-20T11:32:56.003000" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg time="2024-01-20T11:32:56.005000" level="INFO">${rc} = 0</msg>
<msg time="2024-01-20T11:32:56.005000" level="INFO">${output} = </msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-01-20T11:32:56.002000" elapsed="0.003000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-01-20T11:32:56.006000" level="INFO"/>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-01-20T11:32:56.005000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-01-20T11:32:56.006000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-01-20T11:32:56.006000" elapsed="0.000000"/>
</kw>
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<status status="PASS" start="2024-01-20T11:32:56.001000" elapsed="0.005000"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" start="2024-01-20T11:32:51.938000" elapsed="4.069000"/>
</test>
<test id="s1-s2-t5" name="Try to create a bucket using S3 API" line="53">
<kw name="Setup v4 headers" owner="commonawslib" type="SETUP">
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Kinit test user" owner="commonlib">
<kw name="Get test user principal" owner="commonlib">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-01-20T11:32:56.011000" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg time="2024-01-20T11:32:56.013000" level="INFO">${rc} = 0</msg>
<msg time="2024-01-20T11:32:56.013000" level="INFO">${output} = scm</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-01-20T11:32:56.010000" elapsed="0.003000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-01-20T11:32:56.014000" level="INFO">scm</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-01-20T11:32:56.013000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-01-20T11:32:56.014000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-01-20T11:32:56.014000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-01-20T11:32:56.009000" elapsed="0.005000"/>
</kw>
<msg time="2024-01-20T11:32:56.014000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-01-20T11:32:56.009000" elapsed="0.006000"/>
</kw>
<msg time="2024-01-20T11:32:56.015000" level="INFO">${instance} = scm</msg>
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<status status="PASS" start="2024-01-20T11:32:56.009000" elapsed="0.006000"/>
</kw>
<msg time="2024-01-20T11:32:56.015000" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<var>${TEST_USER}</var>
<arg>${user}</arg>
<status status="PASS" start="2024-01-20T11:32:56.008000" elapsed="0.007000"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2024-01-20T11:32:56.016000" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2024-01-20T11:32:56.015000" elapsed="0.001000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-01-20T11:32:56.018000" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg time="2024-01-20T11:32:56.035000" level="INFO">${rc} = 0</msg>
<msg time="2024-01-20T11:32:56.035000" level="INFO">${output} = </msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-01-20T11:32:56.017000" elapsed="0.018000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-01-20T11:32:56.035000" level="INFO"/>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-01-20T11:32:56.035000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-01-20T11:32:56.036000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-01-20T11:32:56.036000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-01-20T11:32:56.017000" elapsed="0.019000"/>
</kw>
<msg time="2024-01-20T11:32:56.036000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-01-20T11:32:56.017000" elapsed="0.020000"/>
</kw>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<status status="PASS" start="2024-01-20T11:32:56.016000" elapsed="0.021000"/>
</kw>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-01-20T11:32:56.016000" elapsed="0.021000"/>
</kw>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<status status="PASS" start="2024-01-20T11:32:56.008000" elapsed="0.029000"/>
</kw>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-01-20T11:32:56.008000" elapsed="0.029000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Setup secure v4 headers" owner="commonawslib">
<kw name="Execute And Ignore Error" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-01-20T11:32:56.039000" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg time="2024-01-20T11:32:57.980000" level="INFO">${rc} = 0</msg>
<msg time="2024-01-20T11:32:57.980000" level="INFO">${output} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=92aaae48a0c9e8ac0fb13d8fdc66d982499c9f12475343829aa2b9e6315a7607</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-01-20T11:32:56.038000" elapsed="1.942000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-01-20T11:32:57.981000" level="INFO">awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=92aaae48a0c9e8ac0fb13d8fdc66d982499c9f12475343829aa2b9e6315a7607</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-01-20T11:32:57.980000" elapsed="0.001000"/>
</kw>
<msg time="2024-01-20T11:32:57.981000" level="INFO">${result} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=92aaae48a0c9e8ac0fb13d8fdc66d982499c9f12475343829aa2b9e6315a7607</msg>
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<status status="PASS" start="2024-01-20T11:32:56.038000" elapsed="1.943000"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-01-20T11:32:57.982000" level="FAIL">'awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=92aaae48a0c9e8ac0fb13d8fdc66d982499c9f12475343829aa2b9e6315a7607' does not contain 'S3_SECRET_ALREADY_EXISTS'</msg>
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-01-20T11:32:57.982000" elapsed="0.000000"/>
</kw>
<msg time="2024-01-20T11:32:57.983000" level="INFO">${exists} = False</msg>
<var>${exists}</var>
<arg>Should Contain</arg>
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-01-20T11:32:57.981000" elapsed="0.002000"/>
</kw>
<if>
<branch type="IF" condition="${exists}">
<kw name="Execute" owner="os">
<arg>ozone s3 revokesecret -y ${OM_HA_PARAM}</arg>
<status status="NOT RUN" start="2024-01-20T11:32:57.983000" elapsed="0.000000"/>
</kw>
<kw name="Execute" owner="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<status status="NOT RUN" start="2024-01-20T11:32:57.983000" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-01-20T11:32:57.983000" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-01-20T11:32:57.983000" elapsed="0.000000"/>
</if>
<kw name="Get Regexp Matches" owner="String">
<msg time="2024-01-20T11:32:57.984000" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<status status="PASS" start="2024-01-20T11:32:57.983000" elapsed="0.001000"/>
</kw>
<kw name="Get Variable Value" owner="BuiltIn">
<msg time="2024-01-20T11:32:57.984000" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<status status="PASS" start="2024-01-20T11:32:57.984000" elapsed="0.000000"/>
</kw>
<kw name="Get Regexp Matches" owner="String">
<msg time="2024-01-20T11:32:57.985000" level="INFO">${secret} = ['92aaae48a0c9e8ac0fb13d8fdc66d982499c9f12475343829aa2b9e6315a7607']</msg>
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<status status="PASS" start="2024-01-20T11:32:57.984000" elapsed="0.001000"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-01-20T11:32:57.986000" level="INFO">${accessKey} = testuser/scm@EXAMPLE.COM</msg>
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-01-20T11:32:57.985000" elapsed="0.001000"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-01-20T11:32:57.987000" level="INFO">${secret} = 92aaae48a0c9e8ac0fb13d8fdc66d982499c9f12475343829aa2b9e6315a7607</msg>
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-01-20T11:32:57.986000" elapsed="0.001000"/>
</kw>
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-01-20T11:32:57.989000" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg time="2024-01-20T11:32:58.354000" level="INFO">${rc} = 0</msg>
<msg time="2024-01-20T11:32:58.354000" level="INFO">${output} = </msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-01-20T11:32:57.988000" elapsed="0.366000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-01-20T11:32:58.355000" level="INFO"/>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-01-20T11:32:58.354000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-01-20T11:32:58.355000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-01-20T11:32:58.355000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-01-20T11:32:57.987000" elapsed="0.369000"/>
</kw>
<msg time="2024-01-20T11:32:58.356000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-01-20T11:32:57.987000" elapsed="0.369000"/>
</kw>
<arg>aws configure set default.s3.signature_version s3v4</arg>
<status status="PASS" start="2024-01-20T11:32:57.987000" elapsed="0.369000"/>
</kw>
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-01-20T11:32:58.359000" level="INFO">Running command 'aws configure set aws_access_key_id testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg time="2024-01-20T11:32:58.709000" level="INFO">${rc} = 0</msg>
<msg time="2024-01-20T11:32:58.710000" level="INFO">${output} = </msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-01-20T11:32:58.358000" elapsed="0.352000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-01-20T11:32:58.710000" level="INFO"/>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-01-20T11:32:58.710000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-01-20T11:32:58.711000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-01-20T11:32:58.711000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-01-20T11:32:58.357000" elapsed="0.354000"/>
</kw>
<msg time="2024-01-20T11:32:58.711000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-01-20T11:32:58.357000" elapsed="0.355000"/>
</kw>
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<status status="PASS" start="2024-01-20T11:32:58.357000" elapsed="0.355000"/>
</kw>
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-01-20T11:32:58.715000" level="INFO">Running command 'aws configure set aws_secret_access_key 92aaae48a0c9e8ac0fb13d8fdc66d982499c9f12475343829aa2b9e6315a7607 2&gt;&amp;1'.</msg>
<msg time="2024-01-20T11:32:59.082000" level="INFO">${rc} = 0</msg>
<msg time="2024-01-20T11:32:59.082000" level="INFO">${output} = </msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-01-20T11:32:58.713000" elapsed="0.369000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-01-20T11:32:59.083000" level="INFO"/>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-01-20T11:32:59.083000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-01-20T11:32:59.084000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-01-20T11:32:59.083000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-01-20T11:32:58.712000" elapsed="0.372000"/>
</kw>
<msg time="2024-01-20T11:32:59.084000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-01-20T11:32:58.712000" elapsed="0.372000"/>
</kw>
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<status status="PASS" start="2024-01-20T11:32:58.712000" elapsed="0.372000"/>
</kw>
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-01-20T11:32:59.087000" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg time="2024-01-20T11:32:59.456000" level="INFO">${rc} = 0</msg>
<msg time="2024-01-20T11:32:59.456000" level="INFO">${output} = </msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-01-20T11:32:59.086000" elapsed="0.370000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-01-20T11:32:59.457000" level="INFO"/>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-01-20T11:32:59.456000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-01-20T11:32:59.458000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-01-20T11:32:59.457000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-01-20T11:32:59.085000" elapsed="0.373000"/>
</kw>
<msg time="2024-01-20T11:32:59.458000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-01-20T11:32:59.085000" elapsed="0.373000"/>
</kw>
<arg>aws configure set region us-west-1</arg>
<status status="PASS" start="2024-01-20T11:32:59.085000" elapsed="0.374000"/>
</kw>
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-01-20T11:32:59.461000" level="INFO">Running command 'aws configure set default.s3.addressing_style path 2&gt;&amp;1'.</msg>
<msg time="2024-01-20T11:32:59.827000" level="INFO">${rc} = 0</msg>
<msg time="2024-01-20T11:32:59.827000" level="INFO">${output} = </msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-01-20T11:32:59.460000" elapsed="0.367000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-01-20T11:32:59.828000" level="INFO"/>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-01-20T11:32:59.827000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-01-20T11:32:59.828000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-01-20T11:32:59.828000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-01-20T11:32:59.459000" elapsed="0.370000"/>
</kw>
<msg time="2024-01-20T11:32:59.829000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-01-20T11:32:59.459000" elapsed="0.370000"/>
</kw>
<arg>aws configure set default.s3.addressing_style ${OZONE_S3_ADDRESS_STYLE}</arg>
<status status="PASS" start="2024-01-20T11:32:59.459000" elapsed="0.370000"/>
</kw>
<status status="PASS" start="2024-01-20T11:32:56.037000" elapsed="3.792000"/>
</kw>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-01-20T11:32:56.037000" elapsed="3.793000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-01-20T11:32:59.830000" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-01-20T11:32:56.008000" elapsed="3.822000"/>
</kw>
<kw name="Generate Ozone String" owner="commonawslib">
<kw name="Generate Random String" owner="String">
<msg time="2024-01-20T11:32:59.831000" level="INFO">${randStr} = 2741886484</msg>
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<status status="PASS" start="2024-01-20T11:32:59.831000" elapsed="0.000000"/>
</kw>
<msg time="2024-01-20T11:32:59.831000" level="INFO">${random} = ozone-test-2741886484</msg>
<var>${random}</var>
<status status="PASS" start="2024-01-20T11:32:59.830000" elapsed="0.001000"/>
</kw>
<kw name="Create bucket with name" owner="commonawslib">
<kw name="Execute AWSS3APICli" owner="commonawslib">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-01-20T11:32:59.834000" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket old1-bucket-ozone-test-2741886484 2&gt;&amp;1'.</msg>
<msg time="2024-01-20T11:33:01.465000" level="INFO">${rc} = 0</msg>
<msg time="2024-01-20T11:33:01.465000" level="INFO">${output} = {
    "Location": "http://s3g:9878/old1-bucket-ozone-test-2741886484"
}</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-01-20T11:32:59.833000" elapsed="1.632000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-01-20T11:33:01.466000" level="INFO">{
    "Location": "http://s3g:9878/old1-bucket-ozone-test-2741886484"
}</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-01-20T11:33:01.466000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-01-20T11:33:01.467000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-01-20T11:33:01.466000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-01-20T11:32:59.833000" elapsed="1.634000"/>
</kw>
<msg time="2024-01-20T11:33:01.467000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-01-20T11:32:59.832000" elapsed="1.635000"/>
</kw>
<msg time="2024-01-20T11:33:01.468000" level="INFO">${output} = {
    "Location": "http://s3g:9878/old1-bucket-ozone-test-2741886484"
}</msg>
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<status status="PASS" start="2024-01-20T11:32:59.832000" elapsed="1.636000"/>
</kw>
<msg time="2024-01-20T11:33:01.468000" level="INFO">${result} = {
    "Location": "http://s3g:9878/old1-bucket-ozone-test-2741886484"
}</msg>
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<status status="PASS" start="2024-01-20T11:32:59.832000" elapsed="1.636000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-01-20T11:33:01.468000" elapsed="0.000000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-01-20T11:33:01.468000" elapsed="0.001000"/>
</kw>
<msg time="2024-01-20T11:33:01.469000" level="INFO">${output} = None</msg>
<var>${output}</var>
<arg>${PREFIX}-bucket-${random}</arg>
<status status="PASS" start="2024-01-20T11:32:59.831000" elapsed="1.638000"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${output}</arg>
<arg>${None}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2024-01-20T11:33:01.469000" elapsed="0.000000"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" start="2024-01-20T11:32:56.007000" elapsed="5.463000"/>
</test>
<test id="s1-s2-t6" name="Create key using S3 API" line="60">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-01-20T11:33:01.473000" level="INFO">Running command 'echo "old1: key created using S3 API" &gt; /tmp/sourcekey'.</msg>
<msg time="2024-01-20T11:33:01.474000" level="INFO">${rc} = 0</msg>
<msg time="2024-01-20T11:33:01.474000" level="INFO">${output} = </msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-01-20T11:33:01.472000" elapsed="0.002000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-01-20T11:33:01.475000" level="INFO"/>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-01-20T11:33:01.474000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-01-20T11:33:01.475000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-01-20T11:33:01.475000" elapsed="0.000000"/>
</kw>
<arg>echo "${PREFIX}: key created using S3 API" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<status status="PASS" start="2024-01-20T11:33:01.471000" elapsed="0.004000"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" owner="commonawslib">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-01-20T11:33:01.477000" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket old1-bucket --key key2-s3api --body /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg time="2024-01-20T11:33:05.317000" level="INFO">${rc} = 0</msg>
<msg time="2024-01-20T11:33:05.317000" level="INFO">${output} = </msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-01-20T11:33:01.476000" elapsed="3.841000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-01-20T11:33:05.318000" level="INFO"/>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-01-20T11:33:05.317000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-01-20T11:33:05.318000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-01-20T11:33:05.318000" elapsed="0.000000"/>
</kw>
<msg time="2024-01-20T11:33:05.319000" level="INFO">${output} = </msg>
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<status status="PASS" start="2024-01-20T11:33:01.476000" elapsed="3.843000"/>
</kw>
<msg time="2024-01-20T11:33:05.319000" level="INFO">${output} = </msg>
<var>${output}</var>
<arg>put-object --bucket ${PREFIX}-bucket --key key2-s3api --body /tmp/sourcekey</arg>
<arg>0</arg>
<status status="PASS" start="2024-01-20T11:33:01.475000" elapsed="3.844000"/>
</kw>
<kw name="Should Not Contain" owner="BuiltIn">
<arg>${output}</arg>
<arg>error</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" start="2024-01-20T11:33:05.319000" elapsed="0.000000"/>
</kw>
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-01-20T11:33:05.321000" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg time="2024-01-20T11:33:05.323000" level="INFO">${rc} = 0</msg>
<msg time="2024-01-20T11:33:05.323000" level="INFO">${output} = </msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-01-20T11:33:05.320000" elapsed="0.003000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-01-20T11:33:05.324000" level="INFO"/>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-01-20T11:33:05.323000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-01-20T11:33:05.324000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-01-20T11:33:05.324000" elapsed="0.000000"/>
</kw>
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<status status="PASS" start="2024-01-20T11:33:05.319000" elapsed="0.005000"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" start="2024-01-20T11:33:01.470000" elapsed="3.854000"/>
</test>
<doc>Generate data</doc>
<status status="PASS" start="2024-01-20T11:32:40.604000" elapsed="24.721000"/>
</suite>
<suite id="s1-s3" name="1.3.0-1.4.0-1-original-validate-old1" source="/opt/ozone/smoketest/upgrade/validate.robot">
<kw name="Run Keyword If" owner="BuiltIn" type="SETUP">
<kw name="Kinit test user" owner="commonlib">
<kw name="Get test user principal" owner="commonlib">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-01-20T11:33:08.288000" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg time="2024-01-20T11:33:08.290000" level="INFO">${rc} = 0</msg>
<msg time="2024-01-20T11:33:08.290000" level="INFO">${output} = scm</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-01-20T11:33:08.286000" elapsed="0.004000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-01-20T11:33:08.291000" level="INFO">scm</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-01-20T11:33:08.291000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-01-20T11:33:08.291000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-01-20T11:33:08.291000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-01-20T11:33:08.285000" elapsed="0.007000"/>
</kw>
<msg time="2024-01-20T11:33:08.292000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-01-20T11:33:08.285000" elapsed="0.008000"/>
</kw>
<msg time="2024-01-20T11:33:08.293000" level="INFO">${instance} = scm</msg>
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<status status="PASS" start="2024-01-20T11:33:08.285000" elapsed="0.008000"/>
</kw>
<msg time="2024-01-20T11:33:08.293000" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<var>${TEST_USER}</var>
<arg>${user}</arg>
<status status="PASS" start="2024-01-20T11:33:08.284000" elapsed="0.009000"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2024-01-20T11:33:08.294000" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2024-01-20T11:33:08.293000" elapsed="0.001000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-01-20T11:33:08.296000" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg time="2024-01-20T11:33:08.331000" level="INFO">${rc} = 0</msg>
<msg time="2024-01-20T11:33:08.331000" level="INFO">${output} = </msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-01-20T11:33:08.295000" elapsed="0.036000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-01-20T11:33:08.332000" level="INFO"/>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-01-20T11:33:08.331000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-01-20T11:33:08.332000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-01-20T11:33:08.332000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-01-20T11:33:08.295000" elapsed="0.038000"/>
</kw>
<msg time="2024-01-20T11:33:08.333000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-01-20T11:33:08.294000" elapsed="0.039000"/>
</kw>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<status status="PASS" start="2024-01-20T11:33:08.294000" elapsed="0.039000"/>
</kw>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-01-20T11:33:08.294000" elapsed="0.039000"/>
</kw>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<status status="PASS" start="2024-01-20T11:33:08.284000" elapsed="0.049000"/>
</kw>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-01-20T11:33:08.284000" elapsed="0.049000"/>
</kw>
<test id="s1-s3-t1" name="Read data from previously created key" line="29">
<kw name="Generate Random String" owner="String">
<msg time="2024-01-20T11:33:08.335000" level="INFO">${random} = 76837</msg>
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<status status="PASS" start="2024-01-20T11:33:08.335000" elapsed="0.000000"/>
</kw>
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-01-20T11:33:08.338000" level="INFO">Running command 'ozone sh key get /old1-volume/old1-bucket/old1-key /tmp/key-76837 2&gt;&amp;1'.</msg>
<msg time="2024-01-20T11:33:11.984000" level="INFO">${rc} = 0</msg>
<msg time="2024-01-20T11:33:11.985000" level="INFO">${output} = 2024-01-20 11:33:10,858 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-01-20 11:33:10,927 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-01-20T11:33:08.336000" elapsed="3.649000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-01-20T11:33:11.985000" level="INFO">2024-01-20 11:33:10,858 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-01-20 11:33:10,927 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2024-01-20 11:33:10,927 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-01-20T11:33:11.985000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-01-20T11:33:11.986000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-01-20T11:33:11.986000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-01-20T11:33:08.336000" elapsed="3.650000"/>
</kw>
<msg time="2024-01-20T11:33:11.986000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-01-20T11:33:08.336000" elapsed="3.651000"/>
</kw>
<msg time="2024-01-20T11:33:11.987000" level="INFO">${output} = 2024-01-20 11:33:10,858 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-01-20 11:33:10,927 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<status status="PASS" start="2024-01-20T11:33:08.335000" elapsed="3.652000"/>
</kw>
<kw name="Should Not Contain" owner="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" start="2024-01-20T11:33:11.987000" elapsed="0.000000"/>
</kw>
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-01-20T11:33:11.989000" level="INFO">Running command 'cat /tmp/key-76837 2&gt;&amp;1'.</msg>
<msg time="2024-01-20T11:33:11.991000" level="INFO">${rc} = 0</msg>
<msg time="2024-01-20T11:33:11.991000" level="INFO">${output} = old1: key created using Ozone Shell</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-01-20T11:33:11.988000" elapsed="0.003000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-01-20T11:33:11.991000" level="INFO">old1: key created using Ozone Shell</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-01-20T11:33:11.991000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-01-20T11:33:11.992000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-01-20T11:33:11.992000" elapsed="0.000000"/>
</kw>
<msg time="2024-01-20T11:33:11.992000" level="INFO">${output} = old1: key created using Ozone Shell</msg>
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<status status="PASS" start="2024-01-20T11:33:11.987000" elapsed="0.005000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-01-20T11:33:11.992000" elapsed="0.001000"/>
</kw>
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-01-20T11:33:11.994000" level="INFO">Running command 'rm /tmp/key-76837 2&gt;&amp;1'.</msg>
<msg time="2024-01-20T11:33:11.996000" level="INFO">${rc} = 0</msg>
<msg time="2024-01-20T11:33:11.996000" level="INFO">${output} = </msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-01-20T11:33:11.993000" elapsed="0.003000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-01-20T11:33:11.996000" level="INFO"/>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-01-20T11:33:11.996000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-01-20T11:33:11.997000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-01-20T11:33:11.997000" elapsed="0.000000"/>
</kw>
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<status status="PASS" start="2024-01-20T11:33:11.993000" elapsed="0.004000"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" start="2024-01-20T11:33:08.334000" elapsed="3.663000"/>
</test>
<test id="s1-s3-t2" name="Read key created with Ozone Shell using S3 API" line="37">
<kw name="Setup v4 headers" owner="commonawslib" type="SETUP">
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Kinit test user" owner="commonlib">
<kw name="Get test user principal" owner="commonlib">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-01-20T11:33:12.002000" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg time="2024-01-20T11:33:12.004000" level="INFO">${rc} = 0</msg>
<msg time="2024-01-20T11:33:12.004000" level="INFO">${output} = scm</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-01-20T11:33:12.001000" elapsed="0.003000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-01-20T11:33:12.005000" level="INFO">scm</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-01-20T11:33:12.004000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-01-20T11:33:12.005000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-01-20T11:33:12.005000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-01-20T11:33:12" elapsed="0.005000"/>
</kw>
<msg time="2024-01-20T11:33:12.005000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-01-20T11:33:12" elapsed="0.006000"/>
</kw>
<msg time="2024-01-20T11:33:12.006000" level="INFO">${instance} = scm</msg>
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<status status="PASS" start="2024-01-20T11:33:12" elapsed="0.006000"/>
</kw>
<msg time="2024-01-20T11:33:12.006000" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<var>${TEST_USER}</var>
<arg>${user}</arg>
<status status="PASS" start="2024-01-20T11:33:12" elapsed="0.006000"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2024-01-20T11:33:12.007000" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2024-01-20T11:33:12.006000" elapsed="0.001000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-01-20T11:33:12.009000" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg time="2024-01-20T11:33:12.024000" level="INFO">${rc} = 0</msg>
<msg time="2024-01-20T11:33:12.024000" level="INFO">${output} = </msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-01-20T11:33:12.008000" elapsed="0.016000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-01-20T11:33:12.025000" level="INFO"/>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-01-20T11:33:12.024000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-01-20T11:33:12.025000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-01-20T11:33:12.025000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-01-20T11:33:12.008000" elapsed="0.017000"/>
</kw>
<msg time="2024-01-20T11:33:12.026000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-01-20T11:33:12.007000" elapsed="0.019000"/>
</kw>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<status status="PASS" start="2024-01-20T11:33:12.007000" elapsed="0.019000"/>
</kw>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-01-20T11:33:12.007000" elapsed="0.019000"/>
</kw>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<status status="PASS" start="2024-01-20T11:33:11.999000" elapsed="0.027000"/>
</kw>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-01-20T11:33:11.999000" elapsed="0.027000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Setup secure v4 headers" owner="commonawslib">
<kw name="Execute And Ignore Error" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-01-20T11:33:12.029000" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg time="2024-01-20T11:33:13.849000" level="INFO">${rc} = 0</msg>
<msg time="2024-01-20T11:33:13.849000" level="INFO">${output} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=92aaae48a0c9e8ac0fb13d8fdc66d982499c9f12475343829aa2b9e6315a7607</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-01-20T11:33:12.027000" elapsed="1.822000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-01-20T11:33:13.850000" level="INFO">awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=92aaae48a0c9e8ac0fb13d8fdc66d982499c9f12475343829aa2b9e6315a7607</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-01-20T11:33:13.849000" elapsed="0.001000"/>
</kw>
<msg time="2024-01-20T11:33:13.850000" level="INFO">${result} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=92aaae48a0c9e8ac0fb13d8fdc66d982499c9f12475343829aa2b9e6315a7607</msg>
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<status status="PASS" start="2024-01-20T11:33:12.027000" elapsed="1.823000"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-01-20T11:33:13.851000" level="FAIL">'awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=92aaae48a0c9e8ac0fb13d8fdc66d982499c9f12475343829aa2b9e6315a7607' does not contain 'S3_SECRET_ALREADY_EXISTS'</msg>
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-01-20T11:33:13.850000" elapsed="0.001000"/>
</kw>
<msg time="2024-01-20T11:33:13.851000" level="INFO">${exists} = False</msg>
<var>${exists}</var>
<arg>Should Contain</arg>
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-01-20T11:33:13.850000" elapsed="0.001000"/>
</kw>
<if>
<branch type="IF" condition="${exists}">
<kw name="Execute" owner="os">
<arg>ozone s3 revokesecret -y ${OM_HA_PARAM}</arg>
<status status="NOT RUN" start="2024-01-20T11:33:13.852000" elapsed="0.000000"/>
</kw>
<kw name="Execute" owner="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<status status="NOT RUN" start="2024-01-20T11:33:13.852000" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-01-20T11:33:13.851000" elapsed="0.001000"/>
</branch>
<status status="PASS" start="2024-01-20T11:33:13.851000" elapsed="0.001000"/>
</if>
<kw name="Get Regexp Matches" owner="String">
<msg time="2024-01-20T11:33:13.853000" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<status status="PASS" start="2024-01-20T11:33:13.852000" elapsed="0.001000"/>
</kw>
<kw name="Get Variable Value" owner="BuiltIn">
<msg time="2024-01-20T11:33:13.853000" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<status status="PASS" start="2024-01-20T11:33:13.853000" elapsed="0.000000"/>
</kw>
<kw name="Get Regexp Matches" owner="String">
<msg time="2024-01-20T11:33:13.854000" level="INFO">${secret} = ['92aaae48a0c9e8ac0fb13d8fdc66d982499c9f12475343829aa2b9e6315a7607']</msg>
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<status status="PASS" start="2024-01-20T11:33:13.853000" elapsed="0.001000"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-01-20T11:33:13.855000" level="INFO">${accessKey} = testuser/scm@EXAMPLE.COM</msg>
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-01-20T11:33:13.854000" elapsed="0.001000"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-01-20T11:33:13.855000" level="INFO">${secret} = 92aaae48a0c9e8ac0fb13d8fdc66d982499c9f12475343829aa2b9e6315a7607</msg>
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-01-20T11:33:13.855000" elapsed="0.000000"/>
</kw>
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-01-20T11:33:13.858000" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg time="2024-01-20T11:33:14.218000" level="INFO">${rc} = 0</msg>
<msg time="2024-01-20T11:33:14.218000" level="INFO">${output} = </msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-01-20T11:33:13.856000" elapsed="0.362000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-01-20T11:33:14.219000" level="INFO"/>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-01-20T11:33:14.219000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-01-20T11:33:14.220000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-01-20T11:33:14.219000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-01-20T11:33:13.856000" elapsed="0.364000"/>
</kw>
<msg time="2024-01-20T11:33:14.220000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-01-20T11:33:13.856000" elapsed="0.364000"/>
</kw>
<arg>aws configure set default.s3.signature_version s3v4</arg>
<status status="PASS" start="2024-01-20T11:33:13.856000" elapsed="0.365000"/>
</kw>
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-01-20T11:33:14.223000" level="INFO">Running command 'aws configure set aws_access_key_id testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg time="2024-01-20T11:33:14.589000" level="INFO">${rc} = 0</msg>
<msg time="2024-01-20T11:33:14.589000" level="INFO">${output} = </msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-01-20T11:33:14.222000" elapsed="0.367000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-01-20T11:33:14.590000" level="INFO"/>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-01-20T11:33:14.590000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-01-20T11:33:14.591000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-01-20T11:33:14.590000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-01-20T11:33:14.221000" elapsed="0.370000"/>
</kw>
<msg time="2024-01-20T11:33:14.591000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-01-20T11:33:14.221000" elapsed="0.370000"/>
</kw>
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<status status="PASS" start="2024-01-20T11:33:14.221000" elapsed="0.371000"/>
</kw>
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-01-20T11:33:14.594000" level="INFO">Running command 'aws configure set aws_secret_access_key 92aaae48a0c9e8ac0fb13d8fdc66d982499c9f12475343829aa2b9e6315a7607 2&gt;&amp;1'.</msg>
<msg time="2024-01-20T11:33:14.967000" level="INFO">${rc} = 0</msg>
<msg time="2024-01-20T11:33:14.967000" level="INFO">${output} = </msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-01-20T11:33:14.593000" elapsed="0.374000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-01-20T11:33:14.968000" level="INFO"/>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-01-20T11:33:14.968000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-01-20T11:33:14.969000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-01-20T11:33:14.968000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-01-20T11:33:14.592000" elapsed="0.377000"/>
</kw>
<msg time="2024-01-20T11:33:14.969000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-01-20T11:33:14.592000" elapsed="0.377000"/>
</kw>
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<status status="PASS" start="2024-01-20T11:33:14.592000" elapsed="0.378000"/>
</kw>
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-01-20T11:33:14.972000" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg time="2024-01-20T11:33:15.342000" level="INFO">${rc} = 0</msg>
<msg time="2024-01-20T11:33:15.342000" level="INFO">${output} = </msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-01-20T11:33:14.971000" elapsed="0.371000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-01-20T11:33:15.343000" level="INFO"/>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-01-20T11:33:15.342000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-01-20T11:33:15.344000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-01-20T11:33:15.343000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-01-20T11:33:14.970000" elapsed="0.374000"/>
</kw>
<msg time="2024-01-20T11:33:15.344000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-01-20T11:33:14.970000" elapsed="0.374000"/>
</kw>
<arg>aws configure set region us-west-1</arg>
<status status="PASS" start="2024-01-20T11:33:14.970000" elapsed="0.374000"/>
</kw>
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-01-20T11:33:15.347000" level="INFO">Running command 'aws configure set default.s3.addressing_style path 2&gt;&amp;1'.</msg>
<msg time="2024-01-20T11:33:15.712000" level="INFO">${rc} = 0</msg>
<msg time="2024-01-20T11:33:15.712000" level="INFO">${output} = </msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-01-20T11:33:15.346000" elapsed="0.366000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-01-20T11:33:15.713000" level="INFO"/>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-01-20T11:33:15.712000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-01-20T11:33:15.713000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-01-20T11:33:15.713000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-01-20T11:33:15.345000" elapsed="0.369000"/>
</kw>
<msg time="2024-01-20T11:33:15.714000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-01-20T11:33:15.345000" elapsed="0.369000"/>
</kw>
<arg>aws configure set default.s3.addressing_style ${OZONE_S3_ADDRESS_STYLE}</arg>
<status status="PASS" start="2024-01-20T11:33:15.345000" elapsed="0.369000"/>
</kw>
<status status="PASS" start="2024-01-20T11:33:12.027000" elapsed="3.687000"/>
</kw>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-01-20T11:33:12.026000" elapsed="3.688000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-01-20T11:33:15.715000" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-01-20T11:33:11.998000" elapsed="3.717000"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" owner="commonawslib">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-01-20T11:33:15.717000" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket old1-bucket --key key1-shell /tmp/get-result 2&gt;&amp;1'.</msg>
<msg time="2024-01-20T11:33:16.276000" level="INFO">${rc} = 0</msg>
<msg time="2024-01-20T11:33:16.276000" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Sat, 20 Jan 2024 11:32:55 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-01-20T11:33:15.716000" elapsed="0.560000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-01-20T11:33:16.277000" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Sat, 20 Jan 2024 11:32:55 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Sat, 20 Jan 2024 11:33:16 GMT",
    "Metadata": {}
}</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-01-20T11:33:16.276000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-01-20T11:33:16.277000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-01-20T11:33:16.277000" elapsed="0.000000"/>
</kw>
<msg time="2024-01-20T11:33:16.278000" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Sat, 20 Jan 2024 11:32:55 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<status status="PASS" start="2024-01-20T11:33:15.715000" elapsed="0.563000"/>
</kw>
<msg time="2024-01-20T11:33:16.278000" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Sat, 20 Jan 2024 11:32:55 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key1-shell /tmp/get-result</arg>
<arg>0</arg>
<status status="PASS" start="2024-01-20T11:33:15.715000" elapsed="0.563000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-01-20T11:33:16.278000" elapsed="0.000000"/>
</kw>
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-01-20T11:33:16.280000" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg time="2024-01-20T11:33:16.282000" level="INFO">${rc} = 0</msg>
<msg time="2024-01-20T11:33:16.282000" level="INFO">${output} = old1: another key created using Ozone Shell</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-01-20T11:33:16.279000" elapsed="0.003000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-01-20T11:33:16.282000" level="INFO">old1: another key created using Ozone Shell</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-01-20T11:33:16.282000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-01-20T11:33:16.283000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-01-20T11:33:16.282000" elapsed="0.001000"/>
</kw>
<msg time="2024-01-20T11:33:16.283000" level="INFO">${output} = old1: another key created using Ozone Shell</msg>
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<status status="PASS" start="2024-01-20T11:33:16.278000" elapsed="0.005000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: another key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-01-20T11:33:16.283000" elapsed="0.001000"/>
</kw>
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-01-20T11:33:16.285000" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg time="2024-01-20T11:33:16.287000" level="INFO">${rc} = 0</msg>
<msg time="2024-01-20T11:33:16.287000" level="INFO">${output} = </msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-01-20T11:33:16.284000" elapsed="0.003000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-01-20T11:33:16.287000" level="INFO"/>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-01-20T11:33:16.287000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-01-20T11:33:16.288000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-01-20T11:33:16.287000" elapsed="0.001000"/>
</kw>
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<status status="PASS" start="2024-01-20T11:33:16.284000" elapsed="0.004000"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" start="2024-01-20T11:33:11.998000" elapsed="4.290000"/>
</test>
<test id="s1-s3-t3" name="Read key created with S3 API using S3 API" line="45">
<kw name="Setup v4 headers" owner="commonawslib" type="SETUP">
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Kinit test user" owner="commonlib">
<kw name="Get test user principal" owner="commonlib">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-01-20T11:33:16.293000" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg time="2024-01-20T11:33:16.295000" level="INFO">${rc} = 0</msg>
<msg time="2024-01-20T11:33:16.295000" level="INFO">${output} = scm</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-01-20T11:33:16.292000" elapsed="0.003000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-01-20T11:33:16.295000" level="INFO">scm</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-01-20T11:33:16.295000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-01-20T11:33:16.296000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-01-20T11:33:16.295000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-01-20T11:33:16.291000" elapsed="0.005000"/>
</kw>
<msg time="2024-01-20T11:33:16.296000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-01-20T11:33:16.291000" elapsed="0.006000"/>
</kw>
<msg time="2024-01-20T11:33:16.297000" level="INFO">${instance} = scm</msg>
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<status status="PASS" start="2024-01-20T11:33:16.291000" elapsed="0.006000"/>
</kw>
<msg time="2024-01-20T11:33:16.297000" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<var>${TEST_USER}</var>
<arg>${user}</arg>
<status status="PASS" start="2024-01-20T11:33:16.290000" elapsed="0.007000"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2024-01-20T11:33:16.297000" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2024-01-20T11:33:16.297000" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-01-20T11:33:16.300000" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg time="2024-01-20T11:33:16.326000" level="INFO">${rc} = 0</msg>
<msg time="2024-01-20T11:33:16.326000" level="INFO">${output} = </msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-01-20T11:33:16.299000" elapsed="0.027000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-01-20T11:33:16.326000" level="INFO"/>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-01-20T11:33:16.326000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-01-20T11:33:16.327000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-01-20T11:33:16.327000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-01-20T11:33:16.298000" elapsed="0.029000"/>
</kw>
<msg time="2024-01-20T11:33:16.327000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-01-20T11:33:16.298000" elapsed="0.030000"/>
</kw>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<status status="PASS" start="2024-01-20T11:33:16.298000" elapsed="0.030000"/>
</kw>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-01-20T11:33:16.298000" elapsed="0.030000"/>
</kw>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<status status="PASS" start="2024-01-20T11:33:16.290000" elapsed="0.038000"/>
</kw>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-01-20T11:33:16.290000" elapsed="0.038000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Setup secure v4 headers" owner="commonawslib">
<kw name="Execute And Ignore Error" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-01-20T11:33:16.331000" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg time="2024-01-20T11:33:18.152000" level="INFO">${rc} = 0</msg>
<msg time="2024-01-20T11:33:18.152000" level="INFO">${output} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=92aaae48a0c9e8ac0fb13d8fdc66d982499c9f12475343829aa2b9e6315a7607</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-01-20T11:33:16.329000" elapsed="1.823000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-01-20T11:33:18.153000" level="INFO">awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=92aaae48a0c9e8ac0fb13d8fdc66d982499c9f12475343829aa2b9e6315a7607</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-01-20T11:33:18.152000" elapsed="0.001000"/>
</kw>
<msg time="2024-01-20T11:33:18.153000" level="INFO">${result} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=92aaae48a0c9e8ac0fb13d8fdc66d982499c9f12475343829aa2b9e6315a7607</msg>
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<status status="PASS" start="2024-01-20T11:33:16.329000" elapsed="1.824000"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-01-20T11:33:18.155000" level="FAIL">'awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=92aaae48a0c9e8ac0fb13d8fdc66d982499c9f12475343829aa2b9e6315a7607' does not contain 'S3_SECRET_ALREADY_EXISTS'</msg>
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-01-20T11:33:18.154000" elapsed="0.001000"/>
</kw>
<msg time="2024-01-20T11:33:18.155000" level="INFO">${exists} = False</msg>
<var>${exists}</var>
<arg>Should Contain</arg>
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-01-20T11:33:18.153000" elapsed="0.002000"/>
</kw>
<if>
<branch type="IF" condition="${exists}">
<kw name="Execute" owner="os">
<arg>ozone s3 revokesecret -y ${OM_HA_PARAM}</arg>
<status status="NOT RUN" start="2024-01-20T11:33:18.155000" elapsed="0.000000"/>
</kw>
<kw name="Execute" owner="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<status status="NOT RUN" start="2024-01-20T11:33:18.155000" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-01-20T11:33:18.155000" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-01-20T11:33:18.155000" elapsed="0.000000"/>
</if>
<kw name="Get Regexp Matches" owner="String">
<msg time="2024-01-20T11:33:18.156000" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<status status="PASS" start="2024-01-20T11:33:18.155000" elapsed="0.001000"/>
</kw>
<kw name="Get Variable Value" owner="BuiltIn">
<msg time="2024-01-20T11:33:18.156000" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<status status="PASS" start="2024-01-20T11:33:18.156000" elapsed="0.000000"/>
</kw>
<kw name="Get Regexp Matches" owner="String">
<msg time="2024-01-20T11:33:18.157000" level="INFO">${secret} = ['92aaae48a0c9e8ac0fb13d8fdc66d982499c9f12475343829aa2b9e6315a7607']</msg>
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<status status="PASS" start="2024-01-20T11:33:18.156000" elapsed="0.001000"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-01-20T11:33:18.158000" level="INFO">${accessKey} = testuser/scm@EXAMPLE.COM</msg>
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-01-20T11:33:18.157000" elapsed="0.001000"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-01-20T11:33:18.159000" level="INFO">${secret} = 92aaae48a0c9e8ac0fb13d8fdc66d982499c9f12475343829aa2b9e6315a7607</msg>
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-01-20T11:33:18.158000" elapsed="0.001000"/>
</kw>
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-01-20T11:33:18.161000" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg time="2024-01-20T11:33:18.518000" level="INFO">${rc} = 0</msg>
<msg time="2024-01-20T11:33:18.518000" level="INFO">${output} = </msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-01-20T11:33:18.160000" elapsed="0.358000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-01-20T11:33:18.519000" level="INFO"/>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-01-20T11:33:18.518000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-01-20T11:33:18.519000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-01-20T11:33:18.519000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-01-20T11:33:18.159000" elapsed="0.361000"/>
</kw>
<msg time="2024-01-20T11:33:18.520000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-01-20T11:33:18.159000" elapsed="0.361000"/>
</kw>
<arg>aws configure set default.s3.signature_version s3v4</arg>
<status status="PASS" start="2024-01-20T11:33:18.159000" elapsed="0.361000"/>
</kw>
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-01-20T11:33:18.523000" level="INFO">Running command 'aws configure set aws_access_key_id testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg time="2024-01-20T11:33:18.879000" level="INFO">${rc} = 0</msg>
<msg time="2024-01-20T11:33:18.879000" level="INFO">${output} = </msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-01-20T11:33:18.521000" elapsed="0.358000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-01-20T11:33:18.880000" level="INFO"/>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-01-20T11:33:18.879000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-01-20T11:33:18.880000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-01-20T11:33:18.880000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-01-20T11:33:18.521000" elapsed="0.359000"/>
</kw>
<msg time="2024-01-20T11:33:18.880000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-01-20T11:33:18.521000" elapsed="0.360000"/>
</kw>
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<status status="PASS" start="2024-01-20T11:33:18.520000" elapsed="0.361000"/>
</kw>
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-01-20T11:33:18.883000" level="INFO">Running command 'aws configure set aws_secret_access_key 92aaae48a0c9e8ac0fb13d8fdc66d982499c9f12475343829aa2b9e6315a7607 2&gt;&amp;1'.</msg>
<msg time="2024-01-20T11:33:19.247000" level="INFO">${rc} = 0</msg>
<msg time="2024-01-20T11:33:19.247000" level="INFO">${output} = </msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-01-20T11:33:18.882000" elapsed="0.366000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-01-20T11:33:19.248000" level="INFO"/>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-01-20T11:33:19.248000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-01-20T11:33:19.249000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-01-20T11:33:19.249000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-01-20T11:33:18.882000" elapsed="0.367000"/>
</kw>
<msg time="2024-01-20T11:33:19.249000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-01-20T11:33:18.882000" elapsed="0.368000"/>
</kw>
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<status status="PASS" start="2024-01-20T11:33:18.881000" elapsed="0.369000"/>
</kw>
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-01-20T11:33:19.252000" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg time="2024-01-20T11:33:19.614000" level="INFO">${rc} = 0</msg>
<msg time="2024-01-20T11:33:19.614000" level="INFO">${output} = </msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-01-20T11:33:19.251000" elapsed="0.363000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-01-20T11:33:19.615000" level="INFO"/>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-01-20T11:33:19.615000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-01-20T11:33:19.616000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-01-20T11:33:19.615000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-01-20T11:33:19.251000" elapsed="0.365000"/>
</kw>
<msg time="2024-01-20T11:33:19.616000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-01-20T11:33:19.250000" elapsed="0.367000"/>
</kw>
<arg>aws configure set region us-west-1</arg>
<status status="PASS" start="2024-01-20T11:33:19.250000" elapsed="0.367000"/>
</kw>
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-01-20T11:33:19.619000" level="INFO">Running command 'aws configure set default.s3.addressing_style path 2&gt;&amp;1'.</msg>
<msg time="2024-01-20T11:33:19.988000" level="INFO">${rc} = 0</msg>
<msg time="2024-01-20T11:33:19.988000" level="INFO">${output} = </msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-01-20T11:33:19.618000" elapsed="0.370000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-01-20T11:33:19.989000" level="INFO"/>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-01-20T11:33:19.988000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-01-20T11:33:19.989000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-01-20T11:33:19.989000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-01-20T11:33:19.617000" elapsed="0.373000"/>
</kw>
<msg time="2024-01-20T11:33:19.990000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-01-20T11:33:19.617000" elapsed="0.373000"/>
</kw>
<arg>aws configure set default.s3.addressing_style ${OZONE_S3_ADDRESS_STYLE}</arg>
<status status="PASS" start="2024-01-20T11:33:19.617000" elapsed="0.373000"/>
</kw>
<status status="PASS" start="2024-01-20T11:33:16.329000" elapsed="3.661000"/>
</kw>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-01-20T11:33:16.328000" elapsed="3.662000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-01-20T11:33:19.991000" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-01-20T11:33:16.289000" elapsed="3.702000"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" owner="commonawslib">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-01-20T11:33:19.994000" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket old1-bucket --key key2-s3api /tmp/get-result 2&gt;&amp;1'.</msg>
<msg time="2024-01-20T11:33:20.467000" level="INFO">${rc} = 0</msg>
<msg time="2024-01-20T11:33:20.467000" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Sat, 20 Jan 2024 11:33:05 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-01-20T11:33:19.992000" elapsed="0.475000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-01-20T11:33:20.468000" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Sat, 20 Jan 2024 11:33:05 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Sat, 20 Jan 2024 11:33:20 GMT",
    "Metadata": {}
}</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-01-20T11:33:20.467000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-01-20T11:33:20.469000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-01-20T11:33:20.468000" elapsed="0.001000"/>
</kw>
<msg time="2024-01-20T11:33:20.469000" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Sat, 20 Jan 2024 11:33:05 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<status status="PASS" start="2024-01-20T11:33:19.992000" elapsed="0.477000"/>
</kw>
<msg time="2024-01-20T11:33:20.469000" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Sat, 20 Jan 2024 11:33:05 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key2-s3api /tmp/get-result</arg>
<arg>0</arg>
<status status="PASS" start="2024-01-20T11:33:19.991000" elapsed="0.478000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-01-20T11:33:20.469000" elapsed="0.001000"/>
</kw>
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-01-20T11:33:20.472000" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg time="2024-01-20T11:33:20.473000" level="INFO">${rc} = 0</msg>
<msg time="2024-01-20T11:33:20.473000" level="INFO">${output} = old1: key created using S3 API</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-01-20T11:33:20.470000" elapsed="0.003000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-01-20T11:33:20.474000" level="INFO">old1: key created using S3 API</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-01-20T11:33:20.473000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-01-20T11:33:20.474000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-01-20T11:33:20.474000" elapsed="0.000000"/>
</kw>
<msg time="2024-01-20T11:33:20.475000" level="INFO">${output} = old1: key created using S3 API</msg>
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<status status="PASS" start="2024-01-20T11:33:20.470000" elapsed="0.005000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using S3 API</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-01-20T11:33:20.475000" elapsed="0.000000"/>
</kw>
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-01-20T11:33:20.477000" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg time="2024-01-20T11:33:20.478000" level="INFO">${rc} = 0</msg>
<msg time="2024-01-20T11:33:20.478000" level="INFO">${output} = </msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-01-20T11:33:20.476000" elapsed="0.002000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-01-20T11:33:20.479000" level="INFO"/>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-01-20T11:33:20.478000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-01-20T11:33:20.479000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-01-20T11:33:20.479000" elapsed="0.000000"/>
</kw>
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<status status="PASS" start="2024-01-20T11:33:20.475000" elapsed="0.005000"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" start="2024-01-20T11:33:16.289000" elapsed="4.191000"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" start="2024-01-20T11:33:08.222000" elapsed="12.259000"/>
</suite>
<suite id="s1-s4" name="1.3.0-1.4.0-1-original-prepare" source="/opt/ozone/smoketest/upgrade/prepare.robot">
<test id="s1-s4-t1" name="Prepare Ozone Manager" line="23">
<kw name="Run Keyword If" owner="BuiltIn" type="SETUP">
<kw name="Kinit test user" owner="commonlib">
<kw name="Get test user principal" owner="commonlib">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-01-20T11:33:23.499000" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg time="2024-01-20T11:33:23.501000" level="INFO">${rc} = 0</msg>
<msg time="2024-01-20T11:33:23.501000" level="INFO">${output} = scm</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-01-20T11:33:23.497000" elapsed="0.004000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-01-20T11:33:23.502000" level="INFO">scm</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-01-20T11:33:23.501000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-01-20T11:33:23.502000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-01-20T11:33:23.502000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-01-20T11:33:23.496000" elapsed="0.007000"/>
</kw>
<msg time="2024-01-20T11:33:23.503000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-01-20T11:33:23.496000" elapsed="0.008000"/>
</kw>
<msg time="2024-01-20T11:33:23.504000" level="INFO">${instance} = scm</msg>
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<status status="PASS" start="2024-01-20T11:33:23.496000" elapsed="0.008000"/>
</kw>
<msg time="2024-01-20T11:33:23.504000" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<var>${TEST_USER}</var>
<arg>${user}</arg>
<status status="PASS" start="2024-01-20T11:33:23.495000" elapsed="0.009000"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2024-01-20T11:33:23.505000" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2024-01-20T11:33:23.504000" elapsed="0.001000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-01-20T11:33:23.507000" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg time="2024-01-20T11:33:23.561000" level="INFO">${rc} = 0</msg>
<msg time="2024-01-20T11:33:23.561000" level="INFO">${output} = </msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-01-20T11:33:23.506000" elapsed="0.055000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-01-20T11:33:23.562000" level="INFO"/>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-01-20T11:33:23.561000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-01-20T11:33:23.563000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-01-20T11:33:23.563000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-01-20T11:33:23.506000" elapsed="0.058000"/>
</kw>
<msg time="2024-01-20T11:33:23.564000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-01-20T11:33:23.505000" elapsed="0.060000"/>
</kw>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<status status="PASS" start="2024-01-20T11:33:23.505000" elapsed="0.060000"/>
</kw>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-01-20T11:33:23.505000" elapsed="0.060000"/>
</kw>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<status status="PASS" start="2024-01-20T11:33:23.495000" elapsed="0.071000"/>
</kw>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-01-20T11:33:23.495000" elapsed="0.071000"/>
</kw>
<kw name="Pass Execution If" owner="BuiltIn">
<arg>'%{OZONE_UPGRADE_FROM}' == '1.1.0'</arg>
<arg>OM prepare is skipped for version %{OZONE_UPGRADE_FROM}</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" start="2024-01-20T11:33:23.566000" elapsed="0.000000"/>
</kw>
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-01-20T11:33:23.570000" level="INFO">Running command 'ozone admin om prepare -id omservice 2&gt;&amp;1'.</msg>
<msg time="2024-01-20T11:38:23.494000" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="FAIL" start="2024-01-20T11:33:23.568000" elapsed="299.926000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-01-20T11:38:23.495000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" start="2024-01-20T11:38:23.496000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="FAIL" start="2024-01-20T11:33:23.568000" elapsed="299.929000"/>
</kw>
<msg time="2024-01-20T11:38:23.497000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="FAIL" start="2024-01-20T11:33:23.567000" elapsed="299.931000"/>
</kw>
<var>${result}</var>
<arg>ozone admin om prepare -id %{OM_SERVICE_ID}</arg>
<status status="FAIL" start="2024-01-20T11:33:23.567000" elapsed="299.932000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>OM Preparation successful!</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="NOT RUN" start="2024-01-20T11:38:23.499000" elapsed="0.000000"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" start="2024-01-20T11:33:23.494000" elapsed="300.006000">Test timeout 5 minutes exceeded.</status>
</test>
<doc>Prepares OMs</doc>
<status status="FAIL" start="2024-01-20T11:33:23.456000" elapsed="300.046000"/>
</suite>
<status status="FAIL" elapsed="341.451000"/>
</suite>
<statistics>
<total>
<stat pass="11" fail="1" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="2" fail="0" skip="0">create-volume-and-bucket</stat>
<stat pass="2" fail="0" skip="0">finalized</stat>
<stat pass="1" fail="0" skip="0">om</stat>
<stat pass="1" fail="0" skip="0">scm</stat>
</tag>
<suite>
<stat pass="11" fail="1" skip="0" id="s1" name="upgrade">upgrade</stat>
<stat pass="2" fail="0" skip="0" id="s1-s1" name="1.3.0-1.4.0-1-original-check-finalization">upgrade.1.3.0-1.4.0-1-original-check-finalization</stat>
<stat pass="6" fail="0" skip="0" id="s1-s2" name="1.3.0-1.4.0-1-original-generate-old1">upgrade.1.3.0-1.4.0-1-original-generate-old1</stat>
<stat pass="3" fail="0" skip="0" id="s1-s3" name="1.3.0-1.4.0-1-original-validate-old1">upgrade.1.3.0-1.4.0-1-original-validate-old1</stat>
<stat pass="0" fail="1" skip="0" id="s1-s4" name="1.3.0-1.4.0-1-original-prepare">upgrade.1.3.0-1.4.0-1-original-prepare</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
