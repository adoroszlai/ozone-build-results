<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 7.0 (Python 3.8.10 on linux)" generated="2024-05-14T07:38:04.194882" rpa="false" schemaversion="5">
<suite id="s1" name="ozone-topology">
<suite id="s1-s1" name="Basic" source="/opt/hadoop/smoketest/basic/basic.robot">
<test id="s1-s1-t1" name="Check webui static resources" line="29">
<kw name="Run Keyword If" owner="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-05-14T07:34:41.155000" elapsed="0.001000"/>
</kw>
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-05-14T07:34:41.160000" level="INFO">Running command 'curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js 2&gt;&amp;1'.</msg>
<msg time="2024-05-14T07:34:41.246000" level="INFO">${rc} = 0</msg>
<msg time="2024-05-14T07:34:41.246000" level="INFO">${output} = HTTP/1.1 200 OK
Date: Tue, 14 May 2024 07:34:41 GMT
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
X-FRAME-OPTIONS: SAMEORIGIN
Last-Modified: Tue, 14 May 2024 07:09:00 GMT
Content-Typ...</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-05-14T07:34:41.158000" elapsed="0.088000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-14T07:34:41.247000" level="INFO">HTTP/1.1 200 OK
Date: Tue, 14 May 2024 07:34:41 GMT
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
X-FRAME-OPTIONS: SAMEORIGIN
Last-Modified: Tue, 14 May 2024 07:09:00 GMT
Content-Type: application/javascript
Accept-Ranges: bytes
Content-Length: 39680
</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-14T07:34:41.246000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-05-14T07:34:41.248000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-05-14T07:34:41.247000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-05-14T07:34:41.157000" elapsed="0.091000"/>
</kw>
<msg time="2024-05-14T07:34:41.248000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-05-14T07:34:41.157000" elapsed="0.091000"/>
</kw>
<msg time="2024-05-14T07:34:41.249000" level="INFO">${result} = HTTP/1.1 200 OK
Date: Tue, 14 May 2024 07:34:41 GMT
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
X-FRAME-OPTIONS: SAMEORIGIN
Last-Modified: Tue, 14 May 2024 07:09:00 GMT
Content-Typ...</msg>
<var>${result}</var>
<arg>curl --negotiate -u : -s -I http://${SCM}:9876/static/bootstrap-3.4.1/js/bootstrap.min.js</arg>
<status status="PASS" start="2024-05-14T07:34:41.156000" elapsed="0.093000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-05-14T07:34:41.249000" elapsed="0.000000"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" start="2024-05-14T07:34:41.154000" elapsed="0.095000"/>
</test>
<test id="s1-s1-t2" name="Basic Freon smoketest" line="34">
<kw name="Run Keyword If" owner="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-05-14T07:34:41.251000" elapsed="0.000000"/>
</kw>
<kw name="Generate Random String" owner="String">
<msg time="2024-05-14T07:34:41.252000" level="INFO">${random} = lbMjoLnzWs</msg>
<var>${random}</var>
<arg>10</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<status status="PASS" start="2024-05-14T07:34:41.251000" elapsed="0.001000"/>
</kw>
<kw name="Freon OCKG" owner="freon">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-05-14T07:34:41.257000" level="INFO">Running command 'ozone freon ockg  -t 1 -n1 -p lbMjoLnzWs  2&gt;&amp;1'.</msg>
<msg time="2024-05-14T07:34:50.027000" level="INFO">${rc} = 0</msg>
<msg time="2024-05-14T07:34:50.027000" level="INFO">${output} = 2024-05-14 07:34:43,348 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-05-14 07:34:43,437 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-05-14T07:34:41.255000" elapsed="8.772000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-14T07:34:50.028000" level="INFO">2024-05-14 07:34:43,348 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-05-14 07:34:43,437 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2024-05-14 07:34:43,437 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2024-05-14 07:34:43,526 [main] INFO freon.BaseFreonGenerator: Executing test with prefix lbMjoLnzWs and number-of-tests 1
2024-05-14 07:34:43,601 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2024-05-14 07:34:44,614 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2024-05-14 07:34:45,615 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2024-05-14 07:34:46,615 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2024-05-14 07:34:46,953 [main] INFO rpc.RpcClient: Creating Volume: vol1, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1
2024-05-14 07:34:47,049 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption set to false, Replication Type set to server-side default replication type, Namespace Quota set to -1, Space Quota set to -1 
2024-05-14 07:34:47,615 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2024-05-14 07:34:47,707 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2024-05-14 07:34:47,949 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.dropwizard3.Dm3MetricRegistriesImpl
2024-05-14 07:34:48,619 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2024-05-14 07:34:49,619 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2024-05-14 07:34:49,689 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1, min=1963.559342, max=1963.559342, mean=1963.559342, stddev=0.0, median=1963.559342, p75=1963.559342, p95=1963.559342, p98=1963.559342, p99=1963.559342, p999=1963.559342, mean_rate=0.38603501978910865, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2024-05-14 07:34:49,690 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 6
2024-05-14 07:34:49,690 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2024-05-14 07:34:49,690 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-14T07:34:50.028000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-05-14T07:34:50.029000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-05-14T07:34:50.029000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-05-14T07:34:41.255000" elapsed="8.774000"/>
</kw>
<msg time="2024-05-14T07:34:50.029000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-05-14T07:34:41.254000" elapsed="8.775000"/>
</kw>
<msg time="2024-05-14T07:34:50.030000" level="INFO">${result} = 2024-05-14 07:34:43,348 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-05-14 07:34:43,437 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<status status="PASS" start="2024-05-14T07:34:41.254000" elapsed="8.776000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-05-14T07:34:50.030000" elapsed="0.000000"/>
</kw>
<arg>prefix=${random}</arg>
<status status="PASS" start="2024-05-14T07:34:41.252000" elapsed="8.778000"/>
</kw>
<kw name="Freon OCKV" owner="freon">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-05-14T07:34:50.034000" level="INFO">Running command 'ozone freon ockv  -t 1 -n1 -p lbMjoLnzWs  2&gt;&amp;1'.</msg>
<msg time="2024-05-14T07:34:55.336000" level="INFO">${rc} = 0</msg>
<msg time="2024-05-14T07:34:55.336000" level="INFO">${output} = 2024-05-14 07:34:51,750 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-05-14 07:34:51,829 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-05-14T07:34:50.032000" elapsed="5.304000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-14T07:34:55.337000" level="INFO">2024-05-14 07:34:51,750 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-05-14 07:34:51,829 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2024-05-14 07:34:51,829 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2024-05-14 07:34:51,908 [main] INFO freon.BaseFreonGenerator: Executing test with prefix lbMjoLnzWs and number-of-tests 1
2024-05-14 07:34:51,946 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2024-05-14 07:34:52,946 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2024-05-14 07:34:53,300 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2024-05-14 07:34:53,946 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2024-05-14 07:34:54,947 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2024-05-14 07:34:54,995 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-validate, count=1, min=46.608357, max=46.608357, mean=46.608357, stddev=0.0, median=46.608357, p75=46.608357, p95=46.608357, p98=46.608357, p99=46.608357, p999=46.608357, mean_rate=0.9300896842512381, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2024-05-14 07:34:54,995 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2024-05-14 07:34:54,995 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2024-05-14 07:34:54,996 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-14T07:34:55.336000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-05-14T07:34:55.337000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-05-14T07:34:55.337000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-05-14T07:34:50.032000" elapsed="5.306000"/>
</kw>
<msg time="2024-05-14T07:34:55.338000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-05-14T07:34:50.032000" elapsed="5.306000"/>
</kw>
<msg time="2024-05-14T07:34:55.338000" level="INFO">${result} = 2024-05-14 07:34:51,750 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-05-14 07:34:51,829 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<var>${result}</var>
<arg>ozone freon ockv ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<status status="PASS" start="2024-05-14T07:34:50.031000" elapsed="5.307000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-05-14T07:34:55.338000" elapsed="0.001000"/>
</kw>
<arg>prefix=${random}</arg>
<status status="PASS" start="2024-05-14T07:34:50.030000" elapsed="5.309000"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" start="2024-05-14T07:34:41.250000" elapsed="14.089000"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" start="2024-05-14T07:34:41.071000" elapsed="14.269000"/>
</suite>
<suite id="s1-s2" name="Cli" source="/opt/hadoop/smoketest/topology/cli.robot">
<test id="s1-s2-t1" name="Run printTopology" line="34">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-05-14T07:34:57.413000" level="INFO">Running command 'ozone admin printTopology 2&gt;&amp;1'.</msg>
<msg time="2024-05-14T07:35:00.204000" level="INFO">${rc} = 0</msg>
<msg time="2024-05-14T07:35:00.204000" level="INFO">${output} = State = HEALTHY
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=19864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /ra...</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-05-14T07:34:57.411000" elapsed="2.793000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-14T07:35:00.205000" level="INFO">State = HEALTHY
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=19864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=19864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=19864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=19864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=19864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=19864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-14T07:35:00.204000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-05-14T07:35:00.205000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-05-14T07:35:00.205000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-05-14T07:34:57.411000" elapsed="2.794000"/>
</kw>
<msg time="2024-05-14T07:35:00.205000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-05-14T07:34:57.410000" elapsed="2.796000"/>
</kw>
<msg time="2024-05-14T07:35:00.206000" level="INFO">${output} = State = HEALTHY
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=19864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /ra...</msg>
<var>${output}</var>
<arg>ozone admin printTopology</arg>
<status status="PASS" start="2024-05-14T07:34:57.410000" elapsed="2.796000"/>
</kw>
<kw name="Validate PrintTopology Output">
<kw name="Should Contain" owner="BuiltIn">
<arg>${output}</arg>
<arg>State = HEALTHY</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-05-14T07:35:00.206000" elapsed="0.001000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${output}</arg>
<arg>IN_SERVICE</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-05-14T07:35:00.207000" elapsed="0.000000"/>
</kw>
<kw name="Should Match Regexp" owner="BuiltIn">
<arg>${output}</arg>
<arg>.*ozone.*datanode[-_]\\d+.*IN_SERVICE.*rack.*</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" start="2024-05-14T07:35:00.207000" elapsed="0.001000"/>
</kw>
<arg>${output}</arg>
<status status="PASS" start="2024-05-14T07:35:00.206000" elapsed="0.002000"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" start="2024-05-14T07:34:57.409000" elapsed="2.799000"/>
</test>
<test id="s1-s2-t2" name="Run printTopology -o" line="38">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-05-14T07:35:00.211000" level="INFO">Running command 'ozone admin printTopology -o 2&gt;&amp;1'.</msg>
<msg time="2024-05-14T07:35:03.001000" level="INFO">${rc} = 0</msg>
<msg time="2024-05-14T07:35:03.002000" level="INFO">${output} = State = HEALTHY
Location: /rack1
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net) IN_SERVICE
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net) IN_SERVICE
 10.5.0.5(ozone-topology_data...</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-05-14T07:35:00.210000" elapsed="2.792000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-14T07:35:03.003000" level="INFO">State = HEALTHY
Location: /rack1
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net) IN_SERVICE
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net) IN_SERVICE
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net) IN_SERVICE
Location: /rack2
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net) IN_SERVICE
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net) IN_SERVICE
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net) IN_SERVICE</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-14T07:35:03.002000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-05-14T07:35:03.003000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-05-14T07:35:03.003000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-05-14T07:35:00.210000" elapsed="2.794000"/>
</kw>
<msg time="2024-05-14T07:35:03.004000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-05-14T07:35:00.209000" elapsed="2.795000"/>
</kw>
<msg time="2024-05-14T07:35:03.004000" level="INFO">${output} = State = HEALTHY
Location: /rack1
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net) IN_SERVICE
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net) IN_SERVICE
 10.5.0.5(ozone-topology_data...</msg>
<var>${output}</var>
<arg>ozone admin printTopology -o</arg>
<status status="PASS" start="2024-05-14T07:35:00.209000" elapsed="2.795000"/>
</kw>
<kw name="Should Match Regexp" owner="BuiltIn">
<arg>${output}</arg>
<arg>Location: /.*rack.*</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" start="2024-05-14T07:35:03.004000" elapsed="0.001000"/>
</kw>
<kw name="Should Match Regexp" owner="BuiltIn">
<arg>${output}</arg>
<arg>.*ozone.*datanode[-_]\\d+.*IN_SERVICE.*</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" start="2024-05-14T07:35:03.005000" elapsed="0.001000"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" start="2024-05-14T07:35:00.208000" elapsed="2.798000"/>
</test>
<test id="s1-s2-t3" name="Run printTopology --operational-state IN_SERVICE" line="43">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-05-14T07:35:03.010000" level="INFO">Running command 'ozone admin printTopology --operational-state IN_SERVICE 2&gt;&amp;1'.</msg>
<msg time="2024-05-14T07:35:05.675000" level="INFO">${rc} = 0</msg>
<msg time="2024-05-14T07:35:05.675000" level="INFO">${output} = State = HEALTHY
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=19864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /ra...</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-05-14T07:35:03.009000" elapsed="2.666000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-14T07:35:05.676000" level="INFO">State = HEALTHY
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=19864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=19864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=19864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=19864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=19864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=19864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-14T07:35:05.675000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-05-14T07:35:05.676000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-05-14T07:35:05.676000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-05-14T07:35:03.008000" elapsed="2.669000"/>
</kw>
<msg time="2024-05-14T07:35:05.677000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-05-14T07:35:03.008000" elapsed="2.669000"/>
</kw>
<msg time="2024-05-14T07:35:05.677000" level="INFO">${output} = State = HEALTHY
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=19864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /ra...</msg>
<var>${output}</var>
<arg>ozone admin printTopology --operational-state IN_SERVICE</arg>
<status status="PASS" start="2024-05-14T07:35:03.007000" elapsed="2.670000"/>
</kw>
<kw name="Validate PrintTopology Output">
<kw name="Should Contain" owner="BuiltIn">
<arg>${output}</arg>
<arg>State = HEALTHY</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-05-14T07:35:05.677000" elapsed="0.001000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${output}</arg>
<arg>IN_SERVICE</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-05-14T07:35:05.678000" elapsed="0.000000"/>
</kw>
<kw name="Should Match Regexp" owner="BuiltIn">
<arg>${output}</arg>
<arg>.*ozone.*datanode[-_]\\d+.*IN_SERVICE.*rack.*</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" start="2024-05-14T07:35:05.678000" elapsed="0.001000"/>
</kw>
<arg>${output}</arg>
<status status="PASS" start="2024-05-14T07:35:05.677000" elapsed="0.002000"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" start="2024-05-14T07:35:03.006000" elapsed="2.673000"/>
</test>
<test id="s1-s2-t4" name="Run printTopology --node-state HEALTHY" line="47">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-05-14T07:35:05.682000" level="INFO">Running command 'ozone admin printTopology --node-state HEALTHY 2&gt;&amp;1'.</msg>
<msg time="2024-05-14T07:35:08.216000" level="INFO">${rc} = 0</msg>
<msg time="2024-05-14T07:35:08.216000" level="INFO">${output} = State = HEALTHY
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=19864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /ra...</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-05-14T07:35:05.681000" elapsed="2.535000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-14T07:35:08.217000" level="INFO">State = HEALTHY
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=19864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=19864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=19864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=19864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=19864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=19864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-14T07:35:08.217000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-05-14T07:35:08.218000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-05-14T07:35:08.217000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-05-14T07:35:05.680000" elapsed="2.538000"/>
</kw>
<msg time="2024-05-14T07:35:08.218000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-05-14T07:35:05.680000" elapsed="2.538000"/>
</kw>
<msg time="2024-05-14T07:35:08.218000" level="INFO">${output} = State = HEALTHY
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=19864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /ra...</msg>
<var>${output}</var>
<arg>ozone admin printTopology --node-state HEALTHY</arg>
<status status="PASS" start="2024-05-14T07:35:05.680000" elapsed="2.538000"/>
</kw>
<kw name="Validate PrintTopology Output">
<kw name="Should Contain" owner="BuiltIn">
<arg>${output}</arg>
<arg>State = HEALTHY</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-05-14T07:35:08.219000" elapsed="0.000000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${output}</arg>
<arg>IN_SERVICE</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-05-14T07:35:08.219000" elapsed="0.001000"/>
</kw>
<kw name="Should Match Regexp" owner="BuiltIn">
<arg>${output}</arg>
<arg>.*ozone.*datanode[-_]\\d+.*IN_SERVICE.*rack.*</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" start="2024-05-14T07:35:08.220000" elapsed="0.000000"/>
</kw>
<arg>${output}</arg>
<status status="PASS" start="2024-05-14T07:35:08.219000" elapsed="0.001000"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" start="2024-05-14T07:35:05.679000" elapsed="2.541000"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" start="2024-05-14T07:34:57.365000" elapsed="10.856000"/>
</suite>
<suite id="s1-s3" name="Recon" source="/opt/hadoop/smoketest/recon">
<suite id="s1-s3-s1" name="Recon-Api" source="/opt/hadoop/smoketest/recon/recon-api.robot">
<test id="s1-s3-s1-t1" name="Check if Recon picks up OM data" line="61">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-05-14T07:35:10.332000" level="INFO">Running command 'ozone sh volume create recon 2&gt;&amp;1'.</msg>
<msg time="2024-05-14T07:35:13.293000" level="INFO">${rc} = 0</msg>
<msg time="2024-05-14T07:35:13.293000" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-05-14T07:35:10.331000" elapsed="2.962000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-14T07:35:13.294000" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-14T07:35:13.293000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-05-14T07:35:13.295000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-05-14T07:35:13.294000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-05-14T07:35:10.330000" elapsed="2.965000"/>
</kw>
<msg time="2024-05-14T07:35:13.295000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-05-14T07:35:10.330000" elapsed="2.965000"/>
</kw>
<arg>ozone sh volume create recon</arg>
<status status="PASS" start="2024-05-14T07:35:10.330000" elapsed="2.965000"/>
</kw>
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-05-14T07:35:13.299000" level="INFO">Running command 'ozone sh bucket create recon/api --layout=LEGACY 2&gt;&amp;1'.</msg>
<msg time="2024-05-14T07:35:16.559000" level="INFO">${rc} = 0</msg>
<msg time="2024-05-14T07:35:16.559000" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-05-14T07:35:13.297000" elapsed="3.262000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-14T07:35:16.560000" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-14T07:35:16.560000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-05-14T07:35:16.561000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-05-14T07:35:16.560000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-05-14T07:35:13.296000" elapsed="3.265000"/>
</kw>
<msg time="2024-05-14T07:35:16.561000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-05-14T07:35:13.296000" elapsed="3.265000"/>
</kw>
<arg>ozone sh bucket create recon/api --layout=LEGACY</arg>
<status status="PASS" start="2024-05-14T07:35:13.295000" elapsed="3.266000"/>
</kw>
<kw name="Freon OCKG" owner="freon">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-05-14T07:35:16.564000" level="INFO">Running command 'ozone freon ockg  -t 1 -n10 -p ockg -s 1025 -v recon -b api 2&gt;&amp;1'.</msg>
<msg time="2024-05-14T07:35:22.933000" level="INFO">${rc} = 0</msg>
<msg time="2024-05-14T07:35:22.933000" level="INFO">${output} = 2024-05-14 07:35:18,188 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-05-14 07:35:18,285 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-05-14T07:35:16.563000" elapsed="6.370000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-14T07:35:22.934000" level="INFO">2024-05-14 07:35:18,188 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-05-14 07:35:18,285 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2024-05-14 07:35:18,285 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2024-05-14 07:35:18,358 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockg and number-of-tests 10
2024-05-14 07:35:18,402 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2024-05-14 07:35:19,403 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2024-05-14 07:35:19,966 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2024-05-14 07:35:20,205 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.dropwizard3.Dm3MetricRegistriesImpl
2024-05-14 07:35:20,403 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2024-05-14 07:35:21,409 [Thread-5] INFO freon.ProgressBar: Progress: 10.00 % (1 out of 10)
2024-05-14 07:35:22,409 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (10 out of 10)
2024-05-14 07:35:22,592 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=10, min=49.347667, max=1742.645978, mean=248.63608430000002, stddev=501.9823026702216, median=63.63471, p75=75.413007, p95=1742.645978, p98=1742.645978, p99=1742.645978, p999=1742.645978, mean_rate=3.2202757101458186, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2024-05-14 07:35:22,593 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 4
2024-05-14 07:35:22,593 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2024-05-14 07:35:22,593 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 10</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-14T07:35:22.933000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-05-14T07:35:22.935000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-05-14T07:35:22.934000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-05-14T07:35:16.562000" elapsed="6.373000"/>
</kw>
<msg time="2024-05-14T07:35:22.935000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-05-14T07:35:16.562000" elapsed="6.373000"/>
</kw>
<msg time="2024-05-14T07:35:22.935000" level="INFO">${result} = 2024-05-14 07:35:18,188 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-05-14 07:35:18,285 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<status status="PASS" start="2024-05-14T07:35:16.562000" elapsed="6.373000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-05-14T07:35:22.935000" elapsed="0.001000"/>
</kw>
<arg>n=10</arg>
<arg>args=-s 1025 -v recon -b api</arg>
<status status="PASS" start="2024-05-14T07:35:16.561000" elapsed="6.375000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" owner="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit as ozone admin</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-05-14T07:35:22.937000" elapsed="0.000000"/>
</kw>
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-05-14T07:35:22.939000" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg time="2024-05-14T07:35:23.047000" level="INFO">${rc} = 0</msg>
<msg time="2024-05-14T07:35:23.048000" level="INFO">${output} = {"data":{"totalCount":3,"prevKey":3,"containers":[{"ContainerID":1,"NumberOfKeys":0,"pipelines":null},{"ContainerID":2,"NumberOfKeys":0,"pipelines":null},{"ContainerID":3,"NumberOfKeys":0,"pipelines":...</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-05-14T07:35:22.938000" elapsed="0.110000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-14T07:35:23.049000" level="INFO">{"data":{"totalCount":3,"prevKey":3,"containers":[{"ContainerID":1,"NumberOfKeys":0,"pipelines":null},{"ContainerID":2,"NumberOfKeys":0,"pipelines":null},{"ContainerID":3,"NumberOfKeys":0,"pipelines":null}]}}</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-14T07:35:23.048000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-05-14T07:35:23.049000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-05-14T07:35:23.049000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-05-14T07:35:22.938000" elapsed="0.111000"/>
</kw>
<msg time="2024-05-14T07:35:23.050000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-05-14T07:35:22.937000" elapsed="0.113000"/>
</kw>
<msg time="2024-05-14T07:35:23.050000" level="INFO">${result} = {"data":{"totalCount":3,"prevKey":3,"containers":[{"ContainerID":1,"NumberOfKeys":0,"pipelines":null},{"ContainerID":2,"NumberOfKeys":0,"pipelines":null},{"ContainerID":3,"NumberOfKeys":0,"pipelines":...</msg>
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers</arg>
<status status="PASS" start="2024-05-14T07:35:22.937000" elapsed="0.113000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>\"ContainerID\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-05-14T07:35:23.050000" elapsed="0.000000"/>
</kw>
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-05-14T07:35:23.053000" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg time="2024-05-14T07:35:23.071000" level="INFO">${rc} = 0</msg>
<msg time="2024-05-14T07:35:23.071000" level="INFO">${output} = []</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-05-14T07:35:23.051000" elapsed="0.020000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-14T07:35:23.072000" level="INFO">[]</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-14T07:35:23.072000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-05-14T07:35:23.073000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-05-14T07:35:23.072000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-05-14T07:35:23.051000" elapsed="0.022000"/>
</kw>
<msg time="2024-05-14T07:35:23.073000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-05-14T07:35:23.051000" elapsed="0.022000"/>
</kw>
<msg time="2024-05-14T07:35:23.073000" level="INFO">${result} = []</msg>
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/utilization/fileCount</arg>
<status status="PASS" start="2024-05-14T07:35:23.050000" elapsed="0.023000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-05-14T07:35:23.074000" level="FAIL">'[]' does not contain '"fileSize":2048,"count":10'</msg>
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-05-14T07:35:23.073000" elapsed="0.001000"/>
</kw>
<status status="FAIL" start="2024-05-14T07:35:22.936000" elapsed="0.138000"/>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" owner="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit as ozone admin</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-05-14T07:35:33.075000" elapsed="0.000000"/>
</kw>
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-05-14T07:35:33.078000" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg time="2024-05-14T07:35:33.090000" level="INFO">${rc} = 0</msg>
<msg time="2024-05-14T07:35:33.090000" level="INFO">${output} = {"data":{"totalCount":3,"prevKey":3,"containers":[{"ContainerID":1,"NumberOfKeys":0,"pipelines":null},{"ContainerID":2,"NumberOfKeys":0,"pipelines":null},{"ContainerID":3,"NumberOfKeys":0,"pipelines":...</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-05-14T07:35:33.076000" elapsed="0.014000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-14T07:35:33.091000" level="INFO">{"data":{"totalCount":3,"prevKey":3,"containers":[{"ContainerID":1,"NumberOfKeys":0,"pipelines":null},{"ContainerID":2,"NumberOfKeys":0,"pipelines":null},{"ContainerID":3,"NumberOfKeys":0,"pipelines":null}]}}</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-14T07:35:33.091000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-05-14T07:35:33.091000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-05-14T07:35:33.091000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-05-14T07:35:33.076000" elapsed="0.016000"/>
</kw>
<msg time="2024-05-14T07:35:33.092000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-05-14T07:35:33.076000" elapsed="0.016000"/>
</kw>
<msg time="2024-05-14T07:35:33.092000" level="INFO">${result} = {"data":{"totalCount":3,"prevKey":3,"containers":[{"ContainerID":1,"NumberOfKeys":0,"pipelines":null},{"ContainerID":2,"NumberOfKeys":0,"pipelines":null},{"ContainerID":3,"NumberOfKeys":0,"pipelines":...</msg>
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers</arg>
<status status="PASS" start="2024-05-14T07:35:33.075000" elapsed="0.017000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>\"ContainerID\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-05-14T07:35:33.092000" elapsed="0.000000"/>
</kw>
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-05-14T07:35:33.095000" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg time="2024-05-14T07:35:33.107000" level="INFO">${rc} = 0</msg>
<msg time="2024-05-14T07:35:33.107000" level="INFO">${output} = [{"volume":"recon","bucket":"api","fileSize":2048,"count":10},{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-05-14T07:35:33.094000" elapsed="0.013000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-14T07:35:33.108000" level="INFO">[{"volume":"recon","bucket":"api","fileSize":2048,"count":10},{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-14T07:35:33.107000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-05-14T07:35:33.108000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-05-14T07:35:33.108000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-05-14T07:35:33.093000" elapsed="0.016000"/>
</kw>
<msg time="2024-05-14T07:35:33.109000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-05-14T07:35:33.093000" elapsed="0.016000"/>
</kw>
<msg time="2024-05-14T07:35:33.109000" level="INFO">${result} = [{"volume":"recon","bucket":"api","fileSize":2048,"count":10},{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/utilization/fileCount</arg>
<status status="PASS" start="2024-05-14T07:35:33.093000" elapsed="0.016000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-05-14T07:35:33.109000" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-05-14T07:35:33.074000" elapsed="0.035000"/>
</kw>
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Check if Recon picks up container from OM</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-05-14T07:35:22.936000" elapsed="10.173000"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" start="2024-05-14T07:35:10.329000" elapsed="22.781000"/>
</test>
<test id="s1-s3-s1-t2" name="Check if Recon picks up DN heartbeats" line="71">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-05-14T07:35:33.113000" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/datanodes 2&gt;&amp;1'.</msg>
<msg time="2024-05-14T07:35:33.142000" level="INFO">${rc} = 0</msg>
<msg time="2024-05-14T07:35:33.142000" level="INFO">${output} = {"totalCount":6,"datanodes":[{"uuid":"4e0b3f4d-d2e2-419c-9f25-63b52ab82f90","hostname":"ozone-topology_datanode_2_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":1715672...</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-05-14T07:35:33.112000" elapsed="0.030000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-14T07:35:33.143000" level="INFO">{"totalCount":6,"datanodes":[{"uuid":"4e0b3f4d-d2e2-419c-9f25-63b52ab82f90","hostname":"ozone-topology_datanode_2_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":1715672109481,"storageReport":{"capacity":77843469658,"used":4096,"remaining":18843824128,"committed":0},"pipelines":[{"pipelineID":"b9df73e4-d6b3-4734-80ab-c0c968ac2c31","replicationType":"RATIS","replicationFactor":"ONE","leaderNode":"ozone-topology_datanode_2_1.ozone-topology_net"}],"leaderCount":1,"version":"1.5.0-SNAPSHOT","setupTime":1715672036398,"revision":"47c58c3dd3631b6aea127e2c02a7cd0317b2b220","buildDate":"2024-05-14T07:08Z","layoutVersion":7,"networkLocation":"/default-rack"},{"uuid":"c3889636-3544-4cf2-820d-9303b25b98ac","hostname":"ozone-topology_datanode_6_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":1715672121417,"storageReport":{"capacity":77843469658,"used":14336,"remaining":17941176320,"committed":268425216},"pipelines":[{"pipelineID":"e2a7c021-0b28-46c0-98aa-2ae2791ba0df","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_1_1.ozone-topology_net"},{"pipelineID":"10d73dcb-66ba-479a-b786-984395cd15b0","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_6_1.ozone-topology_net"},{"pipelineID":"e3726838-ff7f-47ea-9615-232e861f4cf0","replicationType":"RATIS","replicationFactor":"ONE","leaderNode":"ozone-topology_datanode_6_1.ozone-topology_net"}],"containers":2,"openContainers":2,"leaderCount":2,"version":"1.5.0-SNAPSHOT","setupTime":1715672033515,"revision":"47c58c3dd3631b6aea127e2c02a7cd0317b2b220","buildDate":"2024-05-14T07:08Z","layoutVersion":7,"networkLocation":"/default-rack"},{"uuid":"4afdff2a-6b9b-456a-9fe4-e9820c6c835d","hostname":"ozone-topology_datanode_5_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":1715672120829,"storageReport":{"capacity":77843469658,"used":8192,"remaining":17941106688,"committed":0},"pipelines":[{"pipelineID":"ad4ec745-5e65-4c3d-8ee9-2bb4a2b1cc6c","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_5_1.ozone-topology_net"},{"pipelineID":"8d87125e-853a-40a2-9638-08aeafb31b59","replicationType":"RATIS","replicationFactor":"ONE","leaderNode":"ozone-topology_datanode_5_1.ozone-topology_net"}],"containers":1,"openContainers":1,"leaderCount":2,"version":"1.5.0-SNAPSHOT","setupTime":1715672034239,"revision":"47c58c3dd3631b6aea127e2c02a7cd0317b2b220","buildDate":"2024-05-14T07:08Z","layoutVersion":7,"networkLocation":"/default-rack"},{"uuid":"13534cfd-21a4-4fff-a2a9-18b737aec847","hostname":"ozone-topology_datanode_1_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":1715672121393,"storageReport":{"capacity":77843469658,"used":18432,"remaining":17941106688,"committed":268425216},"pipelines":[{"pipelineID":"e2a7c021-0b28-46c0-98aa-2ae2791ba0df","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_1_1.ozone-topology_net"},{"pipelineID":"10d73dcb-66ba-479a-b786-984395cd15b0","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_6_1.ozone-topology_net"},{"pipelineID":"588fce25-6570-4a11-8041-c90cb7ab03aa","replicationType":"RATIS","replicationFactor":"ONE","leaderNode":"ozone-topology_datanode_1_1.ozone-topology_net"}],"containers":2,"openContainers":2,"leaderCount":2,"version":"1.5.0-SNAPSHOT","setupTime":1715672034492,"revision":"47c58c3dd3631b6aea127e2c02a7cd0317b2b220","buildDate":"2024-05-14T07:08Z","layoutVersion":7,"networkLocation":"/rack1"},{"uuid":"a85ca596-89b0-4ba6-b335-fac2dcbf5e6c","hostname":"ozone-topology_datanode_3_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":1715672121441,"storageReport":{"capacity":77843469658,"used":4096,"remaining":17941106688,"committed":0},"pipelines":[{"pipelineID":"2d905058-4a39-45d3-9d4b-1e54c54f3fe0","replicationType":"RATIS","replicationFactor":"ONE","leaderNode":"ozone-topology_datanode_3_1.ozone-topology_net"},{"pipelineID":"e2a7c021-0b28-46c0-98aa-2ae2791ba0df","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_1_1.ozone-topology_net"},{"pipelineID":"ad4ec745-5e65-4c3d-8ee9-2bb4a2b1cc6c","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_5_1.ozone-topology_net"}],"containers":2,"openContainers":2,"leaderCount":1,"version":"1.5.0-SNAPSHOT","setupTime":1715672035140,"revision":"47c58c3dd3631b6aea127e2c02a7cd0317b2b220","buildDate":"2024-05-14T07:08Z","layoutVersion":7,"networkLocation":"/default-rack"},{"uuid":"4fb1abc4-5dc6-461f-9526-50789774398b","hostname":"ozone-topology_datanode_4_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":1715672120685,"storageReport":{"capacity":77843469658,"used":14336,"remaining":17941106688,"committed":268425216},"pipelines":[{"pipelineID":"9d0d0d70-d8e6-423c-9c7f-adf9957c1fbc","replicationType":"RATIS","replicationFactor":"ONE","leaderNode":"ozone-topology_datanode_4_1.ozone-topology_net"},{"pipelineID":"ad4ec745-5e65-4c3d-8ee9-2bb4a2b1cc6c","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_5_1.ozone-topology_net"},{"pipelineID":"10d73dcb-66ba-479a-b786-984395cd15b0","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_6_1.ozone-topology_net"}],"containers":2,"openContainers":2,"leaderCount":1,"version":"1.5.0-SNAPSHOT","setupTime":1715672033383,"revision":"47c58c3dd3631b6aea127e2c02a7cd0317b2b220","buildDate":"2024-05-14T07:08Z","layoutVersion":7,"networkLocation":"/default-rack"}]}</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-14T07:35:33.142000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-05-14T07:35:33.144000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-05-14T07:35:33.143000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-05-14T07:35:33.111000" elapsed="0.033000"/>
</kw>
<msg time="2024-05-14T07:35:33.144000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-05-14T07:35:33.111000" elapsed="0.033000"/>
</kw>
<msg time="2024-05-14T07:35:33.144000" level="INFO">${result} = {"totalCount":6,"datanodes":[{"uuid":"4e0b3f4d-d2e2-419c-9f25-63b52ab82f90","hostname":"ozone-topology_datanode_2_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":1715672...</msg>
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/datanodes</arg>
<status status="PASS" start="2024-05-14T07:35:33.111000" elapsed="0.033000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>datanodes</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-05-14T07:35:33.144000" elapsed="0.001000"/>
</kw>
<kw name="Should Match Regexp" owner="BuiltIn">
<arg>${result}</arg>
<arg>datanode[-_]1</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" start="2024-05-14T07:35:33.145000" elapsed="0.000000"/>
</kw>
<kw name="Should Match Regexp" owner="BuiltIn">
<arg>${result}</arg>
<arg>datanode[-_]2</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" start="2024-05-14T07:35:33.145000" elapsed="0.001000"/>
</kw>
<kw name="Should Match Regexp" owner="BuiltIn">
<arg>${result}</arg>
<arg>datanode[-_]3</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" start="2024-05-14T07:35:33.146000" elapsed="0.000000"/>
</kw>
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-05-14T07:35:33.149000" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/pipelines 2&gt;&amp;1'.</msg>
<msg time="2024-05-14T07:35:33.183000" level="INFO">${rc} = 0</msg>
<msg time="2024-05-14T07:35:33.183000" level="INFO">${output} = {"totalCount":9,"pipelines":[{"pipelineId":"9d0d0d70-d8e6-423c-9c7f-adf9957c1fbc","status":"OPEN","leaderNode":"ozone-topology_datanode_4_1.ozone-topology_net","datanodes":[{"level":3,"parent":null,"c...</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-05-14T07:35:33.147000" elapsed="0.036000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-14T07:35:33.184000" level="INFO">{"totalCount":9,"pipelines":[{"pipelineId":"9d0d0d70-d8e6-423c-9c7f-adf9957c1fbc","status":"OPEN","leaderNode":"ozone-topology_datanode_4_1.ozone-topology_net","datanodes":[{"level":3,"parent":null,"cost":0,"uuid":"4fb1abc4-5dc6-461f-9526-50789774398b","uuidString":"4fb1abc4-5dc6-461f-9526-50789774398b","ipAddress":"10.5.0.7","hostName":"ozone-topology_datanode_4_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":19864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"decommissioned":false,"maintenance":false,"ipAddressAsByteString":{"string":"10.5.0.7","bytes":{"validUtf8":true,"empty":false}},"hostNameAsByteString":{"string":"ozone-topology_datanode_4_1.ozone-topology_net","bytes":{"validUtf8":true,"empty":false}},"networkName":"4fb1abc4-5dc6-461f-9526-50789774398b","networkLocation":"/rack2","networkFullPath":"/rack2/4fb1abc4-5dc6-461f-9526-50789774398b","numOfLeaves":1,"networkLocationAsByteString":{"string":"/rack2","bytes":{"validUtf8":true,"empty":false}},"networkNameAsByteString":{"string":"4fb1abc4-5dc6-461f-9526-50789774398b","bytes":{"validUtf8":true,"empty":false}}}],"lastLeaderElection":0,"duration":63992,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"ONE","containers":0},{"pipelineId":"2d905058-4a39-45d3-9d4b-1e54c54f3fe0","status":"OPEN","leaderNode":"ozone-topology_datanode_3_1.ozone-topology_net","datanodes":[{"level":3,"parent":null,"cost":0,"uuid":"a85ca596-89b0-4ba6-b335-fac2dcbf5e6c","uuidString":"a85ca596-89b0-4ba6-b335-fac2dcbf5e6c","ipAddress":"10.5.0.6","hostName":"ozone-topology_datanode_3_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":19864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"decommissioned":false,"maintenance":false,"ipAddressAsByteString":{"string":"10.5.0.6","bytes":{"validUtf8":true,"empty":false}},"hostNameAsByteString":{"string":"ozone-topology_datanode_3_1.ozone-topology_net","bytes":{"validUtf8":true,"empty":false}},"networkName":"a85ca596-89b0-4ba6-b335-fac2dcbf5e6c","networkLocation":"/rack1","networkFullPath":"/rack1/a85ca596-89b0-4ba6-b335-fac2dcbf5e6c","numOfLeaves":1,"networkLocationAsByteString":{"string":"/rack1","bytes":{"validUtf8":true,"empty":false}},"networkNameAsByteString":{"string":"a85ca596-89b0-4ba6-b335-fac2dcbf5e6c","bytes":{"validUtf8":true,"empty":false}}}],"lastLeaderElection":0,"duration":64103,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"ONE","containers":0},{"pipelineId":"e2a7c021-0b28-46c0-98aa-2ae2791ba0df","status":"OPEN","leaderNode":"ozone-topology_datanode_1_1.ozone-topology_net","datanodes":[{"level":3,"parent":null,"cost":0,"uuid":"a85ca596-89b0-4ba6-b335-fac2dcbf5e6c","uuidString":"a85ca596-89b0-4ba6-b335-fac2dcbf5e6c","ipAddress":"10.5.0.6","hostName":"ozone-topology_datanode_3_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":19864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"decommissioned":false,"maintenance":false,"ipAddressAsByteString":{"string":"10.5.0.6","bytes":{"validUtf8":true,"empty":false}},"hostNameAsByteString":{"string":"ozone-topology_datanode_3_1.ozone-topology_net","bytes":{"validUtf8":true,"empty":false}},"networkName":"a85ca596-89b0-4ba6-b335-fac2dcbf5e6c","networkLocation":"/rack1","networkFullPath":"/rack1/a85ca596-89b0-4ba6-b335-fac2dcbf5e6c","numOfLeaves":1,"networkLocationAsByteString":{"string":"/rack1","bytes":{"validUtf8":true,"empty":false}},"networkNameAsByteString":{"string":"a85ca596-89b0-4ba6-b335-fac2dcbf5e6c","bytes":{"validUtf8":true,"empty":false}}},{"level":3,"parent":null,"cost":0,"uuid":"c3889636-3544-4cf2-820d-9303b25b98ac","uuidString":"c3889636-3544-4cf2-820d-9303b25b98ac","ipAddress":"10.5.0.9","hostName":"ozone-topology_datanode_6_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":19864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"decommissioned":false,"maintenance":false,"ipAddressAsByteString":{"string":"10.5.0.9","bytes":{"validUtf8":true,"empty":false}},"hostNameAsByteString":{"string":"ozone-topology_datanode_6_1.ozone-topology_net","bytes":{"validUtf8":true,"empty":false}},"networkName":"c3889636-3544-4cf2-820d-9303b25b98ac","networkLocation":"/rack2","networkFullPath":"/rack2/c3889636-3544-4cf2-820d-9303b25b98ac","numOfLeaves":1,"networkLocationAsByteString":{"string":"/rack2","bytes":{"validUtf8":true,"empty":false}},"networkNameAsByteString":{"string":"c3889636-3544-4cf2-820d-9303b25b98ac","bytes":{"validUtf8":true,"empty":false}}},{"level":3,"parent":null,"cost":0,"uuid":"13534cfd-21a4-4fff-a2a9-18b737aec847","uuidString":"13534cfd-21a4-4fff-a2a9-18b737aec847","ipAddress":"10.5.0.4","hostName":"ozone-topology_datanode_1_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":19864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"decommissioned":false,"maintenance":false,"ipAddressAsByteString":{"string":"10.5.0.4","bytes":{"validUtf8":true,"empty":false}},"hostNameAsByteString":{"string":"ozone-topology_datanode_1_1.ozone-topology_net","bytes":{"validUtf8":true,"empty":false}},"networkName":"13534cfd-21a4-4fff-a2a9-18b737aec847","networkLocation":"/rack1","networkFullPath":"/rack1/13534cfd-21a4-4fff-a2a9-18b737aec847","numOfLeaves":1,"networkLocationAsByteString":{"string":"/rack1","bytes":{"validUtf8":true,"empty":false}},"networkNameAsByteString":{"string":"13534cfd-21a4-4fff-a2a9-18b737aec847","bytes":{"validUtf8":true,"empty":false}}}],"lastLeaderElection":0,"duration":63724,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"THREE","containers":1},{"pipelineId":"ad4ec745-5e65-4c3d-8ee9-2bb4a2b1cc6c","status":"OPEN","leaderNode":"ozone-topology_datanode_5_1.ozone-topology_net","datanodes":[{"level":3,"parent":null,"cost":0,"uuid":"4afdff2a-6b9b-456a-9fe4-e9820c6c835d","uuidString":"4afdff2a-6b9b-456a-9fe4-e9820c6c835d","ipAddress":"10.5.0.8","hostName":"ozone-topology_datanode_5_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":19864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"decommissioned":false,"maintenance":false,"ipAddressAsByteString":{"string":"10.5.0.8","bytes":{"validUtf8":true,"empty":false}},"hostNameAsByteString":{"string":"ozone-topology_datanode_5_1.ozone-topology_net","bytes":{"validUtf8":true,"empty":false}},"networkName":"4afdff2a-6b9b-456a-9fe4-e9820c6c835d","networkLocation":"/rack2","networkFullPath":"/rack2/4afdff2a-6b9b-456a-9fe4-e9820c6c835d","numOfLeaves":1,"networkLocationAsByteString":{"string":"/rack2","bytes":{"validUtf8":true,"empty":false}},"networkNameAsByteString":{"string":"4afdff2a-6b9b-456a-9fe4-e9820c6c835d","bytes":{"validUtf8":true,"empty":false}}},{"level":3,"parent":null,"cost":0,"uuid":"a85ca596-89b0-4ba6-b335-fac2dcbf5e6c","uuidString":"a85ca596-89b0-4ba6-b335-fac2dcbf5e6c","ipAddress":"10.5.0.6","hostName":"ozone-topology_datanode_3_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":19864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"decommissioned":false,"maintenance":false,"ipAddressAsByteString":{"string":"10.5.0.6","bytes":{"validUtf8":true,"empty":false}},"hostNameAsByteString":{"string":"ozone-topology_datanode_3_1.ozone-topology_net","bytes":{"validUtf8":true,"empty":false}},"networkName":"a85ca596-89b0-4ba6-b335-fac2dcbf5e6c","networkLocation":"/rack1","networkFullPath":"/rack1/a85ca596-89b0-4ba6-b335-fac2dcbf5e6c","numOfLeaves":1,"networkLocationAsByteString":{"string":"/rack1","bytes":{"validUtf8":true,"empty":false}},"networkNameAsByteString":{"string":"a85ca596-89b0-4ba6-b335-fac2dcbf5e6c","bytes":{"validUtf8":true,"empty":false}}},{"level":3,"parent":null,"cost":0,"uuid":"4fb1abc4-5dc6-461f-9526-50789774398b","uuidString":"4fb1abc4-5dc6-461f-9526-50789774398b","ipAddress":"10.5.0.7","hostName":"ozone-topology_datanode_4_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":19864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"decommissioned":false,"maintenance":false,"ipAddressAsByteString":{"string":"10.5.0.7","bytes":{"validUtf8":true,"empty":false}},"hostNameAsByteString":{"string":"ozone-topology_datanode_4_1.ozone-topology_net","bytes":{"validUtf8":true,"empty":false}},"networkName":"4fb1abc4-5dc6-461f-9526-50789774398b","networkLocation":"/rack2","networkFullPath":"/rack2/4fb1abc4-5dc6-461f-9526-50789774398b","numOfLeaves":1,"networkLocationAsByteString":{"string":"/rack2","bytes":{"validUtf8":true,"empty":false}},"networkNameAsByteString":{"string":"4fb1abc4-5dc6-461f-9526-50789774398b","bytes":{"validUtf8":true,"empty":false}}}],"lastLeaderElection":0,"duration":63422,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"THREE","containers":1},{"pipelineId":"b9df73e4-d6b3-4734-80ab-c0c968ac2c31","status":"OPEN","leaderNode":"ozone-topology_datanode_2_1.ozone-topology_net","datanodes":[{"level":3,"parent":null,"cost":0,"uuid":"4e0b3f4d-d2e2-419c-9f25-63b52ab82f90","uuidString":"4e0b3f4d-d2e2-419c-9f25-63b52ab82f90","ipAddress":"10.5.0.5","hostName":"ozone-topology_datanode_2_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":19864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"decommissioned":false,"maintenance":false,"ipAddressAsByteString":{"string":"10.5.0.5","bytes":{"validUtf8":true,"empty":false}},"hostNameAsByteString":{"string":"ozone-topology_datanode_2_1.ozone-topology_net","bytes":{"validUtf8":true,"empty":false}},"networkName":"4e0b3f4d-d2e2-419c-9f25-63b52ab82f90","networkLocation":"/rack1","networkFullPath":"/rack1/4e0b3f4d-d2e2-419c-9f25-63b52ab82f90","numOfLeaves":1,"networkLocationAsByteString":{"string":"/rack1","bytes":{"validUtf8":true,"empty":false}},"networkNameAsByteString":{"string":"4e0b3f4d-d2e2-419c-9f25-63b52ab82f90","bytes":{"validUtf8":true,"empty":false}}}],"lastLeaderElection":0,"duration":63174,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"ONE","containers":0},{"pipelineId":"10d73dcb-66ba-479a-b786-984395cd15b0","status":"OPEN","leaderNode":"ozone-topology_datanode_6_1.ozone-topology_net","datanodes":[{"level":3,"parent":null,"cost":0,"uuid":"c3889636-3544-4cf2-820d-9303b25b98ac","uuidString":"c3889636-3544-4cf2-820d-9303b25b98ac","ipAddress":"10.5.0.9","hostName":"ozone-topology_datanode_6_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":19864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"decommissioned":false,"maintenance":false,"ipAddressAsByteString":{"string":"10.5.0.9","bytes":{"validUtf8":true,"empty":false}},"hostNameAsByteString":{"string":"ozone-topology_datanode_6_1.ozone-topology_net","bytes":{"validUtf8":true,"empty":false}},"networkName":"c3889636-3544-4cf2-820d-9303b25b98ac","networkLocation":"/rack2","networkFullPath":"/rack2/c3889636-3544-4cf2-820d-9303b25b98ac","numOfLeaves":1,"networkLocationAsByteString":{"string":"/rack2","bytes":{"validUtf8":true,"empty":false}},"networkNameAsByteString":{"string":"c3889636-3544-4cf2-820d-9303b25b98ac","bytes":{"validUtf8":true,"empty":false}}},{"level":3,"parent":null,"cost":0,"uuid":"13534cfd-21a4-4fff-a2a9-18b737aec847","uuidString":"13534cfd-21a4-4fff-a2a9-18b737aec847","ipAddress":"10.5.0.4","hostName":"ozone-topology_datanode_1_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":19864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"decommissioned":false,"maintenance":false,"ipAddressAsByteString":{"string":"10.5.0.4","bytes":{"validUtf8":true,"empty":false}},"hostNameAsByteString":{"string":"ozone-topology_datanode_1_1.ozone-topology_net","bytes":{"validUtf8":true,"empty":false}},"networkName":"13534cfd-21a4-4fff-a2a9-18b737aec847","networkLocation":"/rack1","networkFullPath":"/rack1/13534cfd-21a4-4fff-a2a9-18b737aec847","numOfLeaves":1,"networkLocationAsByteString":{"string":"/rack1","bytes":{"validUtf8":true,"empty":false}},"networkNameAsByteString":{"string":"13534cfd-21a4-4fff-a2a9-18b737aec847","bytes":{"validUtf8":true,"empty":false}}},{"level":3,"parent":null,"cost":0,"uuid":"4fb1abc4-5dc6-461f-9526-50789774398b","uuidString":"4fb1abc4-5dc6-461f-9526-50789774398b","ipAddress":"10.5.0.7","hostName":"ozone-topology_datanode_4_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":19864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"decommissioned":false,"maintenance":false,"ipAddressAsByteString":{"string":"10.5.0.7","bytes":{"validUtf8":true,"empty":false}},"hostNameAsByteString":{"string":"ozone-topology_datanode_4_1.ozone-topology_net","bytes":{"validUtf8":true,"empty":false}},"networkName":"4fb1abc4-5dc6-461f-9526-50789774398b","networkLocation":"/rack2","networkFullPath":"/rack2/4fb1abc4-5dc6-461f-9526-50789774398b","numOfLeaves":1,"networkLocationAsByteString":{"string":"/rack2","bytes":{"validUtf8":true,"empty":false}},"networkNameAsByteString":{"string":"4fb1abc4-5dc6-461f-9526-50789774398b","bytes":{"validUtf8":true,"empty":false}}}],"lastLeaderElection":0,"duration":63733,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"THREE","containers":1},{"pipelineId":"588fce25-6570-4a11-8041-c90cb7ab03aa","status":"OPEN","leaderNode":"ozone-topology_datanode_1_1.ozone-topology_net","datanodes":[{"level":3,"parent":null,"cost":0,"uuid":"13534cfd-21a4-4fff-a2a9-18b737aec847","uuidString":"13534cfd-21a4-4fff-a2a9-18b737aec847","ipAddress":"10.5.0.4","hostName":"ozone-topology_datanode_1_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":19864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"decommissioned":false,"maintenance":false,"ipAddressAsByteString":{"string":"10.5.0.4","bytes":{"validUtf8":true,"empty":false}},"hostNameAsByteString":{"string":"ozone-topology_datanode_1_1.ozone-topology_net","bytes":{"validUtf8":true,"empty":false}},"networkName":"13534cfd-21a4-4fff-a2a9-18b737aec847","networkLocation":"/rack1","networkFullPath":"/rack1/13534cfd-21a4-4fff-a2a9-18b737aec847","numOfLeaves":1,"networkLocationAsByteString":{"string":"/rack1","bytes":{"validUtf8":true,"empty":false}},"networkNameAsByteString":{"string":"13534cfd-21a4-4fff-a2a9-18b737aec847","bytes":{"validUtf8":true,"empty":false}}}],"lastLeaderElection":0,"duration":64546,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"ONE","containers":0},{"pipelineId":"e3726838-ff7f-47ea-9615-232e861f4cf0","status":"OPEN","leaderNode":"ozone-topology_datanode_6_1.ozone-topology_net","datanodes":[{"level":3,"parent":null,"cost":0,"uuid":"c3889636-3544-4cf2-820d-9303b25b98ac","uuidString":"c3889636-3544-4cf2-820d-9303b25b98ac","ipAddress":"10.5.0.9","hostName":"ozone-topology_datanode_6_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":19864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"decommissioned":false,"maintenance":false,"ipAddressAsByteString":{"string":"10.5.0.9","bytes":{"validUtf8":true,"empty":false}},"hostNameAsByteString":{"string":"ozone-topology_datanode_6_1.ozone-topology_net","bytes":{"validUtf8":true,"empty":false}},"networkName":"c3889636-3544-4cf2-820d-9303b25b98ac","networkLocation":"/rack2","networkFullPath":"/rack2/c3889636-3544-4cf2-820d-9303b25b98ac","numOfLeaves":1,"networkLocationAsByteString":{"string":"/rack2","bytes":{"validUtf8":true,"empty":false}},"networkNameAsByteString":{"string":"c3889636-3544-4cf2-820d-9303b25b98ac","bytes":{"validUtf8":true,"empty":false}}}],"lastLeaderElection":0,"duration":63743,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"ONE","containers":0},{"pipelineId":"8d87125e-853a-40a2-9638-08aeafb31b59","status":"OPEN","leaderNode":"ozone-topology_datanode_5_1.ozone-topology_net","datanodes":[{"level":3,"parent":null,"cost":0,"uuid":"4afdff2a-6b9b-456a-9fe4-e9820c6c835d","uuidString":"4afdff2a-6b9b-456a-9fe4-e9820c6c835d","ipAddress":"10.5.0.8","hostName":"ozone-topology_datanode_5_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":19864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"decommissioned":false,"maintenance":false,"ipAddressAsByteString":{"string":"10.5.0.8","bytes":{"validUtf8":true,"empty":false}},"hostNameAsByteString":{"string":"ozone-topology_datanode_5_1.ozone-topology_net","bytes":{"validUtf8":true,"empty":false}},"networkName":"4afdff2a-6b9b-456a-9fe4-e9820c6c835d","networkLocation":"/rack2","networkFullPath":"/rack2/4afdff2a-6b9b-456a-9fe4-e9820c6c835d","numOfLeaves":1,"networkLocationAsByteString":{"string":"/rack2","bytes":{"validUtf8":true,"empty":false}},"networkNameAsByteString":{"string":"4afdff2a-6b9b-456a-9fe4-e9820c6c835d","bytes":{"validUtf8":true,"empty":false}}}],"lastLeaderElection":0,"duration":63433,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"ONE","containers":0}]}</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-14T07:35:33.184000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-05-14T07:35:33.185000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-05-14T07:35:33.185000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-05-14T07:35:33.147000" elapsed="0.038000"/>
</kw>
<msg time="2024-05-14T07:35:33.185000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-05-14T07:35:33.147000" elapsed="0.038000"/>
</kw>
<msg time="2024-05-14T07:35:33.186000" level="INFO">${result} = {"totalCount":9,"pipelines":[{"pipelineId":"9d0d0d70-d8e6-423c-9c7f-adf9957c1fbc","status":"OPEN","leaderNode":"ozone-topology_datanode_4_1.ozone-topology_net","datanodes":[{"level":3,"parent":null,"c...</msg>
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/pipelines</arg>
<status status="PASS" start="2024-05-14T07:35:33.146000" elapsed="0.040000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>pipelines</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-05-14T07:35:33.186000" elapsed="0.000000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-05-14T07:35:33.186000" elapsed="0.001000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>OPEN</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-05-14T07:35:33.187000" elapsed="0.000000"/>
</kw>
<kw name="Should Match Regexp" owner="BuiltIn">
<arg>${result}</arg>
<arg>datanode[-_]1</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" start="2024-05-14T07:35:33.187000" elapsed="0.000000"/>
</kw>
<kw name="Should Match Regexp" owner="BuiltIn">
<arg>${result}</arg>
<arg>datanode[-_]2</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" start="2024-05-14T07:35:33.188000" elapsed="0.000000"/>
</kw>
<kw name="Should Match Regexp" owner="BuiltIn">
<arg>${result}</arg>
<arg>datanode[-_]3</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" start="2024-05-14T07:35:33.188000" elapsed="0.000000"/>
</kw>
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-05-14T07:35:33.191000" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/clusterState 2&gt;&amp;1'.</msg>
<msg time="2024-05-14T07:35:33.225000" level="INFO">${rc} = 0</msg>
<msg time="2024-05-14T07:35:33.225000" level="INFO">${output} = {"deletedDirs":0,"pipelines":9,"totalDatanodes":6,"healthyDatanodes":6,"storageReport":{"capacity":467060817948,"used":63488,"remaining":108549427200,"committed":805275648},"containers":3,"missingCont...</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-05-14T07:35:33.189000" elapsed="0.036000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-14T07:35:33.226000" level="INFO">{"deletedDirs":0,"pipelines":9,"totalDatanodes":6,"healthyDatanodes":6,"storageReport":{"capacity":467060817948,"used":63488,"remaining":108549427200,"committed":805275648},"containers":3,"missingContainers":0,"openContainers":3,"deletedContainers":0,"volumes":3,"buckets":2,"keys":11,"keysPendingDeletion":0}</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-14T07:35:33.226000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-05-14T07:35:33.227000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-05-14T07:35:33.227000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-05-14T07:35:33.189000" elapsed="0.038000"/>
</kw>
<msg time="2024-05-14T07:35:33.227000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-05-14T07:35:33.189000" elapsed="0.038000"/>
</kw>
<msg time="2024-05-14T07:35:33.228000" level="INFO">${result} = {"deletedDirs":0,"pipelines":9,"totalDatanodes":6,"healthyDatanodes":6,"storageReport":{"capacity":467060817948,"used":63488,"remaining":108549427200,"committed":805275648},"containers":3,"missingCont...</msg>
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/clusterState</arg>
<status status="PASS" start="2024-05-14T07:35:33.188000" elapsed="0.040000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>\"totalDatanodes\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-05-14T07:35:33.228000" elapsed="0.000000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>\"healthyDatanodes\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-05-14T07:35:33.229000" elapsed="0.000000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>\"pipelines\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-05-14T07:35:33.229000" elapsed="0.001000"/>
</kw>
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-05-14T07:35:33.234000" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers/1/replicaHistory 2&gt;&amp;1'.</msg>
<msg time="2024-05-14T07:35:33.252000" level="INFO">${rc} = 0</msg>
<msg time="2024-05-14T07:35:33.252000" level="INFO">${output} = [{"containerId":1,"datanodeUuid":"c3889636-3544-4cf2-820d-9303b25b98ac","datanodeHost":"ozone-topology_datanode_6_1.ozone-topology_net","firstSeenTime":1715672088522,"lastSeenTime":1715672088522,"last...</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-05-14T07:35:33.231000" elapsed="0.021000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-14T07:35:33.253000" level="INFO">[{"containerId":1,"datanodeUuid":"c3889636-3544-4cf2-820d-9303b25b98ac","datanodeHost":"ozone-topology_datanode_6_1.ozone-topology_net","firstSeenTime":1715672088522,"lastSeenTime":1715672088522,"lastBcsId":0,"state":"OPEN"},{"containerId":1,"datanodeUuid":"13534cfd-21a4-4fff-a2a9-18b737aec847","datanodeHost":"ozone-topology_datanode_1_1.ozone-topology_net","firstSeenTime":1715672088678,"lastSeenTime":1715672088678,"lastBcsId":0,"state":"OPEN"},{"containerId":1,"datanodeUuid":"4fb1abc4-5dc6-461f-9526-50789774398b","datanodeHost":"ozone-topology_datanode_4_1.ozone-topology_net","firstSeenTime":1715672088662,"lastSeenTime":1715672088662,"lastBcsId":0,"state":"OPEN"}]</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-14T07:35:33.252000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-05-14T07:35:33.254000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-05-14T07:35:33.253000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-05-14T07:35:33.231000" elapsed="0.023000"/>
</kw>
<msg time="2024-05-14T07:35:33.254000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-05-14T07:35:33.230000" elapsed="0.024000"/>
</kw>
<msg time="2024-05-14T07:35:33.255000" level="INFO">${result} = [{"containerId":1,"datanodeUuid":"c3889636-3544-4cf2-820d-9303b25b98ac","datanodeHost":"ozone-topology_datanode_6_1.ozone-topology_net","firstSeenTime":1715672088522,"lastSeenTime":1715672088522,"last...</msg>
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers/1/replicaHistory</arg>
<status status="PASS" start="2024-05-14T07:35:33.230000" elapsed="0.025000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>\"containerId\":1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-05-14T07:35:33.255000" elapsed="0.000000"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" start="2024-05-14T07:35:33.110000" elapsed="0.145000"/>
</test>
<test id="s1-s3-s1-t3" name="Check if Recon Web UI is up" line="94">
<kw name="Run Keyword If" owner="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-05-14T07:35:33.257000" elapsed="0.001000"/>
</kw>
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-05-14T07:35:33.261000" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888 2&gt;&amp;1'.</msg>
<msg time="2024-05-14T07:35:33.277000" level="INFO">${rc} = 0</msg>
<msg time="2024-05-14T07:35:33.277000" level="INFO">${output} = &lt;!doctype html&gt;&lt;html lang="en"&gt;&lt;head&gt;&lt;meta charset="utf-8"/&gt;&lt;link rel="shortcut icon" href="/favicon.ico"/&gt;&lt;meta name="viewport" content="width=device-width,initial-scale=1"/&gt;&lt;meta name="theme-color" ...</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-05-14T07:35:33.259000" elapsed="0.018000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-14T07:35:33.278000" level="INFO">&lt;!doctype html&gt;&lt;html lang="en"&gt;&lt;head&gt;&lt;meta charset="utf-8"/&gt;&lt;link rel="shortcut icon" href="/favicon.ico"/&gt;&lt;meta name="viewport" content="width=device-width,initial-scale=1"/&gt;&lt;meta name="theme-color" content="#000000"/&gt;&lt;link rel="manifest" href="/manifest.json"/&gt;&lt;title&gt;Ozone Recon&lt;/title&gt;&lt;link href="/static/css/2.eddc7837.chunk.css" rel="stylesheet"&gt;&lt;link href="/static/css/main.d3483ea3.chunk.css" rel="stylesheet"&gt;&lt;/head&gt;&lt;body&gt;&lt;noscript&gt;You need to enable JavaScript to run this app.&lt;/noscript&gt;&lt;div id="root"&gt;&lt;/div&gt;&lt;script&gt;!function(e){function r(r){for(var n,l,f=r[0],i=r[1],a=r[2],p=0,s=[];p&lt;f.length;p++)l=f[p],Object.prototype.hasOwnProperty.call(o,l)&amp;&amp;o[l]&amp;&amp;s.push(o[l][0]),o[l]=0;for(n in i)Object.prototype.hasOwnProperty.call(i,n)&amp;&amp;(e[n]=i[n]);for(c&amp;&amp;c(r);s.length;)s.shift()();return u.push.apply(u,a||[]),t()}function t(){for(var e,r=0;r&lt;u.length;r++){for(var t=u[r],n=!0,f=1;f&lt;t.length;f++){var i=t[f];0!==o[i]&amp;&amp;(n=!1)}n&amp;&amp;(u.splice(r--,1),e=l(l.s=t[0]))}return e}var n={},o={1:0},u=[];function l(r){if(n[r])return n[r].exports;var t=n[r]={i:r,l:!1,exports:{}};return e[r].call(t.exports,t,t.exports,l),t.l=!0,t.exports}l.m=e,l.c=n,l.d=function(e,r,t){l.o(e,r)||Object.defineProperty(e,r,{enumerable:!0,get:t})},l.r=function(e){"undefined"!=typeof Symbol&amp;&amp;Symbol.toStringTag&amp;&amp;Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},l.t=function(e,r){if(1&amp;r&amp;&amp;(e=l(e)),8&amp;r)return e;if(4&amp;r&amp;&amp;"object"==typeof e&amp;&amp;e&amp;&amp;e.__esModule)return e;var t=Object.create(null);if(l.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:e}),2&amp;r&amp;&amp;"string"!=typeof e)for(var n in e)l.d(t,n,function(r){return e[r]}.bind(null,n));return t},l.n=function(e){var r=e&amp;&amp;e.__esModule?function(){return e.default}:function(){return e};return l.d(r,"a",r),r},l.o=function(e,r){return Object.prototype.hasOwnProperty.call(e,r)},l.p="/";var f=this["webpackJsonpozone-recon"]=this["webpackJsonpozone-recon"]||[],i=f.push.bind(f);f.push=r,f=f.slice();for(var a=0;a&lt;f.length;a++)r(f[a]);var c=i;t()}([])&lt;/script&gt;&lt;script src="/static/js/2.7c47eedf.chunk.js"&gt;&lt;/script&gt;&lt;script src="/static/js/main.34128697.chunk.js"&gt;&lt;/script&gt;&lt;/body&gt;&lt;/html&gt;</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-14T07:35:33.277000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-05-14T07:35:33.278000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-05-14T07:35:33.278000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-05-14T07:35:33.259000" elapsed="0.020000"/>
</kw>
<msg time="2024-05-14T07:35:33.279000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-05-14T07:35:33.258000" elapsed="0.021000"/>
</kw>
<msg time="2024-05-14T07:35:33.279000" level="INFO">${result} = &lt;!doctype html&gt;&lt;html lang="en"&gt;&lt;head&gt;&lt;meta charset="utf-8"/&gt;&lt;link rel="shortcut icon" href="/favicon.ico"/&gt;&lt;meta name="viewport" content="width=device-width,initial-scale=1"/&gt;&lt;meta name="theme-color" ...</msg>
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${ENDPOINT_URL}</arg>
<status status="PASS" start="2024-05-14T07:35:33.258000" elapsed="0.021000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>Ozone Recon</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-05-14T07:35:33.279000" elapsed="0.001000"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" start="2024-05-14T07:35:33.256000" elapsed="0.024000"/>
</test>
<test id="s1-s3-s1-t4" name="Check web UI access" line="99">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-05-14T07:35:33.285000" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg time="2024-05-14T07:35:33.287000" level="INFO">${rc} = 0</msg>
<msg time="2024-05-14T07:35:33.287000" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-05-14T07:35:33.282000" elapsed="0.006000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-14T07:35:33.288000" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-14T07:35:33.288000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-05-14T07:35:33.289000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-05-14T07:35:33.288000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-05-14T07:35:33.281000" elapsed="0.008000"/>
</kw>
<msg time="2024-05-14T07:35:33.289000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-05-14T07:35:33.281000" elapsed="0.008000"/>
</kw>
<arg>kdestroy</arg>
<status status="PASS" start="2024-05-14T07:35:33.281000" elapsed="0.008000"/>
</kw>
<kw name="Check http return code">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-05-14T07:35:33.292000" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888 2&gt;&amp;1'.</msg>
<msg time="2024-05-14T07:35:33.302000" level="INFO">${rc} = 0</msg>
<msg time="2024-05-14T07:35:33.302000" level="INFO">${output} = 200</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-05-14T07:35:33.291000" elapsed="0.011000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-14T07:35:33.303000" level="INFO">200</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-14T07:35:33.302000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-05-14T07:35:33.303000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-05-14T07:35:33.303000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-05-14T07:35:33.290000" elapsed="0.014000"/>
</kw>
<msg time="2024-05-14T07:35:33.304000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-05-14T07:35:33.290000" elapsed="0.014000"/>
</kw>
<msg time="2024-05-14T07:35:33.304000" level="INFO">${result} = 200</msg>
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<status status="PASS" start="2024-05-14T07:35:33.290000" elapsed="0.014000"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" start="2024-05-14T07:35:33.304000" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-05-14T07:35:33.304000" elapsed="0.000000"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-05-14T07:35:33.305000" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-05-14T07:35:33.304000" elapsed="0.001000"/>
</branch>
<status status="PASS" start="2024-05-14T07:35:33.304000" elapsed="0.001000"/>
</if>
<arg>${ENDPOINT_URL}</arg>
<arg>401</arg>
<status status="PASS" start="2024-05-14T07:35:33.289000" elapsed="0.016000"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" owner="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-05-14T07:35:33.306000" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-05-14T07:35:33.305000" elapsed="0.001000"/>
</kw>
<kw name="Check http return code">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-05-14T07:35:33.308000" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888 2&gt;&amp;1'.</msg>
<msg time="2024-05-14T07:35:33.318000" level="INFO">${rc} = 0</msg>
<msg time="2024-05-14T07:35:33.318000" level="INFO">${output} = 200</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-05-14T07:35:33.307000" elapsed="0.011000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-14T07:35:33.319000" level="INFO">200</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-14T07:35:33.318000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-05-14T07:35:33.319000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-05-14T07:35:33.319000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-05-14T07:35:33.307000" elapsed="0.013000"/>
</kw>
<msg time="2024-05-14T07:35:33.320000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-05-14T07:35:33.307000" elapsed="0.013000"/>
</kw>
<msg time="2024-05-14T07:35:33.320000" level="INFO">${result} = 200</msg>
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<status status="PASS" start="2024-05-14T07:35:33.306000" elapsed="0.014000"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" start="2024-05-14T07:35:33.320000" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-05-14T07:35:33.320000" elapsed="0.000000"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-05-14T07:35:33.320000" elapsed="0.001000"/>
</kw>
<status status="PASS" start="2024-05-14T07:35:33.320000" elapsed="0.001000"/>
</branch>
<status status="PASS" start="2024-05-14T07:35:33.320000" elapsed="0.001000"/>
</if>
<arg>${ENDPOINT_URL}</arg>
<arg>200</arg>
<status status="PASS" start="2024-05-14T07:35:33.306000" elapsed="0.015000"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" start="2024-05-14T07:35:33.280000" elapsed="0.041000"/>
</test>
<test id="s1-s3-s1-t5" name="Check admin only api access" line="107">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-05-14T07:35:33.324000" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg time="2024-05-14T07:35:33.326000" level="INFO">${rc} = 0</msg>
<msg time="2024-05-14T07:35:33.326000" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-05-14T07:35:33.323000" elapsed="0.003000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-14T07:35:33.327000" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-14T07:35:33.327000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-05-14T07:35:33.328000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-05-14T07:35:33.327000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-05-14T07:35:33.323000" elapsed="0.005000"/>
</kw>
<msg time="2024-05-14T07:35:33.328000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-05-14T07:35:33.323000" elapsed="0.005000"/>
</kw>
<arg>kdestroy</arg>
<status status="PASS" start="2024-05-14T07:35:33.322000" elapsed="0.006000"/>
</kw>
<kw name="Check http return code">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-05-14T07:35:33.331000" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg time="2024-05-14T07:35:33.341000" level="INFO">${rc} = 0</msg>
<msg time="2024-05-14T07:35:33.341000" level="INFO">${output} = 200</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-05-14T07:35:33.330000" elapsed="0.011000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-14T07:35:33.342000" level="INFO">200</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-14T07:35:33.341000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-05-14T07:35:33.342000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-05-14T07:35:33.342000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-05-14T07:35:33.329000" elapsed="0.013000"/>
</kw>
<msg time="2024-05-14T07:35:33.342000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-05-14T07:35:33.329000" elapsed="0.013000"/>
</kw>
<msg time="2024-05-14T07:35:33.343000" level="INFO">${result} = 200</msg>
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<status status="PASS" start="2024-05-14T07:35:33.329000" elapsed="0.014000"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" start="2024-05-14T07:35:33.343000" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-05-14T07:35:33.343000" elapsed="0.000000"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-05-14T07:35:33.343000" elapsed="0.001000"/>
</kw>
<status status="PASS" start="2024-05-14T07:35:33.343000" elapsed="0.001000"/>
</branch>
<status status="PASS" start="2024-05-14T07:35:33.343000" elapsed="0.001000"/>
</if>
<arg>${ADMIN_API_ENDPOINT_URL}</arg>
<arg>401</arg>
<status status="PASS" start="2024-05-14T07:35:33.328000" elapsed="0.016000"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" owner="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-05-14T07:35:33.344000" elapsed="0.001000"/>
</kw>
<status status="PASS" start="2024-05-14T07:35:33.344000" elapsed="0.001000"/>
</kw>
<kw name="Check http return code">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-05-14T07:35:33.347000" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg time="2024-05-14T07:35:33.357000" level="INFO">${rc} = 0</msg>
<msg time="2024-05-14T07:35:33.357000" level="INFO">${output} = 200</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-05-14T07:35:33.346000" elapsed="0.011000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-14T07:35:33.358000" level="INFO">200</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-14T07:35:33.357000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-05-14T07:35:33.358000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-05-14T07:35:33.358000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-05-14T07:35:33.346000" elapsed="0.012000"/>
</kw>
<msg time="2024-05-14T07:35:33.358000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-05-14T07:35:33.346000" elapsed="0.012000"/>
</kw>
<msg time="2024-05-14T07:35:33.359000" level="INFO">${result} = 200</msg>
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<status status="PASS" start="2024-05-14T07:35:33.345000" elapsed="0.014000"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" start="2024-05-14T07:35:33.359000" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-05-14T07:35:33.359000" elapsed="0.000000"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-05-14T07:35:33.359000" elapsed="0.001000"/>
</kw>
<status status="PASS" start="2024-05-14T07:35:33.359000" elapsed="0.001000"/>
</branch>
<status status="PASS" start="2024-05-14T07:35:33.359000" elapsed="0.001000"/>
</if>
<arg>${ADMIN_API_ENDPOINT_URL}</arg>
<arg>403</arg>
<status status="PASS" start="2024-05-14T07:35:33.345000" elapsed="0.015000"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" owner="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-05-14T07:35:33.360000" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-05-14T07:35:33.360000" elapsed="0.001000"/>
</kw>
<kw name="Check http return code">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-05-14T07:35:33.363000" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg time="2024-05-14T07:35:33.374000" level="INFO">${rc} = 0</msg>
<msg time="2024-05-14T07:35:33.374000" level="INFO">${output} = 200</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-05-14T07:35:33.362000" elapsed="0.012000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-14T07:35:33.374000" level="INFO">200</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-14T07:35:33.374000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-05-14T07:35:33.375000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-05-14T07:35:33.374000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-05-14T07:35:33.362000" elapsed="0.013000"/>
</kw>
<msg time="2024-05-14T07:35:33.375000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-05-14T07:35:33.361000" elapsed="0.014000"/>
</kw>
<msg time="2024-05-14T07:35:33.375000" level="INFO">${result} = 200</msg>
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<status status="PASS" start="2024-05-14T07:35:33.361000" elapsed="0.014000"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" start="2024-05-14T07:35:33.376000" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-05-14T07:35:33.375000" elapsed="0.001000"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-05-14T07:35:33.376000" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-05-14T07:35:33.376000" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-05-14T07:35:33.375000" elapsed="0.001000"/>
</if>
<arg>${ADMIN_API_ENDPOINT_URL}</arg>
<arg>200</arg>
<status status="PASS" start="2024-05-14T07:35:33.361000" elapsed="0.015000"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" owner="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-05-14T07:35:33.377000" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-05-14T07:35:33.376000" elapsed="0.001000"/>
</kw>
<kw name="Check http return code">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-05-14T07:35:33.380000" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg time="2024-05-14T07:35:33.390000" level="INFO">${rc} = 0</msg>
<msg time="2024-05-14T07:35:33.390000" level="INFO">${output} = 200</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-05-14T07:35:33.378000" elapsed="0.012000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-14T07:35:33.390000" level="INFO">200</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-14T07:35:33.390000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-05-14T07:35:33.391000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-05-14T07:35:33.391000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-05-14T07:35:33.378000" elapsed="0.013000"/>
</kw>
<msg time="2024-05-14T07:35:33.391000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-05-14T07:35:33.378000" elapsed="0.013000"/>
</kw>
<msg time="2024-05-14T07:35:33.392000" level="INFO">${result} = 200</msg>
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<status status="PASS" start="2024-05-14T07:35:33.378000" elapsed="0.014000"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" start="2024-05-14T07:35:33.392000" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-05-14T07:35:33.392000" elapsed="0.000000"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-05-14T07:35:33.392000" elapsed="0.001000"/>
</kw>
<status status="PASS" start="2024-05-14T07:35:33.392000" elapsed="0.001000"/>
</branch>
<status status="PASS" start="2024-05-14T07:35:33.392000" elapsed="0.001000"/>
</if>
<arg>${ADMIN_API_ENDPOINT_URL}</arg>
<arg>200</arg>
<status status="PASS" start="2024-05-14T07:35:33.377000" elapsed="0.016000"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" start="2024-05-14T07:35:33.322000" elapsed="0.071000"/>
</test>
<test id="s1-s3-s1-t6" name="Check unhealthy, (admin) api access" line="120">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-05-14T07:35:33.396000" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg time="2024-05-14T07:35:33.398000" level="INFO">${rc} = 0</msg>
<msg time="2024-05-14T07:35:33.398000" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-05-14T07:35:33.395000" elapsed="0.004000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-14T07:35:33.399000" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-14T07:35:33.399000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-05-14T07:35:33.400000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-05-14T07:35:33.399000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-05-14T07:35:33.394000" elapsed="0.006000"/>
</kw>
<msg time="2024-05-14T07:35:33.400000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-05-14T07:35:33.394000" elapsed="0.006000"/>
</kw>
<arg>kdestroy</arg>
<status status="PASS" start="2024-05-14T07:35:33.394000" elapsed="0.006000"/>
</kw>
<kw name="Check http return code">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-05-14T07:35:33.403000" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers/unhealthy 2&gt;&amp;1'.</msg>
<msg time="2024-05-14T07:35:33.429000" level="INFO">${rc} = 0</msg>
<msg time="2024-05-14T07:35:33.429000" level="INFO">${output} = 200</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-05-14T07:35:33.402000" elapsed="0.027000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-14T07:35:33.430000" level="INFO">200</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-14T07:35:33.429000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-05-14T07:35:33.430000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-05-14T07:35:33.430000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-05-14T07:35:33.401000" elapsed="0.030000"/>
</kw>
<msg time="2024-05-14T07:35:33.431000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-05-14T07:35:33.401000" elapsed="0.030000"/>
</kw>
<msg time="2024-05-14T07:35:33.431000" level="INFO">${result} = 200</msg>
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<status status="PASS" start="2024-05-14T07:35:33.401000" elapsed="0.030000"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" start="2024-05-14T07:35:33.431000" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-05-14T07:35:33.431000" elapsed="0.001000"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-05-14T07:35:33.432000" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-05-14T07:35:33.432000" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-05-14T07:35:33.431000" elapsed="0.001000"/>
</if>
<arg>${UNHEALTHY_ENDPOINT_URL}</arg>
<arg>401</arg>
<status status="PASS" start="2024-05-14T07:35:33.400000" elapsed="0.032000"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" owner="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-05-14T07:35:33.433000" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-05-14T07:35:33.432000" elapsed="0.001000"/>
</kw>
<kw name="Check http return code">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-05-14T07:35:33.436000" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers/unhealthy 2&gt;&amp;1'.</msg>
<msg time="2024-05-14T07:35:33.449000" level="INFO">${rc} = 0</msg>
<msg time="2024-05-14T07:35:33.449000" level="INFO">${output} = 200</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-05-14T07:35:33.435000" elapsed="0.014000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-14T07:35:33.449000" level="INFO">200</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-14T07:35:33.449000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-05-14T07:35:33.450000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-05-14T07:35:33.450000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-05-14T07:35:33.434000" elapsed="0.017000"/>
</kw>
<msg time="2024-05-14T07:35:33.451000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-05-14T07:35:33.434000" elapsed="0.017000"/>
</kw>
<msg time="2024-05-14T07:35:33.451000" level="INFO">${result} = 200</msg>
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<status status="PASS" start="2024-05-14T07:35:33.434000" elapsed="0.017000"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" start="2024-05-14T07:35:33.451000" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-05-14T07:35:33.451000" elapsed="0.000000"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-05-14T07:35:33.452000" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-05-14T07:35:33.452000" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-05-14T07:35:33.451000" elapsed="0.001000"/>
</if>
<arg>${UNHEALTHY_ENDPOINT_URL}</arg>
<arg>403</arg>
<status status="PASS" start="2024-05-14T07:35:33.433000" elapsed="0.019000"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" owner="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-05-14T07:35:33.453000" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-05-14T07:35:33.452000" elapsed="0.001000"/>
</kw>
<kw name="Check http return code">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-05-14T07:35:33.456000" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers/unhealthy 2&gt;&amp;1'.</msg>
<msg time="2024-05-14T07:35:33.468000" level="INFO">${rc} = 0</msg>
<msg time="2024-05-14T07:35:33.468000" level="INFO">${output} = 200</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-05-14T07:35:33.454000" elapsed="0.015000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-14T07:35:33.469000" level="INFO">200</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-14T07:35:33.469000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-05-14T07:35:33.470000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-05-14T07:35:33.470000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-05-14T07:35:33.454000" elapsed="0.016000"/>
</kw>
<msg time="2024-05-14T07:35:33.470000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-05-14T07:35:33.454000" elapsed="0.016000"/>
</kw>
<msg time="2024-05-14T07:35:33.471000" level="INFO">${result} = 200</msg>
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<status status="PASS" start="2024-05-14T07:35:33.453000" elapsed="0.018000"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" start="2024-05-14T07:35:33.471000" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-05-14T07:35:33.471000" elapsed="0.000000"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-05-14T07:35:33.471000" elapsed="0.001000"/>
</kw>
<status status="PASS" start="2024-05-14T07:35:33.471000" elapsed="0.001000"/>
</branch>
<status status="PASS" start="2024-05-14T07:35:33.471000" elapsed="0.001000"/>
</if>
<arg>${UNHEALTHY_ENDPOINT_URL}</arg>
<arg>200</arg>
<status status="PASS" start="2024-05-14T07:35:33.453000" elapsed="0.019000"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" owner="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-05-14T07:35:33.472000" elapsed="0.001000"/>
</kw>
<status status="PASS" start="2024-05-14T07:35:33.472000" elapsed="0.001000"/>
</kw>
<kw name="Check http return code">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-05-14T07:35:33.475000" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers/unhealthy 2&gt;&amp;1'.</msg>
<msg time="2024-05-14T07:35:33.488000" level="INFO">${rc} = 0</msg>
<msg time="2024-05-14T07:35:33.488000" level="INFO">${output} = 200</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-05-14T07:35:33.474000" elapsed="0.014000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-14T07:35:33.489000" level="INFO">200</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-14T07:35:33.489000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-05-14T07:35:33.490000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-05-14T07:35:33.489000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-05-14T07:35:33.474000" elapsed="0.016000"/>
</kw>
<msg time="2024-05-14T07:35:33.490000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-05-14T07:35:33.473000" elapsed="0.017000"/>
</kw>
<msg time="2024-05-14T07:35:33.490000" level="INFO">${result} = 200</msg>
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<status status="PASS" start="2024-05-14T07:35:33.473000" elapsed="0.017000"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" start="2024-05-14T07:35:33.491000" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-05-14T07:35:33.491000" elapsed="0.000000"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-05-14T07:35:33.491000" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-05-14T07:35:33.491000" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-05-14T07:35:33.490000" elapsed="0.001000"/>
</if>
<arg>${UNHEALTHY_ENDPOINT_URL}</arg>
<arg>200</arg>
<status status="PASS" start="2024-05-14T07:35:33.473000" elapsed="0.019000"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" start="2024-05-14T07:35:33.393000" elapsed="0.099000"/>
</test>
<test id="s1-s3-s1-t7" name="Check normal api access" line="133">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-05-14T07:35:33.496000" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg time="2024-05-14T07:35:33.498000" level="INFO">${rc} = 0</msg>
<msg time="2024-05-14T07:35:33.498000" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-05-14T07:35:33.494000" elapsed="0.004000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-14T07:35:33.499000" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-14T07:35:33.498000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-05-14T07:35:33.499000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-05-14T07:35:33.499000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-05-14T07:35:33.494000" elapsed="0.005000"/>
</kw>
<msg time="2024-05-14T07:35:33.500000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-05-14T07:35:33.493000" elapsed="0.007000"/>
</kw>
<arg>kdestroy</arg>
<status status="PASS" start="2024-05-14T07:35:33.493000" elapsed="0.007000"/>
</kw>
<kw name="Check http return code">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-05-14T07:35:33.503000" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/clusterState 2&gt;&amp;1'.</msg>
<msg time="2024-05-14T07:35:33.521000" level="INFO">${rc} = 0</msg>
<msg time="2024-05-14T07:35:33.521000" level="INFO">${output} = 200</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-05-14T07:35:33.501000" elapsed="0.020000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-14T07:35:33.522000" level="INFO">200</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-14T07:35:33.521000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-05-14T07:35:33.522000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-05-14T07:35:33.522000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-05-14T07:35:33.501000" elapsed="0.022000"/>
</kw>
<msg time="2024-05-14T07:35:33.523000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-05-14T07:35:33.501000" elapsed="0.022000"/>
</kw>
<msg time="2024-05-14T07:35:33.523000" level="INFO">${result} = 200</msg>
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<status status="PASS" start="2024-05-14T07:35:33.500000" elapsed="0.023000"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" start="2024-05-14T07:35:33.523000" elapsed="0.001000"/>
</kw>
<status status="NOT RUN" start="2024-05-14T07:35:33.523000" elapsed="0.001000"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-05-14T07:35:33.524000" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-05-14T07:35:33.524000" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-05-14T07:35:33.523000" elapsed="0.001000"/>
</if>
<arg>${NON_ADMIN_API_ENDPOINT_URL}</arg>
<arg>401</arg>
<status status="PASS" start="2024-05-14T07:35:33.500000" elapsed="0.024000"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" owner="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-05-14T07:35:33.525000" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-05-14T07:35:33.524000" elapsed="0.001000"/>
</kw>
<kw name="Check http return code">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-05-14T07:35:33.528000" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/clusterState 2&gt;&amp;1'.</msg>
<msg time="2024-05-14T07:35:33.551000" level="INFO">${rc} = 0</msg>
<msg time="2024-05-14T07:35:33.551000" level="INFO">${output} = 200</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-05-14T07:35:33.526000" elapsed="0.025000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-14T07:35:33.552000" level="INFO">200</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-14T07:35:33.551000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-05-14T07:35:33.553000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-05-14T07:35:33.552000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-05-14T07:35:33.526000" elapsed="0.027000"/>
</kw>
<msg time="2024-05-14T07:35:33.553000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-05-14T07:35:33.526000" elapsed="0.028000"/>
</kw>
<msg time="2024-05-14T07:35:33.554000" level="INFO">${result} = 200</msg>
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<status status="PASS" start="2024-05-14T07:35:33.526000" elapsed="0.028000"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" start="2024-05-14T07:35:33.554000" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-05-14T07:35:33.554000" elapsed="0.000000"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-05-14T07:35:33.554000" elapsed="0.001000"/>
</kw>
<status status="PASS" start="2024-05-14T07:35:33.554000" elapsed="0.001000"/>
</branch>
<status status="PASS" start="2024-05-14T07:35:33.554000" elapsed="0.001000"/>
</if>
<arg>${NON_ADMIN_API_ENDPOINT_URL}</arg>
<arg>200</arg>
<status status="PASS" start="2024-05-14T07:35:33.525000" elapsed="0.030000"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" start="2024-05-14T07:35:33.492000" elapsed="0.063000"/>
</test>
<doc>Smoke test to start cluster with docker-compose environments.</doc>
<status status="PASS" start="2024-05-14T07:35:10.299000" elapsed="23.257000"/>
</suite>
<suite id="s1-s3-s2" name="Recon-Nssummary" source="/opt/hadoop/smoketest/recon/recon-nssummary.robot">
<test id="s1-s3-s2-t1" name="Check volume creation" line="99">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-05-14T07:35:33.566000" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg time="2024-05-14T07:35:33.569000" level="INFO">${rc} = 0</msg>
<msg time="2024-05-14T07:35:33.569000" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-05-14T07:35:33.565000" elapsed="0.004000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-14T07:35:33.569000" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-14T07:35:33.569000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-05-14T07:35:33.570000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-05-14T07:35:33.570000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-05-14T07:35:33.565000" elapsed="0.005000"/>
</kw>
<msg time="2024-05-14T07:35:33.570000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-05-14T07:35:33.564000" elapsed="0.006000"/>
</kw>
<arg>kdestroy</arg>
<status status="PASS" start="2024-05-14T07:35:33.564000" elapsed="0.006000"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" owner="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-05-14T07:35:33.571000" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-05-14T07:35:33.571000" elapsed="0.000000"/>
</kw>
<kw name="Create volume">
<kw name="Generate Random String" owner="String">
<msg time="2024-05-14T07:35:33.572000" level="INFO">${random} = hzsrf</msg>
<var>${random}</var>
<arg>5</arg>
<arg>[LOWER]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<status status="PASS" start="2024-05-14T07:35:33.572000" elapsed="0.000000"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2024-05-14T07:35:33.573000" level="INFO">${VOLUME} = vol-hzsrf</msg>
<arg>${VOLUME}</arg>
<arg>vol-${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2024-05-14T07:35:33.572000" elapsed="0.001000"/>
</kw>
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-05-14T07:35:33.575000" level="INFO">Running command 'ozone sh volume create /vol-hzsrf 2&gt;&amp;1'.</msg>
<msg time="2024-05-14T07:35:36.528000" level="INFO">${rc} = 0</msg>
<msg time="2024-05-14T07:35:36.528000" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-05-14T07:35:33.574000" elapsed="2.954000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-14T07:35:36.529000" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-14T07:35:36.529000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-05-14T07:35:36.530000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-05-14T07:35:36.529000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-05-14T07:35:33.573000" elapsed="2.957000"/>
</kw>
<msg time="2024-05-14T07:35:36.530000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-05-14T07:35:33.573000" elapsed="2.957000"/>
</kw>
<msg time="2024-05-14T07:35:36.530000" level="INFO">${result} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<var>${result}</var>
<arg>ozone sh volume create /${VOLUME}</arg>
<status status="PASS" start="2024-05-14T07:35:33.573000" elapsed="2.957000"/>
</kw>
<kw name="Should Not Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" start="2024-05-14T07:35:36.530000" elapsed="0.001000"/>
</kw>
<status status="PASS" start="2024-05-14T07:35:33.571000" elapsed="2.960000"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" start="2024-05-14T07:35:33.563000" elapsed="2.968000"/>
</test>
<test id="s1-s3-s2-t2" name="Check bucket creation" line="104">
<kw name="Create bucket">
<kw name="Generate Random String" owner="String">
<msg time="2024-05-14T07:35:36.533000" level="INFO">${random} = yteot</msg>
<var>${random}</var>
<arg>5</arg>
<arg>[LOWER]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<status status="PASS" start="2024-05-14T07:35:36.532000" elapsed="0.001000"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2024-05-14T07:35:36.533000" level="INFO">${BUCKET} = buc-yteot</msg>
<arg>${BUCKET}</arg>
<arg>buc-${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2024-05-14T07:35:36.533000" elapsed="0.000000"/>
</kw>
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-05-14T07:35:36.536000" level="INFO">Running command 'ozone sh bucket create -l FILE_SYSTEM_OPTIMIZED /vol-hzsrf/buc-yteot 2&gt;&amp;1'.</msg>
<msg time="2024-05-14T07:35:39.357000" level="INFO">${rc} = 0</msg>
<msg time="2024-05-14T07:35:39.357000" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-05-14T07:35:36.534000" elapsed="2.823000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-14T07:35:39.358000" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-14T07:35:39.357000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-05-14T07:35:39.358000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-05-14T07:35:39.358000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-05-14T07:35:36.534000" elapsed="2.824000"/>
</kw>
<msg time="2024-05-14T07:35:39.358000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-05-14T07:35:36.534000" elapsed="2.825000"/>
</kw>
<msg time="2024-05-14T07:35:39.359000" level="INFO">${result} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<var>${result}</var>
<arg>ozone sh bucket create -l ${BUCKET_LAYOUT} /${VOLUME}/${BUCKET}</arg>
<status status="PASS" start="2024-05-14T07:35:36.533000" elapsed="2.826000"/>
</kw>
<kw name="Should Not Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" start="2024-05-14T07:35:39.359000" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-05-14T07:35:36.532000" elapsed="2.827000"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" start="2024-05-14T07:35:36.531000" elapsed="2.828000"/>
</test>
<test id="s1-s3-s2-t3" name="Check keys creation" line="107">
<kw name="Create keys">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-05-14T07:35:39.364000" level="INFO">Running command 'ozone sh key put /vol-hzsrf/buc-yteot/file1 README.md 2&gt;&amp;1'.</msg>
<msg time="2024-05-14T07:35:43.984000" level="INFO">${rc} = 0</msg>
<msg time="2024-05-14T07:35:43.984000" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-05-14T07:35:39.362000" elapsed="4.622000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-14T07:35:43.985000" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-14T07:35:43.985000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-05-14T07:35:43.986000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-05-14T07:35:43.986000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-05-14T07:35:39.362000" elapsed="4.624000"/>
</kw>
<msg time="2024-05-14T07:35:43.986000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-05-14T07:35:39.361000" elapsed="4.625000"/>
</kw>
<msg time="2024-05-14T07:35:43.986000" level="INFO">${result} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<var>${result}</var>
<arg>ozone sh key put /${VOLUME}/${BUCKET}/file1 README.md</arg>
<status status="PASS" start="2024-05-14T07:35:39.361000" elapsed="4.625000"/>
</kw>
<kw name="Should Not Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" start="2024-05-14T07:35:43.987000" elapsed="0.000000"/>
</kw>
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-05-14T07:35:43.990000" level="INFO">Running command 'ozone sh key put /vol-hzsrf/buc-yteot/dir1/dir2/file2 HISTORY.md 2&gt;&amp;1'.</msg>
<msg time="2024-05-14T07:35:48.482000" level="INFO">${rc} = 0</msg>
<msg time="2024-05-14T07:35:48.482000" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-05-14T07:35:43.988000" elapsed="4.495000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-14T07:35:48.483000" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-14T07:35:48.483000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-05-14T07:35:48.484000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-05-14T07:35:48.484000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-05-14T07:35:43.988000" elapsed="4.496000"/>
</kw>
<msg time="2024-05-14T07:35:48.484000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-05-14T07:35:43.987000" elapsed="4.497000"/>
</kw>
<msg time="2024-05-14T07:35:48.485000" level="INFO">${result} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<var>${result}</var>
<arg>ozone sh key put /${VOLUME}/${BUCKET}/dir1/dir2/file2 HISTORY.md</arg>
<status status="PASS" start="2024-05-14T07:35:43.987000" elapsed="4.498000"/>
</kw>
<kw name="Should Not Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" start="2024-05-14T07:35:48.485000" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-05-14T07:35:39.361000" elapsed="9.124000"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" start="2024-05-14T07:35:39.360000" elapsed="9.125000"/>
</test>
<test id="s1-s3-s2-t4" name="Check Summary api access" line="110">
<kw name="Check Access">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-05-14T07:35:48.489000" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg time="2024-05-14T07:35:48.492000" level="INFO">${rc} = 0</msg>
<msg time="2024-05-14T07:35:48.492000" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-05-14T07:35:48.488000" elapsed="0.004000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-14T07:35:48.492000" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-14T07:35:48.492000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-05-14T07:35:48.493000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-05-14T07:35:48.493000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-05-14T07:35:48.488000" elapsed="0.005000"/>
</kw>
<msg time="2024-05-14T07:35:48.493000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-05-14T07:35:48.487000" elapsed="0.006000"/>
</kw>
<arg>kdestroy</arg>
<status status="PASS" start="2024-05-14T07:35:48.487000" elapsed="0.006000"/>
</kw>
<kw name="Check http return code">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-05-14T07:35:48.496000" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg time="2024-05-14T07:35:48.526000" level="INFO">${rc} = 0</msg>
<msg time="2024-05-14T07:35:48.526000" level="INFO">${output} = 200</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-05-14T07:35:48.495000" elapsed="0.031000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-14T07:35:48.527000" level="INFO">200</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-14T07:35:48.526000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-05-14T07:35:48.527000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-05-14T07:35:48.527000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-05-14T07:35:48.495000" elapsed="0.032000"/>
</kw>
<msg time="2024-05-14T07:35:48.527000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-05-14T07:35:48.494000" elapsed="0.034000"/>
</kw>
<msg time="2024-05-14T07:35:48.528000" level="INFO">${result} = 200</msg>
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<status status="PASS" start="2024-05-14T07:35:48.494000" elapsed="0.034000"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" start="2024-05-14T07:35:48.528000" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-05-14T07:35:48.528000" elapsed="0.000000"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-05-14T07:35:48.528000" elapsed="0.001000"/>
</kw>
<status status="PASS" start="2024-05-14T07:35:48.528000" elapsed="0.001000"/>
</branch>
<status status="PASS" start="2024-05-14T07:35:48.528000" elapsed="0.001000"/>
</if>
<arg>${url}</arg>
<arg>401</arg>
<status status="PASS" start="2024-05-14T07:35:48.494000" elapsed="0.035000"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" owner="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-05-14T07:35:48.529000" elapsed="0.001000"/>
</kw>
<status status="PASS" start="2024-05-14T07:35:48.529000" elapsed="0.001000"/>
</kw>
<kw name="Check http return code">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-05-14T07:35:48.533000" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg time="2024-05-14T07:35:48.546000" level="INFO">${rc} = 0</msg>
<msg time="2024-05-14T07:35:48.546000" level="INFO">${output} = 200</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-05-14T07:35:48.532000" elapsed="0.014000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-14T07:35:48.547000" level="INFO">200</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-14T07:35:48.546000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-05-14T07:35:48.547000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-05-14T07:35:48.547000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-05-14T07:35:48.532000" elapsed="0.015000"/>
</kw>
<msg time="2024-05-14T07:35:48.547000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-05-14T07:35:48.531000" elapsed="0.017000"/>
</kw>
<msg time="2024-05-14T07:35:48.548000" level="INFO">${result} = 200</msg>
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<status status="PASS" start="2024-05-14T07:35:48.531000" elapsed="0.017000"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" start="2024-05-14T07:35:48.548000" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-05-14T07:35:48.548000" elapsed="0.000000"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-05-14T07:35:48.548000" elapsed="0.001000"/>
</kw>
<status status="PASS" start="2024-05-14T07:35:48.548000" elapsed="0.001000"/>
</branch>
<status status="PASS" start="2024-05-14T07:35:48.548000" elapsed="0.001000"/>
</if>
<arg>${url}</arg>
<arg>403</arg>
<status status="PASS" start="2024-05-14T07:35:48.531000" elapsed="0.018000"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" owner="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-05-14T07:35:48.549000" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-05-14T07:35:48.549000" elapsed="0.001000"/>
</kw>
<kw name="Check http return code">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-05-14T07:35:48.553000" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg time="2024-05-14T07:35:48.565000" level="INFO">${rc} = 0</msg>
<msg time="2024-05-14T07:35:48.565000" level="INFO">${output} = 200</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-05-14T07:35:48.551000" elapsed="0.014000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-14T07:35:48.566000" level="INFO">200</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-14T07:35:48.566000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-05-14T07:35:48.567000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-05-14T07:35:48.566000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-05-14T07:35:48.551000" elapsed="0.016000"/>
</kw>
<msg time="2024-05-14T07:35:48.567000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-05-14T07:35:48.550000" elapsed="0.017000"/>
</kw>
<msg time="2024-05-14T07:35:48.567000" level="INFO">${result} = 200</msg>
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<status status="PASS" start="2024-05-14T07:35:48.550000" elapsed="0.017000"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" start="2024-05-14T07:35:48.568000" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-05-14T07:35:48.567000" elapsed="0.001000"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-05-14T07:35:48.568000" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-05-14T07:35:48.568000" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-05-14T07:35:48.567000" elapsed="0.001000"/>
</if>
<arg>${url}</arg>
<arg>200</arg>
<status status="PASS" start="2024-05-14T07:35:48.550000" elapsed="0.018000"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" owner="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-05-14T07:35:48.569000" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-05-14T07:35:48.569000" elapsed="0.000000"/>
</kw>
<kw name="Check http return code">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-05-14T07:35:48.582000" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg time="2024-05-14T07:35:48.584000" level="INFO">${rc} = 0</msg>
<msg time="2024-05-14T07:35:48.585000" level="INFO">${output} = 200</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-05-14T07:35:48.571000" elapsed="0.014000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-14T07:35:48.585000" level="INFO">200</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-14T07:35:48.585000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-05-14T07:35:48.586000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-05-14T07:35:48.585000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-05-14T07:35:48.570000" elapsed="0.016000"/>
</kw>
<msg time="2024-05-14T07:35:48.586000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-05-14T07:35:48.570000" elapsed="0.016000"/>
</kw>
<msg time="2024-05-14T07:35:48.586000" level="INFO">${result} = 200</msg>
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<status status="PASS" start="2024-05-14T07:35:48.570000" elapsed="0.016000"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" start="2024-05-14T07:35:48.586000" elapsed="0.001000"/>
</kw>
<status status="NOT RUN" start="2024-05-14T07:35:48.586000" elapsed="0.001000"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-05-14T07:35:48.587000" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-05-14T07:35:48.587000" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-05-14T07:35:48.586000" elapsed="0.001000"/>
</if>
<arg>${url}</arg>
<arg>200</arg>
<status status="PASS" start="2024-05-14T07:35:48.569000" elapsed="0.018000"/>
</kw>
<arg>${SUMMARY_URL}?path=/</arg>
<status status="PASS" start="2024-05-14T07:35:48.486000" elapsed="0.101000"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" start="2024-05-14T07:35:48.486000" elapsed="0.101000"/>
</test>
<test id="s1-s3-s2-t5" name="Check Disk Usage api access" line="113">
<kw name="Check Access">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-05-14T07:35:48.591000" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg time="2024-05-14T07:35:48.593000" level="INFO">${rc} = 0</msg>
<msg time="2024-05-14T07:35:48.593000" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-05-14T07:35:48.590000" elapsed="0.003000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-14T07:35:48.594000" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-14T07:35:48.594000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-05-14T07:35:48.594000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-05-14T07:35:48.594000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-05-14T07:35:48.589000" elapsed="0.006000"/>
</kw>
<msg time="2024-05-14T07:35:48.595000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-05-14T07:35:48.589000" elapsed="0.006000"/>
</kw>
<arg>kdestroy</arg>
<status status="PASS" start="2024-05-14T07:35:48.589000" elapsed="0.006000"/>
</kw>
<kw name="Check http return code">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-05-14T07:35:48.598000" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/du?path=/ 2&gt;&amp;1'.</msg>
<msg time="2024-05-14T07:35:48.619000" level="INFO">${rc} = 0</msg>
<msg time="2024-05-14T07:35:48.619000" level="INFO">${output} = 200</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-05-14T07:35:48.596000" elapsed="0.023000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-14T07:35:48.620000" level="INFO">200</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-14T07:35:48.619000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-05-14T07:35:48.620000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-05-14T07:35:48.620000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-05-14T07:35:48.596000" elapsed="0.024000"/>
</kw>
<msg time="2024-05-14T07:35:48.620000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-05-14T07:35:48.596000" elapsed="0.025000"/>
</kw>
<msg time="2024-05-14T07:35:48.621000" level="INFO">${result} = 200</msg>
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<status status="PASS" start="2024-05-14T07:35:48.595000" elapsed="0.026000"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" start="2024-05-14T07:35:48.621000" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-05-14T07:35:48.621000" elapsed="0.000000"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-05-14T07:35:48.621000" elapsed="0.001000"/>
</kw>
<status status="PASS" start="2024-05-14T07:35:48.621000" elapsed="0.001000"/>
</branch>
<status status="PASS" start="2024-05-14T07:35:48.621000" elapsed="0.001000"/>
</if>
<arg>${url}</arg>
<arg>401</arg>
<status status="PASS" start="2024-05-14T07:35:48.595000" elapsed="0.027000"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" owner="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-05-14T07:35:48.622000" elapsed="0.001000"/>
</kw>
<status status="PASS" start="2024-05-14T07:35:48.622000" elapsed="0.001000"/>
</kw>
<kw name="Check http return code">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-05-14T07:35:48.626000" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/du?path=/ 2&gt;&amp;1'.</msg>
<msg time="2024-05-14T07:35:48.640000" level="INFO">${rc} = 0</msg>
<msg time="2024-05-14T07:35:48.640000" level="INFO">${output} = 200</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-05-14T07:35:48.624000" elapsed="0.016000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-14T07:35:48.641000" level="INFO">200</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-14T07:35:48.640000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-05-14T07:35:48.642000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-05-14T07:35:48.641000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-05-14T07:35:48.624000" elapsed="0.018000"/>
</kw>
<msg time="2024-05-14T07:35:48.642000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-05-14T07:35:48.624000" elapsed="0.018000"/>
</kw>
<msg time="2024-05-14T07:35:48.642000" level="INFO">${result} = 200</msg>
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<status status="PASS" start="2024-05-14T07:35:48.623000" elapsed="0.019000"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" start="2024-05-14T07:35:48.643000" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-05-14T07:35:48.642000" elapsed="0.001000"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-05-14T07:35:48.643000" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-05-14T07:35:48.643000" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-05-14T07:35:48.642000" elapsed="0.001000"/>
</if>
<arg>${url}</arg>
<arg>403</arg>
<status status="PASS" start="2024-05-14T07:35:48.623000" elapsed="0.020000"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" owner="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-05-14T07:35:48.644000" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-05-14T07:35:48.643000" elapsed="0.001000"/>
</kw>
<kw name="Check http return code">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-05-14T07:35:48.647000" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/du?path=/ 2&gt;&amp;1'.</msg>
<msg time="2024-05-14T07:35:48.661000" level="INFO">${rc} = 0</msg>
<msg time="2024-05-14T07:35:48.661000" level="INFO">${output} = 200</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-05-14T07:35:48.646000" elapsed="0.015000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-14T07:35:48.662000" level="INFO">200</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-14T07:35:48.661000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-05-14T07:35:48.662000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-05-14T07:35:48.662000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-05-14T07:35:48.645000" elapsed="0.018000"/>
</kw>
<msg time="2024-05-14T07:35:48.663000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-05-14T07:35:48.645000" elapsed="0.018000"/>
</kw>
<msg time="2024-05-14T07:35:48.663000" level="INFO">${result} = 200</msg>
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<status status="PASS" start="2024-05-14T07:35:48.645000" elapsed="0.018000"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" start="2024-05-14T07:35:48.664000" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-05-14T07:35:48.663000" elapsed="0.001000"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-05-14T07:35:48.664000" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-05-14T07:35:48.664000" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-05-14T07:35:48.663000" elapsed="0.001000"/>
</if>
<arg>${url}</arg>
<arg>200</arg>
<status status="PASS" start="2024-05-14T07:35:48.644000" elapsed="0.020000"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" owner="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-05-14T07:35:48.665000" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-05-14T07:35:48.664000" elapsed="0.001000"/>
</kw>
<kw name="Check http return code">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-05-14T07:35:48.668000" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/du?path=/ 2&gt;&amp;1'.</msg>
<msg time="2024-05-14T07:35:48.681000" level="INFO">${rc} = 0</msg>
<msg time="2024-05-14T07:35:48.681000" level="INFO">${output} = 200</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-05-14T07:35:48.667000" elapsed="0.014000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-14T07:35:48.682000" level="INFO">200</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-14T07:35:48.682000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-05-14T07:35:48.683000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-05-14T07:35:48.682000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-05-14T07:35:48.666000" elapsed="0.017000"/>
</kw>
<msg time="2024-05-14T07:35:48.683000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-05-14T07:35:48.666000" elapsed="0.017000"/>
</kw>
<msg time="2024-05-14T07:35:48.683000" level="INFO">${result} = 200</msg>
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<status status="PASS" start="2024-05-14T07:35:48.666000" elapsed="0.017000"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" start="2024-05-14T07:35:48.684000" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-05-14T07:35:48.683000" elapsed="0.001000"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-05-14T07:35:48.684000" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-05-14T07:35:48.684000" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-05-14T07:35:48.683000" elapsed="0.001000"/>
</if>
<arg>${url}</arg>
<arg>200</arg>
<status status="PASS" start="2024-05-14T07:35:48.665000" elapsed="0.019000"/>
</kw>
<arg>${DISK_USAGE_URL}?path=/</arg>
<status status="PASS" start="2024-05-14T07:35:48.588000" elapsed="0.096000"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" start="2024-05-14T07:35:48.588000" elapsed="0.097000"/>
</test>
<test id="s1-s3-s2-t6" name="Check Quota Usage api access" line="116">
<kw name="Check Access">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-05-14T07:35:48.688000" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg time="2024-05-14T07:35:48.690000" level="INFO">${rc} = 0</msg>
<msg time="2024-05-14T07:35:48.690000" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-05-14T07:35:48.687000" elapsed="0.003000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-14T07:35:48.691000" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-14T07:35:48.691000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-05-14T07:35:48.692000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-05-14T07:35:48.691000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-05-14T07:35:48.687000" elapsed="0.005000"/>
</kw>
<msg time="2024-05-14T07:35:48.692000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-05-14T07:35:48.686000" elapsed="0.006000"/>
</kw>
<arg>kdestroy</arg>
<status status="PASS" start="2024-05-14T07:35:48.686000" elapsed="0.006000"/>
</kw>
<kw name="Check http return code">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-05-14T07:35:48.695000" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/quota?path=/ 2&gt;&amp;1'.</msg>
<msg time="2024-05-14T07:35:48.715000" level="INFO">${rc} = 0</msg>
<msg time="2024-05-14T07:35:48.715000" level="INFO">${output} = 200</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-05-14T07:35:48.694000" elapsed="0.021000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-14T07:35:48.716000" level="INFO">200</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-14T07:35:48.716000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-05-14T07:35:48.717000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-05-14T07:35:48.716000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-05-14T07:35:48.693000" elapsed="0.024000"/>
</kw>
<msg time="2024-05-14T07:35:48.717000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-05-14T07:35:48.693000" elapsed="0.024000"/>
</kw>
<msg time="2024-05-14T07:35:48.717000" level="INFO">${result} = 200</msg>
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<status status="PASS" start="2024-05-14T07:35:48.693000" elapsed="0.024000"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" start="2024-05-14T07:35:48.718000" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-05-14T07:35:48.717000" elapsed="0.001000"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-05-14T07:35:48.718000" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-05-14T07:35:48.718000" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-05-14T07:35:48.717000" elapsed="0.001000"/>
</if>
<arg>${url}</arg>
<arg>401</arg>
<status status="PASS" start="2024-05-14T07:35:48.692000" elapsed="0.026000"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" owner="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-05-14T07:35:48.719000" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-05-14T07:35:48.719000" elapsed="0.000000"/>
</kw>
<kw name="Check http return code">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-05-14T07:35:48.722000" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/quota?path=/ 2&gt;&amp;1'.</msg>
<msg time="2024-05-14T07:35:48.738000" level="INFO">${rc} = 0</msg>
<msg time="2024-05-14T07:35:48.738000" level="INFO">${output} = 200</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-05-14T07:35:48.721000" elapsed="0.017000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-14T07:35:48.739000" level="INFO">200</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-14T07:35:48.738000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-05-14T07:35:48.739000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-05-14T07:35:48.739000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-05-14T07:35:48.720000" elapsed="0.019000"/>
</kw>
<msg time="2024-05-14T07:35:48.739000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-05-14T07:35:48.720000" elapsed="0.019000"/>
</kw>
<msg time="2024-05-14T07:35:48.740000" level="INFO">${result} = 200</msg>
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<status status="PASS" start="2024-05-14T07:35:48.720000" elapsed="0.020000"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" start="2024-05-14T07:35:48.740000" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-05-14T07:35:48.740000" elapsed="0.000000"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-05-14T07:35:48.740000" elapsed="0.001000"/>
</kw>
<status status="PASS" start="2024-05-14T07:35:48.740000" elapsed="0.001000"/>
</branch>
<status status="PASS" start="2024-05-14T07:35:48.740000" elapsed="0.001000"/>
</if>
<arg>${url}</arg>
<arg>403</arg>
<status status="PASS" start="2024-05-14T07:35:48.719000" elapsed="0.022000"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" owner="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-05-14T07:35:48.741000" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-05-14T07:35:48.741000" elapsed="0.001000"/>
</kw>
<kw name="Check http return code">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-05-14T07:35:48.744000" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/quota?path=/ 2&gt;&amp;1'.</msg>
<msg time="2024-05-14T07:35:48.762000" level="INFO">${rc} = 0</msg>
<msg time="2024-05-14T07:35:48.762000" level="INFO">${output} = 200</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-05-14T07:35:48.743000" elapsed="0.019000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-14T07:35:48.763000" level="INFO">200</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-14T07:35:48.762000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-05-14T07:35:48.763000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-05-14T07:35:48.763000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-05-14T07:35:48.743000" elapsed="0.021000"/>
</kw>
<msg time="2024-05-14T07:35:48.764000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-05-14T07:35:48.742000" elapsed="0.022000"/>
</kw>
<msg time="2024-05-14T07:35:48.764000" level="INFO">${result} = 200</msg>
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<status status="PASS" start="2024-05-14T07:35:48.742000" elapsed="0.022000"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" start="2024-05-14T07:35:48.764000" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-05-14T07:35:48.764000" elapsed="0.001000"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-05-14T07:35:48.765000" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-05-14T07:35:48.765000" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-05-14T07:35:48.764000" elapsed="0.001000"/>
</if>
<arg>${url}</arg>
<arg>200</arg>
<status status="PASS" start="2024-05-14T07:35:48.742000" elapsed="0.023000"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" owner="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-05-14T07:35:48.766000" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-05-14T07:35:48.765000" elapsed="0.001000"/>
</kw>
<kw name="Check http return code">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-05-14T07:35:48.769000" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/quota?path=/ 2&gt;&amp;1'.</msg>
<msg time="2024-05-14T07:35:48.785000" level="INFO">${rc} = 0</msg>
<msg time="2024-05-14T07:35:48.785000" level="INFO">${output} = 200</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-05-14T07:35:48.768000" elapsed="0.017000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-14T07:35:48.786000" level="INFO">200</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-14T07:35:48.785000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-05-14T07:35:48.786000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-05-14T07:35:48.786000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-05-14T07:35:48.767000" elapsed="0.020000"/>
</kw>
<msg time="2024-05-14T07:35:48.787000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-05-14T07:35:48.767000" elapsed="0.020000"/>
</kw>
<msg time="2024-05-14T07:35:48.787000" level="INFO">${result} = 200</msg>
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<status status="PASS" start="2024-05-14T07:35:48.767000" elapsed="0.020000"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" start="2024-05-14T07:35:48.787000" elapsed="0.001000"/>
</kw>
<status status="NOT RUN" start="2024-05-14T07:35:48.787000" elapsed="0.001000"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-05-14T07:35:48.788000" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-05-14T07:35:48.788000" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-05-14T07:35:48.787000" elapsed="0.001000"/>
</if>
<arg>${url}</arg>
<arg>200</arg>
<status status="PASS" start="2024-05-14T07:35:48.766000" elapsed="0.022000"/>
</kw>
<arg>${QUOTA_USAGE_URL}?path=/</arg>
<status status="PASS" start="2024-05-14T07:35:48.686000" elapsed="0.102000"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" start="2024-05-14T07:35:48.685000" elapsed="0.103000"/>
</test>
<test id="s1-s3-s2-t7" name="Check File Size Distribution api access" line="119">
<kw name="Check Access">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-05-14T07:35:48.792000" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg time="2024-05-14T07:35:48.795000" level="INFO">${rc} = 0</msg>
<msg time="2024-05-14T07:35:48.795000" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-05-14T07:35:48.791000" elapsed="0.004000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-14T07:35:48.795000" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-14T07:35:48.795000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-05-14T07:35:48.796000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-05-14T07:35:48.796000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-05-14T07:35:48.791000" elapsed="0.005000"/>
</kw>
<msg time="2024-05-14T07:35:48.796000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-05-14T07:35:48.790000" elapsed="0.006000"/>
</kw>
<arg>kdestroy</arg>
<status status="PASS" start="2024-05-14T07:35:48.790000" elapsed="0.006000"/>
</kw>
<kw name="Check http return code">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-05-14T07:35:48.799000" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg time="2024-05-14T07:35:48.815000" level="INFO">${rc} = 0</msg>
<msg time="2024-05-14T07:35:48.815000" level="INFO">${output} = 200</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-05-14T07:35:48.798000" elapsed="0.017000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-14T07:35:48.815000" level="INFO">200</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-14T07:35:48.815000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-05-14T07:35:48.816000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-05-14T07:35:48.816000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-05-14T07:35:48.798000" elapsed="0.018000"/>
</kw>
<msg time="2024-05-14T07:35:48.816000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-05-14T07:35:48.797000" elapsed="0.019000"/>
</kw>
<msg time="2024-05-14T07:35:48.817000" level="INFO">${result} = 200</msg>
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<status status="PASS" start="2024-05-14T07:35:48.797000" elapsed="0.020000"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" start="2024-05-14T07:35:48.817000" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-05-14T07:35:48.817000" elapsed="0.000000"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-05-14T07:35:48.817000" elapsed="0.001000"/>
</kw>
<status status="PASS" start="2024-05-14T07:35:48.817000" elapsed="0.001000"/>
</branch>
<status status="PASS" start="2024-05-14T07:35:48.817000" elapsed="0.001000"/>
</if>
<arg>${url}</arg>
<arg>401</arg>
<status status="PASS" start="2024-05-14T07:35:48.797000" elapsed="0.021000"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" owner="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-05-14T07:35:48.818000" elapsed="0.001000"/>
</kw>
<status status="PASS" start="2024-05-14T07:35:48.818000" elapsed="0.001000"/>
</kw>
<kw name="Check http return code">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-05-14T07:35:48.821000" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg time="2024-05-14T07:35:48.833000" level="INFO">${rc} = 0</msg>
<msg time="2024-05-14T07:35:48.833000" level="INFO">${output} = 200</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-05-14T07:35:48.820000" elapsed="0.013000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-14T07:35:48.834000" level="INFO">200</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-14T07:35:48.833000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-05-14T07:35:48.834000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-05-14T07:35:48.834000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-05-14T07:35:48.820000" elapsed="0.015000"/>
</kw>
<msg time="2024-05-14T07:35:48.835000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-05-14T07:35:48.819000" elapsed="0.016000"/>
</kw>
<msg time="2024-05-14T07:35:48.835000" level="INFO">${result} = 200</msg>
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<status status="PASS" start="2024-05-14T07:35:48.819000" elapsed="0.016000"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" start="2024-05-14T07:35:48.835000" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-05-14T07:35:48.835000" elapsed="0.000000"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-05-14T07:35:48.836000" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-05-14T07:35:48.835000" elapsed="0.001000"/>
</branch>
<status status="PASS" start="2024-05-14T07:35:48.835000" elapsed="0.001000"/>
</if>
<arg>${url}</arg>
<arg>403</arg>
<status status="PASS" start="2024-05-14T07:35:48.819000" elapsed="0.017000"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" owner="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-05-14T07:35:48.836000" elapsed="0.001000"/>
</kw>
<status status="PASS" start="2024-05-14T07:35:48.836000" elapsed="0.001000"/>
</kw>
<kw name="Check http return code">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-05-14T07:35:48.840000" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg time="2024-05-14T07:35:48.851000" level="INFO">${rc} = 0</msg>
<msg time="2024-05-14T07:35:48.851000" level="INFO">${output} = 200</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-05-14T07:35:48.839000" elapsed="0.012000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-14T07:35:48.852000" level="INFO">200</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-14T07:35:48.852000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-05-14T07:35:48.853000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-05-14T07:35:48.852000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-05-14T07:35:48.838000" elapsed="0.015000"/>
</kw>
<msg time="2024-05-14T07:35:48.853000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-05-14T07:35:48.838000" elapsed="0.015000"/>
</kw>
<msg time="2024-05-14T07:35:48.853000" level="INFO">${result} = 200</msg>
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<status status="PASS" start="2024-05-14T07:35:48.837000" elapsed="0.016000"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" start="2024-05-14T07:35:48.854000" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-05-14T07:35:48.853000" elapsed="0.001000"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-05-14T07:35:48.854000" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-05-14T07:35:48.854000" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-05-14T07:35:48.853000" elapsed="0.001000"/>
</if>
<arg>${url}</arg>
<arg>200</arg>
<status status="PASS" start="2024-05-14T07:35:48.837000" elapsed="0.017000"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" owner="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-05-14T07:35:48.855000" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-05-14T07:35:48.854000" elapsed="0.001000"/>
</kw>
<kw name="Check http return code">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-05-14T07:35:48.858000" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg time="2024-05-14T07:35:48.869000" level="INFO">${rc} = 0</msg>
<msg time="2024-05-14T07:35:48.870000" level="INFO">${output} = 200</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-05-14T07:35:48.857000" elapsed="0.013000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-14T07:35:48.870000" level="INFO">200</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-14T07:35:48.870000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-05-14T07:35:48.871000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-05-14T07:35:48.871000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-05-14T07:35:48.856000" elapsed="0.015000"/>
</kw>
<msg time="2024-05-14T07:35:48.871000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-05-14T07:35:48.856000" elapsed="0.015000"/>
</kw>
<msg time="2024-05-14T07:35:48.871000" level="INFO">${result} = 200</msg>
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<status status="PASS" start="2024-05-14T07:35:48.856000" elapsed="0.015000"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" start="2024-05-14T07:35:48.872000" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-05-14T07:35:48.872000" elapsed="0.000000"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-05-14T07:35:48.872000" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-05-14T07:35:48.872000" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-05-14T07:35:48.871000" elapsed="0.001000"/>
</if>
<arg>${url}</arg>
<arg>200</arg>
<status status="PASS" start="2024-05-14T07:35:48.855000" elapsed="0.018000"/>
</kw>
<arg>${FILE_SIZE_DIST_URL}?path=/</arg>
<status status="PASS" start="2024-05-14T07:35:48.790000" elapsed="0.083000"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" start="2024-05-14T07:35:48.789000" elapsed="0.084000"/>
</test>
<test id="s1-s3-s2-t8" name="Check Recon Namespace Summary Root" line="122">
<kw name="Wait For Summary">
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Test Summary">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-05-14T07:35:48.878000" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg time="2024-05-14T07:35:48.889000" level="INFO">${rc} = 0</msg>
<msg time="2024-05-14T07:35:48.889000" level="INFO">${output} = {"path":"","type":"ROOT","countStats":{"numVolume":3,"numBucket":2,"numDir":1,"numKey":11},"objectInfo":{"metadata":null,"name":null,"quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"creationTi...</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-05-14T07:35:48.876000" elapsed="0.013000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-14T07:35:48.890000" level="INFO">{"path":"","type":"ROOT","countStats":{"numVolume":3,"numBucket":2,"numDir":1,"numKey":11},"objectInfo":{"metadata":null,"name":null,"quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"creationTime":0,"modificationTime":0,"acls":null},"status":"OK"}</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-14T07:35:48.890000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-05-14T07:35:48.891000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-05-14T07:35:48.890000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-05-14T07:35:48.876000" elapsed="0.015000"/>
</kw>
<msg time="2024-05-14T07:35:48.891000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-05-14T07:35:48.876000" elapsed="0.015000"/>
</kw>
<msg time="2024-05-14T07:35:48.891000" level="INFO">${result} = {"path":"","type":"ROOT","countStats":{"numVolume":3,"numBucket":2,"numDir":1,"numKey":11},"objectInfo":{"metadata":null,"name":null,"quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"creationTi...</msg>
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<status status="PASS" start="2024-05-14T07:35:48.875000" elapsed="0.016000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-05-14T07:35:48.891000" elapsed="0.001000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-05-14T07:35:48.892000" elapsed="0.000000"/>
</kw>
<arg>${url}</arg>
<arg>${expected}</arg>
<status status="PASS" start="2024-05-14T07:35:48.875000" elapsed="0.017000"/>
</kw>
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-05-14T07:35:48.874000" elapsed="0.019000"/>
</kw>
<arg>${SUMMARY_URL}?path=/</arg>
<arg>ROOT</arg>
<status status="PASS" start="2024-05-14T07:35:48.874000" elapsed="0.019000"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" start="2024-05-14T07:35:48.873000" elapsed="0.020000"/>
</test>
<test id="s1-s3-s2-t9" name="Check Recon Namespace Summary Volume" line="125">
<kw name="Wait For Summary">
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Test Summary">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-05-14T07:35:48.898000" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-hzsrf 2&gt;&amp;1'.</msg>
<msg time="2024-05-14T07:35:48.909000" level="INFO">${rc} = 0</msg>
<msg time="2024-05-14T07:35:48.909000" level="INFO">${output} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-05-14T07:35:48.896000" elapsed="0.013000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-14T07:35:48.910000" level="INFO">{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-14T07:35:48.909000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-05-14T07:35:48.910000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-05-14T07:35:48.910000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-05-14T07:35:48.896000" elapsed="0.015000"/>
</kw>
<msg time="2024-05-14T07:35:48.911000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-05-14T07:35:48.896000" elapsed="0.015000"/>
</kw>
<msg time="2024-05-14T07:35:48.911000" level="INFO">${result} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<status status="PASS" start="2024-05-14T07:35:48.895000" elapsed="0.016000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-05-14T07:35:48.911000" level="FAIL">'{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}' does not contain '"status":"OK"'</msg>
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-05-14T07:35:48.911000" elapsed="0.001000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" start="2024-05-14T07:35:48.912000" elapsed="0.000000"/>
</kw>
<arg>${url}</arg>
<arg>${expected}</arg>
<status status="FAIL" start="2024-05-14T07:35:48.895000" elapsed="0.017000"/>
</kw>
<kw name="Test Summary">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-05-14T07:35:58.916000" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-hzsrf 2&gt;&amp;1'.</msg>
<msg time="2024-05-14T07:35:58.927000" level="INFO">${rc} = 0</msg>
<msg time="2024-05-14T07:35:58.927000" level="INFO">${output} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-05-14T07:35:58.914000" elapsed="0.013000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-14T07:35:58.928000" level="INFO">{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-14T07:35:58.927000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-05-14T07:35:58.928000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-05-14T07:35:58.928000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-05-14T07:35:58.914000" elapsed="0.014000"/>
</kw>
<msg time="2024-05-14T07:35:58.928000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-05-14T07:35:58.913000" elapsed="0.016000"/>
</kw>
<msg time="2024-05-14T07:35:58.929000" level="INFO">${result} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<status status="PASS" start="2024-05-14T07:35:58.913000" elapsed="0.016000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-05-14T07:35:58.929000" level="FAIL">'{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}' does not contain '"status":"OK"'</msg>
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-05-14T07:35:58.929000" elapsed="0.000000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" start="2024-05-14T07:35:58.930000" elapsed="0.000000"/>
</kw>
<arg>${url}</arg>
<arg>${expected}</arg>
<status status="FAIL" start="2024-05-14T07:35:58.912000" elapsed="0.018000"/>
</kw>
<kw name="Test Summary">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-05-14T07:36:08.934000" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-hzsrf 2&gt;&amp;1'.</msg>
<msg time="2024-05-14T07:36:08.945000" level="INFO">${rc} = 0</msg>
<msg time="2024-05-14T07:36:08.945000" level="INFO">${output} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-05-14T07:36:08.932000" elapsed="0.013000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-14T07:36:08.946000" level="INFO">{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-14T07:36:08.945000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-05-14T07:36:08.946000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-05-14T07:36:08.946000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-05-14T07:36:08.932000" elapsed="0.015000"/>
</kw>
<msg time="2024-05-14T07:36:08.947000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-05-14T07:36:08.932000" elapsed="0.015000"/>
</kw>
<msg time="2024-05-14T07:36:08.947000" level="INFO">${result} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<status status="PASS" start="2024-05-14T07:36:08.931000" elapsed="0.016000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-05-14T07:36:08.948000" level="FAIL">'{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}' does not contain '"status":"OK"'</msg>
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-05-14T07:36:08.947000" elapsed="0.001000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" start="2024-05-14T07:36:08.948000" elapsed="0.000000"/>
</kw>
<arg>${url}</arg>
<arg>${expected}</arg>
<status status="FAIL" start="2024-05-14T07:36:08.930000" elapsed="0.018000"/>
</kw>
<kw name="Test Summary">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-05-14T07:36:18.952000" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-hzsrf 2&gt;&amp;1'.</msg>
<msg time="2024-05-14T07:36:18.971000" level="INFO">${rc} = 0</msg>
<msg time="2024-05-14T07:36:18.971000" level="INFO">${output} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-05-14T07:36:18.950000" elapsed="0.021000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-14T07:36:18.972000" level="INFO">{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-14T07:36:18.971000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-05-14T07:36:18.972000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-05-14T07:36:18.972000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-05-14T07:36:18.950000" elapsed="0.022000"/>
</kw>
<msg time="2024-05-14T07:36:18.972000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-05-14T07:36:18.949000" elapsed="0.024000"/>
</kw>
<msg time="2024-05-14T07:36:18.973000" level="INFO">${result} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<status status="PASS" start="2024-05-14T07:36:18.949000" elapsed="0.024000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-05-14T07:36:18.973000" level="FAIL">'{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}' does not contain '"status":"OK"'</msg>
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-05-14T07:36:18.973000" elapsed="0.000000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" start="2024-05-14T07:36:18.973000" elapsed="0.001000"/>
</kw>
<arg>${url}</arg>
<arg>${expected}</arg>
<status status="FAIL" start="2024-05-14T07:36:18.948000" elapsed="0.026000"/>
</kw>
<kw name="Test Summary">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-05-14T07:36:28.978000" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-hzsrf 2&gt;&amp;1'.</msg>
<msg time="2024-05-14T07:36:28.998000" level="INFO">${rc} = 0</msg>
<msg time="2024-05-14T07:36:28.998000" level="INFO">${output} = {"path":"","type":"VOLUME","countStats":{"numVolume":-1,"numBucket":1,"numDir":2,"numKey":2},"objectInfo":{"metadata":{},"name":"vol-hzsrf","quotaInBytes":-1,"quotaInNamespace":-1,"usedNamespace":1,"c...</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-05-14T07:36:28.976000" elapsed="0.022000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-14T07:36:28.999000" level="INFO">{"path":"","type":"VOLUME","countStats":{"numVolume":-1,"numBucket":1,"numDir":2,"numKey":2},"objectInfo":{"metadata":{},"name":"vol-hzsrf","quotaInBytes":-1,"quotaInNamespace":-1,"usedNamespace":1,"creationTime":1715672136429,"modificationTime":1715672136429,"acls":[{"type":"USER","name":"hadoop","scope":"ACCESS","aclList":["ALL"]},{"type":"GROUP","name":"hadoop","scope":"ACCESS","aclList":["ALL"]}],"admin":"hadoop","owner":"hadoop","volume":"vol-hzsrf"},"status":"OK"}</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-14T07:36:28.999000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-05-14T07:36:29" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-05-14T07:36:28.999000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-05-14T07:36:28.975000" elapsed="0.025000"/>
</kw>
<msg time="2024-05-14T07:36:29" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-05-14T07:36:28.975000" elapsed="0.025000"/>
</kw>
<msg time="2024-05-14T07:36:29" level="INFO">${result} = {"path":"","type":"VOLUME","countStats":{"numVolume":-1,"numBucket":1,"numDir":2,"numKey":2},"objectInfo":{"metadata":{},"name":"vol-hzsrf","quotaInBytes":-1,"quotaInNamespace":-1,"usedNamespace":1,"c...</msg>
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<status status="PASS" start="2024-05-14T07:36:28.975000" elapsed="0.025000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-05-14T07:36:29.001000" elapsed="0.000000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-05-14T07:36:29.001000" elapsed="0.000000"/>
</kw>
<arg>${url}</arg>
<arg>${expected}</arg>
<status status="PASS" start="2024-05-14T07:36:28.974000" elapsed="0.027000"/>
</kw>
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-05-14T07:35:48.894000" elapsed="40.107000"/>
</kw>
<arg>${SUMMARY_URL}?path=/${VOLUME}</arg>
<arg>VOLUME</arg>
<status status="PASS" start="2024-05-14T07:35:48.894000" elapsed="40.108000"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" start="2024-05-14T07:35:48.893000" elapsed="40.109000"/>
</test>
<test id="s1-s3-s2-t10" name="Check Recon Namespace Summary Bucket" line="128">
<kw name="Wait For Summary">
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Test Summary">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-05-14T07:36:29.008000" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-hzsrf/buc-yteot 2&gt;&amp;1'.</msg>
<msg time="2024-05-14T07:36:29.027000" level="INFO">${rc} = 0</msg>
<msg time="2024-05-14T07:36:29.027000" level="INFO">${output} = {"path":"","type":"BUCKET","countStats":{"numVolume":-1,"numBucket":-1,"numDir":2,"numKey":2},"objectInfo":{"versioningEnabled":false,"metadata":{},"name":"buc-yteot","quotaInBytes":-1,"quotaInNamespa...</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-05-14T07:36:29.006000" elapsed="0.021000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-14T07:36:29.028000" level="INFO">{"path":"","type":"BUCKET","countStats":{"numVolume":-1,"numBucket":-1,"numDir":2,"numKey":2},"objectInfo":{"versioningEnabled":false,"metadata":{},"name":"buc-yteot","quotaInBytes":-1,"quotaInNamespace":-1,"usedNamespace":4,"creationTime":1715672139292,"modificationTime":1715672139292,"acls":[{"type":"USER","name":"hadoop","scope":"ACCESS","aclList":["ALL"]},{"type":"GROUP","name":"hadoop","scope":"ACCESS","aclList":["ALL"]}],"volumeName":"vol-hzsrf","storageType":"DISK","versioning":false,"usedBytes":30318,"encryptionInfo":null,"replicationConfigInfo":null,"sourceVolume":null,"sourceBucket":null,"bucketLayout":"FILE_SYSTEM_OPTIMIZED","owner":"hadoop"},"status":"OK"}</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-14T07:36:29.027000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-05-14T07:36:29.028000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-05-14T07:36:29.028000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-05-14T07:36:29.005000" elapsed="0.024000"/>
</kw>
<msg time="2024-05-14T07:36:29.029000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-05-14T07:36:29.005000" elapsed="0.024000"/>
</kw>
<msg time="2024-05-14T07:36:29.029000" level="INFO">${result} = {"path":"","type":"BUCKET","countStats":{"numVolume":-1,"numBucket":-1,"numDir":2,"numKey":2},"objectInfo":{"versioningEnabled":false,"metadata":{},"name":"buc-yteot","quotaInBytes":-1,"quotaInNamespa...</msg>
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<status status="PASS" start="2024-05-14T07:36:29.005000" elapsed="0.024000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-05-14T07:36:29.029000" elapsed="0.001000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-05-14T07:36:29.030000" elapsed="0.000000"/>
</kw>
<arg>${url}</arg>
<arg>${expected}</arg>
<status status="PASS" start="2024-05-14T07:36:29.004000" elapsed="0.026000"/>
</kw>
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-05-14T07:36:29.004000" elapsed="0.027000"/>
</kw>
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}</arg>
<arg>BUCKET</arg>
<status status="PASS" start="2024-05-14T07:36:29.003000" elapsed="0.028000"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" start="2024-05-14T07:36:29.002000" elapsed="0.029000"/>
</test>
<test id="s1-s3-s2-t11" name="Check Recon Namespace Summary Key" line="131">
<kw name="Wait For Summary">
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Test Summary">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-05-14T07:36:29.037000" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-hzsrf/buc-yteot/file1 2&gt;&amp;1'.</msg>
<msg time="2024-05-14T07:36:29.068000" level="INFO">${rc} = 0</msg>
<msg time="2024-05-14T07:36:29.068000" level="INFO">${output} = {"path":"","type":"KEY","countStats":{"numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0},"objectInfo":{"fileName":"file1","file":true,"metadata":{},"name":"file1","quotaInBytes":0,"quotaInNamespace...</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-05-14T07:36:29.035000" elapsed="0.033000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-14T07:36:29.069000" level="INFO">{"path":"","type":"KEY","countStats":{"numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0},"objectInfo":{"fileName":"file1","file":true,"metadata":{},"name":"file1","quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"creationTime":1715672142216,"modificationTime":1715672143534,"acls":[{"type":"USER","name":"hadoop","scope":"ACCESS","aclList":["ALL"]},{"type":"GROUP","name":"hadoop","scope":"ACCESS","aclList":["ALL"]}],"volumeName":"vol-hzsrf","bucketName":"buc-yteot","keyName":"file1","dataSize":4068,"keyLocationVersions":[{"version":0,"locationVersionMap":{"0":[{"blockID":{"containerBlockID":{"containerID":1,"localID":113750153625600012},"blockCommitSequenceId":13,"containerID":1,"localID":113750153625600012},"length":4068,"offset":0,"token":null,"createVersion":0,"pipeline":null,"partNumber":0,"containerID":1,"localID":113750153625600012,"blockCommitSequenceId":13}]},"locationList":[{"blockID":{"containerBlockID":{"containerID":1,"localID":113750153625600012},"blockCommitSequenceId":13,"containerID":1,"localID":113750153625600012},"length":4068,"offset":0,"token":null,"createVersion":0,"pipeline":null,"partNumber":0,"containerID":1,"localID":113750153625600012,"blockCommitSequenceId":13}],"multipartKey":false,"blocksLatestVersionOnly":[{"blockID":{"containerBlockID":{"containerID":1,"localID":113750153625600012},"blockCommitSequenceId":13,"containerID":1,"localID":113750153625600012},"length":4068,"offset":0,"token":null,"createVersion":0,"pipeline":null,"partNumber":0,"containerID":1,"localID":113750153625600012,"blockCommitSequenceId":13}],"locationLists":[[{"blockID":{"containerBlockID":{"containerID":1,"localID":113750153625600012},"blockCommitSequenceId":13,"containerID":1,"localID":113750153625600012},"length":4068,"offset":0,"token":null,"createVersion":0,"pipeline":null,"partNumber":0,"containerID":1,"localID":113750153625600012,"blockCommitSequenceId":13}]],"locationListCount":1}],"replicationConfig":{"replicationFactor":"THREE","requiredNodes":3,"replicationType":"RATIS"},"encInfo":null},"status":"OK"}</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-14T07:36:29.068000" elapsed="0.002000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-05-14T07:36:29.070000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-05-14T07:36:29.070000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-05-14T07:36:29.035000" elapsed="0.035000"/>
</kw>
<msg time="2024-05-14T07:36:29.071000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-05-14T07:36:29.035000" elapsed="0.036000"/>
</kw>
<msg time="2024-05-14T07:36:29.071000" level="INFO">${result} = {"path":"","type":"KEY","countStats":{"numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0},"objectInfo":{"fileName":"file1","file":true,"metadata":{},"name":"file1","quotaInBytes":0,"quotaInNamespace...</msg>
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<status status="PASS" start="2024-05-14T07:36:29.034000" elapsed="0.037000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-05-14T07:36:29.071000" elapsed="0.000000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-05-14T07:36:29.072000" elapsed="0.000000"/>
</kw>
<arg>${url}</arg>
<arg>${expected}</arg>
<status status="PASS" start="2024-05-14T07:36:29.034000" elapsed="0.038000"/>
</kw>
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-05-14T07:36:29.033000" elapsed="0.039000"/>
</kw>
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}/file1</arg>
<arg>KEY</arg>
<status status="PASS" start="2024-05-14T07:36:29.032000" elapsed="0.040000"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" start="2024-05-14T07:36:29.032000" elapsed="0.041000"/>
</test>
<test id="s1-s3-s2-t12" name="Check Recon Namespace Summary Directory" line="134">
<kw name="Run Keyword If" owner="BuiltIn">
<arg>'${BUCKET_LAYOUT}' == 'LEGACY'</arg>
<arg>Wait For Summary</arg>
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}/dir1/dir2/</arg>
<arg>DIRECTORY</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-05-14T07:36:29.074000" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Wait For Summary">
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Test Summary">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-05-14T07:36:29.080000" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-hzsrf/buc-yteot/dir1/dir2 2&gt;&amp;1'.</msg>
<msg time="2024-05-14T07:36:29.096000" level="INFO">${rc} = 0</msg>
<msg time="2024-05-14T07:36:29.097000" level="INFO">${output} = {"path":"","type":"DIRECTORY","countStats":{"numVolume":-1,"numBucket":-1,"numDir":0,"numKey":1},"objectInfo":{"metadata":{},"name":"dir2","quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"crea...</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-05-14T07:36:29.078000" elapsed="0.019000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-14T07:36:29.097000" level="INFO">{"path":"","type":"DIRECTORY","countStats":{"numVolume":-1,"numBucket":-1,"numDir":0,"numKey":1},"objectInfo":{"metadata":{},"name":"dir2","quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"creationTime":1715672146654,"modificationTime":1715672146654,"acls":[{"type":"USER","name":"hadoop","scope":"ACCESS","aclList":["ALL"]},{"type":"GROUP","name":"hadoop","scope":"ACCESS","aclList":["ALL"]}]},"status":"OK"}</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-14T07:36:29.097000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-05-14T07:36:29.098000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-05-14T07:36:29.098000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-05-14T07:36:29.077000" elapsed="0.021000"/>
</kw>
<msg time="2024-05-14T07:36:29.098000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-05-14T07:36:29.077000" elapsed="0.021000"/>
</kw>
<msg time="2024-05-14T07:36:29.098000" level="INFO">${result} = {"path":"","type":"DIRECTORY","countStats":{"numVolume":-1,"numBucket":-1,"numDir":0,"numKey":1},"objectInfo":{"metadata":{},"name":"dir2","quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"crea...</msg>
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<status status="PASS" start="2024-05-14T07:36:29.077000" elapsed="0.021000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-05-14T07:36:29.099000" elapsed="0.000000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-05-14T07:36:29.099000" elapsed="0.000000"/>
</kw>
<arg>${url}</arg>
<arg>${expected}</arg>
<status status="PASS" start="2024-05-14T07:36:29.076000" elapsed="0.023000"/>
</kw>
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-05-14T07:36:29.076000" elapsed="0.023000"/>
</kw>
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}/dir1/dir2</arg>
<arg>DIRECTORY</arg>
<status status="PASS" start="2024-05-14T07:36:29.075000" elapsed="0.025000"/>
</kw>
<arg>'${BUCKET_LAYOUT}' == 'FILE_SYSTEM_OPTIMIZED'</arg>
<arg>Wait For Summary</arg>
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}/dir1/dir2</arg>
<arg>DIRECTORY</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-05-14T07:36:29.074000" elapsed="0.026000"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" start="2024-05-14T07:36:29.073000" elapsed="0.027000"/>
</test>
<test id="s1-s3-s2-t13" name="Check Recon Namespace Disk Usage" line="138">
<kw name="Wait For Summary">
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Test Summary">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-05-14T07:36:29.105000" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/du?path=/vol-hzsrf/buc-yteot&amp;files=true&amp;replica=true 2&gt;&amp;1'.</msg>
<msg time="2024-05-14T07:36:29.116000" level="INFO">${rc} = 0</msg>
<msg time="2024-05-14T07:36:29.116000" level="INFO">${output} = {"status":"OK","path":"/vol-hzsrf/buc-yteot","size":10106,"sizeWithReplica":-1,"subPathCount":1,"subPaths":[{"key":false,"path":"/vol-hzsrf/buc-yteot/dir1","size":6038,"sizeWithReplica":-1,"isKey":fal...</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-05-14T07:36:29.103000" elapsed="0.013000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-14T07:36:29.117000" level="INFO">{"status":"OK","path":"/vol-hzsrf/buc-yteot","size":10106,"sizeWithReplica":-1,"subPathCount":1,"subPaths":[{"key":false,"path":"/vol-hzsrf/buc-yteot/dir1","size":6038,"sizeWithReplica":-1,"isKey":false}],"sizeDirectKey":4068}</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-14T07:36:29.117000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-05-14T07:36:29.118000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-05-14T07:36:29.117000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-05-14T07:36:29.103000" elapsed="0.015000"/>
</kw>
<msg time="2024-05-14T07:36:29.118000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-05-14T07:36:29.102000" elapsed="0.016000"/>
</kw>
<msg time="2024-05-14T07:36:29.118000" level="INFO">${result} = {"status":"OK","path":"/vol-hzsrf/buc-yteot","size":10106,"sizeWithReplica":-1,"subPathCount":1,"subPaths":[{"key":false,"path":"/vol-hzsrf/buc-yteot/dir1","size":6038,"sizeWithReplica":-1,"isKey":fal...</msg>
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<status status="PASS" start="2024-05-14T07:36:29.102000" elapsed="0.016000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-05-14T07:36:29.118000" elapsed="0.001000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-05-14T07:36:29.119000" elapsed="0.000000"/>
</kw>
<arg>${url}</arg>
<arg>${expected}</arg>
<status status="PASS" start="2024-05-14T07:36:29.102000" elapsed="0.017000"/>
</kw>
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-05-14T07:36:29.101000" elapsed="0.018000"/>
</kw>
<arg>${DISK_USAGE_URL}?path=/${VOLUME}/${BUCKET}&amp;files=true&amp;replica=true</arg>
<arg>\"sizeWithReplica\"</arg>
<status status="PASS" start="2024-05-14T07:36:29.101000" elapsed="0.018000"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" start="2024-05-14T07:36:29.100000" elapsed="0.020000"/>
</test>
<test id="s1-s3-s2-t14" name="Check Recon Namespace Volume Quota Usage" line="141">
<kw name="Wait For Summary">
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Test Summary">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-05-14T07:36:29.124000" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/quota?path=/vol-hzsrf 2&gt;&amp;1'.</msg>
<msg time="2024-05-14T07:36:29.136000" level="INFO">${rc} = 0</msg>
<msg time="2024-05-14T07:36:29.136000" level="INFO">${output} = {"allowed":-1,"used":10106,"status":"OK"}</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-05-14T07:36:29.123000" elapsed="0.013000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-14T07:36:29.137000" level="INFO">{"allowed":-1,"used":10106,"status":"OK"}</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-14T07:36:29.136000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-05-14T07:36:29.137000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-05-14T07:36:29.137000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-05-14T07:36:29.122000" elapsed="0.016000"/>
</kw>
<msg time="2024-05-14T07:36:29.138000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-05-14T07:36:29.122000" elapsed="0.016000"/>
</kw>
<msg time="2024-05-14T07:36:29.138000" level="INFO">${result} = {"allowed":-1,"used":10106,"status":"OK"}</msg>
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<status status="PASS" start="2024-05-14T07:36:29.122000" elapsed="0.016000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-05-14T07:36:29.138000" elapsed="0.000000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-05-14T07:36:29.138000" elapsed="0.001000"/>
</kw>
<arg>${url}</arg>
<arg>${expected}</arg>
<status status="PASS" start="2024-05-14T07:36:29.121000" elapsed="0.018000"/>
</kw>
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-05-14T07:36:29.121000" elapsed="0.018000"/>
</kw>
<arg>${QUOTA_USAGE_URL}?path=/${VOLUME}</arg>
<arg>\"used\"</arg>
<status status="PASS" start="2024-05-14T07:36:29.121000" elapsed="0.018000"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" start="2024-05-14T07:36:29.120000" elapsed="0.019000"/>
</test>
<test id="s1-s3-s2-t15" name="Check Recon Namespace Bucket Quota Usage" line="144">
<kw name="Wait For Summary">
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Test Summary">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-05-14T07:36:29.144000" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/quota?path=/vol-hzsrf/buc-yteot 2&gt;&amp;1'.</msg>
<msg time="2024-05-14T07:36:29.156000" level="INFO">${rc} = 0</msg>
<msg time="2024-05-14T07:36:29.156000" level="INFO">${output} = {"allowed":-1,"used":10106,"status":"OK"}</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-05-14T07:36:29.142000" elapsed="0.014000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-14T07:36:29.157000" level="INFO">{"allowed":-1,"used":10106,"status":"OK"}</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-14T07:36:29.156000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-05-14T07:36:29.157000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-05-14T07:36:29.157000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-05-14T07:36:29.142000" elapsed="0.016000"/>
</kw>
<msg time="2024-05-14T07:36:29.158000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-05-14T07:36:29.142000" elapsed="0.016000"/>
</kw>
<msg time="2024-05-14T07:36:29.158000" level="INFO">${result} = {"allowed":-1,"used":10106,"status":"OK"}</msg>
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<status status="PASS" start="2024-05-14T07:36:29.141000" elapsed="0.017000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-05-14T07:36:29.158000" elapsed="0.000000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-05-14T07:36:29.158000" elapsed="0.001000"/>
</kw>
<arg>${url}</arg>
<arg>${expected}</arg>
<status status="PASS" start="2024-05-14T07:36:29.141000" elapsed="0.018000"/>
</kw>
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-05-14T07:36:29.141000" elapsed="0.018000"/>
</kw>
<arg>${QUOTA_USAGE_URL}?path=/${VOLUME}/${BUCKET}</arg>
<arg>\"used\"</arg>
<status status="PASS" start="2024-05-14T07:36:29.140000" elapsed="0.019000"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" start="2024-05-14T07:36:29.140000" elapsed="0.019000"/>
</test>
<test id="s1-s3-s2-t16" name="Check Recon Namespace File Size Distribution Root" line="147">
<kw name="Wait For Summary">
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Test Summary">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-05-14T07:36:29.164000" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg time="2024-05-14T07:36:29.175000" level="INFO">${rc} = 0</msg>
<msg time="2024-05-14T07:36:29.175000" level="INFO">${output} = {"dist":[0,10,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"status":"OK"}</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-05-14T07:36:29.162000" elapsed="0.013000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-14T07:36:29.176000" level="INFO">{"dist":[0,10,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"status":"OK"}</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-14T07:36:29.175000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-05-14T07:36:29.176000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-05-14T07:36:29.176000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-05-14T07:36:29.162000" elapsed="0.014000"/>
</kw>
<msg time="2024-05-14T07:36:29.176000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-05-14T07:36:29.162000" elapsed="0.015000"/>
</kw>
<msg time="2024-05-14T07:36:29.177000" level="INFO">${result} = {"dist":[0,10,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"status":"OK"}</msg>
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<status status="PASS" start="2024-05-14T07:36:29.161000" elapsed="0.016000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-05-14T07:36:29.177000" elapsed="0.000000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-05-14T07:36:29.177000" elapsed="0.001000"/>
</kw>
<arg>${url}</arg>
<arg>${expected}</arg>
<status status="PASS" start="2024-05-14T07:36:29.161000" elapsed="0.017000"/>
</kw>
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-05-14T07:36:29.161000" elapsed="0.017000"/>
</kw>
<arg>${FILE_SIZE_DIST_URL}?path=/</arg>
<arg>\"dist\"</arg>
<status status="PASS" start="2024-05-14T07:36:29.160000" elapsed="0.018000"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" start="2024-05-14T07:36:29.159000" elapsed="0.019000"/>
</test>
<doc>Smoke test for Recon Namespace Summary Endpoint for FILE_SYSTEM_OPTIMIZED buckets.</doc>
<status status="PASS" start="2024-05-14T07:35:33.557000" elapsed="55.622000"/>
</suite>
<status status="PASS" start="2024-05-14T07:35:10.273000" elapsed="78.907000"/>
</suite>
<suite id="s1-s4" name="Loaddata" source="/opt/hadoop/smoketest/topology/loaddata.robot">
<test id="s1-s4-t1" name="Create a volume, bucket and key" line="27">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-05-14T07:36:31.270000" level="INFO">Running command 'ozone sh volume create topvol1 2&gt;&amp;1'.</msg>
<msg time="2024-05-14T07:36:34.203000" level="INFO">${rc} = 0</msg>
<msg time="2024-05-14T07:36:34.203000" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-05-14T07:36:31.268000" elapsed="2.935000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-14T07:36:34.204000" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-14T07:36:34.204000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-05-14T07:36:34.205000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-05-14T07:36:34.204000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-05-14T07:36:31.268000" elapsed="2.937000"/>
</kw>
<msg time="2024-05-14T07:36:34.205000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-05-14T07:36:31.267000" elapsed="2.938000"/>
</kw>
<msg time="2024-05-14T07:36:34.205000" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<var>${output}</var>
<arg>ozone sh volume create topvol1</arg>
<status status="PASS" start="2024-05-14T07:36:31.267000" elapsed="2.938000"/>
</kw>
<kw name="Should Not Contain" owner="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" start="2024-05-14T07:36:34.205000" elapsed="0.001000"/>
</kw>
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-05-14T07:36:34.208000" level="INFO">Running command 'ozone sh bucket create /topvol1/bucket1 2&gt;&amp;1'.</msg>
<msg time="2024-05-14T07:36:37.155000" level="INFO">${rc} = 0</msg>
<msg time="2024-05-14T07:36:37.155000" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-05-14T07:36:34.207000" elapsed="2.948000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-14T07:36:37.156000" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-14T07:36:37.156000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-05-14T07:36:37.157000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-05-14T07:36:37.156000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-05-14T07:36:34.207000" elapsed="2.950000"/>
</kw>
<msg time="2024-05-14T07:36:37.157000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-05-14T07:36:34.206000" elapsed="2.951000"/>
</kw>
<msg time="2024-05-14T07:36:37.157000" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<var>${output}</var>
<arg>ozone sh bucket create /topvol1/bucket1</arg>
<status status="PASS" start="2024-05-14T07:36:34.206000" elapsed="2.951000"/>
</kw>
<kw name="Should Not Contain" owner="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" start="2024-05-14T07:36:37.157000" elapsed="0.001000"/>
</kw>
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-05-14T07:36:37.160000" level="INFO">Running command 'ozone sh key put /topvol1/bucket1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg time="2024-05-14T07:36:41.741000" level="INFO">${rc} = 0</msg>
<msg time="2024-05-14T07:36:41.741000" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-05-14T07:36:37.159000" elapsed="4.582000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-14T07:36:41.742000" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-14T07:36:41.741000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-05-14T07:36:41.742000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-05-14T07:36:41.742000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-05-14T07:36:37.159000" elapsed="4.584000"/>
</kw>
<msg time="2024-05-14T07:36:41.743000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-05-14T07:36:37.158000" elapsed="4.585000"/>
</kw>
<msg time="2024-05-14T07:36:41.743000" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<var>${output}</var>
<arg>ozone sh key put /topvol1/bucket1/key1 /opt/hadoop/NOTICE.txt</arg>
<status status="PASS" start="2024-05-14T07:36:37.158000" elapsed="4.585000"/>
</kw>
<kw name="Should Not Contain" owner="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" start="2024-05-14T07:36:41.743000" elapsed="0.000000"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" start="2024-05-14T07:36:31.266000" elapsed="10.477000"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" start="2024-05-14T07:36:31.224000" elapsed="10.520000"/>
</suite>
<suite id="s1-s5" name="readdata-first-half" source="/opt/hadoop/smoketest/topology/readdata.robot">
<test id="s1-s5-t1" name="Read data from previously created key" line="27">
<kw name="Generate Random String" owner="String">
<msg time="2024-05-14T07:36:48.123000" level="INFO">${random} = 58442</msg>
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<status status="PASS" start="2024-05-14T07:36:48.123000" elapsed="0.000000"/>
</kw>
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-05-14T07:36:48.126000" level="INFO">Running command 'ozone sh key get /topvol1/bucket1/key1 /tmp/key1-58442 2&gt;&amp;1'.</msg>
<msg time="2024-05-14T07:36:52.315000" level="INFO">${rc} = 0</msg>
<msg time="2024-05-14T07:36:52.315000" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-05-14T07:36:48.125000" elapsed="4.190000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-14T07:36:52.316000" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-14T07:36:52.315000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-05-14T07:36:52.316000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-05-14T07:36:52.316000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-05-14T07:36:48.124000" elapsed="4.192000"/>
</kw>
<msg time="2024-05-14T07:36:52.316000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-05-14T07:36:48.124000" elapsed="4.192000"/>
</kw>
<msg time="2024-05-14T07:36:52.317000" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<var>${output}</var>
<arg>ozone sh key get /topvol1/bucket1/key1 /tmp/key1-${random}</arg>
<status status="PASS" start="2024-05-14T07:36:48.123000" elapsed="4.194000"/>
</kw>
<kw name="Should Not Contain" owner="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" start="2024-05-14T07:36:52.317000" elapsed="0.000000"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" start="2024-05-14T07:36:48.122000" elapsed="4.195000"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" start="2024-05-14T07:36:48.080000" elapsed="4.238000"/>
</suite>
<suite id="s1-s6" name="readdata-second-half" source="/opt/hadoop/smoketest/topology/readdata.robot">
<test id="s1-s6-t1" name="Read data from previously created key" line="27">
<kw name="Generate Random String" owner="String">
<msg time="2024-05-14T07:37:17.624000" level="INFO">${random} = 65845</msg>
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<status status="PASS" start="2024-05-14T07:37:17.624000" elapsed="0.001000"/>
</kw>
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-05-14T07:37:17.628000" level="INFO">Running command 'ozone sh key get /topvol1/bucket1/key1 /tmp/key1-65845 2&gt;&amp;1'.</msg>
<msg time="2024-05-14T07:37:55.072000" level="INFO">${rc} = 0</msg>
<msg time="2024-05-14T07:37:55.072000" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-05-14T07:37:17.626000" elapsed="37.446000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-05-14T07:37:55.073000" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-05-14T07:37:55.072000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-05-14T07:37:55.073000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-05-14T07:37:55.073000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-05-14T07:37:17.626000" elapsed="37.448000"/>
</kw>
<msg time="2024-05-14T07:37:55.074000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-05-14T07:37:17.625000" elapsed="37.449000"/>
</kw>
<msg time="2024-05-14T07:37:55.074000" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<var>${output}</var>
<arg>ozone sh key get /topvol1/bucket1/key1 /tmp/key1-${random}</arg>
<status status="PASS" start="2024-05-14T07:37:17.625000" elapsed="37.449000"/>
</kw>
<kw name="Should Not Contain" owner="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" start="2024-05-14T07:37:55.074000" elapsed="0.000000"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" start="2024-05-14T07:37:17.623000" elapsed="37.451000"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" start="2024-05-14T07:37:17.579000" elapsed="37.496000"/>
</suite>
<status status="PASS" elapsed="156.286000"/>
</suite>
<statistics>
<total>
<stat pass="32" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="32" fail="0" skip="0" id="s1" name="ozone-topology">ozone-topology</stat>
<stat pass="2" fail="0" skip="0" id="s1-s1" name="Basic">ozone-topology.Basic</stat>
<stat pass="4" fail="0" skip="0" id="s1-s2" name="Cli">ozone-topology.Cli</stat>
<stat pass="23" fail="0" skip="0" id="s1-s3" name="Recon">ozone-topology.Recon</stat>
<stat pass="7" fail="0" skip="0" id="s1-s3-s1" name="Recon-Api">ozone-topology.Recon.Recon-Api</stat>
<stat pass="16" fail="0" skip="0" id="s1-s3-s2" name="Recon-Nssummary">ozone-topology.Recon.Recon-Nssummary</stat>
<stat pass="1" fail="0" skip="0" id="s1-s4" name="Loaddata">ozone-topology.Loaddata</stat>
<stat pass="1" fail="0" skip="0" id="s1-s5" name="readdata-first-half">ozone-topology.readdata-first-half</stat>
<stat pass="1" fail="0" skip="0" id="s1-s6" name="readdata-second-half">ozone-topology.readdata-second-half</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
