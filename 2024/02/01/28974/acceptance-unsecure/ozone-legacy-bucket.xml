<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 7.0 (Python 3.8.10 on linux)" generated="2024-02-01T04:28:05.539519" rpa="false" schemaversion="5">
<suite id="s1" name="ozone-legacy-bucket" source="/opt/hadoop/smoketest/recon/recon-nssummary.robot">
<test id="s1-t1" name="Check volume creation" line="99">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-02-01T04:27:04.847000" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg time="2024-02-01T04:27:04.849000" level="INFO">${rc} = 0</msg>
<msg time="2024-02-01T04:27:04.849000" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-02-01T04:27:04.845000" elapsed="0.004000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-02-01T04:27:04.850000" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-02-01T04:27:04.850000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-02-01T04:27:04.850000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-02-01T04:27:04.850000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-02-01T04:27:04.845000" elapsed="0.006000"/>
</kw>
<msg time="2024-02-01T04:27:04.851000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-02-01T04:27:04.844000" elapsed="0.007000"/>
</kw>
<arg>kdestroy</arg>
<status status="PASS" start="2024-02-01T04:27:04.844000" elapsed="0.007000"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" owner="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-02-01T04:27:04.851000" elapsed="0.001000"/>
</kw>
<status status="PASS" start="2024-02-01T04:27:04.851000" elapsed="0.001000"/>
</kw>
<kw name="Create volume">
<kw name="Generate Random String" owner="String">
<msg time="2024-02-01T04:27:04.852000" level="INFO">${random} = dokdo</msg>
<var>${random}</var>
<arg>5</arg>
<arg>[LOWER]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<status status="PASS" start="2024-02-01T04:27:04.852000" elapsed="0.000000"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2024-02-01T04:27:04.853000" level="INFO">${VOLUME} = vol-dokdo</msg>
<arg>${VOLUME}</arg>
<arg>vol-${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2024-02-01T04:27:04.853000" elapsed="0.000000"/>
</kw>
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-02-01T04:27:04.855000" level="INFO">Running command 'ozone sh volume create /vol-dokdo 2&gt;&amp;1'.</msg>
<msg time="2024-02-01T04:27:08.192000" level="INFO">${rc} = 0</msg>
<msg time="2024-02-01T04:27:08.192000" level="INFO">${output} = </msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-02-01T04:27:04.854000" elapsed="3.338000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-02-01T04:27:08.193000" level="INFO"/>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-02-01T04:27:08.192000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-02-01T04:27:08.193000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-02-01T04:27:08.193000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-02-01T04:27:04.854000" elapsed="3.340000"/>
</kw>
<msg time="2024-02-01T04:27:08.194000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-02-01T04:27:04.853000" elapsed="3.341000"/>
</kw>
<msg time="2024-02-01T04:27:08.194000" level="INFO">${result} = </msg>
<var>${result}</var>
<arg>ozone sh volume create /${VOLUME}</arg>
<status status="PASS" start="2024-02-01T04:27:04.853000" elapsed="3.341000"/>
</kw>
<kw name="Should Not Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" start="2024-02-01T04:27:08.194000" elapsed="0.001000"/>
</kw>
<status status="PASS" start="2024-02-01T04:27:04.852000" elapsed="3.343000"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" start="2024-02-01T04:27:04.843000" elapsed="3.352000"/>
</test>
<test id="s1-t2" name="Check bucket creation" line="104">
<kw name="Create bucket">
<kw name="Generate Random String" owner="String">
<msg time="2024-02-01T04:27:08.200000" level="INFO">${random} = jmgdz</msg>
<var>${random}</var>
<arg>5</arg>
<arg>[LOWER]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<status status="PASS" start="2024-02-01T04:27:08.197000" elapsed="0.003000"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2024-02-01T04:27:08.200000" level="INFO">${BUCKET} = buc-jmgdz</msg>
<arg>${BUCKET}</arg>
<arg>buc-${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2024-02-01T04:27:08.200000" elapsed="0.000000"/>
</kw>
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-02-01T04:27:08.205000" level="INFO">Running command 'ozone sh bucket create -l LEGACY /vol-dokdo/buc-jmgdz 2&gt;&amp;1'.</msg>
<msg time="2024-02-01T04:27:11.221000" level="INFO">${rc} = 0</msg>
<msg time="2024-02-01T04:27:11.221000" level="INFO">${output} = </msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-02-01T04:27:08.202000" elapsed="3.019000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-02-01T04:27:11.222000" level="INFO"/>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-02-01T04:27:11.221000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-02-01T04:27:11.222000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-02-01T04:27:11.222000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-02-01T04:27:08.201000" elapsed="3.021000"/>
</kw>
<msg time="2024-02-01T04:27:11.223000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-02-01T04:27:08.201000" elapsed="3.022000"/>
</kw>
<msg time="2024-02-01T04:27:11.223000" level="INFO">${result} = </msg>
<var>${result}</var>
<arg>ozone sh bucket create -l ${BUCKET_LAYOUT} /${VOLUME}/${BUCKET}</arg>
<status status="PASS" start="2024-02-01T04:27:08.200000" elapsed="3.023000"/>
</kw>
<kw name="Should Not Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" start="2024-02-01T04:27:11.223000" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-02-01T04:27:08.196000" elapsed="3.027000"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" start="2024-02-01T04:27:08.196000" elapsed="3.027000"/>
</test>
<test id="s1-t3" name="Check keys creation" line="107">
<kw name="Create keys">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-02-01T04:27:11.227000" level="INFO">Running command 'ozone sh key put /vol-dokdo/buc-jmgdz/file1 README.md 2&gt;&amp;1'.</msg>
<msg time="2024-02-01T04:27:16.680000" level="INFO">${rc} = 0</msg>
<msg time="2024-02-01T04:27:16.680000" level="INFO">${output} = </msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-02-01T04:27:11.226000" elapsed="5.454000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-02-01T04:27:16.681000" level="INFO"/>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-02-01T04:27:16.680000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-02-01T04:27:16.681000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-02-01T04:27:16.681000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-02-01T04:27:11.225000" elapsed="5.456000"/>
</kw>
<msg time="2024-02-01T04:27:16.681000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-02-01T04:27:11.225000" elapsed="5.457000"/>
</kw>
<msg time="2024-02-01T04:27:16.682000" level="INFO">${result} = </msg>
<var>${result}</var>
<arg>ozone sh key put /${VOLUME}/${BUCKET}/file1 README.md</arg>
<status status="PASS" start="2024-02-01T04:27:11.225000" elapsed="5.457000"/>
</kw>
<kw name="Should Not Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" start="2024-02-01T04:27:16.682000" elapsed="0.000000"/>
</kw>
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-02-01T04:27:16.686000" level="INFO">Running command 'ozone sh key put /vol-dokdo/buc-jmgdz/dir1/dir2/file2 HISTORY.md 2&gt;&amp;1'.</msg>
<msg time="2024-02-01T04:27:21.446000" level="INFO">${rc} = 0</msg>
<msg time="2024-02-01T04:27:21.446000" level="INFO">${output} = </msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-02-01T04:27:16.684000" elapsed="4.762000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-02-01T04:27:21.447000" level="INFO"/>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-02-01T04:27:21.446000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-02-01T04:27:21.447000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-02-01T04:27:21.447000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-02-01T04:27:16.683000" elapsed="4.764000"/>
</kw>
<msg time="2024-02-01T04:27:21.447000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-02-01T04:27:16.683000" elapsed="4.764000"/>
</kw>
<msg time="2024-02-01T04:27:21.448000" level="INFO">${result} = </msg>
<var>${result}</var>
<arg>ozone sh key put /${VOLUME}/${BUCKET}/dir1/dir2/file2 HISTORY.md</arg>
<status status="PASS" start="2024-02-01T04:27:16.682000" elapsed="4.766000"/>
</kw>
<kw name="Should Not Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" start="2024-02-01T04:27:21.448000" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-02-01T04:27:11.224000" elapsed="10.224000"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" start="2024-02-01T04:27:11.224000" elapsed="10.224000"/>
</test>
<test id="s1-t4" name="Check Summary api access" line="110">
<kw name="Check Access">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-02-01T04:27:21.453000" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg time="2024-02-01T04:27:21.455000" level="INFO">${rc} = 0</msg>
<msg time="2024-02-01T04:27:21.455000" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-02-01T04:27:21.451000" elapsed="0.004000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-02-01T04:27:21.456000" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-02-01T04:27:21.455000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-02-01T04:27:21.456000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-02-01T04:27:21.456000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-02-01T04:27:21.451000" elapsed="0.005000"/>
</kw>
<msg time="2024-02-01T04:27:21.456000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-02-01T04:27:21.450000" elapsed="0.007000"/>
</kw>
<arg>kdestroy</arg>
<status status="PASS" start="2024-02-01T04:27:21.450000" elapsed="0.007000"/>
</kw>
<kw name="Check http return code">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-02-01T04:27:21.459000" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg time="2024-02-01T04:27:21.596000" level="INFO">${rc} = 0</msg>
<msg time="2024-02-01T04:27:21.596000" level="INFO">${output} = 200</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-02-01T04:27:21.458000" elapsed="0.138000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-02-01T04:27:21.597000" level="INFO">200</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-02-01T04:27:21.596000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-02-01T04:27:21.597000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-02-01T04:27:21.597000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-02-01T04:27:21.458000" elapsed="0.140000"/>
</kw>
<msg time="2024-02-01T04:27:21.598000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-02-01T04:27:21.458000" elapsed="0.140000"/>
</kw>
<msg time="2024-02-01T04:27:21.598000" level="INFO">${result} = 200</msg>
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<status status="PASS" start="2024-02-01T04:27:21.457000" elapsed="0.141000"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" start="2024-02-01T04:27:21.598000" elapsed="0.001000"/>
</kw>
<status status="NOT RUN" start="2024-02-01T04:27:21.598000" elapsed="0.001000"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-02-01T04:27:21.599000" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-02-01T04:27:21.599000" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-02-01T04:27:21.598000" elapsed="0.001000"/>
</if>
<arg>${url}</arg>
<arg>401</arg>
<status status="PASS" start="2024-02-01T04:27:21.457000" elapsed="0.142000"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" owner="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-02-01T04:27:21.600000" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-02-01T04:27:21.599000" elapsed="0.001000"/>
</kw>
<kw name="Check http return code">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-02-01T04:27:21.603000" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg time="2024-02-01T04:27:21.616000" level="INFO">${rc} = 0</msg>
<msg time="2024-02-01T04:27:21.616000" level="INFO">${output} = 200</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-02-01T04:27:21.602000" elapsed="0.014000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-02-01T04:27:21.616000" level="INFO">200</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-02-01T04:27:21.616000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-02-01T04:27:21.617000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-02-01T04:27:21.617000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-02-01T04:27:21.601000" elapsed="0.016000"/>
</kw>
<msg time="2024-02-01T04:27:21.617000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-02-01T04:27:21.601000" elapsed="0.016000"/>
</kw>
<msg time="2024-02-01T04:27:21.617000" level="INFO">${result} = 200</msg>
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<status status="PASS" start="2024-02-01T04:27:21.600000" elapsed="0.017000"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" start="2024-02-01T04:27:21.618000" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-02-01T04:27:21.618000" elapsed="0.000000"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-02-01T04:27:21.618000" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-02-01T04:27:21.618000" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-02-01T04:27:21.618000" elapsed="0.000000"/>
</if>
<arg>${url}</arg>
<arg>403</arg>
<status status="PASS" start="2024-02-01T04:27:21.600000" elapsed="0.019000"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" owner="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-02-01T04:27:21.619000" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-02-01T04:27:21.619000" elapsed="0.000000"/>
</kw>
<kw name="Check http return code">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-02-01T04:27:21.622000" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg time="2024-02-01T04:27:21.633000" level="INFO">${rc} = 0</msg>
<msg time="2024-02-01T04:27:21.633000" level="INFO">${output} = 200</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-02-01T04:27:21.621000" elapsed="0.012000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-02-01T04:27:21.634000" level="INFO">200</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-02-01T04:27:21.633000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-02-01T04:27:21.634000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-02-01T04:27:21.634000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-02-01T04:27:21.621000" elapsed="0.014000"/>
</kw>
<msg time="2024-02-01T04:27:21.635000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-02-01T04:27:21.620000" elapsed="0.015000"/>
</kw>
<msg time="2024-02-01T04:27:21.635000" level="INFO">${result} = 200</msg>
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<status status="PASS" start="2024-02-01T04:27:21.620000" elapsed="0.015000"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" start="2024-02-01T04:27:21.635000" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-02-01T04:27:21.635000" elapsed="0.000000"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-02-01T04:27:21.635000" elapsed="0.001000"/>
</kw>
<status status="PASS" start="2024-02-01T04:27:21.635000" elapsed="0.001000"/>
</branch>
<status status="PASS" start="2024-02-01T04:27:21.635000" elapsed="0.001000"/>
</if>
<arg>${url}</arg>
<arg>200</arg>
<status status="PASS" start="2024-02-01T04:27:21.620000" elapsed="0.016000"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" owner="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-02-01T04:27:21.636000" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-02-01T04:27:21.636000" elapsed="0.001000"/>
</kw>
<kw name="Check http return code">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-02-01T04:27:21.639000" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg time="2024-02-01T04:27:21.650000" level="INFO">${rc} = 0</msg>
<msg time="2024-02-01T04:27:21.650000" level="INFO">${output} = 200</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-02-01T04:27:21.638000" elapsed="0.012000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-02-01T04:27:21.651000" level="INFO">200</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-02-01T04:27:21.650000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-02-01T04:27:21.651000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-02-01T04:27:21.651000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-02-01T04:27:21.638000" elapsed="0.014000"/>
</kw>
<msg time="2024-02-01T04:27:21.652000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-02-01T04:27:21.637000" elapsed="0.015000"/>
</kw>
<msg time="2024-02-01T04:27:21.652000" level="INFO">${result} = 200</msg>
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<status status="PASS" start="2024-02-01T04:27:21.637000" elapsed="0.015000"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" start="2024-02-01T04:27:21.652000" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-02-01T04:27:21.652000" elapsed="0.000000"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-02-01T04:27:21.653000" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-02-01T04:27:21.652000" elapsed="0.001000"/>
</branch>
<status status="PASS" start="2024-02-01T04:27:21.652000" elapsed="0.001000"/>
</if>
<arg>${url}</arg>
<arg>200</arg>
<status status="PASS" start="2024-02-01T04:27:21.637000" elapsed="0.016000"/>
</kw>
<arg>${SUMMARY_URL}?path=/</arg>
<status status="PASS" start="2024-02-01T04:27:21.449000" elapsed="0.204000"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" start="2024-02-01T04:27:21.449000" elapsed="0.204000"/>
</test>
<test id="s1-t5" name="Check Disk Usage api access" line="113">
<kw name="Check Access">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-02-01T04:27:21.657000" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg time="2024-02-01T04:27:21.659000" level="INFO">${rc} = 0</msg>
<msg time="2024-02-01T04:27:21.659000" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-02-01T04:27:21.656000" elapsed="0.003000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-02-01T04:27:21.660000" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-02-01T04:27:21.659000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-02-01T04:27:21.660000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-02-01T04:27:21.660000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-02-01T04:27:21.655000" elapsed="0.006000"/>
</kw>
<msg time="2024-02-01T04:27:21.661000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-02-01T04:27:21.655000" elapsed="0.006000"/>
</kw>
<arg>kdestroy</arg>
<status status="PASS" start="2024-02-01T04:27:21.655000" elapsed="0.006000"/>
</kw>
<kw name="Check http return code">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-02-01T04:27:21.664000" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/du?path=/ 2&gt;&amp;1'.</msg>
<msg time="2024-02-01T04:27:21.678000" level="INFO">${rc} = 0</msg>
<msg time="2024-02-01T04:27:21.678000" level="INFO">${output} = 200</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-02-01T04:27:21.663000" elapsed="0.015000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-02-01T04:27:21.679000" level="INFO">200</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-02-01T04:27:21.678000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-02-01T04:27:21.679000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-02-01T04:27:21.679000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-02-01T04:27:21.662000" elapsed="0.018000"/>
</kw>
<msg time="2024-02-01T04:27:21.680000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-02-01T04:27:21.662000" elapsed="0.018000"/>
</kw>
<msg time="2024-02-01T04:27:21.680000" level="INFO">${result} = 200</msg>
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<status status="PASS" start="2024-02-01T04:27:21.661000" elapsed="0.019000"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" start="2024-02-01T04:27:21.680000" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-02-01T04:27:21.680000" elapsed="0.000000"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-02-01T04:27:21.681000" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-02-01T04:27:21.680000" elapsed="0.001000"/>
</branch>
<status status="PASS" start="2024-02-01T04:27:21.680000" elapsed="0.001000"/>
</if>
<arg>${url}</arg>
<arg>401</arg>
<status status="PASS" start="2024-02-01T04:27:21.661000" elapsed="0.020000"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" owner="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-02-01T04:27:21.681000" elapsed="0.001000"/>
</kw>
<status status="PASS" start="2024-02-01T04:27:21.681000" elapsed="0.001000"/>
</kw>
<kw name="Check http return code">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-02-01T04:27:21.684000" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/du?path=/ 2&gt;&amp;1'.</msg>
<msg time="2024-02-01T04:27:21.695000" level="INFO">${rc} = 0</msg>
<msg time="2024-02-01T04:27:21.695000" level="INFO">${output} = 200</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-02-01T04:27:21.683000" elapsed="0.012000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-02-01T04:27:21.696000" level="INFO">200</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-02-01T04:27:21.695000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-02-01T04:27:21.696000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-02-01T04:27:21.696000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-02-01T04:27:21.683000" elapsed="0.014000"/>
</kw>
<msg time="2024-02-01T04:27:21.697000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-02-01T04:27:21.683000" elapsed="0.014000"/>
</kw>
<msg time="2024-02-01T04:27:21.697000" level="INFO">${result} = 200</msg>
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<status status="PASS" start="2024-02-01T04:27:21.682000" elapsed="0.015000"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" start="2024-02-01T04:27:21.697000" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-02-01T04:27:21.697000" elapsed="0.000000"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-02-01T04:27:21.697000" elapsed="0.001000"/>
</kw>
<status status="PASS" start="2024-02-01T04:27:21.697000" elapsed="0.001000"/>
</branch>
<status status="PASS" start="2024-02-01T04:27:21.697000" elapsed="0.001000"/>
</if>
<arg>${url}</arg>
<arg>403</arg>
<status status="PASS" start="2024-02-01T04:27:21.682000" elapsed="0.016000"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" owner="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-02-01T04:27:21.698000" elapsed="0.001000"/>
</kw>
<status status="PASS" start="2024-02-01T04:27:21.698000" elapsed="0.001000"/>
</kw>
<kw name="Check http return code">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-02-01T04:27:21.701000" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/du?path=/ 2&gt;&amp;1'.</msg>
<msg time="2024-02-01T04:27:21.711000" level="INFO">${rc} = 0</msg>
<msg time="2024-02-01T04:27:21.711000" level="INFO">${output} = 200</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-02-01T04:27:21.700000" elapsed="0.011000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-02-01T04:27:21.712000" level="INFO">200</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-02-01T04:27:21.711000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-02-01T04:27:21.712000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-02-01T04:27:21.712000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-02-01T04:27:21.700000" elapsed="0.012000"/>
</kw>
<msg time="2024-02-01T04:27:21.713000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-02-01T04:27:21.700000" elapsed="0.013000"/>
</kw>
<msg time="2024-02-01T04:27:21.713000" level="INFO">${result} = 200</msg>
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<status status="PASS" start="2024-02-01T04:27:21.699000" elapsed="0.014000"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" start="2024-02-01T04:27:21.713000" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-02-01T04:27:21.713000" elapsed="0.000000"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-02-01T04:27:21.713000" elapsed="0.001000"/>
</kw>
<status status="PASS" start="2024-02-01T04:27:21.713000" elapsed="0.001000"/>
</branch>
<status status="PASS" start="2024-02-01T04:27:21.713000" elapsed="0.001000"/>
</if>
<arg>${url}</arg>
<arg>200</arg>
<status status="PASS" start="2024-02-01T04:27:21.699000" elapsed="0.015000"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" owner="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-02-01T04:27:21.714000" elapsed="0.001000"/>
</kw>
<status status="PASS" start="2024-02-01T04:27:21.714000" elapsed="0.001000"/>
</kw>
<kw name="Check http return code">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-02-01T04:27:21.717000" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/du?path=/ 2&gt;&amp;1'.</msg>
<msg time="2024-02-01T04:27:21.727000" level="INFO">${rc} = 0</msg>
<msg time="2024-02-01T04:27:21.727000" level="INFO">${output} = 200</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-02-01T04:27:21.716000" elapsed="0.011000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-02-01T04:27:21.728000" level="INFO">200</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-02-01T04:27:21.728000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-02-01T04:27:21.729000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-02-01T04:27:21.728000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-02-01T04:27:21.716000" elapsed="0.013000"/>
</kw>
<msg time="2024-02-01T04:27:21.729000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-02-01T04:27:21.715000" elapsed="0.014000"/>
</kw>
<msg time="2024-02-01T04:27:21.729000" level="INFO">${result} = 200</msg>
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<status status="PASS" start="2024-02-01T04:27:21.715000" elapsed="0.014000"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" start="2024-02-01T04:27:21.729000" elapsed="0.001000"/>
</kw>
<status status="NOT RUN" start="2024-02-01T04:27:21.729000" elapsed="0.001000"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-02-01T04:27:21.730000" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-02-01T04:27:21.730000" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-02-01T04:27:21.729000" elapsed="0.001000"/>
</if>
<arg>${url}</arg>
<arg>200</arg>
<status status="PASS" start="2024-02-01T04:27:21.715000" elapsed="0.015000"/>
</kw>
<arg>${DISK_USAGE_URL}?path=/</arg>
<status status="PASS" start="2024-02-01T04:27:21.654000" elapsed="0.076000"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" start="2024-02-01T04:27:21.654000" elapsed="0.076000"/>
</test>
<test id="s1-t6" name="Check Quota Usage api access" line="116">
<kw name="Check Access">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-02-01T04:27:21.734000" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg time="2024-02-01T04:27:21.736000" level="INFO">${rc} = 0</msg>
<msg time="2024-02-01T04:27:21.736000" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-02-01T04:27:21.733000" elapsed="0.003000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-02-01T04:27:21.737000" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-02-01T04:27:21.736000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-02-01T04:27:21.737000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-02-01T04:27:21.737000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-02-01T04:27:21.732000" elapsed="0.006000"/>
</kw>
<msg time="2024-02-01T04:27:21.738000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-02-01T04:27:21.732000" elapsed="0.006000"/>
</kw>
<arg>kdestroy</arg>
<status status="PASS" start="2024-02-01T04:27:21.732000" elapsed="0.006000"/>
</kw>
<kw name="Check http return code">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-02-01T04:27:21.740000" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/quota?path=/ 2&gt;&amp;1'.</msg>
<msg time="2024-02-01T04:27:21.752000" level="INFO">${rc} = 0</msg>
<msg time="2024-02-01T04:27:21.752000" level="INFO">${output} = 200</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-02-01T04:27:21.739000" elapsed="0.013000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-02-01T04:27:21.753000" level="INFO">200</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-02-01T04:27:21.753000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-02-01T04:27:21.754000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-02-01T04:27:21.753000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-02-01T04:27:21.739000" elapsed="0.015000"/>
</kw>
<msg time="2024-02-01T04:27:21.754000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-02-01T04:27:21.739000" elapsed="0.015000"/>
</kw>
<msg time="2024-02-01T04:27:21.754000" level="INFO">${result} = 200</msg>
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<status status="PASS" start="2024-02-01T04:27:21.738000" elapsed="0.016000"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" start="2024-02-01T04:27:21.755000" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-02-01T04:27:21.754000" elapsed="0.001000"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-02-01T04:27:21.755000" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-02-01T04:27:21.755000" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-02-01T04:27:21.754000" elapsed="0.001000"/>
</if>
<arg>${url}</arg>
<arg>401</arg>
<status status="PASS" start="2024-02-01T04:27:21.738000" elapsed="0.017000"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" owner="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-02-01T04:27:21.756000" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-02-01T04:27:21.756000" elapsed="0.000000"/>
</kw>
<kw name="Check http return code">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-02-01T04:27:21.760000" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/quota?path=/ 2&gt;&amp;1'.</msg>
<msg time="2024-02-01T04:27:21.770000" level="INFO">${rc} = 0</msg>
<msg time="2024-02-01T04:27:21.770000" level="INFO">${output} = 200</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-02-01T04:27:21.758000" elapsed="0.012000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-02-01T04:27:21.771000" level="INFO">200</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-02-01T04:27:21.771000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-02-01T04:27:21.772000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-02-01T04:27:21.772000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-02-01T04:27:21.757000" elapsed="0.015000"/>
</kw>
<msg time="2024-02-01T04:27:21.772000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-02-01T04:27:21.757000" elapsed="0.015000"/>
</kw>
<msg time="2024-02-01T04:27:21.773000" level="INFO">${result} = 200</msg>
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<status status="PASS" start="2024-02-01T04:27:21.757000" elapsed="0.016000"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" start="2024-02-01T04:27:21.773000" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-02-01T04:27:21.773000" elapsed="0.000000"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-02-01T04:27:21.774000" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-02-01T04:27:21.773000" elapsed="0.001000"/>
</branch>
<status status="PASS" start="2024-02-01T04:27:21.773000" elapsed="0.001000"/>
</if>
<arg>${url}</arg>
<arg>403</arg>
<status status="PASS" start="2024-02-01T04:27:21.756000" elapsed="0.018000"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" owner="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-02-01T04:27:21.775000" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-02-01T04:27:21.775000" elapsed="0.000000"/>
</kw>
<kw name="Check http return code">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-02-01T04:27:21.779000" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/quota?path=/ 2&gt;&amp;1'.</msg>
<msg time="2024-02-01T04:27:21.788000" level="INFO">${rc} = 0</msg>
<msg time="2024-02-01T04:27:21.788000" level="INFO">${output} = 200</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-02-01T04:27:21.777000" elapsed="0.011000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-02-01T04:27:21.789000" level="INFO">200</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-02-01T04:27:21.789000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-02-01T04:27:21.789000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-02-01T04:27:21.789000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-02-01T04:27:21.777000" elapsed="0.013000"/>
</kw>
<msg time="2024-02-01T04:27:21.790000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-02-01T04:27:21.777000" elapsed="0.013000"/>
</kw>
<msg time="2024-02-01T04:27:21.790000" level="INFO">${result} = 200</msg>
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<status status="PASS" start="2024-02-01T04:27:21.776000" elapsed="0.014000"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" start="2024-02-01T04:27:21.790000" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-02-01T04:27:21.790000" elapsed="0.001000"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-02-01T04:27:21.791000" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-02-01T04:27:21.791000" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-02-01T04:27:21.790000" elapsed="0.001000"/>
</if>
<arg>${url}</arg>
<arg>200</arg>
<status status="PASS" start="2024-02-01T04:27:21.776000" elapsed="0.015000"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" owner="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-02-01T04:27:21.792000" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-02-01T04:27:21.791000" elapsed="0.001000"/>
</kw>
<kw name="Check http return code">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-02-01T04:27:21.795000" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/quota?path=/ 2&gt;&amp;1'.</msg>
<msg time="2024-02-01T04:27:21.805000" level="INFO">${rc} = 0</msg>
<msg time="2024-02-01T04:27:21.805000" level="INFO">${output} = 200</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-02-01T04:27:21.793000" elapsed="0.012000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-02-01T04:27:21.806000" level="INFO">200</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-02-01T04:27:21.805000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-02-01T04:27:21.806000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-02-01T04:27:21.806000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-02-01T04:27:21.793000" elapsed="0.013000"/>
</kw>
<msg time="2024-02-01T04:27:21.806000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-02-01T04:27:21.793000" elapsed="0.013000"/>
</kw>
<msg time="2024-02-01T04:27:21.807000" level="INFO">${result} = 200</msg>
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<status status="PASS" start="2024-02-01T04:27:21.792000" elapsed="0.015000"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" start="2024-02-01T04:27:21.807000" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-02-01T04:27:21.807000" elapsed="0.000000"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-02-01T04:27:21.807000" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-02-01T04:27:21.807000" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-02-01T04:27:21.807000" elapsed="0.001000"/>
</if>
<arg>${url}</arg>
<arg>200</arg>
<status status="PASS" start="2024-02-01T04:27:21.792000" elapsed="0.016000"/>
</kw>
<arg>${QUOTA_USAGE_URL}?path=/</arg>
<status status="PASS" start="2024-02-01T04:27:21.731000" elapsed="0.077000"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" start="2024-02-01T04:27:21.731000" elapsed="0.077000"/>
</test>
<test id="s1-t7" name="Check File Size Distribution api access" line="119">
<kw name="Check Access">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-02-01T04:27:21.812000" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg time="2024-02-01T04:27:21.814000" level="INFO">${rc} = 0</msg>
<msg time="2024-02-01T04:27:21.814000" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-02-01T04:27:21.810000" elapsed="0.004000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-02-01T04:27:21.814000" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-02-01T04:27:21.814000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-02-01T04:27:21.815000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-02-01T04:27:21.815000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-02-01T04:27:21.810000" elapsed="0.005000"/>
</kw>
<msg time="2024-02-01T04:27:21.815000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-02-01T04:27:21.810000" elapsed="0.005000"/>
</kw>
<arg>kdestroy</arg>
<status status="PASS" start="2024-02-01T04:27:21.809000" elapsed="0.006000"/>
</kw>
<kw name="Check http return code">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-02-01T04:27:21.818000" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg time="2024-02-01T04:27:21.834000" level="INFO">${rc} = 0</msg>
<msg time="2024-02-01T04:27:21.834000" level="INFO">${output} = 200</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-02-01T04:27:21.817000" elapsed="0.017000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-02-01T04:27:21.835000" level="INFO">200</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-02-01T04:27:21.834000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-02-01T04:27:21.835000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-02-01T04:27:21.835000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-02-01T04:27:21.816000" elapsed="0.020000"/>
</kw>
<msg time="2024-02-01T04:27:21.836000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-02-01T04:27:21.816000" elapsed="0.020000"/>
</kw>
<msg time="2024-02-01T04:27:21.836000" level="INFO">${result} = 200</msg>
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<status status="PASS" start="2024-02-01T04:27:21.816000" elapsed="0.020000"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" start="2024-02-01T04:27:21.836000" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-02-01T04:27:21.836000" elapsed="0.000000"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-02-01T04:27:21.837000" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-02-01T04:27:21.836000" elapsed="0.001000"/>
</branch>
<status status="PASS" start="2024-02-01T04:27:21.836000" elapsed="0.001000"/>
</if>
<arg>${url}</arg>
<arg>401</arg>
<status status="PASS" start="2024-02-01T04:27:21.815000" elapsed="0.022000"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" owner="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-02-01T04:27:21.837000" elapsed="0.001000"/>
</kw>
<status status="PASS" start="2024-02-01T04:27:21.837000" elapsed="0.001000"/>
</kw>
<kw name="Check http return code">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-02-01T04:27:21.840000" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg time="2024-02-01T04:27:21.850000" level="INFO">${rc} = 0</msg>
<msg time="2024-02-01T04:27:21.851000" level="INFO">${output} = 200</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-02-01T04:27:21.839000" elapsed="0.012000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-02-01T04:27:21.851000" level="INFO">200</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-02-01T04:27:21.851000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-02-01T04:27:21.852000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-02-01T04:27:21.851000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-02-01T04:27:21.839000" elapsed="0.013000"/>
</kw>
<msg time="2024-02-01T04:27:21.852000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-02-01T04:27:21.839000" elapsed="0.013000"/>
</kw>
<msg time="2024-02-01T04:27:21.852000" level="INFO">${result} = 200</msg>
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<status status="PASS" start="2024-02-01T04:27:21.838000" elapsed="0.014000"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" start="2024-02-01T04:27:21.853000" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-02-01T04:27:21.853000" elapsed="0.000000"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-02-01T04:27:21.853000" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-02-01T04:27:21.853000" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-02-01T04:27:21.852000" elapsed="0.001000"/>
</if>
<arg>${url}</arg>
<arg>403</arg>
<status status="PASS" start="2024-02-01T04:27:21.838000" elapsed="0.016000"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" owner="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-02-01T04:27:21.854000" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-02-01T04:27:21.854000" elapsed="0.000000"/>
</kw>
<kw name="Check http return code">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-02-01T04:27:21.857000" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg time="2024-02-01T04:27:21.867000" level="INFO">${rc} = 0</msg>
<msg time="2024-02-01T04:27:21.867000" level="INFO">${output} = 200</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-02-01T04:27:21.856000" elapsed="0.011000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-02-01T04:27:21.868000" level="INFO">200</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-02-01T04:27:21.867000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-02-01T04:27:21.868000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-02-01T04:27:21.868000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-02-01T04:27:21.856000" elapsed="0.012000"/>
</kw>
<msg time="2024-02-01T04:27:21.868000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-02-01T04:27:21.855000" elapsed="0.014000"/>
</kw>
<msg time="2024-02-01T04:27:21.869000" level="INFO">${result} = 200</msg>
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<status status="PASS" start="2024-02-01T04:27:21.855000" elapsed="0.014000"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" start="2024-02-01T04:27:21.869000" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-02-01T04:27:21.869000" elapsed="0.000000"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-02-01T04:27:21.869000" elapsed="0.001000"/>
</kw>
<status status="PASS" start="2024-02-01T04:27:21.869000" elapsed="0.001000"/>
</branch>
<status status="PASS" start="2024-02-01T04:27:21.869000" elapsed="0.001000"/>
</if>
<arg>${url}</arg>
<arg>200</arg>
<status status="PASS" start="2024-02-01T04:27:21.854000" elapsed="0.016000"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" owner="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-02-01T04:27:21.870000" elapsed="0.001000"/>
</kw>
<status status="PASS" start="2024-02-01T04:27:21.870000" elapsed="0.001000"/>
</kw>
<kw name="Check http return code">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-02-01T04:27:21.873000" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg time="2024-02-01T04:27:21.883000" level="INFO">${rc} = 0</msg>
<msg time="2024-02-01T04:27:21.883000" level="INFO">${output} = 200</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-02-01T04:27:21.872000" elapsed="0.011000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-02-01T04:27:21.884000" level="INFO">200</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-02-01T04:27:21.884000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-02-01T04:27:21.884000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-02-01T04:27:21.884000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-02-01T04:27:21.872000" elapsed="0.013000"/>
</kw>
<msg time="2024-02-01T04:27:21.885000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-02-01T04:27:21.871000" elapsed="0.014000"/>
</kw>
<msg time="2024-02-01T04:27:21.885000" level="INFO">${result} = 200</msg>
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<status status="PASS" start="2024-02-01T04:27:21.871000" elapsed="0.014000"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" start="2024-02-01T04:27:21.885000" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-02-01T04:27:21.885000" elapsed="0.000000"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-02-01T04:27:21.886000" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-02-01T04:27:21.886000" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-02-01T04:27:21.885000" elapsed="0.001000"/>
</if>
<arg>${url}</arg>
<arg>200</arg>
<status status="PASS" start="2024-02-01T04:27:21.871000" elapsed="0.015000"/>
</kw>
<arg>${FILE_SIZE_DIST_URL}?path=/</arg>
<status status="PASS" start="2024-02-01T04:27:21.809000" elapsed="0.077000"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" start="2024-02-01T04:27:21.808000" elapsed="0.078000"/>
</test>
<test id="s1-t8" name="Check Recon Namespace Summary Root" line="122">
<kw name="Wait For Summary">
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Test Summary">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-02-01T04:27:21.891000" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg time="2024-02-01T04:27:21.900000" level="INFO">${rc} = 0</msg>
<msg time="2024-02-01T04:27:21.900000" level="INFO">${output} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"INITIALIZING"}</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-02-01T04:27:21.890000" elapsed="0.010000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-02-01T04:27:21.901000" level="INFO">{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"INITIALIZING"}</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-02-01T04:27:21.901000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-02-01T04:27:21.902000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-02-01T04:27:21.901000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-02-01T04:27:21.889000" elapsed="0.013000"/>
</kw>
<msg time="2024-02-01T04:27:21.902000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-02-01T04:27:21.889000" elapsed="0.013000"/>
</kw>
<msg time="2024-02-01T04:27:21.902000" level="INFO">${result} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"INITIALIZING"}</msg>
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<status status="PASS" start="2024-02-01T04:27:21.889000" elapsed="0.013000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-02-01T04:27:21.903000" level="FAIL">'{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"INITIALIZING"}' does not contain '"status":"OK"'</msg>
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-02-01T04:27:21.902000" elapsed="0.001000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" start="2024-02-01T04:27:21.903000" elapsed="0.000000"/>
</kw>
<arg>${url}</arg>
<arg>${expected}</arg>
<status status="FAIL" start="2024-02-01T04:27:21.888000" elapsed="0.015000"/>
</kw>
<kw name="Test Summary">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-02-01T04:27:31.907000" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg time="2024-02-01T04:27:31.920000" level="INFO">${rc} = 0</msg>
<msg time="2024-02-01T04:27:31.920000" level="INFO">${output} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"INITIALIZING"}</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-02-01T04:27:31.905000" elapsed="0.015000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-02-01T04:27:31.921000" level="INFO">{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"INITIALIZING"}</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-02-01T04:27:31.920000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-02-01T04:27:31.921000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-02-01T04:27:31.921000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-02-01T04:27:31.905000" elapsed="0.017000"/>
</kw>
<msg time="2024-02-01T04:27:31.922000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-02-01T04:27:31.905000" elapsed="0.017000"/>
</kw>
<msg time="2024-02-01T04:27:31.922000" level="INFO">${result} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"INITIALIZING"}</msg>
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<status status="PASS" start="2024-02-01T04:27:31.904000" elapsed="0.018000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-02-01T04:27:31.923000" level="FAIL">'{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"INITIALIZING"}' does not contain '"status":"OK"'</msg>
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-02-01T04:27:31.922000" elapsed="0.001000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" start="2024-02-01T04:27:31.923000" elapsed="0.000000"/>
</kw>
<arg>${url}</arg>
<arg>${expected}</arg>
<status status="FAIL" start="2024-02-01T04:27:31.903000" elapsed="0.020000"/>
</kw>
<kw name="Test Summary">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-02-01T04:27:41.927000" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg time="2024-02-01T04:27:41.938000" level="INFO">${rc} = 0</msg>
<msg time="2024-02-01T04:27:41.938000" level="INFO">${output} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"INITIALIZING"}</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-02-01T04:27:41.925000" elapsed="0.013000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-02-01T04:27:41.939000" level="INFO">{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"INITIALIZING"}</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-02-01T04:27:41.939000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-02-01T04:27:41.939000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-02-01T04:27:41.939000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-02-01T04:27:41.925000" elapsed="0.015000"/>
</kw>
<msg time="2024-02-01T04:27:41.940000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-02-01T04:27:41.924000" elapsed="0.016000"/>
</kw>
<msg time="2024-02-01T04:27:41.940000" level="INFO">${result} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"INITIALIZING"}</msg>
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<status status="PASS" start="2024-02-01T04:27:41.924000" elapsed="0.016000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-02-01T04:27:41.941000" level="FAIL">'{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"INITIALIZING"}' does not contain '"status":"OK"'</msg>
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-02-01T04:27:41.940000" elapsed="0.001000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" start="2024-02-01T04:27:41.941000" elapsed="0.000000"/>
</kw>
<arg>${url}</arg>
<arg>${expected}</arg>
<status status="FAIL" start="2024-02-01T04:27:41.923000" elapsed="0.018000"/>
</kw>
<kw name="Test Summary">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-02-01T04:27:51.945000" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg time="2024-02-01T04:27:51.982000" level="INFO">${rc} = 0</msg>
<msg time="2024-02-01T04:27:51.982000" level="INFO">${output} = {"path":"","type":"ROOT","countStats":{"numVolume":2,"numBucket":1,"numDir":2,"numKey":2},"objectInfo":{"metadata":null,"name":null,"quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"creationTim...</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-02-01T04:27:51.943000" elapsed="0.039000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-02-01T04:27:51.983000" level="INFO">{"path":"","type":"ROOT","countStats":{"numVolume":2,"numBucket":1,"numDir":2,"numKey":2},"objectInfo":{"metadata":null,"name":null,"quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"creationTime":0,"modificationTime":0,"acls":null},"status":"OK"}</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-02-01T04:27:51.982000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-02-01T04:27:51.983000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-02-01T04:27:51.983000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-02-01T04:27:51.943000" elapsed="0.041000"/>
</kw>
<msg time="2024-02-01T04:27:51.984000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-02-01T04:27:51.943000" elapsed="0.041000"/>
</kw>
<msg time="2024-02-01T04:27:51.984000" level="INFO">${result} = {"path":"","type":"ROOT","countStats":{"numVolume":2,"numBucket":1,"numDir":2,"numKey":2},"objectInfo":{"metadata":null,"name":null,"quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"creationTim...</msg>
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<status status="PASS" start="2024-02-01T04:27:51.942000" elapsed="0.042000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-02-01T04:27:51.984000" elapsed="0.000000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-02-01T04:27:51.985000" elapsed="0.000000"/>
</kw>
<arg>${url}</arg>
<arg>${expected}</arg>
<status status="PASS" start="2024-02-01T04:27:51.941000" elapsed="0.044000"/>
</kw>
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-02-01T04:27:21.888000" elapsed="30.097000"/>
</kw>
<arg>${SUMMARY_URL}?path=/</arg>
<arg>ROOT</arg>
<status status="PASS" start="2024-02-01T04:27:21.887000" elapsed="30.098000"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" start="2024-02-01T04:27:21.887000" elapsed="30.098000"/>
</test>
<test id="s1-t9" name="Check Recon Namespace Summary Volume" line="125">
<kw name="Wait For Summary">
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Test Summary">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-02-01T04:27:51.990000" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-dokdo 2&gt;&amp;1'.</msg>
<msg time="2024-02-01T04:27:52.018000" level="INFO">${rc} = 0</msg>
<msg time="2024-02-01T04:27:52.018000" level="INFO">${output} = {"path":"","type":"VOLUME","countStats":{"numVolume":-1,"numBucket":1,"numDir":2,"numKey":2},"objectInfo":{"metadata":{},"name":"vol-dokdo","quotaInBytes":-1,"quotaInNamespace":-1,"usedNamespace":1,"c...</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-02-01T04:27:51.989000" elapsed="0.030000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-02-01T04:27:52.019000" level="INFO">{"path":"","type":"VOLUME","countStats":{"numVolume":-1,"numBucket":1,"numDir":2,"numKey":2},"objectInfo":{"metadata":{},"name":"vol-dokdo","quotaInBytes":-1,"quotaInNamespace":-1,"usedNamespace":1,"creationTime":1706761628076,"modificationTime":1706761628076,"acls":[{"type":"USER","name":"hadoop","scope":"ACCESS","aclList":["ALL"]},{"type":"GROUP","name":"hadoop","scope":"ACCESS","aclList":["ALL"]}],"admin":"hadoop","owner":"hadoop","volume":"vol-dokdo"},"status":"OK"}</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-02-01T04:27:52.019000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-02-01T04:27:52.020000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-02-01T04:27:52.020000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-02-01T04:27:51.988000" elapsed="0.032000"/>
</kw>
<msg time="2024-02-01T04:27:52.020000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-02-01T04:27:51.988000" elapsed="0.032000"/>
</kw>
<msg time="2024-02-01T04:27:52.021000" level="INFO">${result} = {"path":"","type":"VOLUME","countStats":{"numVolume":-1,"numBucket":1,"numDir":2,"numKey":2},"objectInfo":{"metadata":{},"name":"vol-dokdo","quotaInBytes":-1,"quotaInNamespace":-1,"usedNamespace":1,"c...</msg>
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<status status="PASS" start="2024-02-01T04:27:51.988000" elapsed="0.033000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-02-01T04:27:52.021000" elapsed="0.000000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-02-01T04:27:52.021000" elapsed="0.000000"/>
</kw>
<arg>${url}</arg>
<arg>${expected}</arg>
<status status="PASS" start="2024-02-01T04:27:51.987000" elapsed="0.035000"/>
</kw>
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-02-01T04:27:51.987000" elapsed="0.035000"/>
</kw>
<arg>${SUMMARY_URL}?path=/${VOLUME}</arg>
<arg>VOLUME</arg>
<status status="PASS" start="2024-02-01T04:27:51.986000" elapsed="0.036000"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" start="2024-02-01T04:27:51.986000" elapsed="0.036000"/>
</test>
<test id="s1-t10" name="Check Recon Namespace Summary Bucket" line="128">
<kw name="Wait For Summary">
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Test Summary">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-02-01T04:27:52.028000" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-dokdo/buc-jmgdz 2&gt;&amp;1'.</msg>
<msg time="2024-02-01T04:27:52.055000" level="INFO">${rc} = 0</msg>
<msg time="2024-02-01T04:27:52.055000" level="INFO">${output} = {"path":"","type":"BUCKET","countStats":{"numVolume":-1,"numBucket":-1,"numDir":2,"numKey":2},"objectInfo":{"versioningEnabled":false,"metadata":{},"name":"buc-jmgdz","quotaInBytes":-1,"quotaInNamespa...</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-02-01T04:27:52.026000" elapsed="0.029000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-02-01T04:27:52.055000" level="INFO">{"path":"","type":"BUCKET","countStats":{"numVolume":-1,"numBucket":-1,"numDir":2,"numKey":2},"objectInfo":{"versioningEnabled":false,"metadata":{},"name":"buc-jmgdz","quotaInBytes":-1,"quotaInNamespace":-1,"usedNamespace":4,"creationTime":1706761631159,"modificationTime":1706761631159,"acls":[{"type":"USER","name":"hadoop","scope":"ACCESS","aclList":["ALL"]},{"type":"GROUP","name":"hadoop","scope":"ACCESS","aclList":["ALL"]}],"volumeName":"vol-dokdo","storageType":"DISK","versioning":false,"usedBytes":30318,"encryptionInfo":null,"replicationConfigInfo":null,"sourceVolume":null,"sourceBucket":null,"bucketLayout":"LEGACY","owner":"hadoop"},"status":"OK"}</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-02-01T04:27:52.055000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-02-01T04:27:52.056000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-02-01T04:27:52.056000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-02-01T04:27:52.025000" elapsed="0.031000"/>
</kw>
<msg time="2024-02-01T04:27:52.056000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-02-01T04:27:52.025000" elapsed="0.031000"/>
</kw>
<msg time="2024-02-01T04:27:52.056000" level="INFO">${result} = {"path":"","type":"BUCKET","countStats":{"numVolume":-1,"numBucket":-1,"numDir":2,"numKey":2},"objectInfo":{"versioningEnabled":false,"metadata":{},"name":"buc-jmgdz","quotaInBytes":-1,"quotaInNamespa...</msg>
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<status status="PASS" start="2024-02-01T04:27:52.025000" elapsed="0.031000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-02-01T04:27:52.057000" elapsed="0.000000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-02-01T04:27:52.057000" elapsed="0.000000"/>
</kw>
<arg>${url}</arg>
<arg>${expected}</arg>
<status status="PASS" start="2024-02-01T04:27:52.024000" elapsed="0.033000"/>
</kw>
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-02-01T04:27:52.024000" elapsed="0.033000"/>
</kw>
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}</arg>
<arg>BUCKET</arg>
<status status="PASS" start="2024-02-01T04:27:52.023000" elapsed="0.034000"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" start="2024-02-01T04:27:52.022000" elapsed="0.036000"/>
</test>
<test id="s1-t11" name="Check Recon Namespace Summary Key" line="131">
<kw name="Wait For Summary">
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Test Summary">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-02-01T04:27:52.062000" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-dokdo/buc-jmgdz/file1 2&gt;&amp;1'.</msg>
<msg time="2024-02-01T04:27:52.100000" level="INFO">${rc} = 0</msg>
<msg time="2024-02-01T04:27:52.100000" level="INFO">${output} = {"path":"","type":"KEY","countStats":{"numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0},"objectInfo":{"fileName":"file1","file":true,"metadata":{},"name":"file1","quotaInBytes":0,"quotaInNamespace...</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-02-01T04:27:52.061000" elapsed="0.039000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-02-01T04:27:52.101000" level="INFO">{"path":"","type":"KEY","countStats":{"numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0},"objectInfo":{"fileName":"file1","file":true,"metadata":{},"name":"file1","quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"creationTime":1706761634394,"modificationTime":1706761636288,"acls":[{"type":"USER","name":"hadoop","scope":"ACCESS","aclList":["ALL"]},{"type":"GROUP","name":"hadoop","scope":"ACCESS","aclList":["ALL"]}],"volumeName":"vol-dokdo","bucketName":"buc-jmgdz","keyName":"file1","dataSize":4068,"keyLocationVersions":[{"version":0,"locationVersionMap":{"0":[{"blockID":{"containerBlockID":{"containerID":1,"localID":113750153625600001},"blockCommitSequenceId":2,"containerID":1,"localID":113750153625600001},"length":4068,"offset":0,"token":null,"createVersion":0,"pipeline":null,"partNumber":0,"containerID":1,"localID":113750153625600001,"blockCommitSequenceId":2}]},"blocksLatestVersionOnly":[{"blockID":{"containerBlockID":{"containerID":1,"localID":113750153625600001},"blockCommitSequenceId":2,"containerID":1,"localID":113750153625600001},"length":4068,"offset":0,"token":null,"createVersion":0,"pipeline":null,"partNumber":0,"containerID":1,"localID":113750153625600001,"blockCommitSequenceId":2}],"locationLists":[[{"blockID":{"containerBlockID":{"containerID":1,"localID":113750153625600001},"blockCommitSequenceId":2,"containerID":1,"localID":113750153625600001},"length":4068,"offset":0,"token":null,"createVersion":0,"pipeline":null,"partNumber":0,"containerID":1,"localID":113750153625600001,"blockCommitSequenceId":2}]],"locationListCount":1,"locationList":[{"blockID":{"containerBlockID":{"containerID":1,"localID":113750153625600001},"blockCommitSequenceId":2,"containerID":1,"localID":113750153625600001},"length":4068,"offset":0,"token":null,"createVersion":0,"pipeline":null,"partNumber":0,"containerID":1,"localID":113750153625600001,"blockCommitSequenceId":2}],"multipartKey":false}],"replicationConfig":{"replicationFactor":"THREE","requiredNodes":3,"replicationType":"RATIS"},"encInfo":null},"status":"OK"}</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-02-01T04:27:52.100000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-02-01T04:27:52.102000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-02-01T04:27:52.101000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-02-01T04:27:52.061000" elapsed="0.041000"/>
</kw>
<msg time="2024-02-01T04:27:52.102000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-02-01T04:27:52.060000" elapsed="0.042000"/>
</kw>
<msg time="2024-02-01T04:27:52.102000" level="INFO">${result} = {"path":"","type":"KEY","countStats":{"numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0},"objectInfo":{"fileName":"file1","file":true,"metadata":{},"name":"file1","quotaInBytes":0,"quotaInNamespace...</msg>
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<status status="PASS" start="2024-02-01T04:27:52.060000" elapsed="0.042000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-02-01T04:27:52.102000" elapsed="0.001000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-02-01T04:27:52.103000" elapsed="0.000000"/>
</kw>
<arg>${url}</arg>
<arg>${expected}</arg>
<status status="PASS" start="2024-02-01T04:27:52.060000" elapsed="0.043000"/>
</kw>
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-02-01T04:27:52.059000" elapsed="0.044000"/>
</kw>
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}/file1</arg>
<arg>KEY</arg>
<status status="PASS" start="2024-02-01T04:27:52.059000" elapsed="0.044000"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" start="2024-02-01T04:27:52.058000" elapsed="0.045000"/>
</test>
<test id="s1-t12" name="Check Recon Namespace Summary Directory" line="134">
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Wait For Summary">
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Test Summary">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-02-01T04:27:52.109000" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-dokdo/buc-jmgdz/dir1/dir2/ 2&gt;&amp;1'.</msg>
<msg time="2024-02-01T04:27:52.126000" level="INFO">${rc} = 0</msg>
<msg time="2024-02-01T04:27:52.127000" level="INFO">${output} = {"path":"","type":"DIRECTORY","countStats":{"numVolume":-1,"numBucket":-1,"numDir":0,"numKey":1},"objectInfo":{"metadata":{},"name":"dir1","quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"crea...</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-02-01T04:27:52.107000" elapsed="0.020000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-02-01T04:27:52.127000" level="INFO">{"path":"","type":"DIRECTORY","countStats":{"numVolume":-1,"numBucket":-1,"numDir":0,"numKey":1},"objectInfo":{"metadata":{},"name":"dir1","quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"creationTime":0,"modificationTime":0,"acls":[]},"status":"OK"}</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-02-01T04:27:52.127000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-02-01T04:27:52.128000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-02-01T04:27:52.128000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-02-01T04:27:52.107000" elapsed="0.021000"/>
</kw>
<msg time="2024-02-01T04:27:52.128000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-02-01T04:27:52.107000" elapsed="0.021000"/>
</kw>
<msg time="2024-02-01T04:27:52.129000" level="INFO">${result} = {"path":"","type":"DIRECTORY","countStats":{"numVolume":-1,"numBucket":-1,"numDir":0,"numKey":1},"objectInfo":{"metadata":{},"name":"dir1","quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"crea...</msg>
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<status status="PASS" start="2024-02-01T04:27:52.106000" elapsed="0.023000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-02-01T04:27:52.129000" elapsed="0.000000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-02-01T04:27:52.129000" elapsed="0.000000"/>
</kw>
<arg>${url}</arg>
<arg>${expected}</arg>
<status status="PASS" start="2024-02-01T04:27:52.106000" elapsed="0.023000"/>
</kw>
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-02-01T04:27:52.105000" elapsed="0.025000"/>
</kw>
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}/dir1/dir2/</arg>
<arg>DIRECTORY</arg>
<status status="PASS" start="2024-02-01T04:27:52.105000" elapsed="0.025000"/>
</kw>
<arg>'${BUCKET_LAYOUT}' == 'LEGACY'</arg>
<arg>Wait For Summary</arg>
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}/dir1/dir2/</arg>
<arg>DIRECTORY</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-02-01T04:27:52.104000" elapsed="0.026000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>'${BUCKET_LAYOUT}' == 'FILE_SYSTEM_OPTIMIZED'</arg>
<arg>Wait For Summary</arg>
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}/dir1/dir2</arg>
<arg>DIRECTORY</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-02-01T04:27:52.130000" elapsed="0.000000"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" start="2024-02-01T04:27:52.104000" elapsed="0.026000"/>
</test>
<test id="s1-t13" name="Check Recon Namespace Disk Usage" line="138">
<kw name="Wait For Summary">
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Test Summary">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-02-01T04:27:52.135000" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/du?path=/vol-dokdo/buc-jmgdz&amp;files=true&amp;replica=true 2&gt;&amp;1'.</msg>
<msg time="2024-02-01T04:27:52.149000" level="INFO">${rc} = 0</msg>
<msg time="2024-02-01T04:27:52.149000" level="INFO">${output} = {"status":"OK","path":"/vol-dokdo/buc-jmgdz","size":10106,"sizeWithReplica":-1,"subPathCount":1,"subPaths":[{"key":false,"path":"/vol-dokdo/buc-jmgdz/dir1","size":6038,"sizeWithReplica":-1,"isKey":fal...</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-02-01T04:27:52.134000" elapsed="0.015000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-02-01T04:27:52.150000" level="INFO">{"status":"OK","path":"/vol-dokdo/buc-jmgdz","size":10106,"sizeWithReplica":-1,"subPathCount":1,"subPaths":[{"key":false,"path":"/vol-dokdo/buc-jmgdz/dir1","size":6038,"sizeWithReplica":-1,"isKey":false}],"sizeDirectKey":4068}</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-02-01T04:27:52.149000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-02-01T04:27:52.151000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-02-01T04:27:52.150000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-02-01T04:27:52.133000" elapsed="0.018000"/>
</kw>
<msg time="2024-02-01T04:27:52.151000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-02-01T04:27:52.133000" elapsed="0.018000"/>
</kw>
<msg time="2024-02-01T04:27:52.151000" level="INFO">${result} = {"status":"OK","path":"/vol-dokdo/buc-jmgdz","size":10106,"sizeWithReplica":-1,"subPathCount":1,"subPaths":[{"key":false,"path":"/vol-dokdo/buc-jmgdz/dir1","size":6038,"sizeWithReplica":-1,"isKey":fal...</msg>
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<status status="PASS" start="2024-02-01T04:27:52.133000" elapsed="0.018000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-02-01T04:27:52.152000" elapsed="0.000000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-02-01T04:27:52.152000" elapsed="0.000000"/>
</kw>
<arg>${url}</arg>
<arg>${expected}</arg>
<status status="PASS" start="2024-02-01T04:27:52.132000" elapsed="0.021000"/>
</kw>
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-02-01T04:27:52.132000" elapsed="0.021000"/>
</kw>
<arg>${DISK_USAGE_URL}?path=/${VOLUME}/${BUCKET}&amp;files=true&amp;replica=true</arg>
<arg>\"sizeWithReplica\"</arg>
<status status="PASS" start="2024-02-01T04:27:52.131000" elapsed="0.022000"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" start="2024-02-01T04:27:52.131000" elapsed="0.022000"/>
</test>
<test id="s1-t14" name="Check Recon Namespace Volume Quota Usage" line="141">
<kw name="Wait For Summary">
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Test Summary">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-02-01T04:27:52.158000" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/quota?path=/vol-dokdo 2&gt;&amp;1'.</msg>
<msg time="2024-02-01T04:27:52.174000" level="INFO">${rc} = 0</msg>
<msg time="2024-02-01T04:27:52.174000" level="INFO">${output} = {"allowed":-1,"used":10106,"status":"OK"}</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-02-01T04:27:52.156000" elapsed="0.018000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-02-01T04:27:52.175000" level="INFO">{"allowed":-1,"used":10106,"status":"OK"}</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-02-01T04:27:52.174000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-02-01T04:27:52.175000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-02-01T04:27:52.175000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-02-01T04:27:52.156000" elapsed="0.019000"/>
</kw>
<msg time="2024-02-01T04:27:52.176000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-02-01T04:27:52.156000" elapsed="0.020000"/>
</kw>
<msg time="2024-02-01T04:27:52.176000" level="INFO">${result} = {"allowed":-1,"used":10106,"status":"OK"}</msg>
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<status status="PASS" start="2024-02-01T04:27:52.155000" elapsed="0.021000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-02-01T04:27:52.176000" elapsed="0.000000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-02-01T04:27:52.176000" elapsed="0.001000"/>
</kw>
<arg>${url}</arg>
<arg>${expected}</arg>
<status status="PASS" start="2024-02-01T04:27:52.155000" elapsed="0.022000"/>
</kw>
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-02-01T04:27:52.155000" elapsed="0.022000"/>
</kw>
<arg>${QUOTA_USAGE_URL}?path=/${VOLUME}</arg>
<arg>\"used\"</arg>
<status status="PASS" start="2024-02-01T04:27:52.154000" elapsed="0.023000"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" start="2024-02-01T04:27:52.153000" elapsed="0.024000"/>
</test>
<test id="s1-t15" name="Check Recon Namespace Bucket Quota Usage" line="144">
<kw name="Wait For Summary">
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Test Summary">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-02-01T04:27:52.182000" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/quota?path=/vol-dokdo/buc-jmgdz 2&gt;&amp;1'.</msg>
<msg time="2024-02-01T04:27:52.194000" level="INFO">${rc} = 0</msg>
<msg time="2024-02-01T04:27:52.194000" level="INFO">${output} = {"allowed":-1,"used":10106,"status":"OK"}</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-02-01T04:27:52.181000" elapsed="0.013000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-02-01T04:27:52.195000" level="INFO">{"allowed":-1,"used":10106,"status":"OK"}</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-02-01T04:27:52.194000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-02-01T04:27:52.195000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-02-01T04:27:52.195000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-02-01T04:27:52.180000" elapsed="0.015000"/>
</kw>
<msg time="2024-02-01T04:27:52.196000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-02-01T04:27:52.180000" elapsed="0.016000"/>
</kw>
<msg time="2024-02-01T04:27:52.196000" level="INFO">${result} = {"allowed":-1,"used":10106,"status":"OK"}</msg>
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<status status="PASS" start="2024-02-01T04:27:52.180000" elapsed="0.016000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-02-01T04:27:52.196000" elapsed="0.000000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-02-01T04:27:52.196000" elapsed="0.001000"/>
</kw>
<arg>${url}</arg>
<arg>${expected}</arg>
<status status="PASS" start="2024-02-01T04:27:52.179000" elapsed="0.018000"/>
</kw>
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-02-01T04:27:52.179000" elapsed="0.018000"/>
</kw>
<arg>${QUOTA_USAGE_URL}?path=/${VOLUME}/${BUCKET}</arg>
<arg>\"used\"</arg>
<status status="PASS" start="2024-02-01T04:27:52.178000" elapsed="0.019000"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" start="2024-02-01T04:27:52.178000" elapsed="0.019000"/>
</test>
<test id="s1-t16" name="Check Recon Namespace File Size Distribution Root" line="147">
<kw name="Wait For Summary">
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Test Summary">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-02-01T04:27:52.202000" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg time="2024-02-01T04:27:52.213000" level="INFO">${rc} = 0</msg>
<msg time="2024-02-01T04:27:52.213000" level="INFO">${output} = {"dist":[0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"status":"OK"}</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-02-01T04:27:52.201000" elapsed="0.012000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-02-01T04:27:52.214000" level="INFO">{"dist":[0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"status":"OK"}</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-02-01T04:27:52.214000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-02-01T04:27:52.214000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-02-01T04:27:52.214000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-02-01T04:27:52.200000" elapsed="0.015000"/>
</kw>
<msg time="2024-02-01T04:27:52.215000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-02-01T04:27:52.200000" elapsed="0.015000"/>
</kw>
<msg time="2024-02-01T04:27:52.215000" level="INFO">${result} = {"dist":[0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"status":"OK"}</msg>
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<status status="PASS" start="2024-02-01T04:27:52.199000" elapsed="0.016000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-02-01T04:27:52.215000" elapsed="0.000000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-02-01T04:27:52.215000" elapsed="0.001000"/>
</kw>
<arg>${url}</arg>
<arg>${expected}</arg>
<status status="PASS" start="2024-02-01T04:27:52.199000" elapsed="0.017000"/>
</kw>
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-02-01T04:27:52.199000" elapsed="0.017000"/>
</kw>
<arg>${FILE_SIZE_DIST_URL}?path=/</arg>
<arg>\"dist\"</arg>
<status status="PASS" start="2024-02-01T04:27:52.198000" elapsed="0.018000"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" start="2024-02-01T04:27:52.198000" elapsed="0.018000"/>
</test>
<doc>Smoke test for Recon Namespace Summary Endpoint for LEGACY buckets.</doc>
<status status="PASS" start="2024-02-01T04:27:04.795000" elapsed="47.422000"/>
</suite>
<statistics>
<total>
<stat pass="16" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="16" fail="0" skip="0" id="s1" name="ozone-legacy-bucket">ozone-legacy-bucket</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
