<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 7.0.1 (Python 3.8.10 on linux)" generated="2024-07-01T09:16:45.031549" rpa="false" schemaversion="5">
<suite id="s1" name="ozone-topology">
<suite id="s1-s1" name="Basic" source="/opt/hadoop/smoketest/basic/basic.robot">
<test id="s1-s1-t1" name="Check webui static resources" line="29">
<kw name="Run Keyword If" owner="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-07-01T09:13:09.639000" elapsed="0.001000"/>
</kw>
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-07-01T09:13:09.644000" level="INFO">Running command 'curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js 2&gt;&amp;1'.</msg>
<msg time="2024-07-01T09:13:09.747000" level="INFO">${rc} = 0</msg>
<msg time="2024-07-01T09:13:09.747000" level="INFO">${output} = HTTP/1.1 200 OK
Date: Mon, 01 Jul 2024 09:13:09 GMT
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
X-FRAME-OPTIONS: SAMEORIGIN
Last-Modified: Mon, 01 Jul 2024 08:48:56 GMT
Content-Typ...</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-07-01T09:13:09.641000" elapsed="0.106000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-07-01T09:13:09.749000" level="INFO">HTTP/1.1 200 OK
Date: Mon, 01 Jul 2024 09:13:09 GMT
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
X-FRAME-OPTIONS: SAMEORIGIN
Last-Modified: Mon, 01 Jul 2024 08:48:56 GMT
Content-Type: application/javascript
Accept-Ranges: bytes
Content-Length: 39680
</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-07-01T09:13:09.748000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-07-01T09:13:09.749000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-07-01T09:13:09.749000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-07-01T09:13:09.641000" elapsed="0.108000"/>
</kw>
<msg time="2024-07-01T09:13:09.750000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-07-01T09:13:09.641000" elapsed="0.109000"/>
</kw>
<msg time="2024-07-01T09:13:09.750000" level="INFO">${result} = HTTP/1.1 200 OK
Date: Mon, 01 Jul 2024 09:13:09 GMT
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
X-FRAME-OPTIONS: SAMEORIGIN
Last-Modified: Mon, 01 Jul 2024 08:48:56 GMT
Content-Typ...</msg>
<var>${result}</var>
<arg>curl --negotiate -u : -s -I http://${SCM}:9876/static/bootstrap-3.4.1/js/bootstrap.min.js</arg>
<status status="PASS" start="2024-07-01T09:13:09.640000" elapsed="0.110000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-07-01T09:13:09.750000" elapsed="0.000000"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" start="2024-07-01T09:13:09.638000" elapsed="0.113000"/>
</test>
<test id="s1-s1-t2" name="Basic Freon smoketest" line="34">
<kw name="Run Keyword If" owner="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-07-01T09:13:09.764000" elapsed="0.000000"/>
</kw>
<kw name="Generate Random String" owner="String">
<msg time="2024-07-01T09:13:09.765000" level="INFO">${random} = zs5GcTqYqj</msg>
<var>${random}</var>
<arg>10</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<status status="PASS" start="2024-07-01T09:13:09.764000" elapsed="0.001000"/>
</kw>
<kw name="Freon OCKG" owner="freon">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-07-01T09:13:09.782000" level="INFO">Running command 'ozone freon ockg  -t 1 -n1 -p zs5GcTqYqj  2&gt;&amp;1'.</msg>
<msg time="2024-07-01T09:13:23.666000" level="INFO">${rc} = 0</msg>
<msg time="2024-07-01T09:13:23.666000" level="INFO">${output} = 2024-07-01 09:13:13,046 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-07-01 09:13:13,132 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-07-01T09:13:09.774000" elapsed="13.892000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-07-01T09:13:23.667000" level="INFO">2024-07-01 09:13:13,046 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-07-01 09:13:13,132 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2024-07-01 09:13:13,132 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2024-07-01 09:13:13,191 [main] INFO freon.BaseFreonGenerator: Executing test with prefix zs5GcTqYqj and number-of-tests 1
2024-07-01 09:13:13,227 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2024-07-01 09:13:14,227 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2024-07-01 09:13:15,227 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2024-07-01 09:13:15,956 [main] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om1 is not the leader. Could not determine the leader node.
	at org.apache.hadoop.ozone.om.ratis.OzoneManagerRatisServer.newOMNotLeaderException(OzoneManagerRatisServer.java:783)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createLeaderErrorException(OzoneManagerProtocolServerSideTranslatorPB.java:270)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitReadRequestToOM(OzoneManagerProtocolServerSideTranslatorPB.java:263)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.internalProcessRequest(OzoneManagerProtocolServerSideTranslatorPB.java:201)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:161)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:89)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:152)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server.processCall(ProtobufRpcEngine.java:484)
	at org.apache.hadoop.ipc.ProtobufRpcEngine2$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine2.java:595)
	at org.apache.hadoop.ipc.ProtobufRpcEngine2$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine2.java:573)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1227)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:1094)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:1017)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:439)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1899)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:3048)
, while invoking $Proxy25.submitRequest over nodeId=null,nodeAddress=om:9862 after 1 failover attempts. Trying to failover after sleeping for 4000ms. Current retry count: 1.
2024-07-01 09:13:16,228 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2024-07-01 09:13:17,228 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2024-07-01 09:13:18,229 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2024-07-01 09:13:19,229 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2024-07-01 09:13:20,229 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2024-07-01 09:13:20,664 [main] INFO rpc.RpcClient: Creating Volume: vol1, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1
2024-07-01 09:13:20,760 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption set to false, Replication Type set to server-side default replication type, Namespace Quota set to -1, Space Quota set to -1 
2024-07-01 09:13:21,118 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2024-07-01 09:13:21,157 [pool-2-thread-1] INFO scm.XceiverClientRatis: WatchType ALL_COMMITTED. Majority 2, 
2024-07-01 09:13:21,230 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2024-07-01 09:13:21,364 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.dropwizard3.Dm3MetricRegistriesImpl
2024-07-01 09:13:22,233 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2024-07-01 09:13:23,234 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2024-07-01 09:13:23,259 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1, min=1690.106861, max=1690.106861, mean=1690.106861, stddev=0.0, median=1690.106861, p75=1690.106861, p95=1690.106861, p98=1690.106861, p99=1690.106861, p999=1690.106861, mean_rate=0.4069327299634316, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2024-07-01 09:13:23,259 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 10
2024-07-01 09:13:23,259 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2024-07-01 09:13:23,260 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-07-01T09:13:23.666000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-07-01T09:13:23.668000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-07-01T09:13:23.667000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-07-01T09:13:09.774000" elapsed="13.894000"/>
</kw>
<msg time="2024-07-01T09:13:23.668000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-07-01T09:13:09.767000" elapsed="13.901000"/>
</kw>
<msg time="2024-07-01T09:13:23.668000" level="INFO">${result} = 2024-07-01 09:13:13,046 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-07-01 09:13:13,132 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<status status="PASS" start="2024-07-01T09:13:09.766000" elapsed="13.902000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-07-01T09:13:23.668000" elapsed="0.001000"/>
</kw>
<arg>prefix=${random}</arg>
<status status="PASS" start="2024-07-01T09:13:09.765000" elapsed="13.904000"/>
</kw>
<kw name="Freon OCKV" owner="freon">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-07-01T09:13:23.672000" level="INFO">Running command 'ozone freon ockv  -t 1 -n1 -p zs5GcTqYqj  2&gt;&amp;1'.</msg>
<msg time="2024-07-01T09:13:29.384000" level="INFO">${rc} = 0</msg>
<msg time="2024-07-01T09:13:29.384000" level="INFO">${output} = 2024-07-01 09:13:25,271 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-07-01 09:13:25,359 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-07-01T09:13:23.671000" elapsed="5.713000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-07-01T09:13:29.385000" level="INFO">2024-07-01 09:13:25,271 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-07-01 09:13:25,359 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2024-07-01 09:13:25,359 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2024-07-01 09:13:25,436 [main] INFO freon.BaseFreonGenerator: Executing test with prefix zs5GcTqYqj and number-of-tests 1
2024-07-01 09:13:25,488 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2024-07-01 09:13:26,489 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2024-07-01 09:13:27,337 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2024-07-01 09:13:27,489 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2024-07-01 09:13:28,489 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2024-07-01 09:13:29,016 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-validate, count=1, min=45.215654, max=45.215654, mean=45.215654, stddev=0.0, median=45.215654, p75=45.215654, p95=45.215654, p98=45.215654, p99=45.215654, p999=45.215654, mean_rate=0.9794586693740941, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2024-07-01 09:13:29,016 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 4
2024-07-01 09:13:29,016 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2024-07-01 09:13:29,016 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-07-01T09:13:29.384000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-07-01T09:13:29.385000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-07-01T09:13:29.385000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-07-01T09:13:23.671000" elapsed="5.714000"/>
</kw>
<msg time="2024-07-01T09:13:29.385000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-07-01T09:13:23.670000" elapsed="5.716000"/>
</kw>
<msg time="2024-07-01T09:13:29.386000" level="INFO">${result} = 2024-07-01 09:13:25,271 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-07-01 09:13:25,359 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<var>${result}</var>
<arg>ozone freon ockv ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<status status="PASS" start="2024-07-01T09:13:23.670000" elapsed="5.716000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-07-01T09:13:29.386000" elapsed="0.000000"/>
</kw>
<arg>prefix=${random}</arg>
<status status="PASS" start="2024-07-01T09:13:23.669000" elapsed="5.717000"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" start="2024-07-01T09:13:09.763000" elapsed="19.624000"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" start="2024-07-01T09:13:09.537000" elapsed="19.850000"/>
</suite>
<suite id="s1-s2" name="Cli" source="/opt/hadoop/smoketest/topology/cli.robot">
<test id="s1-s2-t1" name="Run printTopology" line="34">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-07-01T09:13:29.942000" level="INFO">Running command 'ozone admin printTopology 2&gt;&amp;1'.</msg>
<msg time="2024-07-01T09:13:32.646000" level="INFO">${rc} = 0</msg>
<msg time="2024-07-01T09:13:32.646000" level="INFO">${output} = State = HEALTHY
 10.5.0.8(ozone-topology-datanode_5-1.ozone-topology_net):HTTP=9882,CLIENT_RPC=19864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /ra...</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-07-01T09:13:29.940000" elapsed="2.706000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-07-01T09:13:32.647000" level="INFO">State = HEALTHY
 10.5.0.8(ozone-topology-datanode_5-1.ozone-topology_net):HTTP=9882,CLIENT_RPC=19864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.5(ozone-topology-datanode_2-1.ozone-topology_net):HTTP=9882,CLIENT_RPC=19864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.7(ozone-topology-datanode_4-1.ozone-topology_net):HTTP=9882,CLIENT_RPC=19864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.4(ozone-topology-datanode_1-1.ozone-topology_net):HTTP=9882,CLIENT_RPC=19864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.6(ozone-topology-datanode_3-1.ozone-topology_net):HTTP=9882,CLIENT_RPC=19864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.9(ozone-topology-datanode_6-1.ozone-topology_net):HTTP=9882,CLIENT_RPC=19864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-07-01T09:13:32.647000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-07-01T09:13:32.648000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-07-01T09:13:32.647000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-07-01T09:13:29.940000" elapsed="2.708000"/>
</kw>
<msg time="2024-07-01T09:13:32.648000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-07-01T09:13:29.939000" elapsed="2.709000"/>
</kw>
<msg time="2024-07-01T09:13:32.648000" level="INFO">${output} = State = HEALTHY
 10.5.0.8(ozone-topology-datanode_5-1.ozone-topology_net):HTTP=9882,CLIENT_RPC=19864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /ra...</msg>
<var>${output}</var>
<arg>ozone admin printTopology</arg>
<status status="PASS" start="2024-07-01T09:13:29.939000" elapsed="2.709000"/>
</kw>
<kw name="Validate PrintTopology Output">
<kw name="Should Contain" owner="BuiltIn">
<arg>${output}</arg>
<arg>State = HEALTHY</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-07-01T09:13:32.649000" elapsed="0.000000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${output}</arg>
<arg>IN_SERVICE</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-07-01T09:13:32.649000" elapsed="0.001000"/>
</kw>
<kw name="Should Match Regexp" owner="BuiltIn">
<arg>${output}</arg>
<arg>.*ozone.*datanode[-_]\\d+.*IN_SERVICE.*rack.*</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" start="2024-07-01T09:13:32.650000" elapsed="0.000000"/>
</kw>
<arg>${output}</arg>
<status status="PASS" start="2024-07-01T09:13:32.649000" elapsed="0.001000"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" start="2024-07-01T09:13:29.939000" elapsed="2.712000"/>
</test>
<test id="s1-s2-t2" name="Run printTopology -o" line="38">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-07-01T09:13:32.654000" level="INFO">Running command 'ozone admin printTopology -o 2&gt;&amp;1'.</msg>
<msg time="2024-07-01T09:13:35.188000" level="INFO">${rc} = 0</msg>
<msg time="2024-07-01T09:13:35.188000" level="INFO">${output} = State = HEALTHY
Location: /rack1
 10.5.0.5(ozone-topology-datanode_2-1.ozone-topology_net) IN_SERVICE
 10.5.0.4(ozone-topology-datanode_1-1.ozone-topology_net) IN_SERVICE
 10.5.0.6(ozone-topology-data...</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-07-01T09:13:32.652000" elapsed="2.536000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-07-01T09:13:35.189000" level="INFO">State = HEALTHY
Location: /rack1
 10.5.0.5(ozone-topology-datanode_2-1.ozone-topology_net) IN_SERVICE
 10.5.0.4(ozone-topology-datanode_1-1.ozone-topology_net) IN_SERVICE
 10.5.0.6(ozone-topology-datanode_3-1.ozone-topology_net) IN_SERVICE
Location: /rack2
 10.5.0.8(ozone-topology-datanode_5-1.ozone-topology_net) IN_SERVICE
 10.5.0.7(ozone-topology-datanode_4-1.ozone-topology_net) IN_SERVICE
 10.5.0.9(ozone-topology-datanode_6-1.ozone-topology_net) IN_SERVICE</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-07-01T09:13:35.188000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-07-01T09:13:35.189000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-07-01T09:13:35.189000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-07-01T09:13:32.652000" elapsed="2.537000"/>
</kw>
<msg time="2024-07-01T09:13:35.190000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-07-01T09:13:32.652000" elapsed="2.538000"/>
</kw>
<msg time="2024-07-01T09:13:35.190000" level="INFO">${output} = State = HEALTHY
Location: /rack1
 10.5.0.5(ozone-topology-datanode_2-1.ozone-topology_net) IN_SERVICE
 10.5.0.4(ozone-topology-datanode_1-1.ozone-topology_net) IN_SERVICE
 10.5.0.6(ozone-topology-data...</msg>
<var>${output}</var>
<arg>ozone admin printTopology -o</arg>
<status status="PASS" start="2024-07-01T09:13:32.652000" elapsed="2.538000"/>
</kw>
<kw name="Should Match Regexp" owner="BuiltIn">
<arg>${output}</arg>
<arg>Location: /.*rack.*</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" start="2024-07-01T09:13:35.190000" elapsed="0.000000"/>
</kw>
<kw name="Should Match Regexp" owner="BuiltIn">
<arg>${output}</arg>
<arg>.*ozone.*datanode[-_]\\d+.*IN_SERVICE.*</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" start="2024-07-01T09:13:35.191000" elapsed="0.000000"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" start="2024-07-01T09:13:32.651000" elapsed="2.540000"/>
</test>
<test id="s1-s2-t3" name="Run printTopology --operational-state IN_SERVICE" line="43">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-07-01T09:13:35.195000" level="INFO">Running command 'ozone admin printTopology --operational-state IN_SERVICE 2&gt;&amp;1'.</msg>
<msg time="2024-07-01T09:13:37.960000" level="INFO">${rc} = 0</msg>
<msg time="2024-07-01T09:13:37.960000" level="INFO">${output} = State = HEALTHY
 10.5.0.8(ozone-topology-datanode_5-1.ozone-topology_net):HTTP=9882,CLIENT_RPC=19864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /ra...</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-07-01T09:13:35.193000" elapsed="2.767000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-07-01T09:13:37.961000" level="INFO">State = HEALTHY
 10.5.0.8(ozone-topology-datanode_5-1.ozone-topology_net):HTTP=9882,CLIENT_RPC=19864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.5(ozone-topology-datanode_2-1.ozone-topology_net):HTTP=9882,CLIENT_RPC=19864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.7(ozone-topology-datanode_4-1.ozone-topology_net):HTTP=9882,CLIENT_RPC=19864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.4(ozone-topology-datanode_1-1.ozone-topology_net):HTTP=9882,CLIENT_RPC=19864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.6(ozone-topology-datanode_3-1.ozone-topology_net):HTTP=9882,CLIENT_RPC=19864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.9(ozone-topology-datanode_6-1.ozone-topology_net):HTTP=9882,CLIENT_RPC=19864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-07-01T09:13:37.960000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-07-01T09:13:37.961000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-07-01T09:13:37.961000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-07-01T09:13:35.193000" elapsed="2.769000"/>
</kw>
<msg time="2024-07-01T09:13:37.962000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-07-01T09:13:35.193000" elapsed="2.769000"/>
</kw>
<msg time="2024-07-01T09:13:37.962000" level="INFO">${output} = State = HEALTHY
 10.5.0.8(ozone-topology-datanode_5-1.ozone-topology_net):HTTP=9882,CLIENT_RPC=19864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /ra...</msg>
<var>${output}</var>
<arg>ozone admin printTopology --operational-state IN_SERVICE</arg>
<status status="PASS" start="2024-07-01T09:13:35.192000" elapsed="2.770000"/>
</kw>
<kw name="Validate PrintTopology Output">
<kw name="Should Contain" owner="BuiltIn">
<arg>${output}</arg>
<arg>State = HEALTHY</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-07-01T09:13:37.963000" elapsed="0.000000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${output}</arg>
<arg>IN_SERVICE</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-07-01T09:13:37.963000" elapsed="0.000000"/>
</kw>
<kw name="Should Match Regexp" owner="BuiltIn">
<arg>${output}</arg>
<arg>.*ozone.*datanode[-_]\\d+.*IN_SERVICE.*rack.*</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" start="2024-07-01T09:13:37.963000" elapsed="0.001000"/>
</kw>
<arg>${output}</arg>
<status status="PASS" start="2024-07-01T09:13:37.962000" elapsed="0.002000"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" start="2024-07-01T09:13:35.192000" elapsed="2.772000"/>
</test>
<test id="s1-s2-t4" name="Run printTopology --node-state HEALTHY" line="47">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-07-01T09:13:37.967000" level="INFO">Running command 'ozone admin printTopology --node-state HEALTHY 2&gt;&amp;1'.</msg>
<msg time="2024-07-01T09:13:40.641000" level="INFO">${rc} = 0</msg>
<msg time="2024-07-01T09:13:40.641000" level="INFO">${output} = State = HEALTHY
 10.5.0.8(ozone-topology-datanode_5-1.ozone-topology_net):HTTP=9882,CLIENT_RPC=19864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /ra...</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-07-01T09:13:37.966000" elapsed="2.675000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-07-01T09:13:40.642000" level="INFO">State = HEALTHY
 10.5.0.8(ozone-topology-datanode_5-1.ozone-topology_net):HTTP=9882,CLIENT_RPC=19864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.5(ozone-topology-datanode_2-1.ozone-topology_net):HTTP=9882,CLIENT_RPC=19864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.7(ozone-topology-datanode_4-1.ozone-topology_net):HTTP=9882,CLIENT_RPC=19864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.4(ozone-topology-datanode_1-1.ozone-topology_net):HTTP=9882,CLIENT_RPC=19864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.6(ozone-topology-datanode_3-1.ozone-topology_net):HTTP=9882,CLIENT_RPC=19864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.9(ozone-topology-datanode_6-1.ozone-topology_net):HTTP=9882,CLIENT_RPC=19864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-07-01T09:13:40.641000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-07-01T09:13:40.642000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-07-01T09:13:40.642000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-07-01T09:13:37.966000" elapsed="2.676000"/>
</kw>
<msg time="2024-07-01T09:13:40.643000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-07-01T09:13:37.965000" elapsed="2.678000"/>
</kw>
<msg time="2024-07-01T09:13:40.643000" level="INFO">${output} = State = HEALTHY
 10.5.0.8(ozone-topology-datanode_5-1.ozone-topology_net):HTTP=9882,CLIENT_RPC=19864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /ra...</msg>
<var>${output}</var>
<arg>ozone admin printTopology --node-state HEALTHY</arg>
<status status="PASS" start="2024-07-01T09:13:37.965000" elapsed="2.678000"/>
</kw>
<kw name="Validate PrintTopology Output">
<kw name="Should Contain" owner="BuiltIn">
<arg>${output}</arg>
<arg>State = HEALTHY</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-07-01T09:13:40.643000" elapsed="0.001000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${output}</arg>
<arg>IN_SERVICE</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-07-01T09:13:40.644000" elapsed="0.000000"/>
</kw>
<kw name="Should Match Regexp" owner="BuiltIn">
<arg>${output}</arg>
<arg>.*ozone.*datanode[-_]\\d+.*IN_SERVICE.*rack.*</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" start="2024-07-01T09:13:40.644000" elapsed="0.000000"/>
</kw>
<arg>${output}</arg>
<status status="PASS" start="2024-07-01T09:13:40.643000" elapsed="0.001000"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" start="2024-07-01T09:13:37.964000" elapsed="2.681000"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" start="2024-07-01T09:13:29.897000" elapsed="10.749000"/>
</suite>
<suite id="s1-s3" name="Recon" source="/opt/hadoop/smoketest/recon">
<suite id="s1-s3-s1" name="Recon-Api" source="/opt/hadoop/smoketest/recon/recon-api.robot">
<test id="s1-s3-s1-t1" name="Check if Recon picks up OM data" line="61">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-07-01T09:13:41.228000" level="INFO">Running command 'ozone sh volume create recon 2&gt;&amp;1'.</msg>
<msg time="2024-07-01T09:13:44.383000" level="INFO">${rc} = 0</msg>
<msg time="2024-07-01T09:13:44.383000" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-07-01T09:13:41.227000" elapsed="3.156000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-07-01T09:13:44.384000" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-07-01T09:13:44.383000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-07-01T09:13:44.384000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-07-01T09:13:44.384000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-07-01T09:13:41.226000" elapsed="3.158000"/>
</kw>
<msg time="2024-07-01T09:13:44.385000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-07-01T09:13:41.226000" elapsed="3.159000"/>
</kw>
<arg>ozone sh volume create recon</arg>
<status status="PASS" start="2024-07-01T09:13:41.226000" elapsed="3.159000"/>
</kw>
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-07-01T09:13:44.388000" level="INFO">Running command 'ozone sh bucket create recon/api --layout=LEGACY 2&gt;&amp;1'.</msg>
<msg time="2024-07-01T09:13:47.661000" level="INFO">${rc} = 0</msg>
<msg time="2024-07-01T09:13:47.661000" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-07-01T09:13:44.387000" elapsed="3.274000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-07-01T09:13:47.662000" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-07-01T09:13:47.662000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-07-01T09:13:47.663000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-07-01T09:13:47.662000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-07-01T09:13:44.386000" elapsed="3.277000"/>
</kw>
<msg time="2024-07-01T09:13:47.663000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-07-01T09:13:44.385000" elapsed="3.278000"/>
</kw>
<arg>ozone sh bucket create recon/api --layout=LEGACY</arg>
<status status="PASS" start="2024-07-01T09:13:44.385000" elapsed="3.278000"/>
</kw>
<kw name="Freon OCKG" owner="freon">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-07-01T09:13:47.667000" level="INFO">Running command 'ozone freon ockg  -t 1 -n10 -p ockg -s 1025 -v recon -b api 2&gt;&amp;1'.</msg>
<msg time="2024-07-01T09:13:54.244000" level="INFO">${rc} = 0</msg>
<msg time="2024-07-01T09:13:54.244000" level="INFO">${output} = 2024-07-01 09:13:49,351 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-07-01 09:13:49,446 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-07-01T09:13:47.665000" elapsed="6.579000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-07-01T09:13:54.245000" level="INFO">2024-07-01 09:13:49,351 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-07-01 09:13:49,446 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2024-07-01 09:13:49,446 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2024-07-01 09:13:49,539 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockg and number-of-tests 10
2024-07-01 09:13:49,598 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2024-07-01 09:13:50,598 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2024-07-01 09:13:50,974 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2024-07-01 09:13:51,030 [pool-2-thread-1] INFO scm.XceiverClientRatis: WatchType ALL_COMMITTED. Majority 2, 
2024-07-01 09:13:51,283 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.dropwizard3.Dm3MetricRegistriesImpl
2024-07-01 09:13:51,599 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2024-07-01 09:13:51,671 [pool-2-thread-1] INFO scm.XceiverClientRatis: WatchType ALL_COMMITTED. Majority 2, 
2024-07-01 09:13:52,190 [pool-2-thread-1] INFO scm.XceiverClientRatis: WatchType ALL_COMMITTED. Majority 2, 
2024-07-01 09:13:52,599 [Thread-5] INFO freon.ProgressBar: Progress: 60.00 % (6 out of 10)
2024-07-01 09:13:53,600 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (10 out of 10)
2024-07-01 09:13:53,840 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=10, min=59.871874, max=843.498423, mean=200.68404134238327, stddev=241.14290088971845, median=71.396551, p75=306.693501, p95=843.498423, p98=843.498423, p99=843.498423, p999=843.498423, mean_rate=3.2936938866032675, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2024-07-01 09:13:53,841 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 4
2024-07-01 09:13:53,841 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2024-07-01 09:13:53,841 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 10</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-07-01T09:13:54.244000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-07-01T09:13:54.246000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-07-01T09:13:54.245000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-07-01T09:13:47.665000" elapsed="6.581000"/>
</kw>
<msg time="2024-07-01T09:13:54.246000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-07-01T09:13:47.664000" elapsed="6.582000"/>
</kw>
<msg time="2024-07-01T09:13:54.247000" level="INFO">${result} = 2024-07-01 09:13:49,351 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-07-01 09:13:49,446 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<status status="PASS" start="2024-07-01T09:13:47.664000" elapsed="6.583000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-07-01T09:13:54.247000" elapsed="0.000000"/>
</kw>
<arg>n=10</arg>
<arg>args=-s 1025 -v recon -b api</arg>
<status status="PASS" start="2024-07-01T09:13:47.663000" elapsed="6.585000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" owner="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit as ozone admin</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-07-01T09:13:54.249000" elapsed="0.001000"/>
</kw>
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-07-01T09:13:54.254000" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg time="2024-07-01T09:13:54.377000" level="INFO">${rc} = 0</msg>
<msg time="2024-07-01T09:13:54.377000" level="INFO">${output} = {"data":{"totalCount":3,"prevKey":3,"containers":[{"ContainerID":1,"NumberOfKeys":0,"pipelines":null},{"ContainerID":2,"NumberOfKeys":0,"pipelines":null},{"ContainerID":3,"NumberOfKeys":0,"pipelines":...</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-07-01T09:13:54.251000" elapsed="0.126000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-07-01T09:13:54.378000" level="INFO">{"data":{"totalCount":3,"prevKey":3,"containers":[{"ContainerID":1,"NumberOfKeys":0,"pipelines":null},{"ContainerID":2,"NumberOfKeys":0,"pipelines":null},{"ContainerID":3,"NumberOfKeys":0,"pipelines":null}]}}</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-07-01T09:13:54.377000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-07-01T09:13:54.378000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-07-01T09:13:54.378000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-07-01T09:13:54.251000" elapsed="0.127000"/>
</kw>
<msg time="2024-07-01T09:13:54.378000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-07-01T09:13:54.250000" elapsed="0.128000"/>
</kw>
<msg time="2024-07-01T09:13:54.379000" level="INFO">${result} = {"data":{"totalCount":3,"prevKey":3,"containers":[{"ContainerID":1,"NumberOfKeys":0,"pipelines":null},{"ContainerID":2,"NumberOfKeys":0,"pipelines":null},{"ContainerID":3,"NumberOfKeys":0,"pipelines":...</msg>
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers</arg>
<status status="PASS" start="2024-07-01T09:13:54.250000" elapsed="0.129000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>\"ContainerID\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-07-01T09:13:54.379000" elapsed="0.000000"/>
</kw>
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-07-01T09:13:54.382000" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg time="2024-07-01T09:13:54.403000" level="INFO">${rc} = 0</msg>
<msg time="2024-07-01T09:13:54.403000" level="INFO">${output} = [{"volume":"recon","bucket":"api","fileSize":2048,"count":10},{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-07-01T09:13:54.380000" elapsed="0.023000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-07-01T09:13:54.404000" level="INFO">[{"volume":"recon","bucket":"api","fileSize":2048,"count":10},{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-07-01T09:13:54.404000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-07-01T09:13:54.405000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-07-01T09:13:54.404000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-07-01T09:13:54.380000" elapsed="0.025000"/>
</kw>
<msg time="2024-07-01T09:13:54.405000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-07-01T09:13:54.380000" elapsed="0.025000"/>
</kw>
<msg time="2024-07-01T09:13:54.405000" level="INFO">${result} = [{"volume":"recon","bucket":"api","fileSize":2048,"count":10},{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/utilization/fileCount</arg>
<status status="PASS" start="2024-07-01T09:13:54.379000" elapsed="0.026000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-07-01T09:13:54.405000" elapsed="0.001000"/>
</kw>
<status status="PASS" start="2024-07-01T09:13:54.248000" elapsed="0.158000"/>
</kw>
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Check if Recon picks up container from OM</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-07-01T09:13:54.248000" elapsed="0.158000"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" start="2024-07-01T09:13:41.225000" elapsed="13.181000"/>
</test>
<test id="s1-s3-s1-t2" name="Check if Recon picks up DN heartbeats" line="71">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-07-01T09:13:54.410000" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/datanodes 2&gt;&amp;1'.</msg>
<msg time="2024-07-01T09:13:54.443000" level="INFO">${rc} = 0</msg>
<msg time="2024-07-01T09:13:54.443000" level="INFO">${output} = {"totalCount":6,"datanodes":[{"uuid":"e573ab8e-9e6c-4ef4-98bc-f5a14ee2bb2a","hostname":"ozone-topology-datanode_1-1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":1719825...</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-07-01T09:13:54.408000" elapsed="0.035000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-07-01T09:13:54.444000" level="INFO">{"totalCount":6,"datanodes":[{"uuid":"e573ab8e-9e6c-4ef4-98bc-f5a14ee2bb2a","hostname":"ozone-topology-datanode_1-1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":1719825232395,"storageReport":{"capacity":77843469658,"used":4096,"remaining":16795635712,"committed":0},"pipelines":[{"pipelineID":"ab0c06d7-c7be-4ee4-8f3e-dea737c71e08","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology-datanode_1-1.ozone-topology_net"},{"pipelineID":"5c4524c1-a295-4725-b4be-1908266e4442","replicationType":"RATIS","replicationFactor":"ONE","leaderNode":"ozone-topology-datanode_1-1.ozone-topology_net"}],"containers":1,"openContainers":1,"leaderCount":2,"version":"1.5.0-SNAPSHOT","setupTime":1719825146791,"revision":"148cbe4368834eb2b86c45ed8b91b5f8ca7262ae","buildDate":"2024-07-01T08:48Z","layoutVersion":7,"networkLocation":"/default-rack"},{"uuid":"f560e2ff-3a14-403b-86a8-2647ddaa4d94","hostname":"ozone-topology-datanode_3-1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":1719825231752,"storageReport":{"capacity":77843469658,"used":14336,"remaining":16795635712,"committed":268425216},"pipelines":[{"pipelineID":"3ccabf42-d149-41ba-bfb4-137389371123","replicationType":"RATIS","replicationFactor":"ONE","leaderNode":"ozone-topology-datanode_3-1.ozone-topology_net"},{"pipelineID":"022d7091-8fe3-4f65-a2cc-aedc89043ef4","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology-datanode_3-1.ozone-topology_net"},{"pipelineID":"b03d199a-9181-480d-8d72-dd24b9b51c83","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology-datanode_5-1.ozone-topology_net"}],"containers":2,"openContainers":3,"leaderCount":2,"version":"1.5.0-SNAPSHOT","setupTime":1719825147126,"revision":"148cbe4368834eb2b86c45ed8b91b5f8ca7262ae","buildDate":"2024-07-01T08:48Z","layoutVersion":7,"networkLocation":"/rack1"},{"uuid":"8bebd21d-f75b-45c7-b89e-8b83929efb1b","hostname":"ozone-topology-datanode_5-1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":1719825231752,"storageReport":{"capacity":77843469658,"used":14336,"remaining":16795709440,"committed":268425216},"pipelines":[{"pipelineID":"022d7091-8fe3-4f65-a2cc-aedc89043ef4","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology-datanode_3-1.ozone-topology_net"},{"pipelineID":"074397aa-acf7-4608-a211-9acf92d21171","replicationType":"RATIS","replicationFactor":"ONE","leaderNode":"ozone-topology-datanode_5-1.ozone-topology_net"},{"pipelineID":"b03d199a-9181-480d-8d72-dd24b9b51c83","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology-datanode_5-1.ozone-topology_net"}],"containers":2,"openContainers":3,"leaderCount":2,"version":"1.5.0-SNAPSHOT","setupTime":1719825146121,"revision":"148cbe4368834eb2b86c45ed8b91b5f8ca7262ae","buildDate":"2024-07-01T08:48Z","layoutVersion":7,"networkLocation":"/rack2"},{"uuid":"96722629-9158-4534-b549-56cc6eb3e0f5","hostname":"ozone-topology-datanode_2-1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":1719825232313,"storageReport":{"capacity":77843469658,"used":18432,"remaining":16795709440,"committed":268425216},"pipelines":[{"pipelineID":"f125a7dc-f5fd-4e5e-a117-4f7e792f9b8c","replicationType":"RATIS","replicationFactor":"ONE","leaderNode":"ozone-topology-datanode_2-1.ozone-topology_net"},{"pipelineID":"ab0c06d7-c7be-4ee4-8f3e-dea737c71e08","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology-datanode_1-1.ozone-topology_net"},{"pipelineID":"022d7091-8fe3-4f65-a2cc-aedc89043ef4","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology-datanode_3-1.ozone-topology_net"}],"containers":2,"openContainers":2,"leaderCount":1,"version":"1.5.0-SNAPSHOT","setupTime":1719825147295,"revision":"148cbe4368834eb2b86c45ed8b91b5f8ca7262ae","buildDate":"2024-07-01T08:48Z","layoutVersion":7,"networkLocation":"/rack1"},{"uuid":"63b0d003-7333-40b2-bda9-5ea70820d964","hostname":"ozone-topology-datanode_6-1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":1719825232312,"storageReport":{"capacity":77843469658,"used":4096,"remaining":16795709440,"committed":0},"pipelines":[{"pipelineID":"ab0c06d7-c7be-4ee4-8f3e-dea737c71e08","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology-datanode_1-1.ozone-topology_net"},{"pipelineID":"b03d199a-9181-480d-8d72-dd24b9b51c83","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology-datanode_5-1.ozone-topology_net"},{"pipelineID":"b2c4d930-0baf-4bd2-9779-d4b862d18d35","replicationType":"RATIS","replicationFactor":"ONE","leaderNode":"ozone-topology-datanode_6-1.ozone-topology_net"}],"containers":2,"openContainers":3,"leaderCount":1,"version":"1.5.0-SNAPSHOT","setupTime":1719825146912,"revision":"148cbe4368834eb2b86c45ed8b91b5f8ca7262ae","buildDate":"2024-07-01T08:48Z","layoutVersion":7,"networkLocation":"/rack2"},{"uuid":"d9f9c1fe-c39a-4158-887f-aaf2fa9d98fe","hostname":"ozone-topology-datanode_4-1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":1719825220033,"storageReport":{"capacity":77843469658,"used":4096,"remaining":17845936128,"committed":0},"pipelines":[{"pipelineID":"f5fb79d4-50c0-4b8b-b57e-18c6d6e0a072","replicationType":"RATIS","replicationFactor":"ONE","leaderNode":"ozone-topology-datanode_4-1.ozone-topology_net"}],"leaderCount":1,"version":"1.5.0-SNAPSHOT","setupTime":1719825146228,"revision":"148cbe4368834eb2b86c45ed8b91b5f8ca7262ae","buildDate":"2024-07-01T08:48Z","layoutVersion":7,"networkLocation":"/default-rack"}]}</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-07-01T09:13:54.443000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-07-01T09:13:54.444000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-07-01T09:13:54.444000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-07-01T09:13:54.408000" elapsed="0.037000"/>
</kw>
<msg time="2024-07-01T09:13:54.445000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-07-01T09:13:54.408000" elapsed="0.037000"/>
</kw>
<msg time="2024-07-01T09:13:54.445000" level="INFO">${result} = {"totalCount":6,"datanodes":[{"uuid":"e573ab8e-9e6c-4ef4-98bc-f5a14ee2bb2a","hostname":"ozone-topology-datanode_1-1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":1719825...</msg>
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/datanodes</arg>
<status status="PASS" start="2024-07-01T09:13:54.407000" elapsed="0.038000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>datanodes</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-07-01T09:13:54.445000" elapsed="0.000000"/>
</kw>
<kw name="Should Match Regexp" owner="BuiltIn">
<arg>${result}</arg>
<arg>datanode[-_]1</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" start="2024-07-01T09:13:54.445000" elapsed="0.001000"/>
</kw>
<kw name="Should Match Regexp" owner="BuiltIn">
<arg>${result}</arg>
<arg>datanode[-_]2</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" start="2024-07-01T09:13:54.446000" elapsed="0.000000"/>
</kw>
<kw name="Should Match Regexp" owner="BuiltIn">
<arg>${result}</arg>
<arg>datanode[-_]3</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" start="2024-07-01T09:13:54.446000" elapsed="0.001000"/>
</kw>
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-07-01T09:13:54.450000" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/pipelines 2&gt;&amp;1'.</msg>
<msg time="2024-07-01T09:13:54.487000" level="INFO">${rc} = 0</msg>
<msg time="2024-07-01T09:13:54.488000" level="INFO">${output} = {"totalCount":9,"pipelines":[{"pipelineId":"f125a7dc-f5fd-4e5e-a117-4f7e792f9b8c","status":"OPEN","leaderNode":"ozone-topology-datanode_2-1.ozone-topology_net","datanodes":[{"level":3,"parent":null,"c...</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-07-01T09:13:54.448000" elapsed="0.040000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-07-01T09:13:54.488000" level="INFO">{"totalCount":9,"pipelines":[{"pipelineId":"f125a7dc-f5fd-4e5e-a117-4f7e792f9b8c","status":"OPEN","leaderNode":"ozone-topology-datanode_2-1.ozone-topology_net","datanodes":[{"level":3,"parent":null,"cost":0,"uuid":"96722629-9158-4534-b549-56cc6eb3e0f5","uuidString":"96722629-9158-4534-b549-56cc6eb3e0f5","ipAddress":"10.5.0.5","hostName":"ozone-topology-datanode_2-1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":19864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"decommissioned":false,"maintenance":false,"ipAddressAsByteString":{"string":"10.5.0.5","bytes":{"validUtf8":true,"empty":false}},"hostNameAsByteString":{"string":"ozone-topology-datanode_2-1.ozone-topology_net","bytes":{"validUtf8":true,"empty":false}},"networkName":"96722629-9158-4534-b549-56cc6eb3e0f5","networkLocation":"/rack1","networkLocationAsByteString":{"string":"/rack1","bytes":{"validUtf8":true,"empty":false}},"networkNameAsByteString":{"string":"96722629-9158-4534-b549-56cc6eb3e0f5","bytes":{"validUtf8":true,"empty":false}},"networkFullPath":"/rack1/96722629-9158-4534-b549-56cc6eb3e0f5","numOfLeaves":1}],"lastLeaderElection":0,"duration":54759,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"ONE","containers":0},{"pipelineId":"ab0c06d7-c7be-4ee4-8f3e-dea737c71e08","status":"OPEN","leaderNode":"ozone-topology-datanode_1-1.ozone-topology_net","datanodes":[{"level":3,"parent":null,"cost":0,"uuid":"e573ab8e-9e6c-4ef4-98bc-f5a14ee2bb2a","uuidString":"e573ab8e-9e6c-4ef4-98bc-f5a14ee2bb2a","ipAddress":"10.5.0.4","hostName":"ozone-topology-datanode_1-1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":19864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"decommissioned":false,"maintenance":false,"ipAddressAsByteString":{"string":"10.5.0.4","bytes":{"validUtf8":true,"empty":false}},"hostNameAsByteString":{"string":"ozone-topology-datanode_1-1.ozone-topology_net","bytes":{"validUtf8":true,"empty":false}},"networkName":"e573ab8e-9e6c-4ef4-98bc-f5a14ee2bb2a","networkLocation":"/rack1","networkLocationAsByteString":{"string":"/rack1","bytes":{"validUtf8":true,"empty":false}},"networkNameAsByteString":{"string":"e573ab8e-9e6c-4ef4-98bc-f5a14ee2bb2a","bytes":{"validUtf8":true,"empty":false}},"networkFullPath":"/rack1/e573ab8e-9e6c-4ef4-98bc-f5a14ee2bb2a","numOfLeaves":1},{"level":3,"parent":null,"cost":0,"uuid":"63b0d003-7333-40b2-bda9-5ea70820d964","uuidString":"63b0d003-7333-40b2-bda9-5ea70820d964","ipAddress":"10.5.0.9","hostName":"ozone-topology-datanode_6-1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":19864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"decommissioned":false,"maintenance":false,"ipAddressAsByteString":{"string":"10.5.0.9","bytes":{"validUtf8":true,"empty":false}},"hostNameAsByteString":{"string":"ozone-topology-datanode_6-1.ozone-topology_net","bytes":{"validUtf8":true,"empty":false}},"networkName":"63b0d003-7333-40b2-bda9-5ea70820d964","networkLocation":"/rack2","networkLocationAsByteString":{"string":"/rack2","bytes":{"validUtf8":true,"empty":false}},"networkNameAsByteString":{"string":"63b0d003-7333-40b2-bda9-5ea70820d964","bytes":{"validUtf8":true,"empty":false}},"networkFullPath":"/rack2/63b0d003-7333-40b2-bda9-5ea70820d964","numOfLeaves":1},{"level":3,"parent":null,"cost":0,"uuid":"96722629-9158-4534-b549-56cc6eb3e0f5","uuidString":"96722629-9158-4534-b549-56cc6eb3e0f5","ipAddress":"10.5.0.5","hostName":"ozone-topology-datanode_2-1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":19864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"decommissioned":false,"maintenance":false,"ipAddressAsByteString":{"string":"10.5.0.5","bytes":{"validUtf8":true,"empty":false}},"hostNameAsByteString":{"string":"ozone-topology-datanode_2-1.ozone-topology_net","bytes":{"validUtf8":true,"empty":false}},"networkName":"96722629-9158-4534-b549-56cc6eb3e0f5","networkLocation":"/rack1","networkLocationAsByteString":{"string":"/rack1","bytes":{"validUtf8":true,"empty":false}},"networkNameAsByteString":{"string":"96722629-9158-4534-b549-56cc6eb3e0f5","bytes":{"validUtf8":true,"empty":false}},"networkFullPath":"/rack1/96722629-9158-4534-b549-56cc6eb3e0f5","numOfLeaves":1}],"lastLeaderElection":0,"duration":53608,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"THREE","containers":1},{"pipelineId":"3ccabf42-d149-41ba-bfb4-137389371123","status":"OPEN","leaderNode":"ozone-topology-datanode_3-1.ozone-topology_net","datanodes":[{"level":3,"parent":null,"cost":0,"uuid":"f560e2ff-3a14-403b-86a8-2647ddaa4d94","uuidString":"f560e2ff-3a14-403b-86a8-2647ddaa4d94","ipAddress":"10.5.0.6","hostName":"ozone-topology-datanode_3-1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":19864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"decommissioned":false,"maintenance":false,"ipAddressAsByteString":{"string":"10.5.0.6","bytes":{"validUtf8":true,"empty":false}},"hostNameAsByteString":{"string":"ozone-topology-datanode_3-1.ozone-topology_net","bytes":{"validUtf8":true,"empty":false}},"networkName":"f560e2ff-3a14-403b-86a8-2647ddaa4d94","networkLocation":"/rack1","networkLocationAsByteString":{"string":"/rack1","bytes":{"validUtf8":true,"empty":false}},"networkNameAsByteString":{"string":"f560e2ff-3a14-403b-86a8-2647ddaa4d94","bytes":{"validUtf8":true,"empty":false}},"networkFullPath":"/rack1/f560e2ff-3a14-403b-86a8-2647ddaa4d94","numOfLeaves":1}],"lastLeaderElection":0,"duration":55239,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"ONE","containers":0},{"pipelineId":"022d7091-8fe3-4f65-a2cc-aedc89043ef4","status":"OPEN","leaderNode":"ozone-topology-datanode_3-1.ozone-topology_net","datanodes":[{"level":3,"parent":null,"cost":0,"uuid":"f560e2ff-3a14-403b-86a8-2647ddaa4d94","uuidString":"f560e2ff-3a14-403b-86a8-2647ddaa4d94","ipAddress":"10.5.0.6","hostName":"ozone-topology-datanode_3-1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":19864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"decommissioned":false,"maintenance":false,"ipAddressAsByteString":{"string":"10.5.0.6","bytes":{"validUtf8":true,"empty":false}},"hostNameAsByteString":{"string":"ozone-topology-datanode_3-1.ozone-topology_net","bytes":{"validUtf8":true,"empty":false}},"networkName":"f560e2ff-3a14-403b-86a8-2647ddaa4d94","networkLocation":"/rack1","networkLocationAsByteString":{"string":"/rack1","bytes":{"validUtf8":true,"empty":false}},"networkNameAsByteString":{"string":"f560e2ff-3a14-403b-86a8-2647ddaa4d94","bytes":{"validUtf8":true,"empty":false}},"networkFullPath":"/rack1/f560e2ff-3a14-403b-86a8-2647ddaa4d94","numOfLeaves":1},{"level":3,"parent":null,"cost":0,"uuid":"8bebd21d-f75b-45c7-b89e-8b83929efb1b","uuidString":"8bebd21d-f75b-45c7-b89e-8b83929efb1b","ipAddress":"10.5.0.8","hostName":"ozone-topology-datanode_5-1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":19864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"decommissioned":false,"maintenance":false,"ipAddressAsByteString":{"string":"10.5.0.8","bytes":{"validUtf8":true,"empty":false}},"hostNameAsByteString":{"string":"ozone-topology-datanode_5-1.ozone-topology_net","bytes":{"validUtf8":true,"empty":false}},"networkName":"8bebd21d-f75b-45c7-b89e-8b83929efb1b","networkLocation":"/rack2","networkLocationAsByteString":{"string":"/rack2","bytes":{"validUtf8":true,"empty":false}},"networkNameAsByteString":{"string":"8bebd21d-f75b-45c7-b89e-8b83929efb1b","bytes":{"validUtf8":true,"empty":false}},"networkFullPath":"/rack2/8bebd21d-f75b-45c7-b89e-8b83929efb1b","numOfLeaves":1},{"level":3,"parent":null,"cost":0,"uuid":"96722629-9158-4534-b549-56cc6eb3e0f5","uuidString":"96722629-9158-4534-b549-56cc6eb3e0f5","ipAddress":"10.5.0.5","hostName":"ozone-topology-datanode_2-1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":19864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"decommissioned":false,"maintenance":false,"ipAddressAsByteString":{"string":"10.5.0.5","bytes":{"validUtf8":true,"empty":false}},"hostNameAsByteString":{"string":"ozone-topology-datanode_2-1.ozone-topology_net","bytes":{"validUtf8":true,"empty":false}},"networkName":"96722629-9158-4534-b549-56cc6eb3e0f5","networkLocation":"/rack1","networkLocationAsByteString":{"string":"/rack1","bytes":{"validUtf8":true,"empty":false}},"networkNameAsByteString":{"string":"96722629-9158-4534-b549-56cc6eb3e0f5","bytes":{"validUtf8":true,"empty":false}},"networkFullPath":"/rack1/96722629-9158-4534-b549-56cc6eb3e0f5","numOfLeaves":1}],"lastLeaderElection":0,"duration":54323,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"THREE","containers":1},{"pipelineId":"074397aa-acf7-4608-a211-9acf92d21171","status":"OPEN","leaderNode":"ozone-topology-datanode_5-1.ozone-topology_net","datanodes":[{"level":3,"parent":null,"cost":0,"uuid":"8bebd21d-f75b-45c7-b89e-8b83929efb1b","uuidString":"8bebd21d-f75b-45c7-b89e-8b83929efb1b","ipAddress":"10.5.0.8","hostName":"ozone-topology-datanode_5-1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":19864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"decommissioned":false,"maintenance":false,"ipAddressAsByteString":{"string":"10.5.0.8","bytes":{"validUtf8":true,"empty":false}},"hostNameAsByteString":{"string":"ozone-topology-datanode_5-1.ozone-topology_net","bytes":{"validUtf8":true,"empty":false}},"networkName":"8bebd21d-f75b-45c7-b89e-8b83929efb1b","networkLocation":"/rack2","networkLocationAsByteString":{"string":"/rack2","bytes":{"validUtf8":true,"empty":false}},"networkNameAsByteString":{"string":"8bebd21d-f75b-45c7-b89e-8b83929efb1b","bytes":{"validUtf8":true,"empty":false}},"networkFullPath":"/rack2/8bebd21d-f75b-45c7-b89e-8b83929efb1b","numOfLeaves":1}],"lastLeaderElection":0,"duration":54496,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"ONE","containers":0},{"pipelineId":"b03d199a-9181-480d-8d72-dd24b9b51c83","status":"OPEN","leaderNode":"ozone-topology-datanode_5-1.ozone-topology_net","datanodes":[{"level":3,"parent":null,"cost":0,"uuid":"63b0d003-7333-40b2-bda9-5ea70820d964","uuidString":"63b0d003-7333-40b2-bda9-5ea70820d964","ipAddress":"10.5.0.9","hostName":"ozone-topology-datanode_6-1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":19864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"decommissioned":false,"maintenance":false,"ipAddressAsByteString":{"string":"10.5.0.9","bytes":{"validUtf8":true,"empty":false}},"hostNameAsByteString":{"string":"ozone-topology-datanode_6-1.ozone-topology_net","bytes":{"validUtf8":true,"empty":false}},"networkName":"63b0d003-7333-40b2-bda9-5ea70820d964","networkLocation":"/rack2","networkLocationAsByteString":{"string":"/rack2","bytes":{"validUtf8":true,"empty":false}},"networkNameAsByteString":{"string":"63b0d003-7333-40b2-bda9-5ea70820d964","bytes":{"validUtf8":true,"empty":false}},"networkFullPath":"/rack2/63b0d003-7333-40b2-bda9-5ea70820d964","numOfLeaves":1},{"level":3,"parent":null,"cost":0,"uuid":"f560e2ff-3a14-403b-86a8-2647ddaa4d94","uuidString":"f560e2ff-3a14-403b-86a8-2647ddaa4d94","ipAddress":"10.5.0.6","hostName":"ozone-topology-datanode_3-1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":19864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"decommissioned":false,"maintenance":false,"ipAddressAsByteString":{"string":"10.5.0.6","bytes":{"validUtf8":true,"empty":false}},"hostNameAsByteString":{"string":"ozone-topology-datanode_3-1.ozone-topology_net","bytes":{"validUtf8":true,"empty":false}},"networkName":"f560e2ff-3a14-403b-86a8-2647ddaa4d94","networkLocation":"/rack1","networkLocationAsByteString":{"string":"/rack1","bytes":{"validUtf8":true,"empty":false}},"networkNameAsByteString":{"string":"f560e2ff-3a14-403b-86a8-2647ddaa4d94","bytes":{"validUtf8":true,"empty":false}},"networkFullPath":"/rack1/f560e2ff-3a14-403b-86a8-2647ddaa4d94","numOfLeaves":1},{"level":3,"parent":null,"cost":0,"uuid":"8bebd21d-f75b-45c7-b89e-8b83929efb1b","uuidString":"8bebd21d-f75b-45c7-b89e-8b83929efb1b","ipAddress":"10.5.0.8","hostName":"ozone-topology-datanode_5-1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":19864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"decommissioned":false,"maintenance":false,"ipAddressAsByteString":{"string":"10.5.0.8","bytes":{"validUtf8":true,"empty":false}},"hostNameAsByteString":{"string":"ozone-topology-datanode_5-1.ozone-topology_net","bytes":{"validUtf8":true,"empty":false}},"networkName":"8bebd21d-f75b-45c7-b89e-8b83929efb1b","networkLocation":"/rack2","networkLocationAsByteString":{"string":"/rack2","bytes":{"validUtf8":true,"empty":false}},"networkNameAsByteString":{"string":"8bebd21d-f75b-45c7-b89e-8b83929efb1b","bytes":{"validUtf8":true,"empty":false}},"networkFullPath":"/rack2/8bebd21d-f75b-45c7-b89e-8b83929efb1b","numOfLeaves":1}],"lastLeaderElection":0,"duration":54306,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"THREE","containers":1},{"pipelineId":"b2c4d930-0baf-4bd2-9779-d4b862d18d35","status":"OPEN","leaderNode":"ozone-topology-datanode_6-1.ozone-topology_net","datanodes":[{"level":3,"parent":null,"cost":0,"uuid":"63b0d003-7333-40b2-bda9-5ea70820d964","uuidString":"63b0d003-7333-40b2-bda9-5ea70820d964","ipAddress":"10.5.0.9","hostName":"ozone-topology-datanode_6-1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":19864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"decommissioned":false,"maintenance":false,"ipAddressAsByteString":{"string":"10.5.0.9","bytes":{"validUtf8":true,"empty":false}},"hostNameAsByteString":{"string":"ozone-topology-datanode_6-1.ozone-topology_net","bytes":{"validUtf8":true,"empty":false}},"networkName":"63b0d003-7333-40b2-bda9-5ea70820d964","networkLocation":"/rack2","networkLocationAsByteString":{"string":"/rack2","bytes":{"validUtf8":true,"empty":false}},"networkNameAsByteString":{"string":"63b0d003-7333-40b2-bda9-5ea70820d964","bytes":{"validUtf8":true,"empty":false}},"networkFullPath":"/rack2/63b0d003-7333-40b2-bda9-5ea70820d964","numOfLeaves":1}],"lastLeaderElection":0,"duration":54361,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"ONE","containers":0},{"pipelineId":"5c4524c1-a295-4725-b4be-1908266e4442","status":"OPEN","leaderNode":"ozone-topology-datanode_1-1.ozone-topology_net","datanodes":[{"level":3,"parent":null,"cost":0,"uuid":"e573ab8e-9e6c-4ef4-98bc-f5a14ee2bb2a","uuidString":"e573ab8e-9e6c-4ef4-98bc-f5a14ee2bb2a","ipAddress":"10.5.0.4","hostName":"ozone-topology-datanode_1-1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":19864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"decommissioned":false,"maintenance":false,"ipAddressAsByteString":{"string":"10.5.0.4","bytes":{"validUtf8":true,"empty":false}},"hostNameAsByteString":{"string":"ozone-topology-datanode_1-1.ozone-topology_net","bytes":{"validUtf8":true,"empty":false}},"networkName":"e573ab8e-9e6c-4ef4-98bc-f5a14ee2bb2a","networkLocation":"/rack1","networkLocationAsByteString":{"string":"/rack1","bytes":{"validUtf8":true,"empty":false}},"networkNameAsByteString":{"string":"e573ab8e-9e6c-4ef4-98bc-f5a14ee2bb2a","bytes":{"validUtf8":true,"empty":false}},"networkFullPath":"/rack1/e573ab8e-9e6c-4ef4-98bc-f5a14ee2bb2a","numOfLeaves":1}],"lastLeaderElection":0,"duration":53615,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"ONE","containers":0},{"pipelineId":"f5fb79d4-50c0-4b8b-b57e-18c6d6e0a072","status":"OPEN","leaderNode":"ozone-topology-datanode_4-1.ozone-topology_net","datanodes":[{"level":3,"parent":null,"cost":0,"uuid":"d9f9c1fe-c39a-4158-887f-aaf2fa9d98fe","uuidString":"d9f9c1fe-c39a-4158-887f-aaf2fa9d98fe","ipAddress":"10.5.0.7","hostName":"ozone-topology-datanode_4-1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":19864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"decommissioned":false,"maintenance":false,"ipAddressAsByteString":{"string":"10.5.0.7","bytes":{"validUtf8":true,"empty":false}},"hostNameAsByteString":{"string":"ozone-topology-datanode_4-1.ozone-topology_net","bytes":{"validUtf8":true,"empty":false}},"networkName":"d9f9c1fe-c39a-4158-887f-aaf2fa9d98fe","networkLocation":"/rack2","networkLocationAsByteString":{"string":"/rack2","bytes":{"validUtf8":true,"empty":false}},"networkNameAsByteString":{"string":"d9f9c1fe-c39a-4158-887f-aaf2fa9d98fe","bytes":{"validUtf8":true,"empty":false}},"networkFullPath":"/rack2/d9f9c1fe-c39a-4158-887f-aaf2fa9d98fe","numOfLeaves":1}],"lastLeaderElection":0,"duration":53402,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"ONE","containers":0}]}</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-07-01T09:13:54.488000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-07-01T09:13:54.489000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-07-01T09:13:54.489000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-07-01T09:13:54.448000" elapsed="0.041000"/>
</kw>
<msg time="2024-07-01T09:13:54.489000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-07-01T09:13:54.447000" elapsed="0.043000"/>
</kw>
<msg time="2024-07-01T09:13:54.490000" level="INFO">${result} = {"totalCount":9,"pipelines":[{"pipelineId":"f125a7dc-f5fd-4e5e-a117-4f7e792f9b8c","status":"OPEN","leaderNode":"ozone-topology-datanode_2-1.ozone-topology_net","datanodes":[{"level":3,"parent":null,"c...</msg>
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/pipelines</arg>
<status status="PASS" start="2024-07-01T09:13:54.447000" elapsed="0.043000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>pipelines</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-07-01T09:13:54.490000" elapsed="0.000000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-07-01T09:13:54.491000" elapsed="0.000000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>OPEN</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-07-01T09:13:54.491000" elapsed="0.000000"/>
</kw>
<kw name="Should Match Regexp" owner="BuiltIn">
<arg>${result}</arg>
<arg>datanode[-_]1</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" start="2024-07-01T09:13:54.491000" elapsed="0.001000"/>
</kw>
<kw name="Should Match Regexp" owner="BuiltIn">
<arg>${result}</arg>
<arg>datanode[-_]2</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" start="2024-07-01T09:13:54.492000" elapsed="0.000000"/>
</kw>
<kw name="Should Match Regexp" owner="BuiltIn">
<arg>${result}</arg>
<arg>datanode[-_]3</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" start="2024-07-01T09:13:54.492000" elapsed="0.000000"/>
</kw>
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-07-01T09:13:54.495000" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/clusterState 2&gt;&amp;1'.</msg>
<msg time="2024-07-01T09:13:54.533000" level="INFO">${rc} = 0</msg>
<msg time="2024-07-01T09:13:54.533000" level="INFO">${output} = {"deletedDirs":0,"pipelines":9,"totalDatanodes":6,"healthyDatanodes":6,"storageReport":{"capacity":467060817948,"used":59392,"remaining":101824335872,"committed":805275648},"containers":3,"missingCont...</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-07-01T09:13:54.494000" elapsed="0.039000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-07-01T09:13:54.534000" level="INFO">{"deletedDirs":0,"pipelines":9,"totalDatanodes":6,"healthyDatanodes":6,"storageReport":{"capacity":467060817948,"used":59392,"remaining":101824335872,"committed":805275648},"containers":3,"missingContainers":0,"openContainers":3,"deletedContainers":0,"volumes":3,"buckets":2,"keys":11,"keysPendingDeletion":0,"scmServiceId":null,"omServiceId":null}</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-07-01T09:13:54.533000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-07-01T09:13:54.534000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-07-01T09:13:54.534000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-07-01T09:13:54.493000" elapsed="0.041000"/>
</kw>
<msg time="2024-07-01T09:13:54.534000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-07-01T09:13:54.493000" elapsed="0.041000"/>
</kw>
<msg time="2024-07-01T09:13:54.535000" level="INFO">${result} = {"deletedDirs":0,"pipelines":9,"totalDatanodes":6,"healthyDatanodes":6,"storageReport":{"capacity":467060817948,"used":59392,"remaining":101824335872,"committed":805275648},"containers":3,"missingCont...</msg>
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/clusterState</arg>
<status status="PASS" start="2024-07-01T09:13:54.492000" elapsed="0.043000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>\"totalDatanodes\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-07-01T09:13:54.535000" elapsed="0.000000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>\"healthyDatanodes\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-07-01T09:13:54.535000" elapsed="0.000000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>\"pipelines\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-07-01T09:13:54.536000" elapsed="0.000000"/>
</kw>
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-07-01T09:13:54.539000" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers/1/replicaHistory 2&gt;&amp;1'.</msg>
<msg time="2024-07-01T09:13:54.555000" level="INFO">${rc} = 0</msg>
<msg time="2024-07-01T09:13:54.555000" level="INFO">${output} = [{"containerId":1,"datanodeUuid":"f560e2ff-3a14-403b-86a8-2647ddaa4d94","datanodeHost":"ozone-topology-datanode_3-1.ozone-topology_net","firstSeenTime":1719825202031,"lastSeenTime":1719825202031,"last...</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-07-01T09:13:54.537000" elapsed="0.018000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-07-01T09:13:54.556000" level="INFO">[{"containerId":1,"datanodeUuid":"f560e2ff-3a14-403b-86a8-2647ddaa4d94","datanodeHost":"ozone-topology-datanode_3-1.ozone-topology_net","firstSeenTime":1719825202031,"lastSeenTime":1719825202031,"lastBcsId":0,"state":"OPEN"},{"containerId":1,"datanodeUuid":"8bebd21d-f75b-45c7-b89e-8b83929efb1b","datanodeHost":"ozone-topology-datanode_5-1.ozone-topology_net","firstSeenTime":1719825202084,"lastSeenTime":1719825202084,"lastBcsId":0,"state":"OPEN"},{"containerId":1,"datanodeUuid":"96722629-9158-4534-b549-56cc6eb3e0f5","datanodeHost":"ozone-topology-datanode_2-1.ozone-topology_net","firstSeenTime":1719825202127,"lastSeenTime":1719825202127,"lastBcsId":0,"state":"OPEN"}]</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-07-01T09:13:54.555000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-07-01T09:13:54.556000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-07-01T09:13:54.556000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-07-01T09:13:54.537000" elapsed="0.020000"/>
</kw>
<msg time="2024-07-01T09:13:54.557000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-07-01T09:13:54.536000" elapsed="0.021000"/>
</kw>
<msg time="2024-07-01T09:13:54.557000" level="INFO">${result} = [{"containerId":1,"datanodeUuid":"f560e2ff-3a14-403b-86a8-2647ddaa4d94","datanodeHost":"ozone-topology-datanode_3-1.ozone-topology_net","firstSeenTime":1719825202031,"lastSeenTime":1719825202031,"last...</msg>
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers/1/replicaHistory</arg>
<status status="PASS" start="2024-07-01T09:13:54.536000" elapsed="0.021000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>\"containerId\":1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-07-01T09:13:54.557000" elapsed="0.000000"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" start="2024-07-01T09:13:54.406000" elapsed="0.152000"/>
</test>
<test id="s1-s3-s1-t3" name="Check if Recon Web UI is up" line="94">
<kw name="Run Keyword If" owner="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-07-01T09:13:54.559000" elapsed="0.000000"/>
</kw>
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-07-01T09:13:54.562000" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888 2&gt;&amp;1'.</msg>
<msg time="2024-07-01T09:13:54.574000" level="INFO">${rc} = 0</msg>
<msg time="2024-07-01T09:13:54.574000" level="INFO">${output} = &lt;!doctype html&gt;&lt;html lang="en"&gt;&lt;head&gt;&lt;meta charset="utf-8"/&gt;&lt;link rel="shortcut icon" href="/favicon.ico"/&gt;&lt;meta name="viewport" content="width=device-width,initial-scale=1"/&gt;&lt;meta name="theme-color" ...</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-07-01T09:13:54.560000" elapsed="0.014000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-07-01T09:13:54.575000" level="INFO">&lt;!doctype html&gt;&lt;html lang="en"&gt;&lt;head&gt;&lt;meta charset="utf-8"/&gt;&lt;link rel="shortcut icon" href="/favicon.ico"/&gt;&lt;meta name="viewport" content="width=device-width,initial-scale=1"/&gt;&lt;meta name="theme-color" content="#000000"/&gt;&lt;link rel="manifest" href="/manifest.json"/&gt;&lt;title&gt;Ozone Recon&lt;/title&gt;&lt;link href="/static/css/2.32ace79e.chunk.css" rel="stylesheet"&gt;&lt;link href="/static/css/main.4e4be847.chunk.css" rel="stylesheet"&gt;&lt;/head&gt;&lt;body&gt;&lt;noscript&gt;You need to enable JavaScript to run this app.&lt;/noscript&gt;&lt;div id="root"&gt;&lt;/div&gt;&lt;script&gt;!function(e){function r(r){for(var n,l,f=r[0],i=r[1],a=r[2],p=0,s=[];p&lt;f.length;p++)l=f[p],Object.prototype.hasOwnProperty.call(o,l)&amp;&amp;o[l]&amp;&amp;s.push(o[l][0]),o[l]=0;for(n in i)Object.prototype.hasOwnProperty.call(i,n)&amp;&amp;(e[n]=i[n]);for(c&amp;&amp;c(r);s.length;)s.shift()();return u.push.apply(u,a||[]),t()}function t(){for(var e,r=0;r&lt;u.length;r++){for(var t=u[r],n=!0,f=1;f&lt;t.length;f++){var i=t[f];0!==o[i]&amp;&amp;(n=!1)}n&amp;&amp;(u.splice(r--,1),e=l(l.s=t[0]))}return e}var n={},o={1:0},u=[];function l(r){if(n[r])return n[r].exports;var t=n[r]={i:r,l:!1,exports:{}};return e[r].call(t.exports,t,t.exports,l),t.l=!0,t.exports}l.m=e,l.c=n,l.d=function(e,r,t){l.o(e,r)||Object.defineProperty(e,r,{enumerable:!0,get:t})},l.r=function(e){"undefined"!=typeof Symbol&amp;&amp;Symbol.toStringTag&amp;&amp;Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},l.t=function(e,r){if(1&amp;r&amp;&amp;(e=l(e)),8&amp;r)return e;if(4&amp;r&amp;&amp;"object"==typeof e&amp;&amp;e&amp;&amp;e.__esModule)return e;var t=Object.create(null);if(l.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:e}),2&amp;r&amp;&amp;"string"!=typeof e)for(var n in e)l.d(t,n,function(r){return e[r]}.bind(null,n));return t},l.n=function(e){var r=e&amp;&amp;e.__esModule?function(){return e.default}:function(){return e};return l.d(r,"a",r),r},l.o=function(e,r){return Object.prototype.hasOwnProperty.call(e,r)},l.p="/";var f=this["webpackJsonpozone-recon"]=this["webpackJsonpozone-recon"]||[],i=f.push.bind(f);f.push=r,f=f.slice();for(var a=0;a&lt;f.length;a++)r(f[a]);var c=i;t()}([])&lt;/script&gt;&lt;script src="/static/js/2.f7350c04.chunk.js"&gt;&lt;/script&gt;&lt;script src="/static/js/main.94de2737.chunk.js"&gt;&lt;/script&gt;&lt;/body&gt;&lt;/html&gt;</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-07-01T09:13:54.575000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-07-01T09:13:54.576000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-07-01T09:13:54.575000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-07-01T09:13:54.560000" elapsed="0.016000"/>
</kw>
<msg time="2024-07-01T09:13:54.576000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-07-01T09:13:54.560000" elapsed="0.016000"/>
</kw>
<msg time="2024-07-01T09:13:54.576000" level="INFO">${result} = &lt;!doctype html&gt;&lt;html lang="en"&gt;&lt;head&gt;&lt;meta charset="utf-8"/&gt;&lt;link rel="shortcut icon" href="/favicon.ico"/&gt;&lt;meta name="viewport" content="width=device-width,initial-scale=1"/&gt;&lt;meta name="theme-color" ...</msg>
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${ENDPOINT_URL}</arg>
<status status="PASS" start="2024-07-01T09:13:54.559000" elapsed="0.017000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>Ozone Recon</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-07-01T09:13:54.577000" elapsed="0.000000"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" start="2024-07-01T09:13:54.558000" elapsed="0.019000"/>
</test>
<test id="s1-s3-s1-t4" name="Check web UI access" line="99">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-07-01T09:13:54.580000" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg time="2024-07-01T09:13:54.583000" level="INFO">${rc} = 0</msg>
<msg time="2024-07-01T09:13:54.583000" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-07-01T09:13:54.579000" elapsed="0.004000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-07-01T09:13:54.583000" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-07-01T09:13:54.583000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-07-01T09:13:54.584000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-07-01T09:13:54.584000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-07-01T09:13:54.579000" elapsed="0.005000"/>
</kw>
<msg time="2024-07-01T09:13:54.584000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-07-01T09:13:54.578000" elapsed="0.006000"/>
</kw>
<arg>kdestroy</arg>
<status status="PASS" start="2024-07-01T09:13:54.578000" elapsed="0.006000"/>
</kw>
<kw name="Check http return code">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-07-01T09:13:54.587000" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888 2&gt;&amp;1'.</msg>
<msg time="2024-07-01T09:13:54.597000" level="INFO">${rc} = 0</msg>
<msg time="2024-07-01T09:13:54.597000" level="INFO">${output} = 200</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-07-01T09:13:54.586000" elapsed="0.011000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-07-01T09:13:54.598000" level="INFO">200</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-07-01T09:13:54.598000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-07-01T09:13:54.599000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-07-01T09:13:54.598000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-07-01T09:13:54.586000" elapsed="0.013000"/>
</kw>
<msg time="2024-07-01T09:13:54.599000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-07-01T09:13:54.586000" elapsed="0.013000"/>
</kw>
<msg time="2024-07-01T09:13:54.599000" level="INFO">${result} = 200</msg>
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<status status="PASS" start="2024-07-01T09:13:54.585000" elapsed="0.014000"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" start="2024-07-01T09:13:54.600000" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-07-01T09:13:54.599000" elapsed="0.001000"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-07-01T09:13:54.600000" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-07-01T09:13:54.600000" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-07-01T09:13:54.599000" elapsed="0.001000"/>
</if>
<arg>${ENDPOINT_URL}</arg>
<arg>401</arg>
<status status="PASS" start="2024-07-01T09:13:54.585000" elapsed="0.015000"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" owner="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-07-01T09:13:54.601000" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-07-01T09:13:54.601000" elapsed="0.000000"/>
</kw>
<kw name="Check http return code">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-07-01T09:13:54.604000" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888 2&gt;&amp;1'.</msg>
<msg time="2024-07-01T09:13:54.615000" level="INFO">${rc} = 0</msg>
<msg time="2024-07-01T09:13:54.615000" level="INFO">${output} = 200</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-07-01T09:13:54.603000" elapsed="0.012000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-07-01T09:13:54.616000" level="INFO">200</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-07-01T09:13:54.615000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-07-01T09:13:54.616000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-07-01T09:13:54.616000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-07-01T09:13:54.602000" elapsed="0.015000"/>
</kw>
<msg time="2024-07-01T09:13:54.617000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-07-01T09:13:54.602000" elapsed="0.015000"/>
</kw>
<msg time="2024-07-01T09:13:54.617000" level="INFO">${result} = 200</msg>
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<status status="PASS" start="2024-07-01T09:13:54.602000" elapsed="0.015000"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" start="2024-07-01T09:13:54.617000" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-07-01T09:13:54.617000" elapsed="0.000000"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-07-01T09:13:54.618000" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-07-01T09:13:54.617000" elapsed="0.001000"/>
</branch>
<status status="PASS" start="2024-07-01T09:13:54.617000" elapsed="0.001000"/>
</if>
<arg>${ENDPOINT_URL}</arg>
<arg>200</arg>
<status status="PASS" start="2024-07-01T09:13:54.601000" elapsed="0.017000"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" start="2024-07-01T09:13:54.577000" elapsed="0.041000"/>
</test>
<test id="s1-s3-s1-t5" name="Check admin only api access" line="107">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-07-01T09:13:54.622000" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg time="2024-07-01T09:13:54.624000" level="INFO">${rc} = 0</msg>
<msg time="2024-07-01T09:13:54.624000" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-07-01T09:13:54.620000" elapsed="0.004000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-07-01T09:13:54.625000" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-07-01T09:13:54.624000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-07-01T09:13:54.625000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-07-01T09:13:54.625000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-07-01T09:13:54.620000" elapsed="0.005000"/>
</kw>
<msg time="2024-07-01T09:13:54.625000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-07-01T09:13:54.620000" elapsed="0.005000"/>
</kw>
<arg>kdestroy</arg>
<status status="PASS" start="2024-07-01T09:13:54.619000" elapsed="0.006000"/>
</kw>
<kw name="Check http return code">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-07-01T09:13:54.628000" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg time="2024-07-01T09:13:54.639000" level="INFO">${rc} = 0</msg>
<msg time="2024-07-01T09:13:54.639000" level="INFO">${output} = 200</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-07-01T09:13:54.627000" elapsed="0.012000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-07-01T09:13:54.640000" level="INFO">200</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-07-01T09:13:54.639000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-07-01T09:13:54.640000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-07-01T09:13:54.640000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-07-01T09:13:54.627000" elapsed="0.014000"/>
</kw>
<msg time="2024-07-01T09:13:54.641000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-07-01T09:13:54.626000" elapsed="0.015000"/>
</kw>
<msg time="2024-07-01T09:13:54.641000" level="INFO">${result} = 200</msg>
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<status status="PASS" start="2024-07-01T09:13:54.626000" elapsed="0.015000"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" start="2024-07-01T09:13:54.641000" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-07-01T09:13:54.641000" elapsed="0.000000"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-07-01T09:13:54.641000" elapsed="0.001000"/>
</kw>
<status status="PASS" start="2024-07-01T09:13:54.641000" elapsed="0.001000"/>
</branch>
<status status="PASS" start="2024-07-01T09:13:54.641000" elapsed="0.001000"/>
</if>
<arg>${ADMIN_API_ENDPOINT_URL}</arg>
<arg>401</arg>
<status status="PASS" start="2024-07-01T09:13:54.626000" elapsed="0.016000"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" owner="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-07-01T09:13:54.642000" elapsed="0.001000"/>
</kw>
<status status="PASS" start="2024-07-01T09:13:54.642000" elapsed="0.001000"/>
</kw>
<kw name="Check http return code">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-07-01T09:13:54.645000" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg time="2024-07-01T09:13:54.655000" level="INFO">${rc} = 0</msg>
<msg time="2024-07-01T09:13:54.655000" level="INFO">${output} = 200</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-07-01T09:13:54.644000" elapsed="0.011000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-07-01T09:13:54.656000" level="INFO">200</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-07-01T09:13:54.656000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-07-01T09:13:54.657000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-07-01T09:13:54.656000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-07-01T09:13:54.644000" elapsed="0.013000"/>
</kw>
<msg time="2024-07-01T09:13:54.657000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-07-01T09:13:54.644000" elapsed="0.013000"/>
</kw>
<msg time="2024-07-01T09:13:54.657000" level="INFO">${result} = 200</msg>
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<status status="PASS" start="2024-07-01T09:13:54.643000" elapsed="0.014000"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" start="2024-07-01T09:13:54.657000" elapsed="0.001000"/>
</kw>
<status status="NOT RUN" start="2024-07-01T09:13:54.657000" elapsed="0.001000"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-07-01T09:13:54.658000" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-07-01T09:13:54.658000" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-07-01T09:13:54.657000" elapsed="0.001000"/>
</if>
<arg>${ADMIN_API_ENDPOINT_URL}</arg>
<arg>403</arg>
<status status="PASS" start="2024-07-01T09:13:54.643000" elapsed="0.015000"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" owner="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-07-01T09:13:54.659000" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-07-01T09:13:54.658000" elapsed="0.001000"/>
</kw>
<kw name="Check http return code">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-07-01T09:13:54.662000" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg time="2024-07-01T09:13:54.677000" level="INFO">${rc} = 0</msg>
<msg time="2024-07-01T09:13:54.677000" level="INFO">${output} = 200</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-07-01T09:13:54.660000" elapsed="0.017000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-07-01T09:13:54.678000" level="INFO">200</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-07-01T09:13:54.678000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-07-01T09:13:54.679000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-07-01T09:13:54.678000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-07-01T09:13:54.660000" elapsed="0.019000"/>
</kw>
<msg time="2024-07-01T09:13:54.679000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-07-01T09:13:54.660000" elapsed="0.019000"/>
</kw>
<msg time="2024-07-01T09:13:54.679000" level="INFO">${result} = 200</msg>
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<status status="PASS" start="2024-07-01T09:13:54.659000" elapsed="0.020000"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" start="2024-07-01T09:13:54.680000" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-07-01T09:13:54.679000" elapsed="0.001000"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-07-01T09:13:54.680000" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-07-01T09:13:54.680000" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-07-01T09:13:54.679000" elapsed="0.001000"/>
</if>
<arg>${ADMIN_API_ENDPOINT_URL}</arg>
<arg>200</arg>
<status status="PASS" start="2024-07-01T09:13:54.659000" elapsed="0.021000"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" owner="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-07-01T09:13:54.681000" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-07-01T09:13:54.680000" elapsed="0.001000"/>
</kw>
<kw name="Check http return code">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-07-01T09:13:54.684000" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg time="2024-07-01T09:13:54.695000" level="INFO">${rc} = 0</msg>
<msg time="2024-07-01T09:13:54.695000" level="INFO">${output} = 200</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-07-01T09:13:54.683000" elapsed="0.012000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-07-01T09:13:54.695000" level="INFO">200</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-07-01T09:13:54.695000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-07-01T09:13:54.696000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-07-01T09:13:54.696000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-07-01T09:13:54.682000" elapsed="0.014000"/>
</kw>
<msg time="2024-07-01T09:13:54.696000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-07-01T09:13:54.682000" elapsed="0.014000"/>
</kw>
<msg time="2024-07-01T09:13:54.696000" level="INFO">${result} = 200</msg>
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<status status="PASS" start="2024-07-01T09:13:54.682000" elapsed="0.014000"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" start="2024-07-01T09:13:54.697000" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-07-01T09:13:54.697000" elapsed="0.000000"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-07-01T09:13:54.697000" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-07-01T09:13:54.697000" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-07-01T09:13:54.697000" elapsed="0.001000"/>
</if>
<arg>${ADMIN_API_ENDPOINT_URL}</arg>
<arg>200</arg>
<status status="PASS" start="2024-07-01T09:13:54.681000" elapsed="0.017000"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" start="2024-07-01T09:13:54.619000" elapsed="0.079000"/>
</test>
<test id="s1-s3-s1-t6" name="Check unhealthy, (admin) api access" line="120">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-07-01T09:13:54.701000" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg time="2024-07-01T09:13:54.703000" level="INFO">${rc} = 0</msg>
<msg time="2024-07-01T09:13:54.703000" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-07-01T09:13:54.700000" elapsed="0.003000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-07-01T09:13:54.704000" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-07-01T09:13:54.704000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-07-01T09:13:54.705000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-07-01T09:13:54.704000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-07-01T09:13:54.699000" elapsed="0.006000"/>
</kw>
<msg time="2024-07-01T09:13:54.705000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-07-01T09:13:54.699000" elapsed="0.006000"/>
</kw>
<arg>kdestroy</arg>
<status status="PASS" start="2024-07-01T09:13:54.699000" elapsed="0.006000"/>
</kw>
<kw name="Check http return code">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-07-01T09:13:54.708000" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers/unhealthy 2&gt;&amp;1'.</msg>
<msg time="2024-07-01T09:13:54.735000" level="INFO">${rc} = 0</msg>
<msg time="2024-07-01T09:13:54.735000" level="INFO">${output} = 200</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-07-01T09:13:54.707000" elapsed="0.028000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-07-01T09:13:54.736000" level="INFO">200</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-07-01T09:13:54.735000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-07-01T09:13:54.736000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-07-01T09:13:54.736000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-07-01T09:13:54.706000" elapsed="0.031000"/>
</kw>
<msg time="2024-07-01T09:13:54.737000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-07-01T09:13:54.706000" elapsed="0.031000"/>
</kw>
<msg time="2024-07-01T09:13:54.737000" level="INFO">${result} = 200</msg>
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<status status="PASS" start="2024-07-01T09:13:54.706000" elapsed="0.031000"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" start="2024-07-01T09:13:54.737000" elapsed="0.001000"/>
</kw>
<status status="NOT RUN" start="2024-07-01T09:13:54.737000" elapsed="0.001000"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-07-01T09:13:54.738000" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-07-01T09:13:54.738000" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-07-01T09:13:54.737000" elapsed="0.001000"/>
</if>
<arg>${UNHEALTHY_ENDPOINT_URL}</arg>
<arg>401</arg>
<status status="PASS" start="2024-07-01T09:13:54.705000" elapsed="0.033000"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" owner="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-07-01T09:13:54.739000" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-07-01T09:13:54.738000" elapsed="0.001000"/>
</kw>
<kw name="Check http return code">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-07-01T09:13:54.742000" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers/unhealthy 2&gt;&amp;1'.</msg>
<msg time="2024-07-01T09:13:54.755000" level="INFO">${rc} = 0</msg>
<msg time="2024-07-01T09:13:54.755000" level="INFO">${output} = 200</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-07-01T09:13:54.741000" elapsed="0.014000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-07-01T09:13:54.756000" level="INFO">200</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-07-01T09:13:54.756000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-07-01T09:13:54.757000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-07-01T09:13:54.757000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-07-01T09:13:54.740000" elapsed="0.017000"/>
</kw>
<msg time="2024-07-01T09:13:54.757000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-07-01T09:13:54.740000" elapsed="0.017000"/>
</kw>
<msg time="2024-07-01T09:13:54.758000" level="INFO">${result} = 200</msg>
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<status status="PASS" start="2024-07-01T09:13:54.740000" elapsed="0.018000"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" start="2024-07-01T09:13:54.758000" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-07-01T09:13:54.758000" elapsed="0.000000"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-07-01T09:13:54.758000" elapsed="0.001000"/>
</kw>
<status status="PASS" start="2024-07-01T09:13:54.758000" elapsed="0.001000"/>
</branch>
<status status="PASS" start="2024-07-01T09:13:54.758000" elapsed="0.001000"/>
</if>
<arg>${UNHEALTHY_ENDPOINT_URL}</arg>
<arg>403</arg>
<status status="PASS" start="2024-07-01T09:13:54.739000" elapsed="0.020000"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" owner="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-07-01T09:13:54.759000" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-07-01T09:13:54.759000" elapsed="0.001000"/>
</kw>
<kw name="Check http return code">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-07-01T09:13:54.762000" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers/unhealthy 2&gt;&amp;1'.</msg>
<msg time="2024-07-01T09:13:54.775000" level="INFO">${rc} = 0</msg>
<msg time="2024-07-01T09:13:54.775000" level="INFO">${output} = 200</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-07-01T09:13:54.761000" elapsed="0.014000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-07-01T09:13:54.776000" level="INFO">200</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-07-01T09:13:54.775000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-07-01T09:13:54.776000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-07-01T09:13:54.776000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-07-01T09:13:54.761000" elapsed="0.015000"/>
</kw>
<msg time="2024-07-01T09:13:54.776000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-07-01T09:13:54.760000" elapsed="0.016000"/>
</kw>
<msg time="2024-07-01T09:13:54.777000" level="INFO">${result} = 200</msg>
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<status status="PASS" start="2024-07-01T09:13:54.760000" elapsed="0.017000"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" start="2024-07-01T09:13:54.777000" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-07-01T09:13:54.777000" elapsed="0.000000"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-07-01T09:13:54.777000" elapsed="0.001000"/>
</kw>
<status status="PASS" start="2024-07-01T09:13:54.777000" elapsed="0.001000"/>
</branch>
<status status="PASS" start="2024-07-01T09:13:54.777000" elapsed="0.001000"/>
</if>
<arg>${UNHEALTHY_ENDPOINT_URL}</arg>
<arg>200</arg>
<status status="PASS" start="2024-07-01T09:13:54.760000" elapsed="0.018000"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" owner="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-07-01T09:13:54.778000" elapsed="0.001000"/>
</kw>
<status status="PASS" start="2024-07-01T09:13:54.778000" elapsed="0.001000"/>
</kw>
<kw name="Check http return code">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-07-01T09:13:54.781000" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers/unhealthy 2&gt;&amp;1'.</msg>
<msg time="2024-07-01T09:13:54.793000" level="INFO">${rc} = 0</msg>
<msg time="2024-07-01T09:13:54.793000" level="INFO">${output} = 200</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-07-01T09:13:54.780000" elapsed="0.013000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-07-01T09:13:54.794000" level="INFO">200</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-07-01T09:13:54.793000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-07-01T09:13:54.794000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-07-01T09:13:54.794000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-07-01T09:13:54.780000" elapsed="0.014000"/>
</kw>
<msg time="2024-07-01T09:13:54.794000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-07-01T09:13:54.780000" elapsed="0.014000"/>
</kw>
<msg time="2024-07-01T09:13:54.795000" level="INFO">${result} = 200</msg>
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<status status="PASS" start="2024-07-01T09:13:54.779000" elapsed="0.016000"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" start="2024-07-01T09:13:54.795000" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-07-01T09:13:54.795000" elapsed="0.000000"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-07-01T09:13:54.795000" elapsed="0.001000"/>
</kw>
<status status="PASS" start="2024-07-01T09:13:54.795000" elapsed="0.001000"/>
</branch>
<status status="PASS" start="2024-07-01T09:13:54.795000" elapsed="0.001000"/>
</if>
<arg>${UNHEALTHY_ENDPOINT_URL}</arg>
<arg>200</arg>
<status status="PASS" start="2024-07-01T09:13:54.779000" elapsed="0.017000"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" start="2024-07-01T09:13:54.698000" elapsed="0.098000"/>
</test>
<test id="s1-s3-s1-t7" name="Check normal api access" line="133">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-07-01T09:13:54.800000" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg time="2024-07-01T09:13:54.802000" level="INFO">${rc} = 0</msg>
<msg time="2024-07-01T09:13:54.802000" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-07-01T09:13:54.798000" elapsed="0.004000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-07-01T09:13:54.802000" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-07-01T09:13:54.802000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-07-01T09:13:54.803000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-07-01T09:13:54.803000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-07-01T09:13:54.798000" elapsed="0.005000"/>
</kw>
<msg time="2024-07-01T09:13:54.803000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-07-01T09:13:54.797000" elapsed="0.006000"/>
</kw>
<arg>kdestroy</arg>
<status status="PASS" start="2024-07-01T09:13:54.797000" elapsed="0.006000"/>
</kw>
<kw name="Check http return code">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-07-01T09:13:54.806000" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/clusterState 2&gt;&amp;1'.</msg>
<msg time="2024-07-01T09:13:54.824000" level="INFO">${rc} = 0</msg>
<msg time="2024-07-01T09:13:54.824000" level="INFO">${output} = 200</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-07-01T09:13:54.805000" elapsed="0.019000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-07-01T09:13:54.825000" level="INFO">200</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-07-01T09:13:54.824000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-07-01T09:13:54.825000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-07-01T09:13:54.825000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-07-01T09:13:54.805000" elapsed="0.020000"/>
</kw>
<msg time="2024-07-01T09:13:54.825000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-07-01T09:13:54.804000" elapsed="0.021000"/>
</kw>
<msg time="2024-07-01T09:13:54.826000" level="INFO">${result} = 200</msg>
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<status status="PASS" start="2024-07-01T09:13:54.804000" elapsed="0.022000"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" start="2024-07-01T09:13:54.826000" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-07-01T09:13:54.826000" elapsed="0.000000"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-07-01T09:13:54.826000" elapsed="0.001000"/>
</kw>
<status status="PASS" start="2024-07-01T09:13:54.826000" elapsed="0.001000"/>
</branch>
<status status="PASS" start="2024-07-01T09:13:54.826000" elapsed="0.001000"/>
</if>
<arg>${NON_ADMIN_API_ENDPOINT_URL}</arg>
<arg>401</arg>
<status status="PASS" start="2024-07-01T09:13:54.804000" elapsed="0.023000"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" owner="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-07-01T09:13:54.827000" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-07-01T09:13:54.827000" elapsed="0.001000"/>
</kw>
<kw name="Check http return code">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-07-01T09:13:54.830000" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/clusterState 2&gt;&amp;1'.</msg>
<msg time="2024-07-01T09:13:54.848000" level="INFO">${rc} = 0</msg>
<msg time="2024-07-01T09:13:54.848000" level="INFO">${output} = 200</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-07-01T09:13:54.829000" elapsed="0.019000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-07-01T09:13:54.849000" level="INFO">200</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-07-01T09:13:54.849000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-07-01T09:13:54.850000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-07-01T09:13:54.849000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-07-01T09:13:54.829000" elapsed="0.021000"/>
</kw>
<msg time="2024-07-01T09:13:54.850000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-07-01T09:13:54.828000" elapsed="0.022000"/>
</kw>
<msg time="2024-07-01T09:13:54.850000" level="INFO">${result} = 200</msg>
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<status status="PASS" start="2024-07-01T09:13:54.828000" elapsed="0.022000"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" start="2024-07-01T09:13:54.851000" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-07-01T09:13:54.851000" elapsed="0.000000"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-07-01T09:13:54.851000" elapsed="0.001000"/>
</kw>
<status status="PASS" start="2024-07-01T09:13:54.851000" elapsed="0.001000"/>
</branch>
<status status="PASS" start="2024-07-01T09:13:54.850000" elapsed="0.002000"/>
</if>
<arg>${NON_ADMIN_API_ENDPOINT_URL}</arg>
<arg>200</arg>
<status status="PASS" start="2024-07-01T09:13:54.828000" elapsed="0.024000"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" start="2024-07-01T09:13:54.796000" elapsed="0.056000"/>
</test>
<doc>Smoke test to start cluster with docker-compose environments.</doc>
<status status="PASS" start="2024-07-01T09:13:41.195000" elapsed="13.658000"/>
</suite>
<suite id="s1-s3-s2" name="Recon-Nssummary" source="/opt/hadoop/smoketest/recon/recon-nssummary.robot">
<test id="s1-s3-s2-t1" name="Check volume creation" line="99">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-07-01T09:13:54.864000" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg time="2024-07-01T09:13:54.871000" level="INFO">${rc} = 0</msg>
<msg time="2024-07-01T09:13:54.871000" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-07-01T09:13:54.863000" elapsed="0.008000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-07-01T09:13:54.872000" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-07-01T09:13:54.872000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-07-01T09:13:54.873000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-07-01T09:13:54.873000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-07-01T09:13:54.862000" elapsed="0.011000"/>
</kw>
<msg time="2024-07-01T09:13:54.874000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-07-01T09:13:54.862000" elapsed="0.012000"/>
</kw>
<arg>kdestroy</arg>
<status status="PASS" start="2024-07-01T09:13:54.862000" elapsed="0.012000"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" owner="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-07-01T09:13:54.874000" elapsed="0.001000"/>
</kw>
<status status="PASS" start="2024-07-01T09:13:54.874000" elapsed="0.001000"/>
</kw>
<kw name="Create volume">
<kw name="Generate Random String" owner="String">
<msg time="2024-07-01T09:13:54.876000" level="INFO">${random} = ksruv</msg>
<var>${random}</var>
<arg>5</arg>
<arg>[LOWER]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<status status="PASS" start="2024-07-01T09:13:54.876000" elapsed="0.000000"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2024-07-01T09:13:54.876000" level="INFO">${VOLUME} = vol-ksruv</msg>
<arg>${VOLUME}</arg>
<arg>vol-${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2024-07-01T09:13:54.876000" elapsed="0.000000"/>
</kw>
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-07-01T09:13:54.879000" level="INFO">Running command 'ozone sh volume create /vol-ksruv 2&gt;&amp;1'.</msg>
<msg time="2024-07-01T09:13:58.243000" level="INFO">${rc} = 0</msg>
<msg time="2024-07-01T09:13:58.243000" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-07-01T09:13:54.878000" elapsed="3.365000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-07-01T09:13:58.244000" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-07-01T09:13:58.243000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-07-01T09:13:58.244000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-07-01T09:13:58.244000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-07-01T09:13:54.877000" elapsed="3.368000"/>
</kw>
<msg time="2024-07-01T09:13:58.245000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-07-01T09:13:54.877000" elapsed="3.368000"/>
</kw>
<msg time="2024-07-01T09:13:58.245000" level="INFO">${result} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<var>${result}</var>
<arg>ozone sh volume create /${VOLUME}</arg>
<status status="PASS" start="2024-07-01T09:13:54.877000" elapsed="3.368000"/>
</kw>
<kw name="Should Not Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" start="2024-07-01T09:13:58.245000" elapsed="0.001000"/>
</kw>
<status status="PASS" start="2024-07-01T09:13:54.875000" elapsed="3.371000"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" start="2024-07-01T09:13:54.861000" elapsed="3.385000"/>
</test>
<test id="s1-s3-s2-t2" name="Check bucket creation" line="104">
<kw name="Create bucket">
<kw name="Generate Random String" owner="String">
<msg time="2024-07-01T09:13:58.248000" level="INFO">${random} = jhsml</msg>
<var>${random}</var>
<arg>5</arg>
<arg>[LOWER]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<status status="PASS" start="2024-07-01T09:13:58.247000" elapsed="0.001000"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2024-07-01T09:13:58.248000" level="INFO">${BUCKET} = buc-jhsml</msg>
<arg>${BUCKET}</arg>
<arg>buc-${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2024-07-01T09:13:58.248000" elapsed="0.000000"/>
</kw>
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-07-01T09:13:58.251000" level="INFO">Running command 'ozone sh bucket create -l FILE_SYSTEM_OPTIMIZED /vol-ksruv/buc-jhsml 2&gt;&amp;1'.</msg>
<msg time="2024-07-01T09:14:01.267000" level="INFO">${rc} = 0</msg>
<msg time="2024-07-01T09:14:01.267000" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-07-01T09:13:58.249000" elapsed="3.018000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-07-01T09:14:01.268000" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-07-01T09:14:01.267000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-07-01T09:14:01.268000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-07-01T09:14:01.268000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-07-01T09:13:58.249000" elapsed="3.020000"/>
</kw>
<msg time="2024-07-01T09:14:01.269000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-07-01T09:13:58.249000" elapsed="3.020000"/>
</kw>
<msg time="2024-07-01T09:14:01.269000" level="INFO">${result} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<var>${result}</var>
<arg>ozone sh bucket create -l ${BUCKET_LAYOUT} /${VOLUME}/${BUCKET}</arg>
<status status="PASS" start="2024-07-01T09:13:58.248000" elapsed="3.021000"/>
</kw>
<kw name="Should Not Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" start="2024-07-01T09:14:01.269000" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-07-01T09:13:58.247000" elapsed="3.022000"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" start="2024-07-01T09:13:58.246000" elapsed="3.024000"/>
</test>
<test id="s1-s3-s2-t3" name="Check keys creation" line="107">
<kw name="Create keys">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-07-01T09:14:01.274000" level="INFO">Running command 'ozone sh key put /vol-ksruv/buc-jhsml/file1 README.md 2&gt;&amp;1'.</msg>
<msg time="2024-07-01T09:14:05.789000" level="INFO">${rc} = 0</msg>
<msg time="2024-07-01T09:14:05.789000" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-07-01T09:14:01.272000" elapsed="4.517000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-07-01T09:14:05.790000" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-07-01T09:14:05.790000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-07-01T09:14:05.791000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-07-01T09:14:05.790000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-07-01T09:14:01.272000" elapsed="4.519000"/>
</kw>
<msg time="2024-07-01T09:14:05.791000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-07-01T09:14:01.272000" elapsed="4.519000"/>
</kw>
<msg time="2024-07-01T09:14:05.791000" level="INFO">${result} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<var>${result}</var>
<arg>ozone sh key put /${VOLUME}/${BUCKET}/file1 README.md</arg>
<status status="PASS" start="2024-07-01T09:14:01.271000" elapsed="4.520000"/>
</kw>
<kw name="Should Not Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" start="2024-07-01T09:14:05.791000" elapsed="0.001000"/>
</kw>
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-07-01T09:14:05.794000" level="INFO">Running command 'ozone sh key put /vol-ksruv/buc-jhsml/dir1/dir2/file2 HISTORY.md 2&gt;&amp;1'.</msg>
<msg time="2024-07-01T09:14:10.599000" level="INFO">${rc} = 0</msg>
<msg time="2024-07-01T09:14:10.599000" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-07-01T09:14:05.793000" elapsed="4.806000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-07-01T09:14:10.600000" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-07-01T09:14:10.600000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-07-01T09:14:10.601000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-07-01T09:14:10.601000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-07-01T09:14:05.793000" elapsed="4.808000"/>
</kw>
<msg time="2024-07-01T09:14:10.601000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-07-01T09:14:05.792000" elapsed="4.809000"/>
</kw>
<msg time="2024-07-01T09:14:10.601000" level="INFO">${result} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<var>${result}</var>
<arg>ozone sh key put /${VOLUME}/${BUCKET}/dir1/dir2/file2 HISTORY.md</arg>
<status status="PASS" start="2024-07-01T09:14:05.792000" elapsed="4.809000"/>
</kw>
<kw name="Should Not Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" start="2024-07-01T09:14:10.602000" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-07-01T09:14:01.271000" elapsed="9.331000"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" start="2024-07-01T09:14:01.270000" elapsed="9.332000"/>
</test>
<test id="s1-s3-s2-t4" name="Check Summary api access" line="110">
<kw name="Check Access">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-07-01T09:14:10.606000" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg time="2024-07-01T09:14:10.609000" level="INFO">${rc} = 0</msg>
<msg time="2024-07-01T09:14:10.609000" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-07-01T09:14:10.605000" elapsed="0.004000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-07-01T09:14:10.609000" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-07-01T09:14:10.609000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-07-01T09:14:10.610000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-07-01T09:14:10.610000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-07-01T09:14:10.605000" elapsed="0.005000"/>
</kw>
<msg time="2024-07-01T09:14:10.610000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-07-01T09:14:10.604000" elapsed="0.006000"/>
</kw>
<arg>kdestroy</arg>
<status status="PASS" start="2024-07-01T09:14:10.604000" elapsed="0.006000"/>
</kw>
<kw name="Check http return code">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-07-01T09:14:10.613000" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg time="2024-07-01T09:14:10.640000" level="INFO">${rc} = 0</msg>
<msg time="2024-07-01T09:14:10.640000" level="INFO">${output} = 200</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-07-01T09:14:10.612000" elapsed="0.028000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-07-01T09:14:10.641000" level="INFO">200</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-07-01T09:14:10.640000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-07-01T09:14:10.642000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-07-01T09:14:10.641000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-07-01T09:14:10.611000" elapsed="0.031000"/>
</kw>
<msg time="2024-07-01T09:14:10.642000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-07-01T09:14:10.611000" elapsed="0.031000"/>
</kw>
<msg time="2024-07-01T09:14:10.642000" level="INFO">${result} = 200</msg>
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<status status="PASS" start="2024-07-01T09:14:10.611000" elapsed="0.031000"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" start="2024-07-01T09:14:10.643000" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-07-01T09:14:10.643000" elapsed="0.000000"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-07-01T09:14:10.643000" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-07-01T09:14:10.643000" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-07-01T09:14:10.642000" elapsed="0.001000"/>
</if>
<arg>${url}</arg>
<arg>401</arg>
<status status="PASS" start="2024-07-01T09:14:10.610000" elapsed="0.033000"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" owner="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-07-01T09:14:10.644000" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-07-01T09:14:10.644000" elapsed="0.000000"/>
</kw>
<kw name="Check http return code">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-07-01T09:14:10.647000" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg time="2024-07-01T09:14:10.659000" level="INFO">${rc} = 0</msg>
<msg time="2024-07-01T09:14:10.659000" level="INFO">${output} = 200</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-07-01T09:14:10.646000" elapsed="0.013000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-07-01T09:14:10.660000" level="INFO">200</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-07-01T09:14:10.659000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-07-01T09:14:10.660000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-07-01T09:14:10.660000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-07-01T09:14:10.645000" elapsed="0.016000"/>
</kw>
<msg time="2024-07-01T09:14:10.661000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-07-01T09:14:10.645000" elapsed="0.016000"/>
</kw>
<msg time="2024-07-01T09:14:10.661000" level="INFO">${result} = 200</msg>
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<status status="PASS" start="2024-07-01T09:14:10.645000" elapsed="0.016000"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" start="2024-07-01T09:14:10.661000" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-07-01T09:14:10.661000" elapsed="0.000000"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-07-01T09:14:10.662000" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-07-01T09:14:10.661000" elapsed="0.001000"/>
</branch>
<status status="PASS" start="2024-07-01T09:14:10.661000" elapsed="0.001000"/>
</if>
<arg>${url}</arg>
<arg>403</arg>
<status status="PASS" start="2024-07-01T09:14:10.644000" elapsed="0.018000"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" owner="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-07-01T09:14:10.663000" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-07-01T09:14:10.662000" elapsed="0.001000"/>
</kw>
<kw name="Check http return code">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-07-01T09:14:10.666000" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg time="2024-07-01T09:14:10.677000" level="INFO">${rc} = 0</msg>
<msg time="2024-07-01T09:14:10.677000" level="INFO">${output} = 200</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-07-01T09:14:10.664000" elapsed="0.013000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-07-01T09:14:10.678000" level="INFO">200</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-07-01T09:14:10.677000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-07-01T09:14:10.678000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-07-01T09:14:10.678000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-07-01T09:14:10.664000" elapsed="0.015000"/>
</kw>
<msg time="2024-07-01T09:14:10.679000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-07-01T09:14:10.664000" elapsed="0.015000"/>
</kw>
<msg time="2024-07-01T09:14:10.679000" level="INFO">${result} = 200</msg>
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<status status="PASS" start="2024-07-01T09:14:10.663000" elapsed="0.016000"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" start="2024-07-01T09:14:10.679000" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-07-01T09:14:10.679000" elapsed="0.000000"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-07-01T09:14:10.680000" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-07-01T09:14:10.679000" elapsed="0.001000"/>
</branch>
<status status="PASS" start="2024-07-01T09:14:10.679000" elapsed="0.001000"/>
</if>
<arg>${url}</arg>
<arg>200</arg>
<status status="PASS" start="2024-07-01T09:14:10.663000" elapsed="0.017000"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" owner="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-07-01T09:14:10.680000" elapsed="0.001000"/>
</kw>
<status status="PASS" start="2024-07-01T09:14:10.680000" elapsed="0.001000"/>
</kw>
<kw name="Check http return code">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-07-01T09:14:10.684000" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg time="2024-07-01T09:14:10.696000" level="INFO">${rc} = 0</msg>
<msg time="2024-07-01T09:14:10.696000" level="INFO">${output} = 200</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-07-01T09:14:10.683000" elapsed="0.013000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-07-01T09:14:10.697000" level="INFO">200</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-07-01T09:14:10.696000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-07-01T09:14:10.697000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-07-01T09:14:10.697000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-07-01T09:14:10.682000" elapsed="0.016000"/>
</kw>
<msg time="2024-07-01T09:14:10.698000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-07-01T09:14:10.682000" elapsed="0.016000"/>
</kw>
<msg time="2024-07-01T09:14:10.698000" level="INFO">${result} = 200</msg>
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<status status="PASS" start="2024-07-01T09:14:10.681000" elapsed="0.017000"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" start="2024-07-01T09:14:10.698000" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-07-01T09:14:10.698000" elapsed="0.000000"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-07-01T09:14:10.699000" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-07-01T09:14:10.699000" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-07-01T09:14:10.698000" elapsed="0.001000"/>
</if>
<arg>${url}</arg>
<arg>200</arg>
<status status="PASS" start="2024-07-01T09:14:10.681000" elapsed="0.018000"/>
</kw>
<arg>${SUMMARY_URL}?path=/</arg>
<status status="PASS" start="2024-07-01T09:14:10.603000" elapsed="0.096000"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" start="2024-07-01T09:14:10.603000" elapsed="0.096000"/>
</test>
<test id="s1-s3-s2-t5" name="Check Disk Usage api access" line="113">
<kw name="Check Access">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-07-01T09:14:10.703000" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg time="2024-07-01T09:14:10.705000" level="INFO">${rc} = 0</msg>
<msg time="2024-07-01T09:14:10.705000" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-07-01T09:14:10.702000" elapsed="0.003000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-07-01T09:14:10.706000" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-07-01T09:14:10.706000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-07-01T09:14:10.707000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-07-01T09:14:10.706000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-07-01T09:14:10.701000" elapsed="0.006000"/>
</kw>
<msg time="2024-07-01T09:14:10.707000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-07-01T09:14:10.701000" elapsed="0.006000"/>
</kw>
<arg>kdestroy</arg>
<status status="PASS" start="2024-07-01T09:14:10.701000" elapsed="0.006000"/>
</kw>
<kw name="Check http return code">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-07-01T09:14:10.710000" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/du?path=/ 2&gt;&amp;1'.</msg>
<msg time="2024-07-01T09:14:10.732000" level="INFO">${rc} = 0</msg>
<msg time="2024-07-01T09:14:10.732000" level="INFO">${output} = 200</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-07-01T09:14:10.708000" elapsed="0.024000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-07-01T09:14:10.733000" level="INFO">200</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-07-01T09:14:10.732000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-07-01T09:14:10.734000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-07-01T09:14:10.733000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-07-01T09:14:10.708000" elapsed="0.026000"/>
</kw>
<msg time="2024-07-01T09:14:10.734000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-07-01T09:14:10.708000" elapsed="0.026000"/>
</kw>
<msg time="2024-07-01T09:14:10.734000" level="INFO">${result} = 200</msg>
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<status status="PASS" start="2024-07-01T09:14:10.707000" elapsed="0.027000"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" start="2024-07-01T09:14:10.735000" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-07-01T09:14:10.734000" elapsed="0.001000"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-07-01T09:14:10.735000" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-07-01T09:14:10.735000" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-07-01T09:14:10.734000" elapsed="0.001000"/>
</if>
<arg>${url}</arg>
<arg>401</arg>
<status status="PASS" start="2024-07-01T09:14:10.707000" elapsed="0.028000"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" owner="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-07-01T09:14:10.736000" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-07-01T09:14:10.735000" elapsed="0.001000"/>
</kw>
<kw name="Check http return code">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-07-01T09:14:10.748000" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/du?path=/ 2&gt;&amp;1'.</msg>
<msg time="2024-07-01T09:14:10.762000" level="INFO">${rc} = 0</msg>
<msg time="2024-07-01T09:14:10.762000" level="INFO">${output} = 200</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-07-01T09:14:10.738000" elapsed="0.024000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-07-01T09:14:10.763000" level="INFO">200</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-07-01T09:14:10.763000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-07-01T09:14:10.764000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-07-01T09:14:10.764000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-07-01T09:14:10.737000" elapsed="0.027000"/>
</kw>
<msg time="2024-07-01T09:14:10.764000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-07-01T09:14:10.737000" elapsed="0.027000"/>
</kw>
<msg time="2024-07-01T09:14:10.764000" level="INFO">${result} = 200</msg>
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<status status="PASS" start="2024-07-01T09:14:10.737000" elapsed="0.027000"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" start="2024-07-01T09:14:10.765000" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-07-01T09:14:10.765000" elapsed="0.000000"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-07-01T09:14:10.765000" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-07-01T09:14:10.765000" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-07-01T09:14:10.764000" elapsed="0.001000"/>
</if>
<arg>${url}</arg>
<arg>403</arg>
<status status="PASS" start="2024-07-01T09:14:10.736000" elapsed="0.030000"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" owner="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-07-01T09:14:10.766000" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-07-01T09:14:10.766000" elapsed="0.000000"/>
</kw>
<kw name="Check http return code">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-07-01T09:14:10.769000" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/du?path=/ 2&gt;&amp;1'.</msg>
<msg time="2024-07-01T09:14:10.783000" level="INFO">${rc} = 0</msg>
<msg time="2024-07-01T09:14:10.783000" level="INFO">${output} = 200</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-07-01T09:14:10.768000" elapsed="0.015000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-07-01T09:14:10.784000" level="INFO">200</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-07-01T09:14:10.783000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-07-01T09:14:10.784000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-07-01T09:14:10.784000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-07-01T09:14:10.767000" elapsed="0.018000"/>
</kw>
<msg time="2024-07-01T09:14:10.785000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-07-01T09:14:10.767000" elapsed="0.018000"/>
</kw>
<msg time="2024-07-01T09:14:10.785000" level="INFO">${result} = 200</msg>
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<status status="PASS" start="2024-07-01T09:14:10.767000" elapsed="0.018000"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" start="2024-07-01T09:14:10.785000" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-07-01T09:14:10.785000" elapsed="0.000000"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-07-01T09:14:10.786000" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-07-01T09:14:10.785000" elapsed="0.001000"/>
</branch>
<status status="PASS" start="2024-07-01T09:14:10.785000" elapsed="0.001000"/>
</if>
<arg>${url}</arg>
<arg>200</arg>
<status status="PASS" start="2024-07-01T09:14:10.766000" elapsed="0.020000"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" owner="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-07-01T09:14:10.786000" elapsed="0.001000"/>
</kw>
<status status="PASS" start="2024-07-01T09:14:10.786000" elapsed="0.001000"/>
</kw>
<kw name="Check http return code">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-07-01T09:14:10.790000" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/du?path=/ 2&gt;&amp;1'.</msg>
<msg time="2024-07-01T09:14:10.802000" level="INFO">${rc} = 0</msg>
<msg time="2024-07-01T09:14:10.802000" level="INFO">${output} = 200</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-07-01T09:14:10.788000" elapsed="0.014000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-07-01T09:14:10.803000" level="INFO">200</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-07-01T09:14:10.802000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-07-01T09:14:10.803000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-07-01T09:14:10.803000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-07-01T09:14:10.788000" elapsed="0.015000"/>
</kw>
<msg time="2024-07-01T09:14:10.803000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-07-01T09:14:10.788000" elapsed="0.015000"/>
</kw>
<msg time="2024-07-01T09:14:10.804000" level="INFO">${result} = 200</msg>
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<status status="PASS" start="2024-07-01T09:14:10.787000" elapsed="0.017000"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" start="2024-07-01T09:14:10.804000" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-07-01T09:14:10.804000" elapsed="0.000000"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-07-01T09:14:10.804000" elapsed="0.001000"/>
</kw>
<status status="PASS" start="2024-07-01T09:14:10.804000" elapsed="0.001000"/>
</branch>
<status status="PASS" start="2024-07-01T09:14:10.804000" elapsed="0.001000"/>
</if>
<arg>${url}</arg>
<arg>200</arg>
<status status="PASS" start="2024-07-01T09:14:10.787000" elapsed="0.018000"/>
</kw>
<arg>${DISK_USAGE_URL}?path=/</arg>
<status status="PASS" start="2024-07-01T09:14:10.700000" elapsed="0.105000"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" start="2024-07-01T09:14:10.700000" elapsed="0.105000"/>
</test>
<test id="s1-s3-s2-t6" name="Check Quota Usage api access" line="116">
<kw name="Check Access">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-07-01T09:14:10.809000" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg time="2024-07-01T09:14:10.811000" level="INFO">${rc} = 0</msg>
<msg time="2024-07-01T09:14:10.811000" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-07-01T09:14:10.807000" elapsed="0.004000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-07-01T09:14:10.812000" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-07-01T09:14:10.811000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-07-01T09:14:10.812000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-07-01T09:14:10.812000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-07-01T09:14:10.807000" elapsed="0.005000"/>
</kw>
<msg time="2024-07-01T09:14:10.812000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-07-01T09:14:10.807000" elapsed="0.006000"/>
</kw>
<arg>kdestroy</arg>
<status status="PASS" start="2024-07-01T09:14:10.806000" elapsed="0.007000"/>
</kw>
<kw name="Check http return code">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-07-01T09:14:10.815000" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/quota?path=/ 2&gt;&amp;1'.</msg>
<msg time="2024-07-01T09:14:10.839000" level="INFO">${rc} = 0</msg>
<msg time="2024-07-01T09:14:10.839000" level="INFO">${output} = 200</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-07-01T09:14:10.814000" elapsed="0.025000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-07-01T09:14:10.840000" level="INFO">200</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-07-01T09:14:10.839000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-07-01T09:14:10.840000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-07-01T09:14:10.840000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-07-01T09:14:10.814000" elapsed="0.026000"/>
</kw>
<msg time="2024-07-01T09:14:10.841000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-07-01T09:14:10.814000" elapsed="0.027000"/>
</kw>
<msg time="2024-07-01T09:14:10.841000" level="INFO">${result} = 200</msg>
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<status status="PASS" start="2024-07-01T09:14:10.813000" elapsed="0.028000"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" start="2024-07-01T09:14:10.841000" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-07-01T09:14:10.841000" elapsed="0.000000"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-07-01T09:14:10.841000" elapsed="0.001000"/>
</kw>
<status status="PASS" start="2024-07-01T09:14:10.841000" elapsed="0.001000"/>
</branch>
<status status="PASS" start="2024-07-01T09:14:10.841000" elapsed="0.001000"/>
</if>
<arg>${url}</arg>
<arg>401</arg>
<status status="PASS" start="2024-07-01T09:14:10.813000" elapsed="0.029000"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" owner="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-07-01T09:14:10.842000" elapsed="0.001000"/>
</kw>
<status status="PASS" start="2024-07-01T09:14:10.842000" elapsed="0.001000"/>
</kw>
<kw name="Check http return code">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-07-01T09:14:10.846000" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/quota?path=/ 2&gt;&amp;1'.</msg>
<msg time="2024-07-01T09:14:10.862000" level="INFO">${rc} = 0</msg>
<msg time="2024-07-01T09:14:10.862000" level="INFO">${output} = 200</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-07-01T09:14:10.845000" elapsed="0.017000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-07-01T09:14:10.863000" level="INFO">200</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-07-01T09:14:10.863000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-07-01T09:14:10.864000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-07-01T09:14:10.864000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-07-01T09:14:10.844000" elapsed="0.020000"/>
</kw>
<msg time="2024-07-01T09:14:10.864000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-07-01T09:14:10.844000" elapsed="0.020000"/>
</kw>
<msg time="2024-07-01T09:14:10.864000" level="INFO">${result} = 200</msg>
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<status status="PASS" start="2024-07-01T09:14:10.843000" elapsed="0.021000"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" start="2024-07-01T09:14:10.865000" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-07-01T09:14:10.865000" elapsed="0.000000"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-07-01T09:14:10.865000" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-07-01T09:14:10.865000" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-07-01T09:14:10.864000" elapsed="0.001000"/>
</if>
<arg>${url}</arg>
<arg>403</arg>
<status status="PASS" start="2024-07-01T09:14:10.843000" elapsed="0.022000"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" owner="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-07-01T09:14:10.866000" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-07-01T09:14:10.866000" elapsed="0.000000"/>
</kw>
<kw name="Check http return code">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-07-01T09:14:10.869000" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/quota?path=/ 2&gt;&amp;1'.</msg>
<msg time="2024-07-01T09:14:10.886000" level="INFO">${rc} = 0</msg>
<msg time="2024-07-01T09:14:10.886000" level="INFO">${output} = 200</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-07-01T09:14:10.868000" elapsed="0.018000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-07-01T09:14:10.886000" level="INFO">200</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-07-01T09:14:10.886000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-07-01T09:14:10.887000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-07-01T09:14:10.887000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-07-01T09:14:10.867000" elapsed="0.020000"/>
</kw>
<msg time="2024-07-01T09:14:10.887000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-07-01T09:14:10.867000" elapsed="0.020000"/>
</kw>
<msg time="2024-07-01T09:14:10.887000" level="INFO">${result} = 200</msg>
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<status status="PASS" start="2024-07-01T09:14:10.867000" elapsed="0.020000"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" start="2024-07-01T09:14:10.888000" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-07-01T09:14:10.888000" elapsed="0.000000"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-07-01T09:14:10.888000" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-07-01T09:14:10.888000" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-07-01T09:14:10.888000" elapsed="0.000000"/>
</if>
<arg>${url}</arg>
<arg>200</arg>
<status status="PASS" start="2024-07-01T09:14:10.866000" elapsed="0.023000"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" owner="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-07-01T09:14:10.889000" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-07-01T09:14:10.889000" elapsed="0.000000"/>
</kw>
<kw name="Check http return code">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-07-01T09:14:10.892000" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/quota?path=/ 2&gt;&amp;1'.</msg>
<msg time="2024-07-01T09:14:10.909000" level="INFO">${rc} = 0</msg>
<msg time="2024-07-01T09:14:10.909000" level="INFO">${output} = 200</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-07-01T09:14:10.891000" elapsed="0.018000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-07-01T09:14:10.910000" level="INFO">200</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-07-01T09:14:10.909000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-07-01T09:14:10.910000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-07-01T09:14:10.910000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-07-01T09:14:10.890000" elapsed="0.020000"/>
</kw>
<msg time="2024-07-01T09:14:10.910000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-07-01T09:14:10.890000" elapsed="0.021000"/>
</kw>
<msg time="2024-07-01T09:14:10.911000" level="INFO">${result} = 200</msg>
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<status status="PASS" start="2024-07-01T09:14:10.890000" elapsed="0.021000"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" start="2024-07-01T09:14:10.911000" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-07-01T09:14:10.911000" elapsed="0.000000"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-07-01T09:14:10.911000" elapsed="0.001000"/>
</kw>
<status status="PASS" start="2024-07-01T09:14:10.911000" elapsed="0.001000"/>
</branch>
<status status="PASS" start="2024-07-01T09:14:10.911000" elapsed="0.001000"/>
</if>
<arg>${url}</arg>
<arg>200</arg>
<status status="PASS" start="2024-07-01T09:14:10.889000" elapsed="0.023000"/>
</kw>
<arg>${QUOTA_USAGE_URL}?path=/</arg>
<status status="PASS" start="2024-07-01T09:14:10.806000" elapsed="0.106000"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" start="2024-07-01T09:14:10.805000" elapsed="0.107000"/>
</test>
<test id="s1-s3-s2-t7" name="Check File Size Distribution api access" line="119">
<kw name="Check Access">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-07-01T09:14:10.916000" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg time="2024-07-01T09:14:10.919000" level="INFO">${rc} = 0</msg>
<msg time="2024-07-01T09:14:10.919000" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-07-01T09:14:10.915000" elapsed="0.004000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-07-01T09:14:10.919000" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-07-01T09:14:10.919000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-07-01T09:14:10.920000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-07-01T09:14:10.919000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-07-01T09:14:10.914000" elapsed="0.006000"/>
</kw>
<msg time="2024-07-01T09:14:10.920000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-07-01T09:14:10.914000" elapsed="0.006000"/>
</kw>
<arg>kdestroy</arg>
<status status="PASS" start="2024-07-01T09:14:10.914000" elapsed="0.006000"/>
</kw>
<kw name="Check http return code">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-07-01T09:14:10.923000" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg time="2024-07-01T09:14:10.947000" level="INFO">${rc} = 0</msg>
<msg time="2024-07-01T09:14:10.948000" level="INFO">${output} = 200</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-07-01T09:14:10.922000" elapsed="0.026000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-07-01T09:14:10.949000" level="INFO">200</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-07-01T09:14:10.948000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-07-01T09:14:10.949000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-07-01T09:14:10.949000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-07-01T09:14:10.921000" elapsed="0.028000"/>
</kw>
<msg time="2024-07-01T09:14:10.949000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-07-01T09:14:10.921000" elapsed="0.028000"/>
</kw>
<msg time="2024-07-01T09:14:10.950000" level="INFO">${result} = 200</msg>
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<status status="PASS" start="2024-07-01T09:14:10.921000" elapsed="0.029000"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" start="2024-07-01T09:14:10.950000" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-07-01T09:14:10.950000" elapsed="0.000000"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-07-01T09:14:10.950000" elapsed="0.001000"/>
</kw>
<status status="PASS" start="2024-07-01T09:14:10.950000" elapsed="0.001000"/>
</branch>
<status status="PASS" start="2024-07-01T09:14:10.950000" elapsed="0.001000"/>
</if>
<arg>${url}</arg>
<arg>401</arg>
<status status="PASS" start="2024-07-01T09:14:10.920000" elapsed="0.031000"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" owner="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-07-01T09:14:10.952000" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-07-01T09:14:10.951000" elapsed="0.001000"/>
</kw>
<kw name="Check http return code">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-07-01T09:14:10.955000" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg time="2024-07-01T09:14:10.967000" level="INFO">${rc} = 0</msg>
<msg time="2024-07-01T09:14:10.968000" level="INFO">${output} = 200</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-07-01T09:14:10.953000" elapsed="0.015000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-07-01T09:14:10.969000" level="INFO">200</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-07-01T09:14:10.968000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-07-01T09:14:10.969000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-07-01T09:14:10.969000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-07-01T09:14:10.953000" elapsed="0.016000"/>
</kw>
<msg time="2024-07-01T09:14:10.969000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-07-01T09:14:10.953000" elapsed="0.016000"/>
</kw>
<msg time="2024-07-01T09:14:10.970000" level="INFO">${result} = 200</msg>
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<status status="PASS" start="2024-07-01T09:14:10.952000" elapsed="0.018000"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" start="2024-07-01T09:14:10.970000" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-07-01T09:14:10.970000" elapsed="0.000000"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-07-01T09:14:10.970000" elapsed="0.001000"/>
</kw>
<status status="PASS" start="2024-07-01T09:14:10.970000" elapsed="0.001000"/>
</branch>
<status status="PASS" start="2024-07-01T09:14:10.970000" elapsed="0.001000"/>
</if>
<arg>${url}</arg>
<arg>403</arg>
<status status="PASS" start="2024-07-01T09:14:10.952000" elapsed="0.019000"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" owner="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-07-01T09:14:10.971000" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-07-01T09:14:10.971000" elapsed="0.001000"/>
</kw>
<kw name="Check http return code">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-07-01T09:14:10.975000" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg time="2024-07-01T09:14:10.986000" level="INFO">${rc} = 0</msg>
<msg time="2024-07-01T09:14:10.986000" level="INFO">${output} = 200</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-07-01T09:14:10.973000" elapsed="0.013000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-07-01T09:14:10.987000" level="INFO">200</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-07-01T09:14:10.986000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-07-01T09:14:10.987000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-07-01T09:14:10.987000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-07-01T09:14:10.973000" elapsed="0.014000"/>
</kw>
<msg time="2024-07-01T09:14:10.987000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-07-01T09:14:10.972000" elapsed="0.015000"/>
</kw>
<msg time="2024-07-01T09:14:10.988000" level="INFO">${result} = 200</msg>
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<status status="PASS" start="2024-07-01T09:14:10.972000" elapsed="0.016000"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" start="2024-07-01T09:14:10.988000" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-07-01T09:14:10.988000" elapsed="0.000000"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-07-01T09:14:10.988000" elapsed="0.001000"/>
</kw>
<status status="PASS" start="2024-07-01T09:14:10.988000" elapsed="0.001000"/>
</branch>
<status status="PASS" start="2024-07-01T09:14:10.988000" elapsed="0.001000"/>
</if>
<arg>${url}</arg>
<arg>200</arg>
<status status="PASS" start="2024-07-01T09:14:10.972000" elapsed="0.017000"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" owner="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-07-01T09:14:10.989000" elapsed="0.001000"/>
</kw>
<status status="PASS" start="2024-07-01T09:14:10.989000" elapsed="0.001000"/>
</kw>
<kw name="Check http return code">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-07-01T09:14:10.993000" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg time="2024-07-01T09:14:11.003000" level="INFO">${rc} = 0</msg>
<msg time="2024-07-01T09:14:11.003000" level="INFO">${output} = 200</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-07-01T09:14:10.991000" elapsed="0.012000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-07-01T09:14:11.004000" level="INFO">200</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-07-01T09:14:11.004000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-07-01T09:14:11.005000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-07-01T09:14:11.004000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-07-01T09:14:10.991000" elapsed="0.014000"/>
</kw>
<msg time="2024-07-01T09:14:11.005000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-07-01T09:14:10.991000" elapsed="0.014000"/>
</kw>
<msg time="2024-07-01T09:14:11.005000" level="INFO">${result} = 200</msg>
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<status status="PASS" start="2024-07-01T09:14:10.990000" elapsed="0.015000"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" start="2024-07-01T09:14:11.006000" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-07-01T09:14:11.005000" elapsed="0.001000"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-07-01T09:14:11.006000" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-07-01T09:14:11.006000" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-07-01T09:14:11.005000" elapsed="0.001000"/>
</if>
<arg>${url}</arg>
<arg>200</arg>
<status status="PASS" start="2024-07-01T09:14:10.990000" elapsed="0.016000"/>
</kw>
<arg>${FILE_SIZE_DIST_URL}?path=/</arg>
<status status="PASS" start="2024-07-01T09:14:10.913000" elapsed="0.093000"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" start="2024-07-01T09:14:10.913000" elapsed="0.094000"/>
</test>
<test id="s1-s3-s2-t8" name="Check Recon Namespace Summary Root" line="122">
<kw name="Wait For Summary">
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Test Summary">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-07-01T09:14:11.011000" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg time="2024-07-01T09:14:11.023000" level="INFO">${rc} = 0</msg>
<msg time="2024-07-01T09:14:11.023000" level="INFO">${output} = {"path":"","type":"ROOT","countStats":{"numVolume":3,"numBucket":2,"numDir":1,"numKey":11},"objectInfo":{"metadata":null,"name":null,"quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"creationTi...</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-07-01T09:14:11.010000" elapsed="0.013000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-07-01T09:14:11.024000" level="INFO">{"path":"","type":"ROOT","countStats":{"numVolume":3,"numBucket":2,"numDir":1,"numKey":11},"objectInfo":{"metadata":null,"name":null,"quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"creationTime":0,"modificationTime":0,"acls":null},"status":"OK"}</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-07-01T09:14:11.023000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-07-01T09:14:11.024000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-07-01T09:14:11.024000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-07-01T09:14:11.009000" elapsed="0.016000"/>
</kw>
<msg time="2024-07-01T09:14:11.025000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-07-01T09:14:11.009000" elapsed="0.016000"/>
</kw>
<msg time="2024-07-01T09:14:11.025000" level="INFO">${result} = {"path":"","type":"ROOT","countStats":{"numVolume":3,"numBucket":2,"numDir":1,"numKey":11},"objectInfo":{"metadata":null,"name":null,"quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"creationTi...</msg>
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<status status="PASS" start="2024-07-01T09:14:11.009000" elapsed="0.016000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-07-01T09:14:11.025000" elapsed="0.000000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-07-01T09:14:11.026000" elapsed="0.000000"/>
</kw>
<arg>${url}</arg>
<arg>${expected}</arg>
<status status="PASS" start="2024-07-01T09:14:11.008000" elapsed="0.018000"/>
</kw>
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-07-01T09:14:11.008000" elapsed="0.018000"/>
</kw>
<arg>${SUMMARY_URL}?path=/</arg>
<arg>ROOT</arg>
<status status="PASS" start="2024-07-01T09:14:11.008000" elapsed="0.018000"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" start="2024-07-01T09:14:11.007000" elapsed="0.019000"/>
</test>
<test id="s1-s3-s2-t9" name="Check Recon Namespace Summary Volume" line="125">
<kw name="Wait For Summary">
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Test Summary">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-07-01T09:14:11.031000" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-ksruv 2&gt;&amp;1'.</msg>
<msg time="2024-07-01T09:14:11.043000" level="INFO">${rc} = 0</msg>
<msg time="2024-07-01T09:14:11.043000" level="INFO">${output} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-07-01T09:14:11.030000" elapsed="0.013000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-07-01T09:14:11.044000" level="INFO">{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-07-01T09:14:11.043000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-07-01T09:14:11.044000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-07-01T09:14:11.044000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-07-01T09:14:11.029000" elapsed="0.015000"/>
</kw>
<msg time="2024-07-01T09:14:11.044000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-07-01T09:14:11.029000" elapsed="0.016000"/>
</kw>
<msg time="2024-07-01T09:14:11.045000" level="INFO">${result} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<status status="PASS" start="2024-07-01T09:14:11.029000" elapsed="0.016000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-07-01T09:14:11.045000" level="FAIL">'{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}' does not contain '"status":"OK"'</msg>
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-07-01T09:14:11.045000" elapsed="0.000000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" start="2024-07-01T09:14:11.045000" elapsed="0.000000"/>
</kw>
<arg>${url}</arg>
<arg>${expected}</arg>
<status status="FAIL" start="2024-07-01T09:14:11.028000" elapsed="0.018000"/>
</kw>
<kw name="Test Summary">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-07-01T09:14:21.049000" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-ksruv 2&gt;&amp;1'.</msg>
<msg time="2024-07-01T09:14:21.061000" level="INFO">${rc} = 0</msg>
<msg time="2024-07-01T09:14:21.061000" level="INFO">${output} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-07-01T09:14:21.048000" elapsed="0.013000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-07-01T09:14:21.062000" level="INFO">{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-07-01T09:14:21.061000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-07-01T09:14:21.062000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-07-01T09:14:21.062000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-07-01T09:14:21.047000" elapsed="0.016000"/>
</kw>
<msg time="2024-07-01T09:14:21.063000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-07-01T09:14:21.047000" elapsed="0.016000"/>
</kw>
<msg time="2024-07-01T09:14:21.063000" level="INFO">${result} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<status status="PASS" start="2024-07-01T09:14:21.047000" elapsed="0.016000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-07-01T09:14:21.063000" level="FAIL">'{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}' does not contain '"status":"OK"'</msg>
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-07-01T09:14:21.063000" elapsed="0.001000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" start="2024-07-01T09:14:21.064000" elapsed="0.000000"/>
</kw>
<arg>${url}</arg>
<arg>${expected}</arg>
<status status="FAIL" start="2024-07-01T09:14:21.046000" elapsed="0.018000"/>
</kw>
<kw name="Test Summary">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-07-01T09:14:31.068000" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-ksruv 2&gt;&amp;1'.</msg>
<msg time="2024-07-01T09:14:31.079000" level="INFO">${rc} = 0</msg>
<msg time="2024-07-01T09:14:31.079000" level="INFO">${output} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-07-01T09:14:31.066000" elapsed="0.013000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-07-01T09:14:31.079000" level="INFO">{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-07-01T09:14:31.079000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-07-01T09:14:31.080000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-07-01T09:14:31.080000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-07-01T09:14:31.066000" elapsed="0.014000"/>
</kw>
<msg time="2024-07-01T09:14:31.081000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-07-01T09:14:31.065000" elapsed="0.016000"/>
</kw>
<msg time="2024-07-01T09:14:31.081000" level="INFO">${result} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<status status="PASS" start="2024-07-01T09:14:31.065000" elapsed="0.016000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-07-01T09:14:31.081000" level="FAIL">'{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}' does not contain '"status":"OK"'</msg>
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-07-01T09:14:31.081000" elapsed="0.001000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" start="2024-07-01T09:14:31.082000" elapsed="0.000000"/>
</kw>
<arg>${url}</arg>
<arg>${expected}</arg>
<status status="FAIL" start="2024-07-01T09:14:31.064000" elapsed="0.018000"/>
</kw>
<kw name="Test Summary">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-07-01T09:14:41.086000" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-ksruv 2&gt;&amp;1'.</msg>
<msg time="2024-07-01T09:14:41.097000" level="INFO">${rc} = 0</msg>
<msg time="2024-07-01T09:14:41.097000" level="INFO">${output} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-07-01T09:14:41.084000" elapsed="0.013000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-07-01T09:14:41.098000" level="INFO">{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-07-01T09:14:41.098000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-07-01T09:14:41.099000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-07-01T09:14:41.099000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-07-01T09:14:41.084000" elapsed="0.015000"/>
</kw>
<msg time="2024-07-01T09:14:41.099000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-07-01T09:14:41.084000" elapsed="0.015000"/>
</kw>
<msg time="2024-07-01T09:14:41.099000" level="INFO">${result} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<status status="PASS" start="2024-07-01T09:14:41.083000" elapsed="0.016000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-07-01T09:14:41.100000" level="FAIL">'{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}' does not contain '"status":"OK"'</msg>
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-07-01T09:14:41.100000" elapsed="0.000000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" start="2024-07-01T09:14:41.100000" elapsed="0.000000"/>
</kw>
<arg>${url}</arg>
<arg>${expected}</arg>
<status status="FAIL" start="2024-07-01T09:14:41.082000" elapsed="0.018000"/>
</kw>
<kw name="Test Summary">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-07-01T09:14:51.105000" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-ksruv 2&gt;&amp;1'.</msg>
<msg time="2024-07-01T09:14:51.116000" level="INFO">${rc} = 0</msg>
<msg time="2024-07-01T09:14:51.116000" level="INFO">${output} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-07-01T09:14:51.103000" elapsed="0.013000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-07-01T09:14:51.117000" level="INFO">{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-07-01T09:14:51.117000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-07-01T09:14:51.118000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-07-01T09:14:51.117000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-07-01T09:14:51.103000" elapsed="0.015000"/>
</kw>
<msg time="2024-07-01T09:14:51.118000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-07-01T09:14:51.102000" elapsed="0.016000"/>
</kw>
<msg time="2024-07-01T09:14:51.119000" level="INFO">${result} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<status status="PASS" start="2024-07-01T09:14:51.102000" elapsed="0.017000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-07-01T09:14:51.119000" level="FAIL">'{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}' does not contain '"status":"OK"'</msg>
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-07-01T09:14:51.119000" elapsed="0.000000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" start="2024-07-01T09:14:51.120000" elapsed="0.000000"/>
</kw>
<arg>${url}</arg>
<arg>${expected}</arg>
<status status="FAIL" start="2024-07-01T09:14:51.101000" elapsed="0.019000"/>
</kw>
<kw name="Test Summary">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-07-01T09:15:01.124000" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-ksruv 2&gt;&amp;1'.</msg>
<msg time="2024-07-01T09:15:01.145000" level="INFO">${rc} = 0</msg>
<msg time="2024-07-01T09:15:01.146000" level="INFO">${output} = {"path":"","type":"VOLUME","countStats":{"numVolume":-1,"numBucket":1,"numDir":2,"numKey":2},"objectInfo":{"metadata":{},"name":"vol-ksruv","quotaInBytes":-1,"quotaInNamespace":-1,"usedNamespace":1,"c...</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-07-01T09:15:01.122000" elapsed="0.024000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-07-01T09:15:01.146000" level="INFO">{"path":"","type":"VOLUME","countStats":{"numVolume":-1,"numBucket":1,"numDir":2,"numKey":2},"objectInfo":{"metadata":{},"name":"vol-ksruv","quotaInBytes":-1,"quotaInNamespace":-1,"usedNamespace":1,"creationTime":1719825238113,"modificationTime":1719825238113,"acls":[{"type":"USER","name":"hadoop","scope":"ACCESS","aclList":["ALL"]},{"type":"GROUP","name":"hadoop","scope":"ACCESS","aclList":["ALL"]}],"admin":"hadoop","owner":"hadoop","volume":"vol-ksruv"},"status":"OK"}</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-07-01T09:15:01.146000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-07-01T09:15:01.147000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-07-01T09:15:01.147000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-07-01T09:15:01.122000" elapsed="0.025000"/>
</kw>
<msg time="2024-07-01T09:15:01.147000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-07-01T09:15:01.121000" elapsed="0.026000"/>
</kw>
<msg time="2024-07-01T09:15:01.148000" level="INFO">${result} = {"path":"","type":"VOLUME","countStats":{"numVolume":-1,"numBucket":1,"numDir":2,"numKey":2},"objectInfo":{"metadata":{},"name":"vol-ksruv","quotaInBytes":-1,"quotaInNamespace":-1,"usedNamespace":1,"c...</msg>
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<status status="PASS" start="2024-07-01T09:15:01.121000" elapsed="0.027000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-07-01T09:15:01.148000" elapsed="0.000000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-07-01T09:15:01.148000" elapsed="0.001000"/>
</kw>
<arg>${url}</arg>
<arg>${expected}</arg>
<status status="PASS" start="2024-07-01T09:15:01.120000" elapsed="0.029000"/>
</kw>
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-07-01T09:14:11.028000" elapsed="50.121000"/>
</kw>
<arg>${SUMMARY_URL}?path=/${VOLUME}</arg>
<arg>VOLUME</arg>
<status status="PASS" start="2024-07-01T09:14:11.027000" elapsed="50.122000"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" start="2024-07-01T09:14:11.027000" elapsed="50.122000"/>
</test>
<test id="s1-s3-s2-t10" name="Check Recon Namespace Summary Bucket" line="128">
<kw name="Wait For Summary">
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Test Summary">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-07-01T09:15:01.155000" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-ksruv/buc-jhsml 2&gt;&amp;1'.</msg>
<msg time="2024-07-01T09:15:01.173000" level="INFO">${rc} = 0</msg>
<msg time="2024-07-01T09:15:01.173000" level="INFO">${output} = {"path":"","type":"BUCKET","countStats":{"numVolume":-1,"numBucket":-1,"numDir":2,"numKey":2},"objectInfo":{"versioningEnabled":false,"metadata":{},"name":"buc-jhsml","quotaInBytes":-1,"quotaInNamespa...</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-07-01T09:15:01.153000" elapsed="0.020000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-07-01T09:15:01.174000" level="INFO">{"path":"","type":"BUCKET","countStats":{"numVolume":-1,"numBucket":-1,"numDir":2,"numKey":2},"objectInfo":{"versioningEnabled":false,"metadata":{},"name":"buc-jhsml","quotaInBytes":-1,"quotaInNamespace":-1,"usedNamespace":4,"creationTime":1719825241165,"modificationTime":1719825241165,"acls":[{"type":"USER","name":"hadoop","scope":"ACCESS","aclList":["ALL"]},{"type":"GROUP","name":"hadoop","scope":"ACCESS","aclList":["ALL"]}],"volumeName":"vol-ksruv","storageType":"DISK","versioning":false,"usedBytes":30318,"encryptionInfo":null,"replicationConfigInfo":null,"sourceVolume":null,"sourceBucket":null,"bucketLayout":"FILE_SYSTEM_OPTIMIZED","owner":"hadoop"},"status":"OK"}</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-07-01T09:15:01.174000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-07-01T09:15:01.175000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-07-01T09:15:01.175000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-07-01T09:15:01.152000" elapsed="0.023000"/>
</kw>
<msg time="2024-07-01T09:15:01.175000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-07-01T09:15:01.152000" elapsed="0.023000"/>
</kw>
<msg time="2024-07-01T09:15:01.175000" level="INFO">${result} = {"path":"","type":"BUCKET","countStats":{"numVolume":-1,"numBucket":-1,"numDir":2,"numKey":2},"objectInfo":{"versioningEnabled":false,"metadata":{},"name":"buc-jhsml","quotaInBytes":-1,"quotaInNamespa...</msg>
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<status status="PASS" start="2024-07-01T09:15:01.152000" elapsed="0.023000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-07-01T09:15:01.176000" elapsed="0.000000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-07-01T09:15:01.176000" elapsed="0.000000"/>
</kw>
<arg>${url}</arg>
<arg>${expected}</arg>
<status status="PASS" start="2024-07-01T09:15:01.151000" elapsed="0.025000"/>
</kw>
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-07-01T09:15:01.151000" elapsed="0.026000"/>
</kw>
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}</arg>
<arg>BUCKET</arg>
<status status="PASS" start="2024-07-01T09:15:01.150000" elapsed="0.027000"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" start="2024-07-01T09:15:01.149000" elapsed="0.028000"/>
</test>
<test id="s1-s3-s2-t11" name="Check Recon Namespace Summary Key" line="131">
<kw name="Wait For Summary">
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Test Summary">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-07-01T09:15:01.182000" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-ksruv/buc-jhsml/file1 2&gt;&amp;1'.</msg>
<msg time="2024-07-01T09:15:01.216000" level="INFO">${rc} = 0</msg>
<msg time="2024-07-01T09:15:01.216000" level="INFO">${output} = {"path":"","type":"KEY","countStats":{"numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0},"objectInfo":{"fileName":"file1","file":true,"metadata":{},"name":"file1","quotaInBytes":0,"quotaInNamespace...</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-07-01T09:15:01.180000" elapsed="0.036000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-07-01T09:15:01.217000" level="INFO">{"path":"","type":"KEY","countStats":{"numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0},"objectInfo":{"fileName":"file1","file":true,"metadata":{},"name":"file1","quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"creationTime":1719825244410,"modificationTime":1719825245377,"acls":[{"type":"USER","name":"hadoop","scope":"ACCESS","aclList":["ALL"]},{"type":"GROUP","name":"hadoop","scope":"ACCESS","aclList":["ALL"]}],"volumeName":"vol-ksruv","bucketName":"buc-jhsml","keyName":"file1","dataSize":4068,"keyLocationVersions":[{"version":0,"locationVersionMap":{"0":[{"blockID":{"containerBlockID":{"containerID":3,"localID":113750153625600012},"blockCommitSequenceId":10,"replicaIndex":null,"containerID":3,"localID":113750153625600012},"length":4068,"offset":0,"token":null,"createVersion":0,"pipeline":null,"partNumber":0,"containerID":3,"localID":113750153625600012,"blockCommitSequenceId":10}]},"locationList":[{"blockID":{"containerBlockID":{"containerID":3,"localID":113750153625600012},"blockCommitSequenceId":10,"replicaIndex":null,"containerID":3,"localID":113750153625600012},"length":4068,"offset":0,"token":null,"createVersion":0,"pipeline":null,"partNumber":0,"containerID":3,"localID":113750153625600012,"blockCommitSequenceId":10}],"multipartKey":false,"blocksLatestVersionOnly":[{"blockID":{"containerBlockID":{"containerID":3,"localID":113750153625600012},"blockCommitSequenceId":10,"replicaIndex":null,"containerID":3,"localID":113750153625600012},"length":4068,"offset":0,"token":null,"createVersion":0,"pipeline":null,"partNumber":0,"containerID":3,"localID":113750153625600012,"blockCommitSequenceId":10}],"locationLists":[[{"blockID":{"containerBlockID":{"containerID":3,"localID":113750153625600012},"blockCommitSequenceId":10,"replicaIndex":null,"containerID":3,"localID":113750153625600012},"length":4068,"offset":0,"token":null,"createVersion":0,"pipeline":null,"partNumber":0,"containerID":3,"localID":113750153625600012,"blockCommitSequenceId":10}]],"locationListCount":1}],"replicationConfig":{"replicationFactor":"THREE","requiredNodes":3,"replicationType":"RATIS"},"encInfo":null},"status":"OK"}</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-07-01T09:15:01.217000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-07-01T09:15:01.217000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-07-01T09:15:01.217000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-07-01T09:15:01.180000" elapsed="0.038000"/>
</kw>
<msg time="2024-07-01T09:15:01.218000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-07-01T09:15:01.180000" elapsed="0.038000"/>
</kw>
<msg time="2024-07-01T09:15:01.218000" level="INFO">${result} = {"path":"","type":"KEY","countStats":{"numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0},"objectInfo":{"fileName":"file1","file":true,"metadata":{},"name":"file1","quotaInBytes":0,"quotaInNamespace...</msg>
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<status status="PASS" start="2024-07-01T09:15:01.179000" elapsed="0.039000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-07-01T09:15:01.218000" elapsed="0.001000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-07-01T09:15:01.219000" elapsed="0.000000"/>
</kw>
<arg>${url}</arg>
<arg>${expected}</arg>
<status status="PASS" start="2024-07-01T09:15:01.179000" elapsed="0.040000"/>
</kw>
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-07-01T09:15:01.179000" elapsed="0.040000"/>
</kw>
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}/file1</arg>
<arg>KEY</arg>
<status status="PASS" start="2024-07-01T09:15:01.178000" elapsed="0.041000"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" start="2024-07-01T09:15:01.177000" elapsed="0.042000"/>
</test>
<test id="s1-s3-s2-t12" name="Check Recon Namespace Summary Directory" line="134">
<kw name="Run Keyword If" owner="BuiltIn">
<arg>'${BUCKET_LAYOUT}' == 'LEGACY'</arg>
<arg>Wait For Summary</arg>
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}/dir1/dir2/</arg>
<arg>DIRECTORY</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-07-01T09:15:01.220000" elapsed="0.001000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Wait For Summary">
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Test Summary">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-07-01T09:15:01.225000" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-ksruv/buc-jhsml/dir1/dir2 2&gt;&amp;1'.</msg>
<msg time="2024-07-01T09:15:01.239000" level="INFO">${rc} = 0</msg>
<msg time="2024-07-01T09:15:01.239000" level="INFO">${output} = {"path":"","type":"DIRECTORY","countStats":{"numVolume":-1,"numBucket":-1,"numDir":0,"numKey":1},"objectInfo":{"metadata":{},"name":"dir2","quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"crea...</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-07-01T09:15:01.224000" elapsed="0.015000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-07-01T09:15:01.240000" level="INFO">{"path":"","type":"DIRECTORY","countStats":{"numVolume":-1,"numBucket":-1,"numDir":0,"numKey":1},"objectInfo":{"metadata":{},"name":"dir2","quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"creationTime":1719825249073,"modificationTime":1719825249073,"acls":[{"type":"USER","name":"hadoop","scope":"ACCESS","aclList":["ALL"]},{"type":"GROUP","name":"hadoop","scope":"ACCESS","aclList":["ALL"]}]},"status":"OK"}</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-07-01T09:15:01.240000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-07-01T09:15:01.240000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-07-01T09:15:01.240000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-07-01T09:15:01.223000" elapsed="0.018000"/>
</kw>
<msg time="2024-07-01T09:15:01.241000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-07-01T09:15:01.223000" elapsed="0.018000"/>
</kw>
<msg time="2024-07-01T09:15:01.241000" level="INFO">${result} = {"path":"","type":"DIRECTORY","countStats":{"numVolume":-1,"numBucket":-1,"numDir":0,"numKey":1},"objectInfo":{"metadata":{},"name":"dir2","quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"crea...</msg>
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<status status="PASS" start="2024-07-01T09:15:01.222000" elapsed="0.019000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-07-01T09:15:01.241000" elapsed="0.000000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-07-01T09:15:01.242000" elapsed="0.000000"/>
</kw>
<arg>${url}</arg>
<arg>${expected}</arg>
<status status="PASS" start="2024-07-01T09:15:01.222000" elapsed="0.020000"/>
</kw>
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-07-01T09:15:01.222000" elapsed="0.020000"/>
</kw>
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}/dir1/dir2</arg>
<arg>DIRECTORY</arg>
<status status="PASS" start="2024-07-01T09:15:01.221000" elapsed="0.021000"/>
</kw>
<arg>'${BUCKET_LAYOUT}' == 'FILE_SYSTEM_OPTIMIZED'</arg>
<arg>Wait For Summary</arg>
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}/dir1/dir2</arg>
<arg>DIRECTORY</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-07-01T09:15:01.221000" elapsed="0.021000"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" start="2024-07-01T09:15:01.220000" elapsed="0.022000"/>
</test>
<test id="s1-s3-s2-t13" name="Check Recon Namespace Disk Usage" line="138">
<kw name="Wait For Summary">
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Test Summary">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-07-01T09:15:01.247000" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/du?path=/vol-ksruv/buc-jhsml&amp;files=true&amp;replica=true 2&gt;&amp;1'.</msg>
<msg time="2024-07-01T09:15:01.259000" level="INFO">${rc} = 0</msg>
<msg time="2024-07-01T09:15:01.259000" level="INFO">${output} = {"status":"OK","path":"/vol-ksruv/buc-jhsml","size":10106,"sizeWithReplica":-1,"subPathCount":1,"subPaths":[{"key":false,"path":"/vol-ksruv/buc-jhsml/dir1","size":6038,"sizeWithReplica":-1,"isKey":fal...</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-07-01T09:15:01.246000" elapsed="0.013000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-07-01T09:15:01.259000" level="INFO">{"status":"OK","path":"/vol-ksruv/buc-jhsml","size":10106,"sizeWithReplica":-1,"subPathCount":1,"subPaths":[{"key":false,"path":"/vol-ksruv/buc-jhsml/dir1","size":6038,"sizeWithReplica":-1,"isKey":false}],"sizeDirectKey":4068}</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-07-01T09:15:01.259000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-07-01T09:15:01.260000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-07-01T09:15:01.260000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-07-01T09:15:01.245000" elapsed="0.015000"/>
</kw>
<msg time="2024-07-01T09:15:01.260000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-07-01T09:15:01.245000" elapsed="0.015000"/>
</kw>
<msg time="2024-07-01T09:15:01.261000" level="INFO">${result} = {"status":"OK","path":"/vol-ksruv/buc-jhsml","size":10106,"sizeWithReplica":-1,"subPathCount":1,"subPaths":[{"key":false,"path":"/vol-ksruv/buc-jhsml/dir1","size":6038,"sizeWithReplica":-1,"isKey":fal...</msg>
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<status status="PASS" start="2024-07-01T09:15:01.245000" elapsed="0.016000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-07-01T09:15:01.261000" elapsed="0.000000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-07-01T09:15:01.261000" elapsed="0.000000"/>
</kw>
<arg>${url}</arg>
<arg>${expected}</arg>
<status status="PASS" start="2024-07-01T09:15:01.244000" elapsed="0.017000"/>
</kw>
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-07-01T09:15:01.244000" elapsed="0.018000"/>
</kw>
<arg>${DISK_USAGE_URL}?path=/${VOLUME}/${BUCKET}&amp;files=true&amp;replica=true</arg>
<arg>\"sizeWithReplica\"</arg>
<status status="PASS" start="2024-07-01T09:15:01.243000" elapsed="0.019000"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" start="2024-07-01T09:15:01.243000" elapsed="0.019000"/>
</test>
<test id="s1-s3-s2-t14" name="Check Recon Namespace Volume Quota Usage" line="141">
<kw name="Wait For Summary">
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Test Summary">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-07-01T09:15:01.267000" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/quota?path=/vol-ksruv 2&gt;&amp;1'.</msg>
<msg time="2024-07-01T09:15:01.278000" level="INFO">${rc} = 0</msg>
<msg time="2024-07-01T09:15:01.279000" level="INFO">${output} = {"allowed":-1,"used":10106,"status":"OK"}</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-07-01T09:15:01.265000" elapsed="0.014000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-07-01T09:15:01.279000" level="INFO">{"allowed":-1,"used":10106,"status":"OK"}</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-07-01T09:15:01.279000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-07-01T09:15:01.280000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-07-01T09:15:01.280000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-07-01T09:15:01.265000" elapsed="0.015000"/>
</kw>
<msg time="2024-07-01T09:15:01.280000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-07-01T09:15:01.265000" elapsed="0.015000"/>
</kw>
<msg time="2024-07-01T09:15:01.280000" level="INFO">${result} = {"allowed":-1,"used":10106,"status":"OK"}</msg>
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<status status="PASS" start="2024-07-01T09:15:01.264000" elapsed="0.016000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-07-01T09:15:01.280000" elapsed="0.001000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-07-01T09:15:01.281000" elapsed="0.000000"/>
</kw>
<arg>${url}</arg>
<arg>${expected}</arg>
<status status="PASS" start="2024-07-01T09:15:01.264000" elapsed="0.017000"/>
</kw>
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-07-01T09:15:01.263000" elapsed="0.018000"/>
</kw>
<arg>${QUOTA_USAGE_URL}?path=/${VOLUME}</arg>
<arg>\"used\"</arg>
<status status="PASS" start="2024-07-01T09:15:01.263000" elapsed="0.018000"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" start="2024-07-01T09:15:01.262000" elapsed="0.019000"/>
</test>
<test id="s1-s3-s2-t15" name="Check Recon Namespace Bucket Quota Usage" line="144">
<kw name="Wait For Summary">
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Test Summary">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-07-01T09:15:01.286000" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/quota?path=/vol-ksruv/buc-jhsml 2&gt;&amp;1'.</msg>
<msg time="2024-07-01T09:15:01.298000" level="INFO">${rc} = 0</msg>
<msg time="2024-07-01T09:15:01.298000" level="INFO">${output} = {"allowed":-1,"used":10106,"status":"OK"}</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-07-01T09:15:01.285000" elapsed="0.013000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-07-01T09:15:01.299000" level="INFO">{"allowed":-1,"used":10106,"status":"OK"}</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-07-01T09:15:01.298000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-07-01T09:15:01.299000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-07-01T09:15:01.299000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-07-01T09:15:01.284000" elapsed="0.015000"/>
</kw>
<msg time="2024-07-01T09:15:01.299000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-07-01T09:15:01.284000" elapsed="0.015000"/>
</kw>
<msg time="2024-07-01T09:15:01.300000" level="INFO">${result} = {"allowed":-1,"used":10106,"status":"OK"}</msg>
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<status status="PASS" start="2024-07-01T09:15:01.284000" elapsed="0.016000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-07-01T09:15:01.300000" elapsed="0.000000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-07-01T09:15:01.300000" elapsed="0.001000"/>
</kw>
<arg>${url}</arg>
<arg>${expected}</arg>
<status status="PASS" start="2024-07-01T09:15:01.283000" elapsed="0.018000"/>
</kw>
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-07-01T09:15:01.283000" elapsed="0.018000"/>
</kw>
<arg>${QUOTA_USAGE_URL}?path=/${VOLUME}/${BUCKET}</arg>
<arg>\"used\"</arg>
<status status="PASS" start="2024-07-01T09:15:01.283000" elapsed="0.018000"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" start="2024-07-01T09:15:01.282000" elapsed="0.019000"/>
</test>
<test id="s1-s3-s2-t16" name="Check Recon Namespace File Size Distribution Root" line="147">
<kw name="Wait For Summary">
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Test Summary">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-07-01T09:15:01.306000" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg time="2024-07-01T09:15:01.317000" level="INFO">${rc} = 0</msg>
<msg time="2024-07-01T09:15:01.317000" level="INFO">${output} = {"dist":[0,10,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"status":"OK"}</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-07-01T09:15:01.304000" elapsed="0.013000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-07-01T09:15:01.317000" level="INFO">{"dist":[0,10,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"status":"OK"}</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-07-01T09:15:01.317000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-07-01T09:15:01.318000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-07-01T09:15:01.318000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-07-01T09:15:01.304000" elapsed="0.014000"/>
</kw>
<msg time="2024-07-01T09:15:01.318000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-07-01T09:15:01.304000" elapsed="0.014000"/>
</kw>
<msg time="2024-07-01T09:15:01.318000" level="INFO">${result} = {"dist":[0,10,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"status":"OK"}</msg>
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<status status="PASS" start="2024-07-01T09:15:01.303000" elapsed="0.016000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-07-01T09:15:01.319000" elapsed="0.000000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-07-01T09:15:01.319000" elapsed="0.000000"/>
</kw>
<arg>${url}</arg>
<arg>${expected}</arg>
<status status="PASS" start="2024-07-01T09:15:01.303000" elapsed="0.016000"/>
</kw>
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-07-01T09:15:01.303000" elapsed="0.016000"/>
</kw>
<arg>${FILE_SIZE_DIST_URL}?path=/</arg>
<arg>\"dist\"</arg>
<status status="PASS" start="2024-07-01T09:15:01.302000" elapsed="0.018000"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" start="2024-07-01T09:15:01.301000" elapsed="0.019000"/>
</test>
<doc>Smoke test for Recon Namespace Summary Endpoint for FILE_SYSTEM_OPTIMIZED buckets.</doc>
<status status="PASS" start="2024-07-01T09:13:54.855000" elapsed="66.465000"/>
</suite>
<status status="PASS" start="2024-07-01T09:13:41.174000" elapsed="80.149000"/>
</suite>
<suite id="s1-s4" name="Loaddata" source="/opt/hadoop/smoketest/topology/loaddata.robot">
<test id="s1-s4-t1" name="Create a volume, bucket and key" line="27">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-07-01T09:15:01.856000" level="INFO">Running command 'ozone sh volume create topvol1 2&gt;&amp;1'.</msg>
<msg time="2024-07-01T09:15:05.014000" level="INFO">${rc} = 0</msg>
<msg time="2024-07-01T09:15:05.014000" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-07-01T09:15:01.855000" elapsed="3.159000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-07-01T09:15:05.015000" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-07-01T09:15:05.015000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-07-01T09:15:05.016000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-07-01T09:15:05.015000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-07-01T09:15:01.854000" elapsed="3.162000"/>
</kw>
<msg time="2024-07-01T09:15:05.016000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-07-01T09:15:01.854000" elapsed="3.162000"/>
</kw>
<msg time="2024-07-01T09:15:05.016000" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<var>${output}</var>
<arg>ozone sh volume create topvol1</arg>
<status status="PASS" start="2024-07-01T09:15:01.853000" elapsed="3.163000"/>
</kw>
<kw name="Should Not Contain" owner="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" start="2024-07-01T09:15:05.016000" elapsed="0.001000"/>
</kw>
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-07-01T09:15:05.020000" level="INFO">Running command 'ozone sh bucket create /topvol1/bucket1 2&gt;&amp;1'.</msg>
<msg time="2024-07-01T09:15:08.198000" level="INFO">${rc} = 0</msg>
<msg time="2024-07-01T09:15:08.198000" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-07-01T09:15:05.018000" elapsed="3.180000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-07-01T09:15:08.199000" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-07-01T09:15:08.198000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-07-01T09:15:08.199000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-07-01T09:15:08.199000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-07-01T09:15:05.018000" elapsed="3.182000"/>
</kw>
<msg time="2024-07-01T09:15:08.200000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-07-01T09:15:05.017000" elapsed="3.183000"/>
</kw>
<msg time="2024-07-01T09:15:08.200000" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<var>${output}</var>
<arg>ozone sh bucket create /topvol1/bucket1</arg>
<status status="PASS" start="2024-07-01T09:15:05.017000" elapsed="3.183000"/>
</kw>
<kw name="Should Not Contain" owner="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" start="2024-07-01T09:15:08.200000" elapsed="0.000000"/>
</kw>
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-07-01T09:15:08.203000" level="INFO">Running command 'ozone sh key put /topvol1/bucket1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg time="2024-07-01T09:15:12.862000" level="INFO">${rc} = 0</msg>
<msg time="2024-07-01T09:15:12.862000" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-07-01T09:15:08.202000" elapsed="4.660000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-07-01T09:15:12.863000" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-07-01T09:15:12.862000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-07-01T09:15:12.863000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-07-01T09:15:12.863000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-07-01T09:15:08.201000" elapsed="4.663000"/>
</kw>
<msg time="2024-07-01T09:15:12.864000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-07-01T09:15:08.201000" elapsed="4.663000"/>
</kw>
<msg time="2024-07-01T09:15:12.864000" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<var>${output}</var>
<arg>ozone sh key put /topvol1/bucket1/key1 /opt/hadoop/NOTICE.txt</arg>
<status status="PASS" start="2024-07-01T09:15:08.201000" elapsed="4.663000"/>
</kw>
<kw name="Should Not Contain" owner="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" start="2024-07-01T09:15:12.864000" elapsed="0.000000"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" start="2024-07-01T09:15:01.853000" elapsed="11.011000"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" start="2024-07-01T09:15:01.810000" elapsed="11.055000"/>
</suite>
<suite id="s1-s5" name="readdata-first-half" source="/opt/hadoop/smoketest/topology/readdata.robot">
<test id="s1-s5-t1" name="Read data from previously created key" line="27">
<kw name="Generate Random String" owner="String">
<msg time="2024-07-01T09:15:17.115000" level="INFO">${random} = 62340</msg>
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<status status="PASS" start="2024-07-01T09:15:17.115000" elapsed="0.000000"/>
</kw>
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-07-01T09:15:17.118000" level="INFO">Running command 'ozone sh key get /topvol1/bucket1/key1 /tmp/key1-62340 2&gt;&amp;1'.</msg>
<msg time="2024-07-01T09:16:10.239000" level="INFO">${rc} = 0</msg>
<msg time="2024-07-01T09:16:10.240000" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-07-01T09:15:17.117000" elapsed="53.123000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-07-01T09:16:10.240000" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-07-01T09:16:10.240000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-07-01T09:16:10.241000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-07-01T09:16:10.241000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-07-01T09:15:17.116000" elapsed="53.125000"/>
</kw>
<msg time="2024-07-01T09:16:10.241000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-07-01T09:15:17.116000" elapsed="53.125000"/>
</kw>
<msg time="2024-07-01T09:16:10.241000" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<var>${output}</var>
<arg>ozone sh key get /topvol1/bucket1/key1 /tmp/key1-${random}</arg>
<status status="PASS" start="2024-07-01T09:15:17.115000" elapsed="53.126000"/>
</kw>
<kw name="Should Not Contain" owner="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" start="2024-07-01T09:16:10.242000" elapsed="0.000000"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" start="2024-07-01T09:15:17.114000" elapsed="53.128000"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" start="2024-07-01T09:15:17.071000" elapsed="53.172000"/>
</suite>
<suite id="s1-s6" name="readdata-second-half" source="/opt/hadoop/smoketest/topology/readdata.robot">
<test id="s1-s6-t1" name="Read data from previously created key" line="27">
<kw name="Generate Random String" owner="String">
<msg time="2024-07-01T09:16:30.080000" level="INFO">${random} = 99780</msg>
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<status status="PASS" start="2024-07-01T09:16:30.079000" elapsed="0.001000"/>
</kw>
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-07-01T09:16:30.083000" level="INFO">Running command 'ozone sh key get /topvol1/bucket1/key1 /tmp/key1-99780 2&gt;&amp;1'.</msg>
<msg time="2024-07-01T09:16:35.505000" level="INFO">${rc} = 0</msg>
<msg time="2024-07-01T09:16:35.505000" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-07-01T09:16:30.081000" elapsed="5.424000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-07-01T09:16:35.506000" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-07-01T09:16:35.506000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-07-01T09:16:35.507000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-07-01T09:16:35.506000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-07-01T09:16:30.081000" elapsed="5.426000"/>
</kw>
<msg time="2024-07-01T09:16:35.507000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-07-01T09:16:30.080000" elapsed="5.427000"/>
</kw>
<msg time="2024-07-01T09:16:35.507000" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<var>${output}</var>
<arg>ozone sh key get /topvol1/bucket1/key1 /tmp/key1-${random}</arg>
<status status="PASS" start="2024-07-01T09:16:30.080000" elapsed="5.427000"/>
</kw>
<kw name="Should Not Contain" owner="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" start="2024-07-01T09:16:35.507000" elapsed="0.001000"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" start="2024-07-01T09:16:30.079000" elapsed="5.429000"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" start="2024-07-01T09:16:30.038000" elapsed="5.471000"/>
</suite>
<status status="PASS" elapsed="180.446000"/>
</suite>
<statistics>
<total>
<stat pass="32" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="32" fail="0" skip="0" id="s1" name="ozone-topology">ozone-topology</stat>
<stat pass="2" fail="0" skip="0" id="s1-s1" name="Basic">ozone-topology.Basic</stat>
<stat pass="4" fail="0" skip="0" id="s1-s2" name="Cli">ozone-topology.Cli</stat>
<stat pass="23" fail="0" skip="0" id="s1-s3" name="Recon">ozone-topology.Recon</stat>
<stat pass="7" fail="0" skip="0" id="s1-s3-s1" name="Recon-Api">ozone-topology.Recon.Recon-Api</stat>
<stat pass="16" fail="0" skip="0" id="s1-s3-s2" name="Recon-Nssummary">ozone-topology.Recon.Recon-Nssummary</stat>
<stat pass="1" fail="0" skip="0" id="s1-s4" name="Loaddata">ozone-topology.Loaddata</stat>
<stat pass="1" fail="0" skip="0" id="s1-s5" name="readdata-first-half">ozone-topology.readdata-first-half</stat>
<stat pass="1" fail="0" skip="0" id="s1-s6" name="readdata-second-half">ozone-topology.readdata-second-half</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
