<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 7.0.1 (Python 3.8.10 on linux)" generated="2024-07-30T01:55:47.298258" rpa="false" schemaversion="5">
<suite id="s1" name="ozonesecure-certificate-rotation" source="/opt/hadoop/smoketest/certrotation">
<suite id="s1-s1" name="Cert-Rotation" source="/opt/hadoop/smoketest/certrotation/cert-rotation.robot">
<kw name="Setup Test" type="SETUP">
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Kinit test user" owner="commonlib">
<kw name="Pass Execution If" owner="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" start="2024-07-30T01:54:53.775000" elapsed="0.000000"/>
</kw>
<kw name="Get test user principal" owner="commonlib">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-07-30T01:54:53.778000" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg time="2024-07-30T01:54:53.782000" level="INFO">${rc} = 0</msg>
<msg time="2024-07-30T01:54:53.782000" level="INFO">${output} = scm</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-07-30T01:54:53.776000" elapsed="0.006000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-07-30T01:54:53.783000" level="INFO">scm</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-07-30T01:54:53.782000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-07-30T01:54:53.783000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-07-30T01:54:53.783000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-07-30T01:54:53.776000" elapsed="0.007000"/>
</kw>
<msg time="2024-07-30T01:54:53.783000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-07-30T01:54:53.776000" elapsed="0.007000"/>
</kw>
<msg time="2024-07-30T01:54:53.783000" level="INFO">${instance} = scm</msg>
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<status status="PASS" start="2024-07-30T01:54:53.776000" elapsed="0.008000"/>
</kw>
<msg time="2024-07-30T01:54:53.784000" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<var>${TEST_USER}</var>
<arg>${user}</arg>
<status status="PASS" start="2024-07-30T01:54:53.775000" elapsed="0.009000"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2024-07-30T01:54:53.784000" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2024-07-30T01:54:53.784000" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-07-30T01:54:53.787000" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg time="2024-07-30T01:54:53.838000" level="INFO">${rc} = 0</msg>
<msg time="2024-07-30T01:54:53.838000" level="INFO">${output} = </msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-07-30T01:54:53.785000" elapsed="0.053000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-07-30T01:54:53.839000" level="INFO"/>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-07-30T01:54:53.838000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-07-30T01:54:53.839000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-07-30T01:54:53.839000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-07-30T01:54:53.785000" elapsed="0.054000"/>
</kw>
<msg time="2024-07-30T01:54:53.839000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-07-30T01:54:53.785000" elapsed="0.055000"/>
</kw>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<status status="PASS" start="2024-07-30T01:54:53.785000" elapsed="0.055000"/>
</kw>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-07-30T01:54:53.784000" elapsed="0.056000"/>
</kw>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<status status="PASS" start="2024-07-30T01:54:53.775000" elapsed="0.065000"/>
</kw>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-07-30T01:54:53.774000" elapsed="0.066000"/>
</kw>
<status status="PASS" start="2024-07-30T01:54:53.774000" elapsed="0.066000"/>
</kw>
<test id="s1-s1-t1" name="Test datanode functions before and after certificate rotation" line="55">
<kw name="Basic key generation and validation">
<kw name="Generate Random String" owner="String">
<msg time="2024-07-30T01:54:53.841000" level="INFO">${random} = npNRaX1Ay3</msg>
<var>${random}</var>
<arg>10</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<status status="PASS" start="2024-07-30T01:54:53.841000" elapsed="0.000000"/>
</kw>
<kw name="Freon OCKG" owner="freon">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-07-30T01:54:53.846000" level="INFO">Running command 'ozone freon ockg  -t 1 -n1 -p npNRaX1Ay3  2&gt;&amp;1'.</msg>
<msg time="2024-07-30T01:55:00.346000" level="INFO">${rc} = 0</msg>
<msg time="2024-07-30T01:55:00.346000" level="INFO">${output} = 2024-07-30 01:54:55,700 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-07-30 01:54:55,784 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-07-30T01:54:53.844000" elapsed="6.502000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-07-30T01:55:00.347000" level="INFO">2024-07-30 01:54:55,700 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-07-30 01:54:55,784 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2024-07-30 01:54:55,784 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2024-07-30 01:54:55,865 [main] INFO freon.BaseFreonGenerator: Executing test with prefix npNRaX1Ay3 and number-of-tests 1
2024-07-30 01:54:55,922 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2024-07-30 01:54:56,923 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2024-07-30 01:54:57,480 [main] INFO rpc.RpcClient: Creating Volume: vol1, with testuser as owner and space quota set to -1 bytes, counts quota set to -1
2024-07-30 01:54:57,559 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with server-side default bucket layout, testuser as owner, Versioning false, Storage Type set to DISK and Encryption set to false, Replication Type set to server-side default replication type, Namespace Quota set to -1, Space Quota set to -1 
2024-07-30 01:54:57,905 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2024-07-30 01:54:57,923 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2024-07-30 01:54:57,945 [pool-2-thread-1] INFO scm.XceiverClientRatis: WatchType ALL_COMMITTED. Majority 2, 
2024-07-30 01:54:57,978 [pool-2-thread-1] INFO netty.NettyConfigKeys$DataStream: setTlsConf GrpcTlsConfig0-
2024-07-30 01:54:58,160 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.dropwizard3.Dm3MetricRegistriesImpl
2024-07-30 01:54:58,923 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2024-07-30 01:54:59,924 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2024-07-30 01:54:59,953 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1, min=1780.508972, max=1780.508972, mean=1780.508972, stddev=0.0, median=1780.508972, p75=1780.508972, p95=1780.508972, p98=1780.508972, p99=1780.508972, p999=1780.508972, mean_rate=0.428373735500009, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2024-07-30 01:54:59,956 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 4
2024-07-30 01:54:59,957 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2024-07-30 01:54:59,960 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-07-30T01:55:00.347000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-07-30T01:55:00.348000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-07-30T01:55:00.347000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-07-30T01:54:53.843000" elapsed="6.505000"/>
</kw>
<msg time="2024-07-30T01:55:00.348000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-07-30T01:54:53.843000" elapsed="6.505000"/>
</kw>
<msg time="2024-07-30T01:55:00.348000" level="INFO">${result} = 2024-07-30 01:54:55,700 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-07-30 01:54:55,784 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<status status="PASS" start="2024-07-30T01:54:53.843000" elapsed="6.505000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-07-30T01:55:00.348000" elapsed="0.001000"/>
</kw>
<arg>prefix=${random}</arg>
<status status="PASS" start="2024-07-30T01:54:53.842000" elapsed="6.507000"/>
</kw>
<kw name="Freon OCKV" owner="freon">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-07-30T01:55:00.353000" level="INFO">Running command 'ozone freon ockv  -t 1 -n1 -p npNRaX1Ay3  2&gt;&amp;1'.</msg>
<msg time="2024-07-30T01:55:07.788000" level="INFO">${rc} = 0</msg>
<msg time="2024-07-30T01:55:07.788000" level="INFO">${output} = 2024-07-30 01:55:03,173 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-07-30 01:55:03,266 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-07-30T01:55:00.351000" elapsed="7.437000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-07-30T01:55:07.789000" level="INFO">2024-07-30 01:55:03,173 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-07-30 01:55:03,266 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2024-07-30 01:55:03,266 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2024-07-30 01:55:03,331 [main] INFO freon.BaseFreonGenerator: Executing test with prefix npNRaX1Ay3 and number-of-tests 1
2024-07-30 01:55:03,369 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2024-07-30 01:55:04,370 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2024-07-30 01:55:05,364 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2024-07-30 01:55:05,370 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2024-07-30 01:55:06,371 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2024-07-30 01:55:07,371 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2024-07-30 01:55:07,388 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-validate, count=1, min=48.341946, max=48.341946, mean=48.341946, stddev=0.0, median=48.341946, p75=48.341946, p95=48.341946, p98=48.341946, p99=48.341946, p999=48.341946, mean_rate=0.9358370555706313, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2024-07-30 01:55:07,389 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 4
2024-07-30 01:55:07,389 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2024-07-30 01:55:07,389 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-07-30T01:55:07.788000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-07-30T01:55:07.789000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-07-30T01:55:07.789000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-07-30T01:55:00.351000" elapsed="7.439000"/>
</kw>
<msg time="2024-07-30T01:55:07.790000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-07-30T01:55:00.350000" elapsed="7.440000"/>
</kw>
<msg time="2024-07-30T01:55:07.790000" level="INFO">${result} = 2024-07-30 01:55:03,173 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-07-30 01:55:03,266 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<var>${result}</var>
<arg>ozone freon ockv ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<status status="PASS" start="2024-07-30T01:55:00.350000" elapsed="7.440000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-07-30T01:55:07.790000" elapsed="0.000000"/>
</kw>
<arg>prefix=${random}</arg>
<status status="PASS" start="2024-07-30T01:55:00.349000" elapsed="7.441000"/>
</kw>
<status status="PASS" start="2024-07-30T01:54:53.841000" elapsed="13.950000"/>
</kw>
<kw name="Find certificate duration">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-07-30T01:55:07.794000" level="INFO">Running command 'ozone getconf confKey hdds.x509.default.duration | sed 's/PT//' 2&gt;&amp;1'.</msg>
<msg time="2024-07-30T01:55:08.910000" level="INFO">${rc} = 0</msg>
<msg time="2024-07-30T01:55:08.910000" level="INFO">${output} = 40s</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-07-30T01:55:07.792000" elapsed="1.118000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-07-30T01:55:08.911000" level="INFO">40s</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-07-30T01:55:08.910000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-07-30T01:55:08.911000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-07-30T01:55:08.911000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-07-30T01:55:07.792000" elapsed="1.120000"/>
</kw>
<msg time="2024-07-30T01:55:08.912000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-07-30T01:55:07.791000" elapsed="1.121000"/>
</kw>
<msg time="2024-07-30T01:55:08.912000" level="INFO">${waitTime} = 40s</msg>
<var>${waitTime}</var>
<arg>ozone getconf confKey hdds.x509.default.duration | sed 's/PT//'</arg>
<status status="PASS" start="2024-07-30T01:55:07.791000" elapsed="1.121000"/>
</kw>
<kw name="Set Variable If" owner="BuiltIn">
<msg time="2024-07-30T01:55:08.913000" level="INFO">${result} = 40s</msg>
<var>${result}</var>
<arg>"${waitTime}" != "${EMPTY}"</arg>
<arg>${waitTime}</arg>
<arg>0s</arg>
<doc>Sets variable based on the given condition.</doc>
<status status="PASS" start="2024-07-30T01:55:08.912000" elapsed="0.001000"/>
</kw>
<msg time="2024-07-30T01:55:08.913000" level="INFO">${certDuration} = 40s</msg>
<var>${certDuration}</var>
<status status="PASS" start="2024-07-30T01:55:07.791000" elapsed="1.122000"/>
</kw>
<kw name="Double duration">
<kw name="Add Time To Time" owner="DateTime">
<msg time="2024-07-30T01:55:08.914000" level="INFO">${doubleDuration} = 80.0</msg>
<var>${doubleDuration}</var>
<arg>${duration}</arg>
<arg>${duration}</arg>
<doc>Adds time to another time and returns the resulting time.</doc>
<status status="PASS" start="2024-07-30T01:55:08.914000" elapsed="0.000000"/>
</kw>
<msg time="2024-07-30T01:55:08.914000" level="INFO">${doubleDuration} = 80.0</msg>
<var>${doubleDuration}</var>
<arg>${certDuration}</arg>
<status status="PASS" start="2024-07-30T01:55:08.913000" elapsed="0.001000"/>
</kw>
<kw name="Get datanode cert serial">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-07-30T01:55:08.918000" level="INFO">Running command 'openssl s_client -connect "datanode":"9859" -showcerts | openssl x509 -noout -serial | grep serial | sed 's/serial=//' 2&gt;&amp;1'.</msg>
<msg time="2024-07-30T01:55:08.938000" level="INFO">${rc} = 0</msg>
<msg time="2024-07-30T01:55:08.938000" level="INFO">${output} = 0E</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-07-30T01:55:08.916000" elapsed="0.022000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-07-30T01:55:08.940000" level="INFO">0E</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-07-30T01:55:08.939000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-07-30T01:55:08.940000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-07-30T01:55:08.940000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-07-30T01:55:08.915000" elapsed="0.026000"/>
</kw>
<msg time="2024-07-30T01:55:08.941000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-07-30T01:55:08.915000" elapsed="0.026000"/>
</kw>
<msg time="2024-07-30T01:55:08.941000" level="INFO">${certSerial} = 0E</msg>
<var>${certSerial}</var>
<arg>openssl s_client -connect "${datanode}":"${port}" -showcerts | openssl x509 -noout -serial | grep serial | sed 's/serial=//'</arg>
<status status="PASS" start="2024-07-30T01:55:08.915000" elapsed="0.026000"/>
</kw>
<msg time="2024-07-30T01:55:08.941000" level="INFO">${certId1} = 0E</msg>
<var>${certId1}</var>
<status status="PASS" start="2024-07-30T01:55:08.914000" elapsed="0.027000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Datanode has new certificate">
<kw name="Get datanode cert serial">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-07-30T01:55:08.947000" level="INFO">Running command 'openssl s_client -connect "datanode":"9859" -showcerts | openssl x509 -noout -serial | grep serial | sed 's/serial=//' 2&gt;&amp;1'.</msg>
<msg time="2024-07-30T01:55:08.973000" level="INFO">${rc} = 0</msg>
<msg time="2024-07-30T01:55:08.973000" level="INFO">${output} = 0F</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-07-30T01:55:08.945000" elapsed="0.029000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-07-30T01:55:08.975000" level="INFO">0F</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-07-30T01:55:08.974000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-07-30T01:55:08.975000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-07-30T01:55:08.975000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-07-30T01:55:08.944000" elapsed="0.031000"/>
</kw>
<msg time="2024-07-30T01:55:08.975000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-07-30T01:55:08.944000" elapsed="0.032000"/>
</kw>
<msg time="2024-07-30T01:55:08.976000" level="INFO">${certSerial} = 0F</msg>
<var>${certSerial}</var>
<arg>openssl s_client -connect "${datanode}":"${port}" -showcerts | openssl x509 -noout -serial | grep serial | sed 's/serial=//'</arg>
<status status="PASS" start="2024-07-30T01:55:08.944000" elapsed="0.032000"/>
</kw>
<msg time="2024-07-30T01:55:08.976000" level="INFO">${newCertId} = 0F</msg>
<var>${newCertId}</var>
<status status="PASS" start="2024-07-30T01:55:08.943000" elapsed="0.033000"/>
</kw>
<kw name="Should Not Be Equal" owner="BuiltIn">
<arg>${certId}</arg>
<arg>${newCertId}</arg>
<doc>Fails if the given objects are equal.</doc>
<status status="PASS" start="2024-07-30T01:55:08.976000" elapsed="0.000000"/>
</kw>
<arg>${certId1}</arg>
<status status="PASS" start="2024-07-30T01:55:08.942000" elapsed="0.034000"/>
</kw>
<arg>${doubleDuration}</arg>
<arg>5sec</arg>
<arg>Datanode has new certificate</arg>
<arg>${certId1}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-07-30T01:55:08.942000" elapsed="0.035000"/>
</kw>
<kw name="Basic key generation and validation">
<kw name="Generate Random String" owner="String">
<msg time="2024-07-30T01:55:08.977000" level="INFO">${random} = xyM286hGDY</msg>
<var>${random}</var>
<arg>10</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<status status="PASS" start="2024-07-30T01:55:08.977000" elapsed="0.000000"/>
</kw>
<kw name="Freon OCKG" owner="freon">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-07-30T01:55:08.982000" level="INFO">Running command 'ozone freon ockg  -t 1 -n1 -p xyM286hGDY  2&gt;&amp;1'.</msg>
<msg time="2024-07-30T01:55:15.906000" level="INFO">${rc} = 0</msg>
<msg time="2024-07-30T01:55:15.906000" level="INFO">${output} = 2024-07-30 01:55:11,735 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-07-30 01:55:11,859 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-07-30T01:55:08.980000" elapsed="6.926000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-07-30T01:55:15.907000" level="INFO">2024-07-30 01:55:11,735 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-07-30 01:55:11,859 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2024-07-30 01:55:11,859 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2024-07-30 01:55:11,938 [main] INFO freon.BaseFreonGenerator: Executing test with prefix xyM286hGDY and number-of-tests 1
2024-07-30 01:55:11,980 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2024-07-30 01:55:12,981 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2024-07-30 01:55:13,732 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2024-07-30 01:55:13,762 [pool-2-thread-1] INFO scm.XceiverClientRatis: WatchType ALL_COMMITTED. Majority 2, 
2024-07-30 01:55:13,793 [pool-2-thread-1] INFO netty.NettyConfigKeys$DataStream: setTlsConf GrpcTlsConfig0-
2024-07-30 01:55:13,949 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.dropwizard3.Dm3MetricRegistriesImpl
2024-07-30 01:55:13,981 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2024-07-30 01:55:14,982 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2024-07-30 01:55:15,517 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1, min=1123.595912, max=1123.595912, mean=1123.595912, stddev=0.0, median=1123.595912, p75=1123.595912, p95=1123.595912, p98=1123.595912, p99=1123.595912, p999=1123.595912, mean_rate=0.4933555420751197, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2024-07-30 01:55:15,518 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 4
2024-07-30 01:55:15,518 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2024-07-30 01:55:15,518 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-07-30T01:55:15.907000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-07-30T01:55:15.908000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-07-30T01:55:15.908000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-07-30T01:55:08.979000" elapsed="6.929000"/>
</kw>
<msg time="2024-07-30T01:55:15.908000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-07-30T01:55:08.979000" elapsed="6.929000"/>
</kw>
<msg time="2024-07-30T01:55:15.909000" level="INFO">${result} = 2024-07-30 01:55:11,735 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-07-30 01:55:11,859 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<status status="PASS" start="2024-07-30T01:55:08.979000" elapsed="6.930000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-07-30T01:55:15.909000" elapsed="0.000000"/>
</kw>
<arg>prefix=${random}</arg>
<status status="PASS" start="2024-07-30T01:55:08.978000" elapsed="6.931000"/>
</kw>
<kw name="Freon OCKV" owner="freon">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-07-30T01:55:15.915000" level="INFO">Running command 'ozone freon ockv  -t 1 -n1 -p xyM286hGDY  2&gt;&amp;1'.</msg>
<msg time="2024-07-30T01:55:21.888000" level="INFO">${rc} = 0</msg>
<msg time="2024-07-30T01:55:21.888000" level="INFO">${output} = 2024-07-30 01:55:17,591 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-07-30 01:55:17,693 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-07-30T01:55:15.912000" elapsed="5.976000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-07-30T01:55:21.889000" level="INFO">2024-07-30 01:55:17,591 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-07-30 01:55:17,693 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2024-07-30 01:55:17,693 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2024-07-30 01:55:17,755 [main] INFO freon.BaseFreonGenerator: Executing test with prefix xyM286hGDY and number-of-tests 1
2024-07-30 01:55:17,791 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2024-07-30 01:55:18,791 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2024-07-30 01:55:19,186 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2024-07-30 01:55:19,791 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2024-07-30 01:55:20,792 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2024-07-30 01:55:21,395 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-validate, count=1, min=109.920824, max=109.920824, mean=109.920824, stddev=0.0, median=109.920824, p75=109.920824, p95=109.920824, p98=109.920824, p99=109.920824, p999=109.920824, mean_rate=0.9005758327804165, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2024-07-30 01:55:21,400 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 4
2024-07-30 01:55:21,400 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2024-07-30 01:55:21,400 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-07-30T01:55:21.888000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-07-30T01:55:21.890000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-07-30T01:55:21.889000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-07-30T01:55:15.912000" elapsed="5.978000"/>
</kw>
<msg time="2024-07-30T01:55:21.890000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-07-30T01:55:15.911000" elapsed="5.979000"/>
</kw>
<msg time="2024-07-30T01:55:21.891000" level="INFO">${result} = 2024-07-30 01:55:17,591 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-07-30 01:55:17,693 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<var>${result}</var>
<arg>ozone freon ockv ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<status status="PASS" start="2024-07-30T01:55:15.911000" elapsed="5.980000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-07-30T01:55:21.891000" elapsed="0.000000"/>
</kw>
<arg>prefix=${random}</arg>
<status status="PASS" start="2024-07-30T01:55:15.910000" elapsed="5.981000"/>
</kw>
<status status="PASS" start="2024-07-30T01:55:08.977000" elapsed="12.914000"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" start="2024-07-30T01:54:53.840000" elapsed="28.052000"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" start="2024-07-30T01:54:53.745000" elapsed="28.147000"/>
</suite>
<suite id="s1-s2" name="Root-Ca-Rotation-Client-Checks" source="/opt/hadoop/smoketest/certrotation/root-ca-rotation-client-checks.robot">
<test id="s1-s2-t1" name="Create a volume and bucket" line="27">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-07-30T01:55:21.905000" level="INFO">Running command 'ozone sh volume create rootca-volume 2&gt;&amp;1'.</msg>
<msg time="2024-07-30T01:55:25.426000" level="INFO">${rc} = 0</msg>
<msg time="2024-07-30T01:55:25.426000" level="INFO">${output} = </msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-07-30T01:55:21.902000" elapsed="3.524000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-07-30T01:55:25.427000" level="INFO"/>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-07-30T01:55:25.426000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-07-30T01:55:25.427000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-07-30T01:55:25.427000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-07-30T01:55:21.902000" elapsed="3.526000"/>
</kw>
<msg time="2024-07-30T01:55:25.428000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-07-30T01:55:21.901000" elapsed="3.527000"/>
</kw>
<msg time="2024-07-30T01:55:25.428000" level="INFO">${output} = </msg>
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<status status="PASS" start="2024-07-30T01:55:21.901000" elapsed="3.527000"/>
</kw>
<kw name="Should Not Contain" owner="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" start="2024-07-30T01:55:25.428000" elapsed="0.000000"/>
</kw>
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-07-30T01:55:25.431000" level="INFO">Running command 'ozone sh bucket create /rootca-volume/rootca-bucket 2&gt;&amp;1'.</msg>
<msg time="2024-07-30T01:55:29.082000" level="INFO">${rc} = 0</msg>
<msg time="2024-07-30T01:55:29.082000" level="INFO">${output} = </msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-07-30T01:55:25.429000" elapsed="3.653000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-07-30T01:55:29.084000" level="INFO"/>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-07-30T01:55:29.083000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-07-30T01:55:29.084000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-07-30T01:55:29.084000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-07-30T01:55:25.429000" elapsed="3.656000"/>
</kw>
<msg time="2024-07-30T01:55:29.085000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-07-30T01:55:25.429000" elapsed="3.656000"/>
</kw>
<msg time="2024-07-30T01:55:29.085000" level="INFO">${output} = </msg>
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<status status="PASS" start="2024-07-30T01:55:25.428000" elapsed="3.657000"/>
</kw>
<kw name="Should Not Contain" owner="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" start="2024-07-30T01:55:29.085000" elapsed="0.001000"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" start="2024-07-30T01:55:21.900000" elapsed="7.186000"/>
</test>
<test id="s1-s2-t2" name="Create key" line="34">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-07-30T01:55:29.092000" level="INFO">Running command 'echo "rootca: key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg time="2024-07-30T01:55:29.095000" level="INFO">${rc} = 0</msg>
<msg time="2024-07-30T01:55:29.095000" level="INFO">${output} = </msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-07-30T01:55:29.088000" elapsed="0.008000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-07-30T01:55:29.097000" level="INFO"/>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-07-30T01:55:29.096000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-07-30T01:55:29.097000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-07-30T01:55:29.097000" elapsed="0.000000"/>
</kw>
<arg>echo "${PREFIX}: key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<status status="PASS" start="2024-07-30T01:55:29.088000" elapsed="0.010000"/>
</kw>
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-07-30T01:55:29.102000" level="INFO">Running command 'ozone sh key put /rootca-volume/rootca-bucket/rootca-key /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg time="2024-07-30T01:55:35.068000" level="INFO">${rc} = 0</msg>
<msg time="2024-07-30T01:55:35.068000" level="INFO">${output} = </msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-07-30T01:55:29.099000" elapsed="5.969000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-07-30T01:55:35.069000" level="INFO"/>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-07-30T01:55:35.068000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-07-30T01:55:35.069000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-07-30T01:55:35.069000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-07-30T01:55:29.098000" elapsed="5.972000"/>
</kw>
<msg time="2024-07-30T01:55:35.070000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-07-30T01:55:29.098000" elapsed="5.972000"/>
</kw>
<msg time="2024-07-30T01:55:35.070000" level="INFO">${output} = </msg>
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/sourcekey</arg>
<status status="PASS" start="2024-07-30T01:55:29.098000" elapsed="5.972000"/>
</kw>
<kw name="Should Not Contain" owner="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" start="2024-07-30T01:55:35.070000" elapsed="0.000000"/>
</kw>
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-07-30T01:55:35.073000" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg time="2024-07-30T01:55:35.077000" level="INFO">${rc} = 0</msg>
<msg time="2024-07-30T01:55:35.077000" level="INFO">${output} = </msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-07-30T01:55:35.071000" elapsed="0.006000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-07-30T01:55:35.077000" level="INFO"/>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-07-30T01:55:35.077000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-07-30T01:55:35.078000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-07-30T01:55:35.078000" elapsed="0.000000"/>
</kw>
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<status status="PASS" start="2024-07-30T01:55:35.071000" elapsed="0.007000"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" start="2024-07-30T01:55:29.087000" elapsed="5.991000"/>
</test>
<test id="s1-s2-t3" name="Read data from previously created key" line="40">
<kw name="Generate Random String" owner="String">
<msg time="2024-07-30T01:55:35.080000" level="INFO">${random} = 87595</msg>
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<status status="PASS" start="2024-07-30T01:55:35.079000" elapsed="0.001000"/>
</kw>
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-07-30T01:55:35.083000" level="INFO">Running command 'ozone sh key get /rootca-volume/rootca-bucket/rootca-key /tmp/key-87595 2&gt;&amp;1'.</msg>
<msg time="2024-07-30T01:55:39.839000" level="INFO">${rc} = 0</msg>
<msg time="2024-07-30T01:55:39.840000" level="INFO">${output} = </msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-07-30T01:55:35.081000" elapsed="4.759000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-07-30T01:55:39.840000" level="INFO"/>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-07-30T01:55:39.840000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-07-30T01:55:39.841000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-07-30T01:55:39.841000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-07-30T01:55:35.081000" elapsed="4.760000"/>
</kw>
<msg time="2024-07-30T01:55:39.841000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-07-30T01:55:35.081000" elapsed="4.760000"/>
</kw>
<msg time="2024-07-30T01:55:39.841000" level="INFO">${output} = </msg>
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<status status="PASS" start="2024-07-30T01:55:35.080000" elapsed="4.762000"/>
</kw>
<kw name="Should Not Contain" owner="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" start="2024-07-30T01:55:39.842000" elapsed="0.000000"/>
</kw>
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-07-30T01:55:39.844000" level="INFO">Running command 'cat /tmp/key-87595 2&gt;&amp;1'.</msg>
<msg time="2024-07-30T01:55:39.848000" level="INFO">${rc} = 0</msg>
<msg time="2024-07-30T01:55:39.848000" level="INFO">${output} = rootca: key created using Ozone Shell</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-07-30T01:55:39.843000" elapsed="0.005000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-07-30T01:55:39.849000" level="INFO">rootca: key created using Ozone Shell</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-07-30T01:55:39.849000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-07-30T01:55:39.849000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-07-30T01:55:39.849000" elapsed="0.000000"/>
</kw>
<msg time="2024-07-30T01:55:39.850000" level="INFO">${output} = rootca: key created using Ozone Shell</msg>
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<status status="PASS" start="2024-07-30T01:55:39.842000" elapsed="0.008000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-07-30T01:55:39.850000" elapsed="0.000000"/>
</kw>
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-07-30T01:55:39.852000" level="INFO">Running command 'rm /tmp/key-87595 2&gt;&amp;1'.</msg>
<msg time="2024-07-30T01:55:39.856000" level="INFO">${rc} = 0</msg>
<msg time="2024-07-30T01:55:39.856000" level="INFO">${output} = </msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-07-30T01:55:39.851000" elapsed="0.005000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-07-30T01:55:39.857000" level="INFO"/>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-07-30T01:55:39.856000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-07-30T01:55:39.857000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-07-30T01:55:39.857000" elapsed="0.000000"/>
</kw>
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<status status="PASS" start="2024-07-30T01:55:39.850000" elapsed="0.007000"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" start="2024-07-30T01:55:35.079000" elapsed="4.778000"/>
</test>
<doc>Generate data</doc>
<status status="PASS" start="2024-07-30T01:55:21.894000" elapsed="17.964000"/>
</suite>
<status status="PASS" start="2024-07-30T01:54:53.725000" elapsed="46.135000"/>
</suite>
<statistics>
<total>
<stat pass="4" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="0" skip="0">create-volume-and-bucket</stat>
</tag>
<suite>
<stat pass="4" fail="0" skip="0" id="s1" name="ozonesecure-certificate-rotation">ozonesecure-certificate-rotation</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1" name="Cert-Rotation">ozonesecure-certificate-rotation.Cert-Rotation</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2" name="Root-Ca-Rotation-Client-Checks">ozonesecure-certificate-rotation.Root-Ca-Rotation-Client-Checks</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
