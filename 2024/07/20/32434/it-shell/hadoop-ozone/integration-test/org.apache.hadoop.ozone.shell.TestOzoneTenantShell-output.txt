2024-07-20 16:54:40,969 [main] WARN  server.ServerUtils (ServerUtils.java:getScmDbDir(143)) - ozone.scm.db.dirs is not configured. We recommend adding this setting. Falling back to ozone.metadata.dirs instead.
2024-07-20 16:54:41,135 [main] INFO  reflections.Reflections (Reflections.java:scan(219)) - Reflections took 143 ms to scan 7 urls, producing 158 keys and 370 values
2024-07-20 16:54:41,278 [main] WARN  server.ServerUtils (ServerUtils.java:getScmDbDir(143)) - ozone.scm.db.dirs is not configured. We recommend adding this setting. Falling back to ozone.metadata.dirs instead.
2024-07-20 16:54:41,282 [main] INFO  ha.SCMHANodeDetails (SCMHANodeDetails.java:loadSCMHAConfig(207)) - ServiceID for StorageContainerManager is null
2024-07-20 16:54:41,291 [main] WARN  ha.SCMHANodeDetails (SCMHANodeDetails.java:validateSCMHAConfig(180)) - Default/Configured value of config ozone.scm.ratis.enable conflicts with the expected value. Default/Configured: true. Expected: false. Falling back to the expected value. Current State of SCM: SCM is running without Ratis. Ratis SCM -> Non Ratis SCM is not supported.
2024-07-20 16:54:41,292 [main] INFO  ha.SCMHANodeDetails (SCMHANodeDetails.java:loadSCMHAConfig(212)) - ozone.scm.default.service.id is not defined, falling back to ozone.scm.service.ids to find serviceID for StorageContainerManager if it is HA enabled cluster
2024-07-20 16:54:41,748 [main] WARN  utils.HAUtils (HAUtils.java:getMetaDir(339)) - ozone.scm.db.dirs is not configured. We recommend adding this setting. Falling back to ozone.metadata.dirs instead.
2024-07-20 16:54:41,860 [main] WARN  db.DBStoreBuilder (DBStoreBuilder.java:applyDBDefinition(171)) - ozone.scm.db.dirs is not configured. We recommend adding this setting. Falling back to ozone.metadata.dirs instead.
2024-07-20 16:54:41,868 [main] INFO  utils.LeakDetector (LeakDetector.java:start(73)) - Starting leak detector thread ManagedRocksObject0.
2024-07-20 16:54:42,015 [main] INFO  net.NodeSchemaLoader (NodeSchemaLoader.java:loadSchemaFromFile(129)) - Loading schema from [jar:file:/home/runner/work/ozone/ozone/hadoop-hdds/common/target/hdds-common-1.5.0-SNAPSHOT.jar!/network-topology-default.xml]
2024-07-20 16:54:42,017 [main] INFO  net.NodeSchemaLoader (NodeSchemaLoader.java:loadSchema(176)) - Loading network topology layer schema file
2024-07-20 16:54:42,055 [main] INFO  metrics.MetricRegistries (MetricRegistriesLoader.java:load(64)) - Loaded MetricRegistries class org.apache.ratis.metrics.dropwizard3.Dm3MetricRegistriesImpl
2024-07-20 16:54:42,067 [main] INFO  upgrade.AbstractLayoutVersionManager (AbstractLayoutVersionManager.java:init(83)) - Initializing Layout version manager with metadata layout = HADOOP_PRC_PORTS_IN_DATANODEDETAILS (version = 7), software layout = HADOOP_PRC_PORTS_IN_DATANODEDETAILS (version = 7)
2024-07-20 16:54:42,213 [main] INFO  ha.SequenceIdGenerator (SequenceIdGenerator.java:upgradeToSequenceId(369)) - upgrade localId to 113750153625600000
2024-07-20 16:54:42,217 [main] INFO  ha.SequenceIdGenerator (SequenceIdGenerator.java:upgradeToSequenceId(379)) - upgrade delTxnId to 0
2024-07-20 16:54:42,223 [main] INFO  ha.SequenceIdGenerator (SequenceIdGenerator.java:upgradeToSequenceId(396)) - upgrade containerId to 0
2024-07-20 16:54:42,226 [main] INFO  ha.SequenceIdGenerator (SequenceIdGenerator.java:upgradeToCertificateSequenceId(433)) - upgrade CertificateId to 2
2024-07-20 16:54:42,228 [main] INFO  ha.SequenceIdGenerator (SequenceIdGenerator.java:<init>(240)) - Init the HA SequenceIdGenerator.
2024-07-20 16:54:42,271 [main] WARN  server.ServerUtils (ServerUtils.java:sanitizeUserArgs(79)) - ozone.scm.stale.node.interval value = 300000 is larger than max = 100000 based on the key value of ozone.scm.heartbeat.thread.interval, reset to the max value 100000.
2024-07-20 16:54:42,272 [main] WARN  server.ServerUtils (ServerUtils.java:sanitizeUserArgs(79)) - ozone.scm.stale.node.interval value = 300000 is larger than max = 100000 based on the key value of ozone.scm.heartbeat.thread.interval, reset to the max value 100000.
2024-07-20 16:54:42,277 [main] INFO  node.SCMNodeManager (SCMNodeManager.java:<init>(177)) - Entering startup safe mode.
2024-07-20 16:54:42,288 [main] INFO  algorithms.ContainerPlacementPolicyFactory (ContainerPlacementPolicyFactory.java:getPolicyInternal(86)) - Create container placement policy of type org.apache.hadoop.hdds.scm.container.placement.algorithms.SCMContainerPlacementRackAware
2024-07-20 16:54:42,306 [main] INFO  algorithms.ContainerPlacementPolicyFactory (ContainerPlacementPolicyFactory.java:getPolicyInternal(86)) - Create container placement policy of type org.apache.hadoop.hdds.scm.container.placement.algorithms.SCMContainerPlacementRackScatter
2024-07-20 16:54:42,313 [main] INFO  pipeline.PipelineStateManagerImpl (PipelineStateManagerImpl.java:initialize(78)) - No pipeline exists in current db
2024-07-20 16:54:42,325 [main] INFO  algorithms.LeaderChoosePolicyFactory (LeaderChoosePolicyFactory.java:getPolicy(57)) - Create leader choose policy of type org.apache.hadoop.hdds.scm.pipeline.leader.choose.algorithms.MinLeaderCountChoosePolicy
2024-07-20 16:54:42,326 [main] INFO  algorithms.ContainerPlacementPolicyFactory (ContainerPlacementPolicyFactory.java:getPolicyInternal(86)) - Create container placement policy of type org.apache.hadoop.hdds.scm.container.placement.algorithms.SCMContainerPlacementRackScatter
2024-07-20 16:54:42,332 [main] INFO  ha.SCMServiceManager (SCMServiceManager.java:register(42)) - Registering service BackgroundPipelineCreator.
2024-07-20 16:54:42,332 [main] INFO  pipeline.BackgroundPipelineCreator (BackgroundPipelineCreator.java:start(127)) - Starting RatisPipelineUtilsThread.
2024-07-20 16:54:42,336 [main] INFO  BackgroundPipelineScrubber (BackgroundSCMService.java:start(65)) - Starting BackgroundPipelineScrubber Service.
2024-07-20 16:54:42,336 [main] INFO  ha.SCMServiceManager (SCMServiceManager.java:register(42)) - Registering service BackgroundPipelineScrubber.
2024-07-20 16:54:42,343 [main] INFO  ExpiredContainerReplicaOpScrubber (BackgroundSCMService.java:start(65)) - Starting ExpiredContainerReplicaOpScrubber Service.
2024-07-20 16:54:42,344 [main] INFO  ha.SCMServiceManager (SCMServiceManager.java:register(42)) - Registering service ExpiredContainerReplicaOpScrubber.
2024-07-20 16:54:42,369 [main] INFO  algorithms.PipelineChoosePolicyFactory (PipelineChoosePolicyFactory.java:createPipelineChoosePolicyFromClass(80)) - Create pipeline choose policy of type org.apache.hadoop.hdds.scm.pipeline.choose.algorithms.RandomPipelineChoosePolicy
2024-07-20 16:54:42,369 [main] INFO  algorithms.PipelineChoosePolicyFactory (PipelineChoosePolicyFactory.java:createPipelineChoosePolicyFromClass(80)) - Create pipeline choose policy of type org.apache.hadoop.hdds.scm.pipeline.choose.algorithms.RandomPipelineChoosePolicy
2024-07-20 16:54:42,390 [main] INFO  ha.SCMServiceManager (SCMServiceManager.java:register(42)) - Registering service SCMBlockDeletingService.
2024-07-20 16:54:42,442 [main] INFO  replication.ReplicationManager (ReplicationManager.java:start(296)) - Starting Replication Monitor Thread.
2024-07-20 16:54:42,444 [main] INFO  ha.SCMServiceManager (SCMServiceManager.java:register(42)) - Registering service ReplicationManager.
2024-07-20 16:54:42,444 [ReplicationMonitor] INFO  replication.ReplicationManager (ReplicationManager.java:processAll(373)) - Replication Manager is not ready to run until 3000ms after safemode exit
2024-07-20 16:54:42,447 [main] INFO  safemode.SCMSafeModeManager (SCMSafeModeManager.java:exitSafeMode(248)) - SCM exiting safe mode.
2024-07-20 16:54:42,447 [main] INFO  ha.SCMContext (SCMContext.java:updateSafeModeStatus(225)) - Update SafeModeStatus from SafeModeStatus{safeModeStatus=true, preCheckPassed=false} to SafeModeStatus{safeModeStatus=false, preCheckPassed=true}.
2024-07-20 16:54:42,448 [main] INFO  pipeline.BackgroundPipelineCreator (BackgroundPipelineCreator.java:notifyStatusChanged(258)) - Service BackgroundPipelineCreator transitions to RUNNING.
2024-07-20 16:54:42,449 [main] INFO  BackgroundPipelineScrubber (BackgroundSCMService.java:notifyStatusChanged(79)) - Service BackgroundPipelineScrubber transitions to RUNNING.
2024-07-20 16:54:42,449 [main] INFO  ExpiredContainerReplicaOpScrubber (BackgroundSCMService.java:notifyStatusChanged(79)) - Service ExpiredContainerReplicaOpScrubber transitions to RUNNING.
2024-07-20 16:54:42,449 [main] INFO  block.SCMBlockDeletingService (SCMBlockDeletingService.java:notifyStatusChanged(247)) - notifyStatusChanged:RUNNING
2024-07-20 16:54:42,450 [main] INFO  replication.ReplicationManager (ReplicationManager.java:notifyStatusChanged(1406)) - Service ReplicationManager transitions to RUNNING.
2024-07-20 16:54:42,502 [main] INFO  server.StorageContainerManager (StorageContainerManager.java:<init>(442)) - SCM start with adminUsers: [runner]
2024-07-20 16:54:42,823 [main] INFO  audit.AuditLogger (AuditLogger.java:refreshDebugCmdSet(135)) - Refresh DebugCmdSet for SCMAudit to [].
2024-07-20 16:54:42,844 [main] INFO  ipc.CallQueueManager (CallQueueManager.java:<init>(90)) - Using callQueue: class java.util.concurrent.LinkedBlockingQueue, queueCapacity: 10000, scheduler: class org.apache.hadoop.ipc.DefaultRpcScheduler, ipcBackoff: false.
2024-07-20 16:54:42,865 [main] INFO  ipc.Server (Server.java:<init>(1287)) - Listener at 0.0.0.0:15002
2024-07-20 16:54:42,868 [Socket Reader #1 for port 15002] INFO  ipc.Server (Server.java:run(1323)) - Starting Socket Reader #1 for port 15002
2024-07-20 16:54:42,921 [main] INFO  audit.AuditLogger (AuditLogger.java:refreshDebugCmdSet(135)) - Refresh DebugCmdSet for SCMAudit to [].
2024-07-20 16:54:42,927 [main] INFO  ipc.CallQueueManager (CallQueueManager.java:<init>(90)) - Using callQueue: class java.util.concurrent.LinkedBlockingQueue, queueCapacity: 10000, scheduler: class org.apache.hadoop.ipc.DefaultRpcScheduler, ipcBackoff: false.
2024-07-20 16:54:42,928 [main] INFO  ipc.Server (Server.java:<init>(1287)) - Listener at 0.0.0.0:15001
2024-07-20 16:54:42,930 [Socket Reader #1 for port 15001] INFO  ipc.Server (Server.java:run(1323)) - Starting Socket Reader #1 for port 15001
2024-07-20 16:54:42,966 [main] INFO  audit.AuditLogger (AuditLogger.java:refreshDebugCmdSet(135)) - Refresh DebugCmdSet for SCMAudit to [].
2024-07-20 16:54:42,978 [main] INFO  ipc.CallQueueManager (CallQueueManager.java:<init>(90)) - Using callQueue: class java.util.concurrent.LinkedBlockingQueue, queueCapacity: 10000, scheduler: class org.apache.hadoop.ipc.DefaultRpcScheduler, ipcBackoff: false.
2024-07-20 16:54:42,979 [main] INFO  ipc.Server (Server.java:<init>(1287)) - Listener at 0.0.0.0:15000
2024-07-20 16:54:42,980 [Socket Reader #1 for port 15000] INFO  ipc.Server (Server.java:run(1323)) - Starting Socket Reader #1 for port 15000
2024-07-20 16:54:43,043 [main] INFO  ha.SCMServiceManager (SCMServiceManager.java:register(42)) - Registering service ContainerBalancer.
2024-07-20 16:54:43,044 [main] INFO  ha.SCMContext (SCMContext.java:updateSafeModeStatus(225)) - Update SafeModeStatus from SafeModeStatus{safeModeStatus=false, preCheckPassed=true} to SafeModeStatus{safeModeStatus=false, preCheckPassed=true}.
2024-07-20 16:54:43,049 [main] WARN  balancer.ContainerBalancer (ContainerBalancer.java:shouldRun(134)) - Could not find persisted configuration for ContainerBalancer when checking if ContainerBalancer should run. ContainerBalancer should not run now.
2024-07-20 16:54:43,052 [main] INFO  server.StorageContainerManager (StorageContainerManager.java:start(1541)) - StorageContainerLocationProtocol RPC server is listening at /0.0.0.0:15000
2024-07-20 16:54:43,118 [main] WARN  impl.MetricsConfig (MetricsConfig.java:loadFirst(136)) - Cannot locate configuration: tried hadoop-metrics2-storagecontainermanager.properties,hadoop-metrics2.properties
2024-07-20 16:54:43,128 [main] INFO  impl.MetricsSystemImpl (MetricsSystemImpl.java:startTimer(378)) - Scheduled Metric snapshot period at 10 second(s).
2024-07-20 16:54:43,128 [main] INFO  impl.MetricsSystemImpl (MetricsSystemImpl.java:start(191)) - StorageContainerManager metrics system started
2024-07-20 16:54:43,304 [main] INFO  server.SCMClientProtocolServer (SCMClientProtocolServer.java:start(204)) - RPC server for Client  is listening at /0.0.0.0:15000
2024-07-20 16:54:43,305 [IPC Server listener on 15000] INFO  ipc.Server (Server.java:run(1402)) - IPC Server listener on 15000: starting
2024-07-20 16:54:43,306 [IPC Server Responder] INFO  ipc.Server (Server.java:run(1562)) - IPC Server Responder: starting
2024-07-20 16:54:43,371 [main] INFO  server.StorageContainerManager (StorageContainerManager.java:start(1554)) - ScmBlockLocationProtocol RPC server is listening at /0.0.0.0:15001
2024-07-20 16:54:43,372 [main] INFO  server.SCMBlockProtocolServer (SCMBlockProtocolServer.java:start(167)) - RPC server for Block Protocol is listening at /0.0.0.0:15001
2024-07-20 16:54:43,373 [IPC Server Responder] INFO  ipc.Server (Server.java:run(1562)) - IPC Server Responder: starting
2024-07-20 16:54:43,374 [IPC Server listener on 15001] INFO  ipc.Server (Server.java:run(1402)) - IPC Server listener on 15001: starting
2024-07-20 16:54:43,423 [main] INFO  server.SCMDatanodeProtocolServer (SCMDatanodeProtocolServer.java:start(194)) - ScmDatanodeProtocol RPC server for DataNodes is listening at /0.0.0.0:15002
2024-07-20 16:54:43,425 [IPC Server Responder] INFO  ipc.Server (Server.java:run(1562)) - IPC Server Responder: starting
2024-07-20 16:54:43,425 [IPC Server listener on 15002] INFO  ipc.Server (Server.java:run(1402)) - IPC Server listener on 15002: starting
2024-07-20 16:54:43,485 [JvmPauseMonitor0] INFO  util.JvmPauseMonitor (JvmPauseMonitor.java:run(146)) - JvmPauseMonitor-854d00fa-18a1-48ca-910a-0b7fe9df4975: Started
2024-07-20 16:54:43,497 [main] INFO  http.BaseHttpServer (BaseHttpServer.java:newHttpServer2BuilderForOzone(223)) - Starting Web-server for scm at: http://0.0.0.0:15003
2024-07-20 16:54:43,499 [main] INFO  http.BaseHttpServer (BaseHttpServer.java:<init>(110)) - Hadoop Security Enabled: false Ozone Security Enabled: false Ozone HTTP Security Enabled: false 
2024-07-20 16:54:43,523 [main] INFO  util.log (Log.java:initialized(170)) - Logging initialized @4494ms to org.eclipse.jetty.util.log.Slf4jLog
2024-07-20 16:54:43,593 [main] WARN  server.AuthenticationFilter (AuthenticationFilter.java:constructSecretProvider(240)) - Unable to initialize FileSignerSecretProvider, falling back to use random secrets. Reason: Could not read signature secret file: /home/runner/hadoop-http-auth-signature-secret
2024-07-20 16:54:43,599 [main] INFO  http.HttpRequestLog (HttpRequestLog.java:getRequestLog(86)) - Http request log for http.requests.scm is not defined
2024-07-20 16:54:43,606 [main] INFO  http.HttpServer2 (HttpServer2.java:addGlobalFilter(1035)) - Added global filter 'safety' (class=org.apache.hadoop.hdds.server.http.HttpServer2$QuotingInputFilter)
2024-07-20 16:54:43,609 [main] INFO  http.HttpServer2 (HttpServer2.java:addFilter(1011)) - Added filter static_user_filter (class=org.apache.hadoop.http.lib.StaticUserWebFilter$StaticUserFilter) to context scm
2024-07-20 16:54:43,609 [main] INFO  http.HttpServer2 (HttpServer2.java:addFilter(1019)) - Added filter static_user_filter (class=org.apache.hadoop.http.lib.StaticUserWebFilter$StaticUserFilter) to context logs
2024-07-20 16:54:43,609 [main] INFO  http.HttpServer2 (HttpServer2.java:addFilter(1019)) - Added filter static_user_filter (class=org.apache.hadoop.http.lib.StaticUserWebFilter$StaticUserFilter) to context static
2024-07-20 16:54:43,635 [main] INFO  http.BaseHttpServer (BaseHttpServer.java:<init>(189)) - HTTP server of scm uses base directory /home/runner/work/ozone/ozone/hadoop-ozone/integration-test/target/test-dir/MiniOzoneClusterImpl-f7452c88-0c37-4f5d-a1f6-a5ee96fcef81/ozone-meta/webserver
2024-07-20 16:54:43,636 [main] INFO  http.HttpServer2 (HttpServer2.java:bindListener(1235)) - Jetty bound to port 15003
2024-07-20 16:54:43,637 [main] INFO  server.Server (Server.java:doStart(375)) - jetty-9.4.55.v20240627; built: 2024-06-27T15:05:37.765Z; git: 70015831e5195ba74da6383c4ab7c90c56bb08af; jvm 17.0.11+9
2024-07-20 16:54:43,659 [main] INFO  server.session (DefaultSessionIdManager.java:doStart(334)) - DefaultSessionIdManager workerName=node0
2024-07-20 16:54:43,660 [main] INFO  server.session (DefaultSessionIdManager.java:doStart(339)) - No SessionScavenger set, using defaults
2024-07-20 16:54:43,661 [main] INFO  server.session (HouseKeeper.java:startScavenging(132)) - node0 Scavenging every 600000ms
2024-07-20 16:54:43,672 [main] INFO  handler.ContextHandler (ContextHandler.java:doStart(921)) - Started o.e.j.s.ServletContextHandler@69a14512{logs,/logs,file:///home/runner/work/ozone/ozone/hadoop-ozone/integration-test/target/log,AVAILABLE}
2024-07-20 16:54:43,673 [main] INFO  handler.ContextHandler (ContextHandler.java:doStart(921)) - Started o.e.j.s.ServletContextHandler@58052571{static,/static,file:///home/runner/work/ozone/ozone/hadoop-ozone/integration-test/target/test-classes/webapps/static,AVAILABLE}
2024-07-20 16:54:43,708 [main] INFO  handler.ContextHandler (ContextHandler.java:doStart(921)) - Started o.e.j.w.WebAppContext@f3cc2e0{scm,/,file:///home/runner/work/ozone/ozone/hadoop-ozone/integration-test/target/test-classes/webapps/scm/,AVAILABLE}{file:/home/runner/work/ozone/ozone/hadoop-ozone/integration-test/target/test-classes/webapps/scm}
2024-07-20 16:54:43,714 [main] INFO  server.AbstractConnector (AbstractConnector.java:doStart(333)) - Started ServerConnector@138d85f8{HTTP/1.1, (http/1.1)}{0.0.0.0:15003}
2024-07-20 16:54:43,715 [main] INFO  server.Server (Server.java:doStart(415)) - Started @4686ms
2024-07-20 16:54:43,718 [main] INFO  impl.MetricsSinkAdapter (MetricsSinkAdapter.java:start(204)) - Sink prometheus started
2024-07-20 16:54:43,719 [main] INFO  impl.MetricsSystemImpl (MetricsSystemImpl.java:registerSink(305)) - Registered sink prometheus
2024-07-20 16:54:43,720 [main] INFO  http.BaseHttpServer (BaseHttpServer.java:updateConnectorAddress(354)) - HTTP server of scm listening at http://0.0.0.0:15003
2024-07-20 16:54:43,729 [main] INFO  db.CodecBuffer (CodecBuffer.java:set(63)) - Successfully set constructor to org.apache.hadoop.hdds.utils.db.CodecBuffer$$Lambda$809/0x00007fecb45ce748@32ff3c98
2024-07-20 16:54:43,778 [main] INFO  audit.AuditLogger (AuditLogger.java:refreshDebugCmdSet(135)) - Refresh DebugCmdSet for OMAudit to [].
2024-07-20 16:54:43,835 [main] INFO  ha.OMHANodeDetails (OMHANodeDetails.java:loadOMHAConfig(121)) - ServiceID for OzoneManager is om-service-test1
2024-07-20 16:54:43,840 [main] INFO  ha.OMHANodeDetails (OMHANodeDetails.java:loadOMHAConfig(201)) - Found matching OM address with OMServiceId: om-service-test1, OMNodeId: omNode-1, RPC Address: localhost:15004 and Ratis port: 15007
2024-07-20 16:54:43,841 [main] INFO  ha.OMHANodeDetails (ConfUtils.java:setNodeSpecificConfigs(97)) - Setting configuration key ozone.om.http-address with value of key ozone.om.http-address.om-service-test1.omNode-1: 127.0.0.1:15005
2024-07-20 16:54:43,842 [main] INFO  ha.OMHANodeDetails (ConfUtils.java:setNodeSpecificConfigs(97)) - Setting configuration key ozone.om.https-address with value of key ozone.om.https-address.om-service-test1.omNode-1: 127.0.0.1:15006
2024-07-20 16:54:43,842 [main] INFO  ha.OMHANodeDetails (ConfUtils.java:setNodeSpecificConfigs(97)) - Setting configuration key ozone.om.address with value of key ozone.om.address.om-service-test1.omNode-1: 127.0.0.1:15004
2024-07-20 16:54:43,843 [main] WARN  server.ServerUtils (ServerUtils.java:getDBPath(299)) - ozone.om.db.dirs is not configured. We recommend adding this setting. Falling back to ozone.metadata.dirs instead.
2024-07-20 16:54:43,852 [main] INFO  proxy.SCMBlockLocationFailoverProxyProvider (SCMBlockLocationFailoverProxyProvider.java:<init>(115)) - Created block location fail-over proxy with 1 nodes: [nodeId=scmNodeId,nodeAddress=/0.0.0.0:15001]
2024-07-20 16:54:44,026 | INFO  | SCMAudit | user=runner | ip=127.0.0.1 | op=GET_SCM_INFO null | ret=SUCCESS |  
OM initialization succeeded.Current cluster id for sd=/home/runner/work/ozone/ozone/hadoop-ozone/integration-test/target/test-dir/MiniOzoneClusterImpl-f7452c88-0c37-4f5d-a1f6-a5ee96fcef81/omNode-1/om;cid=f7452c88-0c37-4f5d-a1f6-a5ee96fcef81;layoutVersion=6
2024-07-20 16:54:44,039 [main] INFO  ha.OMHANodeDetails (OMHANodeDetails.java:loadOMHAConfig(121)) - ServiceID for OzoneManager is om-service-test1
2024-07-20 16:54:44,041 [main] INFO  ha.OMHANodeDetails (OMHANodeDetails.java:loadOMHAConfig(201)) - Found matching OM address with OMServiceId: om-service-test1, OMNodeId: omNode-1, RPC Address: localhost:15004 and Ratis port: 15007
2024-07-20 16:54:44,042 [main] INFO  ha.OMHANodeDetails (ConfUtils.java:setNodeSpecificConfigs(97)) - Setting configuration key ozone.om.http-address with value of key ozone.om.http-address.om-service-test1.omNode-1: 127.0.0.1:15005
2024-07-20 16:54:44,042 [main] INFO  ha.OMHANodeDetails (ConfUtils.java:setNodeSpecificConfigs(97)) - Setting configuration key ozone.om.https-address with value of key ozone.om.https-address.om-service-test1.omNode-1: 127.0.0.1:15006
2024-07-20 16:54:44,043 [main] INFO  ha.OMHANodeDetails (ConfUtils.java:setNodeSpecificConfigs(97)) - Setting configuration key ozone.om.address with value of key ozone.om.address.om-service-test1.omNode-1: 127.0.0.1:15004
2024-07-20 16:54:44,044 [main] WARN  server.ServerUtils (ServerUtils.java:getDBPath(299)) - ozone.om.db.dirs is not configured. We recommend adding this setting. Falling back to ozone.metadata.dirs instead.
2024-07-20 16:54:44,048 [main] INFO  upgrade.AbstractLayoutVersionManager (AbstractLayoutVersionManager.java:init(83)) - Initializing Layout version manager with metadata layout = QUOTA (version = 6), software layout = QUOTA (version = 6)
2024-07-20 16:54:44,125 [main] INFO  reflections.Reflections (Reflections.java:scan(219)) - Reflections took 75 ms to scan 2 urls, producing 188 keys and 546 values
2024-07-20 16:54:44,128 [main] INFO  upgrade.OMLayoutVersionManager (OMLayoutVersionManager.java:lambda$0(113)) - Skipping Upgrade Action QuotaRepairUpgradeAction since it has been finalized.
2024-07-20 16:54:44,130 [main] INFO  upgrade.OMLayoutVersionManager (OMLayoutVersionManager.java:lambda$0(113)) - Skipping Upgrade Action MockOmUpgradeAction since it has been finalized.
2024-07-20 16:54:44,131 [main] WARN  server.ServerUtils (ServerUtils.java:getDBPath(299)) - ozone.om.db.dirs is not configured. We recommend adding this setting. Falling back to ozone.metadata.dirs instead.
2024-07-20 16:54:44,223 [main] INFO  proxy.SCMBlockLocationFailoverProxyProvider (SCMBlockLocationFailoverProxyProvider.java:<init>(115)) - Created block location fail-over proxy with 1 nodes: [nodeId=scmNodeId,nodeAddress=/0.0.0.0:15001]
2024-07-20 16:54:44,233 [main] INFO  proxy.SCMBlockLocationFailoverProxyProvider (SCMBlockLocationFailoverProxyProvider.java:<init>(115)) - Created block location fail-over proxy with 1 nodes: [nodeId=scmNodeId,nodeAddress=/0.0.0.0:15001]
2024-07-20 16:54:44,239 | INFO  | SCMAudit | user=runner | ip=127.0.0.1 | op=GET_SCM_INFO null | ret=SUCCESS |  
2024-07-20 16:54:44,254 [main] INFO  om.OzoneManager (OzoneManager.java:<init>(678)) - OM start with adminUsers: [runner]
2024-07-20 16:54:44,268 [main] WARN  server.ServerUtils (ServerUtils.java:getDBPath(299)) - ozone.om.db.dirs is not configured. We recommend adding this setting. Falling back to ozone.metadata.dirs instead.
2024-07-20 16:54:44,289 [main] INFO  helpers.OmKeyInfo (OmKeyInfo.java:getCodec(72)) - OmKeyInfo.getCodec ignorePipeline = true
2024-07-20 16:54:44,539 [main] INFO  om.OzoneManager (OzoneManager.java:instantiateServices(812)) - S3 Multi-Tenancy is enabled
2024-07-20 16:54:44,546 [main] INFO  om.OMMultiTenantManagerImpl (OMMultiTenantManagerImpl.java:loadTenantCacheFromDB(899)) - Loaded 0 tenants and 0 tenant users from the database
2024-07-20 16:54:44,553 [omNode-1-OMRangerBGSyncService#0] WARN  service.OMRangerBGSyncService (OMRangerBGSyncService.java:shouldRun(265)) - OzoneManagerRatisServer is not initialized yet
2024-07-20 16:54:44,581 [main] INFO  om.OmSnapshotManager (OmSnapshotManager.java:<init>(180)) - Ozone filesystem snapshot feature is enabled.
2024-07-20 16:54:44,587 [main] WARN  server.ServerUtils (ServerUtils.java:getDBPath(299)) - ozone.om.snapshot.diff.db.dir is not configured. We recommend adding this setting. Falling back to ozone.metadata.dirs instead.
2024-07-20 16:54:44,624 [main] INFO  utils.NativeLibraryLoader (NativeLibraryLoader.java:loadLibrary(111)) - Loading Library: ozone_rocksdb_tools
2024-07-20 16:54:44,626 [main] ERROR snapshot.SnapshotDiffManager (SnapshotDiffManager.java:initNativeLibraryForEfficientDiff(287)) - Native Library for raw sst file reading loading failed.
org.apache.hadoop.hdds.utils.NativeLibraryNotLoadedException: Unable to load library ozone_rocksdb_tools from both java.library.path & resource file libozone_rocksdb_tools.so from jar.
	at org.apache.hadoop.hdds.utils.db.managed.ManagedRawSSTFileReader.loadLibrary(ManagedRawSSTFileReader.java:40)
	at org.apache.hadoop.ozone.om.snapshot.SnapshotDiffManager.initNativeLibraryForEfficientDiff(SnapshotDiffManager.java:285)
	at org.apache.hadoop.ozone.om.snapshot.SnapshotDiffManager.<init>(SnapshotDiffManager.java:259)
	at org.apache.hadoop.ozone.om.OmSnapshotManager.<init>(OmSnapshotManager.java:287)
	at org.apache.hadoop.ozone.om.OzoneManager.instantiateServices(OzoneManager.java:864)
	at org.apache.hadoop.ozone.om.OzoneManager.<init>(OzoneManager.java:688)
	at org.apache.hadoop.ozone.om.OzoneManager.createOm(OzoneManager.java:775)
	at org.apache.hadoop.ozone.MiniOzoneHAClusterImpl$Builder.createOMService(MiniOzoneHAClusterImpl.java:510)
	at org.apache.hadoop.ozone.MiniOzoneHAClusterImpl$Builder.build(MiniOzoneHAClusterImpl.java:425)
	at org.apache.hadoop.ozone.shell.TestOzoneTenantShell.init(TestOzoneTenantShell.java:159)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:728)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:156)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptLifecycleMethod(TimeoutExtension.java:128)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptBeforeAllMethod(TimeoutExtension.java:70)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(InterceptingExecutableInvoker.java:103)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:93)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:92)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:86)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeBeforeAllMethods$13(ClassBasedTestDescriptor.java:412)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeBeforeAllMethods(ClassBasedTestDescriptor.java:410)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.before(ClassBasedTestDescriptor.java:216)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.before(ClassBasedTestDescriptor.java:85)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:148)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:63)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:154)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:123)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:377)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:138)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:465)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:451)
2024-07-20 16:54:44,675 [main] INFO  om.OzoneManager (OzoneManager.java:addS3GVolumeToDB(4463)) - Created Volume s3v With Owner runner required for S3Gateway operations.
2024-07-20 16:54:44,723 [main] WARN  server.ServerUtils (ServerUtils.java:getDefaultRatisDirectory(311)) - Storage directory for Ratis is not configured. It is a good idea to map this to an SSD disk. Falling back to ozone.metadata.dirs
2024-07-20 16:54:44,724 [main] WARN  utils.OzoneManagerRatisUtils (OzoneManagerRatisUtils.java:getOMRatisSnapshotDirectory(476)) - ozone.om.ratis.snapshot.dir is not configured. Falling back to ozone.metadata.dirs config
2024-07-20 16:54:44,730 [main] INFO  utils.RDBSnapshotProvider (RDBSnapshotProvider.java:init(87)) - Cleaning up the candidate dir: /home/runner/work/ozone/ozone/hadoop-ozone/integration-test/target/test-dir/MiniOzoneClusterImpl-f7452c88-0c37-4f5d-a1f6-a5ee96fcef81/omNode-1/snapshot/om.db.candidate
2024-07-20 16:54:44,731 [main] INFO  ratis_snapshot.OmRatisSnapshotProvider (OmRatisSnapshotProvider.java:<init>(99)) - Initializing OM Snapshot Provider
2024-07-20 16:54:44,857 [main] WARN  server.ServerUtils (ServerUtils.java:getDefaultRatisDirectory(311)) - Storage directory for Ratis is not configured. It is a good idea to map this to an SSD disk. Falling back to ozone.metadata.dirs
2024-07-20 16:54:44,884 [main] INFO  ratis.OzoneManagerRatisServer (OzoneManagerRatisServer.java:<init>(168)) - Instantiating OM Ratis server with groupID: om-service-test1 and peers: localhost:15007, localhost:15015, localhost:15011
2024-07-20 16:54:44,892 [main] INFO  ratis.OzoneManagerStateMachine (OzoneManagerStateMachine.java:loadSnapshotInfoFromDB(593)) - TransactionInfo not found in OM DB.
2024-07-20 16:54:44,936 [main] INFO  server.RaftServer (ConfUtils.java:logGet(46)) - raft.rpc.type = GRPC (default)
2024-07-20 16:54:44,942 [main] INFO  grpc.GrpcConfigKeys (ConfUtils.java:logFallback(53)) - raft.grpc.admin.host = null (fallback to raft.grpc.server.host)
2024-07-20 16:54:44,944 [main] INFO  grpc.GrpcConfigKeys (ConfUtils.java:logFallback(53)) - raft.grpc.admin.port = 15007 (fallback to raft.grpc.server.port)
2024-07-20 16:54:44,944 [main] INFO  grpc.GrpcConfigKeys (ConfUtils.java:logFallback(53)) - raft.grpc.client.host = null (fallback to raft.grpc.server.host)
2024-07-20 16:54:44,945 [main] INFO  grpc.GrpcConfigKeys (ConfUtils.java:logFallback(53)) - raft.grpc.client.port = 15007 (fallback to raft.grpc.server.port)
2024-07-20 16:54:44,946 [main] INFO  grpc.GrpcConfigKeys (ConfUtils.java:logGet(46)) - raft.grpc.server.host = null (default)
2024-07-20 16:54:44,946 [main] INFO  grpc.GrpcConfigKeys (ConfUtils.java:logGet(46)) - raft.grpc.server.port = 15007 (custom)
2024-07-20 16:54:44,947 [main] INFO  server.GrpcService (ConfUtils.java:logGet(46)) - raft.grpc.message.size.max = 4194304 (custom)
2024-07-20 16:54:44,948 [main] INFO  server.RaftServerConfigKeys (ConfUtils.java:logGet(46)) - raft.server.log.appender.buffer.byte-limit = 4194304 (custom)
2024-07-20 16:54:44,949 [main] INFO  server.GrpcService (ConfUtils.java:logGet(46)) - raft.grpc.flow.control.window = 1MB (=1048576) (default)
2024-07-20 16:54:44,949 [main] INFO  server.RaftServerConfigKeys (ConfUtils.java:logGet(46)) - raft.server.rpc.request.timeout = 3000ms (default)
2024-07-20 16:54:44,956 [main] INFO  grpc.GrpcConfigKeys (ConfUtils.java:logGet(46)) - raft.grpc.server.heartbeat.channel = true (default)
2024-07-20 16:54:44,959 [main] INFO  grpc.GrpcConfigKeys (ConfUtils.java:logGet(46)) - raft.grpc.server.async.request.thread.pool.cached = true (default)
2024-07-20 16:54:44,959 [main] INFO  grpc.GrpcConfigKeys (ConfUtils.java:logGet(46)) - raft.grpc.server.async.request.thread.pool.size = 32 (default)
2024-07-20 16:54:45,100 [main] INFO  impl.DataStreamServerImpl (ConfUtils.java:logGet(46)) - raft.datastream.type = DISABLED (default)
2024-07-20 16:54:45,102 [main] INFO  server.RaftServerConfigKeys (ConfUtils.java:logGet(46)) - raft.server.sleep.deviation.threshold = 300ms (default)
2024-07-20 16:54:45,103 [main] INFO  server.RaftServerConfigKeys (ConfUtils.java:logGet(46)) - raft.server.close.threshold = 60s (default)
2024-07-20 16:54:45,104 [main] INFO  server.RaftServerConfigKeys (ConfUtils.java:logGet(46)) - raft.server.leaderelection.leader.step-down.wait-time = 10s (default)
2024-07-20 16:54:45,105 [main] INFO  server.RaftServerConfigKeys (ConfUtils.java:logGet(46)) - raft.server.storage.dir = [/home/runner/work/ozone/ozone/hadoop-ozone/integration-test/target/test-dir/MiniOzoneClusterImpl-f7452c88-0c37-4f5d-a1f6-a5ee96fcef81/omNode-1/ratis] (custom)
2024-07-20 16:54:45,107 [main] INFO  server.RaftServerConfigKeys (ConfUtils.java:logGet(46)) - raft.server.threadpool.proxy.cached = true (default)
2024-07-20 16:54:45,108 [main] INFO  server.RaftServerConfigKeys (ConfUtils.java:logGet(46)) - raft.server.threadpool.proxy.size = 0 (default)
2024-07-20 16:54:45,119 [main] INFO  server.RaftServer (RaftServerProxy.java:addNew(101)) - omNode-1: addNew group-523986131536:[omNode-3|localhost:15015, omNode-1|localhost:15007, omNode-2|localhost:15011] returns group-523986131536:java.util.concurrent.CompletableFuture@24ae25b8[Not completed]
2024-07-20 16:54:45,120 [main] INFO  om.OzoneManager (OzoneManager.java:initializeRatisServer(2168)) - OzoneManager Ratis server initialized at port 15007
2024-07-20 16:54:45,123 [main] INFO  om.OzoneManager (OzoneManager.java:getRpcServer(1228)) - Creating RPC Server
2024-07-20 16:54:45,146 [omNode-1-groupManagement] INFO  server.RaftServer$Division (RaftServerImpl.java:<init>(253)) - omNode-1: new RaftServerImpl for group-523986131536:[omNode-3|localhost:15015, omNode-1|localhost:15007, omNode-2|localhost:15011] with OzoneManagerStateMachine:uninitialized
2024-07-20 16:54:45,147 [omNode-1-groupManagement] INFO  server.RaftServerConfigKeys (ConfUtils.java:logGet(46)) - raft.server.rpc.timeout.min = 1s (custom)
2024-07-20 16:54:45,148 [omNode-1-groupManagement] INFO  server.RaftServerConfigKeys (ConfUtils.java:logGet(46)) - raft.server.rpc.timeout.max = 1200ms (custom)
2024-07-20 16:54:45,148 [omNode-1-groupManagement] INFO  server.RaftServerConfigKeys (ConfUtils.java:logGet(46)) - raft.server.rpc.sleep.time = 25ms (default)
2024-07-20 16:54:45,148 [omNode-1-groupManagement] INFO  server.RaftServerConfigKeys (ConfUtils.java:logGet(46)) - raft.server.rpc.slowness.timeout = 2s (custom)
2024-07-20 16:54:45,148 [omNode-1-groupManagement] INFO  server.RaftServerConfigKeys (ConfUtils.java:logGet(46)) - raft.server.leaderelection.leader.step-down.wait-time = 10s (default)
2024-07-20 16:54:45,149 [omNode-1-groupManagement] INFO  server.RaftServerConfigKeys (ConfUtils.java:logGet(46)) - raft.server.leaderelection.member.majority-add = false (default)
2024-07-20 16:54:45,149 [omNode-1-groupManagement] INFO  server.RaftServerConfigKeys (ConfUtils.java:logGet(46)) - raft.server.sleep.deviation.threshold = 300ms (default)
2024-07-20 16:54:45,155 [omNode-1-groupManagement] INFO  server.RaftServer$Division (ServerState.java:<init>(114)) - omNode-1@group-523986131536: ConfigurationManager, init=conf: {index: -1, cur=peers:[omNode-3|localhost:15015, omNode-1|localhost:15007, omNode-2|localhost:15011]|listeners:[], old=null}, confs=<EMPTY_MAP>
2024-07-20 16:54:45,162 [omNode-1-groupManagement] INFO  server.RaftServerConfigKeys (ConfUtils.java:logGet(46)) - raft.server.notification.no-leader.timeout = 2s (custom)
2024-07-20 16:54:45,164 [omNode-1-groupManagement] INFO  server.RaftServerConfigKeys (ConfUtils.java:logGet(46)) - raft.server.read.timeout = 10s (default)
2024-07-20 16:54:45,168 [omNode-1-groupManagement] INFO  server.RaftServerConfigKeys (ConfUtils.java:logGet(46)) - raft.server.retrycache.expirytime = 300s (custom)
2024-07-20 16:54:45,168 [omNode-1-groupManagement] INFO  server.RaftServerConfigKeys (ConfUtils.java:logGet(46)) - raft.server.retrycache.statistics.expirytime = 100ms (default)
2024-07-20 16:54:45,172 [omNode-1-groupManagement] INFO  server.RaftServerConfigKeys (ConfUtils.java:logGet(46)) - raft.server.read.option = DEFAULT (default)
2024-07-20 16:54:45,173 [omNode-1-groupManagement] INFO  server.RaftServerConfigKeys (ConfUtils.java:logGet(46)) - raft.server.read.read-after-write-consistent.write-index-cache.expiry-time = 60s (default)
2024-07-20 16:54:45,230 [omNode-1-groupManagement] INFO  server.RaftServerConfigKeys (ConfUtils.java:logGet(46)) - raft.server.rpc.request.timeout = 3000ms (default)
2024-07-20 16:54:45,236 [omNode-1-groupManagement] INFO  server.RaftServerConfigKeys (ConfUtils.java:logGet(46)) - raft.server.log.appender.install.snapshot.enabled = false (custom)
2024-07-20 16:54:45,237 [omNode-1-groupManagement] INFO  server.RaftServerConfigKeys (ConfUtils.java:logGet(46)) - raft.server.threadpool.server.cached = true (default)
2024-07-20 16:54:45,238 [omNode-1-groupManagement] INFO  server.RaftServerConfigKeys (ConfUtils.java:logGet(46)) - raft.server.threadpool.server.size = 0 (default)
2024-07-20 16:54:45,239 [omNode-1-groupManagement] INFO  server.RaftServerConfigKeys (ConfUtils.java:logGet(46)) - raft.server.threadpool.client.cached = true (default)
2024-07-20 16:54:45,240 [omNode-1-groupManagement] INFO  server.RaftServerConfigKeys (ConfUtils.java:logGet(46)) - raft.server.threadpool.client.size = 0 (default)
2024-07-20 16:54:45,772 [main] INFO  reflections.Reflections (Reflections.java:scan(219)) - Reflections took 593 ms to scan 20 urls, producing 59 keys and 6640 values
2024-07-20 16:54:45,903 [main] INFO  ipc.CallQueueManager (CallQueueManager.java:<init>(90)) - Using callQueue: class java.util.concurrent.LinkedBlockingQueue, queueCapacity: 2000, scheduler: class org.apache.hadoop.ipc.DefaultRpcScheduler, ipcBackoff: false.
2024-07-20 16:54:45,904 [main] INFO  ipc.Server (Server.java:<init>(1287)) - Listener at 127.0.0.1:15004
2024-07-20 16:54:45,904 [Socket Reader #1 for port 15004] INFO  ipc.Server (Server.java:run(1323)) - Starting Socket Reader #1 for port 15004
2024-07-20 16:54:45,932 [main] INFO  impl.MetricsSystemImpl (MetricsSystemImpl.java:init(158)) - OzoneManager metrics system started (again)
2024-07-20 16:54:45,944 [main] INFO  om.OzoneManager (OzoneManager.java:start(1650)) - OzoneManager RPC server is listening at localhost/127.0.0.1:15004
2024-07-20 16:54:45,946 [main] INFO  ratis.OzoneManagerRatisServer (OzoneManagerRatisServer.java:start(594)) - Starting OzoneManagerRatisServer omNode-1 at port 15007
2024-07-20 16:54:45,949 [omNode-1-impl-thread1] INFO  server.RaftServerConfigKeys (ConfUtils.java:logGet(46)) - raft.server.storage.free-space.min = 0MB (=0) (default)
2024-07-20 16:54:45,949 [omNode-1-impl-thread1] INFO  server.RaftServerConfigKeys (ConfUtils.java:logGet(46)) - raft.server.log.corruption.policy = EXCEPTION (default)
2024-07-20 16:54:45,950 [omNode-1-impl-thread1] INFO  server.RaftServerConfigKeys (ConfUtils.java:logGet(46)) - raft.server.storage.dir = [/home/runner/work/ozone/ozone/hadoop-ozone/integration-test/target/test-dir/MiniOzoneClusterImpl-f7452c88-0c37-4f5d-a1f6-a5ee96fcef81/omNode-1/ratis] (custom)
2024-07-20 16:54:45,955 [omNode-1-impl-thread1] INFO  storage.RaftStorageDirectory (RaftStorageDirectoryImpl.java:analyzeStorage(138)) - The storage directory /home/runner/work/ozone/ozone/hadoop-ozone/integration-test/target/test-dir/MiniOzoneClusterImpl-f7452c88-0c37-4f5d-a1f6-a5ee96fcef81/omNode-1/ratis/c9bc4cf4-3bc3-3c60-a66b-523986131536 does not exist. Creating ...
2024-07-20 16:54:45,958 [omNode-1-impl-thread1] INFO  storage.RaftStorageDirectory (RaftStorageDirectoryImpl.java:tryLock(229)) - Lock on /home/runner/work/ozone/ozone/hadoop-ozone/integration-test/target/test-dir/MiniOzoneClusterImpl-f7452c88-0c37-4f5d-a1f6-a5ee96fcef81/omNode-1/ratis/c9bc4cf4-3bc3-3c60-a66b-523986131536/in_use.lock acquired by nodename 54372@fv-az1015-711
2024-07-20 16:54:45,970 [omNode-1-impl-thread1] INFO  storage.RaftStorage (RaftStorageImpl.java:format(98)) - Storage directory /home/runner/work/ozone/ozone/hadoop-ozone/integration-test/target/test-dir/MiniOzoneClusterImpl-f7452c88-0c37-4f5d-a1f6-a5ee96fcef81/omNode-1/ratis/c9bc4cf4-3bc3-3c60-a66b-523986131536 has been successfully formatted.
2024-07-20 16:54:45,973 [omNode-1-impl-thread1] INFO  server.RaftServerConfigKeys (ConfUtils.java:logGet(46)) - raft.server.log.use.memory = false (default)
2024-07-20 16:54:45,979 [omNode-1-impl-thread1] INFO  server.RaftServerConfigKeys (ConfUtils.java:logGet(46)) - raft.server.log.purge.gap = 1000000 (custom)
2024-07-20 16:54:45,979 [omNode-1-impl-thread1] INFO  server.RaftServerConfigKeys (ConfUtils.java:logGet(46)) - raft.server.log.appender.buffer.byte-limit = 4194304 (custom)
2024-07-20 16:54:45,981 [omNode-1-impl-thread1] INFO  server.RaftServerConfigKeys (ConfUtils.java:logGet(46)) - raft.server.log.statemachine.data.read.timeout = 1000ms (default)
2024-07-20 16:54:45,981 [omNode-1-impl-thread1] INFO  server.RaftServerConfigKeys (ConfUtils.java:logGet(46)) - raft.server.log.purge.preservation.log.num = 0 (default)
2024-07-20 16:54:45,984 [omNode-1-impl-thread1] INFO  server.RaftServerConfigKeys (ConfUtils.java:logGet(46)) - raft.server.log.segment.size.max = 4194304 (custom)
2024-07-20 16:54:45,989 [omNode-1-impl-thread1] INFO  server.RaftServerConfigKeys (ConfUtils.java:logGet(46)) - raft.server.log.segment.cache.num.max = 2 (custom)
2024-07-20 16:54:45,989 [omNode-1-impl-thread1] INFO  server.RaftServerConfigKeys (ConfUtils.java:logGet(46)) - raft.server.log.segment.cache.size.max = 200MB (=209715200) (default)
2024-07-20 16:54:45,989 [omNode-1-impl-thread1] INFO  server.RaftServerConfigKeys (ConfUtils.java:logGet(46)) - raft.server.log.appender.buffer.byte-limit = 4194304 (custom)
2024-07-20 16:54:45,991 [omNode-1-impl-thread1] INFO  util.AwaitToRun (AwaitToRun.java:start(81)) - Thread[omNode-1@group-523986131536-cacheEviction-AwaitToRun,5,main] started
2024-07-20 16:54:45,995 [omNode-1-impl-thread1] INFO  segmented.SegmentedRaftLogWorker (SegmentedRaftLogWorker.java:<init>(184)) - new omNode-1@group-523986131536-SegmentedRaftLogWorker for RaftStorageImpl:Storage Directory /home/runner/work/ozone/ozone/hadoop-ozone/integration-test/target/test-dir/MiniOzoneClusterImpl-f7452c88-0c37-4f5d-a1f6-a5ee96fcef81/omNode-1/ratis/c9bc4cf4-3bc3-3c60-a66b-523986131536
2024-07-20 16:54:45,995 [omNode-1-impl-thread1] INFO  server.RaftServerConfigKeys (ConfUtils.java:logGet(46)) - raft.server.log.queue.byte-limit = 64MB (=67108864) (default)
2024-07-20 16:54:45,995 [omNode-1-impl-thread1] INFO  server.RaftServerConfigKeys (ConfUtils.java:logGet(46)) - raft.server.log.queue.element-limit = 4096 (default)
2024-07-20 16:54:45,997 [omNode-1-impl-thread1] INFO  server.RaftServerConfigKeys (ConfUtils.java:logGet(46)) - raft.server.log.segment.size.max = 4194304 (custom)
2024-07-20 16:54:45,997 [omNode-1-impl-thread1] INFO  server.RaftServerConfigKeys (ConfUtils.java:logGet(46)) - raft.server.log.preallocated.size = 4194304 (custom)
2024-07-20 16:54:45,997 [omNode-1-impl-thread1] INFO  server.RaftServerConfigKeys (ConfUtils.java:logGet(46)) - raft.server.log.force.sync.num = 128 (default)
2024-07-20 16:54:45,998 [omNode-1-impl-thread1] INFO  server.RaftServerConfigKeys (ConfUtils.java:logGet(46)) - raft.server.log.statemachine.data.sync = true (default)
2024-07-20 16:54:45,998 [omNode-1-impl-thread1] INFO  server.RaftServerConfigKeys (ConfUtils.java:logGet(46)) - raft.server.log.statemachine.data.sync.timeout = 10s (default)
2024-07-20 16:54:45,999 [omNode-1-impl-thread1] INFO  server.RaftServerConfigKeys (ConfUtils.java:logGet(46)) - raft.server.log.statemachine.data.sync.timeout.retry = -1 (default)
2024-07-20 16:54:46,000 [omNode-1-impl-thread1] INFO  server.RaftServerConfigKeys (ConfUtils.java:logGet(46)) - raft.server.log.write.buffer.size = 4194312 (custom)
2024-07-20 16:54:46,002 [omNode-1-impl-thread1] INFO  server.RaftServerConfigKeys (ConfUtils.java:logGet(46)) - raft.server.log.appender.buffer.byte-limit = 4194304 (custom)
2024-07-20 16:54:46,002 [omNode-1-impl-thread1] INFO  server.RaftServerConfigKeys (ConfUtils.java:logGet(46)) - raft.server.log.unsafe-flush.enabled = false (default)
2024-07-20 16:54:46,002 [omNode-1-impl-thread1] INFO  server.RaftServerConfigKeys (ConfUtils.java:logGet(46)) - raft.server.log.async-flush.enabled = false (default)
2024-07-20 16:54:46,003 [omNode-1-impl-thread1] INFO  server.RaftServerConfigKeys (ConfUtils.java:logGet(46)) - raft.server.log.statemachine.data.caching.enabled = false (default)
2024-07-20 16:54:46,007 [omNode-1-impl-thread1] INFO  segmented.SegmentedRaftLogWorker (SegmentedRaftLogWorker.java:lambda$new$0(135)) - omNode-1@group-523986131536-SegmentedRaftLogWorker: flushIndex: setUnconditionally 0 -> -1
2024-07-20 16:54:46,008 [omNode-1-impl-thread1] INFO  segmented.SegmentedRaftLogWorker (SegmentedRaftLogWorker.java:lambda$new$0(135)) - omNode-1@group-523986131536-SegmentedRaftLogWorker: safeCacheEvictIndex: setUnconditionally 0 -> -1
2024-07-20 16:54:46,009 [omNode-1-impl-thread1] INFO  server.RaftServer$Division (RaftServerImpl.java:start(389)) - omNode-1@group-523986131536: start as a follower, conf=conf: {index: -1, cur=peers:[omNode-3|localhost:15015, omNode-1|localhost:15007, omNode-2|localhost:15011]|listeners:[], old=null}
2024-07-20 16:54:46,009 [omNode-1-impl-thread1] INFO  server.RaftServer$Division (RaftServerImpl.java:setRole(376)) - omNode-1@group-523986131536: changes role from      null to FOLLOWER at term 0 for startAsFollower
2024-07-20 16:54:46,010 [omNode-1-impl-thread1] INFO  impl.RoleInfo (RoleInfo.java:updateAndGet(148)) - omNode-1: start omNode-1@group-523986131536-FollowerState
2024-07-20 16:54:46,011 [omNode-1@group-523986131536-FollowerState] INFO  server.RaftServerConfigKeys (ConfUtils.java:logFallback(53)) - raft.server.rpc.first-election.timeout.min = 1s (fallback to raft.server.rpc.timeout.min)
2024-07-20 16:54:46,012 [omNode-1-impl-thread1] INFO  util.JmxRegister (JmxRegister.java:tryRegister(44)) - Successfully registered JMX Bean with object name Ratis:service=RaftServer,group=group-523986131536,id=omNode-1
2024-07-20 16:54:46,012 [omNode-1-impl-thread1] INFO  util.JmxRegister (JmxRegister.java:register(58)) - register mxBean class org.apache.ratis.server.impl.RaftServerJmxAdapter as Ratis:service=RaftServer,group=group-523986131536,id=omNode-1
2024-07-20 16:54:46,014 [omNode-1@group-523986131536-FollowerState] INFO  server.RaftServerConfigKeys (ConfUtils.java:logFallback(53)) - raft.server.rpc.first-election.timeout.max = 1200ms (fallback to raft.server.rpc.timeout.max)
2024-07-20 16:54:46,014 [omNode-1-impl-thread1] INFO  server.RaftServerConfigKeys (ConfUtils.java:logGet(46)) - raft.server.snapshot.trigger-when-stop.enabled = true (default)
2024-07-20 16:54:46,015 [omNode-1-impl-thread1] INFO  server.RaftServerConfigKeys (ConfUtils.java:logGet(46)) - raft.server.snapshot.trigger-when-remove.enabled = true (default)
2024-07-20 16:54:46,015 [omNode-1-impl-thread1] INFO  server.RaftServerConfigKeys (ConfUtils.java:logGet(46)) - raft.server.snapshot.auto.trigger.enabled = true (custom)
2024-07-20 16:54:46,016 [omNode-1-impl-thread1] INFO  server.RaftServerConfigKeys (ConfUtils.java:logGet(46)) - raft.server.snapshot.auto.trigger.threshold = 400000 (default)
2024-07-20 16:54:46,016 [omNode-1-impl-thread1] INFO  server.RaftServerConfigKeys (ConfUtils.java:logGet(46)) - raft.server.snapshot.retention.file.num = -1 (default)
2024-07-20 16:54:46,017 [omNode-1-impl-thread1] INFO  server.RaftServerConfigKeys (ConfUtils.java:logGet(46)) - raft.server.log.purge.upto.snapshot.index = true (custom)
2024-07-20 16:54:46,021 [main] INFO  server.RaftServer (RaftServerProxy.java:startImpl(408)) - omNode-1: start RPC server
2024-07-20 16:54:46,051 [main] INFO  server.GrpcService (GrpcService.java:startImpl(302)) - omNode-1: GrpcService started, listening on 15007
2024-07-20 16:54:46,053 [main] INFO  om.OzoneManager (OzoneManager.java:start(1666)) - Version File has different layout version (6) than OM DB (null). That is expected if this OM has never been finalized to a newer layout version.
2024-07-20 16:54:46,054 [JvmPauseMonitor1] INFO  util.JvmPauseMonitor (JvmPauseMonitor.java:run(146)) - JvmPauseMonitor-omNode-1: Started
2024-07-20 16:54:46,073 [main] INFO  client.ScmTopologyClient (ScmTopologyClient.java:start(72)) - Initial network topology fetched from SCM: /.
2024-07-20 16:54:46,074 [main] INFO  net.NodeSchemaLoader (NodeSchemaLoader.java:loadSchemaFromFile(129)) - Loading schema from [jar:file:/home/runner/work/ozone/ozone/hadoop-hdds/common/target/hdds-common-1.5.0-SNAPSHOT.jar!/network-topology-default.xml]
2024-07-20 16:54:46,074 [main] INFO  net.NodeSchemaLoader (NodeSchemaLoader.java:loadSchema(176)) - Loading network topology layer schema file
2024-07-20 16:54:46,108 [main] INFO  http.BaseHttpServer (BaseHttpServer.java:newHttpServer2BuilderForOzone(223)) - Starting Web-server for ozoneManager at: http://0.0.0.0:15005
2024-07-20 16:54:46,108 [main] INFO  http.BaseHttpServer (BaseHttpServer.java:<init>(110)) - Hadoop Security Enabled: false Ozone Security Enabled: false Ozone HTTP Security Enabled: false 
2024-07-20 16:54:46,110 [main] WARN  server.AuthenticationFilter (AuthenticationFilter.java:constructSecretProvider(240)) - Unable to initialize FileSignerSecretProvider, falling back to use random secrets. Reason: Could not read signature secret file: /home/runner/hadoop-http-auth-signature-secret
2024-07-20 16:54:46,113 [main] INFO  http.HttpRequestLog (HttpRequestLog.java:getRequestLog(86)) - Http request log for http.requests.ozoneManager is not defined
2024-07-20 16:54:46,115 [main] INFO  http.HttpServer2 (HttpServer2.java:addGlobalFilter(1035)) - Added global filter 'safety' (class=org.apache.hadoop.hdds.server.http.HttpServer2$QuotingInputFilter)
2024-07-20 16:54:46,116 [main] INFO  http.HttpServer2 (HttpServer2.java:addFilter(1011)) - Added filter static_user_filter (class=org.apache.hadoop.http.lib.StaticUserWebFilter$StaticUserFilter) to context ozoneManager
2024-07-20 16:54:46,117 [main] INFO  http.HttpServer2 (HttpServer2.java:addFilter(1019)) - Added filter static_user_filter (class=org.apache.hadoop.http.lib.StaticUserWebFilter$StaticUserFilter) to context static
2024-07-20 16:54:46,118 [main] INFO  http.HttpServer2 (HttpServer2.java:addFilter(1019)) - Added filter static_user_filter (class=org.apache.hadoop.http.lib.StaticUserWebFilter$StaticUserFilter) to context logs
2024-07-20 16:54:46,119 [main] INFO  http.BaseHttpServer (BaseHttpServer.java:<init>(189)) - HTTP server of ozoneManager uses base directory /home/runner/work/ozone/ozone/hadoop-ozone/integration-test/target/test-dir/MiniOzoneClusterImpl-f7452c88-0c37-4f5d-a1f6-a5ee96fcef81/omNode-1/webserver
2024-07-20 16:54:46,123 [main] INFO  http.HttpServer2 (HttpServer2.java:bindListener(1235)) - Jetty bound to port 15005
2024-07-20 16:54:46,123 [main] INFO  server.Server (Server.java:doStart(375)) - jetty-9.4.55.v20240627; built: 2024-06-27T15:05:37.765Z; git: 70015831e5195ba74da6383c4ab7c90c56bb08af; jvm 17.0.11+9
2024-07-20 16:54:46,147 [main] INFO  server.session (DefaultSessionIdManager.java:doStart(334)) - DefaultSessionIdManager workerName=node0
2024-07-20 16:54:46,147 [main] INFO  server.session (DefaultSessionIdManager.java:doStart(339)) - No SessionScavenger set, using defaults
2024-07-20 16:54:46,147 [main] INFO  server.session (HouseKeeper.java:startScavenging(132)) - node0 Scavenging every 600000ms
2024-07-20 16:54:46,159 [main] INFO  handler.ContextHandler (ContextHandler.java:doStart(921)) - Started o.e.j.s.ServletContextHandler@e1619a{logs,/logs,file:///home/runner/work/ozone/ozone/hadoop-ozone/integration-test/target/log,AVAILABLE}
2024-07-20 16:54:46,159 [main] INFO  handler.ContextHandler (ContextHandler.java:doStart(921)) - Started o.e.j.s.ServletContextHandler@6416b6e3{static,/static,file:///home/runner/work/ozone/ozone/hadoop-ozone/integration-test/target/test-classes/webapps/static,AVAILABLE}
2024-07-20 16:54:46,170 [main] INFO  handler.ContextHandler (ContextHandler.java:doStart(921)) - Started o.e.j.w.WebAppContext@6450bea7{ozoneManager,/,file:///home/runner/work/ozone/ozone/hadoop-ozone/integration-test/target/test-classes/webapps/ozoneManager/,AVAILABLE}{file:/home/runner/work/ozone/ozone/hadoop-ozone/integration-test/target/test-classes/webapps/ozoneManager}
2024-07-20 16:54:46,171 [main] INFO  server.AbstractConnector (AbstractConnector.java:doStart(333)) - Started ServerConnector@59c08e5d{HTTP/1.1, (http/1.1)}{0.0.0.0:15005}
2024-07-20 16:54:46,171 [main] INFO  server.Server (Server.java:doStart(415)) - Started @7142ms
2024-07-20 16:54:46,171 [main] WARN  impl.MetricsSystemImpl (MetricsSystemImpl.java:register(279)) - Sink prometheus already exists!
2024-07-20 16:54:46,172 [main] INFO  http.BaseHttpServer (BaseHttpServer.java:updateConnectorAddress(354)) - HTTP server of ozoneManager listening at http://0.0.0.0:15005
2024-07-20 16:54:46,173 [IPC Server Responder] INFO  ipc.Server (Server.java:run(1562)) - IPC Server Responder: starting
2024-07-20 16:54:46,173 [IPC Server listener on 15004] INFO  ipc.Server (Server.java:run(1402)) - IPC Server listener on 15004: starting
2024-07-20 16:54:46,180 [main] INFO  om.OzoneManager (OzoneManager.java:startTrashEmptier(2121)) - Trash Interval set to 0. Files deleted won't move to trash
2024-07-20 16:54:46,181 [main] INFO  ozone.MiniOzoneHAClusterImpl (MiniOzoneHAClusterImpl.java:createOMService(517)) - Started OzoneManager omNode-1 RPC server at localhost/127.0.0.1:15004
2024-07-20 16:54:46,182 [main] INFO  ha.OMHANodeDetails (OMHANodeDetails.java:loadOMHAConfig(121)) - ServiceID for OzoneManager is om-service-test1
2024-07-20 16:54:46,183 [main] INFO  ha.OMHANodeDetails (OMHANodeDetails.java:loadOMHAConfig(201)) - Found matching OM address with OMServiceId: om-service-test1, OMNodeId: omNode-2, RPC Address: localhost:15008 and Ratis port: 15011
2024-07-20 16:54:46,183 [main] INFO  ha.OMHANodeDetails (ConfUtils.java:setNodeSpecificConfigs(97)) - Setting configuration key ozone.om.http-address with value of key ozone.om.http-address.om-service-test1.omNode-2: 127.0.0.1:15009
2024-07-20 16:54:46,184 [main] INFO  ha.OMHANodeDetails (ConfUtils.java:setNodeSpecificConfigs(97)) - Setting configuration key ozone.om.https-address with value of key ozone.om.https-address.om-service-test1.omNode-2: 127.0.0.1:15010
2024-07-20 16:54:46,184 [main] INFO  ha.OMHANodeDetails (ConfUtils.java:setNodeSpecificConfigs(97)) - Setting configuration key ozone.om.address with value of key ozone.om.address.om-service-test1.omNode-2: 127.0.0.1:15008
2024-07-20 16:54:46,184 [main] WARN  server.ServerUtils (ServerUtils.java:getDBPath(299)) - ozone.om.db.dirs is not configured. We recommend adding this setting. Falling back to ozone.metadata.dirs instead.
2024-07-20 16:54:46,187 [main] INFO  proxy.SCMBlockLocationFailoverProxyProvider (SCMBlockLocationFailoverProxyProvider.java:<init>(115)) - Created block location fail-over proxy with 1 nodes: [nodeId=scmNodeId,nodeAddress=/0.0.0.0:15001]
2024-07-20 16:54:46,195 | INFO  | SCMAudit | user=runner | ip=127.0.0.1 | op=GET_SCM_INFO null | ret=SUCCESS |  
OM initialization succeeded.Current cluster id for sd=/home/runner/work/ozone/ozone/hadoop-ozone/integration-test/target/test-dir/MiniOzoneClusterImpl-f7452c88-0c37-4f5d-a1f6-a5ee96fcef81/omNode-2/om;cid=f7452c88-0c37-4f5d-a1f6-a5ee96fcef81;layoutVersion=6
2024-07-20 16:54:46,198 [main] INFO  ha.OMHANodeDetails (OMHANodeDetails.java:loadOMHAConfig(121)) - ServiceID for OzoneManager is om-service-test1
2024-07-20 16:54:46,200 [main] INFO  ha.OMHANodeDetails (OMHANodeDetails.java:loadOMHAConfig(201)) - Found matching OM address with OMServiceId: om-service-test1, OMNodeId: omNode-2, RPC Address: localhost:15008 and Ratis port: 15011
2024-07-20 16:54:46,200 [main] INFO  ha.OMHANodeDetails (ConfUtils.java:setNodeSpecificConfigs(97)) - Setting configuration key ozone.om.http-address with value of key ozone.om.http-address.om-service-test1.omNode-2: 127.0.0.1:15009
2024-07-20 16:54:46,200 [main] INFO  ha.OMHANodeDetails (ConfUtils.java:setNodeSpecificConfigs(97)) - Setting configuration key ozone.om.https-address with value of key ozone.om.https-address.om-service-test1.omNode-2: 127.0.0.1:15010
2024-07-20 16:54:46,201 [main] INFO  ha.OMHANodeDetails (ConfUtils.java:setNodeSpecificConfigs(97)) - Setting configuration key ozone.om.address with value of key ozone.om.address.om-service-test1.omNode-2: 127.0.0.1:15008
2024-07-20 16:54:46,201 [main] WARN  server.ServerUtils (ServerUtils.java:getDBPath(299)) - ozone.om.db.dirs is not configured. We recommend adding this setting. Falling back to ozone.metadata.dirs instead.
2024-07-20 16:54:46,202 [main] INFO  upgrade.AbstractLayoutVersionManager (AbstractLayoutVersionManager.java:init(83)) - Initializing Layout version manager with metadata layout = QUOTA (version = 6), software layout = QUOTA (version = 6)
2024-07-20 16:54:46,244 [main] INFO  reflections.Reflections (Reflections.java:scan(219)) - Reflections took 41 ms to scan 2 urls, producing 188 keys and 546 values
2024-07-20 16:54:46,244 [main] INFO  upgrade.OMLayoutVersionManager (OMLayoutVersionManager.java:lambda$0(113)) - Skipping Upgrade Action QuotaRepairUpgradeAction since it has been finalized.
2024-07-20 16:54:46,244 [main] INFO  upgrade.OMLayoutVersionManager (OMLayoutVersionManager.java:lambda$0(113)) - Skipping Upgrade Action MockOmUpgradeAction since it has been finalized.
2024-07-20 16:54:46,245 [main] WARN  server.ServerUtils (ServerUtils.java:getDBPath(299)) - ozone.om.db.dirs is not configured. We recommend adding this setting. Falling back to ozone.metadata.dirs instead.
2024-07-20 16:54:46,246 [main] INFO  proxy.SCMBlockLocationFailoverProxyProvider (SCMBlockLocationFailoverProxyProvider.java:<init>(115)) - Created block location fail-over proxy with 1 nodes: [nodeId=scmNodeId,nodeAddress=/0.0.0.0:15001]
2024-07-20 16:54:46,247 [main] INFO  proxy.SCMBlockLocationFailoverProxyProvider (SCMBlockLocationFailoverProxyProvider.java:<init>(115)) - Created block location fail-over proxy with 1 nodes: [nodeId=scmNodeId,nodeAddress=/0.0.0.0:15001]
2024-07-20 16:54:46,250 | INFO  | SCMAudit | user=runner | ip=127.0.0.1 | op=GET_SCM_INFO null | ret=SUCCESS |  
2024-07-20 16:54:46,253 [main] INFO  om.OzoneManager (OzoneManager.java:<init>(678)) - OM start with adminUsers: [runner]
2024-07-20 16:54:46,254 [main] WARN  server.ServerUtils (ServerUtils.java:getDBPath(299)) - ozone.om.db.dirs is not configured. We recommend adding this setting. Falling back to ozone.metadata.dirs instead.
2024-07-20 16:54:46,255 [main] INFO  helpers.OmKeyInfo (OmKeyInfo.java:getCodec(72)) - OmKeyInfo.getCodec ignorePipeline = true
2024-07-20 16:54:46,418 [main] INFO  om.OzoneManager (OzoneManager.java:instantiateServices(812)) - S3 Multi-Tenancy is enabled
2024-07-20 16:54:46,419 [main] INFO  om.OMMultiTenantManagerImpl (OMMultiTenantManagerImpl.java:loadTenantCacheFromDB(899)) - Loaded 0 tenants and 0 tenant users from the database
2024-07-20 16:54:46,420 [main] INFO  om.OmSnapshotManager (OmSnapshotManager.java:<init>(180)) - Ozone filesystem snapshot feature is enabled.
2024-07-20 16:54:46,420 [main] WARN  server.ServerUtils (ServerUtils.java:getDBPath(299)) - ozone.om.snapshot.diff.db.dir is not configured. We recommend adding this setting. Falling back to ozone.metadata.dirs instead.
2024-07-20 16:54:46,421 [omNode-2-OMRangerBGSyncService#0] WARN  service.OMRangerBGSyncService (OMRangerBGSyncService.java:shouldRun(265)) - OzoneManagerRatisServer is not initialized yet
2024-07-20 16:54:46,458 [main] INFO  utils.NativeLibraryLoader (NativeLibraryLoader.java:loadLibrary(111)) - Loading Library: ozone_rocksdb_tools
2024-07-20 16:54:46,459 [main] ERROR snapshot.SnapshotDiffManager (SnapshotDiffManager.java:initNativeLibraryForEfficientDiff(287)) - Native Library for raw sst file reading loading failed.
org.apache.hadoop.hdds.utils.NativeLibraryNotLoadedException: Unable to load library ozone_rocksdb_tools from both java.library.path & resource file libozone_rocksdb_tools.so from jar.
	at org.apache.hadoop.hdds.utils.db.managed.ManagedRawSSTFileReader.loadLibrary(ManagedRawSSTFileReader.java:40)
	at org.apache.hadoop.ozone.om.snapshot.SnapshotDiffManager.initNativeLibraryForEfficientDiff(SnapshotDiffManager.java:285)
	at org.apache.hadoop.ozone.om.snapshot.SnapshotDiffManager.<init>(SnapshotDiffManager.java:259)
	at org.apache.hadoop.ozone.om.OmSnapshotManager.<init>(OmSnapshotManager.java:287)
	at org.apache.hadoop.ozone.om.OzoneManager.instantiateServices(OzoneManager.java:864)
	at org.apache.hadoop.ozone.om.OzoneManager.<init>(OzoneManager.java:688)
	at org.apache.hadoop.ozone.om.OzoneManager.createOm(OzoneManager.java:775)
	at org.apache.hadoop.ozone.MiniOzoneHAClusterImpl$Builder.createOMService(MiniOzoneHAClusterImpl.java:510)
	at org.apache.hadoop.ozone.MiniOzoneHAClusterImpl$Builder.build(MiniOzoneHAClusterImpl.java:425)
	at org.apache.hadoop.ozone.shell.TestOzoneTenantShell.init(TestOzoneTenantShell.java:159)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:728)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:156)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptLifecycleMethod(TimeoutExtension.java:128)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptBeforeAllMethod(TimeoutExtension.java:70)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(InterceptingExecutableInvoker.java:103)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:93)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:92)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:86)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeBeforeAllMethods$13(ClassBasedTestDescriptor.java:412)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeBeforeAllMethods(ClassBasedTestDescriptor.java:410)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.before(ClassBasedTestDescriptor.java:216)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.before(ClassBasedTestDescriptor.java:85)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:148)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:63)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:154)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:123)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:377)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:138)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:465)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:451)
2024-07-20 16:54:46,462 [main] INFO  om.OzoneManager (OzoneManager.java:addS3GVolumeToDB(4463)) - Created Volume s3v With Owner runner required for S3Gateway operations.
2024-07-20 16:54:46,462 [main] WARN  server.ServerUtils (ServerUtils.java:getDefaultRatisDirectory(311)) - Storage directory for Ratis is not configured. It is a good idea to map this to an SSD disk. Falling back to ozone.metadata.dirs
2024-07-20 16:54:46,463 [main] WARN  utils.OzoneManagerRatisUtils (OzoneManagerRatisUtils.java:getOMRatisSnapshotDirectory(476)) - ozone.om.ratis.snapshot.dir is not configured. Falling back to ozone.metadata.dirs config
2024-07-20 16:54:46,463 [main] INFO  utils.RDBSnapshotProvider (RDBSnapshotProvider.java:init(87)) - Cleaning up the candidate dir: /home/runner/work/ozone/ozone/hadoop-ozone/integration-test/target/test-dir/MiniOzoneClusterImpl-f7452c88-0c37-4f5d-a1f6-a5ee96fcef81/omNode-2/snapshot/om.db.candidate
2024-07-20 16:54:46,464 [main] INFO  ratis_snapshot.OmRatisSnapshotProvider (OmRatisSnapshotProvider.java:<init>(99)) - Initializing OM Snapshot Provider
2024-07-20 16:54:46,465 [main] WARN  dropwizard3.Dm3MetricRegistriesImpl (Dm3MetricRegistriesImpl.java:addReporterRegistration(114)) - New reporters are added after registries were created. Some metrics will be missing from the reporter. Please add reporter before adding any new registry.
2024-07-20 16:54:46,465 [main] WARN  dropwizard3.Dm3MetricRegistriesImpl (Dm3MetricRegistriesImpl.java:addReporterRegistration(114)) - New reporters are added after registries were created. Some metrics will be missing from the reporter. Please add reporter before adding any new registry.
2024-07-20 16:54:46,466 [main] WARN  server.ServerUtils (ServerUtils.java:getDefaultRatisDirectory(311)) - Storage directory for Ratis is not configured. It is a good idea to map this to an SSD disk. Falling back to ozone.metadata.dirs
2024-07-20 16:54:46,468 [main] INFO  ratis.OzoneManagerRatisServer (OzoneManagerRatisServer.java:<init>(168)) - Instantiating OM Ratis server with groupID: om-service-test1 and peers: localhost:15011, localhost:15015, localhost:15007
2024-07-20 16:54:46,468 [main] INFO  ratis.OzoneManagerStateMachine (OzoneManagerStateMachine.java:loadSnapshotInfoFromDB(593)) - TransactionInfo not found in OM DB.
2024-07-20 16:54:46,469 [main] INFO  server.RaftServer (ConfUtils.java:logGet(46)) - raft.rpc.type = GRPC (default)
2024-07-20 16:54:46,469 [main] INFO  grpc.GrpcConfigKeys (ConfUtils.java:logFallback(53)) - raft.grpc.admin.host = null (fallback to raft.grpc.server.host)
2024-07-20 16:54:46,470 [main] INFO  grpc.GrpcConfigKeys (ConfUtils.java:logFallback(53)) - raft.grpc.admin.port = 15011 (fallback to raft.grpc.server.port)
2024-07-20 16:54:46,470 [main] INFO  grpc.GrpcConfigKeys (ConfUtils.java:logFallback(53)) - raft.grpc.client.host = null (fallback to raft.grpc.server.host)
2024-07-20 16:54:46,470 [main] INFO  grpc.GrpcConfigKeys (ConfUtils.java:logFallback(53)) - raft.grpc.client.port = 15011 (fallback to raft.grpc.server.port)
2024-07-20 16:54:46,470 [main] INFO  grpc.GrpcConfigKeys (ConfUtils.java:logGet(46)) - raft.grpc.server.host = null (default)
2024-07-20 16:54:46,470 [main] INFO  grpc.GrpcConfigKeys (ConfUtils.java:logGet(46)) - raft.grpc.server.port = 15011 (custom)
2024-07-20 16:54:46,470 [main] INFO  server.GrpcService (ConfUtils.java:logGet(46)) - raft.grpc.message.size.max = 4194304 (custom)
2024-07-20 16:54:46,470 [main] INFO  server.RaftServerConfigKeys (ConfUtils.java:logGet(46)) - raft.server.log.appender.buffer.byte-limit = 4194304 (custom)
2024-07-20 16:54:46,471 [main] INFO  server.GrpcService (ConfUtils.java:logGet(46)) - raft.grpc.flow.control.window = 1MB (=1048576) (default)
2024-07-20 16:54:46,471 [main] INFO  server.RaftServerConfigKeys (ConfUtils.java:logGet(46)) - raft.server.rpc.request.timeout = 3000ms (default)
2024-07-20 16:54:46,471 [main] INFO  grpc.GrpcConfigKeys (ConfUtils.java:logGet(46)) - raft.grpc.server.heartbeat.channel = true (default)
2024-07-20 16:54:46,471 [main] INFO  grpc.GrpcConfigKeys (ConfUtils.java:logGet(46)) - raft.grpc.server.async.request.thread.pool.cached = true (default)
2024-07-20 16:54:46,471 [main] INFO  grpc.GrpcConfigKeys (ConfUtils.java:logGet(46)) - raft.grpc.server.async.request.thread.pool.size = 32 (default)
2024-07-20 16:54:46,472 [main] INFO  impl.DataStreamServerImpl (ConfUtils.java:logGet(46)) - raft.datastream.type = DISABLED (default)
2024-07-20 16:54:46,473 [main] INFO  server.RaftServerConfigKeys (ConfUtils.java:logGet(46)) - raft.server.sleep.deviation.threshold = 300ms (default)
2024-07-20 16:54:46,473 [main] INFO  server.RaftServerConfigKeys (ConfUtils.java:logGet(46)) - raft.server.close.threshold = 60s (default)
2024-07-20 16:54:46,473 [main] INFO  server.RaftServerConfigKeys (ConfUtils.java:logGet(46)) - raft.server.leaderelection.leader.step-down.wait-time = 10s (default)
2024-07-20 16:54:46,473 [main] INFO  server.RaftServerConfigKeys (ConfUtils.java:logGet(46)) - raft.server.storage.dir = [/home/runner/work/ozone/ozone/hadoop-ozone/integration-test/target/test-dir/MiniOzoneClusterImpl-f7452c88-0c37-4f5d-a1f6-a5ee96fcef81/omNode-2/ratis] (custom)
2024-07-20 16:54:46,473 [main] INFO  server.RaftServerConfigKeys (ConfUtils.java:logGet(46)) - raft.server.threadpool.proxy.cached = true (default)
2024-07-20 16:54:46,474 [main] INFO  server.RaftServerConfigKeys (ConfUtils.java:logGet(46)) - raft.server.threadpool.proxy.size = 0 (default)
2024-07-20 16:54:46,486 [main] INFO  server.RaftServer (RaftServerProxy.java:addNew(101)) - omNode-2: addNew group-523986131536:[omNode-3|localhost:15015, omNode-1|localhost:15007, omNode-2|localhost:15011] returns group-523986131536:java.util.concurrent.CompletableFuture@66e22c32[Not completed]
2024-07-20 16:54:46,486 [main] INFO  om.OzoneManager (OzoneManager.java:initializeRatisServer(2168)) - OzoneManager Ratis server initialized at port 15011
2024-07-20 16:54:46,487 [main] INFO  om.OzoneManager (OzoneManager.java:getRpcServer(1228)) - Creating RPC Server
2024-07-20 16:54:46,486 [omNode-2-groupManagement] INFO  server.RaftServer$Division (RaftServerImpl.java:<init>(253)) - omNode-2: new RaftServerImpl for group-523986131536:[omNode-3|localhost:15015, omNode-1|localhost:15007, omNode-2|localhost:15011] with OzoneManagerStateMachine:uninitialized
2024-07-20 16:54:46,491 [omNode-2-groupManagement] INFO  server.RaftServerConfigKeys (ConfUtils.java:logGet(46)) - raft.server.rpc.timeout.min = 1s (custom)
2024-07-20 16:54:46,491 [omNode-2-groupManagement] INFO  server.RaftServerConfigKeys (ConfUtils.java:logGet(46)) - raft.server.rpc.timeout.max = 1200ms (custom)
2024-07-20 16:54:46,491 [omNode-2-groupManagement] INFO  server.RaftServerConfigKeys (ConfUtils.java:logGet(46)) - raft.server.rpc.sleep.time = 25ms (default)
2024-07-20 16:54:46,492 [omNode-2-groupManagement] INFO  server.RaftServerConfigKeys (ConfUtils.java:logGet(46)) - raft.server.rpc.slowness.timeout = 2s (custom)
2024-07-20 16:54:46,492 [omNode-2-groupManagement] INFO  server.RaftServerConfigKeys (ConfUtils.java:logGet(46)) - raft.server.leaderelection.leader.step-down.wait-time = 10s (default)
2024-07-20 16:54:46,492 [omNode-2-groupManagement] INFO  server.RaftServerConfigKeys (ConfUtils.java:logGet(46)) - raft.server.leaderelection.member.majority-add = false (default)
2024-07-20 16:54:46,492 [omNode-2-groupManagement] INFO  server.RaftServerConfigKeys (ConfUtils.java:logGet(46)) - raft.server.sleep.deviation.threshold = 300ms (default)
2024-07-20 16:54:46,493 [omNode-2-groupManagement] INFO  server.RaftServer$Division (ServerState.java:<init>(114)) - omNode-2@group-523986131536: ConfigurationManager, init=conf: {index: -1, cur=peers:[omNode-3|localhost:15015, omNode-1|localhost:15007, omNode-2|localhost:15011]|listeners:[], old=null}, confs=<EMPTY_MAP>
2024-07-20 16:54:46,493 [omNode-2-groupManagement] INFO  server.RaftServerConfigKeys (ConfUtils.java:logGet(46)) - raft.server.notification.no-leader.timeout = 2s (custom)
2024-07-20 16:54:46,493 [omNode-2-groupManagement] INFO  server.RaftServerConfigKeys (ConfUtils.java:logGet(46)) - raft.server.read.timeout = 10s (default)
2024-07-20 16:54:46,493 [omNode-2-groupManagement] INFO  server.RaftServerConfigKeys (ConfUtils.java:logGet(46)) - raft.server.retrycache.expirytime = 300s (custom)
2024-07-20 16:54:46,494 [omNode-2-groupManagement] INFO  server.RaftServerConfigKeys (ConfUtils.java:logGet(46)) - raft.server.retrycache.statistics.expirytime = 100ms (default)
2024-07-20 16:54:46,494 [omNode-2-groupManagement] INFO  server.RaftServerConfigKeys (ConfUtils.java:logGet(46)) - raft.server.read.option = DEFAULT (default)
2024-07-20 16:54:46,494 [omNode-2-groupManagement] INFO  server.RaftServerConfigKeys (ConfUtils.java:logGet(46)) - raft.server.read.read-after-write-consistent.write-index-cache.expiry-time = 60s (default)
2024-07-20 16:54:46,506 [omNode-2-groupManagement] INFO  server.RaftServerConfigKeys (ConfUtils.java:logGet(46)) - raft.server.rpc.request.timeout = 3000ms (default)
2024-07-20 16:54:46,506 [omNode-2-groupManagement] INFO  server.RaftServerConfigKeys (ConfUtils.java:logGet(46)) - raft.server.log.appender.install.snapshot.enabled = false (custom)
2024-07-20 16:54:46,506 [omNode-2-groupManagement] INFO  server.RaftServerConfigKeys (ConfUtils.java:logGet(46)) - raft.server.threadpool.server.cached = true (default)
2024-07-20 16:54:46,506 [omNode-2-groupManagement] INFO  server.RaftServerConfigKeys (ConfUtils.java:logGet(46)) - raft.server.threadpool.server.size = 0 (default)
2024-07-20 16:54:46,507 [omNode-2-groupManagement] INFO  server.RaftServerConfigKeys (ConfUtils.java:logGet(46)) - raft.server.threadpool.client.cached = true (default)
2024-07-20 16:54:46,507 [omNode-2-groupManagement] INFO  server.RaftServerConfigKeys (ConfUtils.java:logGet(46)) - raft.server.threadpool.client.size = 0 (default)
2024-07-20 16:54:46,964 [main] INFO  reflections.Reflections (Reflections.java:scan(219)) - Reflections took 476 ms to scan 20 urls, producing 59 keys and 6640 values
2024-07-20 16:54:46,967 [main] INFO  ipc.CallQueueManager (CallQueueManager.java:<init>(90)) - Using callQueue: class java.util.concurrent.LinkedBlockingQueue, queueCapacity: 2000, scheduler: class org.apache.hadoop.ipc.DefaultRpcScheduler, ipcBackoff: false.
2024-07-20 16:54:46,968 [main] INFO  ipc.Server (Server.java:<init>(1287)) - Listener at 127.0.0.1:15008
2024-07-20 16:54:46,969 [Socket Reader #1 for port 15008] INFO  ipc.Server (Server.java:run(1323)) - Starting Socket Reader #1 for port 15008
2024-07-20 16:54:46,995 [main] INFO  impl.MetricsSystemImpl (MetricsSystemImpl.java:init(158)) - OzoneManager metrics system started (again)
2024-07-20 16:54:47,008 [main] INFO  om.OzoneManager (OzoneManager.java:start(1650)) - OzoneManager RPC server is listening at localhost/127.0.0.1:15008
2024-07-20 16:54:47,008 [main] INFO  ratis.OzoneManagerRatisServer (OzoneManagerRatisServer.java:start(594)) - Starting OzoneManagerRatisServer omNode-2 at port 15011
2024-07-20 16:54:47,008 [omNode-2-impl-thread1] INFO  server.RaftServerConfigKeys (ConfUtils.java:logGet(46)) - raft.server.storage.free-space.min = 0MB (=0) (default)
2024-07-20 16:54:47,009 [omNode-2-impl-thread1] INFO  server.RaftServerConfigKeys (ConfUtils.java:logGet(46)) - raft.server.log.corruption.policy = EXCEPTION (default)
2024-07-20 16:54:47,009 [omNode-2-impl-thread1] INFO  server.RaftServerConfigKeys (ConfUtils.java:logGet(46)) - raft.server.storage.dir = [/home/runner/work/ozone/ozone/hadoop-ozone/integration-test/target/test-dir/MiniOzoneClusterImpl-f7452c88-0c37-4f5d-a1f6-a5ee96fcef81/omNode-2/ratis] (custom)
2024-07-20 16:54:47,009 [omNode-2-impl-thread1] INFO  storage.RaftStorageDirectory (RaftStorageDirectoryImpl.java:analyzeStorage(138)) - The storage directory /home/runner/work/ozone/ozone/hadoop-ozone/integration-test/target/test-dir/MiniOzoneClusterImpl-f7452c88-0c37-4f5d-a1f6-a5ee96fcef81/omNode-2/ratis/c9bc4cf4-3bc3-3c60-a66b-523986131536 does not exist. Creating ...
2024-07-20 16:54:47,012 [omNode-2-impl-thread1] INFO  storage.RaftStorageDirectory (RaftStorageDirectoryImpl.java:tryLock(229)) - Lock on /home/runner/work/ozone/ozone/hadoop-ozone/integration-test/target/test-dir/MiniOzoneClusterImpl-f7452c88-0c37-4f5d-a1f6-a5ee96fcef81/omNode-2/ratis/c9bc4cf4-3bc3-3c60-a66b-523986131536/in_use.lock acquired by nodename 54372@fv-az1015-711
2024-07-20 16:54:47,014 [omNode-2-impl-thread1] INFO  storage.RaftStorage (RaftStorageImpl.java:format(98)) - Storage directory /home/runner/work/ozone/ozone/hadoop-ozone/integration-test/target/test-dir/MiniOzoneClusterImpl-f7452c88-0c37-4f5d-a1f6-a5ee96fcef81/omNode-2/ratis/c9bc4cf4-3bc3-3c60-a66b-523986131536 has been successfully formatted.
2024-07-20 16:54:47,014 [omNode-2-impl-thread1] INFO  server.RaftServerConfigKeys (ConfUtils.java:logGet(46)) - raft.server.log.use.memory = false (default)
2024-07-20 16:54:47,014 [omNode-2-impl-thread1] INFO  server.RaftServerConfigKeys (ConfUtils.java:logGet(46)) - raft.server.log.purge.gap = 1000000 (custom)
2024-07-20 16:54:47,014 [omNode-2-impl-thread1] INFO  server.RaftServerConfigKeys (ConfUtils.java:logGet(46)) - raft.server.log.appender.buffer.byte-limit = 4194304 (custom)
2024-07-20 16:54:47,014 [omNode-2-impl-thread1] INFO  server.RaftServerConfigKeys (ConfUtils.java:logGet(46)) - raft.server.log.statemachine.data.read.timeout = 1000ms (default)
2024-07-20 16:54:47,015 [omNode-2-impl-thread1] INFO  server.RaftServerConfigKeys (ConfUtils.java:logGet(46)) - raft.server.log.purge.preservation.log.num = 0 (default)
2024-07-20 16:54:47,017 [omNode-2-impl-thread1] INFO  server.RaftServerConfigKeys (ConfUtils.java:logGet(46)) - raft.server.log.segment.size.max = 4194304 (custom)
2024-07-20 16:54:47,017 [omNode-2-impl-thread1] INFO  server.RaftServerConfigKeys (ConfUtils.java:logGet(46)) - raft.server.log.segment.cache.num.max = 2 (custom)
2024-07-20 16:54:47,018 [omNode-2-impl-thread1] INFO  server.RaftServerConfigKeys (ConfUtils.java:logGet(46)) - raft.server.log.segment.cache.size.max = 200MB (=209715200) (default)
2024-07-20 16:54:47,018 [omNode-2-impl-thread1] INFO  server.RaftServerConfigKeys (ConfUtils.java:logGet(46)) - raft.server.log.appender.buffer.byte-limit = 4194304 (custom)
2024-07-20 16:54:47,020 [omNode-1@group-523986131536-FollowerState] INFO  impl.FollowerState (FollowerState.java:run(144)) - omNode-1@group-523986131536-FollowerState: change to CANDIDATE, lastRpcElapsedTime:1009582259ns, electionTimeout:1005ms
2024-07-20 16:54:47,020 [omNode-1@group-523986131536-FollowerState] INFO  impl.RoleInfo (RoleInfo.java:shutdownFollowerState(119)) - omNode-1: shutdown omNode-1@group-523986131536-FollowerState
2024-07-20 16:54:47,020 [omNode-1@group-523986131536-FollowerState] INFO  server.RaftServer$Division (RaftServerImpl.java:setRole(376)) - omNode-1@group-523986131536: changes role from  FOLLOWER to CANDIDATE at term 0 for changeToCandidate
2024-07-20 16:54:47,022 [omNode-1@group-523986131536-FollowerState] INFO  server.RaftServerConfigKeys (ConfUtils.java:logGet(46)) - raft.server.leaderelection.pre-vote = true (default)
2024-07-20 16:54:47,023 [omNode-1@group-523986131536-FollowerState] INFO  impl.RoleInfo (RoleInfo.java:updateAndGet(148)) - omNode-1: start omNode-1@group-523986131536-LeaderElection1
2024-07-20 16:54:47,023 [omNode-2-impl-thread1] INFO  util.AwaitToRun (AwaitToRun.java:start(81)) - Thread[omNode-2@group-523986131536-cacheEviction-AwaitToRun,5,main] started
2024-07-20 16:54:47,023 [omNode-2-impl-thread1] INFO  segmented.SegmentedRaftLogWorker (SegmentedRaftLogWorker.java:<init>(184)) - new omNode-2@group-523986131536-SegmentedRaftLogWorker for RaftStorageImpl:Storage Directory /home/runner/work/ozone/ozone/hadoop-ozone/integration-test/target/test-dir/MiniOzoneClusterImpl-f7452c88-0c37-4f5d-a1f6-a5ee96fcef81/omNode-2/ratis/c9bc4cf4-3bc3-3c60-a66b-523986131536
2024-07-20 16:54:47,023 [omNode-2-impl-thread1] INFO  server.RaftServerConfigKeys (ConfUtils.java:logGet(46)) - raft.server.log.queue.byte-limit = 64MB (=67108864) (default)
2024-07-20 16:54:47,023 [omNode-2-impl-thread1] INFO  server.RaftServerConfigKeys (ConfUtils.java:logGet(46)) - raft.server.log.queue.element-limit = 4096 (default)
2024-07-20 16:54:47,024 [omNode-2-impl-thread1] INFO  server.RaftServerConfigKeys (ConfUtils.java:logGet(46)) - raft.server.log.segment.size.max = 4194304 (custom)
2024-07-20 16:54:47,024 [omNode-2-impl-thread1] INFO  server.RaftServerConfigKeys (ConfUtils.java:logGet(46)) - raft.server.log.preallocated.size = 4194304 (custom)
2024-07-20 16:54:47,024 [omNode-2-impl-thread1] INFO  server.RaftServerConfigKeys (ConfUtils.java:logGet(46)) - raft.server.log.force.sync.num = 128 (default)
2024-07-20 16:54:47,024 [omNode-2-impl-thread1] INFO  server.RaftServerConfigKeys (ConfUtils.java:logGet(46)) - raft.server.log.statemachine.data.sync = true (default)
2024-07-20 16:54:47,024 [omNode-2-impl-thread1] INFO  server.RaftServerConfigKeys (ConfUtils.java:logGet(46)) - raft.server.log.statemachine.data.sync.timeout = 10s (default)
2024-07-20 16:54:47,024 [omNode-2-impl-thread1] INFO  server.RaftServerConfigKeys (ConfUtils.java:logGet(46)) - raft.server.log.statemachine.data.sync.timeout.retry = -1 (default)
2024-07-20 16:54:47,025 [omNode-2-impl-thread1] INFO  server.RaftServerConfigKeys (ConfUtils.java:logGet(46)) - raft.server.log.write.buffer.size = 4194312 (custom)
2024-07-20 16:54:47,026 [omNode-2-impl-thread1] INFO  server.RaftServerConfigKeys (ConfUtils.java:logGet(46)) - raft.server.log.appender.buffer.byte-limit = 4194304 (custom)
2024-07-20 16:54:47,027 [omNode-2-impl-thread1] INFO  server.RaftServerConfigKeys (ConfUtils.java:logGet(46)) - raft.server.log.unsafe-flush.enabled = false (default)
2024-07-20 16:54:47,027 [omNode-2-impl-thread1] INFO  server.RaftServerConfigKeys (ConfUtils.java:logGet(46)) - raft.server.log.async-flush.enabled = false (default)
2024-07-20 16:54:47,027 [omNode-2-impl-thread1] INFO  server.RaftServerConfigKeys (ConfUtils.java:logGet(46)) - raft.server.log.statemachine.data.caching.enabled = false (default)
2024-07-20 16:54:47,027 [omNode-2-impl-thread1] INFO  segmented.SegmentedRaftLogWorker (SegmentedRaftLogWorker.java:lambda$new$0(135)) - omNode-2@group-523986131536-SegmentedRaftLogWorker: flushIndex: setUnconditionally 0 -> -1
2024-07-20 16:54:47,027 [omNode-2-impl-thread1] INFO  segmented.SegmentedRaftLogWorker (SegmentedRaftLogWorker.java:lambda$new$0(135)) - omNode-2@group-523986131536-SegmentedRaftLogWorker: safeCacheEvictIndex: setUnconditionally 0 -> -1
2024-07-20 16:54:47,030 [omNode-1@group-523986131536-LeaderElection1] INFO  impl.LeaderElection (LeaderElection.java:askForVotes(321)) - omNode-1@group-523986131536-LeaderElection1 PRE_VOTE round 0: submit vote requests at term 0 for conf: {index: -1, cur=peers:[omNode-3|localhost:15015, omNode-1|localhost:15007, omNode-2|localhost:15011]|listeners:[], old=null}
2024-07-20 16:54:47,033 [omNode-2-impl-thread1] INFO  server.RaftServer$Division (RaftServerImpl.java:start(389)) - omNode-2@group-523986131536: start as a follower, conf=conf: {index: -1, cur=peers:[omNode-3|localhost:15015, omNode-1|localhost:15007, omNode-2|localhost:15011]|listeners:[], old=null}
2024-07-20 16:54:47,034 [omNode-2-impl-thread1] INFO  server.RaftServer$Division (RaftServerImpl.java:setRole(376)) - omNode-2@group-523986131536: changes role from      null to FOLLOWER at term 0 for startAsFollower
2024-07-20 16:54:47,034 [omNode-2-impl-thread1] INFO  impl.RoleInfo (RoleInfo.java:updateAndGet(148)) - omNode-2: start omNode-2@group-523986131536-FollowerState
2024-07-20 16:54:47,035 [omNode-2-impl-thread1] INFO  util.JmxRegister (JmxRegister.java:tryRegister(44)) - Successfully registered JMX Bean with object name Ratis:service=RaftServer,group=group-523986131536,id=omNode-2
2024-07-20 16:54:47,036 [omNode-2-impl-thread1] INFO  util.JmxRegister (JmxRegister.java:register(58)) - register mxBean class org.apache.ratis.server.impl.RaftServerJmxAdapter as Ratis:service=RaftServer,group=group-523986131536,id=omNode-2
2024-07-20 16:54:47,036 [omNode-2-impl-thread1] INFO  server.RaftServerConfigKeys (ConfUtils.java:logGet(46)) - raft.server.snapshot.trigger-when-stop.enabled = true (default)
2024-07-20 16:54:47,037 [omNode-2-impl-thread1] INFO  server.RaftServerConfigKeys (ConfUtils.java:logGet(46)) - raft.server.snapshot.trigger-when-remove.enabled = true (default)
2024-07-20 16:54:47,037 [omNode-2-impl-thread1] INFO  server.RaftServerConfigKeys (ConfUtils.java:logGet(46)) - raft.server.snapshot.auto.trigger.enabled = true (custom)
2024-07-20 16:54:47,038 [omNode-2-impl-thread1] INFO  server.RaftServerConfigKeys (ConfUtils.java:logGet(46)) - raft.server.snapshot.auto.trigger.threshold = 400000 (default)
2024-07-20 16:54:47,038 [omNode-2-impl-thread1] INFO  server.RaftServerConfigKeys (ConfUtils.java:logGet(46)) - raft.server.snapshot.retention.file.num = -1 (default)
2024-07-20 16:54:47,038 [omNode-2-impl-thread1] INFO  server.RaftServerConfigKeys (ConfUtils.java:logGet(46)) - raft.server.log.purge.upto.snapshot.index = true (custom)
2024-07-20 16:54:47,040 [omNode-2@group-523986131536-FollowerState] INFO  server.RaftServerConfigKeys (ConfUtils.java:logFallback(53)) - raft.server.rpc.first-election.timeout.min = 1s (fallback to raft.server.rpc.timeout.min)
2024-07-20 16:54:47,041 [omNode-2@group-523986131536-FollowerState] INFO  server.RaftServerConfigKeys (ConfUtils.java:logFallback(53)) - raft.server.rpc.first-election.timeout.max = 1200ms (fallback to raft.server.rpc.timeout.max)
2024-07-20 16:54:47,041 [main] INFO  server.RaftServer (RaftServerProxy.java:startImpl(408)) - omNode-2: start RPC server
2024-07-20 16:54:47,042 [main] INFO  server.GrpcService (GrpcService.java:startImpl(302)) - omNode-2: GrpcService started, listening on 15011
2024-07-20 16:54:47,043 [main] INFO  om.OzoneManager (OzoneManager.java:start(1666)) - Version File has different layout version (6) than OM DB (null). That is expected if this OM has never been finalized to a newer layout version.
2024-07-20 16:54:47,044 [JvmPauseMonitor2] INFO  util.JvmPauseMonitor (JvmPauseMonitor.java:run(146)) - JvmPauseMonitor-omNode-2: Started
2024-07-20 16:54:47,048 [main] INFO  client.ScmTopologyClient (ScmTopologyClient.java:start(72)) - Initial network topology fetched from SCM: /.
2024-07-20 16:54:47,049 [main] INFO  net.NodeSchemaLoader (NodeSchemaLoader.java:loadSchemaFromFile(129)) - Loading schema from [jar:file:/home/runner/work/ozone/ozone/hadoop-hdds/common/target/hdds-common-1.5.0-SNAPSHOT.jar!/network-topology-default.xml]
2024-07-20 16:54:47,049 [main] INFO  net.NodeSchemaLoader (NodeSchemaLoader.java:loadSchema(176)) - Loading network topology layer schema file
2024-07-20 16:54:47,059 [main] INFO  http.BaseHttpServer (BaseHttpServer.java:newHttpServer2BuilderForOzone(223)) - Starting Web-server for ozoneManager at: http://0.0.0.0:15009
2024-07-20 16:54:47,060 [main] INFO  http.BaseHttpServer (BaseHttpServer.java:<init>(110)) - Hadoop Security Enabled: false Ozone Security Enabled: false Ozone HTTP Security Enabled: false 
2024-07-20 16:54:47,061 [main] WARN  server.AuthenticationFilter (AuthenticationFilter.java:constructSecretProvider(240)) - Unable to initialize FileSignerSecretProvider, falling back to use random secrets. Reason: Could not read signature secret file: /home/runner/hadoop-http-auth-signature-secret
2024-07-20 16:54:47,063 [omNode-1@group-523986131536-LeaderElection1-1] INFO  server.GrpcServerProtocolClient (GrpcServerProtocolClient.java:<init>(65)) - Build channel for omNode-3|localhost:15015
2024-07-20 16:54:47,064 [omNode-1@group-523986131536-LeaderElection1] INFO  server.RaftServerConfigKeys (ConfUtils.java:logFallback(53)) - raft.server.rpc.first-election.timeout.min = 1s (fallback to raft.server.rpc.timeout.min)
2024-07-20 16:54:47,064 [omNode-1@group-523986131536-LeaderElection1] INFO  server.RaftServerConfigKeys (ConfUtils.java:logFallback(53)) - raft.server.rpc.first-election.timeout.max = 1200ms (fallback to raft.server.rpc.timeout.max)
2024-07-20 16:54:47,064 [omNode-1@group-523986131536-LeaderElection1-2] INFO  server.GrpcServerProtocolClient (GrpcServerProtocolClient.java:<init>(65)) - Build channel for omNode-2|localhost:15011
2024-07-20 16:54:47,066 [main] INFO  http.HttpRequestLog (HttpRequestLog.java:getRequestLog(86)) - Http request log for http.requests.ozoneManager is not defined
2024-07-20 16:54:47,068 [main] INFO  http.HttpServer2 (HttpServer2.java:addGlobalFilter(1035)) - Added global filter 'safety' (class=org.apache.hadoop.hdds.server.http.HttpServer2$QuotingInputFilter)
2024-07-20 16:54:47,069 [main] INFO  http.HttpServer2 (HttpServer2.java:addFilter(1011)) - Added filter static_user_filter (class=org.apache.hadoop.http.lib.StaticUserWebFilter$StaticUserFilter) to context ozoneManager
2024-07-20 16:54:47,069 [main] INFO  http.HttpServer2 (HttpServer2.java:addFilter(1019)) - Added filter static_user_filter (class=org.apache.hadoop.http.lib.StaticUserWebFilter$StaticUserFilter) to context logs
2024-07-20 16:54:47,069 [main] INFO  http.HttpServer2 (HttpServer2.java:addFilter(1019)) - Added filter static_user_filter (class=org.apache.hadoop.http.lib.StaticUserWebFilter$StaticUserFilter) to context static
2024-07-20 16:54:47,070 [main] INFO  http.BaseHttpServer (BaseHttpServer.java:<init>(189)) - HTTP server of ozoneManager uses base directory /home/runner/work/ozone/ozone/hadoop-ozone/integration-test/target/test-dir/MiniOzoneClusterImpl-f7452c88-0c37-4f5d-a1f6-a5ee96fcef81/omNode-2/webserver
2024-07-20 16:54:47,070 [main] INFO  http.HttpServer2 (HttpServer2.java:bindListener(1235)) - Jetty bound to port 15009
2024-07-20 16:54:47,071 [main] INFO  server.Server (Server.java:doStart(375)) - jetty-9.4.55.v20240627; built: 2024-06-27T15:05:37.765Z; git: 70015831e5195ba74da6383c4ab7c90c56bb08af; jvm 17.0.11+9
2024-07-20 16:54:47,074 [main] INFO  server.session (DefaultSessionIdManager.java:doStart(334)) - DefaultSessionIdManager workerName=node0
2024-07-20 16:54:47,074 [main] INFO  server.session (DefaultSessionIdManager.java:doStart(339)) - No SessionScavenger set, using defaults
2024-07-20 16:54:47,075 [main] INFO  server.session (HouseKeeper.java:startScavenging(132)) - node0 Scavenging every 600000ms
2024-07-20 16:54:47,077 [main] INFO  handler.ContextHandler (ContextHandler.java:doStart(921)) - Started o.e.j.s.ServletContextHandler@7370c288{logs,/logs,file:///home/runner/work/ozone/ozone/hadoop-ozone/integration-test/target/log,AVAILABLE}
2024-07-20 16:54:47,077 [main] INFO  handler.ContextHandler (ContextHandler.java:doStart(921)) - Started o.e.j.s.ServletContextHandler@661d8946{static,/static,file:///home/runner/work/ozone/ozone/hadoop-ozone/integration-test/target/test-classes/webapps/static,AVAILABLE}
2024-07-20 16:54:47,087 [main] INFO  handler.ContextHandler (ContextHandler.java:doStart(921)) - Started o.e.j.w.WebAppContext@4f9e5d0e{ozoneManager,/,file:///home/runner/work/ozone/ozone/hadoop-ozone/integration-test/target/test-classes/webapps/ozoneManager/,AVAILABLE}{file:/home/runner/work/ozone/ozone/hadoop-ozone/integration-test/target/test-classes/webapps/ozoneManager}
2024-07-20 16:54:47,088 [main] INFO  server.AbstractConnector (AbstractConnector.java:doStart(333)) - Started ServerConnector@6bb4568{HTTP/1.1, (http/1.1)}{0.0.0.0:15009}
2024-07-20 16:54:47,088 [main] INFO  server.Server (Server.java:doStart(415)) - Started @8059ms
2024-07-20 16:54:47,088 [main] WARN  impl.MetricsSystemImpl (MetricsSystemImpl.java:register(279)) - Sink prometheus already exists!
2024-07-20 16:54:47,090 [main] INFO  http.BaseHttpServer (BaseHttpServer.java:updateConnectorAddress(354)) - HTTP server of ozoneManager listening at http://0.0.0.0:15009
2024-07-20 16:54:47,090 [IPC Server Responder] INFO  ipc.Server (Server.java:run(1562)) - IPC Server Responder: starting
2024-07-20 16:54:47,091 [IPC Server listener on 15008] INFO  ipc.Server (Server.java:run(1402)) - IPC Server listener on 15008: starting
2024-07-20 16:54:47,102 [main] INFO  om.OzoneManager (OzoneManager.java:startTrashEmptier(2121)) - Trash Interval set to 0. Files deleted won't move to trash
2024-07-20 16:54:47,102 [main] INFO  ozone.MiniOzoneHAClusterImpl (MiniOzoneHAClusterImpl.java:createOMService(517)) - Started OzoneManager omNode-2 RPC server at localhost/127.0.0.1:15008
2024-07-20 16:54:47,105 [main] INFO  ha.OMHANodeDetails (OMHANodeDetails.java:loadOMHAConfig(121)) - ServiceID for OzoneManager is om-service-test1
2024-07-20 16:54:47,106 [main] INFO  ha.OMHANodeDetails (OMHANodeDetails.java:loadOMHAConfig(201)) - Found matching OM address with OMServiceId: om-service-test1, OMNodeId: omNode-3, RPC Address: localhost:15012 and Ratis port: 15015
2024-07-20 16:54:47,106 [main] INFO  ha.OMHANodeDetails (ConfUtils.java:setNodeSpecificConfigs(97)) - Setting configuration key ozone.om.http-address with value of key ozone.om.http-address.om-service-test1.omNode-3: 127.0.0.1:15013
2024-07-20 16:54:47,106 [main] INFO  ha.OMHANodeDetails (ConfUtils.java:setNodeSpecificConfigs(97)) - Setting configuration key ozone.om.https-address with value of key ozone.om.https-address.om-service-test1.omNode-3: 127.0.0.1:15014
2024-07-20 16:54:47,106 [main] INFO  ha.OMHANodeDetails (ConfUtils.java:setNodeSpecificConfigs(97)) - Setting configuration key ozone.om.address with value of key ozone.om.address.om-service-test1.omNode-3: 127.0.0.1:15012
2024-07-20 16:54:47,106 [main] WARN  server.ServerUtils (ServerUtils.java:getDBPath(299)) - ozone.om.db.dirs is not configured. We recommend adding this setting. Falling back to ozone.metadata.dirs instead.
2024-07-20 16:54:47,109 [main] INFO  proxy.SCMBlockLocationFailoverProxyProvider (SCMBlockLocationFailoverProxyProvider.java:<init>(115)) - Created block location fail-over proxy with 1 nodes: [nodeId=scmNodeId,nodeAddress=/0.0.0.0:15001]
2024-07-20 16:54:47,119 | INFO  | SCMAudit | user=runner | ip=127.0.0.1 | op=GET_SCM_INFO null | ret=SUCCESS |  
OM initialization succeeded.Current cluster id for sd=/home/runner/work/ozone/ozone/hadoop-ozone/integration-test/target/test-dir/MiniOzoneClusterImpl-f7452c88-0c37-4f5d-a1f6-a5ee96fcef81/omNode-3/om;cid=f7452c88-0c37-4f5d-a1f6-a5ee96fcef81;layoutVersion=6
2024-07-20 16:54:47,159 [main] INFO  ha.OMHANodeDetails (OMHANodeDetails.java:loadOMHAConfig(121)) - ServiceID for OzoneManager is om-service-test1
2024-07-20 16:54:47,160 [main] INFO  ha.OMHANodeDetails (OMHANodeDetails.java:loadOMHAConfig(201)) - Found matching OM address with OMServiceId: om-service-test1, OMNodeId: omNode-3, RPC Address: localhost:15012 and Ratis port: 15015
2024-07-20 16:54:47,160 [main] INFO  ha.OMHANodeDetails (ConfUtils.java:setNodeSpecificConfigs(97)) - Setting configuration key ozone.om.http-address with value of key ozone.om.http-address.om-service-test1.omNode-3: 127.0.0.1:15013
2024-07-20 16:54:47,160 [main] INFO  ha.OMHANodeDetails (ConfUtils.java:setNodeSpecificConfigs(97)) - Setting configuration key ozone.om.https-address with value of key ozone.om.https-address.om-service-test1.omNode-3: 127.0.0.1:15014
2024-07-20 16:54:47,160 [main] INFO  ha.OMHANodeDetails (ConfUtils.java:setNodeSpecificConfigs(97)) - Setting configuration key ozone.om.address with value of key ozone.om.address.om-service-test1.omNode-3: 127.0.0.1:15012
2024-07-20 16:54:47,160 [main] WARN  server.ServerUtils (ServerUtils.java:getDBPath(299)) - ozone.om.db.dirs is not configured. We recommend adding this setting. Falling back to ozone.metadata.dirs instead.
2024-07-20 16:54:47,163 [main] INFO  upgrade.AbstractLayoutVersionManager (AbstractLayoutVersionManager.java:init(83)) - Initializing Layout version manager with metadata layout = QUOTA (version = 6), software layout = QUOTA (version = 6)
2024-07-20 16:54:47,219 [main] INFO  reflections.Reflections (Reflections.java:scan(219)) - Reflections took 55 ms to scan 2 urls, producing 188 keys and 546 values
2024-07-20 16:54:47,220 [main] INFO  upgrade.OMLayoutVersionManager (OMLayoutVersionManager.java:lambda$0(113)) - Skipping Upgrade Action QuotaRepairUpgradeAction since it has been finalized.
2024-07-20 16:54:47,220 [main] INFO  upgrade.OMLayoutVersionManager (OMLayoutVersionManager.java:lambda$0(113)) - Skipping Upgrade Action MockOmUpgradeAction since it has been finalized.
2024-07-20 16:54:47,220 [main] WARN  server.ServerUtils (ServerUtils.java:getDBPath(299)) - ozone.om.db.dirs is not configured. We recommend adding this setting. Falling back to ozone.metadata.dirs instead.
2024-07-20 16:54:47,222 [main] INFO  proxy.SCMBlockLocationFailoverProxyProvider (SCMBlockLocationFailoverProxyProvider.java:<init>(115)) - Created block location fail-over proxy with 1 nodes: [nodeId=scmNodeId,nodeAddress=/0.0.0.0:15001]
2024-07-20 16:54:47,226 [main] INFO  proxy.SCMBlockLocationFailoverProxyProvider (SCMBlockLocationFailoverProxyProvider.java:<init>(115)) - Created block location fail-over proxy with 1 nodes: [nodeId=scmNodeId,nodeAddress=/0.0.0.0:15001]
2024-07-20 16:54:47,234 | INFO  | SCMAudit | user=runner | ip=127.0.0.1 | op=GET_SCM_INFO null | ret=SUCCESS |  
2024-07-20 16:54:47,239 [main] INFO  om.OzoneManager (OzoneManager.java:<init>(678)) - OM start with adminUsers: [runner]
2024-07-20 16:54:47,240 [main] WARN  server.ServerUtils (ServerUtils.java:getDBPath(299)) - ozone.om.db.dirs is not configured. We recommend adding this setting. Falling back to ozone.metadata.dirs instead.
2024-07-20 16:54:47,241 [main] INFO  helpers.OmKeyInfo (OmKeyInfo.java:getCodec(72)) - OmKeyInfo.getCodec ignorePipeline = true
2024-07-20 16:54:47,248 [omNode-1@group-523986131536-LeaderElection1] INFO  impl.LeaderElection (LogUtils.java:infoOrTrace(136)) - omNode-1@group-523986131536-LeaderElection1 got exception when requesting votes: java.util.concurrent.ExecutionException: org.apache.ratis.thirdparty.io.grpc.StatusRuntimeException: UNAVAILABLE: io exception
2024-07-20 16:54:47,352 [grpc-default-executor-1] INFO  server.RaftServer$Division (RaftServerImpl.java:requestVote(1416)) - omNode-2@group-523986131536: receive requestVote(PRE_VOTE, omNode-1, group-523986131536, 0, (t:0, i:~))
2024-07-20 16:54:47,354 [grpc-default-executor-1] INFO  impl.VoteContext (VoteContext.java:log(49)) - omNode-2@group-523986131536-FOLLOWER: accept PRE_VOTE from omNode-1: our priority 0 <= candidate's priority 0
2024-07-20 16:54:47,362 [grpc-default-executor-1] INFO  server.RaftServer$Division (RaftServerImpl.java:requestVote(1449)) - omNode-2@group-523986131536 replies to PRE_VOTE vote request: omNode-1<-omNode-2#0:OK-t0. Peer's state: omNode-2@group-523986131536:t0, leader=null, voted=, raftlog=Memoized:omNode-2@group-523986131536-SegmentedRaftLog:OPENED:c-1:lastnull, conf=conf: {index: -1, cur=peers:[omNode-3|localhost:15015, omNode-1|localhost:15007, omNode-2|localhost:15011]|listeners:[], old=null}
2024-07-20 16:54:47,375 [omNode-1@group-523986131536-LeaderElection1] INFO  impl.LeaderElection (LeaderElection.java:logAndReturn(89)) - omNode-1@group-523986131536-LeaderElection1: PRE_VOTE PASSED received 1 response(s) and 1 exception(s):
2024-07-20 16:54:47,375 [omNode-1@group-523986131536-LeaderElection1] INFO  impl.LeaderElection (LeaderElection.java:logAndReturn(93)) -   Response 0: omNode-1<-omNode-2#0:OK-t0
2024-07-20 16:54:47,375 [omNode-1@group-523986131536-LeaderElection1] INFO  impl.LeaderElection (LogUtils.java:infoOrTrace(136)) -   Exception 1: java.util.concurrent.ExecutionException: org.apache.ratis.thirdparty.io.grpc.StatusRuntimeException: UNAVAILABLE: io exception
2024-07-20 16:54:47,376 [omNode-1@group-523986131536-LeaderElection1] INFO  impl.LeaderElection (LeaderElection.java:askForVotes(323)) - omNode-1@group-523986131536-LeaderElection1 PRE_VOTE round 0: result PASSED
2024-07-20 16:54:47,378 [omNode-1@group-523986131536-LeaderElection1] INFO  impl.LeaderElection (LeaderElection.java:askForVotes(321)) - omNode-1@group-523986131536-LeaderElection1 ELECTION round 0: submit vote requests at term 1 for conf: {index: -1, cur=peers:[omNode-3|localhost:15015, omNode-1|localhost:15007, omNode-2|localhost:15011]|listeners:[], old=null}
2024-07-20 16:54:47,390 [omNode-1@group-523986131536-LeaderElection1] INFO  server.RaftServerConfigKeys (ConfUtils.java:logFallback(53)) - raft.server.rpc.first-election.timeout.min = 1s (fallback to raft.server.rpc.timeout.min)
2024-07-20 16:54:47,390 [omNode-1@group-523986131536-LeaderElection1] INFO  server.RaftServerConfigKeys (ConfUtils.java:logFallback(53)) - raft.server.rpc.first-election.timeout.max = 1200ms (fallback to raft.server.rpc.timeout.max)
2024-07-20 16:54:47,391 [omNode-1@group-523986131536-LeaderElection1] INFO  impl.LeaderElection (LogUtils.java:infoOrTrace(136)) - omNode-1@group-523986131536-LeaderElection1 got exception when requesting votes: java.util.concurrent.ExecutionException: org.apache.ratis.thirdparty.io.grpc.StatusRuntimeException: UNAVAILABLE: io exception
2024-07-20 16:54:47,403 [grpc-default-executor-1] INFO  server.RaftServer$Division (RaftServerImpl.java:requestVote(1416)) - omNode-2@group-523986131536: receive requestVote(ELECTION, omNode-1, group-523986131536, 1, (t:0, i:~))
2024-07-20 16:54:47,403 [grpc-default-executor-1] INFO  impl.VoteContext (VoteContext.java:log(49)) - omNode-2@group-523986131536-FOLLOWER: accept ELECTION from omNode-1: our priority 0 <= candidate's priority 0
2024-07-20 16:54:47,404 [grpc-default-executor-1] INFO  server.RaftServer$Division (RaftServerImpl.java:setRole(376)) - omNode-2@group-523986131536: changes role from  FOLLOWER to FOLLOWER at term 1 for candidate:omNode-1
2024-07-20 16:54:47,404 [grpc-default-executor-1] INFO  impl.RoleInfo (RoleInfo.java:shutdownFollowerState(119)) - omNode-2: shutdown omNode-2@group-523986131536-FollowerState
2024-07-20 16:54:47,404 [grpc-default-executor-1] INFO  impl.RoleInfo (RoleInfo.java:updateAndGet(148)) - omNode-2: start omNode-2@group-523986131536-FollowerState
2024-07-20 16:54:47,405 [omNode-2@group-523986131536-FollowerState] INFO  impl.FollowerState (FollowerState.java:run(153)) - omNode-2@group-523986131536-FollowerState was interrupted
2024-07-20 16:54:47,405 [grpc-default-executor-1] INFO  server.RaftServer$Division (RaftServerImpl.java:setFirstElection(549)) - omNode-2@group-523986131536: set firstElectionSinceStartup to false for candidate:omNode-1
2024-07-20 16:54:47,409 [grpc-default-executor-1] INFO  server.RaftServer$Division (RaftServerImpl.java:requestVote(1449)) - omNode-2@group-523986131536 replies to ELECTION vote request: omNode-1<-omNode-2#0:OK-t1. Peer's state: omNode-2@group-523986131536:t1, leader=null, voted=omNode-1, raftlog=Memoized:omNode-2@group-523986131536-SegmentedRaftLog:OPENED:c-1:lastnull, conf=conf: {index: -1, cur=peers:[omNode-3|localhost:15015, omNode-1|localhost:15007, omNode-2|localhost:15011]|listeners:[], old=null}
2024-07-20 16:54:47,411 [omNode-1@group-523986131536-LeaderElection1] INFO  impl.LeaderElection (LeaderElection.java:logAndReturn(89)) - omNode-1@group-523986131536-LeaderElection1: ELECTION PASSED received 1 response(s) and 1 exception(s):
2024-07-20 16:54:47,411 [omNode-1@group-523986131536-LeaderElection1] INFO  impl.LeaderElection (LeaderElection.java:logAndReturn(93)) -   Response 0: omNode-1<-omNode-2#0:OK-t1
2024-07-20 16:54:47,411 [omNode-1@group-523986131536-LeaderElection1] INFO  impl.LeaderElection (LogUtils.java:infoOrTrace(136)) -   Exception 1: java.util.concurrent.ExecutionException: org.apache.ratis.thirdparty.io.grpc.StatusRuntimeException: UNAVAILABLE: io exception
2024-07-20 16:54:47,411 [omNode-1@group-523986131536-LeaderElection1] INFO  impl.LeaderElection (LeaderElection.java:askForVotes(323)) - omNode-1@group-523986131536-LeaderElection1 ELECTION round 0: result PASSED
2024-07-20 16:54:47,411 [omNode-1@group-523986131536-LeaderElection1] INFO  impl.RoleInfo (RoleInfo.java:shutdownLeaderElection(139)) - omNode-1: shutdown omNode-1@group-523986131536-LeaderElection1
2024-07-20 16:54:47,412 [omNode-1@group-523986131536-LeaderElection1] INFO  server.RaftServer$Division (RaftServerImpl.java:setRole(376)) - omNode-1@group-523986131536: changes role from CANDIDATE to LEADER at term 1 for changeToLeader
2024-07-20 16:54:47,417 [omNode-1@group-523986131536-LeaderElection1] INFO  server.RaftServerConfigKeys (ConfUtils.java:logGet(46)) - raft.server.staging.catchup.gap = 1000 (default)
2024-07-20 16:54:47,423 [omNode-1@group-523986131536-LeaderElection1] INFO  server.RaftServerConfigKeys (ConfUtils.java:logGet(46)) - raft.server.write.element-limit = 4096 (default)
2024-07-20 16:54:47,424 [omNode-1@group-523986131536-LeaderElection1] INFO  server.RaftServerConfigKeys (ConfUtils.java:logGet(46)) - raft.server.write.byte-limit = 64MB (=67108864) (default)
2024-07-20 16:54:47,437 [omNode-1@group-523986131536-LeaderElection1] INFO  server.RaftServerConfigKeys (ConfUtils.java:logGet(46)) - raft.server.watch.timeout = 10s (default)
2024-07-20 16:54:47,437 [omNode-1@group-523986131536-LeaderElection1] INFO  server.RaftServerConfigKeys (ConfUtils.java:logGet(46)) - raft.server.watch.timeout.denomination = 1s (default)
2024-07-20 16:54:47,438 [omNode-1@group-523986131536-LeaderElection1] INFO  server.RaftServerConfigKeys (ConfUtils.java:logGet(46)) - raft.server.watch.element-limit = 65536 (default)
2024-07-20 16:54:47,443 [omNode-1@group-523986131536-LeaderElection1] INFO  server.RaftServerConfigKeys (ConfUtils.java:logGet(46)) - raft.server.read.leader.lease.enabled = false (default)
2024-07-20 16:54:47,451 [omNode-1@group-523986131536-LeaderElection1] INFO  server.RaftServerConfigKeys (ConfUtils.java:logGet(46)) - raft.server.read.leader.lease.timeout.ratio = 0.9 (default)
2024-07-20 16:54:47,451 [omNode-1@group-523986131536-LeaderElection1] INFO  server.RaftServerConfigKeys (ConfUtils.java:logGet(46)) - raft.server.rpc.timeout.min = 1s (custom)
2024-07-20 16:54:47,452 [omNode-1@group-523986131536-LeaderElection1] INFO  server.RaftServerConfigKeys (ConfUtils.java:logGet(46)) - raft.server.log.log-metadata.enabled = true (default)
2024-07-20 16:54:47,452 [omNode-1@group-523986131536-LeaderElection1] INFO  server.RaftServerConfigKeys (ConfUtils.java:logGet(46)) - raft.server.write.element-limit = 4096 (default)
2024-07-20 16:54:47,453 [omNode-1@group-523986131536-LeaderElection1] INFO  server.RaftServerConfigKeys (ConfUtils.java:logGet(46)) - raft.server.write.follower.gap.ratio.max = -1.0 (default)
2024-07-20 16:54:47,465 [omNode-1@group-523986131536-LeaderElection1] INFO  server.RaftServerConfigKeys (ConfUtils.java:logGet(46)) - raft.server.log.appender.snapshot.chunk.size.max = 16MB (=16777216) (default)
2024-07-20 16:54:47,465 [omNode-1@group-523986131536-LeaderElection1] INFO  server.RaftServerConfigKeys (ConfUtils.java:logGet(46)) - raft.server.log.appender.buffer.byte-limit = 4194304 (custom)
2024-07-20 16:54:47,465 [omNode-1@group-523986131536-LeaderElection1] INFO  server.RaftServerConfigKeys (ConfUtils.java:logGet(46)) - raft.server.log.appender.buffer.element-limit = 1024 (custom)
2024-07-20 16:54:47,467 [omNode-1@group-523986131536-LeaderElection1] INFO  server.RaftServerConfigKeys (ConfUtils.java:logGet(46)) - raft.server.log.appender.wait-time.min = 0ms (custom)
2024-07-20 16:54:47,472 [omNode-1@group-523986131536-LeaderElection1] INFO  grpc.GrpcConfigKeys (ConfUtils.java:logGet(46)) - raft.grpc.server.leader.outstanding.appends.max = 8 (default)
2024-07-20 16:54:47,473 [omNode-1@group-523986131536-LeaderElection1] INFO  server.RaftServerConfigKeys (ConfUtils.java:logGet(46)) - raft.server.rpc.request.timeout = 3000ms (default)
2024-07-20 16:54:47,473 [omNode-1@group-523986131536-LeaderElection1] INFO  grpc.GrpcConfigKeys (ConfUtils.java:logGet(46)) - raft.grpc.server.install_snapshot.request.element-limit = 8 (default)
2024-07-20 16:54:47,473 [omNode-1@group-523986131536-LeaderElection1] INFO  grpc.GrpcConfigKeys (ConfUtils.java:logGet(46)) - raft.grpc.server.install_snapshot.request.timeout = 3000ms (default)
2024-07-20 16:54:47,473 [omNode-1@group-523986131536-LeaderElection1] INFO  grpc.GrpcConfigKeys (ConfUtils.java:logGet(46)) - raft.grpc.server.log-message.batch.duration = 5s (default)
2024-07-20 16:54:47,473 [omNode-1@group-523986131536-LeaderElection1] INFO  server.RaftServerConfigKeys (ConfUtils.java:logGet(46)) - raft.server.log.appender.install.snapshot.enabled = false (custom)
2024-07-20 16:54:47,474 [omNode-1@group-523986131536-LeaderElection1] INFO  grpc.GrpcConfigKeys (ConfUtils.java:logGet(46)) - raft.grpc.server.heartbeat.channel = true (default)
2024-07-20 16:54:47,485 [omNode-1@group-523986131536-LeaderElection1] INFO  server.RaftServerConfigKeys (ConfUtils.java:logGet(46)) - raft.server.log.appender.snapshot.chunk.size.max = 16MB (=16777216) (default)
2024-07-20 16:54:47,486 [omNode-1@group-523986131536-LeaderElection1] INFO  server.RaftServerConfigKeys (ConfUtils.java:logGet(46)) - raft.server.log.appender.buffer.byte-limit = 4194304 (custom)
2024-07-20 16:54:47,486 [omNode-1@group-523986131536-LeaderElection1] INFO  server.RaftServerConfigKeys (ConfUtils.java:logGet(46)) - raft.server.log.appender.buffer.element-limit = 1024 (custom)
2024-07-20 16:54:47,486 [omNode-1@group-523986131536-LeaderElection1] INFO  server.RaftServerConfigKeys (ConfUtils.java:logGet(46)) - raft.server.log.appender.wait-time.min = 0ms (custom)
2024-07-20 16:54:47,486 [omNode-1@group-523986131536-LeaderElection1] INFO  grpc.GrpcConfigKeys (ConfUtils.java:logGet(46)) - raft.grpc.server.leader.outstanding.appends.max = 8 (default)
2024-07-20 16:54:47,486 [omNode-1@group-523986131536-LeaderElection1] INFO  server.RaftServerConfigKeys (ConfUtils.java:logGet(46)) - raft.server.rpc.request.timeout = 3000ms (default)
2024-07-20 16:54:47,486 [omNode-1@group-523986131536-LeaderElection1] INFO  grpc.GrpcConfigKeys (ConfUtils.java:logGet(46)) - raft.grpc.server.install_snapshot.request.element-limit = 8 (default)
2024-07-20 16:54:47,486 [omNode-1@group-523986131536-LeaderElection1] INFO  grpc.GrpcConfigKeys (ConfUtils.java:logGet(46)) - raft.grpc.server.install_snapshot.request.timeout = 3000ms (default)
2024-07-20 16:54:47,486 [omNode-1@group-523986131536-LeaderElection1] INFO  grpc.GrpcConfigKeys (ConfUtils.java:logGet(46)) - raft.grpc.server.log-message.batch.duration = 5s (default)
2024-07-20 16:54:47,486 [omNode-1@group-523986131536-LeaderElection1] INFO  server.RaftServerConfigKeys (ConfUtils.java:logGet(46)) - raft.server.log.appender.install.snapshot.enabled = false (custom)
2024-07-20 16:54:47,486 [omNode-1@group-523986131536-LeaderElection1] INFO  grpc.GrpcConfigKeys (ConfUtils.java:logGet(46)) - raft.grpc.server.heartbeat.channel = true (default)
2024-07-20 16:54:47,488 [omNode-1@group-523986131536-LeaderElection1] INFO  impl.RoleInfo (RoleInfo.java:updateAndGet(148)) - omNode-1: start omNode-1@group-523986131536-LeaderStateImpl
2024-07-20 16:54:47,488 [omNode-1@group-523986131536-LeaderElection1] INFO  server.RaftServer$Division (RaftServerImpl.java:setFirstElection(549)) - omNode-1@group-523986131536: set firstElectionSinceStartup to false for becomeLeader
2024-07-20 16:54:47,492 [omNode-1@group-523986131536-LeaderElection1] INFO  server.RaftServer$Division (ServerState.java:setLeader(272)) - omNode-1@group-523986131536: change Leader from null to omNode-1 at term 1 for becomeLeader, leader elected after 2326ms
2024-07-20 16:54:47,513 [omNode-1@group-523986131536-LeaderElection1] INFO  segmented.SegmentedRaftLogWorker (SegmentedRaftLogWorker.java:startLogSegment(433)) - omNode-1@group-523986131536-SegmentedRaftLogWorker: Starting segment from index:0
2024-07-20 16:54:47,524 [omNode-1@group-523986131536-LeaderElection1] INFO  server.RaftServer$Division (ServerState.java:setRaftConf(386)) - omNode-1@group-523986131536: set configuration conf: {index: 0, cur=peers:[omNode-3|localhost:15015, omNode-1|localhost:15007, omNode-2|localhost:15011]|listeners:[], old=null}
2024-07-20 16:54:47,540 [omNode-1@group-523986131536-SegmentedRaftLogWorker] INFO  segmented.BufferedWriteChannel (BufferedWriteChannel.java:open(61)) - open log_inprogress_0 at position 0
2024-07-20 16:54:47,551 [grpc-default-executor-1] WARN  server.GrpcLogAppender (LogUtils.java:warn(121)) - omNode-1@group-523986131536->omNode-3-AppendLogResponseHandler: Failed appendEntries: org.apache.ratis.thirdparty.io.grpc.StatusRuntimeException: UNAVAILABLE: io exception
2024-07-20 16:54:47,560 [omNode-1@group-523986131536-SegmentedRaftLogWorker] INFO  segmented.SegmentedRaftLogWorker (SegmentedRaftLogWorker.java:execute(637)) - omNode-1@group-523986131536-SegmentedRaftLogWorker: created new log segment /home/runner/work/ozone/ozone/hadoop-ozone/integration-test/target/test-dir/MiniOzoneClusterImpl-f7452c88-0c37-4f5d-a1f6-a5ee96fcef81/omNode-1/ratis/c9bc4cf4-3bc3-3c60-a66b-523986131536/current/log_inprogress_0
2024-07-20 16:54:47,572 [main] INFO  om.OzoneManager (OzoneManager.java:instantiateServices(812)) - S3 Multi-Tenancy is enabled
2024-07-20 16:54:47,573 [main] INFO  om.OMMultiTenantManagerImpl (OMMultiTenantManagerImpl.java:loadTenantCacheFromDB(899)) - Loaded 0 tenants and 0 tenant users from the database
2024-07-20 16:54:47,575 [main] INFO  om.OmSnapshotManager (OmSnapshotManager.java:<init>(180)) - Ozone filesystem snapshot feature is enabled.
2024-07-20 16:54:47,575 [main] WARN  server.ServerUtils (ServerUtils.java:getDBPath(299)) - ozone.om.snapshot.diff.db.dir is not configured. We recommend adding this setting. Falling back to ozone.metadata.dirs instead.
2024-07-20 16:54:47,577 [omNode-3-OMRangerBGSyncService#0] WARN  service.OMRangerBGSyncService (OMRangerBGSyncService.java:shouldRun(265)) - OzoneManagerRatisServer is not initialized yet
2024-07-20 16:54:47,581 [grpc-default-executor-1] WARN  server.GrpcLogAppender (GrpcLogAppender.java:lambda$resetClient$1(221)) - omNode-1@group-523986131536->omNode-3-GrpcLogAppender: Follower failed (request=null, errorCount=1); keep nextIndex (0) unchanged and retry.
2024-07-20 16:54:47,607 [grpc-default-executor-1] WARN  server.GrpcLogAppender (GrpcLogAppender.java:lambda$resetClient$1(221)) - omNode-1@group-523986131536->omNode-3-GrpcLogAppender: Follower failed (request=null, errorCount=3); keep nextIndex (1) unchanged and retry.
2024-07-20 16:54:47,607 [omNode-2-server-thread1] INFO  server.RaftServer$Division (ServerState.java:setLeader(272)) - omNode-2@group-523986131536: change Leader from null to omNode-1 at term 1 for appendEntries, leader elected after 1113ms
2024-07-20 16:54:47,608 [main] INFO  utils.NativeLibraryLoader (NativeLibraryLoader.java:loadLibrary(111)) - Loading Library: ozone_rocksdb_tools
2024-07-20 16:54:47,609 [main] ERROR snapshot.SnapshotDiffManager (SnapshotDiffManager.java:initNativeLibraryForEfficientDiff(287)) - Native Library for raw sst file reading loading failed.
org.apache.hadoop.hdds.utils.NativeLibraryNotLoadedException: Unable to load library ozone_rocksdb_tools from both java.library.path & resource file libozone_rocksdb_tools.so from jar.
	at org.apache.hadoop.hdds.utils.db.managed.ManagedRawSSTFileReader.loadLibrary(ManagedRawSSTFileReader.java:40)
	at org.apache.hadoop.ozone.om.snapshot.SnapshotDiffManager.initNativeLibraryForEfficientDiff(SnapshotDiffManager.java:285)
	at org.apache.hadoop.ozone.om.snapshot.SnapshotDiffManager.<init>(SnapshotDiffManager.java:259)
	at org.apache.hadoop.ozone.om.OmSnapshotManager.<init>(OmSnapshotManager.java:287)
	at org.apache.hadoop.ozone.om.OzoneManager.instantiateServices(OzoneManager.java:864)
	at org.apache.hadoop.ozone.om.OzoneManager.<init>(OzoneManager.java:688)
	at org.apache.hadoop.ozone.om.OzoneManager.createOm(OzoneManager.java:775)
	at org.apache.hadoop.ozone.MiniOzoneHAClusterImpl$Builder.createOMService(MiniOzoneHAClusterImpl.java:510)
	at org.apache.hadoop.ozone.MiniOzoneHAClusterImpl$Builder.build(MiniOzoneHAClusterImpl.java:425)
	at org.apache.hadoop.ozone.shell.TestOzoneTenantShell.init(TestOzoneTenantShell.java:159)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:728)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:156)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptLifecycleMethod(TimeoutExtension.java:128)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptBeforeAllMethod(TimeoutExtension.java:70)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(InterceptingExecutableInvoker.java:103)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:93)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:92)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:86)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeBeforeAllMethods$13(ClassBasedTestDescriptor.java:412)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeBeforeAllMethods(ClassBasedTestDescriptor.java:410)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.before(ClassBasedTestDescriptor.java:216)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.before(ClassBasedTestDescriptor.java:85)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:148)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:63)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:154)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:123)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:377)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:138)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:465)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:451)
2024-07-20 16:54:47,612 [omNode-2-server-thread2] INFO  server.RaftServer$Division (ServerState.java:setRaftConf(386)) - omNode-2@group-523986131536: set configuration conf: {index: 0, cur=peers:[omNode-3|localhost:15015, omNode-1|localhost:15007, omNode-2|localhost:15011]|listeners:[], old=null}
2024-07-20 16:54:47,614 [omNode-2-server-thread2] INFO  segmented.SegmentedRaftLogWorker (SegmentedRaftLogWorker.java:startLogSegment(433)) - omNode-2@group-523986131536-SegmentedRaftLogWorker: Starting segment from index:0
2024-07-20 16:54:47,615 [omNode-2@group-523986131536-SegmentedRaftLogWorker] INFO  segmented.BufferedWriteChannel (BufferedWriteChannel.java:open(61)) - open log_inprogress_0 at position 0
2024-07-20 16:54:47,622 [main] INFO  om.OzoneManager (OzoneManager.java:addS3GVolumeToDB(4463)) - Created Volume s3v With Owner runner required for S3Gateway operations.
2024-07-20 16:54:47,622 [main] WARN  server.ServerUtils (ServerUtils.java:getDefaultRatisDirectory(311)) - Storage directory for Ratis is not configured. It is a good idea to map this to an SSD disk. Falling back to ozone.metadata.dirs
2024-07-20 16:54:47,622 [main] WARN  utils.OzoneManagerRatisUtils (OzoneManagerRatisUtils.java:getOMRatisSnapshotDirectory(476)) - ozone.om.ratis.snapshot.dir is not configured. Falling back to ozone.metadata.dirs config
2024-07-20 16:54:47,623 [main] INFO  utils.RDBSnapshotProvider (RDBSnapshotProvider.java:init(87)) - Cleaning up the candidate dir: /home/runner/work/ozone/ozone/hadoop-ozone/integration-test/target/test-dir/MiniOzoneClusterImpl-f7452c88-0c37-4f5d-a1f6-a5ee96fcef81/omNode-3/snapshot/om.db.candidate
2024-07-20 16:54:47,623 [main] INFO  ratis_snapshot.OmRatisSnapshotProvider (OmRatisSnapshotProvider.java:<init>(99)) - Initializing OM Snapshot Provider
2024-07-20 16:54:47,626 [main] WARN  dropwizard3.Dm3MetricRegistriesImpl (Dm3MetricRegistriesImpl.java:addReporterRegistration(114)) - New reporters are added after registries were created. Some metrics will be missing from the reporter. Please add reporter before adding any new registry.
2024-07-20 16:54:47,626 [main] WARN  dropwizard3.Dm3MetricRegistriesImpl (Dm3MetricRegistriesImpl.java:addReporterRegistration(114)) - New reporters are added after registries were created. Some metrics will be missing from the reporter. Please add reporter before adding any new registry.
2024-07-20 16:54:47,627 [main] WARN  server.ServerUtils (ServerUtils.java:getDefaultRatisDirectory(311)) - Storage directory for Ratis is not configured. It is a good idea to map this to an SSD disk. Falling back to ozone.metadata.dirs
2024-07-20 16:54:47,629 [omNode-2@group-523986131536-SegmentedRaftLogWorker] INFO  segmented.SegmentedRaftLogWorker (SegmentedRaftLogWorker.java:execute(637)) - omNode-2@group-523986131536-SegmentedRaftLogWorker: created new log segment /home/runner/work/ozone/ozone/hadoop-ozone/integration-test/target/test-dir/MiniOzoneClusterImpl-f7452c88-0c37-4f5d-a1f6-a5ee96fcef81/omNode-2/ratis/c9bc4cf4-3bc3-3c60-a66b-523986131536/current/log_inprogress_0
2024-07-20 16:54:47,630 [main] INFO  ratis.OzoneManagerRatisServer (OzoneManagerRatisServer.java:<init>(168)) - Instantiating OM Ratis server with groupID: om-service-test1 and peers: localhost:15015, localhost:15007, localhost:15011
2024-07-20 16:54:47,631 [main] INFO  ratis.OzoneManagerStateMachine (OzoneManagerStateMachine.java:loadSnapshotInfoFromDB(593)) - TransactionInfo not found in OM DB.
2024-07-20 16:54:47,643 [main] INFO  server.RaftServer (ConfUtils.java:logGet(46)) - raft.rpc.type = GRPC (default)
2024-07-20 16:54:47,643 [main] INFO  grpc.GrpcConfigKeys (ConfUtils.java:logFallback(53)) - raft.grpc.admin.host = null (fallback to raft.grpc.server.host)
2024-07-20 16:54:47,643 [main] INFO  grpc.GrpcConfigKeys (ConfUtils.java:logFallback(53)) - raft.grpc.admin.port = 15015 (fallback to raft.grpc.server.port)
2024-07-20 16:54:47,643 [main] INFO  grpc.GrpcConfigKeys (ConfUtils.java:logFallback(53)) - raft.grpc.client.host = null (fallback to raft.grpc.server.host)
2024-07-20 16:54:47,643 [main] INFO  grpc.GrpcConfigKeys (ConfUtils.java:logFallback(53)) - raft.grpc.client.port = 15015 (fallback to raft.grpc.server.port)
2024-07-20 16:54:47,644 [main] INFO  grpc.GrpcConfigKeys (ConfUtils.java:logGet(46)) - raft.grpc.server.host = null (default)
2024-07-20 16:54:47,644 [main] INFO  grpc.GrpcConfigKeys (ConfUtils.java:logGet(46)) - raft.grpc.server.port = 15015 (custom)
2024-07-20 16:54:47,644 [main] INFO  server.GrpcService (ConfUtils.java:logGet(46)) - raft.grpc.message.size.max = 4194304 (custom)
2024-07-20 16:54:47,644 [main] INFO  server.RaftServerConfigKeys (ConfUtils.java:logGet(46)) - raft.server.log.appender.buffer.byte-limit = 4194304 (custom)
2024-07-20 16:54:47,644 [main] INFO  server.GrpcService (ConfUtils.java:logGet(46)) - raft.grpc.flow.control.window = 1MB (=1048576) (default)
2024-07-20 16:54:47,644 [main] INFO  server.RaftServerConfigKeys (ConfUtils.java:logGet(46)) - raft.server.rpc.request.timeout = 3000ms (default)
2024-07-20 16:54:47,644 [main] INFO  grpc.GrpcConfigKeys (ConfUtils.java:logGet(46)) - raft.grpc.server.heartbeat.channel = true (default)
2024-07-20 16:54:47,644 [main] INFO  grpc.GrpcConfigKeys (ConfUtils.java:logGet(46)) - raft.grpc.server.async.request.thread.pool.cached = true (default)
2024-07-20 16:54:47,644 [main] INFO  grpc.GrpcConfigKeys (ConfUtils.java:logGet(46)) - raft.grpc.server.async.request.thread.pool.size = 32 (default)
2024-07-20 16:54:47,645 [main] INFO  impl.DataStreamServerImpl (ConfUtils.java:logGet(46)) - raft.datastream.type = DISABLED (default)
2024-07-20 16:54:47,646 [main] INFO  server.RaftServerConfigKeys (ConfUtils.java:logGet(46)) - raft.server.sleep.deviation.threshold = 300ms (default)
2024-07-20 16:54:47,646 [main] INFO  server.RaftServerConfigKeys (ConfUtils.java:logGet(46)) - raft.server.close.threshold = 60s (default)
2024-07-20 16:54:47,646 [main] INFO  server.RaftServerConfigKeys (ConfUtils.java:logGet(46)) - raft.server.leaderelection.leader.step-down.wait-time = 10s (default)
2024-07-20 16:54:47,648 [main] INFO  server.RaftServerConfigKeys (ConfUtils.java:logGet(46)) - raft.server.storage.dir = [/home/runner/work/ozone/ozone/hadoop-ozone/integration-test/target/test-dir/MiniOzoneClusterImpl-f7452c88-0c37-4f5d-a1f6-a5ee96fcef81/omNode-3/ratis] (custom)
2024-07-20 16:54:47,648 [main] INFO  server.RaftServerConfigKeys (ConfUtils.java:logGet(46)) - raft.server.threadpool.proxy.cached = true (default)
2024-07-20 16:54:47,649 [main] INFO  server.RaftServerConfigKeys (ConfUtils.java:logGet(46)) - raft.server.threadpool.proxy.size = 0 (default)
2024-07-20 16:54:47,650 [main] INFO  server.RaftServer (RaftServerProxy.java:addNew(101)) - omNode-3: addNew group-523986131536:[omNode-3|localhost:15015, omNode-1|localhost:15007, omNode-2|localhost:15011] returns group-523986131536:java.util.concurrent.CompletableFuture@5fe29ea1[Not completed]
2024-07-20 16:54:47,650 [omNode-3-groupManagement] INFO  server.RaftServer$Division (RaftServerImpl.java:<init>(253)) - omNode-3: new RaftServerImpl for group-523986131536:[omNode-3|localhost:15015, omNode-1|localhost:15007, omNode-2|localhost:15011] with OzoneManagerStateMachine:uninitialized
2024-07-20 16:54:47,651 [omNode-3-groupManagement] INFO  server.RaftServerConfigKeys (ConfUtils.java:logGet(46)) - raft.server.rpc.timeout.min = 1s (custom)
2024-07-20 16:54:47,651 [omNode-3-groupManagement] INFO  server.RaftServerConfigKeys (ConfUtils.java:logGet(46)) - raft.server.rpc.timeout.max = 1200ms (custom)
2024-07-20 16:54:47,652 [omNode-3-groupManagement] INFO  server.RaftServerConfigKeys (ConfUtils.java:logGet(46)) - raft.server.rpc.sleep.time = 25ms (default)
2024-07-20 16:54:47,653 [omNode-3-groupManagement] INFO  server.RaftServerConfigKeys (ConfUtils.java:logGet(46)) - raft.server.rpc.slowness.timeout = 2s (custom)
2024-07-20 16:54:47,653 [omNode-3-groupManagement] INFO  server.RaftServerConfigKeys (ConfUtils.java:logGet(46)) - raft.server.leaderelection.leader.step-down.wait-time = 10s (default)
2024-07-20 16:54:47,653 [omNode-3-groupManagement] INFO  server.RaftServerConfigKeys (ConfUtils.java:logGet(46)) - raft.server.leaderelection.member.majority-add = false (default)
2024-07-20 16:54:47,653 [omNode-3-groupManagement] INFO  server.RaftServerConfigKeys (ConfUtils.java:logGet(46)) - raft.server.sleep.deviation.threshold = 300ms (default)
2024-07-20 16:54:47,653 [omNode-3-groupManagement] INFO  server.RaftServer$Division (ServerState.java:<init>(114)) - omNode-3@group-523986131536: ConfigurationManager, init=conf: {index: -1, cur=peers:[omNode-3|localhost:15015, omNode-1|localhost:15007, omNode-2|localhost:15011]|listeners:[], old=null}, confs=<EMPTY_MAP>
2024-07-20 16:54:47,653 [omNode-3-groupManagement] INFO  server.RaftServerConfigKeys (ConfUtils.java:logGet(46)) - raft.server.notification.no-leader.timeout = 2s (custom)
2024-07-20 16:54:47,653 [omNode-3-groupManagement] INFO  server.RaftServerConfigKeys (ConfUtils.java:logGet(46)) - raft.server.read.timeout = 10s (default)
2024-07-20 16:54:47,653 [omNode-3-groupManagement] INFO  server.RaftServerConfigKeys (ConfUtils.java:logGet(46)) - raft.server.retrycache.expirytime = 300s (custom)
2024-07-20 16:54:47,654 [omNode-3-groupManagement] INFO  server.RaftServerConfigKeys (ConfUtils.java:logGet(46)) - raft.server.retrycache.statistics.expirytime = 100ms (default)
2024-07-20 16:54:47,654 [omNode-3-groupManagement] INFO  server.RaftServerConfigKeys (ConfUtils.java:logGet(46)) - raft.server.read.option = DEFAULT (default)
2024-07-20 16:54:47,654 [omNode-3-groupManagement] INFO  server.RaftServerConfigKeys (ConfUtils.java:logGet(46)) - raft.server.read.read-after-write-consistent.write-index-cache.expiry-time = 60s (default)
2024-07-20 16:54:47,651 [main] INFO  om.OzoneManager (OzoneManager.java:initializeRatisServer(2168)) - OzoneManager Ratis server initialized at port 15015
2024-07-20 16:54:47,657 [main] INFO  om.OzoneManager (OzoneManager.java:getRpcServer(1228)) - Creating RPC Server
2024-07-20 16:54:47,660 [omNode-3-groupManagement] INFO  server.RaftServerConfigKeys (ConfUtils.java:logGet(46)) - raft.server.rpc.request.timeout = 3000ms (default)
2024-07-20 16:54:47,660 [omNode-3-groupManagement] INFO  server.RaftServerConfigKeys (ConfUtils.java:logGet(46)) - raft.server.log.appender.install.snapshot.enabled = false (custom)
2024-07-20 16:54:47,660 [omNode-3-groupManagement] INFO  server.RaftServerConfigKeys (ConfUtils.java:logGet(46)) - raft.server.threadpool.server.cached = true (default)
2024-07-20 16:54:47,660 [omNode-3-groupManagement] INFO  server.RaftServerConfigKeys (ConfUtils.java:logGet(46)) - raft.server.threadpool.server.size = 0 (default)
2024-07-20 16:54:47,660 [omNode-3-groupManagement] INFO  server.RaftServerConfigKeys (ConfUtils.java:logGet(46)) - raft.server.threadpool.client.cached = true (default)
2024-07-20 16:54:47,660 [omNode-3-groupManagement] INFO  server.RaftServerConfigKeys (ConfUtils.java:logGet(46)) - raft.server.threadpool.client.size = 0 (default)
2024-07-20 16:54:47,839 [omNode-1@group-523986131536-StateMachineUpdater] INFO  ratis.OzoneManagerStateMachine (OzoneManagerStateMachine.java:notifyConfigurationChanged(216)) - Received Configuration change notification from Ratis. New Peer list:
[id: "omNode-3"
address: "localhost:15015"
startupRole: FOLLOWER
, id: "omNode-1"
address: "localhost:15007"
startupRole: FOLLOWER
, id: "omNode-2"
address: "localhost:15011"
startupRole: FOLLOWER
]
2024-07-20 16:54:47,842 [omNode-1@group-523986131536-StateMachineUpdater] INFO  server.RaftServer$Division (LeaderStateImpl.java:checkStartIndex(316)) - Leader omNode-1@group-523986131536-LeaderStateImpl is ready since appliedIndex == startIndex == 0
2024-07-20 16:54:48,121 [main] INFO  reflections.Reflections (Reflections.java:scan(219)) - Reflections took 461 ms to scan 20 urls, producing 59 keys and 6640 values
2024-07-20 16:54:48,123 [main] INFO  ipc.CallQueueManager (CallQueueManager.java:<init>(90)) - Using callQueue: class java.util.concurrent.LinkedBlockingQueue, queueCapacity: 2000, scheduler: class org.apache.hadoop.ipc.DefaultRpcScheduler, ipcBackoff: false.
2024-07-20 16:54:48,123 [main] INFO  ipc.Server (Server.java:<init>(1287)) - Listener at 127.0.0.1:15012
2024-07-20 16:54:48,126 [Socket Reader #1 for port 15012] INFO  ipc.Server (Server.java:run(1323)) - Starting Socket Reader #1 for port 15012
2024-07-20 16:54:48,137 [omNode-2@group-523986131536-StateMachineUpdater] INFO  ratis.OzoneManagerStateMachine (OzoneManagerStateMachine.java:notifyConfigurationChanged(216)) - Received Configuration change notification from Ratis. New Peer list:
[id: "omNode-3"
address: "localhost:15015"
startupRole: FOLLOWER
, id: "omNode-1"
address: "localhost:15007"
startupRole: FOLLOWER
, id: "omNode-2"
address: "localhost:15011"
startupRole: FOLLOWER
]
2024-07-20 16:54:48,168 [main] INFO  impl.MetricsSystemImpl (MetricsSystemImpl.java:init(158)) - OzoneManager metrics system started (again)
2024-07-20 16:54:48,184 [main] INFO  om.OzoneManager (OzoneManager.java:start(1650)) - OzoneManager RPC server is listening at localhost/127.0.0.1:15012
2024-07-20 16:54:48,185 [main] INFO  ratis.OzoneManagerRatisServer (OzoneManagerRatisServer.java:start(594)) - Starting OzoneManagerRatisServer omNode-3 at port 15015
2024-07-20 16:54:48,186 [omNode-3-impl-thread1] INFO  server.RaftServerConfigKeys (ConfUtils.java:logGet(46)) - raft.server.storage.free-space.min = 0MB (=0) (default)
2024-07-20 16:54:48,186 [omNode-3-impl-thread1] INFO  server.RaftServerConfigKeys (ConfUtils.java:logGet(46)) - raft.server.log.corruption.policy = EXCEPTION (default)
2024-07-20 16:54:48,186 [omNode-3-impl-thread1] INFO  server.RaftServerConfigKeys (ConfUtils.java:logGet(46)) - raft.server.storage.dir = [/home/runner/work/ozone/ozone/hadoop-ozone/integration-test/target/test-dir/MiniOzoneClusterImpl-f7452c88-0c37-4f5d-a1f6-a5ee96fcef81/omNode-3/ratis] (custom)
2024-07-20 16:54:48,186 [omNode-3-impl-thread1] INFO  storage.RaftStorageDirectory (RaftStorageDirectoryImpl.java:analyzeStorage(138)) - The storage directory /home/runner/work/ozone/ozone/hadoop-ozone/integration-test/target/test-dir/MiniOzoneClusterImpl-f7452c88-0c37-4f5d-a1f6-a5ee96fcef81/omNode-3/ratis/c9bc4cf4-3bc3-3c60-a66b-523986131536 does not exist. Creating ...
2024-07-20 16:54:48,188 [omNode-3-impl-thread1] INFO  storage.RaftStorageDirectory (RaftStorageDirectoryImpl.java:tryLock(229)) - Lock on /home/runner/work/ozone/ozone/hadoop-ozone/integration-test/target/test-dir/MiniOzoneClusterImpl-f7452c88-0c37-4f5d-a1f6-a5ee96fcef81/omNode-3/ratis/c9bc4cf4-3bc3-3c60-a66b-523986131536/in_use.lock acquired by nodename 54372@fv-az1015-711
2024-07-20 16:54:48,189 [omNode-3-impl-thread1] INFO  storage.RaftStorage (RaftStorageImpl.java:format(98)) - Storage directory /home/runner/work/ozone/ozone/hadoop-ozone/integration-test/target/test-dir/MiniOzoneClusterImpl-f7452c88-0c37-4f5d-a1f6-a5ee96fcef81/omNode-3/ratis/c9bc4cf4-3bc3-3c60-a66b-523986131536 has been successfully formatted.
2024-07-20 16:54:48,189 [omNode-3-impl-thread1] INFO  server.RaftServerConfigKeys (ConfUtils.java:logGet(46)) - raft.server.log.use.memory = false (default)
2024-07-20 16:54:48,189 [omNode-3-impl-thread1] INFO  server.RaftServerConfigKeys (ConfUtils.java:logGet(46)) - raft.server.log.purge.gap = 1000000 (custom)
2024-07-20 16:54:48,189 [omNode-3-impl-thread1] INFO  server.RaftServerConfigKeys (ConfUtils.java:logGet(46)) - raft.server.log.appender.buffer.byte-limit = 4194304 (custom)
2024-07-20 16:54:48,189 [omNode-3-impl-thread1] INFO  server.RaftServerConfigKeys (ConfUtils.java:logGet(46)) - raft.server.log.statemachine.data.read.timeout = 1000ms (default)
2024-07-20 16:54:48,190 [omNode-3-impl-thread1] INFO  server.RaftServerConfigKeys (ConfUtils.java:logGet(46)) - raft.server.log.purge.preservation.log.num = 0 (default)
2024-07-20 16:54:48,191 [omNode-3-impl-thread1] INFO  server.RaftServerConfigKeys (ConfUtils.java:logGet(46)) - raft.server.log.segment.size.max = 4194304 (custom)
2024-07-20 16:54:48,191 [omNode-3-impl-thread1] INFO  server.RaftServerConfigKeys (ConfUtils.java:logGet(46)) - raft.server.log.segment.cache.num.max = 2 (custom)
2024-07-20 16:54:48,191 [omNode-3-impl-thread1] INFO  server.RaftServerConfigKeys (ConfUtils.java:logGet(46)) - raft.server.log.segment.cache.size.max = 200MB (=209715200) (default)
2024-07-20 16:54:48,191 [omNode-3-impl-thread1] INFO  server.RaftServerConfigKeys (ConfUtils.java:logGet(46)) - raft.server.log.appender.buffer.byte-limit = 4194304 (custom)
2024-07-20 16:54:48,192 [omNode-3-impl-thread1] INFO  util.AwaitToRun (AwaitToRun.java:start(81)) - Thread[omNode-3@group-523986131536-cacheEviction-AwaitToRun,5,main] started
2024-07-20 16:54:48,192 [omNode-3-impl-thread1] INFO  segmented.SegmentedRaftLogWorker (SegmentedRaftLogWorker.java:<init>(184)) - new omNode-3@group-523986131536-SegmentedRaftLogWorker for RaftStorageImpl:Storage Directory /home/runner/work/ozone/ozone/hadoop-ozone/integration-test/target/test-dir/MiniOzoneClusterImpl-f7452c88-0c37-4f5d-a1f6-a5ee96fcef81/omNode-3/ratis/c9bc4cf4-3bc3-3c60-a66b-523986131536
2024-07-20 16:54:48,192 [omNode-3-impl-thread1] INFO  server.RaftServerConfigKeys (ConfUtils.java:logGet(46)) - raft.server.log.queue.byte-limit = 64MB (=67108864) (default)
2024-07-20 16:54:48,192 [omNode-3-impl-thread1] INFO  server.RaftServerConfigKeys (ConfUtils.java:logGet(46)) - raft.server.log.queue.element-limit = 4096 (default)
2024-07-20 16:54:48,192 [omNode-3-impl-thread1] INFO  server.RaftServerConfigKeys (ConfUtils.java:logGet(46)) - raft.server.log.segment.size.max = 4194304 (custom)
2024-07-20 16:54:48,192 [omNode-3-impl-thread1] INFO  server.RaftServerConfigKeys (ConfUtils.java:logGet(46)) - raft.server.log.preallocated.size = 4194304 (custom)
2024-07-20 16:54:48,192 [omNode-3-impl-thread1] INFO  server.RaftServerConfigKeys (ConfUtils.java:logGet(46)) - raft.server.log.force.sync.num = 128 (default)
2024-07-20 16:54:48,192 [omNode-3-impl-thread1] INFO  server.RaftServerConfigKeys (ConfUtils.java:logGet(46)) - raft.server.log.statemachine.data.sync = true (default)
2024-07-20 16:54:48,192 [omNode-3-impl-thread1] INFO  server.RaftServerConfigKeys (ConfUtils.java:logGet(46)) - raft.server.log.statemachine.data.sync.timeout = 10s (default)
2024-07-20 16:54:48,192 [omNode-3-impl-thread1] INFO  server.RaftServerConfigKeys (ConfUtils.java:logGet(46)) - raft.server.log.statemachine.data.sync.timeout.retry = -1 (default)
2024-07-20 16:54:48,193 [omNode-3-impl-thread1] INFO  server.RaftServerConfigKeys (ConfUtils.java:logGet(46)) - raft.server.log.write.buffer.size = 4194312 (custom)
2024-07-20 16:54:48,194 [omNode-3-impl-thread1] INFO  server.RaftServerConfigKeys (ConfUtils.java:logGet(46)) - raft.server.log.appender.buffer.byte-limit = 4194304 (custom)
2024-07-20 16:54:48,194 [omNode-3-impl-thread1] INFO  server.RaftServerConfigKeys (ConfUtils.java:logGet(46)) - raft.server.log.unsafe-flush.enabled = false (default)
2024-07-20 16:54:48,194 [omNode-3-impl-thread1] INFO  server.RaftServerConfigKeys (ConfUtils.java:logGet(46)) - raft.server.log.async-flush.enabled = false (default)
2024-07-20 16:54:48,194 [omNode-3-impl-thread1] INFO  server.RaftServerConfigKeys (ConfUtils.java:logGet(46)) - raft.server.log.statemachine.data.caching.enabled = false (default)
2024-07-20 16:54:48,194 [omNode-3-impl-thread1] INFO  segmented.SegmentedRaftLogWorker (SegmentedRaftLogWorker.java:lambda$new$0(135)) - omNode-3@group-523986131536-SegmentedRaftLogWorker: flushIndex: setUnconditionally 0 -> -1
2024-07-20 16:54:48,194 [omNode-3-impl-thread1] INFO  segmented.SegmentedRaftLogWorker (SegmentedRaftLogWorker.java:lambda$new$0(135)) - omNode-3@group-523986131536-SegmentedRaftLogWorker: safeCacheEvictIndex: setUnconditionally 0 -> -1
2024-07-20 16:54:48,195 [omNode-3-impl-thread1] INFO  server.RaftServer$Division (RaftServerImpl.java:start(389)) - omNode-3@group-523986131536: start as a follower, conf=conf: {index: -1, cur=peers:[omNode-3|localhost:15015, omNode-1|localhost:15007, omNode-2|localhost:15011]|listeners:[], old=null}
2024-07-20 16:54:48,195 [omNode-3-impl-thread1] INFO  server.RaftServer$Division (RaftServerImpl.java:setRole(376)) - omNode-3@group-523986131536: changes role from      null to FOLLOWER at term 0 for startAsFollower
2024-07-20 16:54:48,195 [omNode-3-impl-thread1] INFO  impl.RoleInfo (RoleInfo.java:updateAndGet(148)) - omNode-3: start omNode-3@group-523986131536-FollowerState
2024-07-20 16:54:48,201 [omNode-3@group-523986131536-FollowerState] INFO  server.RaftServerConfigKeys (ConfUtils.java:logFallback(53)) - raft.server.rpc.first-election.timeout.min = 1s (fallback to raft.server.rpc.timeout.min)
2024-07-20 16:54:48,201 [omNode-3-impl-thread1] INFO  util.JmxRegister (JmxRegister.java:tryRegister(44)) - Successfully registered JMX Bean with object name Ratis:service=RaftServer,group=group-523986131536,id=omNode-3
2024-07-20 16:54:48,201 [omNode-3-impl-thread1] INFO  util.JmxRegister (JmxRegister.java:register(58)) - register mxBean class org.apache.ratis.server.impl.RaftServerJmxAdapter as Ratis:service=RaftServer,group=group-523986131536,id=omNode-3
2024-07-20 16:54:48,201 [omNode-3-impl-thread1] INFO  server.RaftServerConfigKeys (ConfUtils.java:logGet(46)) - raft.server.snapshot.trigger-when-stop.enabled = true (default)
2024-07-20 16:54:48,201 [omNode-3-impl-thread1] INFO  server.RaftServerConfigKeys (ConfUtils.java:logGet(46)) - raft.server.snapshot.trigger-when-remove.enabled = true (default)
2024-07-20 16:54:48,202 [omNode-3-impl-thread1] INFO  server.RaftServerConfigKeys (ConfUtils.java:logGet(46)) - raft.server.snapshot.auto.trigger.enabled = true (custom)
2024-07-20 16:54:48,202 [omNode-3-impl-thread1] INFO  server.RaftServerConfigKeys (ConfUtils.java:logGet(46)) - raft.server.snapshot.auto.trigger.threshold = 400000 (default)
2024-07-20 16:54:48,202 [omNode-3-impl-thread1] INFO  server.RaftServerConfigKeys (ConfUtils.java:logGet(46)) - raft.server.snapshot.retention.file.num = -1 (default)
2024-07-20 16:54:48,202 [omNode-3-impl-thread1] INFO  server.RaftServerConfigKeys (ConfUtils.java:logGet(46)) - raft.server.log.purge.upto.snapshot.index = true (custom)
2024-07-20 16:54:48,203 [omNode-3@group-523986131536-FollowerState] INFO  server.RaftServerConfigKeys (ConfUtils.java:logFallback(53)) - raft.server.rpc.first-election.timeout.max = 1200ms (fallback to raft.server.rpc.timeout.max)
2024-07-20 16:54:48,203 [main] INFO  server.RaftServer (RaftServerProxy.java:startImpl(408)) - omNode-3: start RPC server
2024-07-20 16:54:48,204 [main] INFO  server.GrpcService (GrpcService.java:startImpl(302)) - omNode-3: GrpcService started, listening on 15015
2024-07-20 16:54:48,206 [main] INFO  om.OzoneManager (OzoneManager.java:start(1666)) - Version File has different layout version (6) than OM DB (null). That is expected if this OM has never been finalized to a newer layout version.
2024-07-20 16:54:48,208 [JvmPauseMonitor3] INFO  util.JvmPauseMonitor (JvmPauseMonitor.java:run(146)) - JvmPauseMonitor-omNode-3: Started
2024-07-20 16:54:48,213 [main] INFO  client.ScmTopologyClient (ScmTopologyClient.java:start(72)) - Initial network topology fetched from SCM: /.
2024-07-20 16:54:48,214 [main] INFO  net.NodeSchemaLoader (NodeSchemaLoader.java:loadSchemaFromFile(129)) - Loading schema from [jar:file:/home/runner/work/ozone/ozone/hadoop-hdds/common/target/hdds-common-1.5.0-SNAPSHOT.jar!/network-topology-default.xml]
2024-07-20 16:54:48,214 [main] INFO  net.NodeSchemaLoader (NodeSchemaLoader.java:loadSchema(176)) - Loading network topology layer schema file
2024-07-20 16:54:48,236 [main] INFO  http.BaseHttpServer (BaseHttpServer.java:newHttpServer2BuilderForOzone(223)) - Starting Web-server for ozoneManager at: http://0.0.0.0:15013
2024-07-20 16:54:48,236 [main] INFO  http.BaseHttpServer (BaseHttpServer.java:<init>(110)) - Hadoop Security Enabled: false Ozone Security Enabled: false Ozone HTTP Security Enabled: false 
2024-07-20 16:54:48,237 [main] WARN  server.AuthenticationFilter (AuthenticationFilter.java:constructSecretProvider(240)) - Unable to initialize FileSignerSecretProvider, falling back to use random secrets. Reason: Could not read signature secret file: /home/runner/hadoop-http-auth-signature-secret
2024-07-20 16:54:48,239 [main] INFO  http.HttpRequestLog (HttpRequestLog.java:getRequestLog(86)) - Http request log for http.requests.ozoneManager is not defined
2024-07-20 16:54:48,240 [main] INFO  http.HttpServer2 (HttpServer2.java:addGlobalFilter(1035)) - Added global filter 'safety' (class=org.apache.hadoop.hdds.server.http.HttpServer2$QuotingInputFilter)
2024-07-20 16:54:48,241 [main] INFO  http.HttpServer2 (HttpServer2.java:addFilter(1011)) - Added filter static_user_filter (class=org.apache.hadoop.http.lib.StaticUserWebFilter$StaticUserFilter) to context ozoneManager
2024-07-20 16:54:48,242 [main] INFO  http.HttpServer2 (HttpServer2.java:addFilter(1019)) - Added filter static_user_filter (class=org.apache.hadoop.http.lib.StaticUserWebFilter$StaticUserFilter) to context logs
2024-07-20 16:54:48,242 [main] INFO  http.HttpServer2 (HttpServer2.java:addFilter(1019)) - Added filter static_user_filter (class=org.apache.hadoop.http.lib.StaticUserWebFilter$StaticUserFilter) to context static
2024-07-20 16:54:48,243 [main] INFO  http.BaseHttpServer (BaseHttpServer.java:<init>(189)) - HTTP server of ozoneManager uses base directory /home/runner/work/ozone/ozone/hadoop-ozone/integration-test/target/test-dir/MiniOzoneClusterImpl-f7452c88-0c37-4f5d-a1f6-a5ee96fcef81/omNode-3/webserver
2024-07-20 16:54:48,243 [main] INFO  http.HttpServer2 (HttpServer2.java:bindListener(1235)) - Jetty bound to port 15013
2024-07-20 16:54:48,243 [main] INFO  server.Server (Server.java:doStart(375)) - jetty-9.4.55.v20240627; built: 2024-06-27T15:05:37.765Z; git: 70015831e5195ba74da6383c4ab7c90c56bb08af; jvm 17.0.11+9
2024-07-20 16:54:48,246 [main] INFO  server.session (DefaultSessionIdManager.java:doStart(334)) - DefaultSessionIdManager workerName=node0
2024-07-20 16:54:48,246 [main] INFO  server.session (DefaultSessionIdManager.java:doStart(339)) - No SessionScavenger set, using defaults
2024-07-20 16:54:48,246 [main] INFO  server.session (HouseKeeper.java:startScavenging(132)) - node0 Scavenging every 660000ms
2024-07-20 16:54:48,247 [main] INFO  handler.ContextHandler (ContextHandler.java:doStart(921)) - Started o.e.j.s.ServletContextHandler@904df8a{logs,/logs,file:///home/runner/work/ozone/ozone/hadoop-ozone/integration-test/target/log,AVAILABLE}
2024-07-20 16:54:48,248 [main] INFO  handler.ContextHandler (ContextHandler.java:doStart(921)) - Started o.e.j.s.ServletContextHandler@3922d85c{static,/static,file:///home/runner/work/ozone/ozone/hadoop-ozone/integration-test/target/test-classes/webapps/static,AVAILABLE}
2024-07-20 16:54:48,255 [main] INFO  handler.ContextHandler (ContextHandler.java:doStart(921)) - Started o.e.j.w.WebAppContext@65cfbf2c{ozoneManager,/,file:///home/runner/work/ozone/ozone/hadoop-ozone/integration-test/target/test-classes/webapps/ozoneManager/,AVAILABLE}{file:/home/runner/work/ozone/ozone/hadoop-ozone/integration-test/target/test-classes/webapps/ozoneManager}
2024-07-20 16:54:48,256 [main] INFO  server.AbstractConnector (AbstractConnector.java:doStart(333)) - Started ServerConnector@1e2200ee{HTTP/1.1, (http/1.1)}{0.0.0.0:15013}
2024-07-20 16:54:48,256 [main] INFO  server.Server (Server.java:doStart(415)) - Started @9227ms
2024-07-20 16:54:48,256 [main] WARN  impl.MetricsSystemImpl (MetricsSystemImpl.java:register(279)) - Sink prometheus already exists!
2024-07-20 16:54:48,257 [main] INFO  http.BaseHttpServer (BaseHttpServer.java:updateConnectorAddress(354)) - HTTP server of ozoneManager listening at http://0.0.0.0:15013
2024-07-20 16:54:48,257 [IPC Server Responder] INFO  ipc.Server (Server.java:run(1562)) - IPC Server Responder: starting
2024-07-20 16:54:48,261 [IPC Server listener on 15012] INFO  ipc.Server (Server.java:run(1402)) - IPC Server listener on 15012: starting
2024-07-20 16:54:48,265 [main] INFO  om.OzoneManager (OzoneManager.java:startTrashEmptier(2121)) - Trash Interval set to 0. Files deleted won't move to trash
2024-07-20 16:54:48,266 [main] INFO  ozone.MiniOzoneHAClusterImpl (MiniOzoneHAClusterImpl.java:createOMService(517)) - Started OzoneManager omNode-3 RPC server at localhost/127.0.0.1:15012
2024-07-20 16:54:48,270 [main] INFO  ozone.MiniOzoneClusterImpl (MiniOzoneClusterImpl.java:lambda$waitForClusterToBeReady$0(194)) - Nodes are ready. Got 0 of 0 DN Heartbeats.
2024-07-20 16:54:48,270 [main] INFO  ozone.MiniOzoneClusterImpl (MiniOzoneClusterImpl.java:lambda$waitForClusterToBeReady$0(197)) - Cluster exits safe mode
2024-07-20 16:54:48,270 [main] INFO  ozone.MiniOzoneClusterImpl (MiniOzoneClusterImpl.java:lambda$waitForClusterToBeReady$0(199)) - SCM became leader
2024-07-20 16:54:48,292 [main] INFO  shell.TestOzoneTenantShell (TestOzoneTenantShell.java:execute(212)) - Executing shell command with args [list, --om-service-id=om-service-test1]
2024-07-20 16:54:48,661 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=GET_SERVICE_LIST {} | ret=SUCCESS |  
2024-07-20 16:54:48,697 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=LIST_TENANT {} | ret=SUCCESS |  
2024-07-20 16:54:48,701 [main] INFO  shell.TestOzoneTenantShell (TestOzoneTenantShell.java:execute(212)) - Executing shell command with args [create, finance, --om-service-id=om-service-test1]
2024-07-20 16:54:48,722 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=GET_SERVICE_LIST {} | ret=SUCCESS |  
2024-07-20 16:54:48,729 [main] INFO  rpc.RpcClient (RpcClient.java:createTenant(917)) - Creating Tenant: 'finance', with volume: 'finance', forceCreationWhenVolumeExists: false
2024-07-20 16:54:48,746 [IPC Server handler 3 on default port 15004] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:tryWriteLock(109)) - Trying to acquire authorizer write lock from thread 424
2024-07-20 16:54:48,747 [IPC Server handler 3 on default port 15004] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:tryWriteLockThrowOnTimeout(142)) - Acquired authorizer write lock from thread 424 with stamp 384
2024-07-20 16:54:48,747 [IPC Server handler 3 on default port 15004] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:tryWriteLockInOMRequest(160)) - Set omRequestWriteLockStamp to 384, omRequestWriteLockHolderTid to 424
2024-07-20 16:54:48,797 [omNode-1-OMStateMachineApplyTransactionThread - 0] DEBUG tenant.OMTenantCreateRequest (OMTenantCreateRequest.java:validateAndUpdateCache(304)) - volume: '/finance' successfully created
2024-07-20 16:54:48,799 [omNode-2-OMStateMachineApplyTransactionThread - 0] DEBUG tenant.OMTenantCreateRequest (OMTenantCreateRequest.java:validateAndUpdateCache(304)) - volume: '/finance' successfully created
2024-07-20 16:54:48,801 [omNode-1-OMStateMachineApplyTransactionThread - 0] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:unlockWriteInOMRequest(181)) - Restored omRequestWriteLockStamp to 0, omRequestWriteLockHolderTid to 0
2024-07-20 16:54:48,801 [omNode-1-OMStateMachineApplyTransactionThread - 0] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:unlockWrite(122)) - Releasing authorizer write lock from thread 604 with stamp 384
2024-07-20 16:54:48,801 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=CREATE_TENANT {admin=runner, owner=runner, volume=finance, creationTime=1721494488746, modificationTime=1721494488746, quotaInBytes=-1, quotaInNamespace=-1, usedNamespace=0, objectID=-9223372036854775552, updateID=1, tenant=finance} | ret=SUCCESS |  
2024-07-20 16:54:48,802 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=CREATE_VOLUME {admin=runner, owner=runner, volume=finance, creationTime=1721494488746, modificationTime=1721494488746, quotaInBytes=-1, quotaInNamespace=-1, usedNamespace=0, objectID=-9223372036854775552, updateID=1, tenant=finance} | ret=SUCCESS |  
2024-07-20 16:54:48,802 [omNode-2-OMStateMachineApplyTransactionThread - 0] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:unlockWriteInOMRequest(170)) - Authorizer write lock is not held in this lock instance. This OM might be follower, or leader changed. Ignored
2024-07-20 16:54:48,804 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=CREATE_TENANT {admin=runner, owner=runner, volume=finance, creationTime=1721494488746, modificationTime=1721494488746, quotaInBytes=-1, quotaInNamespace=-1, usedNamespace=0, objectID=-9223372036854775552, updateID=1, tenant=finance} | ret=SUCCESS |  
2024-07-20 16:54:48,804 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=CREATE_VOLUME {admin=runner, owner=runner, volume=finance, creationTime=1721494488746, modificationTime=1721494488746, quotaInBytes=-1, quotaInNamespace=-1, usedNamespace=0, objectID=-9223372036854775552, updateID=1, tenant=finance} | ret=SUCCESS |  
2024-07-20 16:54:48,804 [omNode-1-OMStateMachineApplyTransactionThread - 0] INFO  tenant.OMTenantCreateRequest (OMTenantCreateRequest.java:validateAndUpdateCache(387)) - Created tenant 'finance' and volume 'finance'
2024-07-20 16:54:48,806 [omNode-2-OMStateMachineApplyTransactionThread - 0] INFO  tenant.OMTenantCreateRequest (OMTenantCreateRequest.java:validateAndUpdateCache(387)) - Created tenant 'finance' and volume 'finance'
2024-07-20 16:54:48,811 [main] INFO  shell.TestOzoneTenantShell (TestOzoneTenantShell.java:execute(212)) - Executing shell command with args [list, --om-service-id=om-service-test1]
2024-07-20 16:54:48,814 [omNode-2-OMDoubleBufferFlushThread] INFO  helpers.OmKeyInfo (OmKeyInfo.java:getCodec(72)) - OmKeyInfo.getCodec ignorePipeline = true
2024-07-20 16:54:48,817 [omNode-2-OMDoubleBufferFlushThread] INFO  helpers.OmKeyInfo (OmKeyInfo.java:getCodec(72)) - OmKeyInfo.getCodec ignorePipeline = true
2024-07-20 16:54:48,817 [omNode-2-OMDoubleBufferFlushThread] INFO  helpers.OmKeyInfo (OmKeyInfo.java:getCodec(72)) - OmKeyInfo.getCodec ignorePipeline = true
2024-07-20 16:54:48,817 [omNode-2-OMDoubleBufferFlushThread] INFO  helpers.OmKeyInfo (OmKeyInfo.java:getCodec(72)) - OmKeyInfo.getCodec ignorePipeline = true
2024-07-20 16:54:48,817 [omNode-2-OMDoubleBufferFlushThread] INFO  helpers.OmKeyInfo (OmKeyInfo.java:getCodec(72)) - OmKeyInfo.getCodec ignorePipeline = true
2024-07-20 16:54:48,839 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=GET_SERVICE_LIST {} | ret=SUCCESS |  
2024-07-20 16:54:48,847 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=LIST_TENANT {} | ret=SUCCESS |  
2024-07-20 16:54:48,897 | ERROR | OMAudit | user=null | ip= | op=READ_VOLUME {volume=finance} | ret=FAILURE | VOLUME_NOT_FOUND org.apache.hadoop.ozone.om.exceptions.OMException: Volume finance is not found
	at org.apache.hadoop.ozone.om.VolumeManagerImpl.getVolumeInfo(VolumeManagerImpl.java:61)
	at org.apache.hadoop.ozone.om.OzoneManager.getVolumeInfo(OzoneManager.java:2650) 
2024-07-20 16:54:48,927 [main] INFO  shell.TestOzoneTenantShell (TestOzoneTenantShell.java:execute(212)) - Executing shell command with args [--verbose, create, tenant1, --om-service-id=om-service-test1]
2024-07-20 16:54:48,958 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=GET_SERVICE_LIST {} | ret=SUCCESS |  
2024-07-20 16:54:48,962 [main] INFO  rpc.RpcClient (RpcClient.java:createTenant(917)) - Creating Tenant: 'tenant1', with volume: 'tenant1', forceCreationWhenVolumeExists: false
2024-07-20 16:54:48,966 [IPC Server handler 10 on default port 15004] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:tryWriteLock(109)) - Trying to acquire authorizer write lock from thread 431
2024-07-20 16:54:48,966 [IPC Server handler 10 on default port 15004] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:tryWriteLockThrowOnTimeout(142)) - Acquired authorizer write lock from thread 431 with stamp 640
2024-07-20 16:54:48,966 [IPC Server handler 10 on default port 15004] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:tryWriteLockInOMRequest(160)) - Set omRequestWriteLockStamp to 640, omRequestWriteLockHolderTid to 431
2024-07-20 16:54:48,974 [omNode-1-OMStateMachineApplyTransactionThread - 0] DEBUG tenant.OMTenantCreateRequest (OMTenantCreateRequest.java:validateAndUpdateCache(304)) - volume: '/tenant1' successfully created
2024-07-20 16:54:48,975 [omNode-1-OMStateMachineApplyTransactionThread - 0] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:unlockWriteInOMRequest(181)) - Restored omRequestWriteLockStamp to 0, omRequestWriteLockHolderTid to 0
2024-07-20 16:54:48,975 [omNode-1-OMStateMachineApplyTransactionThread - 0] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:unlockWrite(122)) - Releasing authorizer write lock from thread 604 with stamp 640
2024-07-20 16:54:48,975 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=CREATE_TENANT {admin=runner, owner=runner, volume=tenant1, creationTime=1721494488966, modificationTime=1721494488966, quotaInBytes=-1, quotaInNamespace=-1, usedNamespace=0, objectID=-9223372036854775040, updateID=3, tenant=tenant1} | ret=SUCCESS |  
2024-07-20 16:54:48,976 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=CREATE_VOLUME {admin=runner, owner=runner, volume=tenant1, creationTime=1721494488966, modificationTime=1721494488966, quotaInBytes=-1, quotaInNamespace=-1, usedNamespace=0, objectID=-9223372036854775040, updateID=3, tenant=tenant1} | ret=SUCCESS |  
2024-07-20 16:54:48,976 [omNode-1-OMStateMachineApplyTransactionThread - 0] INFO  tenant.OMTenantCreateRequest (OMTenantCreateRequest.java:validateAndUpdateCache(387)) - Created tenant 'tenant1' and volume 'tenant1'
2024-07-20 16:54:48,979 [omNode-3-server-thread1] INFO  server.RaftServer$Division (RaftServerImpl.java:setFirstElection(549)) - omNode-3@group-523986131536: set firstElectionSinceStartup to false for appendEntries
2024-07-20 16:54:48,979 [omNode-3-server-thread1] INFO  server.RaftServer$Division (ServerState.java:setLeader(272)) - omNode-3@group-523986131536: change Leader from null to omNode-1 at term 1 for appendEntries, leader elected after 1325ms
2024-07-20 16:54:48,979 [omNode-3-server-thread1] INFO  server.RaftServer$Division (RaftServerImpl.java:checkInconsistentAppendEntries(1651)) - omNode-3@group-523986131536: Failed appendEntries as previous log entry ((t:1, i:0)) is not found
2024-07-20 16:54:48,979 [omNode-3-server-thread1] INFO  server.RaftServer$Division (RaftServerImpl.java:appendEntriesAsync(1584)) - omNode-3@group-523986131536: appendEntries* reply omNode-1<-omNode-3#740:FAIL-t0,INCONSISTENCY,nextIndex=0,followerCommit=-1,matchIndex=-1
2024-07-20 16:54:48,980 [omNode-2-OMStateMachineApplyTransactionThread - 0] DEBUG tenant.OMTenantCreateRequest (OMTenantCreateRequest.java:validateAndUpdateCache(304)) - volume: '/tenant1' successfully created
2024-07-20 16:54:48,980 [omNode-2-OMStateMachineApplyTransactionThread - 0] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:unlockWriteInOMRequest(170)) - Authorizer write lock is not held in this lock instance. This OM might be follower, or leader changed. Ignored
2024-07-20 16:54:48,980 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=CREATE_TENANT {admin=runner, owner=runner, volume=tenant1, creationTime=1721494488966, modificationTime=1721494488966, quotaInBytes=-1, quotaInNamespace=-1, usedNamespace=0, objectID=-9223372036854775040, updateID=3, tenant=tenant1} | ret=SUCCESS |  
2024-07-20 16:54:48,981 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=CREATE_VOLUME {admin=runner, owner=runner, volume=tenant1, creationTime=1721494488966, modificationTime=1721494488966, quotaInBytes=-1, quotaInNamespace=-1, usedNamespace=0, objectID=-9223372036854775040, updateID=3, tenant=tenant1} | ret=SUCCESS |  
2024-07-20 16:54:48,981 [omNode-2-OMStateMachineApplyTransactionThread - 0] INFO  tenant.OMTenantCreateRequest (OMTenantCreateRequest.java:validateAndUpdateCache(387)) - Created tenant 'tenant1' and volume 'tenant1'
2024-07-20 16:54:48,984 [grpc-default-executor-1] WARN  server.GrpcLogAppender (GrpcLogAppender.java:onNextImpl(519)) - omNode-1@group-523986131536->omNode-3-AppendLogResponseHandler: received INCONSISTENCY reply with nextIndex 0, errorCount=15, request=AppendEntriesRequest:cid=740,entriesCount=3,entries=(t:1, i:1)...(t:1, i:3)
2024-07-20 16:54:48,985 [grpc-default-executor-1] INFO  leader.FollowerInfo (FollowerInfoImpl.java:info(70)) - omNode-1@group-523986131536->omNode-3: setNextIndex nextIndex: updateUnconditionally 4 -> 0
2024-07-20 16:54:48,989 [omNode-3-server-thread1] INFO  server.RaftServer$Division (ServerState.java:setRaftConf(386)) - omNode-3@group-523986131536: set configuration conf: {index: 0, cur=peers:[omNode-3|localhost:15015, omNode-1|localhost:15007, omNode-2|localhost:15011]|listeners:[], old=null}
2024-07-20 16:54:48,990 [omNode-3-server-thread1] INFO  segmented.SegmentedRaftLogWorker (SegmentedRaftLogWorker.java:startLogSegment(433)) - omNode-3@group-523986131536-SegmentedRaftLogWorker: Starting segment from index:0
2024-07-20 16:54:48,990 [omNode-3@group-523986131536-SegmentedRaftLogWorker] INFO  segmented.BufferedWriteChannel (BufferedWriteChannel.java:open(61)) - open log_inprogress_0 at position 0
2024-07-20 16:54:49,002 [omNode-3@group-523986131536-SegmentedRaftLogWorker] INFO  segmented.SegmentedRaftLogWorker (SegmentedRaftLogWorker.java:execute(637)) - omNode-3@group-523986131536-SegmentedRaftLogWorker: created new log segment /home/runner/work/ozone/ozone/hadoop-ozone/integration-test/target/test-dir/MiniOzoneClusterImpl-f7452c88-0c37-4f5d-a1f6-a5ee96fcef81/omNode-3/ratis/c9bc4cf4-3bc3-3c60-a66b-523986131536/current/log_inprogress_0
2024-07-20 16:54:49,007 [omNode-3@group-523986131536-StateMachineUpdater] INFO  ratis.OzoneManagerStateMachine (OzoneManagerStateMachine.java:notifyConfigurationChanged(216)) - Received Configuration change notification from Ratis. New Peer list:
[id: "omNode-3"
address: "localhost:15015"
startupRole: FOLLOWER
, id: "omNode-1"
address: "localhost:15007"
startupRole: FOLLOWER
, id: "omNode-2"
address: "localhost:15011"
startupRole: FOLLOWER
]
2024-07-20 16:54:49,014 [omNode-3-OMStateMachineApplyTransactionThread - 0] DEBUG tenant.OMTenantCreateRequest (OMTenantCreateRequest.java:validateAndUpdateCache(304)) - volume: '/finance' successfully created
2024-07-20 16:54:49,016 [omNode-3-OMStateMachineApplyTransactionThread - 0] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:unlockWriteInOMRequest(170)) - Authorizer write lock is not held in this lock instance. This OM might be follower, or leader changed. Ignored
2024-07-20 16:54:49,016 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=CREATE_TENANT {admin=runner, owner=runner, volume=finance, creationTime=1721494488746, modificationTime=1721494488746, quotaInBytes=-1, quotaInNamespace=-1, usedNamespace=0, objectID=-9223372036854775552, updateID=1, tenant=finance} | ret=SUCCESS |  
2024-07-20 16:54:49,018 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=CREATE_VOLUME {admin=runner, owner=runner, volume=finance, creationTime=1721494488746, modificationTime=1721494488746, quotaInBytes=-1, quotaInNamespace=-1, usedNamespace=0, objectID=-9223372036854775552, updateID=1, tenant=finance} | ret=SUCCESS |  
2024-07-20 16:54:49,018 [omNode-3-OMStateMachineApplyTransactionThread - 0] INFO  tenant.OMTenantCreateRequest (OMTenantCreateRequest.java:validateAndUpdateCache(387)) - Created tenant 'finance' and volume 'finance'
2024-07-20 16:54:49,021 [omNode-3-OMStateMachineApplyTransactionThread - 0] DEBUG tenant.OMTenantCreateRequest (OMTenantCreateRequest.java:validateAndUpdateCache(304)) - volume: '/tenant1' successfully created
2024-07-20 16:54:49,023 [omNode-3-OMStateMachineApplyTransactionThread - 0] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:unlockWriteInOMRequest(170)) - Authorizer write lock is not held in this lock instance. This OM might be follower, or leader changed. Ignored
2024-07-20 16:54:49,023 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=CREATE_TENANT {admin=runner, owner=runner, volume=tenant1, creationTime=1721494488966, modificationTime=1721494488966, quotaInBytes=-1, quotaInNamespace=-1, usedNamespace=0, objectID=-9223372036854775040, updateID=3, tenant=tenant1} | ret=SUCCESS |  
2024-07-20 16:54:49,025 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=CREATE_VOLUME {admin=runner, owner=runner, volume=tenant1, creationTime=1721494488966, modificationTime=1721494488966, quotaInBytes=-1, quotaInNamespace=-1, usedNamespace=0, objectID=-9223372036854775040, updateID=3, tenant=tenant1} | ret=SUCCESS |  
2024-07-20 16:54:49,027 [omNode-3-OMStateMachineApplyTransactionThread - 0] INFO  tenant.OMTenantCreateRequest (OMTenantCreateRequest.java:validateAndUpdateCache(387)) - Created tenant 'tenant1' and volume 'tenant1'
2024-07-20 16:54:49,037 [main] INFO  shell.TestOzoneTenantShell (TestOzoneTenantShell.java:execute(212)) - Executing shell command with args [--verbose, user, assign, alice, --tenant=tenant1, --om-service-id=om-service-test1]
2024-07-20 16:54:49,066 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=GET_SERVICE_LIST {} | ret=SUCCESS |  
2024-07-20 16:54:49,075 [IPC Server handler 14 on default port 15004] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:tryWriteLock(109)) - Trying to acquire authorizer write lock from thread 435
2024-07-20 16:54:49,075 [IPC Server handler 14 on default port 15004] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:tryWriteLockThrowOnTimeout(142)) - Acquired authorizer write lock from thread 435 with stamp 896
2024-07-20 16:54:49,075 [IPC Server handler 14 on default port 15004] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:tryWriteLockInOMRequest(160)) - Set omRequestWriteLockStamp to 896, omRequestWriteLockHolderTid to 435
2024-07-20 16:54:49,090 [omNode-1-OMStateMachineApplyTransactionThread - 0] INFO  om.S3SecretManager (S3SecretManager.java:updateCache(105)) - Updating cache for accessId/user: tenant1$alice.
2024-07-20 16:54:49,091 [omNode-1-OMStateMachineApplyTransactionThread - 0] INFO  om.OMMultiTenantManagerImpl (OMMultiTenantManagerImpl.java:assignUserToTenant(626)) - Adding to cache: user 'alice' accessId 'tenant1$alice' in tenant 'tenant1'
2024-07-20 16:54:49,091 [omNode-2-OMStateMachineApplyTransactionThread - 0] INFO  om.S3SecretManager (S3SecretManager.java:updateCache(105)) - Updating cache for accessId/user: tenant1$alice.
2024-07-20 16:54:49,092 [omNode-2-OMStateMachineApplyTransactionThread - 0] INFO  om.OMMultiTenantManagerImpl (OMMultiTenantManagerImpl.java:assignUserToTenant(626)) - Adding to cache: user 'alice' accessId 'tenant1$alice' in tenant 'tenant1'
2024-07-20 16:54:49,091 [omNode-3-OMStateMachineApplyTransactionThread - 0] INFO  om.S3SecretManager (S3SecretManager.java:updateCache(105)) - Updating cache for accessId/user: tenant1$alice.
2024-07-20 16:54:49,092 [omNode-3-OMStateMachineApplyTransactionThread - 0] INFO  om.OMMultiTenantManagerImpl (OMMultiTenantManagerImpl.java:assignUserToTenant(626)) - Adding to cache: user 'alice' accessId 'tenant1$alice' in tenant 'tenant1'
2024-07-20 16:54:49,094 [omNode-3-OMStateMachineApplyTransactionThread - 0] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:unlockWriteInOMRequest(170)) - Authorizer write lock is not held in this lock instance. This OM might be follower, or leader changed. Ignored
2024-07-20 16:54:49,096 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=TENANT_ASSIGN_USER_ACCESSID {accessId=tenant1$alice, user=alice, tenant=tenant1} | ret=SUCCESS |  
2024-07-20 16:54:49,096 [omNode-2-OMStateMachineApplyTransactionThread - 0] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:unlockWriteInOMRequest(170)) - Authorizer write lock is not held in this lock instance. This OM might be follower, or leader changed. Ignored
2024-07-20 16:54:49,097 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=TENANT_ASSIGN_USER_ACCESSID {accessId=tenant1$alice, user=alice, tenant=tenant1} | ret=SUCCESS |  
2024-07-20 16:54:49,097 [omNode-2-OMStateMachineApplyTransactionThread - 0] INFO  tenant.OMTenantAssignUserAccessIdRequest (OMTenantAssignUserAccessIdRequest.java:validateAndUpdateCache(358)) - Assigned user 'alice' to tenant 'tenant1' with accessId 'tenant1$alice'
2024-07-20 16:54:49,097 [omNode-3-OMStateMachineApplyTransactionThread - 0] INFO  tenant.OMTenantAssignUserAccessIdRequest (OMTenantAssignUserAccessIdRequest.java:validateAndUpdateCache(358)) - Assigned user 'alice' to tenant 'tenant1' with accessId 'tenant1$alice'
2024-07-20 16:54:49,104 [omNode-1-OMStateMachineApplyTransactionThread - 0] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:unlockWriteInOMRequest(181)) - Restored omRequestWriteLockStamp to 0, omRequestWriteLockHolderTid to 0
2024-07-20 16:54:49,104 [omNode-1-OMStateMachineApplyTransactionThread - 0] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:unlockWrite(122)) - Releasing authorizer write lock from thread 604 with stamp 896
2024-07-20 16:54:49,104 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=TENANT_ASSIGN_USER_ACCESSID {accessId=tenant1$alice, user=alice, tenant=tenant1} | ret=SUCCESS |  
2024-07-20 16:54:49,105 [omNode-1-OMStateMachineApplyTransactionThread - 0] INFO  tenant.OMTenantAssignUserAccessIdRequest (OMTenantAssignUserAccessIdRequest.java:validateAndUpdateCache(358)) - Assigned user 'alice' to tenant 'tenant1' with accessId 'tenant1$alice'
2024-07-20 16:54:49,108 [main] INFO  shell.TestOzoneTenantShell (TestOzoneTenantShell.java:execute(212)) - Executing shell command with args [user, assign, bob, --tenant=tenant1, --om-service-id=om-service-test1]
2024-07-20 16:54:49,140 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=GET_SERVICE_LIST {} | ret=SUCCESS |  
2024-07-20 16:54:49,145 [IPC Server handler 16 on default port 15004] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:tryWriteLock(109)) - Trying to acquire authorizer write lock from thread 437
2024-07-20 16:54:49,145 [IPC Server handler 16 on default port 15004] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:tryWriteLockThrowOnTimeout(142)) - Acquired authorizer write lock from thread 437 with stamp 1152
2024-07-20 16:54:49,145 [IPC Server handler 16 on default port 15004] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:tryWriteLockInOMRequest(160)) - Set omRequestWriteLockStamp to 1152, omRequestWriteLockHolderTid to 437
2024-07-20 16:54:49,154 [omNode-1-OMStateMachineApplyTransactionThread - 0] INFO  om.S3SecretManager (S3SecretManager.java:updateCache(105)) - Updating cache for accessId/user: tenant1$bob.
2024-07-20 16:54:49,154 [omNode-1-OMStateMachineApplyTransactionThread - 0] INFO  om.OMMultiTenantManagerImpl (OMMultiTenantManagerImpl.java:assignUserToTenant(626)) - Adding to cache: user 'bob' accessId 'tenant1$bob' in tenant 'tenant1'
2024-07-20 16:54:49,154 [omNode-1-OMStateMachineApplyTransactionThread - 0] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:unlockWriteInOMRequest(181)) - Restored omRequestWriteLockStamp to 0, omRequestWriteLockHolderTid to 0
2024-07-20 16:54:49,154 [omNode-1-OMStateMachineApplyTransactionThread - 0] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:unlockWrite(122)) - Releasing authorizer write lock from thread 604 with stamp 1152
2024-07-20 16:54:49,154 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=TENANT_ASSIGN_USER_ACCESSID {accessId=tenant1$bob, user=bob, tenant=tenant1} | ret=SUCCESS |  
2024-07-20 16:54:49,154 [omNode-1-OMStateMachineApplyTransactionThread - 0] INFO  tenant.OMTenantAssignUserAccessIdRequest (OMTenantAssignUserAccessIdRequest.java:validateAndUpdateCache(358)) - Assigned user 'bob' to tenant 'tenant1' with accessId 'tenant1$bob'
2024-07-20 16:54:49,161 [omNode-3-OMStateMachineApplyTransactionThread - 0] INFO  om.S3SecretManager (S3SecretManager.java:updateCache(105)) - Updating cache for accessId/user: tenant1$bob.
2024-07-20 16:54:49,161 [omNode-3-OMStateMachineApplyTransactionThread - 0] INFO  om.OMMultiTenantManagerImpl (OMMultiTenantManagerImpl.java:assignUserToTenant(626)) - Adding to cache: user 'bob' accessId 'tenant1$bob' in tenant 'tenant1'
2024-07-20 16:54:49,161 [omNode-3-OMStateMachineApplyTransactionThread - 0] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:unlockWriteInOMRequest(170)) - Authorizer write lock is not held in this lock instance. This OM might be follower, or leader changed. Ignored
2024-07-20 16:54:49,161 [omNode-2-OMStateMachineApplyTransactionThread - 0] INFO  om.S3SecretManager (S3SecretManager.java:updateCache(105)) - Updating cache for accessId/user: tenant1$bob.
2024-07-20 16:54:49,161 [omNode-2-OMStateMachineApplyTransactionThread - 0] INFO  om.OMMultiTenantManagerImpl (OMMultiTenantManagerImpl.java:assignUserToTenant(626)) - Adding to cache: user 'bob' accessId 'tenant1$bob' in tenant 'tenant1'
2024-07-20 16:54:49,161 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=TENANT_ASSIGN_USER_ACCESSID {accessId=tenant1$bob, user=bob, tenant=tenant1} | ret=SUCCESS |  
2024-07-20 16:54:49,162 [omNode-2-OMStateMachineApplyTransactionThread - 0] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:unlockWriteInOMRequest(170)) - Authorizer write lock is not held in this lock instance. This OM might be follower, or leader changed. Ignored
2024-07-20 16:54:49,162 [omNode-3-OMStateMachineApplyTransactionThread - 0] INFO  tenant.OMTenantAssignUserAccessIdRequest (OMTenantAssignUserAccessIdRequest.java:validateAndUpdateCache(358)) - Assigned user 'bob' to tenant 'tenant1' with accessId 'tenant1$bob'
2024-07-20 16:54:49,162 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=TENANT_ASSIGN_USER_ACCESSID {accessId=tenant1$bob, user=bob, tenant=tenant1} | ret=SUCCESS |  
2024-07-20 16:54:49,162 [omNode-2-OMStateMachineApplyTransactionThread - 0] INFO  tenant.OMTenantAssignUserAccessIdRequest (OMTenantAssignUserAccessIdRequest.java:validateAndUpdateCache(358)) - Assigned user 'bob' to tenant 'tenant1' with accessId 'tenant1$bob'
2024-07-20 16:54:49,163 [main] INFO  shell.TestOzoneTenantShell (TestOzoneTenantShell.java:execute(212)) - Executing shell command with args [user, list, tenant1, --om-service-id=om-service-test1]
2024-07-20 16:54:49,192 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=GET_SERVICE_LIST {} | ret=SUCCESS |  
2024-07-20 16:54:49,204 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=TENANT_LIST_USER {tenant=tenant1, volume=tenant1, userPrefix=} | ret=SUCCESS |  
2024-07-20 16:54:49,206 [main] INFO  shell.TestOzoneTenantShell (TestOzoneTenantShell.java:execute(212)) - Executing shell command with args [user, list, tenant1, --json, --om-service-id=om-service-test1]
2024-07-20 16:54:49,240 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=GET_SERVICE_LIST {} | ret=SUCCESS |  
2024-07-20 16:54:49,247 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=TENANT_LIST_USER {tenant=tenant1, volume=tenant1, userPrefix=} | ret=SUCCESS |  
2024-07-20 16:54:49,253 [main] INFO  shell.TestOzoneTenantShell (TestOzoneTenantShell.java:execute(212)) - Executing shell command with args [user, list, tenant1, --prefix=b, --om-service-id=om-service-test1]
2024-07-20 16:54:49,284 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=GET_SERVICE_LIST {} | ret=SUCCESS |  
2024-07-20 16:54:49,292 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=TENANT_LIST_USER {tenant=tenant1, volume=tenant1, userPrefix=b} | ret=SUCCESS |  
2024-07-20 16:54:49,294 [main] INFO  shell.TestOzoneTenantShell (TestOzoneTenantShell.java:execute(212)) - Executing shell command with args [user, list, tenant1, --prefix=b, --json, --om-service-id=om-service-test1]
2024-07-20 16:54:49,317 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=GET_SERVICE_LIST {} | ret=SUCCESS |  
2024-07-20 16:54:49,323 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=TENANT_LIST_USER {tenant=tenant1, volume=tenant1, userPrefix=b} | ret=SUCCESS |  
2024-07-20 16:54:49,324 [main] INFO  shell.TestOzoneTenantShell (TestOzoneTenantShell.java:execute(212)) - Executing shell command with args [user, list, unknown, --om-service-id=om-service-test1]
2024-07-20 16:54:49,347 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=GET_SERVICE_LIST {} | ret=SUCCESS |  
2024-07-20 16:54:49,352 [main] INFO  shell.TestOzoneTenantShell (TestOzoneTenantShell.java:execute(212)) - Executing shell command with args [user, revoke, tenant1$alice, --om-service-id=om-service-test1]
2024-07-20 16:54:49,374 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=GET_SERVICE_LIST {} | ret=SUCCESS |  
2024-07-20 16:54:49,385 [IPC Server handler 16 on default port 15004] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:tryWriteLock(109)) - Trying to acquire authorizer write lock from thread 437
2024-07-20 16:54:49,385 [IPC Server handler 16 on default port 15004] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:tryWriteLockThrowOnTimeout(142)) - Acquired authorizer write lock from thread 437 with stamp 1408
2024-07-20 16:54:49,386 [IPC Server handler 16 on default port 15004] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:tryWriteLockInOMRequest(160)) - Set omRequestWriteLockStamp to 1408, omRequestWriteLockHolderTid to 437
2024-07-20 16:54:49,394 [omNode-1-OMStateMachineApplyTransactionThread - 0] INFO  om.OMMultiTenantManagerImpl (OMMultiTenantManagerImpl.java:revokeUserAccessId(640)) - Removing from cache: accessId 'tenant1$alice' in tenant 'tenant1'
2024-07-20 16:54:49,395 [omNode-1-OMStateMachineApplyTransactionThread - 0] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:unlockWriteInOMRequest(181)) - Restored omRequestWriteLockStamp to 0, omRequestWriteLockHolderTid to 0
2024-07-20 16:54:49,395 [omNode-1-OMStateMachineApplyTransactionThread - 0] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:unlockWrite(122)) - Releasing authorizer write lock from thread 604 with stamp 1408
2024-07-20 16:54:49,397 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=TENANT_REVOKE_USER_ACCESSID {accessId=tenant1$alice, userPrincipal=alice, tenant=tenant1} | ret=SUCCESS |  
2024-07-20 16:54:49,396 [omNode-2-OMStateMachineApplyTransactionThread - 0] INFO  om.OMMultiTenantManagerImpl (OMMultiTenantManagerImpl.java:revokeUserAccessId(640)) - Removing from cache: accessId 'tenant1$alice' in tenant 'tenant1'
2024-07-20 16:54:49,396 [omNode-3-OMStateMachineApplyTransactionThread - 0] INFO  om.OMMultiTenantManagerImpl (OMMultiTenantManagerImpl.java:revokeUserAccessId(640)) - Removing from cache: accessId 'tenant1$alice' in tenant 'tenant1'
2024-07-20 16:54:49,397 [omNode-2-OMStateMachineApplyTransactionThread - 0] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:unlockWriteInOMRequest(170)) - Authorizer write lock is not held in this lock instance. This OM might be follower, or leader changed. Ignored
2024-07-20 16:54:49,397 [omNode-3-OMStateMachineApplyTransactionThread - 0] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:unlockWriteInOMRequest(170)) - Authorizer write lock is not held in this lock instance. This OM might be follower, or leader changed. Ignored
2024-07-20 16:54:49,397 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=TENANT_REVOKE_USER_ACCESSID {accessId=tenant1$alice, userPrincipal=alice, tenant=tenant1} | ret=SUCCESS |  
2024-07-20 16:54:49,398 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=TENANT_REVOKE_USER_ACCESSID {accessId=tenant1$alice, userPrincipal=alice, tenant=tenant1} | ret=SUCCESS |  
2024-07-20 16:54:49,398 [omNode-2-OMStateMachineApplyTransactionThread - 0] INFO  tenant.OMTenantRevokeUserAccessIdRequest (OMTenantRevokeUserAccessIdRequest.java:validateAndUpdateCache(255)) - Revoked user 'alice' accessId 'tenant1$alice' to tenant 'tenant1'
2024-07-20 16:54:49,398 [omNode-3-OMStateMachineApplyTransactionThread - 0] INFO  tenant.OMTenantRevokeUserAccessIdRequest (OMTenantRevokeUserAccessIdRequest.java:validateAndUpdateCache(255)) - Revoked user 'alice' accessId 'tenant1$alice' to tenant 'tenant1'
2024-07-20 16:54:49,399 [omNode-1-OMStateMachineApplyTransactionThread - 0] INFO  tenant.OMTenantRevokeUserAccessIdRequest (OMTenantRevokeUserAccessIdRequest.java:validateAndUpdateCache(255)) - Revoked user 'alice' accessId 'tenant1$alice' to tenant 'tenant1'
2024-07-20 16:54:49,402 [main] INFO  shell.TestOzoneTenantShell (TestOzoneTenantShell.java:execute(212)) - Executing shell command with args [--verbose, user, revoke, tenant1$bob, --om-service-id=om-service-test1]
2024-07-20 16:54:49,439 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=GET_SERVICE_LIST {} | ret=SUCCESS |  
2024-07-20 16:54:49,444 [IPC Server handler 8 on default port 15004] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:tryWriteLock(109)) - Trying to acquire authorizer write lock from thread 429
2024-07-20 16:54:49,444 [IPC Server handler 8 on default port 15004] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:tryWriteLockThrowOnTimeout(142)) - Acquired authorizer write lock from thread 429 with stamp 1664
2024-07-20 16:54:49,444 [IPC Server handler 8 on default port 15004] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:tryWriteLockInOMRequest(160)) - Set omRequestWriteLockStamp to 1664, omRequestWriteLockHolderTid to 429
2024-07-20 16:54:49,452 [omNode-1-OMStateMachineApplyTransactionThread - 0] INFO  om.OMMultiTenantManagerImpl (OMMultiTenantManagerImpl.java:revokeUserAccessId(640)) - Removing from cache: accessId 'tenant1$bob' in tenant 'tenant1'
2024-07-20 16:54:49,452 [omNode-1-OMStateMachineApplyTransactionThread - 0] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:unlockWriteInOMRequest(181)) - Restored omRequestWriteLockStamp to 0, omRequestWriteLockHolderTid to 0
2024-07-20 16:54:49,452 [omNode-1-OMStateMachineApplyTransactionThread - 0] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:unlockWrite(122)) - Releasing authorizer write lock from thread 604 with stamp 1664
2024-07-20 16:54:49,453 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=TENANT_REVOKE_USER_ACCESSID {accessId=tenant1$bob, userPrincipal=bob, tenant=tenant1} | ret=SUCCESS |  
2024-07-20 16:54:49,453 [omNode-1-OMStateMachineApplyTransactionThread - 0] INFO  tenant.OMTenantRevokeUserAccessIdRequest (OMTenantRevokeUserAccessIdRequest.java:validateAndUpdateCache(255)) - Revoked user 'bob' accessId 'tenant1$bob' to tenant 'tenant1'
2024-07-20 16:54:49,454 [omNode-3-OMStateMachineApplyTransactionThread - 0] INFO  om.OMMultiTenantManagerImpl (OMMultiTenantManagerImpl.java:revokeUserAccessId(640)) - Removing from cache: accessId 'tenant1$bob' in tenant 'tenant1'
2024-07-20 16:54:49,454 [omNode-3-OMStateMachineApplyTransactionThread - 0] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:unlockWriteInOMRequest(170)) - Authorizer write lock is not held in this lock instance. This OM might be follower, or leader changed. Ignored
2024-07-20 16:54:49,454 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=TENANT_REVOKE_USER_ACCESSID {accessId=tenant1$bob, userPrincipal=bob, tenant=tenant1} | ret=SUCCESS |  
2024-07-20 16:54:49,455 [omNode-3-OMStateMachineApplyTransactionThread - 0] INFO  tenant.OMTenantRevokeUserAccessIdRequest (OMTenantRevokeUserAccessIdRequest.java:validateAndUpdateCache(255)) - Revoked user 'bob' accessId 'tenant1$bob' to tenant 'tenant1'
2024-07-20 16:54:49,455 [omNode-2-OMStateMachineApplyTransactionThread - 0] INFO  om.OMMultiTenantManagerImpl (OMMultiTenantManagerImpl.java:revokeUserAccessId(640)) - Removing from cache: accessId 'tenant1$bob' in tenant 'tenant1'
2024-07-20 16:54:49,455 [omNode-2-OMStateMachineApplyTransactionThread - 0] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:unlockWriteInOMRequest(170)) - Authorizer write lock is not held in this lock instance. This OM might be follower, or leader changed. Ignored
2024-07-20 16:54:49,455 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=TENANT_REVOKE_USER_ACCESSID {accessId=tenant1$bob, userPrincipal=bob, tenant=tenant1} | ret=SUCCESS |  
2024-07-20 16:54:49,455 [omNode-2-OMStateMachineApplyTransactionThread - 0] INFO  tenant.OMTenantRevokeUserAccessIdRequest (OMTenantRevokeUserAccessIdRequest.java:validateAndUpdateCache(255)) - Revoked user 'bob' accessId 'tenant1$bob' to tenant 'tenant1'
2024-07-20 16:54:49,458 [main] INFO  shell.TestOzoneTenantShell (TestOzoneTenantShell.java:execute(212)) - Executing shell command with args [delete, tenant1, --om-service-id=om-service-test1]
2024-07-20 16:54:49,481 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=GET_SERVICE_LIST {} | ret=SUCCESS |  
2024-07-20 16:54:49,490 [IPC Server handler 12 on default port 15004] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:tryWriteLock(109)) - Trying to acquire authorizer write lock from thread 433
2024-07-20 16:54:49,490 [IPC Server handler 12 on default port 15004] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:tryWriteLockThrowOnTimeout(142)) - Acquired authorizer write lock from thread 433 with stamp 1920
2024-07-20 16:54:49,491 [IPC Server handler 12 on default port 15004] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:tryWriteLockInOMRequest(160)) - Set omRequestWriteLockStamp to 1920, omRequestWriteLockHolderTid to 433
2024-07-20 16:54:49,491 [IPC Server handler 12 on default port 15004] INFO  om.OMMultiTenantManagerImpl (OMMultiTenantManagerImpl.java:deleteTenant(323)) - Deleting tenant policies and roles from Ranger: OzoneTenant{tenantId='tenant1', tenantRoleNames=[tenant1-UserRole, tenant1-AdminRole], accessPolicies=[tenant1-VolumeAccess, tenant1-BucketAccess], accountNameSpace=org.apache.hadoop.ozone.om.multitenant.impl.AccountNameSpaceImpl@58789ef2, bucketNameSpace=org.apache.hadoop.ozone.om.multitenant.impl.SingleVolumeTenantNamespace@5cbc6594}
2024-07-20 16:54:49,497 [omNode-1-OMStateMachineApplyTransactionThread - 0] INFO  om.OMMultiTenantManagerImpl (OMMultiTenantManagerImpl.java:deleteTenant(602)) - Removing tenant from in-memory cache: tenant1
2024-07-20 16:54:49,499 [omNode-2-OMStateMachineApplyTransactionThread - 0] INFO  om.OMMultiTenantManagerImpl (OMMultiTenantManagerImpl.java:deleteTenant(602)) - Removing tenant from in-memory cache: tenant1
2024-07-20 16:54:49,499 [omNode-1-OMStateMachineApplyTransactionThread - 0] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:unlockWriteInOMRequest(181)) - Restored omRequestWriteLockStamp to 0, omRequestWriteLockHolderTid to 0
2024-07-20 16:54:49,499 [omNode-1-OMStateMachineApplyTransactionThread - 0] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:unlockWrite(122)) - Releasing authorizer write lock from thread 604 with stamp 1920
2024-07-20 16:54:49,499 [omNode-2-OMStateMachineApplyTransactionThread - 0] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:unlockWriteInOMRequest(170)) - Authorizer write lock is not held in this lock instance. This OM might be follower, or leader changed. Ignored
2024-07-20 16:54:49,499 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=UPDATE_VOLUME {volume=tenant1} | ret=SUCCESS |  
2024-07-20 16:54:49,500 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=DELETE_TENANT {tenant=tenant1} | ret=SUCCESS |  
2024-07-20 16:54:49,500 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=UPDATE_VOLUME {volume=tenant1} | ret=SUCCESS |  
2024-07-20 16:54:49,500 [omNode-2-OMStateMachineApplyTransactionThread - 0] INFO  tenant.OMTenantDeleteRequest (OMTenantDeleteRequest.java:validateAndUpdateCache(242)) - Deleted tenant 'tenant1' and volume 'tenant1'
2024-07-20 16:54:49,500 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=DELETE_TENANT {tenant=tenant1} | ret=SUCCESS |  
2024-07-20 16:54:49,500 [omNode-1-OMStateMachineApplyTransactionThread - 0] INFO  tenant.OMTenantDeleteRequest (OMTenantDeleteRequest.java:validateAndUpdateCache(242)) - Deleted tenant 'tenant1' and volume 'tenant1'
2024-07-20 16:54:49,504 [omNode-3-OMStateMachineApplyTransactionThread - 0] INFO  om.OMMultiTenantManagerImpl (OMMultiTenantManagerImpl.java:deleteTenant(602)) - Removing tenant from in-memory cache: tenant1
2024-07-20 16:54:49,504 [main] INFO  shell.TestOzoneTenantShell (TestOzoneTenantShell.java:execute(212)) - Executing shell command with args [volume, delete, tenant1]
2024-07-20 16:54:49,504 [omNode-3-OMStateMachineApplyTransactionThread - 0] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:unlockWriteInOMRequest(170)) - Authorizer write lock is not held in this lock instance. This OM might be follower, or leader changed. Ignored
2024-07-20 16:54:49,504 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=UPDATE_VOLUME {volume=tenant1} | ret=SUCCESS |  
2024-07-20 16:54:49,505 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=DELETE_TENANT {tenant=tenant1} | ret=SUCCESS |  
2024-07-20 16:54:49,505 [omNode-3-OMStateMachineApplyTransactionThread - 0] INFO  tenant.OMTenantDeleteRequest (OMTenantDeleteRequest.java:validateAndUpdateCache(242)) - Deleted tenant 'tenant1' and volume 'tenant1'
2024-07-20 16:54:49,524 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=GET_SERVICE_LIST {} | ret=SUCCESS |  
2024-07-20 16:54:49,540 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=DELETE_VOLUME {volume=tenant1} | ret=SUCCESS |  
2024-07-20 16:54:49,542 [main] INFO  shell.TestOzoneTenantShell (TestOzoneTenantShell.java:execute(212)) - Executing shell command with args [list, --om-service-id=om-service-test1]
2024-07-20 16:54:49,543 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=DELETE_VOLUME {volume=tenant1} | ret=SUCCESS |  
2024-07-20 16:54:49,546 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=DELETE_VOLUME {volume=tenant1} | ret=SUCCESS |  
2024-07-20 16:54:49,568 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=GET_SERVICE_LIST {} | ret=SUCCESS |  
2024-07-20 16:54:49,572 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=LIST_TENANT {} | ret=SUCCESS |  
2024-07-20 16:54:49,590 [main] INFO  shell.TestOzoneTenantShell (TestOzoneTenantShell.java:execute(212)) - Executing shell command with args [create, tenant-test-tenant-admin-ops, --om-service-id=om-service-test1]
2024-07-20 16:54:49,614 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=GET_SERVICE_LIST {} | ret=SUCCESS |  
2024-07-20 16:54:49,617 [main] INFO  rpc.RpcClient (RpcClient.java:createTenant(917)) - Creating Tenant: 'tenant-test-tenant-admin-ops', with volume: 'tenant-test-tenant-admin-ops', forceCreationWhenVolumeExists: false
2024-07-20 16:54:49,619 [IPC Server handler 1 on default port 15004] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:tryWriteLock(109)) - Trying to acquire authorizer write lock from thread 422
2024-07-20 16:54:49,619 [IPC Server handler 1 on default port 15004] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:tryWriteLockThrowOnTimeout(142)) - Acquired authorizer write lock from thread 422 with stamp 2176
2024-07-20 16:54:49,619 [IPC Server handler 1 on default port 15004] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:tryWriteLockInOMRequest(160)) - Set omRequestWriteLockStamp to 2176, omRequestWriteLockHolderTid to 422
2024-07-20 16:54:49,628 [omNode-1-OMStateMachineApplyTransactionThread - 0] DEBUG tenant.OMTenantCreateRequest (OMTenantCreateRequest.java:validateAndUpdateCache(304)) - volume: '/tenant-test-tenant-admin-ops' successfully created
2024-07-20 16:54:49,629 [omNode-1-OMStateMachineApplyTransactionThread - 0] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:unlockWriteInOMRequest(181)) - Restored omRequestWriteLockStamp to 0, omRequestWriteLockHolderTid to 0
2024-07-20 16:54:49,629 [omNode-1-OMStateMachineApplyTransactionThread - 0] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:unlockWrite(122)) - Releasing authorizer write lock from thread 604 with stamp 2176
2024-07-20 16:54:49,629 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=CREATE_TENANT {admin=runner, owner=runner, volume=tenant-test-tenant-admin-ops, creationTime=1721494489619, modificationTime=1721494489619, quotaInBytes=-1, quotaInNamespace=-1, usedNamespace=0, objectID=-9223372036854771456, updateID=17, tenant=tenant-test-tenant-admin-ops} | ret=SUCCESS |  
2024-07-20 16:54:49,629 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=CREATE_VOLUME {admin=runner, owner=runner, volume=tenant-test-tenant-admin-ops, creationTime=1721494489619, modificationTime=1721494489619, quotaInBytes=-1, quotaInNamespace=-1, usedNamespace=0, objectID=-9223372036854771456, updateID=17, tenant=tenant-test-tenant-admin-ops} | ret=SUCCESS |  
2024-07-20 16:54:49,630 [omNode-1-OMStateMachineApplyTransactionThread - 0] INFO  tenant.OMTenantCreateRequest (OMTenantCreateRequest.java:validateAndUpdateCache(387)) - Created tenant 'tenant-test-tenant-admin-ops' and volume 'tenant-test-tenant-admin-ops'
2024-07-20 16:54:49,631 [omNode-2-OMStateMachineApplyTransactionThread - 0] DEBUG tenant.OMTenantCreateRequest (OMTenantCreateRequest.java:validateAndUpdateCache(304)) - volume: '/tenant-test-tenant-admin-ops' successfully created
2024-07-20 16:54:49,631 [omNode-2-OMStateMachineApplyTransactionThread - 0] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:unlockWriteInOMRequest(170)) - Authorizer write lock is not held in this lock instance. This OM might be follower, or leader changed. Ignored
2024-07-20 16:54:49,631 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=CREATE_TENANT {admin=runner, owner=runner, volume=tenant-test-tenant-admin-ops, creationTime=1721494489619, modificationTime=1721494489619, quotaInBytes=-1, quotaInNamespace=-1, usedNamespace=0, objectID=-9223372036854771456, updateID=17, tenant=tenant-test-tenant-admin-ops} | ret=SUCCESS |  
2024-07-20 16:54:49,631 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=CREATE_VOLUME {admin=runner, owner=runner, volume=tenant-test-tenant-admin-ops, creationTime=1721494489619, modificationTime=1721494489619, quotaInBytes=-1, quotaInNamespace=-1, usedNamespace=0, objectID=-9223372036854771456, updateID=17, tenant=tenant-test-tenant-admin-ops} | ret=SUCCESS |  
2024-07-20 16:54:49,632 [omNode-2-OMStateMachineApplyTransactionThread - 0] INFO  tenant.OMTenantCreateRequest (OMTenantCreateRequest.java:validateAndUpdateCache(387)) - Created tenant 'tenant-test-tenant-admin-ops' and volume 'tenant-test-tenant-admin-ops'
2024-07-20 16:54:49,635 [omNode-3-OMStateMachineApplyTransactionThread - 0] DEBUG tenant.OMTenantCreateRequest (OMTenantCreateRequest.java:validateAndUpdateCache(304)) - volume: '/tenant-test-tenant-admin-ops' successfully created
2024-07-20 16:54:49,636 [main] INFO  shell.TestOzoneTenantShell (TestOzoneTenantShell.java:execute(212)) - Executing shell command with args [user, assign, alice, --tenant=tenant-test-tenant-admin-ops, --om-service-id=om-service-test1]
2024-07-20 16:54:49,636 [omNode-3-OMStateMachineApplyTransactionThread - 0] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:unlockWriteInOMRequest(170)) - Authorizer write lock is not held in this lock instance. This OM might be follower, or leader changed. Ignored
2024-07-20 16:54:49,636 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=CREATE_TENANT {admin=runner, owner=runner, volume=tenant-test-tenant-admin-ops, creationTime=1721494489619, modificationTime=1721494489619, quotaInBytes=-1, quotaInNamespace=-1, usedNamespace=0, objectID=-9223372036854771456, updateID=17, tenant=tenant-test-tenant-admin-ops} | ret=SUCCESS |  
2024-07-20 16:54:49,636 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=CREATE_VOLUME {admin=runner, owner=runner, volume=tenant-test-tenant-admin-ops, creationTime=1721494489619, modificationTime=1721494489619, quotaInBytes=-1, quotaInNamespace=-1, usedNamespace=0, objectID=-9223372036854771456, updateID=17, tenant=tenant-test-tenant-admin-ops} | ret=SUCCESS |  
2024-07-20 16:54:49,637 [omNode-3-OMStateMachineApplyTransactionThread - 0] INFO  tenant.OMTenantCreateRequest (OMTenantCreateRequest.java:validateAndUpdateCache(387)) - Created tenant 'tenant-test-tenant-admin-ops' and volume 'tenant-test-tenant-admin-ops'
2024-07-20 16:54:49,657 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=GET_SERVICE_LIST {} | ret=SUCCESS |  
2024-07-20 16:54:49,662 [IPC Server handler 3 on default port 15004] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:tryWriteLock(109)) - Trying to acquire authorizer write lock from thread 424
2024-07-20 16:54:49,662 [IPC Server handler 3 on default port 15004] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:tryWriteLockThrowOnTimeout(142)) - Acquired authorizer write lock from thread 424 with stamp 2432
2024-07-20 16:54:49,662 [IPC Server handler 3 on default port 15004] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:tryWriteLockInOMRequest(160)) - Set omRequestWriteLockStamp to 2432, omRequestWriteLockHolderTid to 424
2024-07-20 16:54:49,668 [omNode-1-OMStateMachineApplyTransactionThread - 0] INFO  om.S3SecretManager (S3SecretManager.java:updateCache(105)) - Updating cache for accessId/user: tenant-test-tenant-admin-ops$alice.
2024-07-20 16:54:49,668 [omNode-1-OMStateMachineApplyTransactionThread - 0] INFO  om.OMMultiTenantManagerImpl (OMMultiTenantManagerImpl.java:assignUserToTenant(626)) - Adding to cache: user 'alice' accessId 'tenant-test-tenant-admin-ops$alice' in tenant 'tenant-test-tenant-admin-ops'
2024-07-20 16:54:49,669 [omNode-1-OMStateMachineApplyTransactionThread - 0] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:unlockWriteInOMRequest(181)) - Restored omRequestWriteLockStamp to 0, omRequestWriteLockHolderTid to 0
2024-07-20 16:54:49,669 [omNode-1-OMStateMachineApplyTransactionThread - 0] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:unlockWrite(122)) - Releasing authorizer write lock from thread 604 with stamp 2432
2024-07-20 16:54:49,669 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=TENANT_ASSIGN_USER_ACCESSID {accessId=tenant-test-tenant-admin-ops$alice, user=alice, tenant=tenant-test-tenant-admin-ops} | ret=SUCCESS |  
2024-07-20 16:54:49,669 [omNode-1-OMStateMachineApplyTransactionThread - 0] INFO  tenant.OMTenantAssignUserAccessIdRequest (OMTenantAssignUserAccessIdRequest.java:validateAndUpdateCache(358)) - Assigned user 'alice' to tenant 'tenant-test-tenant-admin-ops' with accessId 'tenant-test-tenant-admin-ops$alice'
2024-07-20 16:54:49,672 [main] INFO  shell.TestOzoneTenantShell (TestOzoneTenantShell.java:execute(212)) - Executing shell command with args [user, assign, bob, --tenant=tenant-test-tenant-admin-ops, --om-service-id=om-service-test1]
2024-07-20 16:54:49,676 [omNode-3-OMStateMachineApplyTransactionThread - 0] INFO  om.S3SecretManager (S3SecretManager.java:updateCache(105)) - Updating cache for accessId/user: tenant-test-tenant-admin-ops$alice.
2024-07-20 16:54:49,676 [omNode-3-OMStateMachineApplyTransactionThread - 0] INFO  om.OMMultiTenantManagerImpl (OMMultiTenantManagerImpl.java:assignUserToTenant(626)) - Adding to cache: user 'alice' accessId 'tenant-test-tenant-admin-ops$alice' in tenant 'tenant-test-tenant-admin-ops'
2024-07-20 16:54:49,676 [omNode-3-OMStateMachineApplyTransactionThread - 0] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:unlockWriteInOMRequest(170)) - Authorizer write lock is not held in this lock instance. This OM might be follower, or leader changed. Ignored
2024-07-20 16:54:49,676 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=TENANT_ASSIGN_USER_ACCESSID {accessId=tenant-test-tenant-admin-ops$alice, user=alice, tenant=tenant-test-tenant-admin-ops} | ret=SUCCESS |  
2024-07-20 16:54:49,676 [omNode-3-OMStateMachineApplyTransactionThread - 0] INFO  tenant.OMTenantAssignUserAccessIdRequest (OMTenantAssignUserAccessIdRequest.java:validateAndUpdateCache(358)) - Assigned user 'alice' to tenant 'tenant-test-tenant-admin-ops' with accessId 'tenant-test-tenant-admin-ops$alice'
2024-07-20 16:54:49,683 [omNode-2-OMStateMachineApplyTransactionThread - 0] INFO  om.S3SecretManager (S3SecretManager.java:updateCache(105)) - Updating cache for accessId/user: tenant-test-tenant-admin-ops$alice.
2024-07-20 16:54:49,683 [omNode-2-OMStateMachineApplyTransactionThread - 0] INFO  om.OMMultiTenantManagerImpl (OMMultiTenantManagerImpl.java:assignUserToTenant(626)) - Adding to cache: user 'alice' accessId 'tenant-test-tenant-admin-ops$alice' in tenant 'tenant-test-tenant-admin-ops'
2024-07-20 16:54:49,683 [omNode-2-OMStateMachineApplyTransactionThread - 0] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:unlockWriteInOMRequest(170)) - Authorizer write lock is not held in this lock instance. This OM might be follower, or leader changed. Ignored
2024-07-20 16:54:49,683 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=TENANT_ASSIGN_USER_ACCESSID {accessId=tenant-test-tenant-admin-ops$alice, user=alice, tenant=tenant-test-tenant-admin-ops} | ret=SUCCESS |  
2024-07-20 16:54:49,683 [omNode-2-OMStateMachineApplyTransactionThread - 0] INFO  tenant.OMTenantAssignUserAccessIdRequest (OMTenantAssignUserAccessIdRequest.java:validateAndUpdateCache(358)) - Assigned user 'alice' to tenant 'tenant-test-tenant-admin-ops' with accessId 'tenant-test-tenant-admin-ops$alice'
2024-07-20 16:54:49,695 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=GET_SERVICE_LIST {} | ret=SUCCESS |  
2024-07-20 16:54:49,699 [IPC Server handler 4 on default port 15004] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:tryWriteLock(109)) - Trying to acquire authorizer write lock from thread 425
2024-07-20 16:54:49,699 [IPC Server handler 4 on default port 15004] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:tryWriteLockThrowOnTimeout(142)) - Acquired authorizer write lock from thread 425 with stamp 2688
2024-07-20 16:54:49,699 [IPC Server handler 4 on default port 15004] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:tryWriteLockInOMRequest(160)) - Set omRequestWriteLockStamp to 2688, omRequestWriteLockHolderTid to 425
2024-07-20 16:54:49,706 [omNode-1-OMStateMachineApplyTransactionThread - 0] INFO  om.S3SecretManager (S3SecretManager.java:updateCache(105)) - Updating cache for accessId/user: tenant-test-tenant-admin-ops$bob.
2024-07-20 16:54:49,706 [omNode-1-OMStateMachineApplyTransactionThread - 0] INFO  om.OMMultiTenantManagerImpl (OMMultiTenantManagerImpl.java:assignUserToTenant(626)) - Adding to cache: user 'bob' accessId 'tenant-test-tenant-admin-ops$bob' in tenant 'tenant-test-tenant-admin-ops'
2024-07-20 16:54:49,706 [omNode-1-OMStateMachineApplyTransactionThread - 0] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:unlockWriteInOMRequest(181)) - Restored omRequestWriteLockStamp to 0, omRequestWriteLockHolderTid to 0
2024-07-20 16:54:49,706 [omNode-1-OMStateMachineApplyTransactionThread - 0] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:unlockWrite(122)) - Releasing authorizer write lock from thread 604 with stamp 2688
2024-07-20 16:54:49,706 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=TENANT_ASSIGN_USER_ACCESSID {accessId=tenant-test-tenant-admin-ops$bob, user=bob, tenant=tenant-test-tenant-admin-ops} | ret=SUCCESS |  
2024-07-20 16:54:49,707 [omNode-1-OMStateMachineApplyTransactionThread - 0] INFO  tenant.OMTenantAssignUserAccessIdRequest (OMTenantAssignUserAccessIdRequest.java:validateAndUpdateCache(358)) - Assigned user 'bob' to tenant 'tenant-test-tenant-admin-ops' with accessId 'tenant-test-tenant-admin-ops$bob'
2024-07-20 16:54:49,708 [main] INFO  shell.TestOzoneTenantShell (TestOzoneTenantShell.java:execute(212)) - Executing shell command with args [user, assign-admin, tenant-test-tenant-admin-ops$alice, --tenant=tenant-test-tenant-admin-ops, --delegated=true, --om-service-id=om-service-test1]
2024-07-20 16:54:49,713 [omNode-2-OMStateMachineApplyTransactionThread - 0] INFO  om.S3SecretManager (S3SecretManager.java:updateCache(105)) - Updating cache for accessId/user: tenant-test-tenant-admin-ops$bob.
2024-07-20 16:54:49,713 [omNode-2-OMStateMachineApplyTransactionThread - 0] INFO  om.OMMultiTenantManagerImpl (OMMultiTenantManagerImpl.java:assignUserToTenant(626)) - Adding to cache: user 'bob' accessId 'tenant-test-tenant-admin-ops$bob' in tenant 'tenant-test-tenant-admin-ops'
2024-07-20 16:54:49,713 [omNode-3-OMStateMachineApplyTransactionThread - 0] INFO  om.S3SecretManager (S3SecretManager.java:updateCache(105)) - Updating cache for accessId/user: tenant-test-tenant-admin-ops$bob.
2024-07-20 16:54:49,713 [omNode-3-OMStateMachineApplyTransactionThread - 0] INFO  om.OMMultiTenantManagerImpl (OMMultiTenantManagerImpl.java:assignUserToTenant(626)) - Adding to cache: user 'bob' accessId 'tenant-test-tenant-admin-ops$bob' in tenant 'tenant-test-tenant-admin-ops'
2024-07-20 16:54:49,713 [omNode-3-OMStateMachineApplyTransactionThread - 0] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:unlockWriteInOMRequest(170)) - Authorizer write lock is not held in this lock instance. This OM might be follower, or leader changed. Ignored
2024-07-20 16:54:49,713 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=TENANT_ASSIGN_USER_ACCESSID {accessId=tenant-test-tenant-admin-ops$bob, user=bob, tenant=tenant-test-tenant-admin-ops} | ret=SUCCESS |  
2024-07-20 16:54:49,714 [omNode-3-OMStateMachineApplyTransactionThread - 0] INFO  tenant.OMTenantAssignUserAccessIdRequest (OMTenantAssignUserAccessIdRequest.java:validateAndUpdateCache(358)) - Assigned user 'bob' to tenant 'tenant-test-tenant-admin-ops' with accessId 'tenant-test-tenant-admin-ops$bob'
2024-07-20 16:54:49,713 [omNode-2-OMStateMachineApplyTransactionThread - 0] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:unlockWriteInOMRequest(170)) - Authorizer write lock is not held in this lock instance. This OM might be follower, or leader changed. Ignored
2024-07-20 16:54:49,715 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=TENANT_ASSIGN_USER_ACCESSID {accessId=tenant-test-tenant-admin-ops$bob, user=bob, tenant=tenant-test-tenant-admin-ops} | ret=SUCCESS |  
2024-07-20 16:54:49,715 [omNode-2-OMStateMachineApplyTransactionThread - 0] INFO  tenant.OMTenantAssignUserAccessIdRequest (OMTenantAssignUserAccessIdRequest.java:validateAndUpdateCache(358)) - Assigned user 'bob' to tenant 'tenant-test-tenant-admin-ops' with accessId 'tenant-test-tenant-admin-ops$bob'
2024-07-20 16:54:49,736 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=GET_SERVICE_LIST {} | ret=SUCCESS |  
2024-07-20 16:54:49,744 [IPC Server handler 10 on default port 15004] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:tryWriteLock(109)) - Trying to acquire authorizer write lock from thread 431
2024-07-20 16:54:49,744 [IPC Server handler 10 on default port 15004] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:tryWriteLockThrowOnTimeout(142)) - Acquired authorizer write lock from thread 431 with stamp 2944
2024-07-20 16:54:49,744 [IPC Server handler 10 on default port 15004] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:tryWriteLockInOMRequest(160)) - Set omRequestWriteLockStamp to 2944, omRequestWriteLockHolderTid to 431
2024-07-20 16:54:49,752 [omNode-1-OMStateMachineApplyTransactionThread - 0] INFO  om.OMMultiTenantManagerImpl (OMMultiTenantManagerImpl.java:assignTenantAdmin(667)) - Updating cache: accessId 'tenant-test-tenant-admin-ops$alice' isAdmin 'true' isDelegated 'true'
2024-07-20 16:54:49,753 [omNode-1-OMStateMachineApplyTransactionThread - 0] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:unlockWriteInOMRequest(181)) - Restored omRequestWriteLockStamp to 0, omRequestWriteLockHolderTid to 0
2024-07-20 16:54:49,753 [omNode-1-OMStateMachineApplyTransactionThread - 0] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:unlockWrite(122)) - Releasing authorizer write lock from thread 604 with stamp 2944
2024-07-20 16:54:49,754 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=TENANT_ASSIGN_ADMIN {tenant=tenant-test-tenant-admin-ops} | ret=SUCCESS |  
2024-07-20 16:54:49,754 [omNode-1-OMStateMachineApplyTransactionThread - 0] INFO  tenant.OMTenantAssignAdminRequest (OMTenantAssignAdminRequest.java:validateAndUpdateCache(245)) - Assigned admin to accessId 'tenant-test-tenant-admin-ops$alice' in tenant 'tenant-test-tenant-admin-ops', delegated: true
2024-07-20 16:54:49,755 [omNode-3-OMStateMachineApplyTransactionThread - 0] INFO  om.OMMultiTenantManagerImpl (OMMultiTenantManagerImpl.java:assignTenantAdmin(667)) - Updating cache: accessId 'tenant-test-tenant-admin-ops$alice' isAdmin 'true' isDelegated 'true'
2024-07-20 16:54:49,755 [omNode-3-OMStateMachineApplyTransactionThread - 0] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:unlockWriteInOMRequest(170)) - Authorizer write lock is not held in this lock instance. This OM might be follower, or leader changed. Ignored
2024-07-20 16:54:49,755 [main] INFO  shell.TestOzoneTenantShell (TestOzoneTenantShell.java:execute(212)) - Executing shell command with args [user, assign-admin, tenant-test-tenant-admin-ops$bob, --tenant=tenant-test-tenant-admin-ops, --delegated=false, --om-service-id=om-service-test1]
2024-07-20 16:54:49,758 [omNode-2-OMStateMachineApplyTransactionThread - 0] INFO  om.OMMultiTenantManagerImpl (OMMultiTenantManagerImpl.java:assignTenantAdmin(667)) - Updating cache: accessId 'tenant-test-tenant-admin-ops$alice' isAdmin 'true' isDelegated 'true'
2024-07-20 16:54:49,758 [omNode-2-OMStateMachineApplyTransactionThread - 0] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:unlockWriteInOMRequest(170)) - Authorizer write lock is not held in this lock instance. This OM might be follower, or leader changed. Ignored
2024-07-20 16:54:49,755 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=TENANT_ASSIGN_ADMIN {tenant=tenant-test-tenant-admin-ops} | ret=SUCCESS |  
2024-07-20 16:54:49,758 [omNode-3-OMStateMachineApplyTransactionThread - 0] INFO  tenant.OMTenantAssignAdminRequest (OMTenantAssignAdminRequest.java:validateAndUpdateCache(245)) - Assigned admin to accessId 'tenant-test-tenant-admin-ops$alice' in tenant 'tenant-test-tenant-admin-ops', delegated: true
2024-07-20 16:54:49,758 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=TENANT_ASSIGN_ADMIN {tenant=tenant-test-tenant-admin-ops} | ret=SUCCESS |  
2024-07-20 16:54:49,759 [omNode-2-OMStateMachineApplyTransactionThread - 0] INFO  tenant.OMTenantAssignAdminRequest (OMTenantAssignAdminRequest.java:validateAndUpdateCache(245)) - Assigned admin to accessId 'tenant-test-tenant-admin-ops$alice' in tenant 'tenant-test-tenant-admin-ops', delegated: true
2024-07-20 16:54:49,783 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=GET_SERVICE_LIST {} | ret=SUCCESS |  
2024-07-20 16:54:49,787 [IPC Server handler 14 on default port 15004] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:tryWriteLock(109)) - Trying to acquire authorizer write lock from thread 435
2024-07-20 16:54:49,787 [IPC Server handler 14 on default port 15004] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:tryWriteLockThrowOnTimeout(142)) - Acquired authorizer write lock from thread 435 with stamp 3200
2024-07-20 16:54:49,788 [IPC Server handler 14 on default port 15004] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:tryWriteLockInOMRequest(160)) - Set omRequestWriteLockStamp to 3200, omRequestWriteLockHolderTid to 435
2024-07-20 16:54:49,794 [omNode-1-OMStateMachineApplyTransactionThread - 0] INFO  om.OMMultiTenantManagerImpl (OMMultiTenantManagerImpl.java:assignTenantAdmin(667)) - Updating cache: accessId 'tenant-test-tenant-admin-ops$bob' isAdmin 'true' isDelegated 'false'
2024-07-20 16:54:49,794 [omNode-1-OMStateMachineApplyTransactionThread - 0] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:unlockWriteInOMRequest(181)) - Restored omRequestWriteLockStamp to 0, omRequestWriteLockHolderTid to 0
2024-07-20 16:54:49,794 [omNode-1-OMStateMachineApplyTransactionThread - 0] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:unlockWrite(122)) - Releasing authorizer write lock from thread 604 with stamp 3200
2024-07-20 16:54:49,794 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=TENANT_ASSIGN_ADMIN {tenant=tenant-test-tenant-admin-ops} | ret=SUCCESS |  
2024-07-20 16:54:49,795 [omNode-1-OMStateMachineApplyTransactionThread - 0] INFO  tenant.OMTenantAssignAdminRequest (OMTenantAssignAdminRequest.java:validateAndUpdateCache(245)) - Assigned admin to accessId 'tenant-test-tenant-admin-ops$bob' in tenant 'tenant-test-tenant-admin-ops', delegated: false
2024-07-20 16:54:49,796 [omNode-3-OMStateMachineApplyTransactionThread - 0] INFO  om.OMMultiTenantManagerImpl (OMMultiTenantManagerImpl.java:assignTenantAdmin(667)) - Updating cache: accessId 'tenant-test-tenant-admin-ops$bob' isAdmin 'true' isDelegated 'false'
2024-07-20 16:54:49,796 [omNode-3-OMStateMachineApplyTransactionThread - 0] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:unlockWriteInOMRequest(170)) - Authorizer write lock is not held in this lock instance. This OM might be follower, or leader changed. Ignored
2024-07-20 16:54:49,797 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=TENANT_ASSIGN_ADMIN {tenant=tenant-test-tenant-admin-ops} | ret=SUCCESS |  
2024-07-20 16:54:49,797 [omNode-3-OMStateMachineApplyTransactionThread - 0] INFO  tenant.OMTenantAssignAdminRequest (OMTenantAssignAdminRequest.java:validateAndUpdateCache(245)) - Assigned admin to accessId 'tenant-test-tenant-admin-ops$bob' in tenant 'tenant-test-tenant-admin-ops', delegated: false
2024-07-20 16:54:49,797 [main] INFO  shell.TestOzoneTenantShell (TestOzoneTenantShell.java:execute(212)) - Executing shell command with args [user, assign, carol, --tenant=tenant-test-tenant-admin-ops, --om-service-id=om-service-test1]
2024-07-20 16:54:49,796 [omNode-2-OMStateMachineApplyTransactionThread - 0] INFO  om.OMMultiTenantManagerImpl (OMMultiTenantManagerImpl.java:assignTenantAdmin(667)) - Updating cache: accessId 'tenant-test-tenant-admin-ops$bob' isAdmin 'true' isDelegated 'false'
2024-07-20 16:54:49,797 [omNode-2-OMStateMachineApplyTransactionThread - 0] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:unlockWriteInOMRequest(170)) - Authorizer write lock is not held in this lock instance. This OM might be follower, or leader changed. Ignored
2024-07-20 16:54:49,798 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=TENANT_ASSIGN_ADMIN {tenant=tenant-test-tenant-admin-ops} | ret=SUCCESS |  
2024-07-20 16:54:49,798 [omNode-2-OMStateMachineApplyTransactionThread - 0] INFO  tenant.OMTenantAssignAdminRequest (OMTenantAssignAdminRequest.java:validateAndUpdateCache(245)) - Assigned admin to accessId 'tenant-test-tenant-admin-ops$bob' in tenant 'tenant-test-tenant-admin-ops', delegated: false
2024-07-20 16:54:49,825 | INFO  | OMAudit | user=alice | ip=127.0.0.1 | op=GET_SERVICE_LIST {} | ret=SUCCESS |  
2024-07-20 16:54:49,830 [IPC Server handler 16 on default port 15004] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:tryWriteLock(109)) - Trying to acquire authorizer write lock from thread 437
2024-07-20 16:54:49,830 [IPC Server handler 16 on default port 15004] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:tryWriteLockThrowOnTimeout(142)) - Acquired authorizer write lock from thread 437 with stamp 3456
2024-07-20 16:54:49,830 [IPC Server handler 16 on default port 15004] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:tryWriteLockInOMRequest(160)) - Set omRequestWriteLockStamp to 3456, omRequestWriteLockHolderTid to 437
2024-07-20 16:54:49,838 [omNode-1-OMStateMachineApplyTransactionThread - 0] INFO  om.S3SecretManager (S3SecretManager.java:updateCache(105)) - Updating cache for accessId/user: tenant-test-tenant-admin-ops$carol.
2024-07-20 16:54:49,838 [omNode-1-OMStateMachineApplyTransactionThread - 0] INFO  om.OMMultiTenantManagerImpl (OMMultiTenantManagerImpl.java:assignUserToTenant(626)) - Adding to cache: user 'carol' accessId 'tenant-test-tenant-admin-ops$carol' in tenant 'tenant-test-tenant-admin-ops'
2024-07-20 16:54:49,838 [omNode-1-OMStateMachineApplyTransactionThread - 0] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:unlockWriteInOMRequest(181)) - Restored omRequestWriteLockStamp to 0, omRequestWriteLockHolderTid to 0
2024-07-20 16:54:49,838 [omNode-1-OMStateMachineApplyTransactionThread - 0] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:unlockWrite(122)) - Releasing authorizer write lock from thread 604 with stamp 3456
2024-07-20 16:54:49,839 | INFO  | OMAudit | user=alice | ip=127.0.0.1 | op=TENANT_ASSIGN_USER_ACCESSID {accessId=tenant-test-tenant-admin-ops$carol, user=carol, tenant=tenant-test-tenant-admin-ops} | ret=SUCCESS |  
2024-07-20 16:54:49,839 [omNode-1-OMStateMachineApplyTransactionThread - 0] INFO  tenant.OMTenantAssignUserAccessIdRequest (OMTenantAssignUserAccessIdRequest.java:validateAndUpdateCache(358)) - Assigned user 'carol' to tenant 'tenant-test-tenant-admin-ops' with accessId 'tenant-test-tenant-admin-ops$carol'
2024-07-20 16:54:49,842 [main] INFO  shell.TestOzoneTenantShell (TestOzoneTenantShell.java:execute(212)) - Executing shell command with args [user, setsecret, tenant-test-tenant-admin-ops$alice, --secret=somesecret2, --om-service-id=om-service-test1]
2024-07-20 16:54:49,846 [omNode-2-OMStateMachineApplyTransactionThread - 0] INFO  om.S3SecretManager (S3SecretManager.java:updateCache(105)) - Updating cache for accessId/user: tenant-test-tenant-admin-ops$carol.
2024-07-20 16:54:49,846 [omNode-2-OMStateMachineApplyTransactionThread - 0] INFO  om.OMMultiTenantManagerImpl (OMMultiTenantManagerImpl.java:assignUserToTenant(626)) - Adding to cache: user 'carol' accessId 'tenant-test-tenant-admin-ops$carol' in tenant 'tenant-test-tenant-admin-ops'
2024-07-20 16:54:49,846 [omNode-2-OMStateMachineApplyTransactionThread - 0] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:unlockWriteInOMRequest(170)) - Authorizer write lock is not held in this lock instance. This OM might be follower, or leader changed. Ignored
2024-07-20 16:54:49,846 | INFO  | OMAudit | user=alice | ip=127.0.0.1 | op=TENANT_ASSIGN_USER_ACCESSID {accessId=tenant-test-tenant-admin-ops$carol, user=carol, tenant=tenant-test-tenant-admin-ops} | ret=SUCCESS |  
2024-07-20 16:54:49,846 [omNode-2-OMStateMachineApplyTransactionThread - 0] INFO  tenant.OMTenantAssignUserAccessIdRequest (OMTenantAssignUserAccessIdRequest.java:validateAndUpdateCache(358)) - Assigned user 'carol' to tenant 'tenant-test-tenant-admin-ops' with accessId 'tenant-test-tenant-admin-ops$carol'
2024-07-20 16:54:49,849 [omNode-3-OMStateMachineApplyTransactionThread - 0] INFO  om.S3SecretManager (S3SecretManager.java:updateCache(105)) - Updating cache for accessId/user: tenant-test-tenant-admin-ops$carol.
2024-07-20 16:54:49,849 [omNode-3-OMStateMachineApplyTransactionThread - 0] INFO  om.OMMultiTenantManagerImpl (OMMultiTenantManagerImpl.java:assignUserToTenant(626)) - Adding to cache: user 'carol' accessId 'tenant-test-tenant-admin-ops$carol' in tenant 'tenant-test-tenant-admin-ops'
2024-07-20 16:54:49,849 [omNode-3-OMStateMachineApplyTransactionThread - 0] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:unlockWriteInOMRequest(170)) - Authorizer write lock is not held in this lock instance. This OM might be follower, or leader changed. Ignored
2024-07-20 16:54:49,849 | INFO  | OMAudit | user=alice | ip=127.0.0.1 | op=TENANT_ASSIGN_USER_ACCESSID {accessId=tenant-test-tenant-admin-ops$carol, user=carol, tenant=tenant-test-tenant-admin-ops} | ret=SUCCESS |  
2024-07-20 16:54:49,850 [omNode-3-OMStateMachineApplyTransactionThread - 0] INFO  tenant.OMTenantAssignUserAccessIdRequest (OMTenantAssignUserAccessIdRequest.java:validateAndUpdateCache(358)) - Assigned user 'carol' to tenant 'tenant-test-tenant-admin-ops' with accessId 'tenant-test-tenant-admin-ops$carol'
2024-07-20 16:54:49,867 | INFO  | OMAudit | user=alice | ip=127.0.0.1 | op=GET_SERVICE_LIST {} | ret=SUCCESS |  
2024-07-20 16:54:49,880 [omNode-1-OMStateMachineApplyTransactionThread - 0] INFO  om.S3SecretManager (S3SecretManager.java:updateCache(105)) - Updating cache for accessId/user: tenant-test-tenant-admin-ops$alice.
2024-07-20 16:54:49,880 [omNode-1-OMStateMachineApplyTransactionThread - 0] INFO  om.S3SecretManager (S3SecretManager.java:updateCache(105)) - Updating cache for accessId/user: tenant-test-tenant-admin-ops$alice.
2024-07-20 16:54:49,881 | INFO  | OMAudit | user= | ip= | op=SET_S3_SECRET {S3SetSecretUser=tenant-test-tenant-admin-ops$alice} | ret=SUCCESS |  
2024-07-20 16:54:49,884 [main] INFO  shell.TestOzoneTenantShell (TestOzoneTenantShell.java:execute(212)) - Executing shell command with args [user, assign-admin, tenant-test-tenant-admin-ops$carol, --tenant=tenant-test-tenant-admin-ops, --delegated=true, --om-service-id=om-service-test1]
2024-07-20 16:54:49,885 [omNode-2-OMStateMachineApplyTransactionThread - 0] INFO  om.S3SecretManager (S3SecretManager.java:updateCache(105)) - Updating cache for accessId/user: tenant-test-tenant-admin-ops$alice.
2024-07-20 16:54:49,885 [omNode-2-OMStateMachineApplyTransactionThread - 0] INFO  om.S3SecretManager (S3SecretManager.java:updateCache(105)) - Updating cache for accessId/user: tenant-test-tenant-admin-ops$alice.
2024-07-20 16:54:49,886 | INFO  | OMAudit | user= | ip= | op=SET_S3_SECRET {S3SetSecretUser=tenant-test-tenant-admin-ops$alice} | ret=SUCCESS |  
2024-07-20 16:54:49,887 [omNode-3-OMStateMachineApplyTransactionThread - 0] INFO  om.S3SecretManager (S3SecretManager.java:updateCache(105)) - Updating cache for accessId/user: tenant-test-tenant-admin-ops$alice.
2024-07-20 16:54:49,887 [omNode-3-OMStateMachineApplyTransactionThread - 0] INFO  om.S3SecretManager (S3SecretManager.java:updateCache(105)) - Updating cache for accessId/user: tenant-test-tenant-admin-ops$alice.
2024-07-20 16:54:49,888 | INFO  | OMAudit | user= | ip= | op=SET_S3_SECRET {S3SetSecretUser=tenant-test-tenant-admin-ops$alice} | ret=SUCCESS |  
2024-07-20 16:54:49,904 | INFO  | OMAudit | user=alice | ip=127.0.0.1 | op=GET_SERVICE_LIST {} | ret=SUCCESS |  
2024-07-20 16:54:49,907 [IPC Server handler 12 on default port 15004] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:tryWriteLock(109)) - Trying to acquire authorizer write lock from thread 433
2024-07-20 16:54:49,908 [IPC Server handler 12 on default port 15004] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:tryWriteLockThrowOnTimeout(142)) - Acquired authorizer write lock from thread 433 with stamp 3712
2024-07-20 16:54:49,908 [IPC Server handler 12 on default port 15004] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:tryWriteLockInOMRequest(160)) - Set omRequestWriteLockStamp to 3712, omRequestWriteLockHolderTid to 433
2024-07-20 16:54:49,913 [omNode-1-OMStateMachineApplyTransactionThread - 0] INFO  om.OMMultiTenantManagerImpl (OMMultiTenantManagerImpl.java:assignTenantAdmin(667)) - Updating cache: accessId 'tenant-test-tenant-admin-ops$carol' isAdmin 'true' isDelegated 'true'
2024-07-20 16:54:49,914 [omNode-1-OMStateMachineApplyTransactionThread - 0] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:unlockWriteInOMRequest(181)) - Restored omRequestWriteLockStamp to 0, omRequestWriteLockHolderTid to 0
2024-07-20 16:54:49,914 [omNode-1-OMStateMachineApplyTransactionThread - 0] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:unlockWrite(122)) - Releasing authorizer write lock from thread 604 with stamp 3712
2024-07-20 16:54:49,914 | INFO  | OMAudit | user=alice | ip=127.0.0.1 | op=TENANT_ASSIGN_ADMIN {tenant=tenant-test-tenant-admin-ops} | ret=SUCCESS |  
2024-07-20 16:54:49,914 [omNode-1-OMStateMachineApplyTransactionThread - 0] INFO  tenant.OMTenantAssignAdminRequest (OMTenantAssignAdminRequest.java:validateAndUpdateCache(245)) - Assigned admin to accessId 'tenant-test-tenant-admin-ops$carol' in tenant 'tenant-test-tenant-admin-ops', delegated: true
2024-07-20 16:54:49,918 [omNode-3-OMStateMachineApplyTransactionThread - 0] INFO  om.OMMultiTenantManagerImpl (OMMultiTenantManagerImpl.java:assignTenantAdmin(667)) - Updating cache: accessId 'tenant-test-tenant-admin-ops$carol' isAdmin 'true' isDelegated 'true'
2024-07-20 16:54:49,918 [omNode-3-OMStateMachineApplyTransactionThread - 0] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:unlockWriteInOMRequest(170)) - Authorizer write lock is not held in this lock instance. This OM might be follower, or leader changed. Ignored
2024-07-20 16:54:49,918 | INFO  | OMAudit | user=alice | ip=127.0.0.1 | op=TENANT_ASSIGN_ADMIN {tenant=tenant-test-tenant-admin-ops} | ret=SUCCESS |  
2024-07-20 16:54:49,918 [omNode-3-OMStateMachineApplyTransactionThread - 0] INFO  tenant.OMTenantAssignAdminRequest (OMTenantAssignAdminRequest.java:validateAndUpdateCache(245)) - Assigned admin to accessId 'tenant-test-tenant-admin-ops$carol' in tenant 'tenant-test-tenant-admin-ops', delegated: true
2024-07-20 16:54:49,920 [main] INFO  shell.TestOzoneTenantShell (TestOzoneTenantShell.java:execute(212)) - Executing shell command with args [user, revoke-admin, tenant-test-tenant-admin-ops$carol, --om-service-id=om-service-test1]
2024-07-20 16:54:49,922 [omNode-2-OMStateMachineApplyTransactionThread - 0] INFO  om.OMMultiTenantManagerImpl (OMMultiTenantManagerImpl.java:assignTenantAdmin(667)) - Updating cache: accessId 'tenant-test-tenant-admin-ops$carol' isAdmin 'true' isDelegated 'true'
2024-07-20 16:54:49,923 [omNode-2-OMStateMachineApplyTransactionThread - 0] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:unlockWriteInOMRequest(170)) - Authorizer write lock is not held in this lock instance. This OM might be follower, or leader changed. Ignored
2024-07-20 16:54:49,923 | INFO  | OMAudit | user=alice | ip=127.0.0.1 | op=TENANT_ASSIGN_ADMIN {tenant=tenant-test-tenant-admin-ops} | ret=SUCCESS |  
2024-07-20 16:54:49,923 [omNode-2-OMStateMachineApplyTransactionThread - 0] INFO  tenant.OMTenantAssignAdminRequest (OMTenantAssignAdminRequest.java:validateAndUpdateCache(245)) - Assigned admin to accessId 'tenant-test-tenant-admin-ops$carol' in tenant 'tenant-test-tenant-admin-ops', delegated: true
2024-07-20 16:54:49,943 | INFO  | OMAudit | user=alice | ip=127.0.0.1 | op=GET_SERVICE_LIST {} | ret=SUCCESS |  
2024-07-20 16:54:49,951 [IPC Server handler 15 on default port 15004] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:tryWriteLock(109)) - Trying to acquire authorizer write lock from thread 436
2024-07-20 16:54:49,951 [IPC Server handler 15 on default port 15004] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:tryWriteLockThrowOnTimeout(142)) - Acquired authorizer write lock from thread 436 with stamp 3968
2024-07-20 16:54:49,951 [IPC Server handler 15 on default port 15004] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:tryWriteLockInOMRequest(160)) - Set omRequestWriteLockStamp to 3968, omRequestWriteLockHolderTid to 436
2024-07-20 16:54:49,959 [omNode-3-OMStateMachineApplyTransactionThread - 0] INFO  om.OMMultiTenantManagerImpl (OMMultiTenantManagerImpl.java:revokeTenantAdmin(686)) - Updating cache: accessId 'tenant-test-tenant-admin-ops$carol' isAdmin 'false' isDelegated 'false'
2024-07-20 16:54:49,960 [omNode-1-OMStateMachineApplyTransactionThread - 0] INFO  om.OMMultiTenantManagerImpl (OMMultiTenantManagerImpl.java:revokeTenantAdmin(686)) - Updating cache: accessId 'tenant-test-tenant-admin-ops$carol' isAdmin 'false' isDelegated 'false'
2024-07-20 16:54:49,962 [omNode-3-OMStateMachineApplyTransactionThread - 0] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:unlockWriteInOMRequest(170)) - Authorizer write lock is not held in this lock instance. This OM might be follower, or leader changed. Ignored
2024-07-20 16:54:49,963 | INFO  | OMAudit | user=alice | ip=127.0.0.1 | op=TENANT_REVOKE_ADMIN {tenant=tenant-test-tenant-admin-ops} | ret=SUCCESS |  
2024-07-20 16:54:49,963 [omNode-3-OMStateMachineApplyTransactionThread - 0] INFO  tenant.OMTenantRevokeAdminRequest (OMTenantRevokeAdminRequest.java:validateAndUpdateCache(235)) - Revoked admin of accessId 'tenant-test-tenant-admin-ops$carol' from tenant 'tenant-test-tenant-admin-ops'
2024-07-20 16:54:49,963 [omNode-2-OMStateMachineApplyTransactionThread - 0] INFO  om.OMMultiTenantManagerImpl (OMMultiTenantManagerImpl.java:revokeTenantAdmin(686)) - Updating cache: accessId 'tenant-test-tenant-admin-ops$carol' isAdmin 'false' isDelegated 'false'
2024-07-20 16:54:49,963 [omNode-2-OMStateMachineApplyTransactionThread - 0] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:unlockWriteInOMRequest(170)) - Authorizer write lock is not held in this lock instance. This OM might be follower, or leader changed. Ignored
2024-07-20 16:54:49,963 [omNode-1-OMStateMachineApplyTransactionThread - 0] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:unlockWriteInOMRequest(181)) - Restored omRequestWriteLockStamp to 0, omRequestWriteLockHolderTid to 0
2024-07-20 16:54:49,963 [omNode-1-OMStateMachineApplyTransactionThread - 0] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:unlockWrite(122)) - Releasing authorizer write lock from thread 604 with stamp 3968
2024-07-20 16:54:49,963 | INFO  | OMAudit | user=alice | ip=127.0.0.1 | op=TENANT_REVOKE_ADMIN {tenant=tenant-test-tenant-admin-ops} | ret=SUCCESS |  
2024-07-20 16:54:49,964 | INFO  | OMAudit | user=alice | ip=127.0.0.1 | op=TENANT_REVOKE_ADMIN {tenant=tenant-test-tenant-admin-ops} | ret=SUCCESS |  
2024-07-20 16:54:49,964 [omNode-2-OMStateMachineApplyTransactionThread - 0] INFO  tenant.OMTenantRevokeAdminRequest (OMTenantRevokeAdminRequest.java:validateAndUpdateCache(235)) - Revoked admin of accessId 'tenant-test-tenant-admin-ops$carol' from tenant 'tenant-test-tenant-admin-ops'
2024-07-20 16:54:49,964 [omNode-1-OMStateMachineApplyTransactionThread - 0] INFO  tenant.OMTenantRevokeAdminRequest (OMTenantRevokeAdminRequest.java:validateAndUpdateCache(235)) - Revoked admin of accessId 'tenant-test-tenant-admin-ops$carol' from tenant 'tenant-test-tenant-admin-ops'
2024-07-20 16:54:49,966 [main] INFO  shell.TestOzoneTenantShell (TestOzoneTenantShell.java:execute(212)) - Executing shell command with args [user, assign-admin, tenant-test-tenant-admin-ops$carol, --tenant=tenant-test-tenant-admin-ops, --delegated=false, --om-service-id=om-service-test1]
2024-07-20 16:54:49,985 | INFO  | OMAudit | user=alice | ip=127.0.0.1 | op=GET_SERVICE_LIST {} | ret=SUCCESS |  
2024-07-20 16:54:49,990 [IPC Server handler 19 on default port 15004] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:tryWriteLock(109)) - Trying to acquire authorizer write lock from thread 440
2024-07-20 16:54:49,990 [IPC Server handler 19 on default port 15004] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:tryWriteLockThrowOnTimeout(142)) - Acquired authorizer write lock from thread 440 with stamp 4224
2024-07-20 16:54:49,990 [IPC Server handler 19 on default port 15004] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:tryWriteLockInOMRequest(160)) - Set omRequestWriteLockStamp to 4224, omRequestWriteLockHolderTid to 440
2024-07-20 16:54:49,998 [omNode-1-OMStateMachineApplyTransactionThread - 0] INFO  om.OMMultiTenantManagerImpl (OMMultiTenantManagerImpl.java:assignTenantAdmin(667)) - Updating cache: accessId 'tenant-test-tenant-admin-ops$carol' isAdmin 'true' isDelegated 'false'
2024-07-20 16:54:49,999 [omNode-1-OMStateMachineApplyTransactionThread - 0] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:unlockWriteInOMRequest(181)) - Restored omRequestWriteLockStamp to 0, omRequestWriteLockHolderTid to 0
2024-07-20 16:54:49,999 [omNode-1-OMStateMachineApplyTransactionThread - 0] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:unlockWrite(122)) - Releasing authorizer write lock from thread 604 with stamp 4224
2024-07-20 16:54:49,999 | INFO  | OMAudit | user=alice | ip=127.0.0.1 | op=TENANT_ASSIGN_ADMIN {tenant=tenant-test-tenant-admin-ops} | ret=SUCCESS |  
2024-07-20 16:54:49,999 [omNode-1-OMStateMachineApplyTransactionThread - 0] INFO  tenant.OMTenantAssignAdminRequest (OMTenantAssignAdminRequest.java:validateAndUpdateCache(245)) - Assigned admin to accessId 'tenant-test-tenant-admin-ops$carol' in tenant 'tenant-test-tenant-admin-ops', delegated: false
2024-07-20 16:54:50,002 [main] INFO  shell.TestOzoneTenantShell (TestOzoneTenantShell.java:execute(212)) - Executing shell command with args [user, revoke-admin, tenant-test-tenant-admin-ops$carol, --om-service-id=om-service-test1]
2024-07-20 16:54:50,005 [omNode-3-OMStateMachineApplyTransactionThread - 0] INFO  om.OMMultiTenantManagerImpl (OMMultiTenantManagerImpl.java:assignTenantAdmin(667)) - Updating cache: accessId 'tenant-test-tenant-admin-ops$carol' isAdmin 'true' isDelegated 'false'
2024-07-20 16:54:50,005 [omNode-3-OMStateMachineApplyTransactionThread - 0] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:unlockWriteInOMRequest(170)) - Authorizer write lock is not held in this lock instance. This OM might be follower, or leader changed. Ignored
2024-07-20 16:54:50,005 | INFO  | OMAudit | user=alice | ip=127.0.0.1 | op=TENANT_ASSIGN_ADMIN {tenant=tenant-test-tenant-admin-ops} | ret=SUCCESS |  
2024-07-20 16:54:50,005 [omNode-3-OMStateMachineApplyTransactionThread - 0] INFO  tenant.OMTenantAssignAdminRequest (OMTenantAssignAdminRequest.java:validateAndUpdateCache(245)) - Assigned admin to accessId 'tenant-test-tenant-admin-ops$carol' in tenant 'tenant-test-tenant-admin-ops', delegated: false
2024-07-20 16:54:50,011 [omNode-2-OMStateMachineApplyTransactionThread - 0] INFO  om.OMMultiTenantManagerImpl (OMMultiTenantManagerImpl.java:assignTenantAdmin(667)) - Updating cache: accessId 'tenant-test-tenant-admin-ops$carol' isAdmin 'true' isDelegated 'false'
2024-07-20 16:54:50,011 [omNode-2-OMStateMachineApplyTransactionThread - 0] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:unlockWriteInOMRequest(170)) - Authorizer write lock is not held in this lock instance. This OM might be follower, or leader changed. Ignored
2024-07-20 16:54:50,011 | INFO  | OMAudit | user=alice | ip=127.0.0.1 | op=TENANT_ASSIGN_ADMIN {tenant=tenant-test-tenant-admin-ops} | ret=SUCCESS |  
2024-07-20 16:54:50,011 [omNode-2-OMStateMachineApplyTransactionThread - 0] INFO  tenant.OMTenantAssignAdminRequest (OMTenantAssignAdminRequest.java:validateAndUpdateCache(245)) - Assigned admin to accessId 'tenant-test-tenant-admin-ops$carol' in tenant 'tenant-test-tenant-admin-ops', delegated: false
2024-07-20 16:54:50,030 | INFO  | OMAudit | user=alice | ip=127.0.0.1 | op=GET_SERVICE_LIST {} | ret=SUCCESS |  
2024-07-20 16:54:50,040 [IPC Server handler 1 on default port 15004] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:tryWriteLock(109)) - Trying to acquire authorizer write lock from thread 422
2024-07-20 16:54:50,040 [IPC Server handler 1 on default port 15004] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:tryWriteLockThrowOnTimeout(142)) - Acquired authorizer write lock from thread 422 with stamp 4480
2024-07-20 16:54:50,040 [IPC Server handler 1 on default port 15004] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:tryWriteLockInOMRequest(160)) - Set omRequestWriteLockStamp to 4480, omRequestWriteLockHolderTid to 422
2024-07-20 16:54:50,048 [omNode-1-OMStateMachineApplyTransactionThread - 0] INFO  om.OMMultiTenantManagerImpl (OMMultiTenantManagerImpl.java:revokeTenantAdmin(686)) - Updating cache: accessId 'tenant-test-tenant-admin-ops$carol' isAdmin 'false' isDelegated 'false'
2024-07-20 16:54:50,049 [omNode-1-OMStateMachineApplyTransactionThread - 0] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:unlockWriteInOMRequest(181)) - Restored omRequestWriteLockStamp to 0, omRequestWriteLockHolderTid to 0
2024-07-20 16:54:50,049 [omNode-1-OMStateMachineApplyTransactionThread - 0] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:unlockWrite(122)) - Releasing authorizer write lock from thread 604 with stamp 4480
2024-07-20 16:54:50,049 | INFO  | OMAudit | user=alice | ip=127.0.0.1 | op=TENANT_REVOKE_ADMIN {tenant=tenant-test-tenant-admin-ops} | ret=SUCCESS |  
2024-07-20 16:54:50,049 [omNode-1-OMStateMachineApplyTransactionThread - 0] INFO  tenant.OMTenantRevokeAdminRequest (OMTenantRevokeAdminRequest.java:validateAndUpdateCache(235)) - Revoked admin of accessId 'tenant-test-tenant-admin-ops$carol' from tenant 'tenant-test-tenant-admin-ops'
2024-07-20 16:54:50,051 [main] INFO  shell.TestOzoneTenantShell (TestOzoneTenantShell.java:execute(212)) - Executing shell command with args [user, revoke, tenant-test-tenant-admin-ops$carol, --om-service-id=om-service-test1]
2024-07-20 16:54:50,055 [omNode-2-OMStateMachineApplyTransactionThread - 0] INFO  om.OMMultiTenantManagerImpl (OMMultiTenantManagerImpl.java:revokeTenantAdmin(686)) - Updating cache: accessId 'tenant-test-tenant-admin-ops$carol' isAdmin 'false' isDelegated 'false'
2024-07-20 16:54:50,056 [omNode-2-OMStateMachineApplyTransactionThread - 0] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:unlockWriteInOMRequest(170)) - Authorizer write lock is not held in this lock instance. This OM might be follower, or leader changed. Ignored
2024-07-20 16:54:50,056 | INFO  | OMAudit | user=alice | ip=127.0.0.1 | op=TENANT_REVOKE_ADMIN {tenant=tenant-test-tenant-admin-ops} | ret=SUCCESS |  
2024-07-20 16:54:50,056 [omNode-2-OMStateMachineApplyTransactionThread - 0] INFO  tenant.OMTenantRevokeAdminRequest (OMTenantRevokeAdminRequest.java:validateAndUpdateCache(235)) - Revoked admin of accessId 'tenant-test-tenant-admin-ops$carol' from tenant 'tenant-test-tenant-admin-ops'
2024-07-20 16:54:50,058 [omNode-3-OMStateMachineApplyTransactionThread - 0] INFO  om.OMMultiTenantManagerImpl (OMMultiTenantManagerImpl.java:revokeTenantAdmin(686)) - Updating cache: accessId 'tenant-test-tenant-admin-ops$carol' isAdmin 'false' isDelegated 'false'
2024-07-20 16:54:50,058 [omNode-3-OMStateMachineApplyTransactionThread - 0] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:unlockWriteInOMRequest(170)) - Authorizer write lock is not held in this lock instance. This OM might be follower, or leader changed. Ignored
2024-07-20 16:54:50,059 | INFO  | OMAudit | user=alice | ip=127.0.0.1 | op=TENANT_REVOKE_ADMIN {tenant=tenant-test-tenant-admin-ops} | ret=SUCCESS |  
2024-07-20 16:54:50,059 [omNode-3-OMStateMachineApplyTransactionThread - 0] INFO  tenant.OMTenantRevokeAdminRequest (OMTenantRevokeAdminRequest.java:validateAndUpdateCache(235)) - Revoked admin of accessId 'tenant-test-tenant-admin-ops$carol' from tenant 'tenant-test-tenant-admin-ops'
2024-07-20 16:54:50,087 | INFO  | OMAudit | user=alice | ip=127.0.0.1 | op=GET_SERVICE_LIST {} | ret=SUCCESS |  
2024-07-20 16:54:50,093 [IPC Server handler 3 on default port 15004] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:tryWriteLock(109)) - Trying to acquire authorizer write lock from thread 424
2024-07-20 16:54:50,094 [IPC Server handler 3 on default port 15004] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:tryWriteLockThrowOnTimeout(142)) - Acquired authorizer write lock from thread 424 with stamp 4736
2024-07-20 16:54:50,094 [IPC Server handler 3 on default port 15004] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:tryWriteLockInOMRequest(160)) - Set omRequestWriteLockStamp to 4736, omRequestWriteLockHolderTid to 424
2024-07-20 16:54:50,103 [omNode-1-OMStateMachineApplyTransactionThread - 0] INFO  om.OMMultiTenantManagerImpl (OMMultiTenantManagerImpl.java:revokeUserAccessId(640)) - Removing from cache: accessId 'tenant-test-tenant-admin-ops$carol' in tenant 'tenant-test-tenant-admin-ops'
2024-07-20 16:54:50,103 [omNode-1-OMStateMachineApplyTransactionThread - 0] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:unlockWriteInOMRequest(181)) - Restored omRequestWriteLockStamp to 0, omRequestWriteLockHolderTid to 0
2024-07-20 16:54:50,103 [omNode-1-OMStateMachineApplyTransactionThread - 0] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:unlockWrite(122)) - Releasing authorizer write lock from thread 604 with stamp 4736
2024-07-20 16:54:50,103 | INFO  | OMAudit | user=alice | ip=127.0.0.1 | op=TENANT_REVOKE_USER_ACCESSID {accessId=tenant-test-tenant-admin-ops$carol, userPrincipal=carol, tenant=tenant-test-tenant-admin-ops} | ret=SUCCESS |  
2024-07-20 16:54:50,104 [omNode-1-OMStateMachineApplyTransactionThread - 0] INFO  tenant.OMTenantRevokeUserAccessIdRequest (OMTenantRevokeUserAccessIdRequest.java:validateAndUpdateCache(255)) - Revoked user 'carol' accessId 'tenant-test-tenant-admin-ops$carol' to tenant 'tenant-test-tenant-admin-ops'
2024-07-20 16:54:50,106 [main] INFO  shell.TestOzoneTenantShell (TestOzoneTenantShell.java:execute(212)) - Executing shell command with args [user, assign, carol, --tenant=tenant-test-tenant-admin-ops, --om-service-id=om-service-test1]
2024-07-20 16:54:50,110 [omNode-2-OMStateMachineApplyTransactionThread - 0] INFO  om.OMMultiTenantManagerImpl (OMMultiTenantManagerImpl.java:revokeUserAccessId(640)) - Removing from cache: accessId 'tenant-test-tenant-admin-ops$carol' in tenant 'tenant-test-tenant-admin-ops'
2024-07-20 16:54:50,110 [omNode-2-OMStateMachineApplyTransactionThread - 0] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:unlockWriteInOMRequest(170)) - Authorizer write lock is not held in this lock instance. This OM might be follower, or leader changed. Ignored
2024-07-20 16:54:50,111 | INFO  | OMAudit | user=alice | ip=127.0.0.1 | op=TENANT_REVOKE_USER_ACCESSID {accessId=tenant-test-tenant-admin-ops$carol, userPrincipal=carol, tenant=tenant-test-tenant-admin-ops} | ret=SUCCESS |  
2024-07-20 16:54:50,111 [omNode-2-OMStateMachineApplyTransactionThread - 0] INFO  tenant.OMTenantRevokeUserAccessIdRequest (OMTenantRevokeUserAccessIdRequest.java:validateAndUpdateCache(255)) - Revoked user 'carol' accessId 'tenant-test-tenant-admin-ops$carol' to tenant 'tenant-test-tenant-admin-ops'
2024-07-20 16:54:50,111 [omNode-3-OMStateMachineApplyTransactionThread - 0] INFO  om.OMMultiTenantManagerImpl (OMMultiTenantManagerImpl.java:revokeUserAccessId(640)) - Removing from cache: accessId 'tenant-test-tenant-admin-ops$carol' in tenant 'tenant-test-tenant-admin-ops'
2024-07-20 16:54:50,111 [omNode-3-OMStateMachineApplyTransactionThread - 0] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:unlockWriteInOMRequest(170)) - Authorizer write lock is not held in this lock instance. This OM might be follower, or leader changed. Ignored
2024-07-20 16:54:50,112 | INFO  | OMAudit | user=alice | ip=127.0.0.1 | op=TENANT_REVOKE_USER_ACCESSID {accessId=tenant-test-tenant-admin-ops$carol, userPrincipal=carol, tenant=tenant-test-tenant-admin-ops} | ret=SUCCESS |  
2024-07-20 16:54:50,112 [omNode-3-OMStateMachineApplyTransactionThread - 0] INFO  tenant.OMTenantRevokeUserAccessIdRequest (OMTenantRevokeUserAccessIdRequest.java:validateAndUpdateCache(255)) - Revoked user 'carol' accessId 'tenant-test-tenant-admin-ops$carol' to tenant 'tenant-test-tenant-admin-ops'
2024-07-20 16:54:50,131 | INFO  | OMAudit | user=bob | ip=127.0.0.1 | op=GET_SERVICE_LIST {} | ret=SUCCESS |  
2024-07-20 16:54:50,135 [IPC Server handler 4 on default port 15004] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:tryWriteLock(109)) - Trying to acquire authorizer write lock from thread 425
2024-07-20 16:54:50,135 [IPC Server handler 4 on default port 15004] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:tryWriteLockThrowOnTimeout(142)) - Acquired authorizer write lock from thread 425 with stamp 4992
2024-07-20 16:54:50,135 [IPC Server handler 4 on default port 15004] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:tryWriteLockInOMRequest(160)) - Set omRequestWriteLockStamp to 4992, omRequestWriteLockHolderTid to 425
2024-07-20 16:54:50,142 [omNode-1-OMStateMachineApplyTransactionThread - 0] INFO  om.S3SecretManager (S3SecretManager.java:updateCache(105)) - Updating cache for accessId/user: tenant-test-tenant-admin-ops$carol.
2024-07-20 16:54:50,143 [omNode-1-OMStateMachineApplyTransactionThread - 0] INFO  om.OMMultiTenantManagerImpl (OMMultiTenantManagerImpl.java:assignUserToTenant(626)) - Adding to cache: user 'carol' accessId 'tenant-test-tenant-admin-ops$carol' in tenant 'tenant-test-tenant-admin-ops'
2024-07-20 16:54:50,143 [omNode-1-OMStateMachineApplyTransactionThread - 0] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:unlockWriteInOMRequest(181)) - Restored omRequestWriteLockStamp to 0, omRequestWriteLockHolderTid to 0
2024-07-20 16:54:50,143 [omNode-1-OMStateMachineApplyTransactionThread - 0] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:unlockWrite(122)) - Releasing authorizer write lock from thread 604 with stamp 4992
2024-07-20 16:54:50,143 | INFO  | OMAudit | user=bob | ip=127.0.0.1 | op=TENANT_ASSIGN_USER_ACCESSID {accessId=tenant-test-tenant-admin-ops$carol, user=carol, tenant=tenant-test-tenant-admin-ops} | ret=SUCCESS |  
2024-07-20 16:54:50,143 [omNode-1-OMStateMachineApplyTransactionThread - 0] INFO  tenant.OMTenantAssignUserAccessIdRequest (OMTenantAssignUserAccessIdRequest.java:validateAndUpdateCache(358)) - Assigned user 'carol' to tenant 'tenant-test-tenant-admin-ops' with accessId 'tenant-test-tenant-admin-ops$carol'
2024-07-20 16:54:50,146 [main] INFO  shell.TestOzoneTenantShell (TestOzoneTenantShell.java:execute(212)) - Executing shell command with args [user, setsecret, tenant-test-tenant-admin-ops$alice, --secret=somesecret2, --om-service-id=om-service-test1]
2024-07-20 16:54:50,146 [omNode-3-OMStateMachineApplyTransactionThread - 0] INFO  om.S3SecretManager (S3SecretManager.java:updateCache(105)) - Updating cache for accessId/user: tenant-test-tenant-admin-ops$carol.
2024-07-20 16:54:50,146 [omNode-3-OMStateMachineApplyTransactionThread - 0] INFO  om.OMMultiTenantManagerImpl (OMMultiTenantManagerImpl.java:assignUserToTenant(626)) - Adding to cache: user 'carol' accessId 'tenant-test-tenant-admin-ops$carol' in tenant 'tenant-test-tenant-admin-ops'
2024-07-20 16:54:50,146 [omNode-3-OMStateMachineApplyTransactionThread - 0] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:unlockWriteInOMRequest(170)) - Authorizer write lock is not held in this lock instance. This OM might be follower, or leader changed. Ignored
2024-07-20 16:54:50,147 | INFO  | OMAudit | user=bob | ip=127.0.0.1 | op=TENANT_ASSIGN_USER_ACCESSID {accessId=tenant-test-tenant-admin-ops$carol, user=carol, tenant=tenant-test-tenant-admin-ops} | ret=SUCCESS |  
2024-07-20 16:54:50,147 [omNode-3-OMStateMachineApplyTransactionThread - 0] INFO  tenant.OMTenantAssignUserAccessIdRequest (OMTenantAssignUserAccessIdRequest.java:validateAndUpdateCache(358)) - Assigned user 'carol' to tenant 'tenant-test-tenant-admin-ops' with accessId 'tenant-test-tenant-admin-ops$carol'
2024-07-20 16:54:50,152 [omNode-2-OMStateMachineApplyTransactionThread - 0] INFO  om.S3SecretManager (S3SecretManager.java:updateCache(105)) - Updating cache for accessId/user: tenant-test-tenant-admin-ops$carol.
2024-07-20 16:54:50,152 [omNode-2-OMStateMachineApplyTransactionThread - 0] INFO  om.OMMultiTenantManagerImpl (OMMultiTenantManagerImpl.java:assignUserToTenant(626)) - Adding to cache: user 'carol' accessId 'tenant-test-tenant-admin-ops$carol' in tenant 'tenant-test-tenant-admin-ops'
2024-07-20 16:54:50,152 [omNode-2-OMStateMachineApplyTransactionThread - 0] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:unlockWriteInOMRequest(170)) - Authorizer write lock is not held in this lock instance. This OM might be follower, or leader changed. Ignored
2024-07-20 16:54:50,152 | INFO  | OMAudit | user=bob | ip=127.0.0.1 | op=TENANT_ASSIGN_USER_ACCESSID {accessId=tenant-test-tenant-admin-ops$carol, user=carol, tenant=tenant-test-tenant-admin-ops} | ret=SUCCESS |  
2024-07-20 16:54:50,152 [omNode-2-OMStateMachineApplyTransactionThread - 0] INFO  tenant.OMTenantAssignUserAccessIdRequest (OMTenantAssignUserAccessIdRequest.java:validateAndUpdateCache(358)) - Assigned user 'carol' to tenant 'tenant-test-tenant-admin-ops' with accessId 'tenant-test-tenant-admin-ops$carol'
2024-07-20 16:54:50,170 | INFO  | OMAudit | user=bob | ip=127.0.0.1 | op=GET_SERVICE_LIST {} | ret=SUCCESS |  
2024-07-20 16:54:50,179 [omNode-1-OMStateMachineApplyTransactionThread - 0] INFO  om.S3SecretManager (S3SecretManager.java:updateCache(105)) - Updating cache for accessId/user: tenant-test-tenant-admin-ops$alice.
2024-07-20 16:54:50,179 [omNode-1-OMStateMachineApplyTransactionThread - 0] INFO  om.S3SecretManager (S3SecretManager.java:updateCache(105)) - Updating cache for accessId/user: tenant-test-tenant-admin-ops$alice.
2024-07-20 16:54:50,179 | INFO  | OMAudit | user= | ip= | op=SET_S3_SECRET {S3SetSecretUser=tenant-test-tenant-admin-ops$alice} | ret=SUCCESS |  
2024-07-20 16:54:50,182 [omNode-2-OMStateMachineApplyTransactionThread - 0] INFO  om.S3SecretManager (S3SecretManager.java:updateCache(105)) - Updating cache for accessId/user: tenant-test-tenant-admin-ops$alice.
2024-07-20 16:54:50,182 [omNode-2-OMStateMachineApplyTransactionThread - 0] INFO  om.S3SecretManager (S3SecretManager.java:updateCache(105)) - Updating cache for accessId/user: tenant-test-tenant-admin-ops$alice.
2024-07-20 16:54:50,183 | INFO  | OMAudit | user= | ip= | op=SET_S3_SECRET {S3SetSecretUser=tenant-test-tenant-admin-ops$alice} | ret=SUCCESS |  
2024-07-20 16:54:50,183 [main] INFO  shell.TestOzoneTenantShell (TestOzoneTenantShell.java:execute(212)) - Executing shell command with args [user, assign-admin, tenant-test-tenant-admin-ops$carol, --tenant=tenant-test-tenant-admin-ops, --delegated=true, --om-service-id=om-service-test1]
2024-07-20 16:54:50,184 [omNode-3-OMStateMachineApplyTransactionThread - 0] INFO  om.S3SecretManager (S3SecretManager.java:updateCache(105)) - Updating cache for accessId/user: tenant-test-tenant-admin-ops$alice.
2024-07-20 16:54:50,185 [omNode-3-OMStateMachineApplyTransactionThread - 0] INFO  om.S3SecretManager (S3SecretManager.java:updateCache(105)) - Updating cache for accessId/user: tenant-test-tenant-admin-ops$alice.
2024-07-20 16:54:50,185 | INFO  | OMAudit | user= | ip= | op=SET_S3_SECRET {S3SetSecretUser=tenant-test-tenant-admin-ops$alice} | ret=SUCCESS |  
2024-07-20 16:54:50,204 | INFO  | OMAudit | user=bob | ip=127.0.0.1 | op=GET_SERVICE_LIST {} | ret=SUCCESS |  
2024-07-20 16:54:50,212 [main] INFO  shell.TestOzoneTenantShell (TestOzoneTenantShell.java:execute(212)) - Executing shell command with args [user, assign-admin, tenant-test-tenant-admin-ops$carol, --tenant=tenant-test-tenant-admin-ops, --delegated=false, --om-service-id=om-service-test1]
2024-07-20 16:54:50,236 | INFO  | OMAudit | user=bob | ip=127.0.0.1 | op=GET_SERVICE_LIST {} | ret=SUCCESS |  
2024-07-20 16:54:50,241 [main] INFO  shell.TestOzoneTenantShell (TestOzoneTenantShell.java:execute(212)) - Executing shell command with args [user, revoke-admin, tenant-test-tenant-admin-ops$carol, --om-service-id=om-service-test1]
2024-07-20 16:54:50,266 | INFO  | OMAudit | user=bob | ip=127.0.0.1 | op=GET_SERVICE_LIST {} | ret=SUCCESS |  
2024-07-20 16:54:50,274 [main] INFO  shell.TestOzoneTenantShell (TestOzoneTenantShell.java:execute(212)) - Executing shell command with args [user, revoke, tenant-test-tenant-admin-ops$carol, --om-service-id=om-service-test1]
2024-07-20 16:54:50,293 | INFO  | OMAudit | user=bob | ip=127.0.0.1 | op=GET_SERVICE_LIST {} | ret=SUCCESS |  
2024-07-20 16:54:50,301 [IPC Server handler 12 on default port 15004] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:tryWriteLock(109)) - Trying to acquire authorizer write lock from thread 433
2024-07-20 16:54:50,301 [IPC Server handler 12 on default port 15004] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:tryWriteLockThrowOnTimeout(142)) - Acquired authorizer write lock from thread 433 with stamp 5248
2024-07-20 16:54:50,301 [IPC Server handler 12 on default port 15004] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:tryWriteLockInOMRequest(160)) - Set omRequestWriteLockStamp to 5248, omRequestWriteLockHolderTid to 433
2024-07-20 16:54:50,308 [omNode-1-OMStateMachineApplyTransactionThread - 0] INFO  om.OMMultiTenantManagerImpl (OMMultiTenantManagerImpl.java:revokeUserAccessId(640)) - Removing from cache: accessId 'tenant-test-tenant-admin-ops$carol' in tenant 'tenant-test-tenant-admin-ops'
2024-07-20 16:54:50,309 [omNode-1-OMStateMachineApplyTransactionThread - 0] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:unlockWriteInOMRequest(181)) - Restored omRequestWriteLockStamp to 0, omRequestWriteLockHolderTid to 0
2024-07-20 16:54:50,309 [omNode-1-OMStateMachineApplyTransactionThread - 0] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:unlockWrite(122)) - Releasing authorizer write lock from thread 604 with stamp 5248
2024-07-20 16:54:50,309 | INFO  | OMAudit | user=bob | ip=127.0.0.1 | op=TENANT_REVOKE_USER_ACCESSID {accessId=tenant-test-tenant-admin-ops$carol, userPrincipal=carol, tenant=tenant-test-tenant-admin-ops} | ret=SUCCESS |  
2024-07-20 16:54:50,309 [omNode-1-OMStateMachineApplyTransactionThread - 0] INFO  tenant.OMTenantRevokeUserAccessIdRequest (OMTenantRevokeUserAccessIdRequest.java:validateAndUpdateCache(255)) - Revoked user 'carol' accessId 'tenant-test-tenant-admin-ops$carol' to tenant 'tenant-test-tenant-admin-ops'
2024-07-20 16:54:50,312 [omNode-2-OMStateMachineApplyTransactionThread - 0] INFO  om.OMMultiTenantManagerImpl (OMMultiTenantManagerImpl.java:revokeUserAccessId(640)) - Removing from cache: accessId 'tenant-test-tenant-admin-ops$carol' in tenant 'tenant-test-tenant-admin-ops'
2024-07-20 16:54:50,312 [omNode-2-OMStateMachineApplyTransactionThread - 0] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:unlockWriteInOMRequest(170)) - Authorizer write lock is not held in this lock instance. This OM might be follower, or leader changed. Ignored
2024-07-20 16:54:50,312 | INFO  | OMAudit | user=bob | ip=127.0.0.1 | op=TENANT_REVOKE_USER_ACCESSID {accessId=tenant-test-tenant-admin-ops$carol, userPrincipal=carol, tenant=tenant-test-tenant-admin-ops} | ret=SUCCESS |  
2024-07-20 16:54:50,312 [omNode-2-OMStateMachineApplyTransactionThread - 0] INFO  tenant.OMTenantRevokeUserAccessIdRequest (OMTenantRevokeUserAccessIdRequest.java:validateAndUpdateCache(255)) - Revoked user 'carol' accessId 'tenant-test-tenant-admin-ops$carol' to tenant 'tenant-test-tenant-admin-ops'
2024-07-20 16:54:50,312 [omNode-3-OMStateMachineApplyTransactionThread - 0] INFO  om.OMMultiTenantManagerImpl (OMMultiTenantManagerImpl.java:revokeUserAccessId(640)) - Removing from cache: accessId 'tenant-test-tenant-admin-ops$carol' in tenant 'tenant-test-tenant-admin-ops'
2024-07-20 16:54:50,313 [omNode-3-OMStateMachineApplyTransactionThread - 0] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:unlockWriteInOMRequest(170)) - Authorizer write lock is not held in this lock instance. This OM might be follower, or leader changed. Ignored
2024-07-20 16:54:50,314 | INFO  | OMAudit | user=bob | ip=127.0.0.1 | op=TENANT_REVOKE_USER_ACCESSID {accessId=tenant-test-tenant-admin-ops$carol, userPrincipal=carol, tenant=tenant-test-tenant-admin-ops} | ret=SUCCESS |  
2024-07-20 16:54:50,314 [omNode-3-OMStateMachineApplyTransactionThread - 0] INFO  tenant.OMTenantRevokeUserAccessIdRequest (OMTenantRevokeUserAccessIdRequest.java:validateAndUpdateCache(255)) - Revoked user 'carol' accessId 'tenant-test-tenant-admin-ops$carol' to tenant 'tenant-test-tenant-admin-ops'
2024-07-20 16:54:50,314 [main] INFO  shell.TestOzoneTenantShell (TestOzoneTenantShell.java:execute(212)) - Executing shell command with args [user, revoke-admin, tenant-test-tenant-admin-ops$alice, --om-service-id=om-service-test1]
2024-07-20 16:54:50,336 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=GET_SERVICE_LIST {} | ret=SUCCESS |  
2024-07-20 16:54:50,341 [IPC Server handler 15 on default port 15004] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:tryWriteLock(109)) - Trying to acquire authorizer write lock from thread 436
2024-07-20 16:54:50,341 [IPC Server handler 15 on default port 15004] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:tryWriteLockThrowOnTimeout(142)) - Acquired authorizer write lock from thread 436 with stamp 5504
2024-07-20 16:54:50,341 [IPC Server handler 15 on default port 15004] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:tryWriteLockInOMRequest(160)) - Set omRequestWriteLockStamp to 5504, omRequestWriteLockHolderTid to 436
2024-07-20 16:54:50,348 [omNode-1-OMStateMachineApplyTransactionThread - 0] INFO  om.OMMultiTenantManagerImpl (OMMultiTenantManagerImpl.java:revokeTenantAdmin(686)) - Updating cache: accessId 'tenant-test-tenant-admin-ops$alice' isAdmin 'false' isDelegated 'false'
2024-07-20 16:54:50,348 [omNode-1-OMStateMachineApplyTransactionThread - 0] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:unlockWriteInOMRequest(181)) - Restored omRequestWriteLockStamp to 0, omRequestWriteLockHolderTid to 0
2024-07-20 16:54:50,348 [omNode-1-OMStateMachineApplyTransactionThread - 0] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:unlockWrite(122)) - Releasing authorizer write lock from thread 604 with stamp 5504
2024-07-20 16:54:50,349 [omNode-2-OMStateMachineApplyTransactionThread - 0] INFO  om.OMMultiTenantManagerImpl (OMMultiTenantManagerImpl.java:revokeTenantAdmin(686)) - Updating cache: accessId 'tenant-test-tenant-admin-ops$alice' isAdmin 'false' isDelegated 'false'
2024-07-20 16:54:50,349 [omNode-2-OMStateMachineApplyTransactionThread - 0] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:unlockWriteInOMRequest(170)) - Authorizer write lock is not held in this lock instance. This OM might be follower, or leader changed. Ignored
2024-07-20 16:54:50,348 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=TENANT_REVOKE_ADMIN {tenant=tenant-test-tenant-admin-ops} | ret=SUCCESS |  
2024-07-20 16:54:50,350 [omNode-1-OMStateMachineApplyTransactionThread - 0] INFO  tenant.OMTenantRevokeAdminRequest (OMTenantRevokeAdminRequest.java:validateAndUpdateCache(235)) - Revoked admin of accessId 'tenant-test-tenant-admin-ops$alice' from tenant 'tenant-test-tenant-admin-ops'
2024-07-20 16:54:50,350 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=TENANT_REVOKE_ADMIN {tenant=tenant-test-tenant-admin-ops} | ret=SUCCESS |  
2024-07-20 16:54:50,351 [omNode-2-OMStateMachineApplyTransactionThread - 0] INFO  tenant.OMTenantRevokeAdminRequest (OMTenantRevokeAdminRequest.java:validateAndUpdateCache(235)) - Revoked admin of accessId 'tenant-test-tenant-admin-ops$alice' from tenant 'tenant-test-tenant-admin-ops'
2024-07-20 16:54:50,352 [main] INFO  shell.TestOzoneTenantShell (TestOzoneTenantShell.java:execute(212)) - Executing shell command with args [user, revoke, tenant-test-tenant-admin-ops$alice, --om-service-id=om-service-test1]
2024-07-20 16:54:50,354 [omNode-3-OMStateMachineApplyTransactionThread - 0] INFO  om.OMMultiTenantManagerImpl (OMMultiTenantManagerImpl.java:revokeTenantAdmin(686)) - Updating cache: accessId 'tenant-test-tenant-admin-ops$alice' isAdmin 'false' isDelegated 'false'
2024-07-20 16:54:50,354 [omNode-3-OMStateMachineApplyTransactionThread - 0] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:unlockWriteInOMRequest(170)) - Authorizer write lock is not held in this lock instance. This OM might be follower, or leader changed. Ignored
2024-07-20 16:54:50,354 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=TENANT_REVOKE_ADMIN {tenant=tenant-test-tenant-admin-ops} | ret=SUCCESS |  
2024-07-20 16:54:50,355 [omNode-3-OMStateMachineApplyTransactionThread - 0] INFO  tenant.OMTenantRevokeAdminRequest (OMTenantRevokeAdminRequest.java:validateAndUpdateCache(235)) - Revoked admin of accessId 'tenant-test-tenant-admin-ops$alice' from tenant 'tenant-test-tenant-admin-ops'
2024-07-20 16:54:50,373 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=GET_SERVICE_LIST {} | ret=SUCCESS |  
2024-07-20 16:54:50,381 [IPC Server handler 19 on default port 15004] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:tryWriteLock(109)) - Trying to acquire authorizer write lock from thread 440
2024-07-20 16:54:50,381 [IPC Server handler 19 on default port 15004] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:tryWriteLockThrowOnTimeout(142)) - Acquired authorizer write lock from thread 440 with stamp 5760
2024-07-20 16:54:50,381 [IPC Server handler 19 on default port 15004] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:tryWriteLockInOMRequest(160)) - Set omRequestWriteLockStamp to 5760, omRequestWriteLockHolderTid to 440
2024-07-20 16:54:50,388 [omNode-1-OMStateMachineApplyTransactionThread - 0] INFO  om.OMMultiTenantManagerImpl (OMMultiTenantManagerImpl.java:revokeUserAccessId(640)) - Removing from cache: accessId 'tenant-test-tenant-admin-ops$alice' in tenant 'tenant-test-tenant-admin-ops'
2024-07-20 16:54:50,388 [omNode-1-OMStateMachineApplyTransactionThread - 0] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:unlockWriteInOMRequest(181)) - Restored omRequestWriteLockStamp to 0, omRequestWriteLockHolderTid to 0
2024-07-20 16:54:50,388 [omNode-1-OMStateMachineApplyTransactionThread - 0] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:unlockWrite(122)) - Releasing authorizer write lock from thread 604 with stamp 5760
2024-07-20 16:54:50,388 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=TENANT_REVOKE_USER_ACCESSID {accessId=tenant-test-tenant-admin-ops$alice, userPrincipal=alice, tenant=tenant-test-tenant-admin-ops} | ret=SUCCESS |  
2024-07-20 16:54:50,388 [omNode-1-OMStateMachineApplyTransactionThread - 0] INFO  tenant.OMTenantRevokeUserAccessIdRequest (OMTenantRevokeUserAccessIdRequest.java:validateAndUpdateCache(255)) - Revoked user 'alice' accessId 'tenant-test-tenant-admin-ops$alice' to tenant 'tenant-test-tenant-admin-ops'
2024-07-20 16:54:50,391 [omNode-2-OMStateMachineApplyTransactionThread - 0] INFO  om.OMMultiTenantManagerImpl (OMMultiTenantManagerImpl.java:revokeUserAccessId(640)) - Removing from cache: accessId 'tenant-test-tenant-admin-ops$alice' in tenant 'tenant-test-tenant-admin-ops'
2024-07-20 16:54:50,391 [omNode-2-OMStateMachineApplyTransactionThread - 0] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:unlockWriteInOMRequest(170)) - Authorizer write lock is not held in this lock instance. This OM might be follower, or leader changed. Ignored
2024-07-20 16:54:50,392 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=TENANT_REVOKE_USER_ACCESSID {accessId=tenant-test-tenant-admin-ops$alice, userPrincipal=alice, tenant=tenant-test-tenant-admin-ops} | ret=SUCCESS |  
2024-07-20 16:54:50,392 [omNode-2-OMStateMachineApplyTransactionThread - 0] INFO  tenant.OMTenantRevokeUserAccessIdRequest (OMTenantRevokeUserAccessIdRequest.java:validateAndUpdateCache(255)) - Revoked user 'alice' accessId 'tenant-test-tenant-admin-ops$alice' to tenant 'tenant-test-tenant-admin-ops'
2024-07-20 16:54:50,395 [main] INFO  shell.TestOzoneTenantShell (TestOzoneTenantShell.java:execute(212)) - Executing shell command with args [user, revoke-admin, tenant-test-tenant-admin-ops$bob, --om-service-id=om-service-test1]
2024-07-20 16:54:50,395 [omNode-3-OMStateMachineApplyTransactionThread - 0] INFO  om.OMMultiTenantManagerImpl (OMMultiTenantManagerImpl.java:revokeUserAccessId(640)) - Removing from cache: accessId 'tenant-test-tenant-admin-ops$alice' in tenant 'tenant-test-tenant-admin-ops'
2024-07-20 16:54:50,396 [omNode-3-OMStateMachineApplyTransactionThread - 0] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:unlockWriteInOMRequest(170)) - Authorizer write lock is not held in this lock instance. This OM might be follower, or leader changed. Ignored
2024-07-20 16:54:50,396 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=TENANT_REVOKE_USER_ACCESSID {accessId=tenant-test-tenant-admin-ops$alice, userPrincipal=alice, tenant=tenant-test-tenant-admin-ops} | ret=SUCCESS |  
2024-07-20 16:54:50,396 [omNode-3-OMStateMachineApplyTransactionThread - 0] INFO  tenant.OMTenantRevokeUserAccessIdRequest (OMTenantRevokeUserAccessIdRequest.java:validateAndUpdateCache(255)) - Revoked user 'alice' accessId 'tenant-test-tenant-admin-ops$alice' to tenant 'tenant-test-tenant-admin-ops'
2024-07-20 16:54:50,419 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=GET_SERVICE_LIST {} | ret=SUCCESS |  
2024-07-20 16:54:50,424 [IPC Server handler 1 on default port 15004] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:tryWriteLock(109)) - Trying to acquire authorizer write lock from thread 422
2024-07-20 16:54:50,424 [IPC Server handler 1 on default port 15004] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:tryWriteLockThrowOnTimeout(142)) - Acquired authorizer write lock from thread 422 with stamp 6016
2024-07-20 16:54:50,424 [IPC Server handler 1 on default port 15004] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:tryWriteLockInOMRequest(160)) - Set omRequestWriteLockStamp to 6016, omRequestWriteLockHolderTid to 422
2024-07-20 16:54:50,431 [omNode-1-OMStateMachineApplyTransactionThread - 0] INFO  om.OMMultiTenantManagerImpl (OMMultiTenantManagerImpl.java:revokeTenantAdmin(686)) - Updating cache: accessId 'tenant-test-tenant-admin-ops$bob' isAdmin 'false' isDelegated 'false'
2024-07-20 16:54:50,431 [omNode-1-OMStateMachineApplyTransactionThread - 0] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:unlockWriteInOMRequest(181)) - Restored omRequestWriteLockStamp to 0, omRequestWriteLockHolderTid to 0
2024-07-20 16:54:50,431 [omNode-1-OMStateMachineApplyTransactionThread - 0] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:unlockWrite(122)) - Releasing authorizer write lock from thread 604 with stamp 6016
2024-07-20 16:54:50,431 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=TENANT_REVOKE_ADMIN {tenant=tenant-test-tenant-admin-ops} | ret=SUCCESS |  
2024-07-20 16:54:50,432 [omNode-1-OMStateMachineApplyTransactionThread - 0] INFO  tenant.OMTenantRevokeAdminRequest (OMTenantRevokeAdminRequest.java:validateAndUpdateCache(235)) - Revoked admin of accessId 'tenant-test-tenant-admin-ops$bob' from tenant 'tenant-test-tenant-admin-ops'
2024-07-20 16:54:50,434 [omNode-2-OMStateMachineApplyTransactionThread - 0] INFO  om.OMMultiTenantManagerImpl (OMMultiTenantManagerImpl.java:revokeTenantAdmin(686)) - Updating cache: accessId 'tenant-test-tenant-admin-ops$bob' isAdmin 'false' isDelegated 'false'
2024-07-20 16:54:50,435 [omNode-2-OMStateMachineApplyTransactionThread - 0] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:unlockWriteInOMRequest(170)) - Authorizer write lock is not held in this lock instance. This OM might be follower, or leader changed. Ignored
2024-07-20 16:54:50,435 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=TENANT_REVOKE_ADMIN {tenant=tenant-test-tenant-admin-ops} | ret=SUCCESS |  
2024-07-20 16:54:50,435 [omNode-2-OMStateMachineApplyTransactionThread - 0] INFO  tenant.OMTenantRevokeAdminRequest (OMTenantRevokeAdminRequest.java:validateAndUpdateCache(235)) - Revoked admin of accessId 'tenant-test-tenant-admin-ops$bob' from tenant 'tenant-test-tenant-admin-ops'
2024-07-20 16:54:50,437 [main] INFO  shell.TestOzoneTenantShell (TestOzoneTenantShell.java:execute(212)) - Executing shell command with args [user, revoke, tenant-test-tenant-admin-ops$bob, --om-service-id=om-service-test1]
2024-07-20 16:54:50,437 [omNode-3-OMStateMachineApplyTransactionThread - 0] INFO  om.OMMultiTenantManagerImpl (OMMultiTenantManagerImpl.java:revokeTenantAdmin(686)) - Updating cache: accessId 'tenant-test-tenant-admin-ops$bob' isAdmin 'false' isDelegated 'false'
2024-07-20 16:54:50,437 [omNode-3-OMStateMachineApplyTransactionThread - 0] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:unlockWriteInOMRequest(170)) - Authorizer write lock is not held in this lock instance. This OM might be follower, or leader changed. Ignored
2024-07-20 16:54:50,438 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=TENANT_REVOKE_ADMIN {tenant=tenant-test-tenant-admin-ops} | ret=SUCCESS |  
2024-07-20 16:54:50,438 [omNode-3-OMStateMachineApplyTransactionThread - 0] INFO  tenant.OMTenantRevokeAdminRequest (OMTenantRevokeAdminRequest.java:validateAndUpdateCache(235)) - Revoked admin of accessId 'tenant-test-tenant-admin-ops$bob' from tenant 'tenant-test-tenant-admin-ops'
2024-07-20 16:54:50,461 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=GET_SERVICE_LIST {} | ret=SUCCESS |  
2024-07-20 16:54:50,466 [IPC Server handler 3 on default port 15004] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:tryWriteLock(109)) - Trying to acquire authorizer write lock from thread 424
2024-07-20 16:54:50,466 [IPC Server handler 3 on default port 15004] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:tryWriteLockThrowOnTimeout(142)) - Acquired authorizer write lock from thread 424 with stamp 6272
2024-07-20 16:54:50,466 [IPC Server handler 3 on default port 15004] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:tryWriteLockInOMRequest(160)) - Set omRequestWriteLockStamp to 6272, omRequestWriteLockHolderTid to 424
2024-07-20 16:54:50,472 [omNode-1-OMStateMachineApplyTransactionThread - 0] INFO  om.OMMultiTenantManagerImpl (OMMultiTenantManagerImpl.java:revokeUserAccessId(640)) - Removing from cache: accessId 'tenant-test-tenant-admin-ops$bob' in tenant 'tenant-test-tenant-admin-ops'
2024-07-20 16:54:50,473 [omNode-1-OMStateMachineApplyTransactionThread - 0] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:unlockWriteInOMRequest(181)) - Restored omRequestWriteLockStamp to 0, omRequestWriteLockHolderTid to 0
2024-07-20 16:54:50,473 [omNode-1-OMStateMachineApplyTransactionThread - 0] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:unlockWrite(122)) - Releasing authorizer write lock from thread 604 with stamp 6272
2024-07-20 16:54:50,473 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=TENANT_REVOKE_USER_ACCESSID {accessId=tenant-test-tenant-admin-ops$bob, userPrincipal=bob, tenant=tenant-test-tenant-admin-ops} | ret=SUCCESS |  
2024-07-20 16:54:50,473 [omNode-1-OMStateMachineApplyTransactionThread - 0] INFO  tenant.OMTenantRevokeUserAccessIdRequest (OMTenantRevokeUserAccessIdRequest.java:validateAndUpdateCache(255)) - Revoked user 'bob' accessId 'tenant-test-tenant-admin-ops$bob' to tenant 'tenant-test-tenant-admin-ops'
2024-07-20 16:54:50,477 [omNode-3-OMStateMachineApplyTransactionThread - 0] INFO  om.OMMultiTenantManagerImpl (OMMultiTenantManagerImpl.java:revokeUserAccessId(640)) - Removing from cache: accessId 'tenant-test-tenant-admin-ops$bob' in tenant 'tenant-test-tenant-admin-ops'
2024-07-20 16:54:50,477 [omNode-3-OMStateMachineApplyTransactionThread - 0] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:unlockWriteInOMRequest(170)) - Authorizer write lock is not held in this lock instance. This OM might be follower, or leader changed. Ignored
2024-07-20 16:54:50,477 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=TENANT_REVOKE_USER_ACCESSID {accessId=tenant-test-tenant-admin-ops$bob, userPrincipal=bob, tenant=tenant-test-tenant-admin-ops} | ret=SUCCESS |  
2024-07-20 16:54:50,477 [omNode-3-OMStateMachineApplyTransactionThread - 0] INFO  tenant.OMTenantRevokeUserAccessIdRequest (OMTenantRevokeUserAccessIdRequest.java:validateAndUpdateCache(255)) - Revoked user 'bob' accessId 'tenant-test-tenant-admin-ops$bob' to tenant 'tenant-test-tenant-admin-ops'
2024-07-20 16:54:50,479 [main] INFO  shell.TestOzoneTenantShell (TestOzoneTenantShell.java:execute(212)) - Executing shell command with args [delete, tenant-test-tenant-admin-ops, --om-service-id=om-service-test1]
2024-07-20 16:54:50,480 [omNode-2-OMStateMachineApplyTransactionThread - 0] INFO  om.OMMultiTenantManagerImpl (OMMultiTenantManagerImpl.java:revokeUserAccessId(640)) - Removing from cache: accessId 'tenant-test-tenant-admin-ops$bob' in tenant 'tenant-test-tenant-admin-ops'
2024-07-20 16:54:50,480 [omNode-2-OMStateMachineApplyTransactionThread - 0] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:unlockWriteInOMRequest(170)) - Authorizer write lock is not held in this lock instance. This OM might be follower, or leader changed. Ignored
2024-07-20 16:54:50,480 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=TENANT_REVOKE_USER_ACCESSID {accessId=tenant-test-tenant-admin-ops$bob, userPrincipal=bob, tenant=tenant-test-tenant-admin-ops} | ret=SUCCESS |  
2024-07-20 16:54:50,480 [omNode-2-OMStateMachineApplyTransactionThread - 0] INFO  tenant.OMTenantRevokeUserAccessIdRequest (OMTenantRevokeUserAccessIdRequest.java:validateAndUpdateCache(255)) - Revoked user 'bob' accessId 'tenant-test-tenant-admin-ops$bob' to tenant 'tenant-test-tenant-admin-ops'
2024-07-20 16:54:50,499 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=GET_SERVICE_LIST {} | ret=SUCCESS |  
2024-07-20 16:54:50,502 [IPC Server handler 4 on default port 15004] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:tryWriteLock(109)) - Trying to acquire authorizer write lock from thread 425
2024-07-20 16:54:50,502 [IPC Server handler 4 on default port 15004] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:tryWriteLockThrowOnTimeout(142)) - Acquired authorizer write lock from thread 425 with stamp 6528
2024-07-20 16:54:50,502 [IPC Server handler 4 on default port 15004] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:tryWriteLockInOMRequest(160)) - Set omRequestWriteLockStamp to 6528, omRequestWriteLockHolderTid to 425
2024-07-20 16:54:50,502 [IPC Server handler 4 on default port 15004] INFO  om.OMMultiTenantManagerImpl (OMMultiTenantManagerImpl.java:deleteTenant(323)) - Deleting tenant policies and roles from Ranger: OzoneTenant{tenantId='tenant-test-tenant-admin-ops', tenantRoleNames=[tenant-test-tenant-admin-ops-UserRole, tenant-test-tenant-admin-ops-AdminRole], accessPolicies=[tenant-test-tenant-admin-ops-VolumeAccess, tenant-test-tenant-admin-ops-BucketAccess], accountNameSpace=org.apache.hadoop.ozone.om.multitenant.impl.AccountNameSpaceImpl@282a9681, bucketNameSpace=org.apache.hadoop.ozone.om.multitenant.impl.SingleVolumeTenantNamespace@1ecb1048}
2024-07-20 16:54:50,509 [omNode-1-OMStateMachineApplyTransactionThread - 0] INFO  om.OMMultiTenantManagerImpl (OMMultiTenantManagerImpl.java:deleteTenant(602)) - Removing tenant from in-memory cache: tenant-test-tenant-admin-ops
2024-07-20 16:54:50,509 [omNode-1-OMStateMachineApplyTransactionThread - 0] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:unlockWriteInOMRequest(181)) - Restored omRequestWriteLockStamp to 0, omRequestWriteLockHolderTid to 0
2024-07-20 16:54:50,509 [omNode-1-OMStateMachineApplyTransactionThread - 0] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:unlockWrite(122)) - Releasing authorizer write lock from thread 604 with stamp 6528
2024-07-20 16:54:50,509 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=UPDATE_VOLUME {volume=tenant-test-tenant-admin-ops} | ret=SUCCESS |  
2024-07-20 16:54:50,510 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=DELETE_TENANT {tenant=tenant-test-tenant-admin-ops} | ret=SUCCESS |  
2024-07-20 16:54:50,510 [omNode-1-OMStateMachineApplyTransactionThread - 0] INFO  tenant.OMTenantDeleteRequest (OMTenantDeleteRequest.java:validateAndUpdateCache(242)) - Deleted tenant 'tenant-test-tenant-admin-ops' and volume 'tenant-test-tenant-admin-ops'
2024-07-20 16:54:50,512 [omNode-3-OMStateMachineApplyTransactionThread - 0] INFO  om.OMMultiTenantManagerImpl (OMMultiTenantManagerImpl.java:deleteTenant(602)) - Removing tenant from in-memory cache: tenant-test-tenant-admin-ops
2024-07-20 16:54:50,512 [omNode-3-OMStateMachineApplyTransactionThread - 0] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:unlockWriteInOMRequest(170)) - Authorizer write lock is not held in this lock instance. This OM might be follower, or leader changed. Ignored
2024-07-20 16:54:50,513 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=UPDATE_VOLUME {volume=tenant-test-tenant-admin-ops} | ret=SUCCESS |  
2024-07-20 16:54:50,513 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=DELETE_TENANT {tenant=tenant-test-tenant-admin-ops} | ret=SUCCESS |  
2024-07-20 16:54:50,513 [omNode-3-OMStateMachineApplyTransactionThread - 0] INFO  tenant.OMTenantDeleteRequest (OMTenantDeleteRequest.java:validateAndUpdateCache(242)) - Deleted tenant 'tenant-test-tenant-admin-ops' and volume 'tenant-test-tenant-admin-ops'
2024-07-20 16:54:50,514 [omNode-2-OMStateMachineApplyTransactionThread - 0] INFO  om.OMMultiTenantManagerImpl (OMMultiTenantManagerImpl.java:deleteTenant(602)) - Removing tenant from in-memory cache: tenant-test-tenant-admin-ops
2024-07-20 16:54:50,514 [omNode-2-OMStateMachineApplyTransactionThread - 0] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:unlockWriteInOMRequest(170)) - Authorizer write lock is not held in this lock instance. This OM might be follower, or leader changed. Ignored
2024-07-20 16:54:50,514 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=UPDATE_VOLUME {volume=tenant-test-tenant-admin-ops} | ret=SUCCESS |  
2024-07-20 16:54:50,514 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=DELETE_TENANT {tenant=tenant-test-tenant-admin-ops} | ret=SUCCESS |  
2024-07-20 16:54:50,515 [omNode-2-OMStateMachineApplyTransactionThread - 0] INFO  tenant.OMTenantDeleteRequest (OMTenantDeleteRequest.java:validateAndUpdateCache(242)) - Deleted tenant 'tenant-test-tenant-admin-ops' and volume 'tenant-test-tenant-admin-ops'
2024-07-20 16:54:50,517 [main] INFO  shell.TestOzoneTenantShell (TestOzoneTenantShell.java:execute(212)) - Executing shell command with args [volume, delete, tenant-test-tenant-admin-ops]
2024-07-20 16:54:50,540 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=GET_SERVICE_LIST {} | ret=SUCCESS |  
2024-07-20 16:54:50,550 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=DELETE_VOLUME {volume=tenant-test-tenant-admin-ops} | ret=SUCCESS |  
2024-07-20 16:54:50,553 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=DELETE_VOLUME {volume=tenant-test-tenant-admin-ops} | ret=SUCCESS |  
2024-07-20 16:54:50,555 [main] INFO  shell.TestOzoneTenantShell (TestOzoneTenantShell.java:execute(212)) - Executing shell command with args [create, devaa, --om-service-id=om-service-test1]
2024-07-20 16:54:50,556 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=DELETE_VOLUME {volume=tenant-test-tenant-admin-ops} | ret=SUCCESS |  
2024-07-20 16:54:50,579 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=GET_SERVICE_LIST {} | ret=SUCCESS |  
2024-07-20 16:54:50,581 [main] INFO  rpc.RpcClient (RpcClient.java:createTenant(917)) - Creating Tenant: 'devaa', with volume: 'devaa', forceCreationWhenVolumeExists: false
2024-07-20 16:54:50,587 [IPC Server handler 14 on default port 15004] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:tryWriteLock(109)) - Trying to acquire authorizer write lock from thread 435
2024-07-20 16:54:50,587 [IPC Server handler 14 on default port 15004] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:tryWriteLockThrowOnTimeout(142)) - Acquired authorizer write lock from thread 435 with stamp 6784
2024-07-20 16:54:50,587 [IPC Server handler 14 on default port 15004] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:tryWriteLockInOMRequest(160)) - Set omRequestWriteLockStamp to 6784, omRequestWriteLockHolderTid to 435
2024-07-20 16:54:50,595 [omNode-1-OMStateMachineApplyTransactionThread - 0] DEBUG tenant.OMTenantCreateRequest (OMTenantCreateRequest.java:validateAndUpdateCache(304)) - volume: '/devaa' successfully created
2024-07-20 16:54:50,595 [omNode-1-OMStateMachineApplyTransactionThread - 0] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:unlockWriteInOMRequest(181)) - Restored omRequestWriteLockStamp to 0, omRequestWriteLockHolderTid to 0
2024-07-20 16:54:50,596 [omNode-1-OMStateMachineApplyTransactionThread - 0] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:unlockWrite(122)) - Releasing authorizer write lock from thread 604 with stamp 6784
2024-07-20 16:54:50,596 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=CREATE_TENANT {admin=runner, owner=runner, volume=devaa, creationTime=1721494490587, modificationTime=1721494490587, quotaInBytes=-1, quotaInNamespace=-1, usedNamespace=0, objectID=-9223372036854760704, updateID=59, tenant=devaa} | ret=SUCCESS |  
2024-07-20 16:54:50,596 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=CREATE_VOLUME {admin=runner, owner=runner, volume=devaa, creationTime=1721494490587, modificationTime=1721494490587, quotaInBytes=-1, quotaInNamespace=-1, usedNamespace=0, objectID=-9223372036854760704, updateID=59, tenant=devaa} | ret=SUCCESS |  
2024-07-20 16:54:50,596 [omNode-1-OMStateMachineApplyTransactionThread - 0] INFO  tenant.OMTenantCreateRequest (OMTenantCreateRequest.java:validateAndUpdateCache(387)) - Created tenant 'devaa' and volume 'devaa'
2024-07-20 16:54:50,598 [main] INFO  shell.TestOzoneTenantShell (TestOzoneTenantShell.java:execute(212)) - Executing shell command with args [user, assign, alice, --tenant=devaa, --om-service-id=om-service-test1]
2024-07-20 16:54:50,600 [omNode-2-OMStateMachineApplyTransactionThread - 0] DEBUG tenant.OMTenantCreateRequest (OMTenantCreateRequest.java:validateAndUpdateCache(304)) - volume: '/devaa' successfully created
2024-07-20 16:54:50,601 [omNode-2-OMStateMachineApplyTransactionThread - 0] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:unlockWriteInOMRequest(170)) - Authorizer write lock is not held in this lock instance. This OM might be follower, or leader changed. Ignored
2024-07-20 16:54:50,601 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=CREATE_TENANT {admin=runner, owner=runner, volume=devaa, creationTime=1721494490587, modificationTime=1721494490587, quotaInBytes=-1, quotaInNamespace=-1, usedNamespace=0, objectID=-9223372036854760704, updateID=59, tenant=devaa} | ret=SUCCESS |  
2024-07-20 16:54:50,601 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=CREATE_VOLUME {admin=runner, owner=runner, volume=devaa, creationTime=1721494490587, modificationTime=1721494490587, quotaInBytes=-1, quotaInNamespace=-1, usedNamespace=0, objectID=-9223372036854760704, updateID=59, tenant=devaa} | ret=SUCCESS |  
2024-07-20 16:54:50,601 [omNode-2-OMStateMachineApplyTransactionThread - 0] INFO  tenant.OMTenantCreateRequest (OMTenantCreateRequest.java:validateAndUpdateCache(387)) - Created tenant 'devaa' and volume 'devaa'
2024-07-20 16:54:50,604 [omNode-3-OMStateMachineApplyTransactionThread - 0] DEBUG tenant.OMTenantCreateRequest (OMTenantCreateRequest.java:validateAndUpdateCache(304)) - volume: '/devaa' successfully created
2024-07-20 16:54:50,604 [omNode-3-OMStateMachineApplyTransactionThread - 0] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:unlockWriteInOMRequest(170)) - Authorizer write lock is not held in this lock instance. This OM might be follower, or leader changed. Ignored
2024-07-20 16:54:50,604 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=CREATE_TENANT {admin=runner, owner=runner, volume=devaa, creationTime=1721494490587, modificationTime=1721494490587, quotaInBytes=-1, quotaInNamespace=-1, usedNamespace=0, objectID=-9223372036854760704, updateID=59, tenant=devaa} | ret=SUCCESS |  
2024-07-20 16:54:50,604 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=CREATE_VOLUME {admin=runner, owner=runner, volume=devaa, creationTime=1721494490587, modificationTime=1721494490587, quotaInBytes=-1, quotaInNamespace=-1, usedNamespace=0, objectID=-9223372036854760704, updateID=59, tenant=devaa} | ret=SUCCESS |  
2024-07-20 16:54:50,605 [omNode-3-OMStateMachineApplyTransactionThread - 0] INFO  tenant.OMTenantCreateRequest (OMTenantCreateRequest.java:validateAndUpdateCache(387)) - Created tenant 'devaa' and volume 'devaa'
2024-07-20 16:54:50,628 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=GET_SERVICE_LIST {} | ret=SUCCESS |  
2024-07-20 16:54:50,635 [IPC Server handler 16 on default port 15004] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:tryWriteLock(109)) - Trying to acquire authorizer write lock from thread 437
2024-07-20 16:54:50,635 [IPC Server handler 16 on default port 15004] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:tryWriteLockThrowOnTimeout(142)) - Acquired authorizer write lock from thread 437 with stamp 7040
2024-07-20 16:54:50,635 [IPC Server handler 16 on default port 15004] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:tryWriteLockInOMRequest(160)) - Set omRequestWriteLockStamp to 7040, omRequestWriteLockHolderTid to 437
2024-07-20 16:54:50,642 [omNode-1-OMStateMachineApplyTransactionThread - 0] INFO  om.S3SecretManager (S3SecretManager.java:updateCache(105)) - Updating cache for accessId/user: devaa$alice.
2024-07-20 16:54:50,642 [omNode-1-OMStateMachineApplyTransactionThread - 0] INFO  om.OMMultiTenantManagerImpl (OMMultiTenantManagerImpl.java:assignUserToTenant(626)) - Adding to cache: user 'alice' accessId 'devaa$alice' in tenant 'devaa'
2024-07-20 16:54:50,643 [omNode-1-OMStateMachineApplyTransactionThread - 0] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:unlockWriteInOMRequest(181)) - Restored omRequestWriteLockStamp to 0, omRequestWriteLockHolderTid to 0
2024-07-20 16:54:50,643 [omNode-1-OMStateMachineApplyTransactionThread - 0] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:unlockWrite(122)) - Releasing authorizer write lock from thread 604 with stamp 7040
2024-07-20 16:54:50,643 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=TENANT_ASSIGN_USER_ACCESSID {accessId=devaa$alice, user=alice, tenant=devaa} | ret=SUCCESS |  
2024-07-20 16:54:50,643 [omNode-1-OMStateMachineApplyTransactionThread - 0] INFO  tenant.OMTenantAssignUserAccessIdRequest (OMTenantAssignUserAccessIdRequest.java:validateAndUpdateCache(358)) - Assigned user 'alice' to tenant 'devaa' with accessId 'devaa$alice'
2024-07-20 16:54:50,648 [main] INFO  shell.TestOzoneTenantShell (TestOzoneTenantShell.java:execute(212)) - Executing shell command with args [--verbose, user, assign-admin, devaa$alice, --tenant=devaa, --delegated=true, --om-service-id=om-service-test1]
2024-07-20 16:54:50,650 [omNode-3-OMStateMachineApplyTransactionThread - 0] INFO  om.S3SecretManager (S3SecretManager.java:updateCache(105)) - Updating cache for accessId/user: devaa$alice.
2024-07-20 16:54:50,650 [omNode-3-OMStateMachineApplyTransactionThread - 0] INFO  om.OMMultiTenantManagerImpl (OMMultiTenantManagerImpl.java:assignUserToTenant(626)) - Adding to cache: user 'alice' accessId 'devaa$alice' in tenant 'devaa'
2024-07-20 16:54:50,650 [omNode-3-OMStateMachineApplyTransactionThread - 0] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:unlockWriteInOMRequest(170)) - Authorizer write lock is not held in this lock instance. This OM might be follower, or leader changed. Ignored
2024-07-20 16:54:50,650 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=TENANT_ASSIGN_USER_ACCESSID {accessId=devaa$alice, user=alice, tenant=devaa} | ret=SUCCESS |  
2024-07-20 16:54:50,651 [omNode-3-OMStateMachineApplyTransactionThread - 0] INFO  tenant.OMTenantAssignUserAccessIdRequest (OMTenantAssignUserAccessIdRequest.java:validateAndUpdateCache(358)) - Assigned user 'alice' to tenant 'devaa' with accessId 'devaa$alice'
2024-07-20 16:54:50,654 [omNode-2-OMStateMachineApplyTransactionThread - 0] INFO  om.S3SecretManager (S3SecretManager.java:updateCache(105)) - Updating cache for accessId/user: devaa$alice.
2024-07-20 16:54:50,654 [omNode-2-OMStateMachineApplyTransactionThread - 0] INFO  om.OMMultiTenantManagerImpl (OMMultiTenantManagerImpl.java:assignUserToTenant(626)) - Adding to cache: user 'alice' accessId 'devaa$alice' in tenant 'devaa'
2024-07-20 16:54:50,654 [omNode-2-OMStateMachineApplyTransactionThread - 0] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:unlockWriteInOMRequest(170)) - Authorizer write lock is not held in this lock instance. This OM might be follower, or leader changed. Ignored
2024-07-20 16:54:50,654 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=TENANT_ASSIGN_USER_ACCESSID {accessId=devaa$alice, user=alice, tenant=devaa} | ret=SUCCESS |  
2024-07-20 16:54:50,654 [omNode-2-OMStateMachineApplyTransactionThread - 0] INFO  tenant.OMTenantAssignUserAccessIdRequest (OMTenantAssignUserAccessIdRequest.java:validateAndUpdateCache(358)) - Assigned user 'alice' to tenant 'devaa' with accessId 'devaa$alice'
2024-07-20 16:54:50,676 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=GET_SERVICE_LIST {} | ret=SUCCESS |  
2024-07-20 16:54:50,683 [IPC Server handler 8 on default port 15004] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:tryWriteLock(109)) - Trying to acquire authorizer write lock from thread 429
2024-07-20 16:54:50,683 [IPC Server handler 8 on default port 15004] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:tryWriteLockThrowOnTimeout(142)) - Acquired authorizer write lock from thread 429 with stamp 7296
2024-07-20 16:54:50,684 [IPC Server handler 8 on default port 15004] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:tryWriteLockInOMRequest(160)) - Set omRequestWriteLockStamp to 7296, omRequestWriteLockHolderTid to 429
2024-07-20 16:54:50,692 [omNode-1-OMStateMachineApplyTransactionThread - 0] INFO  om.OMMultiTenantManagerImpl (OMMultiTenantManagerImpl.java:assignTenantAdmin(667)) - Updating cache: accessId 'devaa$alice' isAdmin 'true' isDelegated 'true'
2024-07-20 16:54:50,692 [omNode-1-OMStateMachineApplyTransactionThread - 0] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:unlockWriteInOMRequest(181)) - Restored omRequestWriteLockStamp to 0, omRequestWriteLockHolderTid to 0
2024-07-20 16:54:50,692 [omNode-1-OMStateMachineApplyTransactionThread - 0] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:unlockWrite(122)) - Releasing authorizer write lock from thread 604 with stamp 7296
2024-07-20 16:54:50,692 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=TENANT_ASSIGN_ADMIN {tenant=devaa} | ret=SUCCESS |  
2024-07-20 16:54:50,693 [omNode-1-OMStateMachineApplyTransactionThread - 0] INFO  tenant.OMTenantAssignAdminRequest (OMTenantAssignAdminRequest.java:validateAndUpdateCache(245)) - Assigned admin to accessId 'devaa$alice' in tenant 'devaa', delegated: true
2024-07-20 16:54:50,693 [omNode-2-OMStateMachineApplyTransactionThread - 0] INFO  om.OMMultiTenantManagerImpl (OMMultiTenantManagerImpl.java:assignTenantAdmin(667)) - Updating cache: accessId 'devaa$alice' isAdmin 'true' isDelegated 'true'
2024-07-20 16:54:50,693 [omNode-2-OMStateMachineApplyTransactionThread - 0] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:unlockWriteInOMRequest(170)) - Authorizer write lock is not held in this lock instance. This OM might be follower, or leader changed. Ignored
2024-07-20 16:54:50,694 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=TENANT_ASSIGN_ADMIN {tenant=devaa} | ret=SUCCESS |  
2024-07-20 16:54:50,694 [omNode-2-OMStateMachineApplyTransactionThread - 0] INFO  tenant.OMTenantAssignAdminRequest (OMTenantAssignAdminRequest.java:validateAndUpdateCache(245)) - Assigned admin to accessId 'devaa$alice' in tenant 'devaa', delegated: true
2024-07-20 16:54:50,697 [main] INFO  shell.TestOzoneTenantShell (TestOzoneTenantShell.java:execute(212)) - Executing shell command with args [--verbose, user, revoke-admin, devaa$alice, --tenant=devaa, --om-service-id=om-service-test1]
2024-07-20 16:54:50,698 [omNode-3-OMStateMachineApplyTransactionThread - 0] INFO  om.OMMultiTenantManagerImpl (OMMultiTenantManagerImpl.java:assignTenantAdmin(667)) - Updating cache: accessId 'devaa$alice' isAdmin 'true' isDelegated 'true'
2024-07-20 16:54:50,698 [omNode-3-OMStateMachineApplyTransactionThread - 0] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:unlockWriteInOMRequest(170)) - Authorizer write lock is not held in this lock instance. This OM might be follower, or leader changed. Ignored
2024-07-20 16:54:50,698 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=TENANT_ASSIGN_ADMIN {tenant=devaa} | ret=SUCCESS |  
2024-07-20 16:54:50,698 [omNode-3-OMStateMachineApplyTransactionThread - 0] INFO  tenant.OMTenantAssignAdminRequest (OMTenantAssignAdminRequest.java:validateAndUpdateCache(245)) - Assigned admin to accessId 'devaa$alice' in tenant 'devaa', delegated: true
2024-07-20 16:54:50,722 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=GET_SERVICE_LIST {} | ret=SUCCESS |  
2024-07-20 16:54:50,727 [IPC Server handler 12 on default port 15004] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:tryWriteLock(109)) - Trying to acquire authorizer write lock from thread 433
2024-07-20 16:54:50,727 [IPC Server handler 12 on default port 15004] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:tryWriteLockThrowOnTimeout(142)) - Acquired authorizer write lock from thread 433 with stamp 7552
2024-07-20 16:54:50,727 [IPC Server handler 12 on default port 15004] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:tryWriteLockInOMRequest(160)) - Set omRequestWriteLockStamp to 7552, omRequestWriteLockHolderTid to 433
2024-07-20 16:54:50,733 [omNode-1-OMStateMachineApplyTransactionThread - 0] INFO  om.OMMultiTenantManagerImpl (OMMultiTenantManagerImpl.java:revokeTenantAdmin(686)) - Updating cache: accessId 'devaa$alice' isAdmin 'false' isDelegated 'false'
2024-07-20 16:54:50,733 [omNode-1-OMStateMachineApplyTransactionThread - 0] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:unlockWriteInOMRequest(181)) - Restored omRequestWriteLockStamp to 0, omRequestWriteLockHolderTid to 0
2024-07-20 16:54:50,733 [omNode-1-OMStateMachineApplyTransactionThread - 0] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:unlockWrite(122)) - Releasing authorizer write lock from thread 604 with stamp 7552
2024-07-20 16:54:50,733 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=TENANT_REVOKE_ADMIN {tenant=devaa} | ret=SUCCESS |  
2024-07-20 16:54:50,734 [omNode-1-OMStateMachineApplyTransactionThread - 0] INFO  tenant.OMTenantRevokeAdminRequest (OMTenantRevokeAdminRequest.java:validateAndUpdateCache(235)) - Revoked admin of accessId 'devaa$alice' from tenant 'devaa'
2024-07-20 16:54:50,737 [main] INFO  shell.TestOzoneTenantShell (TestOzoneTenantShell.java:execute(212)) - Executing shell command with args [user, revoke, devaa$alice, --om-service-id=om-service-test1]
2024-07-20 16:54:50,739 [omNode-2-OMStateMachineApplyTransactionThread - 0] INFO  om.OMMultiTenantManagerImpl (OMMultiTenantManagerImpl.java:revokeTenantAdmin(686)) - Updating cache: accessId 'devaa$alice' isAdmin 'false' isDelegated 'false'
2024-07-20 16:54:50,739 [omNode-2-OMStateMachineApplyTransactionThread - 0] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:unlockWriteInOMRequest(170)) - Authorizer write lock is not held in this lock instance. This OM might be follower, or leader changed. Ignored
2024-07-20 16:54:50,739 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=TENANT_REVOKE_ADMIN {tenant=devaa} | ret=SUCCESS |  
2024-07-20 16:54:50,739 [omNode-2-OMStateMachineApplyTransactionThread - 0] INFO  tenant.OMTenantRevokeAdminRequest (OMTenantRevokeAdminRequest.java:validateAndUpdateCache(235)) - Revoked admin of accessId 'devaa$alice' from tenant 'devaa'
2024-07-20 16:54:50,741 [omNode-3-OMStateMachineApplyTransactionThread - 0] INFO  om.OMMultiTenantManagerImpl (OMMultiTenantManagerImpl.java:revokeTenantAdmin(686)) - Updating cache: accessId 'devaa$alice' isAdmin 'false' isDelegated 'false'
2024-07-20 16:54:50,742 [omNode-3-OMStateMachineApplyTransactionThread - 0] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:unlockWriteInOMRequest(170)) - Authorizer write lock is not held in this lock instance. This OM might be follower, or leader changed. Ignored
2024-07-20 16:54:50,742 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=TENANT_REVOKE_ADMIN {tenant=devaa} | ret=SUCCESS |  
2024-07-20 16:54:50,742 [omNode-3-OMStateMachineApplyTransactionThread - 0] INFO  tenant.OMTenantRevokeAdminRequest (OMTenantRevokeAdminRequest.java:validateAndUpdateCache(235)) - Revoked admin of accessId 'devaa$alice' from tenant 'devaa'
2024-07-20 16:54:50,761 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=GET_SERVICE_LIST {} | ret=SUCCESS |  
2024-07-20 16:54:50,765 [IPC Server handler 15 on default port 15004] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:tryWriteLock(109)) - Trying to acquire authorizer write lock from thread 436
2024-07-20 16:54:50,765 [IPC Server handler 15 on default port 15004] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:tryWriteLockThrowOnTimeout(142)) - Acquired authorizer write lock from thread 436 with stamp 7808
2024-07-20 16:54:50,765 [IPC Server handler 15 on default port 15004] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:tryWriteLockInOMRequest(160)) - Set omRequestWriteLockStamp to 7808, omRequestWriteLockHolderTid to 436
2024-07-20 16:54:50,772 [omNode-1-OMStateMachineApplyTransactionThread - 0] INFO  om.OMMultiTenantManagerImpl (OMMultiTenantManagerImpl.java:revokeUserAccessId(640)) - Removing from cache: accessId 'devaa$alice' in tenant 'devaa'
2024-07-20 16:54:50,772 [omNode-1-OMStateMachineApplyTransactionThread - 0] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:unlockWriteInOMRequest(181)) - Restored omRequestWriteLockStamp to 0, omRequestWriteLockHolderTid to 0
2024-07-20 16:54:50,772 [omNode-1-OMStateMachineApplyTransactionThread - 0] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:unlockWrite(122)) - Releasing authorizer write lock from thread 604 with stamp 7808
2024-07-20 16:54:50,772 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=TENANT_REVOKE_USER_ACCESSID {accessId=devaa$alice, userPrincipal=alice, tenant=devaa} | ret=SUCCESS |  
2024-07-20 16:54:50,772 [omNode-1-OMStateMachineApplyTransactionThread - 0] INFO  tenant.OMTenantRevokeUserAccessIdRequest (OMTenantRevokeUserAccessIdRequest.java:validateAndUpdateCache(255)) - Revoked user 'alice' accessId 'devaa$alice' to tenant 'devaa'
2024-07-20 16:54:50,777 [main] INFO  shell.TestOzoneTenantShell (TestOzoneTenantShell.java:execute(212)) - Executing shell command with args [user, assign, alice, --tenant=devaa, --om-service-id=om-service-test1]
2024-07-20 16:54:50,778 [omNode-3-OMStateMachineApplyTransactionThread - 0] INFO  om.OMMultiTenantManagerImpl (OMMultiTenantManagerImpl.java:revokeUserAccessId(640)) - Removing from cache: accessId 'devaa$alice' in tenant 'devaa'
2024-07-20 16:54:50,778 [omNode-3-OMStateMachineApplyTransactionThread - 0] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:unlockWriteInOMRequest(170)) - Authorizer write lock is not held in this lock instance. This OM might be follower, or leader changed. Ignored
2024-07-20 16:54:50,779 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=TENANT_REVOKE_USER_ACCESSID {accessId=devaa$alice, userPrincipal=alice, tenant=devaa} | ret=SUCCESS |  
2024-07-20 16:54:50,779 [omNode-3-OMStateMachineApplyTransactionThread - 0] INFO  tenant.OMTenantRevokeUserAccessIdRequest (OMTenantRevokeUserAccessIdRequest.java:validateAndUpdateCache(255)) - Revoked user 'alice' accessId 'devaa$alice' to tenant 'devaa'
2024-07-20 16:54:50,781 [omNode-2-OMStateMachineApplyTransactionThread - 0] INFO  om.OMMultiTenantManagerImpl (OMMultiTenantManagerImpl.java:revokeUserAccessId(640)) - Removing from cache: accessId 'devaa$alice' in tenant 'devaa'
2024-07-20 16:54:50,781 [omNode-2-OMStateMachineApplyTransactionThread - 0] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:unlockWriteInOMRequest(170)) - Authorizer write lock is not held in this lock instance. This OM might be follower, or leader changed. Ignored
2024-07-20 16:54:50,781 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=TENANT_REVOKE_USER_ACCESSID {accessId=devaa$alice, userPrincipal=alice, tenant=devaa} | ret=SUCCESS |  
2024-07-20 16:54:50,782 [omNode-2-OMStateMachineApplyTransactionThread - 0] INFO  tenant.OMTenantRevokeUserAccessIdRequest (OMTenantRevokeUserAccessIdRequest.java:validateAndUpdateCache(255)) - Revoked user 'alice' accessId 'devaa$alice' to tenant 'devaa'
2024-07-20 16:54:50,803 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=GET_SERVICE_LIST {} | ret=SUCCESS |  
2024-07-20 16:54:50,807 [IPC Server handler 19 on default port 15004] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:tryWriteLock(109)) - Trying to acquire authorizer write lock from thread 440
2024-07-20 16:54:50,807 [IPC Server handler 19 on default port 15004] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:tryWriteLockThrowOnTimeout(142)) - Acquired authorizer write lock from thread 440 with stamp 8064
2024-07-20 16:54:50,807 [IPC Server handler 19 on default port 15004] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:tryWriteLockInOMRequest(160)) - Set omRequestWriteLockStamp to 8064, omRequestWriteLockHolderTid to 440
2024-07-20 16:54:50,815 [omNode-1-OMStateMachineApplyTransactionThread - 0] INFO  om.S3SecretManager (S3SecretManager.java:updateCache(105)) - Updating cache for accessId/user: devaa$alice.
2024-07-20 16:54:50,815 [omNode-1-OMStateMachineApplyTransactionThread - 0] INFO  om.OMMultiTenantManagerImpl (OMMultiTenantManagerImpl.java:assignUserToTenant(626)) - Adding to cache: user 'alice' accessId 'devaa$alice' in tenant 'devaa'
2024-07-20 16:54:50,815 [omNode-1-OMStateMachineApplyTransactionThread - 0] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:unlockWriteInOMRequest(181)) - Restored omRequestWriteLockStamp to 0, omRequestWriteLockHolderTid to 0
2024-07-20 16:54:50,815 [omNode-1-OMStateMachineApplyTransactionThread - 0] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:unlockWrite(122)) - Releasing authorizer write lock from thread 604 with stamp 8064
2024-07-20 16:54:50,815 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=TENANT_ASSIGN_USER_ACCESSID {accessId=devaa$alice, user=alice, tenant=devaa} | ret=SUCCESS |  
2024-07-20 16:54:50,815 [omNode-1-OMStateMachineApplyTransactionThread - 0] INFO  tenant.OMTenantAssignUserAccessIdRequest (OMTenantAssignUserAccessIdRequest.java:validateAndUpdateCache(358)) - Assigned user 'alice' to tenant 'devaa' with accessId 'devaa$alice'
2024-07-20 16:54:50,818 [main] INFO  shell.TestOzoneTenantShell (TestOzoneTenantShell.java:execute(212)) - Executing shell command with args [--verbose, user, assign-admin, devaa$alice, --tenant=devaa, --delegated=true, --om-service-id=om-service-test1]
2024-07-20 16:54:50,822 [omNode-3-OMStateMachineApplyTransactionThread - 0] INFO  om.S3SecretManager (S3SecretManager.java:updateCache(105)) - Updating cache for accessId/user: devaa$alice.
2024-07-20 16:54:50,822 [omNode-3-OMStateMachineApplyTransactionThread - 0] INFO  om.OMMultiTenantManagerImpl (OMMultiTenantManagerImpl.java:assignUserToTenant(626)) - Adding to cache: user 'alice' accessId 'devaa$alice' in tenant 'devaa'
2024-07-20 16:54:50,822 [omNode-3-OMStateMachineApplyTransactionThread - 0] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:unlockWriteInOMRequest(170)) - Authorizer write lock is not held in this lock instance. This OM might be follower, or leader changed. Ignored
2024-07-20 16:54:50,822 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=TENANT_ASSIGN_USER_ACCESSID {accessId=devaa$alice, user=alice, tenant=devaa} | ret=SUCCESS |  
2024-07-20 16:54:50,822 [omNode-3-OMStateMachineApplyTransactionThread - 0] INFO  tenant.OMTenantAssignUserAccessIdRequest (OMTenantAssignUserAccessIdRequest.java:validateAndUpdateCache(358)) - Assigned user 'alice' to tenant 'devaa' with accessId 'devaa$alice'
2024-07-20 16:54:50,825 [omNode-2-OMStateMachineApplyTransactionThread - 0] INFO  om.S3SecretManager (S3SecretManager.java:updateCache(105)) - Updating cache for accessId/user: devaa$alice.
2024-07-20 16:54:50,825 [omNode-2-OMStateMachineApplyTransactionThread - 0] INFO  om.OMMultiTenantManagerImpl (OMMultiTenantManagerImpl.java:assignUserToTenant(626)) - Adding to cache: user 'alice' accessId 'devaa$alice' in tenant 'devaa'
2024-07-20 16:54:50,825 [omNode-2-OMStateMachineApplyTransactionThread - 0] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:unlockWriteInOMRequest(170)) - Authorizer write lock is not held in this lock instance. This OM might be follower, or leader changed. Ignored
2024-07-20 16:54:50,825 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=TENANT_ASSIGN_USER_ACCESSID {accessId=devaa$alice, user=alice, tenant=devaa} | ret=SUCCESS |  
2024-07-20 16:54:50,826 [omNode-2-OMStateMachineApplyTransactionThread - 0] INFO  tenant.OMTenantAssignUserAccessIdRequest (OMTenantAssignUserAccessIdRequest.java:validateAndUpdateCache(358)) - Assigned user 'alice' to tenant 'devaa' with accessId 'devaa$alice'
2024-07-20 16:54:50,848 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=GET_SERVICE_LIST {} | ret=SUCCESS |  
2024-07-20 16:54:50,852 [IPC Server handler 1 on default port 15004] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:tryWriteLock(109)) - Trying to acquire authorizer write lock from thread 422
2024-07-20 16:54:50,852 [IPC Server handler 1 on default port 15004] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:tryWriteLockThrowOnTimeout(142)) - Acquired authorizer write lock from thread 422 with stamp 8320
2024-07-20 16:54:50,852 [IPC Server handler 1 on default port 15004] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:tryWriteLockInOMRequest(160)) - Set omRequestWriteLockStamp to 8320, omRequestWriteLockHolderTid to 422
2024-07-20 16:54:50,858 [omNode-1-OMStateMachineApplyTransactionThread - 0] INFO  om.OMMultiTenantManagerImpl (OMMultiTenantManagerImpl.java:assignTenantAdmin(667)) - Updating cache: accessId 'devaa$alice' isAdmin 'true' isDelegated 'true'
2024-07-20 16:54:50,859 [omNode-1-OMStateMachineApplyTransactionThread - 0] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:unlockWriteInOMRequest(181)) - Restored omRequestWriteLockStamp to 0, omRequestWriteLockHolderTid to 0
2024-07-20 16:54:50,859 [omNode-1-OMStateMachineApplyTransactionThread - 0] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:unlockWrite(122)) - Releasing authorizer write lock from thread 604 with stamp 8320
2024-07-20 16:54:50,859 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=TENANT_ASSIGN_ADMIN {tenant=devaa} | ret=SUCCESS |  
2024-07-20 16:54:50,859 [omNode-1-OMStateMachineApplyTransactionThread - 0] INFO  tenant.OMTenantAssignAdminRequest (OMTenantAssignAdminRequest.java:validateAndUpdateCache(245)) - Assigned admin to accessId 'devaa$alice' in tenant 'devaa', delegated: true
2024-07-20 16:54:50,861 [main] INFO  shell.TestOzoneTenantShell (TestOzoneTenantShell.java:execute(212)) - Executing shell command with args [--verbose, user, revoke-admin, devaa$alice, --tenant=devaa, --om-service-id=om-service-test1]
2024-07-20 16:54:50,866 [omNode-3-OMStateMachineApplyTransactionThread - 0] INFO  om.OMMultiTenantManagerImpl (OMMultiTenantManagerImpl.java:assignTenantAdmin(667)) - Updating cache: accessId 'devaa$alice' isAdmin 'true' isDelegated 'true'
2024-07-20 16:54:50,867 [omNode-3-OMStateMachineApplyTransactionThread - 0] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:unlockWriteInOMRequest(170)) - Authorizer write lock is not held in this lock instance. This OM might be follower, or leader changed. Ignored
2024-07-20 16:54:50,867 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=TENANT_ASSIGN_ADMIN {tenant=devaa} | ret=SUCCESS |  
2024-07-20 16:54:50,867 [omNode-3-OMStateMachineApplyTransactionThread - 0] INFO  tenant.OMTenantAssignAdminRequest (OMTenantAssignAdminRequest.java:validateAndUpdateCache(245)) - Assigned admin to accessId 'devaa$alice' in tenant 'devaa', delegated: true
2024-07-20 16:54:50,867 [omNode-2-OMStateMachineApplyTransactionThread - 0] INFO  om.OMMultiTenantManagerImpl (OMMultiTenantManagerImpl.java:assignTenantAdmin(667)) - Updating cache: accessId 'devaa$alice' isAdmin 'true' isDelegated 'true'
2024-07-20 16:54:50,867 [omNode-2-OMStateMachineApplyTransactionThread - 0] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:unlockWriteInOMRequest(170)) - Authorizer write lock is not held in this lock instance. This OM might be follower, or leader changed. Ignored
2024-07-20 16:54:50,867 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=TENANT_ASSIGN_ADMIN {tenant=devaa} | ret=SUCCESS |  
2024-07-20 16:54:50,868 [omNode-2-OMStateMachineApplyTransactionThread - 0] INFO  tenant.OMTenantAssignAdminRequest (OMTenantAssignAdminRequest.java:validateAndUpdateCache(245)) - Assigned admin to accessId 'devaa$alice' in tenant 'devaa', delegated: true
2024-07-20 16:54:50,884 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=GET_SERVICE_LIST {} | ret=SUCCESS |  
2024-07-20 16:54:50,888 [IPC Server handler 3 on default port 15004] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:tryWriteLock(109)) - Trying to acquire authorizer write lock from thread 424
2024-07-20 16:54:50,888 [IPC Server handler 3 on default port 15004] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:tryWriteLockThrowOnTimeout(142)) - Acquired authorizer write lock from thread 424 with stamp 8576
2024-07-20 16:54:50,888 [IPC Server handler 3 on default port 15004] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:tryWriteLockInOMRequest(160)) - Set omRequestWriteLockStamp to 8576, omRequestWriteLockHolderTid to 424
2024-07-20 16:54:50,895 [omNode-1-OMStateMachineApplyTransactionThread - 0] INFO  om.OMMultiTenantManagerImpl (OMMultiTenantManagerImpl.java:revokeTenantAdmin(686)) - Updating cache: accessId 'devaa$alice' isAdmin 'false' isDelegated 'false'
2024-07-20 16:54:50,895 [omNode-1-OMStateMachineApplyTransactionThread - 0] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:unlockWriteInOMRequest(181)) - Restored omRequestWriteLockStamp to 0, omRequestWriteLockHolderTid to 0
2024-07-20 16:54:50,895 [omNode-1-OMStateMachineApplyTransactionThread - 0] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:unlockWrite(122)) - Releasing authorizer write lock from thread 604 with stamp 8576
2024-07-20 16:54:50,895 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=TENANT_REVOKE_ADMIN {tenant=devaa} | ret=SUCCESS |  
2024-07-20 16:54:50,895 [omNode-1-OMStateMachineApplyTransactionThread - 0] INFO  tenant.OMTenantRevokeAdminRequest (OMTenantRevokeAdminRequest.java:validateAndUpdateCache(235)) - Revoked admin of accessId 'devaa$alice' from tenant 'devaa'
2024-07-20 16:54:50,898 [main] INFO  shell.TestOzoneTenantShell (TestOzoneTenantShell.java:execute(212)) - Executing shell command with args [user, revoke, devaa$alice, --om-service-id=om-service-test1]
2024-07-20 16:54:50,899 [omNode-3-OMStateMachineApplyTransactionThread - 0] INFO  om.OMMultiTenantManagerImpl (OMMultiTenantManagerImpl.java:revokeTenantAdmin(686)) - Updating cache: accessId 'devaa$alice' isAdmin 'false' isDelegated 'false'
2024-07-20 16:54:50,899 [omNode-3-OMStateMachineApplyTransactionThread - 0] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:unlockWriteInOMRequest(170)) - Authorizer write lock is not held in this lock instance. This OM might be follower, or leader changed. Ignored
2024-07-20 16:54:50,899 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=TENANT_REVOKE_ADMIN {tenant=devaa} | ret=SUCCESS |  
2024-07-20 16:54:50,900 [omNode-2-OMStateMachineApplyTransactionThread - 0] INFO  om.OMMultiTenantManagerImpl (OMMultiTenantManagerImpl.java:revokeTenantAdmin(686)) - Updating cache: accessId 'devaa$alice' isAdmin 'false' isDelegated 'false'
2024-07-20 16:54:50,900 [omNode-2-OMStateMachineApplyTransactionThread - 0] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:unlockWriteInOMRequest(170)) - Authorizer write lock is not held in this lock instance. This OM might be follower, or leader changed. Ignored
2024-07-20 16:54:50,900 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=TENANT_REVOKE_ADMIN {tenant=devaa} | ret=SUCCESS |  
2024-07-20 16:54:50,900 [omNode-2-OMStateMachineApplyTransactionThread - 0] INFO  tenant.OMTenantRevokeAdminRequest (OMTenantRevokeAdminRequest.java:validateAndUpdateCache(235)) - Revoked admin of accessId 'devaa$alice' from tenant 'devaa'
2024-07-20 16:54:50,900 [omNode-3-OMStateMachineApplyTransactionThread - 0] INFO  tenant.OMTenantRevokeAdminRequest (OMTenantRevokeAdminRequest.java:validateAndUpdateCache(235)) - Revoked admin of accessId 'devaa$alice' from tenant 'devaa'
2024-07-20 16:54:50,924 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=GET_SERVICE_LIST {} | ret=SUCCESS |  
2024-07-20 16:54:50,930 [IPC Server handler 4 on default port 15004] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:tryWriteLock(109)) - Trying to acquire authorizer write lock from thread 425
2024-07-20 16:54:50,930 [IPC Server handler 4 on default port 15004] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:tryWriteLockThrowOnTimeout(142)) - Acquired authorizer write lock from thread 425 with stamp 8832
2024-07-20 16:54:50,930 [IPC Server handler 4 on default port 15004] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:tryWriteLockInOMRequest(160)) - Set omRequestWriteLockStamp to 8832, omRequestWriteLockHolderTid to 425
2024-07-20 16:54:50,938 [omNode-1-OMStateMachineApplyTransactionThread - 0] INFO  om.OMMultiTenantManagerImpl (OMMultiTenantManagerImpl.java:revokeUserAccessId(640)) - Removing from cache: accessId 'devaa$alice' in tenant 'devaa'
2024-07-20 16:54:50,939 [omNode-1-OMStateMachineApplyTransactionThread - 0] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:unlockWriteInOMRequest(181)) - Restored omRequestWriteLockStamp to 0, omRequestWriteLockHolderTid to 0
2024-07-20 16:54:50,939 [omNode-1-OMStateMachineApplyTransactionThread - 0] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:unlockWrite(122)) - Releasing authorizer write lock from thread 604 with stamp 8832
2024-07-20 16:54:50,940 [omNode-2-OMStateMachineApplyTransactionThread - 0] INFO  om.OMMultiTenantManagerImpl (OMMultiTenantManagerImpl.java:revokeUserAccessId(640)) - Removing from cache: accessId 'devaa$alice' in tenant 'devaa'
2024-07-20 16:54:50,940 [omNode-2-OMStateMachineApplyTransactionThread - 0] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:unlockWriteInOMRequest(170)) - Authorizer write lock is not held in this lock instance. This OM might be follower, or leader changed. Ignored
2024-07-20 16:54:50,940 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=TENANT_REVOKE_USER_ACCESSID {accessId=devaa$alice, userPrincipal=alice, tenant=devaa} | ret=SUCCESS |  
2024-07-20 16:54:50,941 [omNode-1-OMStateMachineApplyTransactionThread - 0] INFO  tenant.OMTenantRevokeUserAccessIdRequest (OMTenantRevokeUserAccessIdRequest.java:validateAndUpdateCache(255)) - Revoked user 'alice' accessId 'devaa$alice' to tenant 'devaa'
2024-07-20 16:54:50,940 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=TENANT_REVOKE_USER_ACCESSID {accessId=devaa$alice, userPrincipal=alice, tenant=devaa} | ret=SUCCESS |  
2024-07-20 16:54:50,942 [omNode-2-OMStateMachineApplyTransactionThread - 0] INFO  tenant.OMTenantRevokeUserAccessIdRequest (OMTenantRevokeUserAccessIdRequest.java:validateAndUpdateCache(255)) - Revoked user 'alice' accessId 'devaa$alice' to tenant 'devaa'
2024-07-20 16:54:50,944 [omNode-3-OMStateMachineApplyTransactionThread - 0] INFO  om.OMMultiTenantManagerImpl (OMMultiTenantManagerImpl.java:revokeUserAccessId(640)) - Removing from cache: accessId 'devaa$alice' in tenant 'devaa'
2024-07-20 16:54:50,944 [omNode-3-OMStateMachineApplyTransactionThread - 0] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:unlockWriteInOMRequest(170)) - Authorizer write lock is not held in this lock instance. This OM might be follower, or leader changed. Ignored
2024-07-20 16:54:50,944 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=TENANT_REVOKE_USER_ACCESSID {accessId=devaa$alice, userPrincipal=alice, tenant=devaa} | ret=SUCCESS |  
2024-07-20 16:54:50,944 [omNode-3-OMStateMachineApplyTransactionThread - 0] INFO  tenant.OMTenantRevokeUserAccessIdRequest (OMTenantRevokeUserAccessIdRequest.java:validateAndUpdateCache(255)) - Revoked user 'alice' accessId 'devaa$alice' to tenant 'devaa'
2024-07-20 16:54:50,946 [main] INFO  shell.TestOzoneTenantShell (TestOzoneTenantShell.java:execute(212)) - Executing shell command with args [user, assign, alice, --tenant=devaa, --om-service-id=om-service-test1]
2024-07-20 16:54:50,968 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=GET_SERVICE_LIST {} | ret=SUCCESS |  
2024-07-20 16:54:50,975 [IPC Server handler 10 on default port 15004] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:tryWriteLock(109)) - Trying to acquire authorizer write lock from thread 431
2024-07-20 16:54:50,975 [IPC Server handler 10 on default port 15004] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:tryWriteLockThrowOnTimeout(142)) - Acquired authorizer write lock from thread 431 with stamp 9088
2024-07-20 16:54:50,975 [IPC Server handler 10 on default port 15004] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:tryWriteLockInOMRequest(160)) - Set omRequestWriteLockStamp to 9088, omRequestWriteLockHolderTid to 431
2024-07-20 16:54:50,981 [omNode-1-OMStateMachineApplyTransactionThread - 0] INFO  om.S3SecretManager (S3SecretManager.java:updateCache(105)) - Updating cache for accessId/user: devaa$alice.
2024-07-20 16:54:50,981 [omNode-1-OMStateMachineApplyTransactionThread - 0] INFO  om.OMMultiTenantManagerImpl (OMMultiTenantManagerImpl.java:assignUserToTenant(626)) - Adding to cache: user 'alice' accessId 'devaa$alice' in tenant 'devaa'
2024-07-20 16:54:50,981 [omNode-1-OMStateMachineApplyTransactionThread - 0] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:unlockWriteInOMRequest(181)) - Restored omRequestWriteLockStamp to 0, omRequestWriteLockHolderTid to 0
2024-07-20 16:54:50,981 [omNode-1-OMStateMachineApplyTransactionThread - 0] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:unlockWrite(122)) - Releasing authorizer write lock from thread 604 with stamp 9088
2024-07-20 16:54:50,981 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=TENANT_ASSIGN_USER_ACCESSID {accessId=devaa$alice, user=alice, tenant=devaa} | ret=SUCCESS |  
2024-07-20 16:54:50,981 [omNode-1-OMStateMachineApplyTransactionThread - 0] INFO  tenant.OMTenantAssignUserAccessIdRequest (OMTenantAssignUserAccessIdRequest.java:validateAndUpdateCache(358)) - Assigned user 'alice' to tenant 'devaa' with accessId 'devaa$alice'
2024-07-20 16:54:50,984 [main] INFO  shell.TestOzoneTenantShell (TestOzoneTenantShell.java:execute(212)) - Executing shell command with args [--verbose, user, assign-admin, devaa$alice, --tenant=devaa, --delegated=true, --om-service-id=om-service-test1]
2024-07-20 16:54:50,986 [omNode-2-OMStateMachineApplyTransactionThread - 0] INFO  om.S3SecretManager (S3SecretManager.java:updateCache(105)) - Updating cache for accessId/user: devaa$alice.
2024-07-20 16:54:50,987 [omNode-3-OMStateMachineApplyTransactionThread - 0] INFO  om.S3SecretManager (S3SecretManager.java:updateCache(105)) - Updating cache for accessId/user: devaa$alice.
2024-07-20 16:54:50,987 [omNode-3-OMStateMachineApplyTransactionThread - 0] INFO  om.OMMultiTenantManagerImpl (OMMultiTenantManagerImpl.java:assignUserToTenant(626)) - Adding to cache: user 'alice' accessId 'devaa$alice' in tenant 'devaa'
2024-07-20 16:54:50,987 [omNode-3-OMStateMachineApplyTransactionThread - 0] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:unlockWriteInOMRequest(170)) - Authorizer write lock is not held in this lock instance. This OM might be follower, or leader changed. Ignored
2024-07-20 16:54:50,987 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=TENANT_ASSIGN_USER_ACCESSID {accessId=devaa$alice, user=alice, tenant=devaa} | ret=SUCCESS |  
2024-07-20 16:54:50,988 [omNode-3-OMStateMachineApplyTransactionThread - 0] INFO  tenant.OMTenantAssignUserAccessIdRequest (OMTenantAssignUserAccessIdRequest.java:validateAndUpdateCache(358)) - Assigned user 'alice' to tenant 'devaa' with accessId 'devaa$alice'
2024-07-20 16:54:50,989 [omNode-2-OMStateMachineApplyTransactionThread - 0] INFO  om.OMMultiTenantManagerImpl (OMMultiTenantManagerImpl.java:assignUserToTenant(626)) - Adding to cache: user 'alice' accessId 'devaa$alice' in tenant 'devaa'
2024-07-20 16:54:50,989 [omNode-2-OMStateMachineApplyTransactionThread - 0] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:unlockWriteInOMRequest(170)) - Authorizer write lock is not held in this lock instance. This OM might be follower, or leader changed. Ignored
2024-07-20 16:54:50,989 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=TENANT_ASSIGN_USER_ACCESSID {accessId=devaa$alice, user=alice, tenant=devaa} | ret=SUCCESS |  
2024-07-20 16:54:50,989 [omNode-2-OMStateMachineApplyTransactionThread - 0] INFO  tenant.OMTenantAssignUserAccessIdRequest (OMTenantAssignUserAccessIdRequest.java:validateAndUpdateCache(358)) - Assigned user 'alice' to tenant 'devaa' with accessId 'devaa$alice'
2024-07-20 16:54:51,005 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=GET_SERVICE_LIST {} | ret=SUCCESS |  
2024-07-20 16:54:51,009 [IPC Server handler 14 on default port 15004] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:tryWriteLock(109)) - Trying to acquire authorizer write lock from thread 435
2024-07-20 16:54:51,009 [IPC Server handler 14 on default port 15004] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:tryWriteLockThrowOnTimeout(142)) - Acquired authorizer write lock from thread 435 with stamp 9344
2024-07-20 16:54:51,009 [IPC Server handler 14 on default port 15004] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:tryWriteLockInOMRequest(160)) - Set omRequestWriteLockStamp to 9344, omRequestWriteLockHolderTid to 435
2024-07-20 16:54:51,015 [omNode-1-OMStateMachineApplyTransactionThread - 0] INFO  om.OMMultiTenantManagerImpl (OMMultiTenantManagerImpl.java:assignTenantAdmin(667)) - Updating cache: accessId 'devaa$alice' isAdmin 'true' isDelegated 'true'
2024-07-20 16:54:51,015 [omNode-1-OMStateMachineApplyTransactionThread - 0] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:unlockWriteInOMRequest(181)) - Restored omRequestWriteLockStamp to 0, omRequestWriteLockHolderTid to 0
2024-07-20 16:54:51,015 [omNode-1-OMStateMachineApplyTransactionThread - 0] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:unlockWrite(122)) - Releasing authorizer write lock from thread 604 with stamp 9344
2024-07-20 16:54:51,015 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=TENANT_ASSIGN_ADMIN {tenant=devaa} | ret=SUCCESS |  
2024-07-20 16:54:51,015 [omNode-1-OMStateMachineApplyTransactionThread - 0] INFO  tenant.OMTenantAssignAdminRequest (OMTenantAssignAdminRequest.java:validateAndUpdateCache(245)) - Assigned admin to accessId 'devaa$alice' in tenant 'devaa', delegated: true
2024-07-20 16:54:51,019 [omNode-2-OMStateMachineApplyTransactionThread - 0] INFO  om.OMMultiTenantManagerImpl (OMMultiTenantManagerImpl.java:assignTenantAdmin(667)) - Updating cache: accessId 'devaa$alice' isAdmin 'true' isDelegated 'true'
2024-07-20 16:54:51,019 [omNode-2-OMStateMachineApplyTransactionThread - 0] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:unlockWriteInOMRequest(170)) - Authorizer write lock is not held in this lock instance. This OM might be follower, or leader changed. Ignored
2024-07-20 16:54:51,019 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=TENANT_ASSIGN_ADMIN {tenant=devaa} | ret=SUCCESS |  
2024-07-20 16:54:51,019 [omNode-2-OMStateMachineApplyTransactionThread - 0] INFO  tenant.OMTenantAssignAdminRequest (OMTenantAssignAdminRequest.java:validateAndUpdateCache(245)) - Assigned admin to accessId 'devaa$alice' in tenant 'devaa', delegated: true
2024-07-20 16:54:51,019 [omNode-3-OMStateMachineApplyTransactionThread - 0] INFO  om.OMMultiTenantManagerImpl (OMMultiTenantManagerImpl.java:assignTenantAdmin(667)) - Updating cache: accessId 'devaa$alice' isAdmin 'true' isDelegated 'true'
2024-07-20 16:54:51,019 [omNode-3-OMStateMachineApplyTransactionThread - 0] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:unlockWriteInOMRequest(170)) - Authorizer write lock is not held in this lock instance. This OM might be follower, or leader changed. Ignored
2024-07-20 16:54:51,019 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=TENANT_ASSIGN_ADMIN {tenant=devaa} | ret=SUCCESS |  
2024-07-20 16:54:51,020 [omNode-3-OMStateMachineApplyTransactionThread - 0] INFO  tenant.OMTenantAssignAdminRequest (OMTenantAssignAdminRequest.java:validateAndUpdateCache(245)) - Assigned admin to accessId 'devaa$alice' in tenant 'devaa', delegated: true
2024-07-20 16:54:51,022 [main] INFO  shell.TestOzoneTenantShell (TestOzoneTenantShell.java:execute(212)) - Executing shell command with args [--verbose, user, revoke-admin, devaa$alice, --tenant=devaa, --om-service-id=om-service-test1]
2024-07-20 16:54:51,040 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=GET_SERVICE_LIST {} | ret=SUCCESS |  
2024-07-20 16:54:51,044 [IPC Server handler 16 on default port 15004] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:tryWriteLock(109)) - Trying to acquire authorizer write lock from thread 437
2024-07-20 16:54:51,044 [IPC Server handler 16 on default port 15004] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:tryWriteLockThrowOnTimeout(142)) - Acquired authorizer write lock from thread 437 with stamp 9600
2024-07-20 16:54:51,044 [IPC Server handler 16 on default port 15004] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:tryWriteLockInOMRequest(160)) - Set omRequestWriteLockStamp to 9600, omRequestWriteLockHolderTid to 437
2024-07-20 16:54:51,049 [omNode-1-OMStateMachineApplyTransactionThread - 0] INFO  om.OMMultiTenantManagerImpl (OMMultiTenantManagerImpl.java:revokeTenantAdmin(686)) - Updating cache: accessId 'devaa$alice' isAdmin 'false' isDelegated 'false'
2024-07-20 16:54:51,050 [omNode-1-OMStateMachineApplyTransactionThread - 0] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:unlockWriteInOMRequest(181)) - Restored omRequestWriteLockStamp to 0, omRequestWriteLockHolderTid to 0
2024-07-20 16:54:51,050 [omNode-1-OMStateMachineApplyTransactionThread - 0] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:unlockWrite(122)) - Releasing authorizer write lock from thread 604 with stamp 9600
2024-07-20 16:54:51,050 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=TENANT_REVOKE_ADMIN {tenant=devaa} | ret=SUCCESS |  
2024-07-20 16:54:51,050 [omNode-1-OMStateMachineApplyTransactionThread - 0] INFO  tenant.OMTenantRevokeAdminRequest (OMTenantRevokeAdminRequest.java:validateAndUpdateCache(235)) - Revoked admin of accessId 'devaa$alice' from tenant 'devaa'
2024-07-20 16:54:51,058 [main] INFO  shell.TestOzoneTenantShell (TestOzoneTenantShell.java:execute(212)) - Executing shell command with args [user, revoke, devaa$alice, --om-service-id=om-service-test1]
2024-07-20 16:54:51,060 [omNode-3-OMStateMachineApplyTransactionThread - 0] INFO  om.OMMultiTenantManagerImpl (OMMultiTenantManagerImpl.java:revokeTenantAdmin(686)) - Updating cache: accessId 'devaa$alice' isAdmin 'false' isDelegated 'false'
2024-07-20 16:54:51,060 [omNode-3-OMStateMachineApplyTransactionThread - 0] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:unlockWriteInOMRequest(170)) - Authorizer write lock is not held in this lock instance. This OM might be follower, or leader changed. Ignored
2024-07-20 16:54:51,060 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=TENANT_REVOKE_ADMIN {tenant=devaa} | ret=SUCCESS |  
2024-07-20 16:54:51,061 [omNode-3-OMStateMachineApplyTransactionThread - 0] INFO  tenant.OMTenantRevokeAdminRequest (OMTenantRevokeAdminRequest.java:validateAndUpdateCache(235)) - Revoked admin of accessId 'devaa$alice' from tenant 'devaa'
2024-07-20 16:54:51,062 [omNode-2-OMStateMachineApplyTransactionThread - 0] INFO  om.OMMultiTenantManagerImpl (OMMultiTenantManagerImpl.java:revokeTenantAdmin(686)) - Updating cache: accessId 'devaa$alice' isAdmin 'false' isDelegated 'false'
2024-07-20 16:54:51,062 [omNode-2-OMStateMachineApplyTransactionThread - 0] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:unlockWriteInOMRequest(170)) - Authorizer write lock is not held in this lock instance. This OM might be follower, or leader changed. Ignored
2024-07-20 16:54:51,062 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=TENANT_REVOKE_ADMIN {tenant=devaa} | ret=SUCCESS |  
2024-07-20 16:54:51,063 [omNode-2-OMStateMachineApplyTransactionThread - 0] INFO  tenant.OMTenantRevokeAdminRequest (OMTenantRevokeAdminRequest.java:validateAndUpdateCache(235)) - Revoked admin of accessId 'devaa$alice' from tenant 'devaa'
2024-07-20 16:54:51,081 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=GET_SERVICE_LIST {} | ret=SUCCESS |  
2024-07-20 16:54:51,087 [IPC Server handler 8 on default port 15004] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:tryWriteLock(109)) - Trying to acquire authorizer write lock from thread 429
2024-07-20 16:54:51,087 [IPC Server handler 8 on default port 15004] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:tryWriteLockThrowOnTimeout(142)) - Acquired authorizer write lock from thread 429 with stamp 9856
2024-07-20 16:54:51,087 [IPC Server handler 8 on default port 15004] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:tryWriteLockInOMRequest(160)) - Set omRequestWriteLockStamp to 9856, omRequestWriteLockHolderTid to 429
2024-07-20 16:54:51,092 [omNode-1-OMStateMachineApplyTransactionThread - 0] INFO  om.OMMultiTenantManagerImpl (OMMultiTenantManagerImpl.java:revokeUserAccessId(640)) - Removing from cache: accessId 'devaa$alice' in tenant 'devaa'
2024-07-20 16:54:51,093 [omNode-1-OMStateMachineApplyTransactionThread - 0] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:unlockWriteInOMRequest(181)) - Restored omRequestWriteLockStamp to 0, omRequestWriteLockHolderTid to 0
2024-07-20 16:54:51,093 [omNode-1-OMStateMachineApplyTransactionThread - 0] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:unlockWrite(122)) - Releasing authorizer write lock from thread 604 with stamp 9856
2024-07-20 16:54:51,093 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=TENANT_REVOKE_USER_ACCESSID {accessId=devaa$alice, userPrincipal=alice, tenant=devaa} | ret=SUCCESS |  
2024-07-20 16:54:51,093 [omNode-1-OMStateMachineApplyTransactionThread - 0] INFO  tenant.OMTenantRevokeUserAccessIdRequest (OMTenantRevokeUserAccessIdRequest.java:validateAndUpdateCache(255)) - Revoked user 'alice' accessId 'devaa$alice' to tenant 'devaa'
2024-07-20 16:54:51,095 [main] INFO  shell.TestOzoneTenantShell (TestOzoneTenantShell.java:execute(212)) - Executing shell command with args [user, assign, alice, --tenant=devaa, --om-service-id=om-service-test1]
2024-07-20 16:54:51,096 [omNode-2-OMStateMachineApplyTransactionThread - 0] INFO  om.OMMultiTenantManagerImpl (OMMultiTenantManagerImpl.java:revokeUserAccessId(640)) - Removing from cache: accessId 'devaa$alice' in tenant 'devaa'
2024-07-20 16:54:51,096 [omNode-2-OMStateMachineApplyTransactionThread - 0] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:unlockWriteInOMRequest(170)) - Authorizer write lock is not held in this lock instance. This OM might be follower, or leader changed. Ignored
2024-07-20 16:54:51,096 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=TENANT_REVOKE_USER_ACCESSID {accessId=devaa$alice, userPrincipal=alice, tenant=devaa} | ret=SUCCESS |  
2024-07-20 16:54:51,096 [omNode-2-OMStateMachineApplyTransactionThread - 0] INFO  tenant.OMTenantRevokeUserAccessIdRequest (OMTenantRevokeUserAccessIdRequest.java:validateAndUpdateCache(255)) - Revoked user 'alice' accessId 'devaa$alice' to tenant 'devaa'
2024-07-20 16:54:51,096 [omNode-3-OMStateMachineApplyTransactionThread - 0] INFO  om.OMMultiTenantManagerImpl (OMMultiTenantManagerImpl.java:revokeUserAccessId(640)) - Removing from cache: accessId 'devaa$alice' in tenant 'devaa'
2024-07-20 16:54:51,097 [omNode-3-OMStateMachineApplyTransactionThread - 0] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:unlockWriteInOMRequest(170)) - Authorizer write lock is not held in this lock instance. This OM might be follower, or leader changed. Ignored
2024-07-20 16:54:51,097 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=TENANT_REVOKE_USER_ACCESSID {accessId=devaa$alice, userPrincipal=alice, tenant=devaa} | ret=SUCCESS |  
2024-07-20 16:54:51,097 [omNode-3-OMStateMachineApplyTransactionThread - 0] INFO  tenant.OMTenantRevokeUserAccessIdRequest (OMTenantRevokeUserAccessIdRequest.java:validateAndUpdateCache(255)) - Revoked user 'alice' accessId 'devaa$alice' to tenant 'devaa'
2024-07-20 16:54:51,117 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=GET_SERVICE_LIST {} | ret=SUCCESS |  
2024-07-20 16:54:51,125 [IPC Server handler 12 on default port 15004] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:tryWriteLock(109)) - Trying to acquire authorizer write lock from thread 433
2024-07-20 16:54:51,125 [IPC Server handler 12 on default port 15004] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:tryWriteLockThrowOnTimeout(142)) - Acquired authorizer write lock from thread 433 with stamp 10112
2024-07-20 16:54:51,125 [IPC Server handler 12 on default port 15004] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:tryWriteLockInOMRequest(160)) - Set omRequestWriteLockStamp to 10112, omRequestWriteLockHolderTid to 433
2024-07-20 16:54:51,131 [omNode-1-OMStateMachineApplyTransactionThread - 0] INFO  om.S3SecretManager (S3SecretManager.java:updateCache(105)) - Updating cache for accessId/user: devaa$alice.
2024-07-20 16:54:51,131 [omNode-1-OMStateMachineApplyTransactionThread - 0] INFO  om.OMMultiTenantManagerImpl (OMMultiTenantManagerImpl.java:assignUserToTenant(626)) - Adding to cache: user 'alice' accessId 'devaa$alice' in tenant 'devaa'
2024-07-20 16:54:51,131 [omNode-1-OMStateMachineApplyTransactionThread - 0] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:unlockWriteInOMRequest(181)) - Restored omRequestWriteLockStamp to 0, omRequestWriteLockHolderTid to 0
2024-07-20 16:54:51,131 [omNode-1-OMStateMachineApplyTransactionThread - 0] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:unlockWrite(122)) - Releasing authorizer write lock from thread 604 with stamp 10112
2024-07-20 16:54:51,131 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=TENANT_ASSIGN_USER_ACCESSID {accessId=devaa$alice, user=alice, tenant=devaa} | ret=SUCCESS |  
2024-07-20 16:54:51,131 [omNode-1-OMStateMachineApplyTransactionThread - 0] INFO  tenant.OMTenantAssignUserAccessIdRequest (OMTenantAssignUserAccessIdRequest.java:validateAndUpdateCache(358)) - Assigned user 'alice' to tenant 'devaa' with accessId 'devaa$alice'
2024-07-20 16:54:51,134 [main] INFO  shell.TestOzoneTenantShell (TestOzoneTenantShell.java:execute(212)) - Executing shell command with args [--verbose, user, assign-admin, devaa$alice, --tenant=devaa, --delegated=true, --om-service-id=om-service-test1]
2024-07-20 16:54:51,135 [omNode-3-OMStateMachineApplyTransactionThread - 0] INFO  om.S3SecretManager (S3SecretManager.java:updateCache(105)) - Updating cache for accessId/user: devaa$alice.
2024-07-20 16:54:51,136 [omNode-3-OMStateMachineApplyTransactionThread - 0] INFO  om.OMMultiTenantManagerImpl (OMMultiTenantManagerImpl.java:assignUserToTenant(626)) - Adding to cache: user 'alice' accessId 'devaa$alice' in tenant 'devaa'
2024-07-20 16:54:51,136 [omNode-3-OMStateMachineApplyTransactionThread - 0] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:unlockWriteInOMRequest(170)) - Authorizer write lock is not held in this lock instance. This OM might be follower, or leader changed. Ignored
2024-07-20 16:54:51,136 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=TENANT_ASSIGN_USER_ACCESSID {accessId=devaa$alice, user=alice, tenant=devaa} | ret=SUCCESS |  
2024-07-20 16:54:51,136 [omNode-3-OMStateMachineApplyTransactionThread - 0] INFO  tenant.OMTenantAssignUserAccessIdRequest (OMTenantAssignUserAccessIdRequest.java:validateAndUpdateCache(358)) - Assigned user 'alice' to tenant 'devaa' with accessId 'devaa$alice'
2024-07-20 16:54:51,139 [omNode-2-OMStateMachineApplyTransactionThread - 0] INFO  om.S3SecretManager (S3SecretManager.java:updateCache(105)) - Updating cache for accessId/user: devaa$alice.
2024-07-20 16:54:51,139 [omNode-2-OMStateMachineApplyTransactionThread - 0] INFO  om.OMMultiTenantManagerImpl (OMMultiTenantManagerImpl.java:assignUserToTenant(626)) - Adding to cache: user 'alice' accessId 'devaa$alice' in tenant 'devaa'
2024-07-20 16:54:51,140 [omNode-2-OMStateMachineApplyTransactionThread - 0] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:unlockWriteInOMRequest(170)) - Authorizer write lock is not held in this lock instance. This OM might be follower, or leader changed. Ignored
2024-07-20 16:54:51,140 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=TENANT_ASSIGN_USER_ACCESSID {accessId=devaa$alice, user=alice, tenant=devaa} | ret=SUCCESS |  
2024-07-20 16:54:51,140 [omNode-2-OMStateMachineApplyTransactionThread - 0] INFO  tenant.OMTenantAssignUserAccessIdRequest (OMTenantAssignUserAccessIdRequest.java:validateAndUpdateCache(358)) - Assigned user 'alice' to tenant 'devaa' with accessId 'devaa$alice'
2024-07-20 16:54:51,159 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=GET_SERVICE_LIST {} | ret=SUCCESS |  
2024-07-20 16:54:51,163 [IPC Server handler 15 on default port 15004] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:tryWriteLock(109)) - Trying to acquire authorizer write lock from thread 436
2024-07-20 16:54:51,163 [IPC Server handler 15 on default port 15004] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:tryWriteLockThrowOnTimeout(142)) - Acquired authorizer write lock from thread 436 with stamp 10368
2024-07-20 16:54:51,163 [IPC Server handler 15 on default port 15004] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:tryWriteLockInOMRequest(160)) - Set omRequestWriteLockStamp to 10368, omRequestWriteLockHolderTid to 436
2024-07-20 16:54:51,171 [omNode-1-OMStateMachineApplyTransactionThread - 0] INFO  om.OMMultiTenantManagerImpl (OMMultiTenantManagerImpl.java:assignTenantAdmin(667)) - Updating cache: accessId 'devaa$alice' isAdmin 'true' isDelegated 'true'
2024-07-20 16:54:51,171 [omNode-1-OMStateMachineApplyTransactionThread - 0] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:unlockWriteInOMRequest(181)) - Restored omRequestWriteLockStamp to 0, omRequestWriteLockHolderTid to 0
2024-07-20 16:54:51,171 [omNode-1-OMStateMachineApplyTransactionThread - 0] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:unlockWrite(122)) - Releasing authorizer write lock from thread 604 with stamp 10368
2024-07-20 16:54:51,172 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=TENANT_ASSIGN_ADMIN {tenant=devaa} | ret=SUCCESS |  
2024-07-20 16:54:51,172 [omNode-1-OMStateMachineApplyTransactionThread - 0] INFO  tenant.OMTenantAssignAdminRequest (OMTenantAssignAdminRequest.java:validateAndUpdateCache(245)) - Assigned admin to accessId 'devaa$alice' in tenant 'devaa', delegated: true
2024-07-20 16:54:51,174 [main] INFO  shell.TestOzoneTenantShell (TestOzoneTenantShell.java:execute(212)) - Executing shell command with args [--verbose, user, revoke-admin, devaa$alice, --tenant=devaa, --om-service-id=om-service-test1]
2024-07-20 16:54:51,175 [omNode-2-OMStateMachineApplyTransactionThread - 0] INFO  om.OMMultiTenantManagerImpl (OMMultiTenantManagerImpl.java:assignTenantAdmin(667)) - Updating cache: accessId 'devaa$alice' isAdmin 'true' isDelegated 'true'
2024-07-20 16:54:51,175 [omNode-3-OMStateMachineApplyTransactionThread - 0] INFO  om.OMMultiTenantManagerImpl (OMMultiTenantManagerImpl.java:assignTenantAdmin(667)) - Updating cache: accessId 'devaa$alice' isAdmin 'true' isDelegated 'true'
2024-07-20 16:54:51,176 [omNode-2-OMStateMachineApplyTransactionThread - 0] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:unlockWriteInOMRequest(170)) - Authorizer write lock is not held in this lock instance. This OM might be follower, or leader changed. Ignored
2024-07-20 16:54:51,176 [omNode-3-OMStateMachineApplyTransactionThread - 0] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:unlockWriteInOMRequest(170)) - Authorizer write lock is not held in this lock instance. This OM might be follower, or leader changed. Ignored
2024-07-20 16:54:51,176 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=TENANT_ASSIGN_ADMIN {tenant=devaa} | ret=SUCCESS |  
2024-07-20 16:54:51,176 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=TENANT_ASSIGN_ADMIN {tenant=devaa} | ret=SUCCESS |  
2024-07-20 16:54:51,177 [omNode-3-OMStateMachineApplyTransactionThread - 0] INFO  tenant.OMTenantAssignAdminRequest (OMTenantAssignAdminRequest.java:validateAndUpdateCache(245)) - Assigned admin to accessId 'devaa$alice' in tenant 'devaa', delegated: true
2024-07-20 16:54:51,177 [omNode-2-OMStateMachineApplyTransactionThread - 0] INFO  tenant.OMTenantAssignAdminRequest (OMTenantAssignAdminRequest.java:validateAndUpdateCache(245)) - Assigned admin to accessId 'devaa$alice' in tenant 'devaa', delegated: true
2024-07-20 16:54:51,201 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=GET_SERVICE_LIST {} | ret=SUCCESS |  
2024-07-20 16:54:51,204 [IPC Server handler 19 on default port 15004] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:tryWriteLock(109)) - Trying to acquire authorizer write lock from thread 440
2024-07-20 16:54:51,205 [IPC Server handler 19 on default port 15004] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:tryWriteLockThrowOnTimeout(142)) - Acquired authorizer write lock from thread 440 with stamp 10624
2024-07-20 16:54:51,205 [IPC Server handler 19 on default port 15004] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:tryWriteLockInOMRequest(160)) - Set omRequestWriteLockStamp to 10624, omRequestWriteLockHolderTid to 440
2024-07-20 16:54:51,211 [omNode-1-OMStateMachineApplyTransactionThread - 0] INFO  om.OMMultiTenantManagerImpl (OMMultiTenantManagerImpl.java:revokeTenantAdmin(686)) - Updating cache: accessId 'devaa$alice' isAdmin 'false' isDelegated 'false'
2024-07-20 16:54:51,211 [omNode-1-OMStateMachineApplyTransactionThread - 0] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:unlockWriteInOMRequest(181)) - Restored omRequestWriteLockStamp to 0, omRequestWriteLockHolderTid to 0
2024-07-20 16:54:51,211 [omNode-1-OMStateMachineApplyTransactionThread - 0] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:unlockWrite(122)) - Releasing authorizer write lock from thread 604 with stamp 10624
2024-07-20 16:54:51,211 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=TENANT_REVOKE_ADMIN {tenant=devaa} | ret=SUCCESS |  
2024-07-20 16:54:51,211 [omNode-1-OMStateMachineApplyTransactionThread - 0] INFO  tenant.OMTenantRevokeAdminRequest (OMTenantRevokeAdminRequest.java:validateAndUpdateCache(235)) - Revoked admin of accessId 'devaa$alice' from tenant 'devaa'
2024-07-20 16:54:51,213 [main] INFO  shell.TestOzoneTenantShell (TestOzoneTenantShell.java:execute(212)) - Executing shell command with args [user, revoke, devaa$alice, --om-service-id=om-service-test1]
2024-07-20 16:54:51,216 [omNode-2-OMStateMachineApplyTransactionThread - 0] INFO  om.OMMultiTenantManagerImpl (OMMultiTenantManagerImpl.java:revokeTenantAdmin(686)) - Updating cache: accessId 'devaa$alice' isAdmin 'false' isDelegated 'false'
2024-07-20 16:54:51,216 [omNode-2-OMStateMachineApplyTransactionThread - 0] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:unlockWriteInOMRequest(170)) - Authorizer write lock is not held in this lock instance. This OM might be follower, or leader changed. Ignored
2024-07-20 16:54:51,216 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=TENANT_REVOKE_ADMIN {tenant=devaa} | ret=SUCCESS |  
2024-07-20 16:54:51,216 [omNode-2-OMStateMachineApplyTransactionThread - 0] INFO  tenant.OMTenantRevokeAdminRequest (OMTenantRevokeAdminRequest.java:validateAndUpdateCache(235)) - Revoked admin of accessId 'devaa$alice' from tenant 'devaa'
2024-07-20 16:54:51,219 [omNode-3-OMStateMachineApplyTransactionThread - 0] INFO  om.OMMultiTenantManagerImpl (OMMultiTenantManagerImpl.java:revokeTenantAdmin(686)) - Updating cache: accessId 'devaa$alice' isAdmin 'false' isDelegated 'false'
2024-07-20 16:54:51,219 [omNode-3-OMStateMachineApplyTransactionThread - 0] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:unlockWriteInOMRequest(170)) - Authorizer write lock is not held in this lock instance. This OM might be follower, or leader changed. Ignored
2024-07-20 16:54:51,219 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=TENANT_REVOKE_ADMIN {tenant=devaa} | ret=SUCCESS |  
2024-07-20 16:54:51,220 [omNode-3-OMStateMachineApplyTransactionThread - 0] INFO  tenant.OMTenantRevokeAdminRequest (OMTenantRevokeAdminRequest.java:validateAndUpdateCache(235)) - Revoked admin of accessId 'devaa$alice' from tenant 'devaa'
2024-07-20 16:54:51,236 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=GET_SERVICE_LIST {} | ret=SUCCESS |  
2024-07-20 16:54:51,243 [IPC Server handler 1 on default port 15004] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:tryWriteLock(109)) - Trying to acquire authorizer write lock from thread 422
2024-07-20 16:54:51,243 [IPC Server handler 1 on default port 15004] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:tryWriteLockThrowOnTimeout(142)) - Acquired authorizer write lock from thread 422 with stamp 10880
2024-07-20 16:54:51,243 [IPC Server handler 1 on default port 15004] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:tryWriteLockInOMRequest(160)) - Set omRequestWriteLockStamp to 10880, omRequestWriteLockHolderTid to 422
2024-07-20 16:54:51,250 [omNode-1-OMStateMachineApplyTransactionThread - 0] INFO  om.OMMultiTenantManagerImpl (OMMultiTenantManagerImpl.java:revokeUserAccessId(640)) - Removing from cache: accessId 'devaa$alice' in tenant 'devaa'
2024-07-20 16:54:51,250 [omNode-1-OMStateMachineApplyTransactionThread - 0] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:unlockWriteInOMRequest(181)) - Restored omRequestWriteLockStamp to 0, omRequestWriteLockHolderTid to 0
2024-07-20 16:54:51,250 [omNode-1-OMStateMachineApplyTransactionThread - 0] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:unlockWrite(122)) - Releasing authorizer write lock from thread 604 with stamp 10880
2024-07-20 16:54:51,250 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=TENANT_REVOKE_USER_ACCESSID {accessId=devaa$alice, userPrincipal=alice, tenant=devaa} | ret=SUCCESS |  
2024-07-20 16:54:51,251 [omNode-1-OMStateMachineApplyTransactionThread - 0] INFO  tenant.OMTenantRevokeUserAccessIdRequest (OMTenantRevokeUserAccessIdRequest.java:validateAndUpdateCache(255)) - Revoked user 'alice' accessId 'devaa$alice' to tenant 'devaa'
2024-07-20 16:54:51,252 [main] INFO  shell.TestOzoneTenantShell (TestOzoneTenantShell.java:execute(212)) - Executing shell command with args [delete, devaa, --om-service-id=om-service-test1]
2024-07-20 16:54:51,255 [omNode-3-OMStateMachineApplyTransactionThread - 0] INFO  om.OMMultiTenantManagerImpl (OMMultiTenantManagerImpl.java:revokeUserAccessId(640)) - Removing from cache: accessId 'devaa$alice' in tenant 'devaa'
2024-07-20 16:54:51,255 [omNode-3-OMStateMachineApplyTransactionThread - 0] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:unlockWriteInOMRequest(170)) - Authorizer write lock is not held in this lock instance. This OM might be follower, or leader changed. Ignored
2024-07-20 16:54:51,255 [omNode-2-OMStateMachineApplyTransactionThread - 0] INFO  om.OMMultiTenantManagerImpl (OMMultiTenantManagerImpl.java:revokeUserAccessId(640)) - Removing from cache: accessId 'devaa$alice' in tenant 'devaa'
2024-07-20 16:54:51,255 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=TENANT_REVOKE_USER_ACCESSID {accessId=devaa$alice, userPrincipal=alice, tenant=devaa} | ret=SUCCESS |  
2024-07-20 16:54:51,255 [omNode-2-OMStateMachineApplyTransactionThread - 0] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:unlockWriteInOMRequest(170)) - Authorizer write lock is not held in this lock instance. This OM might be follower, or leader changed. Ignored
2024-07-20 16:54:51,256 [omNode-3-OMStateMachineApplyTransactionThread - 0] INFO  tenant.OMTenantRevokeUserAccessIdRequest (OMTenantRevokeUserAccessIdRequest.java:validateAndUpdateCache(255)) - Revoked user 'alice' accessId 'devaa$alice' to tenant 'devaa'
2024-07-20 16:54:51,256 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=TENANT_REVOKE_USER_ACCESSID {accessId=devaa$alice, userPrincipal=alice, tenant=devaa} | ret=SUCCESS |  
2024-07-20 16:54:51,256 [omNode-2-OMStateMachineApplyTransactionThread - 0] INFO  tenant.OMTenantRevokeUserAccessIdRequest (OMTenantRevokeUserAccessIdRequest.java:validateAndUpdateCache(255)) - Revoked user 'alice' accessId 'devaa$alice' to tenant 'devaa'
2024-07-20 16:54:51,275 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=GET_SERVICE_LIST {} | ret=SUCCESS |  
2024-07-20 16:54:51,288 [IPC Server handler 3 on default port 15004] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:tryWriteLock(109)) - Trying to acquire authorizer write lock from thread 424
2024-07-20 16:54:51,288 [IPC Server handler 3 on default port 15004] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:tryWriteLockThrowOnTimeout(142)) - Acquired authorizer write lock from thread 424 with stamp 11136
2024-07-20 16:54:51,289 [IPC Server handler 3 on default port 15004] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:tryWriteLockInOMRequest(160)) - Set omRequestWriteLockStamp to 11136, omRequestWriteLockHolderTid to 424
2024-07-20 16:54:51,289 [IPC Server handler 3 on default port 15004] INFO  om.OMMultiTenantManagerImpl (OMMultiTenantManagerImpl.java:deleteTenant(323)) - Deleting tenant policies and roles from Ranger: OzoneTenant{tenantId='devaa', tenantRoleNames=[devaa-UserRole, devaa-AdminRole], accessPolicies=[devaa-VolumeAccess, devaa-BucketAccess], accountNameSpace=org.apache.hadoop.ozone.om.multitenant.impl.AccountNameSpaceImpl@7e77a597, bucketNameSpace=org.apache.hadoop.ozone.om.multitenant.impl.SingleVolumeTenantNamespace@4f9f131f}
2024-07-20 16:54:51,293 [omNode-1-OMStateMachineApplyTransactionThread - 0] INFO  om.OMMultiTenantManagerImpl (OMMultiTenantManagerImpl.java:deleteTenant(602)) - Removing tenant from in-memory cache: devaa
2024-07-20 16:54:51,293 [omNode-1-OMStateMachineApplyTransactionThread - 0] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:unlockWriteInOMRequest(181)) - Restored omRequestWriteLockStamp to 0, omRequestWriteLockHolderTid to 0
2024-07-20 16:54:51,293 [omNode-1-OMStateMachineApplyTransactionThread - 0] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:unlockWrite(122)) - Releasing authorizer write lock from thread 604 with stamp 11136
2024-07-20 16:54:51,293 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=UPDATE_VOLUME {volume=devaa} | ret=SUCCESS |  
2024-07-20 16:54:51,294 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=DELETE_TENANT {tenant=devaa} | ret=SUCCESS |  
2024-07-20 16:54:51,294 [omNode-1-OMStateMachineApplyTransactionThread - 0] INFO  tenant.OMTenantDeleteRequest (OMTenantDeleteRequest.java:validateAndUpdateCache(242)) - Deleted tenant 'devaa' and volume 'devaa'
2024-07-20 16:54:51,295 [omNode-3-OMStateMachineApplyTransactionThread - 0] INFO  om.OMMultiTenantManagerImpl (OMMultiTenantManagerImpl.java:deleteTenant(602)) - Removing tenant from in-memory cache: devaa
2024-07-20 16:54:51,295 [omNode-3-OMStateMachineApplyTransactionThread - 0] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:unlockWriteInOMRequest(170)) - Authorizer write lock is not held in this lock instance. This OM might be follower, or leader changed. Ignored
2024-07-20 16:54:51,295 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=UPDATE_VOLUME {volume=devaa} | ret=SUCCESS |  
2024-07-20 16:54:51,295 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=DELETE_TENANT {tenant=devaa} | ret=SUCCESS |  
2024-07-20 16:54:51,295 [omNode-3-OMStateMachineApplyTransactionThread - 0] INFO  tenant.OMTenantDeleteRequest (OMTenantDeleteRequest.java:validateAndUpdateCache(242)) - Deleted tenant 'devaa' and volume 'devaa'
2024-07-20 16:54:51,296 [main] INFO  shell.TestOzoneTenantShell (TestOzoneTenantShell.java:execute(212)) - Executing shell command with args [volume, delete, devaa]
2024-07-20 16:54:51,298 [omNode-2-OMStateMachineApplyTransactionThread - 0] INFO  om.OMMultiTenantManagerImpl (OMMultiTenantManagerImpl.java:deleteTenant(602)) - Removing tenant from in-memory cache: devaa
2024-07-20 16:54:51,299 [omNode-2-OMStateMachineApplyTransactionThread - 0] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:unlockWriteInOMRequest(170)) - Authorizer write lock is not held in this lock instance. This OM might be follower, or leader changed. Ignored
2024-07-20 16:54:51,299 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=UPDATE_VOLUME {volume=devaa} | ret=SUCCESS |  
2024-07-20 16:54:51,299 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=DELETE_TENANT {tenant=devaa} | ret=SUCCESS |  
2024-07-20 16:54:51,299 [omNode-2-OMStateMachineApplyTransactionThread - 0] INFO  tenant.OMTenantDeleteRequest (OMTenantDeleteRequest.java:validateAndUpdateCache(242)) - Deleted tenant 'devaa' and volume 'devaa'
2024-07-20 16:54:51,321 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=GET_SERVICE_LIST {} | ret=SUCCESS |  
2024-07-20 16:54:51,329 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=DELETE_VOLUME {volume=devaa} | ret=SUCCESS |  
2024-07-20 16:54:51,333 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=DELETE_VOLUME {volume=devaa} | ret=SUCCESS |  
2024-07-20 16:54:51,335 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=DELETE_VOLUME {volume=devaa} | ret=SUCCESS |  
2024-07-20 16:54:51,335 [main] INFO  shell.TestOzoneTenantShell (TestOzoneTenantShell.java:execute(212)) - Executing shell command with args [list, --om-service-id=om-service-test1]
2024-07-20 16:54:51,354 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=GET_SERVICE_LIST {} | ret=SUCCESS |  
2024-07-20 16:54:51,357 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=LIST_TENANT {} | ret=SUCCESS |  
2024-07-20 16:54:51,361 [main] INFO  shell.TestOzoneTenantShell (TestOzoneTenantShell.java:execute(212)) - Executing shell command with args [volume, create, existing-volume-1]
2024-07-20 16:54:51,380 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=GET_SERVICE_LIST {} | ret=SUCCESS |  
2024-07-20 16:54:51,384 [main] INFO  rpc.RpcClient (RpcClient.java:createVolume(473)) - Creating Volume: existing-volume-1, with runner as owner and space quota set to -1 bytes, counts quota set to -1
2024-07-20 16:54:51,394 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=CREATE_VOLUME {admin=runner, owner=runner, volume=existing-volume-1, creationTime=1721494491386, modificationTime=1721494491386, quotaInBytes=-1, quotaInNamespace=-1, usedNamespace=0, objectID=-9223372036854750976, updateID=97} | ret=SUCCESS |  
2024-07-20 16:54:51,394 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=CREATE_VOLUME {admin=runner, owner=runner, volume=existing-volume-1, creationTime=1721494491386, modificationTime=1721494491386, quotaInBytes=-1, quotaInNamespace=-1, usedNamespace=0, objectID=-9223372036854750976, updateID=97} | ret=SUCCESS |  
2024-07-20 16:54:51,394 [omNode-1-OMStateMachineApplyTransactionThread - 0] INFO  volume.OMVolumeCreateRequest (OMVolumeCreateRequest.java:validateAndUpdateCache(198)) - created volume:existing-volume-1 for user:runner
2024-07-20 16:54:51,395 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=CREATE_VOLUME {admin=runner, owner=runner, volume=existing-volume-1, creationTime=1721494491386, modificationTime=1721494491386, quotaInBytes=-1, quotaInNamespace=-1, usedNamespace=0, objectID=-9223372036854750976, updateID=97} | ret=SUCCESS |  
2024-07-20 16:54:51,395 [omNode-2-OMStateMachineApplyTransactionThread - 0] INFO  volume.OMVolumeCreateRequest (OMVolumeCreateRequest.java:validateAndUpdateCache(198)) - created volume:existing-volume-1 for user:runner
2024-07-20 16:54:51,396 [main] INFO  shell.TestOzoneTenantShell (TestOzoneTenantShell.java:execute(212)) - Executing shell command with args [create, existing-volume-1, --om-service-id=om-service-test1]
2024-07-20 16:54:51,394 [omNode-3-OMStateMachineApplyTransactionThread - 0] INFO  volume.OMVolumeCreateRequest (OMVolumeCreateRequest.java:validateAndUpdateCache(198)) - created volume:existing-volume-1 for user:runner
2024-07-20 16:54:51,415 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=GET_SERVICE_LIST {} | ret=SUCCESS |  
2024-07-20 16:54:51,417 [main] INFO  rpc.RpcClient (RpcClient.java:createTenant(917)) - Creating Tenant: 'existing-volume-1', with volume: 'existing-volume-1', forceCreationWhenVolumeExists: false
2024-07-20 16:54:51,419 [IPC Server handler 16 on default port 15004] DEBUG tenant.OMTenantCreateRequest (OMTenantCreateRequest.java:preExecute(161)) - volume: 'existing-volume-1' already exists
2024-07-20 16:54:51,420 [main] INFO  shell.TestOzoneTenantShell (TestOzoneTenantShell.java:execute(212)) - Executing shell command with args [create, existing-volume-1, --force, --om-service-id=om-service-test1]
2024-07-20 16:54:51,463 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=GET_SERVICE_LIST {} | ret=SUCCESS |  
2024-07-20 16:54:51,465 [main] INFO  rpc.RpcClient (RpcClient.java:createTenant(917)) - Creating Tenant: 'existing-volume-1', with volume: 'existing-volume-1', forceCreationWhenVolumeExists: true
2024-07-20 16:54:51,471 [IPC Server handler 8 on default port 15004] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:tryWriteLock(109)) - Trying to acquire authorizer write lock from thread 429
2024-07-20 16:54:51,471 [IPC Server handler 8 on default port 15004] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:tryWriteLockThrowOnTimeout(142)) - Acquired authorizer write lock from thread 429 with stamp 11392
2024-07-20 16:54:51,471 [IPC Server handler 8 on default port 15004] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:tryWriteLockInOMRequest(160)) - Set omRequestWriteLockStamp to 11392, omRequestWriteLockHolderTid to 429
2024-07-20 16:54:51,476 [omNode-1-OMStateMachineApplyTransactionThread - 0] DEBUG tenant.OMTenantCreateRequest (OMTenantCreateRequest.java:validateAndUpdateCache(267)) - volume: 'existing-volume-1' already exists
2024-07-20 16:54:51,476 [omNode-1-OMStateMachineApplyTransactionThread - 0] WARN  tenant.OMTenantCreateRequest (OMTenantCreateRequest.java:validateAndUpdateCache(269)) - forceCreationWhenVolumeExists = true. Resuming tenant creation despite volume 'existing-volume-1' existence
2024-07-20 16:54:51,476 [omNode-1-OMStateMachineApplyTransactionThread - 0] INFO  tenant.OMTenantCreateRequest (OMTenantCreateRequest.java:validateAndUpdateCache(306)) - Skipped volume 'existing-volume-1' creation. Will only increment volume refCount
2024-07-20 16:54:51,476 [omNode-1-OMStateMachineApplyTransactionThread - 0] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:unlockWriteInOMRequest(181)) - Restored omRequestWriteLockStamp to 0, omRequestWriteLockHolderTid to 0
2024-07-20 16:54:51,476 [omNode-1-OMStateMachineApplyTransactionThread - 0] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:unlockWrite(122)) - Releasing authorizer write lock from thread 604 with stamp 11392
2024-07-20 16:54:51,476 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=CREATE_TENANT {admin=runner, owner=runner, volume=existing-volume-1, creationTime=1721494491386, modificationTime=1721494491386, quotaInBytes=-1, quotaInNamespace=-1, usedNamespace=0, objectID=-9223372036854750976, updateID=97, tenant=existing-volume-1} | ret=SUCCESS |  
2024-07-20 16:54:51,477 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=CREATE_VOLUME {admin=runner, owner=runner, volume=existing-volume-1, creationTime=1721494491386, modificationTime=1721494491386, quotaInBytes=-1, quotaInNamespace=-1, usedNamespace=0, objectID=-9223372036854750976, updateID=97, tenant=existing-volume-1} | ret=SUCCESS |  
2024-07-20 16:54:51,477 [omNode-1-OMStateMachineApplyTransactionThread - 0] INFO  tenant.OMTenantCreateRequest (OMTenantCreateRequest.java:validateAndUpdateCache(387)) - Created tenant 'existing-volume-1' and volume 'existing-volume-1'
2024-07-20 16:54:51,477 [omNode-3-OMStateMachineApplyTransactionThread - 0] DEBUG tenant.OMTenantCreateRequest (OMTenantCreateRequest.java:validateAndUpdateCache(267)) - volume: 'existing-volume-1' already exists
2024-07-20 16:54:51,477 [omNode-3-OMStateMachineApplyTransactionThread - 0] WARN  tenant.OMTenantCreateRequest (OMTenantCreateRequest.java:validateAndUpdateCache(269)) - forceCreationWhenVolumeExists = true. Resuming tenant creation despite volume 'existing-volume-1' existence
2024-07-20 16:54:51,477 [omNode-3-OMStateMachineApplyTransactionThread - 0] INFO  tenant.OMTenantCreateRequest (OMTenantCreateRequest.java:validateAndUpdateCache(306)) - Skipped volume 'existing-volume-1' creation. Will only increment volume refCount
2024-07-20 16:54:51,478 [omNode-3-OMStateMachineApplyTransactionThread - 0] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:unlockWriteInOMRequest(170)) - Authorizer write lock is not held in this lock instance. This OM might be follower, or leader changed. Ignored
2024-07-20 16:54:51,478 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=CREATE_TENANT {admin=runner, owner=runner, volume=existing-volume-1, creationTime=1721494491386, modificationTime=1721494491386, quotaInBytes=-1, quotaInNamespace=-1, usedNamespace=0, objectID=-9223372036854750976, updateID=97, tenant=existing-volume-1} | ret=SUCCESS |  
2024-07-20 16:54:51,478 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=CREATE_VOLUME {admin=runner, owner=runner, volume=existing-volume-1, creationTime=1721494491386, modificationTime=1721494491386, quotaInBytes=-1, quotaInNamespace=-1, usedNamespace=0, objectID=-9223372036854750976, updateID=97, tenant=existing-volume-1} | ret=SUCCESS |  
2024-07-20 16:54:51,478 [omNode-3-OMStateMachineApplyTransactionThread - 0] INFO  tenant.OMTenantCreateRequest (OMTenantCreateRequest.java:validateAndUpdateCache(387)) - Created tenant 'existing-volume-1' and volume 'existing-volume-1'
2024-07-20 16:54:51,479 [omNode-2-OMStateMachineApplyTransactionThread - 0] DEBUG tenant.OMTenantCreateRequest (OMTenantCreateRequest.java:validateAndUpdateCache(267)) - volume: 'existing-volume-1' already exists
2024-07-20 16:54:51,479 [omNode-2-OMStateMachineApplyTransactionThread - 0] WARN  tenant.OMTenantCreateRequest (OMTenantCreateRequest.java:validateAndUpdateCache(269)) - forceCreationWhenVolumeExists = true. Resuming tenant creation despite volume 'existing-volume-1' existence
2024-07-20 16:54:51,479 [omNode-2-OMStateMachineApplyTransactionThread - 0] INFO  tenant.OMTenantCreateRequest (OMTenantCreateRequest.java:validateAndUpdateCache(306)) - Skipped volume 'existing-volume-1' creation. Will only increment volume refCount
2024-07-20 16:54:51,479 [omNode-2-OMStateMachineApplyTransactionThread - 0] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:unlockWriteInOMRequest(170)) - Authorizer write lock is not held in this lock instance. This OM might be follower, or leader changed. Ignored
2024-07-20 16:54:51,480 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=CREATE_TENANT {admin=runner, owner=runner, volume=existing-volume-1, creationTime=1721494491386, modificationTime=1721494491386, quotaInBytes=-1, quotaInNamespace=-1, usedNamespace=0, objectID=-9223372036854750976, updateID=97, tenant=existing-volume-1} | ret=SUCCESS |  
2024-07-20 16:54:51,479 [main] INFO  shell.TestOzoneTenantShell (TestOzoneTenantShell.java:execute(212)) - Executing shell command with args [create, existing-volume-1, --force, --om-service-id=om-service-test1]
2024-07-20 16:54:51,480 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=CREATE_VOLUME {admin=runner, owner=runner, volume=existing-volume-1, creationTime=1721494491386, modificationTime=1721494491386, quotaInBytes=-1, quotaInNamespace=-1, usedNamespace=0, objectID=-9223372036854750976, updateID=97, tenant=existing-volume-1} | ret=SUCCESS |  
2024-07-20 16:54:51,480 [omNode-2-OMStateMachineApplyTransactionThread - 0] INFO  tenant.OMTenantCreateRequest (OMTenantCreateRequest.java:validateAndUpdateCache(387)) - Created tenant 'existing-volume-1' and volume 'existing-volume-1'
2024-07-20 16:54:51,503 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=GET_SERVICE_LIST {} | ret=SUCCESS |  
2024-07-20 16:54:51,505 [main] INFO  rpc.RpcClient (RpcClient.java:createTenant(917)) - Creating Tenant: 'existing-volume-1', with volume: 'existing-volume-1', forceCreationWhenVolumeExists: true
2024-07-20 16:54:51,507 [IPC Server handler 12 on default port 15004] DEBUG tenant.OMTenantCreateRequest (OMTenantCreateRequest.java:preExecute(137)) - tenant: existing-volume-1 already exists
2024-07-20 16:54:51,508 [main] INFO  shell.TestOzoneTenantShell (TestOzoneTenantShell.java:execute(212)) - Executing shell command with args [delete, existing-volume-1, --om-service-id=om-service-test1]
2024-07-20 16:54:51,531 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=GET_SERVICE_LIST {} | ret=SUCCESS |  
2024-07-20 16:54:51,533 [IPC Server handler 15 on default port 15004] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:tryWriteLock(109)) - Trying to acquire authorizer write lock from thread 436
2024-07-20 16:54:51,534 [IPC Server handler 15 on default port 15004] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:tryWriteLockThrowOnTimeout(142)) - Acquired authorizer write lock from thread 436 with stamp 11648
2024-07-20 16:54:51,534 [IPC Server handler 15 on default port 15004] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:tryWriteLockInOMRequest(160)) - Set omRequestWriteLockStamp to 11648, omRequestWriteLockHolderTid to 436
2024-07-20 16:54:51,534 [IPC Server handler 15 on default port 15004] INFO  om.OMMultiTenantManagerImpl (OMMultiTenantManagerImpl.java:deleteTenant(323)) - Deleting tenant policies and roles from Ranger: OzoneTenant{tenantId='existing-volume-1', tenantRoleNames=[existing-volume-1-UserRole, existing-volume-1-AdminRole], accessPolicies=[existing-volume-1-VolumeAccess, existing-volume-1-BucketAccess], accountNameSpace=org.apache.hadoop.ozone.om.multitenant.impl.AccountNameSpaceImpl@6ccdf39b, bucketNameSpace=org.apache.hadoop.ozone.om.multitenant.impl.SingleVolumeTenantNamespace@265e6a54}
2024-07-20 16:54:51,539 [omNode-1-OMStateMachineApplyTransactionThread - 0] INFO  om.OMMultiTenantManagerImpl (OMMultiTenantManagerImpl.java:deleteTenant(602)) - Removing tenant from in-memory cache: existing-volume-1
2024-07-20 16:54:51,539 [omNode-1-OMStateMachineApplyTransactionThread - 0] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:unlockWriteInOMRequest(181)) - Restored omRequestWriteLockStamp to 0, omRequestWriteLockHolderTid to 0
2024-07-20 16:54:51,539 [omNode-1-OMStateMachineApplyTransactionThread - 0] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:unlockWrite(122)) - Releasing authorizer write lock from thread 604 with stamp 11648
2024-07-20 16:54:51,540 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=UPDATE_VOLUME {volume=existing-volume-1} | ret=SUCCESS |  
2024-07-20 16:54:51,540 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=DELETE_TENANT {tenant=existing-volume-1} | ret=SUCCESS |  
2024-07-20 16:54:51,540 [omNode-1-OMStateMachineApplyTransactionThread - 0] INFO  tenant.OMTenantDeleteRequest (OMTenantDeleteRequest.java:validateAndUpdateCache(242)) - Deleted tenant 'existing-volume-1' and volume 'existing-volume-1'
2024-07-20 16:54:51,541 [omNode-3-OMStateMachineApplyTransactionThread - 0] INFO  om.OMMultiTenantManagerImpl (OMMultiTenantManagerImpl.java:deleteTenant(602)) - Removing tenant from in-memory cache: existing-volume-1
2024-07-20 16:54:51,541 [omNode-3-OMStateMachineApplyTransactionThread - 0] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:unlockWriteInOMRequest(170)) - Authorizer write lock is not held in this lock instance. This OM might be follower, or leader changed. Ignored
2024-07-20 16:54:51,541 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=UPDATE_VOLUME {volume=existing-volume-1} | ret=SUCCESS |  
2024-07-20 16:54:51,541 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=DELETE_TENANT {tenant=existing-volume-1} | ret=SUCCESS |  
2024-07-20 16:54:51,541 [omNode-2-OMStateMachineApplyTransactionThread - 0] INFO  om.OMMultiTenantManagerImpl (OMMultiTenantManagerImpl.java:deleteTenant(602)) - Removing tenant from in-memory cache: existing-volume-1
2024-07-20 16:54:51,541 [omNode-2-OMStateMachineApplyTransactionThread - 0] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:unlockWriteInOMRequest(170)) - Authorizer write lock is not held in this lock instance. This OM might be follower, or leader changed. Ignored
2024-07-20 16:54:51,541 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=UPDATE_VOLUME {volume=existing-volume-1} | ret=SUCCESS |  
2024-07-20 16:54:51,541 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=DELETE_TENANT {tenant=existing-volume-1} | ret=SUCCESS |  
2024-07-20 16:54:51,542 [omNode-2-OMStateMachineApplyTransactionThread - 0] INFO  tenant.OMTenantDeleteRequest (OMTenantDeleteRequest.java:validateAndUpdateCache(242)) - Deleted tenant 'existing-volume-1' and volume 'existing-volume-1'
2024-07-20 16:54:51,541 [omNode-3-OMStateMachineApplyTransactionThread - 0] INFO  tenant.OMTenantDeleteRequest (OMTenantDeleteRequest.java:validateAndUpdateCache(242)) - Deleted tenant 'existing-volume-1' and volume 'existing-volume-1'
2024-07-20 16:54:51,546 [main] INFO  shell.TestOzoneTenantShell (TestOzoneTenantShell.java:execute(212)) - Executing shell command with args [volume, delete, existing-volume-1]
2024-07-20 16:54:51,565 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=GET_SERVICE_LIST {} | ret=SUCCESS |  
2024-07-20 16:54:51,572 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=DELETE_VOLUME {volume=existing-volume-1} | ret=SUCCESS |  
2024-07-20 16:54:51,573 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=DELETE_VOLUME {volume=existing-volume-1} | ret=SUCCESS |  
2024-07-20 16:54:51,575 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=DELETE_VOLUME {volume=existing-volume-1} | ret=SUCCESS |  
2024-07-20 16:54:51,576 [main] INFO  shell.TestOzoneTenantShell (TestOzoneTenantShell.java:execute(212)) - Executing shell command with args [create, tenant-test-set-secret, --om-service-id=om-service-test1]
2024-07-20 16:54:51,597 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=GET_SERVICE_LIST {} | ret=SUCCESS |  
2024-07-20 16:54:51,599 [main] INFO  rpc.RpcClient (RpcClient.java:createTenant(917)) - Creating Tenant: 'tenant-test-set-secret', with volume: 'tenant-test-set-secret', forceCreationWhenVolumeExists: false
2024-07-20 16:54:51,601 [IPC Server handler 1 on default port 15004] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:tryWriteLock(109)) - Trying to acquire authorizer write lock from thread 422
2024-07-20 16:54:51,601 [IPC Server handler 1 on default port 15004] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:tryWriteLockThrowOnTimeout(142)) - Acquired authorizer write lock from thread 422 with stamp 11904
2024-07-20 16:54:51,601 [IPC Server handler 1 on default port 15004] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:tryWriteLockInOMRequest(160)) - Set omRequestWriteLockStamp to 11904, omRequestWriteLockHolderTid to 422
2024-07-20 16:54:51,605 [omNode-1-OMStateMachineApplyTransactionThread - 0] DEBUG tenant.OMTenantCreateRequest (OMTenantCreateRequest.java:validateAndUpdateCache(304)) - volume: '/tenant-test-set-secret' successfully created
2024-07-20 16:54:51,606 [omNode-1-OMStateMachineApplyTransactionThread - 0] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:unlockWriteInOMRequest(181)) - Restored omRequestWriteLockStamp to 0, omRequestWriteLockHolderTid to 0
2024-07-20 16:54:51,606 [omNode-1-OMStateMachineApplyTransactionThread - 0] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:unlockWrite(122)) - Releasing authorizer write lock from thread 604 with stamp 11904
2024-07-20 16:54:51,606 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=CREATE_TENANT {admin=runner, owner=runner, volume=tenant-test-set-secret, creationTime=1721494491601, modificationTime=1721494491601, quotaInBytes=-1, quotaInNamespace=-1, usedNamespace=0, objectID=-9223372036854748928, updateID=105, tenant=tenant-test-set-secret} | ret=SUCCESS |  
2024-07-20 16:54:51,606 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=CREATE_VOLUME {admin=runner, owner=runner, volume=tenant-test-set-secret, creationTime=1721494491601, modificationTime=1721494491601, quotaInBytes=-1, quotaInNamespace=-1, usedNamespace=0, objectID=-9223372036854748928, updateID=105, tenant=tenant-test-set-secret} | ret=SUCCESS |  
2024-07-20 16:54:51,607 [omNode-1-OMStateMachineApplyTransactionThread - 0] INFO  tenant.OMTenantCreateRequest (OMTenantCreateRequest.java:validateAndUpdateCache(387)) - Created tenant 'tenant-test-set-secret' and volume 'tenant-test-set-secret'
2024-07-20 16:54:51,608 [omNode-2-OMStateMachineApplyTransactionThread - 0] DEBUG tenant.OMTenantCreateRequest (OMTenantCreateRequest.java:validateAndUpdateCache(304)) - volume: '/tenant-test-set-secret' successfully created
2024-07-20 16:54:51,609 [omNode-2-OMStateMachineApplyTransactionThread - 0] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:unlockWriteInOMRequest(170)) - Authorizer write lock is not held in this lock instance. This OM might be follower, or leader changed. Ignored
2024-07-20 16:54:51,609 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=CREATE_TENANT {admin=runner, owner=runner, volume=tenant-test-set-secret, creationTime=1721494491601, modificationTime=1721494491601, quotaInBytes=-1, quotaInNamespace=-1, usedNamespace=0, objectID=-9223372036854748928, updateID=105, tenant=tenant-test-set-secret} | ret=SUCCESS |  
2024-07-20 16:54:51,609 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=CREATE_VOLUME {admin=runner, owner=runner, volume=tenant-test-set-secret, creationTime=1721494491601, modificationTime=1721494491601, quotaInBytes=-1, quotaInNamespace=-1, usedNamespace=0, objectID=-9223372036854748928, updateID=105, tenant=tenant-test-set-secret} | ret=SUCCESS |  
2024-07-20 16:54:51,609 [omNode-2-OMStateMachineApplyTransactionThread - 0] INFO  tenant.OMTenantCreateRequest (OMTenantCreateRequest.java:validateAndUpdateCache(387)) - Created tenant 'tenant-test-set-secret' and volume 'tenant-test-set-secret'
2024-07-20 16:54:51,610 [omNode-3-OMStateMachineApplyTransactionThread - 0] DEBUG tenant.OMTenantCreateRequest (OMTenantCreateRequest.java:validateAndUpdateCache(304)) - volume: '/tenant-test-set-secret' successfully created
2024-07-20 16:54:51,610 [main] INFO  shell.TestOzoneTenantShell (TestOzoneTenantShell.java:execute(212)) - Executing shell command with args [user, set-secret, tenant-test-set-secret$alice, --secret=somesecret0, --om-service-id=om-service-test1]
2024-07-20 16:54:51,610 [omNode-3-OMStateMachineApplyTransactionThread - 0] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:unlockWriteInOMRequest(170)) - Authorizer write lock is not held in this lock instance. This OM might be follower, or leader changed. Ignored
2024-07-20 16:54:51,610 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=CREATE_TENANT {admin=runner, owner=runner, volume=tenant-test-set-secret, creationTime=1721494491601, modificationTime=1721494491601, quotaInBytes=-1, quotaInNamespace=-1, usedNamespace=0, objectID=-9223372036854748928, updateID=105, tenant=tenant-test-set-secret} | ret=SUCCESS |  
2024-07-20 16:54:51,610 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=CREATE_VOLUME {admin=runner, owner=runner, volume=tenant-test-set-secret, creationTime=1721494491601, modificationTime=1721494491601, quotaInBytes=-1, quotaInNamespace=-1, usedNamespace=0, objectID=-9223372036854748928, updateID=105, tenant=tenant-test-set-secret} | ret=SUCCESS |  
2024-07-20 16:54:51,610 [omNode-3-OMStateMachineApplyTransactionThread - 0] INFO  tenant.OMTenantCreateRequest (OMTenantCreateRequest.java:validateAndUpdateCache(387)) - Created tenant 'tenant-test-set-secret' and volume 'tenant-test-set-secret'
2024-07-20 16:54:51,631 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=GET_SERVICE_LIST {} | ret=SUCCESS |  
2024-07-20 16:54:51,639 [main] INFO  shell.TestOzoneTenantShell (TestOzoneTenantShell.java:execute(212)) - Executing shell command with args [user, assign, alice, --tenant=tenant-test-set-secret, --om-service-id=om-service-test1]
2024-07-20 16:54:51,658 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=GET_SERVICE_LIST {} | ret=SUCCESS |  
2024-07-20 16:54:51,661 [IPC Server handler 4 on default port 15004] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:tryWriteLock(109)) - Trying to acquire authorizer write lock from thread 425
2024-07-20 16:54:51,661 [IPC Server handler 4 on default port 15004] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:tryWriteLockThrowOnTimeout(142)) - Acquired authorizer write lock from thread 425 with stamp 12160
2024-07-20 16:54:51,661 [IPC Server handler 4 on default port 15004] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:tryWriteLockInOMRequest(160)) - Set omRequestWriteLockStamp to 12160, omRequestWriteLockHolderTid to 425
2024-07-20 16:54:51,665 [omNode-1-OMStateMachineApplyTransactionThread - 0] INFO  om.S3SecretManager (S3SecretManager.java:updateCache(105)) - Updating cache for accessId/user: tenant-test-set-secret$alice.
2024-07-20 16:54:51,665 [omNode-1-OMStateMachineApplyTransactionThread - 0] INFO  om.OMMultiTenantManagerImpl (OMMultiTenantManagerImpl.java:assignUserToTenant(626)) - Adding to cache: user 'alice' accessId 'tenant-test-set-secret$alice' in tenant 'tenant-test-set-secret'
2024-07-20 16:54:51,665 [omNode-1-OMStateMachineApplyTransactionThread - 0] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:unlockWriteInOMRequest(181)) - Restored omRequestWriteLockStamp to 0, omRequestWriteLockHolderTid to 0
2024-07-20 16:54:51,665 [omNode-1-OMStateMachineApplyTransactionThread - 0] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:unlockWrite(122)) - Releasing authorizer write lock from thread 604 with stamp 12160
2024-07-20 16:54:51,666 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=TENANT_ASSIGN_USER_ACCESSID {accessId=tenant-test-set-secret$alice, user=alice, tenant=tenant-test-set-secret} | ret=SUCCESS |  
2024-07-20 16:54:51,666 [omNode-1-OMStateMachineApplyTransactionThread - 0] INFO  tenant.OMTenantAssignUserAccessIdRequest (OMTenantAssignUserAccessIdRequest.java:validateAndUpdateCache(358)) - Assigned user 'alice' to tenant 'tenant-test-set-secret' with accessId 'tenant-test-set-secret$alice'
2024-07-20 16:54:51,667 [omNode-2-OMStateMachineApplyTransactionThread - 0] INFO  om.S3SecretManager (S3SecretManager.java:updateCache(105)) - Updating cache for accessId/user: tenant-test-set-secret$alice.
2024-07-20 16:54:51,667 [omNode-2-OMStateMachineApplyTransactionThread - 0] INFO  om.OMMultiTenantManagerImpl (OMMultiTenantManagerImpl.java:assignUserToTenant(626)) - Adding to cache: user 'alice' accessId 'tenant-test-set-secret$alice' in tenant 'tenant-test-set-secret'
2024-07-20 16:54:51,667 [omNode-2-OMStateMachineApplyTransactionThread - 0] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:unlockWriteInOMRequest(170)) - Authorizer write lock is not held in this lock instance. This OM might be follower, or leader changed. Ignored
2024-07-20 16:54:51,667 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=TENANT_ASSIGN_USER_ACCESSID {accessId=tenant-test-set-secret$alice, user=alice, tenant=tenant-test-set-secret} | ret=SUCCESS |  
2024-07-20 16:54:51,667 [omNode-2-OMStateMachineApplyTransactionThread - 0] INFO  tenant.OMTenantAssignUserAccessIdRequest (OMTenantAssignUserAccessIdRequest.java:validateAndUpdateCache(358)) - Assigned user 'alice' to tenant 'tenant-test-set-secret' with accessId 'tenant-test-set-secret$alice'
2024-07-20 16:54:51,670 [main] INFO  shell.TestOzoneTenantShell (TestOzoneTenantShell.java:execute(212)) - Executing shell command with args [user, setsecret, tenant-test-set-secret$alice, --secret=somesecret1, --om-service-id=om-service-test1]
2024-07-20 16:54:51,671 [omNode-3-OMStateMachineApplyTransactionThread - 0] INFO  om.S3SecretManager (S3SecretManager.java:updateCache(105)) - Updating cache for accessId/user: tenant-test-set-secret$alice.
2024-07-20 16:54:51,672 [omNode-3-OMStateMachineApplyTransactionThread - 0] INFO  om.OMMultiTenantManagerImpl (OMMultiTenantManagerImpl.java:assignUserToTenant(626)) - Adding to cache: user 'alice' accessId 'tenant-test-set-secret$alice' in tenant 'tenant-test-set-secret'
2024-07-20 16:54:51,672 [omNode-3-OMStateMachineApplyTransactionThread - 0] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:unlockWriteInOMRequest(170)) - Authorizer write lock is not held in this lock instance. This OM might be follower, or leader changed. Ignored
2024-07-20 16:54:51,672 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=TENANT_ASSIGN_USER_ACCESSID {accessId=tenant-test-set-secret$alice, user=alice, tenant=tenant-test-set-secret} | ret=SUCCESS |  
2024-07-20 16:54:51,672 [omNode-3-OMStateMachineApplyTransactionThread - 0] INFO  tenant.OMTenantAssignUserAccessIdRequest (OMTenantAssignUserAccessIdRequest.java:validateAndUpdateCache(358)) - Assigned user 'alice' to tenant 'tenant-test-set-secret' with accessId 'tenant-test-set-secret$alice'
2024-07-20 16:54:51,689 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=GET_SERVICE_LIST {} | ret=SUCCESS |  
2024-07-20 16:54:51,695 [omNode-1-OMStateMachineApplyTransactionThread - 0] INFO  om.S3SecretManager (S3SecretManager.java:updateCache(105)) - Updating cache for accessId/user: tenant-test-set-secret$alice.
2024-07-20 16:54:51,695 [omNode-1-OMStateMachineApplyTransactionThread - 0] INFO  om.S3SecretManager (S3SecretManager.java:updateCache(105)) - Updating cache for accessId/user: tenant-test-set-secret$alice.
2024-07-20 16:54:51,696 | INFO  | OMAudit | user= | ip= | op=SET_S3_SECRET {S3SetSecretUser=tenant-test-set-secret$alice} | ret=SUCCESS |  
2024-07-20 16:54:51,697 [main] INFO  shell.TestOzoneTenantShell (TestOzoneTenantShell.java:execute(212)) - Executing shell command with args [user, setsecret, tenant-test-set-secret$alice, --secret=short, --om-service-id=om-service-test1]
2024-07-20 16:54:51,698 [omNode-2-OMStateMachineApplyTransactionThread - 0] INFO  om.S3SecretManager (S3SecretManager.java:updateCache(105)) - Updating cache for accessId/user: tenant-test-set-secret$alice.
2024-07-20 16:54:51,698 [omNode-2-OMStateMachineApplyTransactionThread - 0] INFO  om.S3SecretManager (S3SecretManager.java:updateCache(105)) - Updating cache for accessId/user: tenant-test-set-secret$alice.
2024-07-20 16:54:51,698 | INFO  | OMAudit | user= | ip= | op=SET_S3_SECRET {S3SetSecretUser=tenant-test-set-secret$alice} | ret=SUCCESS |  
2024-07-20 16:54:51,701 [omNode-3-OMStateMachineApplyTransactionThread - 0] INFO  om.S3SecretManager (S3SecretManager.java:updateCache(105)) - Updating cache for accessId/user: tenant-test-set-secret$alice.
2024-07-20 16:54:51,701 [omNode-3-OMStateMachineApplyTransactionThread - 0] INFO  om.S3SecretManager (S3SecretManager.java:updateCache(105)) - Updating cache for accessId/user: tenant-test-set-secret$alice.
2024-07-20 16:54:51,702 | INFO  | OMAudit | user= | ip= | op=SET_S3_SECRET {S3SetSecretUser=tenant-test-set-secret$alice} | ret=SUCCESS |  
2024-07-20 16:54:51,718 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=GET_SERVICE_LIST {} | ret=SUCCESS |  
2024-07-20 16:54:51,726 [main] INFO  shell.TestOzoneTenantShell (TestOzoneTenantShell.java:execute(212)) - Executing shell command with args [user, getsecret, tenant-test-set-secret$alice, --om-service-id=om-service-test1]
2024-07-20 16:54:51,745 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=GET_SERVICE_LIST {} | ret=SUCCESS |  
2024-07-20 16:54:51,758 [omNode-1-OMStateMachineApplyTransactionThread - 0] INFO  om.S3SecretManager (S3SecretManager.java:updateCache(105)) - Updating cache for accessId/user: tenant-test-set-secret$alice.
2024-07-20 16:54:51,760 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=GET_S3_SECRET {S3GetSecretUser=tenant-test-set-secret$alice} | ret=SUCCESS |  
2024-07-20 16:54:51,760 [omNode-2-OMStateMachineApplyTransactionThread - 0] INFO  om.S3SecretManager (S3SecretManager.java:updateCache(105)) - Updating cache for accessId/user: tenant-test-set-secret$alice.
2024-07-20 16:54:51,761 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=GET_S3_SECRET {S3GetSecretUser=tenant-test-set-secret$alice} | ret=SUCCESS |  
2024-07-20 16:54:51,762 [omNode-3-OMStateMachineApplyTransactionThread - 0] INFO  om.S3SecretManager (S3SecretManager.java:updateCache(105)) - Updating cache for accessId/user: tenant-test-set-secret$alice.
2024-07-20 16:54:51,762 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=GET_S3_SECRET {S3GetSecretUser=tenant-test-set-secret$alice} | ret=SUCCESS |  
2024-07-20 16:54:51,762 [main] INFO  shell.TestOzoneTenantShell (TestOzoneTenantShell.java:execute(212)) - Executing shell command with args [user, setsecret, tenant-test-set-secret$alice, --secret=somesecret2, --om-service-id=om-service-test1]
2024-07-20 16:54:51,780 | INFO  | OMAudit | user=alice | ip=127.0.0.1 | op=GET_SERVICE_LIST {} | ret=SUCCESS |  
2024-07-20 16:54:51,788 [omNode-1-OMStateMachineApplyTransactionThread - 0] INFO  om.S3SecretManager (S3SecretManager.java:updateCache(105)) - Updating cache for accessId/user: tenant-test-set-secret$alice.
2024-07-20 16:54:51,788 | INFO  | OMAudit | user= | ip= | op=SET_S3_SECRET {S3SetSecretUser=tenant-test-set-secret$alice} | ret=SUCCESS |  
2024-07-20 16:54:51,790 [omNode-2-OMStateMachineApplyTransactionThread - 0] INFO  om.S3SecretManager (S3SecretManager.java:updateCache(105)) - Updating cache for accessId/user: tenant-test-set-secret$alice.
2024-07-20 16:54:51,790 [omNode-3-OMStateMachineApplyTransactionThread - 0] INFO  om.S3SecretManager (S3SecretManager.java:updateCache(105)) - Updating cache for accessId/user: tenant-test-set-secret$alice.
2024-07-20 16:54:51,790 | INFO  | OMAudit | user= | ip= | op=SET_S3_SECRET {S3SetSecretUser=tenant-test-set-secret$alice} | ret=SUCCESS |  
2024-07-20 16:54:51,790 | INFO  | OMAudit | user= | ip= | op=SET_S3_SECRET {S3SetSecretUser=tenant-test-set-secret$alice} | ret=SUCCESS |  
2024-07-20 16:54:51,790 [main] INFO  shell.TestOzoneTenantShell (TestOzoneTenantShell.java:execute(212)) - Executing shell command with args [user, assign, bob, --tenant=tenant-test-set-secret, --om-service-id=om-service-test1]
2024-07-20 16:54:51,810 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=GET_SERVICE_LIST {} | ret=SUCCESS |  
2024-07-20 16:54:51,813 [IPC Server handler 12 on default port 15004] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:tryWriteLock(109)) - Trying to acquire authorizer write lock from thread 433
2024-07-20 16:54:51,814 [IPC Server handler 12 on default port 15004] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:tryWriteLockThrowOnTimeout(142)) - Acquired authorizer write lock from thread 433 with stamp 12416
2024-07-20 16:54:51,814 [IPC Server handler 12 on default port 15004] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:tryWriteLockInOMRequest(160)) - Set omRequestWriteLockStamp to 12416, omRequestWriteLockHolderTid to 433
2024-07-20 16:54:51,819 [omNode-1-OMStateMachineApplyTransactionThread - 0] INFO  om.S3SecretManager (S3SecretManager.java:updateCache(105)) - Updating cache for accessId/user: tenant-test-set-secret$bob.
2024-07-20 16:54:51,819 [omNode-1-OMStateMachineApplyTransactionThread - 0] INFO  om.OMMultiTenantManagerImpl (OMMultiTenantManagerImpl.java:assignUserToTenant(626)) - Adding to cache: user 'bob' accessId 'tenant-test-set-secret$bob' in tenant 'tenant-test-set-secret'
2024-07-20 16:54:51,820 [omNode-1-OMStateMachineApplyTransactionThread - 0] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:unlockWriteInOMRequest(181)) - Restored omRequestWriteLockStamp to 0, omRequestWriteLockHolderTid to 0
2024-07-20 16:54:51,820 [omNode-1-OMStateMachineApplyTransactionThread - 0] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:unlockWrite(122)) - Releasing authorizer write lock from thread 604 with stamp 12416
2024-07-20 16:54:51,820 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=TENANT_ASSIGN_USER_ACCESSID {accessId=tenant-test-set-secret$bob, user=bob, tenant=tenant-test-set-secret} | ret=SUCCESS |  
2024-07-20 16:54:51,820 [omNode-1-OMStateMachineApplyTransactionThread - 0] INFO  tenant.OMTenantAssignUserAccessIdRequest (OMTenantAssignUserAccessIdRequest.java:validateAndUpdateCache(358)) - Assigned user 'bob' to tenant 'tenant-test-set-secret' with accessId 'tenant-test-set-secret$bob'
2024-07-20 16:54:51,820 [omNode-2-OMStateMachineApplyTransactionThread - 0] INFO  om.S3SecretManager (S3SecretManager.java:updateCache(105)) - Updating cache for accessId/user: tenant-test-set-secret$bob.
2024-07-20 16:54:51,820 [omNode-2-OMStateMachineApplyTransactionThread - 0] INFO  om.OMMultiTenantManagerImpl (OMMultiTenantManagerImpl.java:assignUserToTenant(626)) - Adding to cache: user 'bob' accessId 'tenant-test-set-secret$bob' in tenant 'tenant-test-set-secret'
2024-07-20 16:54:51,821 [omNode-2-OMStateMachineApplyTransactionThread - 0] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:unlockWriteInOMRequest(170)) - Authorizer write lock is not held in this lock instance. This OM might be follower, or leader changed. Ignored
2024-07-20 16:54:51,821 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=TENANT_ASSIGN_USER_ACCESSID {accessId=tenant-test-set-secret$bob, user=bob, tenant=tenant-test-set-secret} | ret=SUCCESS |  
2024-07-20 16:54:51,821 [omNode-2-OMStateMachineApplyTransactionThread - 0] INFO  tenant.OMTenantAssignUserAccessIdRequest (OMTenantAssignUserAccessIdRequest.java:validateAndUpdateCache(358)) - Assigned user 'bob' to tenant 'tenant-test-set-secret' with accessId 'tenant-test-set-secret$bob'
2024-07-20 16:54:51,823 [main] INFO  shell.TestOzoneTenantShell (TestOzoneTenantShell.java:execute(212)) - Executing shell command with args [user, setsecret, tenant-test-set-secret$alice, --secret=somesecret2, --om-service-id=om-service-test1]
2024-07-20 16:54:51,824 [omNode-3-OMStateMachineApplyTransactionThread - 0] INFO  om.S3SecretManager (S3SecretManager.java:updateCache(105)) - Updating cache for accessId/user: tenant-test-set-secret$bob.
2024-07-20 16:54:51,824 [omNode-3-OMStateMachineApplyTransactionThread - 0] INFO  om.OMMultiTenantManagerImpl (OMMultiTenantManagerImpl.java:assignUserToTenant(626)) - Adding to cache: user 'bob' accessId 'tenant-test-set-secret$bob' in tenant 'tenant-test-set-secret'
2024-07-20 16:54:51,824 [omNode-3-OMStateMachineApplyTransactionThread - 0] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:unlockWriteInOMRequest(170)) - Authorizer write lock is not held in this lock instance. This OM might be follower, or leader changed. Ignored
2024-07-20 16:54:51,824 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=TENANT_ASSIGN_USER_ACCESSID {accessId=tenant-test-set-secret$bob, user=bob, tenant=tenant-test-set-secret} | ret=SUCCESS |  
2024-07-20 16:54:51,824 [omNode-3-OMStateMachineApplyTransactionThread - 0] INFO  tenant.OMTenantAssignUserAccessIdRequest (OMTenantAssignUserAccessIdRequest.java:validateAndUpdateCache(358)) - Assigned user 'bob' to tenant 'tenant-test-set-secret' with accessId 'tenant-test-set-secret$bob'
2024-07-20 16:54:51,847 | INFO  | OMAudit | user=bob | ip=127.0.0.1 | op=GET_SERVICE_LIST {} | ret=SUCCESS |  
2024-07-20 16:54:51,851 [main] INFO  shell.TestOzoneTenantShell (TestOzoneTenantShell.java:execute(212)) - Executing shell command with args [user, assign-admin, tenant-test-set-secret$bob, --tenant=tenant-test-set-secret, --delegated=false, --om-service-id=om-service-test1]
2024-07-20 16:54:51,871 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=GET_SERVICE_LIST {} | ret=SUCCESS |  
2024-07-20 16:54:51,874 [IPC Server handler 19 on default port 15004] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:tryWriteLock(109)) - Trying to acquire authorizer write lock from thread 440
2024-07-20 16:54:51,875 [IPC Server handler 19 on default port 15004] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:tryWriteLockThrowOnTimeout(142)) - Acquired authorizer write lock from thread 440 with stamp 12672
2024-07-20 16:54:51,875 [IPC Server handler 19 on default port 15004] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:tryWriteLockInOMRequest(160)) - Set omRequestWriteLockStamp to 12672, omRequestWriteLockHolderTid to 440
2024-07-20 16:54:51,879 [omNode-1-OMStateMachineApplyTransactionThread - 0] INFO  om.OMMultiTenantManagerImpl (OMMultiTenantManagerImpl.java:assignTenantAdmin(667)) - Updating cache: accessId 'tenant-test-set-secret$bob' isAdmin 'true' isDelegated 'false'
2024-07-20 16:54:51,879 [omNode-1-OMStateMachineApplyTransactionThread - 0] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:unlockWriteInOMRequest(181)) - Restored omRequestWriteLockStamp to 0, omRequestWriteLockHolderTid to 0
2024-07-20 16:54:51,880 [omNode-1-OMStateMachineApplyTransactionThread - 0] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:unlockWrite(122)) - Releasing authorizer write lock from thread 604 with stamp 12672
2024-07-20 16:54:51,880 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=TENANT_ASSIGN_ADMIN {tenant=tenant-test-set-secret} | ret=SUCCESS |  
2024-07-20 16:54:51,880 [omNode-1-OMStateMachineApplyTransactionThread - 0] INFO  tenant.OMTenantAssignAdminRequest (OMTenantAssignAdminRequest.java:validateAndUpdateCache(245)) - Assigned admin to accessId 'tenant-test-set-secret$bob' in tenant 'tenant-test-set-secret', delegated: false
2024-07-20 16:54:51,880 [omNode-2-OMStateMachineApplyTransactionThread - 0] INFO  om.OMMultiTenantManagerImpl (OMMultiTenantManagerImpl.java:assignTenantAdmin(667)) - Updating cache: accessId 'tenant-test-set-secret$bob' isAdmin 'true' isDelegated 'false'
2024-07-20 16:54:51,880 [omNode-2-OMStateMachineApplyTransactionThread - 0] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:unlockWriteInOMRequest(170)) - Authorizer write lock is not held in this lock instance. This OM might be follower, or leader changed. Ignored
2024-07-20 16:54:51,880 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=TENANT_ASSIGN_ADMIN {tenant=tenant-test-set-secret} | ret=SUCCESS |  
2024-07-20 16:54:51,881 [omNode-2-OMStateMachineApplyTransactionThread - 0] INFO  tenant.OMTenantAssignAdminRequest (OMTenantAssignAdminRequest.java:validateAndUpdateCache(245)) - Assigned admin to accessId 'tenant-test-set-secret$bob' in tenant 'tenant-test-set-secret', delegated: false
2024-07-20 16:54:51,884 [main] INFO  shell.TestOzoneTenantShell (TestOzoneTenantShell.java:execute(212)) - Executing shell command with args [user, setsecret, tenant-test-set-secret$alice, --secret=somesecret2, --om-service-id=om-service-test1]
2024-07-20 16:54:51,884 [omNode-3-OMStateMachineApplyTransactionThread - 0] INFO  om.OMMultiTenantManagerImpl (OMMultiTenantManagerImpl.java:assignTenantAdmin(667)) - Updating cache: accessId 'tenant-test-set-secret$bob' isAdmin 'true' isDelegated 'false'
2024-07-20 16:54:51,884 [omNode-3-OMStateMachineApplyTransactionThread - 0] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:unlockWriteInOMRequest(170)) - Authorizer write lock is not held in this lock instance. This OM might be follower, or leader changed. Ignored
2024-07-20 16:54:51,884 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=TENANT_ASSIGN_ADMIN {tenant=tenant-test-set-secret} | ret=SUCCESS |  
2024-07-20 16:54:51,884 [omNode-3-OMStateMachineApplyTransactionThread - 0] INFO  tenant.OMTenantAssignAdminRequest (OMTenantAssignAdminRequest.java:validateAndUpdateCache(245)) - Assigned admin to accessId 'tenant-test-set-secret$bob' in tenant 'tenant-test-set-secret', delegated: false
2024-07-20 16:54:51,911 | INFO  | OMAudit | user=bob | ip=127.0.0.1 | op=GET_SERVICE_LIST {} | ret=SUCCESS |  
2024-07-20 16:54:51,918 [omNode-1-OMStateMachineApplyTransactionThread - 0] INFO  om.S3SecretManager (S3SecretManager.java:updateCache(105)) - Updating cache for accessId/user: tenant-test-set-secret$alice.
2024-07-20 16:54:51,918 [omNode-1-OMStateMachineApplyTransactionThread - 0] INFO  om.S3SecretManager (S3SecretManager.java:updateCache(105)) - Updating cache for accessId/user: tenant-test-set-secret$alice.
2024-07-20 16:54:51,918 | INFO  | OMAudit | user= | ip= | op=SET_S3_SECRET {S3SetSecretUser=tenant-test-set-secret$alice} | ret=SUCCESS |  
2024-07-20 16:54:51,920 [main] INFO  shell.TestOzoneTenantShell (TestOzoneTenantShell.java:execute(212)) - Executing shell command with args [user, revoke-admin, tenant-test-set-secret$bob, --om-service-id=om-service-test1]
2024-07-20 16:54:51,921 [omNode-2-OMStateMachineApplyTransactionThread - 0] INFO  om.S3SecretManager (S3SecretManager.java:updateCache(105)) - Updating cache for accessId/user: tenant-test-set-secret$alice.
2024-07-20 16:54:51,921 [omNode-2-OMStateMachineApplyTransactionThread - 0] INFO  om.S3SecretManager (S3SecretManager.java:updateCache(105)) - Updating cache for accessId/user: tenant-test-set-secret$alice.
2024-07-20 16:54:51,921 | INFO  | OMAudit | user= | ip= | op=SET_S3_SECRET {S3SetSecretUser=tenant-test-set-secret$alice} | ret=SUCCESS |  
2024-07-20 16:54:51,921 [omNode-3-OMStateMachineApplyTransactionThread - 0] INFO  om.S3SecretManager (S3SecretManager.java:updateCache(105)) - Updating cache for accessId/user: tenant-test-set-secret$alice.
2024-07-20 16:54:51,922 [omNode-3-OMStateMachineApplyTransactionThread - 0] INFO  om.S3SecretManager (S3SecretManager.java:updateCache(105)) - Updating cache for accessId/user: tenant-test-set-secret$alice.
2024-07-20 16:54:51,922 | INFO  | OMAudit | user= | ip= | op=SET_S3_SECRET {S3SetSecretUser=tenant-test-set-secret$alice} | ret=SUCCESS |  
2024-07-20 16:54:51,939 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=GET_SERVICE_LIST {} | ret=SUCCESS |  
2024-07-20 16:54:51,941 [IPC Server handler 3 on default port 15004] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:tryWriteLock(109)) - Trying to acquire authorizer write lock from thread 424
2024-07-20 16:54:51,941 [IPC Server handler 3 on default port 15004] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:tryWriteLockThrowOnTimeout(142)) - Acquired authorizer write lock from thread 424 with stamp 12928
2024-07-20 16:54:51,942 [IPC Server handler 3 on default port 15004] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:tryWriteLockInOMRequest(160)) - Set omRequestWriteLockStamp to 12928, omRequestWriteLockHolderTid to 424
2024-07-20 16:54:51,945 [omNode-1-OMStateMachineApplyTransactionThread - 0] INFO  om.OMMultiTenantManagerImpl (OMMultiTenantManagerImpl.java:revokeTenantAdmin(686)) - Updating cache: accessId 'tenant-test-set-secret$bob' isAdmin 'false' isDelegated 'false'
2024-07-20 16:54:51,946 [omNode-1-OMStateMachineApplyTransactionThread - 0] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:unlockWriteInOMRequest(181)) - Restored omRequestWriteLockStamp to 0, omRequestWriteLockHolderTid to 0
2024-07-20 16:54:51,946 [omNode-1-OMStateMachineApplyTransactionThread - 0] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:unlockWrite(122)) - Releasing authorizer write lock from thread 604 with stamp 12928
2024-07-20 16:54:51,946 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=TENANT_REVOKE_ADMIN {tenant=tenant-test-set-secret} | ret=SUCCESS |  
2024-07-20 16:54:51,946 [omNode-1-OMStateMachineApplyTransactionThread - 0] INFO  tenant.OMTenantRevokeAdminRequest (OMTenantRevokeAdminRequest.java:validateAndUpdateCache(235)) - Revoked admin of accessId 'tenant-test-set-secret$bob' from tenant 'tenant-test-set-secret'
2024-07-20 16:54:51,948 [main] INFO  shell.TestOzoneTenantShell (TestOzoneTenantShell.java:execute(212)) - Executing shell command with args [user, revoke, tenant-test-set-secret$bob, --om-service-id=om-service-test1]
2024-07-20 16:54:51,948 [omNode-2-OMStateMachineApplyTransactionThread - 0] INFO  om.OMMultiTenantManagerImpl (OMMultiTenantManagerImpl.java:revokeTenantAdmin(686)) - Updating cache: accessId 'tenant-test-set-secret$bob' isAdmin 'false' isDelegated 'false'
2024-07-20 16:54:51,948 [omNode-2-OMStateMachineApplyTransactionThread - 0] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:unlockWriteInOMRequest(170)) - Authorizer write lock is not held in this lock instance. This OM might be follower, or leader changed. Ignored
2024-07-20 16:54:51,948 [omNode-3-OMStateMachineApplyTransactionThread - 0] INFO  om.OMMultiTenantManagerImpl (OMMultiTenantManagerImpl.java:revokeTenantAdmin(686)) - Updating cache: accessId 'tenant-test-set-secret$bob' isAdmin 'false' isDelegated 'false'
2024-07-20 16:54:51,948 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=TENANT_REVOKE_ADMIN {tenant=tenant-test-set-secret} | ret=SUCCESS |  
2024-07-20 16:54:51,949 [omNode-3-OMStateMachineApplyTransactionThread - 0] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:unlockWriteInOMRequest(170)) - Authorizer write lock is not held in this lock instance. This OM might be follower, or leader changed. Ignored
2024-07-20 16:54:51,949 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=TENANT_REVOKE_ADMIN {tenant=tenant-test-set-secret} | ret=SUCCESS |  
2024-07-20 16:54:51,950 [omNode-3-OMStateMachineApplyTransactionThread - 0] INFO  tenant.OMTenantRevokeAdminRequest (OMTenantRevokeAdminRequest.java:validateAndUpdateCache(235)) - Revoked admin of accessId 'tenant-test-set-secret$bob' from tenant 'tenant-test-set-secret'
2024-07-20 16:54:51,949 [omNode-2-OMStateMachineApplyTransactionThread - 0] INFO  tenant.OMTenantRevokeAdminRequest (OMTenantRevokeAdminRequest.java:validateAndUpdateCache(235)) - Revoked admin of accessId 'tenant-test-set-secret$bob' from tenant 'tenant-test-set-secret'
2024-07-20 16:54:51,968 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=GET_SERVICE_LIST {} | ret=SUCCESS |  
2024-07-20 16:54:51,972 [IPC Server handler 4 on default port 15004] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:tryWriteLock(109)) - Trying to acquire authorizer write lock from thread 425
2024-07-20 16:54:51,972 [IPC Server handler 4 on default port 15004] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:tryWriteLockThrowOnTimeout(142)) - Acquired authorizer write lock from thread 425 with stamp 13184
2024-07-20 16:54:51,972 [IPC Server handler 4 on default port 15004] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:tryWriteLockInOMRequest(160)) - Set omRequestWriteLockStamp to 13184, omRequestWriteLockHolderTid to 425
2024-07-20 16:54:51,976 [omNode-1-OMStateMachineApplyTransactionThread - 0] INFO  om.OMMultiTenantManagerImpl (OMMultiTenantManagerImpl.java:revokeUserAccessId(640)) - Removing from cache: accessId 'tenant-test-set-secret$bob' in tenant 'tenant-test-set-secret'
2024-07-20 16:54:51,976 [omNode-1-OMStateMachineApplyTransactionThread - 0] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:unlockWriteInOMRequest(181)) - Restored omRequestWriteLockStamp to 0, omRequestWriteLockHolderTid to 0
2024-07-20 16:54:51,976 [omNode-1-OMStateMachineApplyTransactionThread - 0] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:unlockWrite(122)) - Releasing authorizer write lock from thread 604 with stamp 13184
2024-07-20 16:54:51,976 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=TENANT_REVOKE_USER_ACCESSID {accessId=tenant-test-set-secret$bob, userPrincipal=bob, tenant=tenant-test-set-secret} | ret=SUCCESS |  
2024-07-20 16:54:51,976 [omNode-1-OMStateMachineApplyTransactionThread - 0] INFO  tenant.OMTenantRevokeUserAccessIdRequest (OMTenantRevokeUserAccessIdRequest.java:validateAndUpdateCache(255)) - Revoked user 'bob' accessId 'tenant-test-set-secret$bob' to tenant 'tenant-test-set-secret'
2024-07-20 16:54:51,977 [omNode-3-OMStateMachineApplyTransactionThread - 0] INFO  om.OMMultiTenantManagerImpl (OMMultiTenantManagerImpl.java:revokeUserAccessId(640)) - Removing from cache: accessId 'tenant-test-set-secret$bob' in tenant 'tenant-test-set-secret'
2024-07-20 16:54:51,978 [omNode-3-OMStateMachineApplyTransactionThread - 0] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:unlockWriteInOMRequest(170)) - Authorizer write lock is not held in this lock instance. This OM might be follower, or leader changed. Ignored
2024-07-20 16:54:51,978 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=TENANT_REVOKE_USER_ACCESSID {accessId=tenant-test-set-secret$bob, userPrincipal=bob, tenant=tenant-test-set-secret} | ret=SUCCESS |  
2024-07-20 16:54:51,978 [omNode-3-OMStateMachineApplyTransactionThread - 0] INFO  tenant.OMTenantRevokeUserAccessIdRequest (OMTenantRevokeUserAccessIdRequest.java:validateAndUpdateCache(255)) - Revoked user 'bob' accessId 'tenant-test-set-secret$bob' to tenant 'tenant-test-set-secret'
2024-07-20 16:54:51,978 [omNode-2-OMStateMachineApplyTransactionThread - 0] INFO  om.OMMultiTenantManagerImpl (OMMultiTenantManagerImpl.java:revokeUserAccessId(640)) - Removing from cache: accessId 'tenant-test-set-secret$bob' in tenant 'tenant-test-set-secret'
2024-07-20 16:54:51,978 [omNode-2-OMStateMachineApplyTransactionThread - 0] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:unlockWriteInOMRequest(170)) - Authorizer write lock is not held in this lock instance. This OM might be follower, or leader changed. Ignored
2024-07-20 16:54:51,978 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=TENANT_REVOKE_USER_ACCESSID {accessId=tenant-test-set-secret$bob, userPrincipal=bob, tenant=tenant-test-set-secret} | ret=SUCCESS |  
2024-07-20 16:54:51,979 [omNode-2-OMStateMachineApplyTransactionThread - 0] INFO  tenant.OMTenantRevokeUserAccessIdRequest (OMTenantRevokeUserAccessIdRequest.java:validateAndUpdateCache(255)) - Revoked user 'bob' accessId 'tenant-test-set-secret$bob' to tenant 'tenant-test-set-secret'
2024-07-20 16:54:51,982 [main] INFO  shell.TestOzoneTenantShell (TestOzoneTenantShell.java:execute(212)) - Executing shell command with args [user, revoke, tenant-test-set-secret$alice, --om-service-id=om-service-test1]
2024-07-20 16:54:52,003 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=GET_SERVICE_LIST {} | ret=SUCCESS |  
2024-07-20 16:54:52,007 [IPC Server handler 10 on default port 15004] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:tryWriteLock(109)) - Trying to acquire authorizer write lock from thread 431
2024-07-20 16:54:52,007 [IPC Server handler 10 on default port 15004] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:tryWriteLockThrowOnTimeout(142)) - Acquired authorizer write lock from thread 431 with stamp 13440
2024-07-20 16:54:52,007 [IPC Server handler 10 on default port 15004] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:tryWriteLockInOMRequest(160)) - Set omRequestWriteLockStamp to 13440, omRequestWriteLockHolderTid to 431
2024-07-20 16:54:52,011 [omNode-1-OMStateMachineApplyTransactionThread - 0] INFO  om.OMMultiTenantManagerImpl (OMMultiTenantManagerImpl.java:revokeUserAccessId(640)) - Removing from cache: accessId 'tenant-test-set-secret$alice' in tenant 'tenant-test-set-secret'
2024-07-20 16:54:52,011 [omNode-1-OMStateMachineApplyTransactionThread - 0] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:unlockWriteInOMRequest(181)) - Restored omRequestWriteLockStamp to 0, omRequestWriteLockHolderTid to 0
2024-07-20 16:54:52,011 [omNode-1-OMStateMachineApplyTransactionThread - 0] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:unlockWrite(122)) - Releasing authorizer write lock from thread 604 with stamp 13440
2024-07-20 16:54:52,013 [omNode-2-OMStateMachineApplyTransactionThread - 0] INFO  om.OMMultiTenantManagerImpl (OMMultiTenantManagerImpl.java:revokeUserAccessId(640)) - Removing from cache: accessId 'tenant-test-set-secret$alice' in tenant 'tenant-test-set-secret'
2024-07-20 16:54:52,013 [omNode-3-OMStateMachineApplyTransactionThread - 0] INFO  om.OMMultiTenantManagerImpl (OMMultiTenantManagerImpl.java:revokeUserAccessId(640)) - Removing from cache: accessId 'tenant-test-set-secret$alice' in tenant 'tenant-test-set-secret'
2024-07-20 16:54:52,013 [omNode-2-OMStateMachineApplyTransactionThread - 0] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:unlockWriteInOMRequest(170)) - Authorizer write lock is not held in this lock instance. This OM might be follower, or leader changed. Ignored
2024-07-20 16:54:52,013 [omNode-3-OMStateMachineApplyTransactionThread - 0] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:unlockWriteInOMRequest(170)) - Authorizer write lock is not held in this lock instance. This OM might be follower, or leader changed. Ignored
2024-07-20 16:54:52,013 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=TENANT_REVOKE_USER_ACCESSID {accessId=tenant-test-set-secret$alice, userPrincipal=alice, tenant=tenant-test-set-secret} | ret=SUCCESS |  
2024-07-20 16:54:52,013 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=TENANT_REVOKE_USER_ACCESSID {accessId=tenant-test-set-secret$alice, userPrincipal=alice, tenant=tenant-test-set-secret} | ret=SUCCESS |  
2024-07-20 16:54:52,014 [omNode-3-OMStateMachineApplyTransactionThread - 0] INFO  tenant.OMTenantRevokeUserAccessIdRequest (OMTenantRevokeUserAccessIdRequest.java:validateAndUpdateCache(255)) - Revoked user 'alice' accessId 'tenant-test-set-secret$alice' to tenant 'tenant-test-set-secret'
2024-07-20 16:54:52,014 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=TENANT_REVOKE_USER_ACCESSID {accessId=tenant-test-set-secret$alice, userPrincipal=alice, tenant=tenant-test-set-secret} | ret=SUCCESS |  
2024-07-20 16:54:52,014 [omNode-1-OMStateMachineApplyTransactionThread - 0] INFO  tenant.OMTenantRevokeUserAccessIdRequest (OMTenantRevokeUserAccessIdRequest.java:validateAndUpdateCache(255)) - Revoked user 'alice' accessId 'tenant-test-set-secret$alice' to tenant 'tenant-test-set-secret'
2024-07-20 16:54:52,015 [omNode-2-OMStateMachineApplyTransactionThread - 0] INFO  tenant.OMTenantRevokeUserAccessIdRequest (OMTenantRevokeUserAccessIdRequest.java:validateAndUpdateCache(255)) - Revoked user 'alice' accessId 'tenant-test-set-secret$alice' to tenant 'tenant-test-set-secret'
2024-07-20 16:54:52,016 [main] INFO  shell.TestOzoneTenantShell (TestOzoneTenantShell.java:execute(212)) - Executing shell command with args [delete, tenant-test-set-secret, --om-service-id=om-service-test1]
2024-07-20 16:54:52,033 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=GET_SERVICE_LIST {} | ret=SUCCESS |  
2024-07-20 16:54:52,036 [IPC Server handler 14 on default port 15004] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:tryWriteLock(109)) - Trying to acquire authorizer write lock from thread 435
2024-07-20 16:54:52,036 [IPC Server handler 14 on default port 15004] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:tryWriteLockThrowOnTimeout(142)) - Acquired authorizer write lock from thread 435 with stamp 13696
2024-07-20 16:54:52,036 [IPC Server handler 14 on default port 15004] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:tryWriteLockInOMRequest(160)) - Set omRequestWriteLockStamp to 13696, omRequestWriteLockHolderTid to 435
2024-07-20 16:54:52,036 [IPC Server handler 14 on default port 15004] INFO  om.OMMultiTenantManagerImpl (OMMultiTenantManagerImpl.java:deleteTenant(323)) - Deleting tenant policies and roles from Ranger: OzoneTenant{tenantId='tenant-test-set-secret', tenantRoleNames=[tenant-test-set-secret-UserRole, tenant-test-set-secret-AdminRole], accessPolicies=[tenant-test-set-secret-VolumeAccess, tenant-test-set-secret-BucketAccess], accountNameSpace=org.apache.hadoop.ozone.om.multitenant.impl.AccountNameSpaceImpl@79929c38, bucketNameSpace=org.apache.hadoop.ozone.om.multitenant.impl.SingleVolumeTenantNamespace@5daae64b}
2024-07-20 16:54:52,041 [omNode-1-OMStateMachineApplyTransactionThread - 0] INFO  om.OMMultiTenantManagerImpl (OMMultiTenantManagerImpl.java:deleteTenant(602)) - Removing tenant from in-memory cache: tenant-test-set-secret
2024-07-20 16:54:52,041 [omNode-1-OMStateMachineApplyTransactionThread - 0] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:unlockWriteInOMRequest(181)) - Restored omRequestWriteLockStamp to 0, omRequestWriteLockHolderTid to 0
2024-07-20 16:54:52,041 [omNode-1-OMStateMachineApplyTransactionThread - 0] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:unlockWrite(122)) - Releasing authorizer write lock from thread 604 with stamp 13696
2024-07-20 16:54:52,041 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=UPDATE_VOLUME {volume=tenant-test-set-secret} | ret=SUCCESS |  
2024-07-20 16:54:52,042 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=DELETE_TENANT {tenant=tenant-test-set-secret} | ret=SUCCESS |  
2024-07-20 16:54:52,042 [omNode-1-OMStateMachineApplyTransactionThread - 0] INFO  tenant.OMTenantDeleteRequest (OMTenantDeleteRequest.java:validateAndUpdateCache(242)) - Deleted tenant 'tenant-test-set-secret' and volume 'tenant-test-set-secret'
2024-07-20 16:54:52,045 [main] INFO  shell.TestOzoneTenantShell (TestOzoneTenantShell.java:execute(212)) - Executing shell command with args [volume, delete, tenant-test-set-secret]
2024-07-20 16:54:52,047 [omNode-2-OMStateMachineApplyTransactionThread - 0] INFO  om.OMMultiTenantManagerImpl (OMMultiTenantManagerImpl.java:deleteTenant(602)) - Removing tenant from in-memory cache: tenant-test-set-secret
2024-07-20 16:54:52,047 [omNode-2-OMStateMachineApplyTransactionThread - 0] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:unlockWriteInOMRequest(170)) - Authorizer write lock is not held in this lock instance. This OM might be follower, or leader changed. Ignored
2024-07-20 16:54:52,047 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=UPDATE_VOLUME {volume=tenant-test-set-secret} | ret=SUCCESS |  
2024-07-20 16:54:52,047 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=DELETE_TENANT {tenant=tenant-test-set-secret} | ret=SUCCESS |  
2024-07-20 16:54:52,048 [omNode-2-OMStateMachineApplyTransactionThread - 0] INFO  tenant.OMTenantDeleteRequest (OMTenantDeleteRequest.java:validateAndUpdateCache(242)) - Deleted tenant 'tenant-test-set-secret' and volume 'tenant-test-set-secret'
2024-07-20 16:54:52,048 [omNode-3-OMStateMachineApplyTransactionThread - 0] INFO  om.OMMultiTenantManagerImpl (OMMultiTenantManagerImpl.java:deleteTenant(602)) - Removing tenant from in-memory cache: tenant-test-set-secret
2024-07-20 16:54:52,048 [omNode-3-OMStateMachineApplyTransactionThread - 0] DEBUG multitenant.AuthorizerLockImpl (AuthorizerLockImpl.java:unlockWriteInOMRequest(170)) - Authorizer write lock is not held in this lock instance. This OM might be follower, or leader changed. Ignored
2024-07-20 16:54:52,048 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=UPDATE_VOLUME {volume=tenant-test-set-secret} | ret=SUCCESS |  
2024-07-20 16:54:52,049 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=DELETE_TENANT {tenant=tenant-test-set-secret} | ret=SUCCESS |  
2024-07-20 16:54:52,049 [omNode-3-OMStateMachineApplyTransactionThread - 0] INFO  tenant.OMTenantDeleteRequest (OMTenantDeleteRequest.java:validateAndUpdateCache(242)) - Deleted tenant 'tenant-test-set-secret' and volume 'tenant-test-set-secret'
2024-07-20 16:54:52,064 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=GET_SERVICE_LIST {} | ret=SUCCESS |  
2024-07-20 16:54:52,075 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=DELETE_VOLUME {volume=tenant-test-set-secret} | ret=SUCCESS |  
2024-07-20 16:54:52,077 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=DELETE_VOLUME {volume=tenant-test-set-secret} | ret=SUCCESS |  
2024-07-20 16:54:52,078 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=DELETE_VOLUME {volume=tenant-test-set-secret} | ret=SUCCESS |  
2024-07-20 16:54:52,078 [main] INFO  shell.TestOzoneTenantShell (TestOzoneTenantShell.java:execute(212)) - Executing shell command with args [list, --om-service-id=om-service-test1]
2024-07-20 16:54:52,102 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=GET_SERVICE_LIST {} | ret=SUCCESS |  
2024-07-20 16:54:52,109 | INFO  | OMAudit | user=runner | ip=127.0.0.1 | op=LIST_TENANT {} | ret=SUCCESS |  
2024-07-20 16:54:52,113 [main] INFO  ozone.MiniOzoneClusterImpl (MiniOzoneClusterImpl.java:shutdown(396)) - Shutting down the Mini Ozone Cluster
2024-07-20 16:54:52,114 [main] INFO  db.CodecTestUtil (CodecTestUtil.java:gc(50)) - gc 0
2024-07-20 16:54:52,290 | INFO  | SCMAudit | user=null | ip=null | op=GET_SCM_INFO null | ret=SUCCESS |  
2024-07-20 16:54:52,290 [main] INFO  ozone.MiniOzoneHAClusterImpl (MiniOzoneHAClusterImpl.java:stop(288)) - Stopping the OzoneManager omNode-3
2024-07-20 16:54:52,291 [main] INFO  om.OzoneManager (OzoneManager.java:stop(2232)) - omNode-3[localhost:15012]: Stopping Ozone Manager
2024-07-20 16:54:52,291 [main] INFO  ipc.Server (Server.java:stop(3523)) - Stopping server on 15012
2024-07-20 16:54:52,292 [IPC Server Responder] INFO  ipc.Server (Server.java:run(1567)) - Stopping IPC Server Responder
2024-07-20 16:54:52,292 [main] INFO  ratis.OzoneManagerRatisServer (OzoneManagerRatisServer.java:stop(600)) - Stopping org.apache.hadoop.ozone.om.ratis.OzoneManagerRatisServer@3cac6165 at port 15015
2024-07-20 16:54:52,292 [IPC Server listener on 15012] INFO  ipc.Server (Server.java:run(1434)) - Stopping IPC Server listener on 15012
2024-07-20 16:54:52,292 [main] INFO  server.RaftServer (RaftServerProxy.java:lambda$close$9(418)) - omNode-3: close
2024-07-20 16:54:52,293 [omNode-3-impl-thread1] INFO  server.RaftServer$Division (RaftServerImpl.java:lambda$close$1(501)) - omNode-3@group-523986131536: shutdown
2024-07-20 16:54:52,293 [main] INFO  server.GrpcService (GrpcService.java:closeImpl(311)) - omNode-3: shutdown server GrpcServerProtocolService now
2024-07-20 16:54:52,293 [omNode-3-impl-thread1] INFO  util.JmxRegister (JmxRegister.java:unregister(74)) - Successfully un-registered JMX Bean with object name Ratis:service=RaftServer,group=group-523986131536,id=omNode-3
2024-07-20 16:54:52,297 [omNode-3-impl-thread1] INFO  impl.RoleInfo (RoleInfo.java:shutdownFollowerState(119)) - omNode-3: shutdown omNode-3@group-523986131536-FollowerState
2024-07-20 16:54:52,297 [omNode-3-impl-thread1] INFO  impl.StateMachineUpdater (StateMachineUpdater.java:stopAndJoin(164)) - omNode-3@group-523986131536-StateMachineUpdater: set stopIndex = 129
2024-07-20 16:54:52,297 [omNode-3@group-523986131536-FollowerState] INFO  impl.FollowerState (FollowerState.java:run(153)) - omNode-3@group-523986131536-FollowerState was interrupted
2024-07-20 16:54:52,297 [omNode-3@group-523986131536-StateMachineUpdater] INFO  ratis.OzoneManagerStateMachine (OzoneManagerStateMachine.java:takeSnapshotImpl(485)) -  applied = (t:1, i:129)
2024-07-20 16:54:52,297 [omNode-3@group-523986131536-StateMachineUpdater] INFO  ratis.OzoneManagerStateMachine (OzoneManagerStateMachine.java:takeSnapshotImpl(486)) -  skipped = 127
2024-07-20 16:54:52,297 [omNode-3@group-523986131536-StateMachineUpdater] INFO  ratis.OzoneManagerStateMachine (OzoneManagerStateMachine.java:takeSnapshotImpl(487)) - notified = (t:1, i:128)
2024-07-20 16:54:52,297 [omNode-3@group-523986131536-StateMachineUpdater] INFO  ratis.OzoneManagerStateMachine (OzoneManagerStateMachine.java:takeSnapshotImpl(488)) - snapshot = (t:1, i:129)
2024-07-20 16:54:52,300 [grpc-default-executor-4] WARN  server.GrpcServerProtocolService (LogUtils.java:warn(121)) - omNode-3: APPEND_ENTRIES onError, lastRequest: null: org.apache.ratis.thirdparty.io.grpc.StatusRuntimeException: CANCELLED: client cancelled
2024-07-20 16:54:52,301 [grpc-default-executor-4] WARN  server.GrpcLogAppender (GrpcLogAppender.java:lambda$resetClient$1(221)) - omNode-1@group-523986131536->omNode-3-GrpcLogAppender: Follower failed (request=null, errorCount=1); keep nextIndex (131) unchanged and retry.
2024-07-20 16:54:52,300 [grpc-default-executor-6] WARN  server.GrpcServerProtocolService (LogUtils.java:warn(121)) - omNode-3: APPEND_ENTRIES onError, lastRequest: omNode-1->omNode-3#1023-t1,previous=(t:1, i:129),leaderCommit=129,initializing? false,entries: size=1, first=(t:1, i:130), METADATAENTRY(c:129): org.apache.ratis.thirdparty.io.grpc.StatusRuntimeException: CANCELLED: client cancelled
2024-07-20 16:54:52,302 [main] INFO  server.GrpcService (GrpcService.java:closeImpl(320)) - omNode-3: shutdown server GrpcServerProtocolService successfully
2024-07-20 16:54:52,335 [omNode-3@group-523986131536-StateMachineUpdater] INFO  impl.StateMachineUpdater (StateMachineUpdater.java:takeSnapshot(303)) - omNode-3@group-523986131536-StateMachineUpdater: Took a snapshot at index 129
2024-07-20 16:54:52,335 [omNode-3@group-523986131536-StateMachineUpdater] INFO  impl.StateMachineUpdater (StateMachineUpdater.java:lambda$new$0(102)) - omNode-3@group-523986131536-StateMachineUpdater: snapshotIndex: updateIncreasingly -1 -> 129
2024-07-20 16:54:52,335 [omNode-3@group-523986131536-StateMachineUpdater] INFO  impl.StateMachineUpdater (StateMachineUpdater.java:stop(141)) - omNode-3@group-523986131536-StateMachineUpdater: closing OzoneManagerStateMachine, lastApplied=(t:1, i:129)
2024-07-20 16:54:52,335 [omNode-3@group-523986131536-StateMachineUpdater] INFO  ratis.OzoneManagerStateMachine (OzoneManagerStateMachine.java:close(531)) - Stopping OzoneManagerStateMachine:omNode-3:group-523986131536.
2024-07-20 16:54:52,335 [omNode-3@group-523986131536-StateMachineUpdater] INFO  ratis.OzoneManagerDoubleBuffer (OzoneManagerDoubleBuffer.java:stopDaemon(517)) - Stopping OMDoubleBuffer flush thread
2024-07-20 16:54:52,336 [omNode-3-OMDoubleBufferFlushThread] INFO  ratis.OzoneManagerDoubleBuffer (OzoneManagerDoubleBuffer.java:canFlush(581)) - OMDoubleBuffer flush thread omNode-3-OMDoubleBufferFlushThread is interrupted and will exit.
2024-07-20 16:54:52,336 [omNode-3@group-523986131536-cacheEviction-AwaitToRun] INFO  util.AwaitToRun (AwaitToRun.java:run(49)) - omNode-3@group-523986131536-cacheEviction-AwaitToRun-AwaitForSignal is interrupted
2024-07-20 16:54:52,576 [timer1] WARN  server.GrpcLogAppender (LogUtils.java:warn(121)) - omNode-1@group-523986131536->omNode-3-AppendLogResponseHandler: Failed appendEntries (Repeated 16 times in the last 5.026s): org.apache.ratis.thirdparty.io.grpc.StatusRuntimeException: CANCELLED: RST_STREAM closed stream. HTTP/2 error code: CANCEL
2024-07-20 16:54:52,580 [grpc-default-executor-4] WARN  server.GrpcLogAppender (LogUtils.java:warn(121)) - omNode-1@group-523986131536->omNode-3-AppendLogResponseHandler: Failed appendEntries: org.apache.ratis.thirdparty.io.grpc.StatusRuntimeException: UNAVAILABLE: io exception
2024-07-20 16:54:52,597 [timer3] WARN  server.GrpcLogAppender (GrpcLogAppender.java:lambda$resetClient$1(221)) - omNode-1@group-523986131536->omNode-3-GrpcLogAppender: Follower failed (request=null, errorCount=2); keep nextIndex (0) unchanged and retry. (Repeated 2 times in the last 5.016s)
2024-07-20 16:54:52,608 [timer5] WARN  server.GrpcLogAppender (GrpcLogAppender.java:lambda$resetClient$1(221)) - omNode-1@group-523986131536->omNode-3-GrpcLogAppender: Follower failed (request=null, errorCount=14); keep nextIndex (1) unchanged and retry. (Repeated 12 times in the last 5.001s)
2024-07-20 16:54:53,077 [omNode-3-impl-thread1] INFO  segmented.SegmentedRaftLogWorker (SegmentedRaftLogWorker.java:close(248)) - omNode-3@group-523986131536-SegmentedRaftLogWorker close()
2024-07-20 16:54:53,080 [JvmPauseMonitor3] INFO  util.JvmPauseMonitor (JvmPauseMonitor.java:run(152)) - JvmPauseMonitor-omNode-3: Stopped
2024-07-20 16:54:53,080 [main] INFO  utils.BackgroundService (BackgroundService.java:shutdown(163)) - Shutting down service KeyDeletingService
2024-07-20 16:54:53,081 [main] INFO  utils.BackgroundService (BackgroundService.java:shutdown(163)) - Shutting down service DirectoryDeletingService
2024-07-20 16:54:53,081 [main] INFO  utils.BackgroundService (BackgroundService.java:shutdown(163)) - Shutting down service OpenKeyCleanupService
2024-07-20 16:54:53,082 [main] INFO  utils.BackgroundService (BackgroundService.java:shutdown(163)) - Shutting down service SstFilteringService
2024-07-20 16:54:53,082 [main] INFO  utils.BackgroundService (BackgroundService.java:shutdown(163)) - Shutting down service SnapshotDeletingService
2024-07-20 16:54:53,082 [main] INFO  utils.BackgroundService (BackgroundService.java:shutdown(163)) - Shutting down service MultipartUploadCleanupService
2024-07-20 16:54:53,082 [main] INFO  utils.BackgroundService (BackgroundService.java:shutdown(163)) - Shutting down service SnapshotDirectoryCleaningService
2024-07-20 16:54:53,085 [main] INFO  handler.ContextHandler (ContextHandler.java:doStop(1159)) - Stopped o.e.j.w.WebAppContext@65cfbf2c{ozoneManager,/,null,STOPPED}{file:/home/runner/work/ozone/ozone/hadoop-ozone/integration-test/target/test-classes/webapps/ozoneManager}
2024-07-20 16:54:53,087 [main] INFO  server.AbstractConnector (AbstractConnector.java:doStop(383)) - Stopped ServerConnector@1e2200ee{HTTP/1.1, (http/1.1)}{0.0.0.0:15013}
2024-07-20 16:54:53,087 [main] INFO  server.session (HouseKeeper.java:stopScavenging(149)) - node0 Stopped scavenging
2024-07-20 16:54:53,088 [main] INFO  handler.ContextHandler (ContextHandler.java:doStop(1159)) - Stopped o.e.j.s.ServletContextHandler@3922d85c{static,/static,file:///home/runner/work/ozone/ozone/hadoop-ozone/integration-test/target/test-classes/webapps/static,STOPPED}
2024-07-20 16:54:53,088 [main] INFO  handler.ContextHandler (ContextHandler.java:doStop(1159)) - Stopped o.e.j.s.ServletContextHandler@904df8a{logs,/logs,file:///home/runner/work/ozone/ozone/hadoop-ozone/integration-test/target/log,STOPPED}
2024-07-20 16:54:53,089 [main] INFO  utils.BackgroundService (BackgroundService.java:shutdown(163)) - Shutting down service OMRangerBGSyncService
2024-07-20 16:54:53,090 [main] INFO  rocksdiff.RocksDBCheckpointDiffer (RocksDBCheckpointDiffer.java:close(306)) - Shutting down CompactionDagPruningService.
2024-07-20 16:54:53,094 [main] INFO  snapshot.SnapshotDiffManager (SnapshotDiffManager.java:closeExecutorService(1657)) - Shutting down executorService: 'SnapDiffExecutor'
2024-07-20 16:54:53,094 [main] INFO  utils.BackgroundService (BackgroundService.java:shutdown(163)) - Shutting down service SnapshotDiffCleanupService
2024-07-20 16:54:53,096 [main] INFO  ozone.MiniOzoneHAClusterImpl (MiniOzoneHAClusterImpl.java:stop(288)) - Stopping the OzoneManager omNode-1
2024-07-20 16:54:53,096 [main] INFO  om.OzoneManager (OzoneManager.java:stop(2232)) - omNode-1[localhost:15004]: Stopping Ozone Manager
2024-07-20 16:54:53,096 [main] INFO  ipc.Server (Server.java:stop(3523)) - Stopping server on 15004
2024-07-20 16:54:53,097 [IPC Server listener on 15004] INFO  ipc.Server (Server.java:run(1434)) - Stopping IPC Server listener on 15004
2024-07-20 16:54:53,101 [IPC Server Responder] INFO  ipc.Server (Server.java:run(1567)) - Stopping IPC Server Responder
2024-07-20 16:54:53,102 [main] INFO  ratis.OzoneManagerRatisServer (OzoneManagerRatisServer.java:stop(600)) - Stopping org.apache.hadoop.ozone.om.ratis.OzoneManagerRatisServer@5dbc262c at port 15007
2024-07-20 16:54:53,102 [main] INFO  server.RaftServer (RaftServerProxy.java:lambda$close$9(418)) - omNode-1: close
2024-07-20 16:54:53,102 [omNode-1-impl-thread1] INFO  server.RaftServer$Division (RaftServerImpl.java:lambda$close$1(501)) - omNode-1@group-523986131536: shutdown
2024-07-20 16:54:53,102 [omNode-1-impl-thread1] INFO  util.JmxRegister (JmxRegister.java:unregister(74)) - Successfully un-registered JMX Bean with object name Ratis:service=RaftServer,group=group-523986131536,id=omNode-1
2024-07-20 16:54:53,102 [omNode-1-impl-thread1] INFO  impl.RoleInfo (RoleInfo.java:shutdownLeaderState(103)) - omNode-1: shutdown omNode-1@group-523986131536-LeaderStateImpl
2024-07-20 16:54:53,102 [main] INFO  server.GrpcService (GrpcService.java:closeImpl(311)) - omNode-1: shutdown server GrpcServerProtocolService now
2024-07-20 16:54:53,103 [omNode-1@group-523986131536->omNode-2-GrpcLogAppender-LogAppenderDaemon] WARN  server.GrpcLogAppender (GrpcLogAppender.java:mayWait(293)) - omNode-1@group-523986131536->omNode-2-GrpcLogAppender: Wait interrupted by java.lang.InterruptedException
2024-07-20 16:54:53,103 [omNode-1-impl-thread1] INFO  impl.PendingRequests (PendingRequests.java:sendNotLeaderResponses(287)) - omNode-1@group-523986131536-PendingRequests: sendNotLeaderResponses
2024-07-20 16:54:53,104 [omNode-1@group-523986131536->omNode-3-GrpcLogAppender-LogAppenderDaemon] WARN  server.GrpcLogAppender (GrpcLogAppender.java:mayWait(293)) - omNode-1@group-523986131536->omNode-3-GrpcLogAppender: Wait interrupted by java.lang.InterruptedException
2024-07-20 16:54:53,104 [grpc-default-executor-1] INFO  server.GrpcServerProtocolService (GrpcServerProtocolService.java:onCompleted(157)) - omNode-2: Completed APPEND_ENTRIES, lastRequest: omNode-1->omNode-2#285-t1,previous=(t:1, i:129),leaderCommit=129,initializing? false,entries: size=1, first=(t:1, i:130), METADATAENTRY(c:129)
2024-07-20 16:54:53,104 [grpc-default-executor-4] INFO  server.GrpcServerProtocolService (GrpcServerProtocolService.java:onCompleted(157)) - omNode-2: Completed APPEND_ENTRIES, lastRequest: null
2024-07-20 16:54:53,106 [grpc-default-executor-1] INFO  server.GrpcServerProtocolService (GrpcServerProtocolService.java:lambda$onCompleted$5(159)) - omNode-2: Completed APPEND_ENTRIES, lastReply: null
2024-07-20 16:54:53,106 [Thread-690] INFO  server.GrpcServerProtocolClient (GrpcServerProtocolClient.java:close(103)) - omNode-3 Close channels
2024-07-20 16:54:53,107 [grpc-default-executor-6] INFO  server.GrpcLogAppender (GrpcLogAppender.java:onCompleted(550)) - omNode-1@group-523986131536->omNode-2-AppendLogResponseHandler: follower responses appendEntries COMPLETED
2024-07-20 16:54:53,108 [omNode-1@group-523986131536-StateMachineUpdater] INFO  ratis.OzoneManagerStateMachine (OzoneManagerStateMachine.java:takeSnapshotImpl(485)) -  applied = (t:1, i:130)
2024-07-20 16:54:53,108 [omNode-1@group-523986131536-StateMachineUpdater] INFO  ratis.OzoneManagerStateMachine (OzoneManagerStateMachine.java:takeSnapshotImpl(486)) -  skipped = 129
2024-07-20 16:54:53,108 [omNode-1@group-523986131536-StateMachineUpdater] INFO  ratis.OzoneManagerStateMachine (OzoneManagerStateMachine.java:takeSnapshotImpl(487)) - notified = (t:1, i:130)
2024-07-20 16:54:53,108 [omNode-1@group-523986131536-StateMachineUpdater] INFO  ratis.OzoneManagerStateMachine (OzoneManagerStateMachine.java:takeSnapshotImpl(488)) - snapshot = (t:1, i:130)
2024-07-20 16:54:53,108 [omNode-1-impl-thread1] INFO  impl.StateMachineUpdater (StateMachineUpdater.java:stopAndJoin(164)) - omNode-1@group-523986131536-StateMachineUpdater: set stopIndex = 130
2024-07-20 16:54:53,108 [grpc-default-executor-4] INFO  server.GrpcServerProtocolService (GrpcServerProtocolService.java:lambda$onCompleted$5(159)) - omNode-2: Completed APPEND_ENTRIES, lastReply: serverReply {
  requestorId: "omNode-1"
  replyId: "omNode-2"
  raftGroupId {
    id: "\311\274L\364;\303<`\246kR9\206\023\0256"
  }
  callId: 288
  success: true
}
term: 1
nextIndex: 131
followerCommit: 130
matchIndex: 18446744073709551615
isHearbeat: true

2024-07-20 16:54:53,109 [Thread-692] INFO  server.GrpcServerProtocolClient (GrpcServerProtocolClient.java:close(103)) - omNode-2 Close channels
2024-07-20 16:54:53,109 [grpc-default-executor-4] INFO  server.GrpcLogAppender (GrpcLogAppender.java:onCompleted(550)) - omNode-1@group-523986131536->omNode-2-AppendLogResponseHandler: follower responses appendEntries COMPLETED
2024-07-20 16:54:53,110 [grpc-default-executor-4] WARN  server.GrpcLogAppender (GrpcLogAppender.java:resetClient(230)) - omNode-1@group-523986131536->omNode-2-GrpcLogAppender: Failed to getClient for omNode-2
org.apache.ratis.protocol.exceptions.AlreadyClosedException: omNode-1 is already CLOSED
	at org.apache.ratis.util.PeerProxyMap$PeerAndProxy.getProxy(PeerProxyMap.java:67)
	at org.apache.ratis.util.PeerProxyMap.getProxy(PeerProxyMap.java:124)
	at org.apache.ratis.grpc.server.GrpcLogAppender.getClient(GrpcLogAppender.java:200)
	at org.apache.ratis.grpc.server.GrpcLogAppender.resetClient(GrpcLogAppender.java:205)
	at org.apache.ratis.grpc.server.GrpcLogAppender.access$800(GrpcLogAppender.java:64)
	at org.apache.ratis.grpc.server.GrpcLogAppender$AppendLogResponseHandler.onCompleted(GrpcLogAppender.java:551)
	at org.apache.ratis.thirdparty.io.grpc.stub.ClientCalls$StreamObserverToCallListenerAdapter.onClose(ClientCalls.java:479)
	at org.apache.ratis.thirdparty.io.grpc.internal.DelayedClientCall$DelayedListener$3.run(DelayedClientCall.java:489)
	at org.apache.ratis.thirdparty.io.grpc.internal.DelayedClientCall$DelayedListener.delayOrExecute(DelayedClientCall.java:453)
	at org.apache.ratis.thirdparty.io.grpc.internal.DelayedClientCall$DelayedListener.onClose(DelayedClientCall.java:486)
	at org.apache.ratis.thirdparty.io.grpc.internal.ClientCallImpl.closeObserver(ClientCallImpl.java:567)
	at org.apache.ratis.thirdparty.io.grpc.internal.ClientCallImpl.access$300(ClientCallImpl.java:71)
	at org.apache.ratis.thirdparty.io.grpc.internal.ClientCallImpl$ClientStreamListenerImpl$1StreamClosed.runInternal(ClientCallImpl.java:735)
	at org.apache.ratis.thirdparty.io.grpc.internal.ClientCallImpl$ClientStreamListenerImpl$1StreamClosed.runInContext(ClientCallImpl.java:716)
	at org.apache.ratis.thirdparty.io.grpc.internal.ContextRunnable.run(ContextRunnable.java:37)
	at org.apache.ratis.thirdparty.io.grpc.internal.SerializingExecutor.run(SerializingExecutor.java:133)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2024-07-20 16:54:53,110 [main] INFO  server.GrpcService (GrpcService.java:closeImpl(320)) - omNode-1: shutdown server GrpcServerProtocolService successfully
2024-07-20 16:54:53,143 [omNode-1@group-523986131536-StateMachineUpdater] INFO  impl.StateMachineUpdater (StateMachineUpdater.java:takeSnapshot(303)) - omNode-1@group-523986131536-StateMachineUpdater: Took a snapshot at index 130
2024-07-20 16:54:53,143 [omNode-1@group-523986131536-StateMachineUpdater] INFO  impl.StateMachineUpdater (StateMachineUpdater.java:lambda$new$0(102)) - omNode-1@group-523986131536-StateMachineUpdater: snapshotIndex: updateIncreasingly -1 -> 130
2024-07-20 16:54:53,143 [omNode-1@group-523986131536-StateMachineUpdater] INFO  impl.StateMachineUpdater (StateMachineUpdater.java:stop(141)) - omNode-1@group-523986131536-StateMachineUpdater: closing OzoneManagerStateMachine, lastApplied=(t:1, i:130)
2024-07-20 16:54:53,143 [omNode-1@group-523986131536-StateMachineUpdater] INFO  ratis.OzoneManagerStateMachine (OzoneManagerStateMachine.java:close(531)) - Stopping OzoneManagerStateMachine:omNode-1:group-523986131536.
2024-07-20 16:54:53,143 [omNode-1@group-523986131536-StateMachineUpdater] INFO  ratis.OzoneManagerDoubleBuffer (OzoneManagerDoubleBuffer.java:stopDaemon(517)) - Stopping OMDoubleBuffer flush thread
2024-07-20 16:54:53,143 [omNode-1-OMDoubleBufferFlushThread] INFO  ratis.OzoneManagerDoubleBuffer (OzoneManagerDoubleBuffer.java:canFlush(581)) - OMDoubleBuffer flush thread omNode-1-OMDoubleBufferFlushThread is interrupted and will exit.
2024-07-20 16:54:53,144 [omNode-1@group-523986131536-cacheEviction-AwaitToRun] INFO  util.AwaitToRun (AwaitToRun.java:run(49)) - omNode-1@group-523986131536-cacheEviction-AwaitToRun-AwaitForSignal is interrupted
2024-07-20 16:54:54,075 [omNode-1-impl-thread1] INFO  segmented.SegmentedRaftLogWorker (SegmentedRaftLogWorker.java:close(248)) - omNode-1@group-523986131536-SegmentedRaftLogWorker close()
2024-07-20 16:54:54,076 [JvmPauseMonitor1] INFO  util.JvmPauseMonitor (JvmPauseMonitor.java:run(152)) - JvmPauseMonitor-omNode-1: Stopped
2024-07-20 16:54:54,076 [main] INFO  utils.BackgroundService (BackgroundService.java:shutdown(163)) - Shutting down service KeyDeletingService
2024-07-20 16:54:54,077 [main] INFO  utils.BackgroundService (BackgroundService.java:shutdown(163)) - Shutting down service DirectoryDeletingService
2024-07-20 16:54:54,077 [main] INFO  utils.BackgroundService (BackgroundService.java:shutdown(163)) - Shutting down service OpenKeyCleanupService
2024-07-20 16:54:54,077 [main] INFO  utils.BackgroundService (BackgroundService.java:shutdown(163)) - Shutting down service SstFilteringService
2024-07-20 16:54:54,078 [main] INFO  utils.BackgroundService (BackgroundService.java:shutdown(163)) - Shutting down service SnapshotDeletingService
2024-07-20 16:54:54,078 [main] INFO  utils.BackgroundService (BackgroundService.java:shutdown(163)) - Shutting down service MultipartUploadCleanupService
2024-07-20 16:54:54,078 [main] INFO  utils.BackgroundService (BackgroundService.java:shutdown(163)) - Shutting down service SnapshotDirectoryCleaningService
2024-07-20 16:54:54,079 [main] INFO  handler.ContextHandler (ContextHandler.java:doStop(1159)) - Stopped o.e.j.w.WebAppContext@6450bea7{ozoneManager,/,null,STOPPED}{file:/home/runner/work/ozone/ozone/hadoop-ozone/integration-test/target/test-classes/webapps/ozoneManager}
2024-07-20 16:54:54,080 [main] INFO  server.AbstractConnector (AbstractConnector.java:doStop(383)) - Stopped ServerConnector@59c08e5d{HTTP/1.1, (http/1.1)}{0.0.0.0:15005}
2024-07-20 16:54:54,080 [main] INFO  server.session (HouseKeeper.java:stopScavenging(149)) - node0 Stopped scavenging
2024-07-20 16:54:54,080 [main] INFO  handler.ContextHandler (ContextHandler.java:doStop(1159)) - Stopped o.e.j.s.ServletContextHandler@6416b6e3{static,/static,file:///home/runner/work/ozone/ozone/hadoop-ozone/integration-test/target/test-classes/webapps/static,STOPPED}
2024-07-20 16:54:54,080 [main] INFO  handler.ContextHandler (ContextHandler.java:doStop(1159)) - Stopped o.e.j.s.ServletContextHandler@e1619a{logs,/logs,file:///home/runner/work/ozone/ozone/hadoop-ozone/integration-test/target/log,STOPPED}
2024-07-20 16:54:54,081 [main] INFO  utils.BackgroundService (BackgroundService.java:shutdown(163)) - Shutting down service OMRangerBGSyncService
2024-07-20 16:54:54,082 [main] INFO  rocksdiff.RocksDBCheckpointDiffer (RocksDBCheckpointDiffer.java:close(306)) - Shutting down CompactionDagPruningService.
2024-07-20 16:54:54,083 [main] INFO  snapshot.SnapshotDiffManager (SnapshotDiffManager.java:closeExecutorService(1657)) - Shutting down executorService: 'SnapDiffExecutor'
2024-07-20 16:54:54,083 [main] INFO  utils.BackgroundService (BackgroundService.java:shutdown(163)) - Shutting down service SnapshotDiffCleanupService
2024-07-20 16:54:54,084 [main] INFO  ozone.MiniOzoneHAClusterImpl (MiniOzoneHAClusterImpl.java:stop(288)) - Stopping the OzoneManager omNode-2
2024-07-20 16:54:54,084 [main] INFO  om.OzoneManager (OzoneManager.java:stop(2232)) - omNode-2[localhost:15008]: Stopping Ozone Manager
2024-07-20 16:54:54,084 [main] INFO  ipc.Server (Server.java:stop(3523)) - Stopping server on 15008
2024-07-20 16:54:54,086 [IPC Server listener on 15008] INFO  ipc.Server (Server.java:run(1434)) - Stopping IPC Server listener on 15008
2024-07-20 16:54:54,087 [IPC Server Responder] INFO  ipc.Server (Server.java:run(1567)) - Stopping IPC Server Responder
2024-07-20 16:54:54,088 [main] INFO  ratis.OzoneManagerRatisServer (OzoneManagerRatisServer.java:stop(600)) - Stopping org.apache.hadoop.ozone.om.ratis.OzoneManagerRatisServer@fed54a6 at port 15011
2024-07-20 16:54:54,088 [main] INFO  server.RaftServer (RaftServerProxy.java:lambda$close$9(418)) - omNode-2: close
2024-07-20 16:54:54,088 [main] INFO  server.GrpcService (GrpcService.java:closeImpl(311)) - omNode-2: shutdown server GrpcServerProtocolService now
2024-07-20 16:54:54,088 [omNode-2-impl-thread1] INFO  server.RaftServer$Division (RaftServerImpl.java:lambda$close$1(501)) - omNode-2@group-523986131536: shutdown
2024-07-20 16:54:54,088 [omNode-2-impl-thread1] INFO  util.JmxRegister (JmxRegister.java:unregister(74)) - Successfully un-registered JMX Bean with object name Ratis:service=RaftServer,group=group-523986131536,id=omNode-2
2024-07-20 16:54:54,088 [omNode-2-impl-thread1] INFO  impl.RoleInfo (RoleInfo.java:shutdownFollowerState(119)) - omNode-2: shutdown omNode-2@group-523986131536-FollowerState
2024-07-20 16:54:54,088 [omNode-2-impl-thread1] INFO  impl.StateMachineUpdater (StateMachineUpdater.java:stopAndJoin(164)) - omNode-2@group-523986131536-StateMachineUpdater: set stopIndex = 130
2024-07-20 16:54:54,088 [omNode-2@group-523986131536-StateMachineUpdater] INFO  ratis.OzoneManagerStateMachine (OzoneManagerStateMachine.java:takeSnapshotImpl(485)) -  applied = (t:1, i:130)
2024-07-20 16:54:54,089 [omNode-2@group-523986131536-StateMachineUpdater] INFO  ratis.OzoneManagerStateMachine (OzoneManagerStateMachine.java:takeSnapshotImpl(486)) -  skipped = 129
2024-07-20 16:54:54,089 [omNode-2@group-523986131536-StateMachineUpdater] INFO  ratis.OzoneManagerStateMachine (OzoneManagerStateMachine.java:takeSnapshotImpl(487)) - notified = (t:1, i:130)
2024-07-20 16:54:54,089 [omNode-2@group-523986131536-StateMachineUpdater] INFO  ratis.OzoneManagerStateMachine (OzoneManagerStateMachine.java:takeSnapshotImpl(488)) - snapshot = (t:1, i:130)
2024-07-20 16:54:54,089 [omNode-2@group-523986131536-FollowerState] INFO  impl.FollowerState (FollowerState.java:run(153)) - omNode-2@group-523986131536-FollowerState was interrupted
2024-07-20 16:54:54,090 [main] INFO  server.GrpcService (GrpcService.java:closeImpl(320)) - omNode-2: shutdown server GrpcServerProtocolService successfully
2024-07-20 16:54:54,111 [omNode-2@group-523986131536-StateMachineUpdater] INFO  impl.StateMachineUpdater (StateMachineUpdater.java:takeSnapshot(303)) - omNode-2@group-523986131536-StateMachineUpdater: Took a snapshot at index 130
2024-07-20 16:54:54,111 [omNode-2@group-523986131536-StateMachineUpdater] INFO  impl.StateMachineUpdater (StateMachineUpdater.java:lambda$new$0(102)) - omNode-2@group-523986131536-StateMachineUpdater: snapshotIndex: updateIncreasingly -1 -> 130
2024-07-20 16:54:54,111 [omNode-2@group-523986131536-StateMachineUpdater] INFO  impl.StateMachineUpdater (StateMachineUpdater.java:stop(141)) - omNode-2@group-523986131536-StateMachineUpdater: closing OzoneManagerStateMachine, lastApplied=(t:1, i:130)
2024-07-20 16:54:54,112 [omNode-2@group-523986131536-StateMachineUpdater] INFO  ratis.OzoneManagerStateMachine (OzoneManagerStateMachine.java:close(531)) - Stopping OzoneManagerStateMachine:omNode-2:group-523986131536.
2024-07-20 16:54:54,112 [omNode-2@group-523986131536-StateMachineUpdater] INFO  ratis.OzoneManagerDoubleBuffer (OzoneManagerDoubleBuffer.java:stopDaemon(517)) - Stopping OMDoubleBuffer flush thread
2024-07-20 16:54:54,112 [omNode-2-OMDoubleBufferFlushThread] INFO  ratis.OzoneManagerDoubleBuffer (OzoneManagerDoubleBuffer.java:canFlush(581)) - OMDoubleBuffer flush thread omNode-2-OMDoubleBufferFlushThread is interrupted and will exit.
2024-07-20 16:54:54,112 [omNode-2@group-523986131536-cacheEviction-AwaitToRun] INFO  util.AwaitToRun (AwaitToRun.java:run(49)) - omNode-2@group-523986131536-cacheEviction-AwaitToRun-AwaitForSignal is interrupted
2024-07-20 16:54:55,077 [omNode-2-impl-thread1] INFO  segmented.SegmentedRaftLogWorker (SegmentedRaftLogWorker.java:close(248)) - omNode-2@group-523986131536-SegmentedRaftLogWorker close()
2024-07-20 16:54:55,077 [JvmPauseMonitor2] INFO  util.JvmPauseMonitor (JvmPauseMonitor.java:run(152)) - JvmPauseMonitor-omNode-2: Stopped
2024-07-20 16:54:55,078 [main] INFO  utils.BackgroundService (BackgroundService.java:shutdown(163)) - Shutting down service KeyDeletingService
2024-07-20 16:54:55,078 [main] INFO  utils.BackgroundService (BackgroundService.java:shutdown(163)) - Shutting down service DirectoryDeletingService
2024-07-20 16:54:55,078 [main] INFO  utils.BackgroundService (BackgroundService.java:shutdown(163)) - Shutting down service OpenKeyCleanupService
2024-07-20 16:54:55,078 [main] INFO  utils.BackgroundService (BackgroundService.java:shutdown(163)) - Shutting down service SstFilteringService
2024-07-20 16:54:55,079 [main] INFO  utils.BackgroundService (BackgroundService.java:shutdown(163)) - Shutting down service SnapshotDeletingService
2024-07-20 16:54:55,079 [main] INFO  utils.BackgroundService (BackgroundService.java:shutdown(163)) - Shutting down service MultipartUploadCleanupService
2024-07-20 16:54:55,079 [main] INFO  utils.BackgroundService (BackgroundService.java:shutdown(163)) - Shutting down service SnapshotDirectoryCleaningService
2024-07-20 16:54:55,080 [main] INFO  handler.ContextHandler (ContextHandler.java:doStop(1159)) - Stopped o.e.j.w.WebAppContext@4f9e5d0e{ozoneManager,/,null,STOPPED}{file:/home/runner/work/ozone/ozone/hadoop-ozone/integration-test/target/test-classes/webapps/ozoneManager}
2024-07-20 16:54:55,080 [main] INFO  server.AbstractConnector (AbstractConnector.java:doStop(383)) - Stopped ServerConnector@6bb4568{HTTP/1.1, (http/1.1)}{0.0.0.0:15009}
2024-07-20 16:54:55,080 [main] INFO  server.session (HouseKeeper.java:stopScavenging(149)) - node0 Stopped scavenging
2024-07-20 16:54:55,081 [main] INFO  handler.ContextHandler (ContextHandler.java:doStop(1159)) - Stopped o.e.j.s.ServletContextHandler@661d8946{static,/static,file:///home/runner/work/ozone/ozone/hadoop-ozone/integration-test/target/test-classes/webapps/static,STOPPED}
2024-07-20 16:54:55,081 [main] INFO  handler.ContextHandler (ContextHandler.java:doStop(1159)) - Stopped o.e.j.s.ServletContextHandler@7370c288{logs,/logs,file:///home/runner/work/ozone/ozone/hadoop-ozone/integration-test/target/log,STOPPED}
2024-07-20 16:54:55,082 [main] INFO  utils.BackgroundService (BackgroundService.java:shutdown(163)) - Shutting down service OMRangerBGSyncService
2024-07-20 16:54:55,082 [main] INFO  rocksdiff.RocksDBCheckpointDiffer (RocksDBCheckpointDiffer.java:close(306)) - Shutting down CompactionDagPruningService.
2024-07-20 16:54:55,084 [main] INFO  snapshot.SnapshotDiffManager (SnapshotDiffManager.java:closeExecutorService(1657)) - Shutting down executorService: 'SnapDiffExecutor'
2024-07-20 16:54:55,084 [main] INFO  utils.BackgroundService (BackgroundService.java:shutdown(163)) - Shutting down service SnapshotDiffCleanupService
2024-07-20 16:54:55,085 [main] INFO  ozone.MiniOzoneHAClusterImpl (MiniOzoneHAClusterImpl.java:stop(295)) - Stopping the StorageContainerManager 854d00fa-18a1-48ca-910a-0b7fe9df4975
2024-07-20 16:54:55,085 [main] INFO  server.StorageContainerManager (StorageContainerManager.java:stop(1648)) - Container Balancer is not running.
2024-07-20 16:54:55,085 [main] INFO  server.StorageContainerManager (StorageContainerManager.java:stopReplicationManager(1786)) - Stopping Replication Manager Service.
2024-07-20 16:54:55,085 [main] INFO  replication.ReplicationManager (ReplicationManager.java:stop(329)) - Stopping Replication Monitor Thread.
2024-07-20 16:54:55,085 [main] INFO  server.StorageContainerManager (StorageContainerManager.java:stop(1657)) - Stopping the Datanode Admin Monitor.
2024-07-20 16:54:55,086 [OverReplicatedProcessor] WARN  replication.UnhealthyReplicationProcessor (UnhealthyReplicationProcessor.java:run(180)) - OverReplicatedProcessor interrupted. Exiting...
2024-07-20 16:54:55,086 [ReplicationMonitor] INFO  replication.ReplicationManager (ReplicationManager.java:run(938)) - Replication Monitor Thread is stopped
2024-07-20 16:54:55,086 [UnderReplicatedProcessor] WARN  replication.UnhealthyReplicationProcessor (UnhealthyReplicationProcessor.java:run(180)) - UnderReplicatedProcessor interrupted. Exiting...
2024-07-20 16:54:55,086 [main] INFO  server.StorageContainerManager (StorageContainerManager.java:stop(1664)) - Stopping datanode service RPC server
2024-07-20 16:54:55,086 [main] INFO  server.SCMDatanodeProtocolServer (SCMDatanodeProtocolServer.java:stop(425)) - Stopping the RPC server for DataNodes
2024-07-20 16:54:55,086 [main] INFO  ipc.Server (Server.java:stop(3523)) - Stopping server on 15002
2024-07-20 16:54:55,090 [IPC Server listener on 15002] INFO  ipc.Server (Server.java:run(1434)) - Stopping IPC Server listener on 15002
2024-07-20 16:54:55,090 [IPC Server Responder] INFO  ipc.Server (Server.java:run(1567)) - Stopping IPC Server Responder
2024-07-20 16:54:55,107 [SCMHeartbeatProcessor-0] WARN  node.NodeStateManager (NodeStateManager.java:scheduleNextHealthCheck(883)) - Current Thread is interrupted, shutting down HB processing thread for Node Manager.
2024-07-20 16:54:55,108 [main] INFO  server.StorageContainerManager (StorageContainerManager.java:stop(1672)) - Stopping block service RPC server
2024-07-20 16:54:55,108 [main] INFO  server.SCMBlockProtocolServer (SCMBlockProtocolServer.java:stop(176)) - Stopping the RPC server for Block Protocol
2024-07-20 16:54:55,108 [main] INFO  ipc.Server (Server.java:stop(3523)) - Stopping server on 15001
2024-07-20 16:54:55,111 [IPC Server Responder] INFO  ipc.Server (Server.java:run(1567)) - Stopping IPC Server Responder
2024-07-20 16:54:55,111 [main] INFO  server.StorageContainerManager (StorageContainerManager.java:stop(1679)) - Stopping the StorageContainerLocationProtocol RPC server
2024-07-20 16:54:55,111 [main] INFO  server.SCMClientProtocolServer (SCMClientProtocolServer.java:stop(213)) - Stopping the RPC server for Client Protocol
2024-07-20 16:54:55,112 [main] INFO  ipc.Server (Server.java:stop(3523)) - Stopping server on 15000
2024-07-20 16:54:55,113 [IPC Server listener on 15001] INFO  ipc.Server (Server.java:run(1434)) - Stopping IPC Server listener on 15001
2024-07-20 16:54:55,120 [IPC Server listener on 15000] INFO  ipc.Server (Server.java:run(1434)) - Stopping IPC Server listener on 15000
2024-07-20 16:54:55,120 [IPC Server Responder] INFO  ipc.Server (Server.java:run(1567)) - Stopping IPC Server Responder
2024-07-20 16:54:55,121 [main] INFO  server.StorageContainerManager (StorageContainerManager.java:stop(1686)) - Stopping Storage Container Manager HTTP server.
2024-07-20 16:54:55,122 [main] INFO  handler.ContextHandler (ContextHandler.java:doStop(1159)) - Stopped o.e.j.w.WebAppContext@f3cc2e0{scm,/,null,STOPPED}{file:/home/runner/work/ozone/ozone/hadoop-ozone/integration-test/target/test-classes/webapps/scm}
2024-07-20 16:54:55,123 [main] INFO  server.AbstractConnector (AbstractConnector.java:doStop(383)) - Stopped ServerConnector@138d85f8{HTTP/1.1, (http/1.1)}{0.0.0.0:15003}
2024-07-20 16:54:55,123 [main] INFO  server.session (HouseKeeper.java:stopScavenging(149)) - node0 Stopped scavenging
2024-07-20 16:54:55,123 [main] INFO  handler.ContextHandler (ContextHandler.java:doStop(1159)) - Stopped o.e.j.s.ServletContextHandler@58052571{static,/static,file:///home/runner/work/ozone/ozone/hadoop-ozone/integration-test/target/test-classes/webapps/static,STOPPED}
2024-07-20 16:54:55,124 [main] INFO  handler.ContextHandler (ContextHandler.java:doStop(1159)) - Stopped o.e.j.s.ServletContextHandler@69a14512{logs,/logs,file:///home/runner/work/ozone/ozone/hadoop-ozone/integration-test/target/log,STOPPED}
2024-07-20 16:54:55,125 [main] INFO  server.StorageContainerManager (StorageContainerManager.java:stop(1694)) - Stopping SCM LayoutVersionManager Service.
2024-07-20 16:54:55,125 [main] INFO  server.StorageContainerManager (StorageContainerManager.java:stop(1706)) - Stopping Block Manager Service.
2024-07-20 16:54:55,125 [main] INFO  utils.BackgroundService (BackgroundService.java:shutdown(163)) - Shutting down service SCMBlockDeletingService
2024-07-20 16:54:55,126 [main] INFO  utils.BackgroundService (BackgroundService.java:shutdown(163)) - Shutting down service SCMBlockDeletingService
2024-07-20 16:54:55,126 [main] INFO  server.StorageContainerManager (StorageContainerManager.java:stop(1731)) - Stopping SCM Event Queue.
2024-07-20 16:54:55,127 [JvmPauseMonitor0] INFO  util.JvmPauseMonitor (JvmPauseMonitor.java:run(152)) - JvmPauseMonitor-854d00fa-18a1-48ca-910a-0b7fe9df4975: Stopped
2024-07-20 16:54:55,127 [main] INFO  server.StorageContainerManager (StorageContainerManager.java:stop(1742)) - Stopping SCM HA services.
2024-07-20 16:54:55,128 [main] INFO  pipeline.BackgroundPipelineCreator (BackgroundPipelineCreator.java:stop(152)) - Stopping RatisPipelineUtilsThread.
2024-07-20 16:54:55,128 [RatisPipelineUtilsThread-0] WARN  pipeline.BackgroundPipelineCreator (BackgroundPipelineCreator.java:run(183)) - RatisPipelineUtilsThread is interrupted.
2024-07-20 16:54:55,129 [BackgroundPipelineScrubber] WARN  BackgroundPipelineScrubber (BackgroundSCMService.java:run(112)) - BackgroundPipelineScrubber is interrupted, exit
2024-07-20 16:54:55,129 [main] INFO  BackgroundPipelineScrubber (BackgroundSCMService.java:stop(128)) - Stopping BackgroundPipelineScrubber Service.
2024-07-20 16:54:55,130 [main] INFO  impl.MetricsSystemImpl (MetricsSystemImpl.java:stop(210)) - Stopping OzoneManager metrics system...
2024-07-20 16:54:55,131 [prometheus] INFO  impl.MetricsSinkAdapter (MetricsSinkAdapter.java:publishMetricsFromQueue(141)) - prometheus thread interrupted.
2024-07-20 16:54:55,131 [main] INFO  impl.MetricsSystemImpl (MetricsSystemImpl.java:stop(216)) - OzoneManager metrics system stopped.
2024-07-20 16:54:55,131 [main] WARN  pipeline.BackgroundPipelineCreator (BackgroundPipelineCreator.java:stop(148)) - RatisPipelineUtilsThread is not running, just ignore.
2024-07-20 16:54:55,132 [main] INFO  BackgroundPipelineScrubber (BackgroundSCMService.java:stop(123)) - BackgroundPipelineScrubber Service is not running, skip stop.
2024-07-20 16:54:55,132 [main] INFO  ExpiredContainerReplicaOpScrubber (BackgroundSCMService.java:stop(128)) - Stopping ExpiredContainerReplicaOpScrubber Service.
2024-07-20 16:54:55,132 [main] INFO  utils.BackgroundService (BackgroundService.java:shutdown(163)) - Shutting down service SCMBlockDeletingService
2024-07-20 16:54:55,132 [ExpiredContainerReplicaOpScrubber] WARN  ExpiredContainerReplicaOpScrubber (BackgroundSCMService.java:run(112)) - ExpiredContainerReplicaOpScrubber is interrupted, exit
2024-07-20 16:54:55,132 [main] INFO  replication.ReplicationManager (ReplicationManager.java:stop(339)) - Replication Monitor Thread is not running.
2024-07-20 16:54:55,133 [main] WARN  balancer.ContainerBalancer (ContainerBalancer.java:stop(327)) - Cannot stop Container Balancer because it's not running or stopping
2024-07-20 16:54:55,133 [LeaseManager#LeaseMonitor] WARN  lease.LeaseManager (LeaseManager.java:run(286)) - Lease manager is interrupted. Shutting down...
java.lang.InterruptedException
	at java.base/java.util.concurrent.locks.AbstractQueuedSynchronizer.tryAcquireSharedNanos(AbstractQueuedSynchronizer.java:1081)
	at java.base/java.util.concurrent.Semaphore.tryAcquire(Semaphore.java:415)
	at org.apache.hadoop.ozone.lease.LeaseManager$LeaseMonitor.run(LeaseManager.java:284)
	at java.base/java.lang.Thread.run(Thread.java:840)
2024-07-20 16:54:55,133 [main] INFO  server.StorageContainerManager (StorageContainerManager.java:stop(1777)) - Stopping SCM MetadataStore.
2024-07-20 16:54:55,134 [main] INFO  ozone.MiniOzoneClusterImpl (MiniOzoneClusterImpl.java:stop(412)) - Stopping the Mini Ozone Cluster
