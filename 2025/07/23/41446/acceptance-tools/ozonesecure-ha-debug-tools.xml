<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.1.1 (Python 3.9.21 on linux)" generated="20250723 18:53:04.328" rpa="false" schemaversion="4">
<suite id="s1" name="ozonesecure-ha-debug-tools">
<suite id="s1-s1" name="Kinit" source="/opt/hadoop/smoketest/kinit.robot">
<test id="s1-s1-t1" name="Kinit" line="27">
<kw name="Kinit test user" library="commonlib">
<arg>${USER}</arg>
<arg>${USER}.keytab</arg>
<kw name="Get Security Enabled From Config" library="commonlib">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' != ''</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20250723 18:50:06.306" endtime="20250723 18:50:06.307"/>
</kw>
<kw name="Execute" library="os">
<var>${value}</var>
<arg>ozone getconf confKey ozone.security.enabled</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250723 18:50:06.310" level="INFO">Running command 'ozone getconf confKey ozone.security.enabled 2&gt;&amp;1'.</msg>
<msg timestamp="20250723 18:50:07.285" level="INFO">${rc} = 0</msg>
<msg timestamp="20250723 18:50:07.285" level="INFO">${output} = true</msg>
<status status="PASS" starttime="20250723 18:50:06.308" endtime="20250723 18:50:07.285"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250723 18:50:07.286" level="INFO">true</msg>
<status status="PASS" starttime="20250723 18:50:07.286" endtime="20250723 18:50:07.286"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250723 18:50:07.287" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250723 18:50:07.287" endtime="20250723 18:50:07.287"/>
</kw>
<status status="PASS" starttime="20250723 18:50:06.307" endtime="20250723 18:50:07.287"/>
</kw>
<msg timestamp="20250723 18:50:07.287" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250723 18:50:06.307" endtime="20250723 18:50:07.287"/>
</kw>
<msg timestamp="20250723 18:50:07.287" level="INFO">${value} = true</msg>
<status status="PASS" starttime="20250723 18:50:06.307" endtime="20250723 18:50:07.287"/>
</kw>
<if>
<branch type="IF" condition="'${value}' != 'true' and '${value}' != 'false'">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>false</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20250723 18:50:07.288" endtime="20250723 18:50:07.288"/>
</kw>
<status status="NOT RUN" starttime="20250723 18:50:07.287" endtime="20250723 18:50:07.288"/>
</branch>
<status status="PASS" starttime="20250723 18:50:07.287" endtime="20250723 18:50:07.288"/>
</if>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${SECURITY_ENABLED}</arg>
<arg>${value}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250723 18:50:07.288" level="INFO">${SECURITY_ENABLED} = true</msg>
<status status="PASS" starttime="20250723 18:50:07.288" endtime="20250723 18:50:07.288"/>
</kw>
<status status="PASS" starttime="20250723 18:50:06.306" endtime="20250723 18:50:07.288"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250723 18:50:07.289" endtime="20250723 18:50:07.289"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250723 18:50:07.292" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250723 18:50:07.296" level="INFO">${rc} = 0</msg>
<msg timestamp="20250723 18:50:07.296" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20250723 18:50:07.290" endtime="20250723 18:50:07.296"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250723 18:50:07.297" level="INFO">om</msg>
<status status="PASS" starttime="20250723 18:50:07.296" endtime="20250723 18:50:07.297"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250723 18:50:07.297" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250723 18:50:07.297" endtime="20250723 18:50:07.297"/>
</kw>
<status status="PASS" starttime="20250723 18:50:07.290" endtime="20250723 18:50:07.297"/>
</kw>
<msg timestamp="20250723 18:50:07.297" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250723 18:50:07.289" endtime="20250723 18:50:07.297"/>
</kw>
<msg timestamp="20250723 18:50:07.298" level="INFO">${instance} = om</msg>
<status status="PASS" starttime="20250723 18:50:07.289" endtime="20250723 18:50:07.298"/>
</kw>
<msg timestamp="20250723 18:50:07.298" level="INFO">${TEST_USER} = testuser/om@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250723 18:50:07.289" endtime="20250723 18:50:07.298"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250723 18:50:07.298" level="INFO">${TEST_USER} = testuser/om@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250723 18:50:07.298" endtime="20250723 18:50:07.298"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250723 18:50:07.302" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/om@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250723 18:50:07.416" level="INFO">${rc} = 0</msg>
<msg timestamp="20250723 18:50:07.416" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250723 18:50:07.300" endtime="20250723 18:50:07.416"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250723 18:50:07.416" level="INFO"/>
<status status="PASS" starttime="20250723 18:50:07.416" endtime="20250723 18:50:07.416"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250723 18:50:07.417" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250723 18:50:07.417" endtime="20250723 18:50:07.417"/>
</kw>
<status status="PASS" starttime="20250723 18:50:07.299" endtime="20250723 18:50:07.417"/>
</kw>
<msg timestamp="20250723 18:50:07.417" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250723 18:50:07.299" endtime="20250723 18:50:07.417"/>
</kw>
<status status="PASS" starttime="20250723 18:50:07.299" endtime="20250723 18:50:07.417"/>
</kw>
<status status="PASS" starttime="20250723 18:50:07.298" endtime="20250723 18:50:07.417"/>
</kw>
<status status="PASS" starttime="20250723 18:50:06.306" endtime="20250723 18:50:07.417"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20250723 18:50:06.305" endtime="20250723 18:50:07.418"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" starttime="20250723 18:50:06.269" endtime="20250723 18:50:07.418"/>
</suite>
<suite id="s1-s2" name="Auditparser" source="/opt/hadoop/smoketest/debug/auditparser.robot">
<kw name="Get Security Enabled From Config" library="commonlib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' != ''</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20250723 18:50:08.087" endtime="20250723 18:50:08.087"/>
</kw>
<kw name="Execute" library="os">
<var>${value}</var>
<arg>ozone getconf confKey ozone.security.enabled</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250723 18:50:08.090" level="INFO">Running command 'ozone getconf confKey ozone.security.enabled 2&gt;&amp;1'.</msg>
<msg timestamp="20250723 18:50:09.073" level="INFO">${rc} = 0</msg>
<msg timestamp="20250723 18:50:09.073" level="INFO">${output} = true</msg>
<status status="PASS" starttime="20250723 18:50:08.088" endtime="20250723 18:50:09.073"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250723 18:50:09.074" level="INFO">true</msg>
<status status="PASS" starttime="20250723 18:50:09.073" endtime="20250723 18:50:09.074"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250723 18:50:09.074" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250723 18:50:09.074" endtime="20250723 18:50:09.074"/>
</kw>
<status status="PASS" starttime="20250723 18:50:08.087" endtime="20250723 18:50:09.074"/>
</kw>
<msg timestamp="20250723 18:50:09.074" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250723 18:50:08.087" endtime="20250723 18:50:09.074"/>
</kw>
<msg timestamp="20250723 18:50:09.075" level="INFO">${value} = true</msg>
<status status="PASS" starttime="20250723 18:50:08.087" endtime="20250723 18:50:09.075"/>
</kw>
<if>
<branch type="IF" condition="'${value}' != 'true' and '${value}' != 'false'">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>false</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20250723 18:50:09.075" endtime="20250723 18:50:09.075"/>
</kw>
<status status="NOT RUN" starttime="20250723 18:50:09.075" endtime="20250723 18:50:09.075"/>
</branch>
<status status="PASS" starttime="20250723 18:50:09.075" endtime="20250723 18:50:09.075"/>
</if>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${SECURITY_ENABLED}</arg>
<arg>${value}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250723 18:50:09.076" level="INFO">${SECURITY_ENABLED} = true</msg>
<status status="PASS" starttime="20250723 18:50:09.075" endtime="20250723 18:50:09.076"/>
</kw>
<status status="PASS" starttime="20250723 18:50:08.086" endtime="20250723 18:50:09.076"/>
</kw>
<test id="s1-s2-t1" name="Testing audit parser" line="41">
<kw name="Create data" type="SETUP">
<kw name="Freon OMBG" library="freon">
<arg>prefix=auditparser</arg>
<arg>n=${buckets}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ombg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250723 18:50:09.081" level="INFO">Running command 'ozone freon ombg --om-service-id=omservice -t 1 -n5 -p auditparser  2&gt;&amp;1'.</msg>
<msg timestamp="20250723 18:50:14.045" level="INFO">${rc} = 0</msg>
<msg timestamp="20250723 18:50:14.045" level="INFO">${output} = 2025-07-23 18:50:10,497 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-07-23 18:50:10,673 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250723 18:50:09.079" endtime="20250723 18:50:14.045"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250723 18:50:14.046" level="INFO">2025-07-23 18:50:10,497 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-07-23 18:50:10,673 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2025-07-23 18:50:10,673 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2025-07-23 18:50:10,879 [main] INFO freon.BaseFreonGenerator: Executing test with prefix auditparser and number-of-tests 5
2025-07-23 18:50:10,949 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 5)
2025-07-23 18:50:11,949 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 5)
2025-07-23 18:50:12,902 [main] INFO rpc.RpcClient: Creating Volume: vol1, with testuser as owner and space quota set to -1 bytes, counts quota set to -1
2025-07-23 18:50:12,950 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 5)
2025-07-23 18:50:13,951 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (5 out of 5)
2025-07-23 18:50:13,970 [shutdown-hook-0] INFO metrics: type=TIMER, name=bucket-create, count=5, min=29.134895, max=106.310172, mean=60.786783400000004, stddev=27.666823456532697, median=64.331402, p75=69.2371, p95=106.310172, p98=106.310172, p99=106.310172, p999=106.310172, mean_rate=5.324714276550757, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2025-07-23 18:50:13,971 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2025-07-23 18:50:13,971 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2025-07-23 18:50:13,971 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 5</msg>
<status status="PASS" starttime="20250723 18:50:14.045" endtime="20250723 18:50:14.046"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250723 18:50:14.046" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250723 18:50:14.046" endtime="20250723 18:50:14.046"/>
</kw>
<status status="PASS" starttime="20250723 18:50:09.079" endtime="20250723 18:50:14.047"/>
</kw>
<msg timestamp="20250723 18:50:14.047" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250723 18:50:09.078" endtime="20250723 18:50:14.047"/>
</kw>
<msg timestamp="20250723 18:50:14.047" level="INFO">${result} = 2025-07-23 18:50:10,497 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-07-23 18:50:10,673 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250723 18:50:09.078" endtime="20250723 18:50:14.047"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250723 18:50:14.047" endtime="20250723 18:50:14.047"/>
</kw>
<status status="PASS" starttime="20250723 18:50:09.077" endtime="20250723 18:50:14.047"/>
</kw>
<kw name="Freon OCKG" library="freon">
<arg>prefix=auditparser</arg>
<arg>n=100</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250723 18:50:14.052" level="INFO">Running command 'ozone freon ockg --om-service-id=omservice -t 1 -n100 -p auditparser  2&gt;&amp;1'.</msg>
<msg timestamp="20250723 18:50:29.395" level="INFO">${rc} = 0</msg>
<msg timestamp="20250723 18:50:29.395" level="INFO">${output} = 2025-07-23 18:50:15,448 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-07-23 18:50:15,619 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250723 18:50:14.049" endtime="20250723 18:50:29.395"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250723 18:50:29.396" level="INFO">2025-07-23 18:50:15,448 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-07-23 18:50:15,619 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2025-07-23 18:50:15,619 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2025-07-23 18:50:15,849 [main] INFO freon.BaseFreonGenerator: Executing test with prefix auditparser and number-of-tests 100
2025-07-23 18:50:15,945 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2025-07-23 18:50:16,946 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2025-07-23 18:50:17,862 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with server-side default bucket layout, testuser as owner, Versioning false, Storage Type set to DISK and Encryption set to false, Replication Type set to server-side default replication type, Namespace Quota set to -1, Space Quota set to -1 
2025-07-23 18:50:17,947 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2025-07-23 18:50:18,240 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2025-07-23 18:50:18,312 [pool-2-thread-1] INFO netty.NettyConfigKeys$DataStream: setTlsConf GrpcTlsConfig0-
2025-07-23 18:50:18,948 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2025-07-23 18:50:19,949 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2025-07-23 18:50:20,246 [pool-2-thread-1] INFO netty.NettyConfigKeys$DataStream: setTlsConf GrpcTlsConfig1-
2025-07-23 18:50:20,950 [Thread-5] INFO freon.ProgressBar: Progress: 1.00 % (1 out of 100)
2025-07-23 18:50:21,094 [pool-2-thread-1] INFO netty.NettyConfigKeys$DataStream: setTlsConf GrpcTlsConfig2-
2025-07-23 18:50:21,951 [Thread-5] INFO freon.ProgressBar: Progress: 9.00 % (9 out of 100)
2025-07-23 18:50:22,953 [Thread-5] INFO freon.ProgressBar: Progress: 22.00 % (22 out of 100)
2025-07-23 18:50:23,954 [Thread-5] INFO freon.ProgressBar: Progress: 34.00 % (34 out of 100)
2025-07-23 18:50:24,956 [Thread-5] INFO freon.ProgressBar: Progress: 48.00 % (48 out of 100)
2025-07-23 18:50:25,957 [Thread-5] INFO freon.ProgressBar: Progress: 64.00 % (64 out of 100)
2025-07-23 18:50:26,957 [Thread-5] INFO freon.ProgressBar: Progress: 81.00 % (81 out of 100)
2025-07-23 18:50:27,958 [Thread-5] INFO freon.ProgressBar: Progress: 96.00 % (96 out of 100)
2025-07-23 18:50:28,958 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (100 out of 100)
2025-07-23 18:50:28,994 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=100, min=49.276433, max=2225.775979, mean=99.79366569889653, stddev=222.22055726780303, median=67.345579, p75=78.866903, p95=112.666694, p98=294.075725, p99=869.013273, p999=2225.775979, mean_rate=9.023541109800595, m1=5.063520322003309, m5=4.378508298726532, m15=4.259833641547115, rate_unit=events/second, duration_unit=milliseconds
2025-07-23 18:50:28,995 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 13
2025-07-23 18:50:28,995 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2025-07-23 18:50:28,995 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 100</msg>
<status status="PASS" starttime="20250723 18:50:29.395" endtime="20250723 18:50:29.396"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250723 18:50:29.397" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250723 18:50:29.396" endtime="20250723 18:50:29.397"/>
</kw>
<status status="PASS" starttime="20250723 18:50:14.049" endtime="20250723 18:50:29.397"/>
</kw>
<msg timestamp="20250723 18:50:29.397" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250723 18:50:14.049" endtime="20250723 18:50:29.397"/>
</kw>
<msg timestamp="20250723 18:50:29.397" level="INFO">${result} = 2025-07-23 18:50:15,448 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-07-23 18:50:15,619 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250723 18:50:14.048" endtime="20250723 18:50:29.397"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250723 18:50:29.397" endtime="20250723 18:50:29.398"/>
</kw>
<status status="PASS" starttime="20250723 18:50:14.048" endtime="20250723 18:50:29.398"/>
</kw>
<status status="PASS" starttime="20250723 18:50:09.077" endtime="20250723 18:50:29.398"/>
</kw>
<kw name="Get Environment Variable" library="OperatingSystem">
<var>${logdir}</var>
<arg>OZONE_LOG_DIR</arg>
<arg>/var/log/ozone</arg>
<doc>Returns the value of an environment variable with the given name.</doc>
<msg timestamp="20250723 18:50:29.398" level="INFO">${logdir} = /var/log/hadoop</msg>
<status status="PASS" starttime="20250723 18:50:29.398" endtime="20250723 18:50:29.398"/>
</kw>
<kw name="Execute" library="os">
<var>${logfile}</var>
<arg>ls -t "${logdir}" | grep om-audit | head -1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250723 18:50:29.401" level="INFO">Running command 'ls -t "/var/log/hadoop" | grep om-audit | head -1 2&gt;&amp;1'.</msg>
<msg timestamp="20250723 18:50:29.406" level="INFO">${rc} = 0</msg>
<msg timestamp="20250723 18:50:29.406" level="INFO">${output} = om-audit-om1.log</msg>
<status status="PASS" starttime="20250723 18:50:29.399" endtime="20250723 18:50:29.406"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250723 18:50:29.407" level="INFO">om-audit-om1.log</msg>
<status status="PASS" starttime="20250723 18:50:29.406" endtime="20250723 18:50:29.407"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250723 18:50:29.408" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250723 18:50:29.407" endtime="20250723 18:50:29.408"/>
</kw>
<status status="PASS" starttime="20250723 18:50:29.399" endtime="20250723 18:50:29.408"/>
</kw>
<msg timestamp="20250723 18:50:29.408" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250723 18:50:29.399" endtime="20250723 18:50:29.408"/>
</kw>
<msg timestamp="20250723 18:50:29.408" level="INFO">${logfile} = om-audit-om1.log</msg>
<status status="PASS" starttime="20250723 18:50:29.398" endtime="20250723 18:50:29.408"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone debug auditparser "${auditworkdir}/audit.db" load "${logdir}/${logfile}"</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250723 18:50:29.411" level="INFO">Running command 'ozone debug auditparser "/tmp/audit.db" load "/var/log/hadoop/om-audit-om1.log" 2&gt;&amp;1'.</msg>
<msg timestamp="20250723 18:50:31.542" level="INFO">${rc} = 0</msg>
<msg timestamp="20250723 18:50:31.542" level="INFO">${output} = /var/log/hadoop/om-audit-om1.log has been loaded successfully</msg>
<status status="PASS" starttime="20250723 18:50:29.409" endtime="20250723 18:50:31.542"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250723 18:50:31.543" level="INFO">/var/log/hadoop/om-audit-om1.log has been loaded successfully</msg>
<status status="PASS" starttime="20250723 18:50:31.542" endtime="20250723 18:50:31.543"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250723 18:50:31.543" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250723 18:50:31.543" endtime="20250723 18:50:31.543"/>
</kw>
<status status="PASS" starttime="20250723 18:50:29.409" endtime="20250723 18:50:31.544"/>
</kw>
<msg timestamp="20250723 18:50:31.544" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250723 18:50:29.409" endtime="20250723 18:50:31.544"/>
</kw>
<status status="PASS" starttime="20250723 18:50:29.408" endtime="20250723 18:50:31.544"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone debug auditparser "${auditworkdir}/audit.db" template top5cmds</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250723 18:50:31.548" level="INFO">Running command 'ozone debug auditparser "/tmp/audit.db" template top5cmds 2&gt;&amp;1'.</msg>
<msg timestamp="20250723 18:50:33.172" level="INFO">${rc} = 0</msg>
<msg timestamp="20250723 18:50:33.172" level="INFO">${output} = READ_BUCKET	102	
ALLOCATE_KEY	100	
COMMIT_KEY	100	
CREATE_BUCKET	6	
GET_SERVICE_LIST	5	
</msg>
<status status="PASS" starttime="20250723 18:50:31.545" endtime="20250723 18:50:33.172"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250723 18:50:33.173" level="INFO">READ_BUCKET	102	
ALLOCATE_KEY	100	
COMMIT_KEY	100	
CREATE_BUCKET	6	
GET_SERVICE_LIST	5	
</msg>
<status status="PASS" starttime="20250723 18:50:33.173" endtime="20250723 18:50:33.173"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250723 18:50:33.174" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250723 18:50:33.174" endtime="20250723 18:50:33.174"/>
</kw>
<status status="PASS" starttime="20250723 18:50:31.545" endtime="20250723 18:50:33.174"/>
</kw>
<msg timestamp="20250723 18:50:33.174" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250723 18:50:31.544" endtime="20250723 18:50:33.174"/>
</kw>
<msg timestamp="20250723 18:50:33.174" level="INFO">${result} = READ_BUCKET	102	
ALLOCATE_KEY	100	
COMMIT_KEY	100	
CREATE_BUCKET	6	
GET_SERVICE_LIST	5	
</msg>
<status status="PASS" starttime="20250723 18:50:31.544" endtime="20250723 18:50:33.174"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ALLOCATE_KEY</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250723 18:50:33.175" endtime="20250723 18:50:33.175"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone debug auditparser "${auditworkdir}/audit.db" template top5users</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250723 18:50:33.178" level="INFO">Running command 'ozone debug auditparser "/tmp/audit.db" template top5users 2&gt;&amp;1'.</msg>
<msg timestamp="20250723 18:50:34.771" level="INFO">${rc} = 0</msg>
<msg timestamp="20250723 18:50:34.772" level="INFO">${output} = testuser/om@EXAMPLE.COM	315	
scm/scm@EXAMPLE.COM	2	
recon/recon@EXAMPLE.COM	1	
</msg>
<status status="PASS" starttime="20250723 18:50:33.176" endtime="20250723 18:50:34.772"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250723 18:50:34.772" level="INFO">testuser/om@EXAMPLE.COM	315	
scm/scm@EXAMPLE.COM	2	
recon/recon@EXAMPLE.COM	1	
</msg>
<status status="PASS" starttime="20250723 18:50:34.772" endtime="20250723 18:50:34.773"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250723 18:50:34.773" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250723 18:50:34.773" endtime="20250723 18:50:34.773"/>
</kw>
<status status="PASS" starttime="20250723 18:50:33.175" endtime="20250723 18:50:34.773"/>
</kw>
<msg timestamp="20250723 18:50:34.773" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250723 18:50:33.175" endtime="20250723 18:50:34.773"/>
</kw>
<msg timestamp="20250723 18:50:34.773" level="INFO">${result} = testuser/om@EXAMPLE.COM	315	
scm/scm@EXAMPLE.COM	2	
recon/recon@EXAMPLE.COM	1	
</msg>
<status status="PASS" starttime="20250723 18:50:33.175" endtime="20250723 18:50:34.773"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Set username</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set username">
<kw name="Get test user principal" library="commonlib">
<var>${principal}</var>
<arg>testuser</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250723 18:50:34.778" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250723 18:50:34.782" level="INFO">${rc} = 0</msg>
<msg timestamp="20250723 18:50:34.782" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20250723 18:50:34.775" endtime="20250723 18:50:34.782"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250723 18:50:34.782" level="INFO">om</msg>
<status status="PASS" starttime="20250723 18:50:34.782" endtime="20250723 18:50:34.783"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250723 18:50:34.783" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250723 18:50:34.783" endtime="20250723 18:50:34.783"/>
</kw>
<status status="PASS" starttime="20250723 18:50:34.775" endtime="20250723 18:50:34.783"/>
</kw>
<msg timestamp="20250723 18:50:34.783" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250723 18:50:34.775" endtime="20250723 18:50:34.783"/>
</kw>
<msg timestamp="20250723 18:50:34.783" level="INFO">${instance} = om</msg>
<status status="PASS" starttime="20250723 18:50:34.774" endtime="20250723 18:50:34.783"/>
</kw>
<msg timestamp="20250723 18:50:34.784" level="INFO">${principal} = testuser/om@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250723 18:50:34.774" endtime="20250723 18:50:34.784"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${user}</arg>
<arg>${principal}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250723 18:50:34.784" level="INFO">${user} = testuser/om@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250723 18:50:34.784" endtime="20250723 18:50:34.784"/>
</kw>
<status status="PASS" starttime="20250723 18:50:34.774" endtime="20250723 18:50:34.784"/>
</kw>
<status status="PASS" starttime="20250723 18:50:34.774" endtime="20250723 18:50:34.784"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${user}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250723 18:50:34.784" endtime="20250723 18:50:34.785"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone debug auditparser "${auditworkdir}/audit.db" query "select count(*) from audit where op='CREATE_VOLUME' and RESULT='SUCCESS'"</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250723 18:50:34.788" level="INFO">Running command 'ozone debug auditparser "/tmp/audit.db" query "select count(*) from audit where op='CREATE_VOLUME' and RESULT='SUCCESS'" 2&gt;&amp;1'.</msg>
<msg timestamp="20250723 18:50:36.499" level="INFO">${rc} = 0</msg>
<msg timestamp="20250723 18:50:36.499" level="INFO">${output} = 1	
</msg>
<status status="PASS" starttime="20250723 18:50:34.786" endtime="20250723 18:50:36.499"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250723 18:50:36.500" level="INFO">1	
</msg>
<status status="PASS" starttime="20250723 18:50:36.499" endtime="20250723 18:50:36.500"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250723 18:50:36.500" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250723 18:50:36.500" endtime="20250723 18:50:36.500"/>
</kw>
<status status="PASS" starttime="20250723 18:50:34.785" endtime="20250723 18:50:36.501"/>
</kw>
<msg timestamp="20250723 18:50:36.501" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250723 18:50:34.785" endtime="20250723 18:50:36.501"/>
</kw>
<msg timestamp="20250723 18:50:36.501" level="INFO">${result} = 1	
</msg>
<status status="PASS" starttime="20250723 18:50:34.785" endtime="20250723 18:50:36.501"/>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<var>${result}</var>
<arg>${result}</arg>
<doc>Converts the given item to a floating point number.</doc>
<msg timestamp="20250723 18:50:36.501" level="INFO">${result} = 1.0</msg>
<status status="PASS" starttime="20250723 18:50:36.501" endtime="20250723 18:50:36.501"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${result}&gt;=1</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20250723 18:50:36.501" endtime="20250723 18:50:36.502"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone debug auditparser "${auditworkdir}/audit.db" query "select count(*) from audit where op='CREATE_BUCKET' and RESULT='SUCCESS'"</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250723 18:50:36.505" level="INFO">Running command 'ozone debug auditparser "/tmp/audit.db" query "select count(*) from audit where op='CREATE_BUCKET' and RESULT='SUCCESS'" 2&gt;&amp;1'.</msg>
<msg timestamp="20250723 18:50:38.109" level="INFO">${rc} = 0</msg>
<msg timestamp="20250723 18:50:38.109" level="INFO">${output} = 6	
</msg>
<status status="PASS" starttime="20250723 18:50:36.503" endtime="20250723 18:50:38.109"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250723 18:50:38.110" level="INFO">6	
</msg>
<status status="PASS" starttime="20250723 18:50:38.109" endtime="20250723 18:50:38.110"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250723 18:50:38.110" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250723 18:50:38.110" endtime="20250723 18:50:38.110"/>
</kw>
<status status="PASS" starttime="20250723 18:50:36.502" endtime="20250723 18:50:38.110"/>
</kw>
<msg timestamp="20250723 18:50:38.110" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250723 18:50:36.502" endtime="20250723 18:50:38.111"/>
</kw>
<msg timestamp="20250723 18:50:38.111" level="INFO">${result} = 6	
</msg>
<status status="PASS" starttime="20250723 18:50:36.502" endtime="20250723 18:50:38.111"/>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<var>${result}</var>
<arg>${result}</arg>
<doc>Converts the given item to a floating point number.</doc>
<msg timestamp="20250723 18:50:38.111" level="INFO">${result} = 6.0</msg>
<status status="PASS" starttime="20250723 18:50:38.111" endtime="20250723 18:50:38.111"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${result}&gt;=${buckets}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20250723 18:50:38.111" endtime="20250723 18:50:38.112"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250723 18:50:09.076" endtime="20250723 18:50:38.112"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20250723 18:50:08.043" endtime="20250723 18:50:38.113"/>
</suite>
<suite id="s1-s3" name="Kinit" source="/opt/hadoop/smoketest/kinit.robot">
<test id="s1-s3-t1" name="Kinit" line="27">
<kw name="Kinit test user" library="commonlib">
<arg>${USER}</arg>
<arg>${USER}.keytab</arg>
<kw name="Get Security Enabled From Config" library="commonlib">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' != ''</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20250723 18:50:38.795" endtime="20250723 18:50:38.796"/>
</kw>
<kw name="Execute" library="os">
<var>${value}</var>
<arg>ozone getconf confKey ozone.security.enabled</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250723 18:50:38.799" level="INFO">Running command 'ozone getconf confKey ozone.security.enabled 2&gt;&amp;1'.</msg>
<msg timestamp="20250723 18:50:39.832" level="INFO">${rc} = 0</msg>
<msg timestamp="20250723 18:50:39.832" level="INFO">${output} = true</msg>
<status status="PASS" starttime="20250723 18:50:38.796" endtime="20250723 18:50:39.832"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250723 18:50:39.833" level="INFO">true</msg>
<status status="PASS" starttime="20250723 18:50:39.832" endtime="20250723 18:50:39.833"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250723 18:50:39.833" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250723 18:50:39.833" endtime="20250723 18:50:39.833"/>
</kw>
<status status="PASS" starttime="20250723 18:50:38.796" endtime="20250723 18:50:39.833"/>
</kw>
<msg timestamp="20250723 18:50:39.833" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250723 18:50:38.796" endtime="20250723 18:50:39.834"/>
</kw>
<msg timestamp="20250723 18:50:39.834" level="INFO">${value} = true</msg>
<status status="PASS" starttime="20250723 18:50:38.796" endtime="20250723 18:50:39.834"/>
</kw>
<if>
<branch type="IF" condition="'${value}' != 'true' and '${value}' != 'false'">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>false</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20250723 18:50:39.834" endtime="20250723 18:50:39.834"/>
</kw>
<status status="NOT RUN" starttime="20250723 18:50:39.834" endtime="20250723 18:50:39.834"/>
</branch>
<status status="PASS" starttime="20250723 18:50:39.834" endtime="20250723 18:50:39.834"/>
</if>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${SECURITY_ENABLED}</arg>
<arg>${value}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250723 18:50:39.835" level="INFO">${SECURITY_ENABLED} = true</msg>
<status status="PASS" starttime="20250723 18:50:39.834" endtime="20250723 18:50:39.835"/>
</kw>
<status status="PASS" starttime="20250723 18:50:38.795" endtime="20250723 18:50:39.835"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250723 18:50:39.835" endtime="20250723 18:50:39.835"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250723 18:50:39.839" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250723 18:50:39.843" level="INFO">${rc} = 0</msg>
<msg timestamp="20250723 18:50:39.843" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250723 18:50:39.836" endtime="20250723 18:50:39.843"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250723 18:50:39.843" level="INFO">scm</msg>
<status status="PASS" starttime="20250723 18:50:39.843" endtime="20250723 18:50:39.843"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250723 18:50:39.844" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250723 18:50:39.844" endtime="20250723 18:50:39.844"/>
</kw>
<status status="PASS" starttime="20250723 18:50:39.836" endtime="20250723 18:50:39.844"/>
</kw>
<msg timestamp="20250723 18:50:39.844" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250723 18:50:39.836" endtime="20250723 18:50:39.844"/>
</kw>
<msg timestamp="20250723 18:50:39.844" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250723 18:50:39.836" endtime="20250723 18:50:39.844"/>
</kw>
<msg timestamp="20250723 18:50:39.844" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250723 18:50:39.835" endtime="20250723 18:50:39.844"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250723 18:50:39.845" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250723 18:50:39.845" endtime="20250723 18:50:39.845"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250723 18:50:39.848" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250723 18:50:39.930" level="INFO">${rc} = 0</msg>
<msg timestamp="20250723 18:50:39.930" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250723 18:50:39.846" endtime="20250723 18:50:39.930"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250723 18:50:39.931" level="INFO"/>
<status status="PASS" starttime="20250723 18:50:39.931" endtime="20250723 18:50:39.931"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250723 18:50:39.932" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250723 18:50:39.931" endtime="20250723 18:50:39.932"/>
</kw>
<status status="PASS" starttime="20250723 18:50:39.846" endtime="20250723 18:50:39.932"/>
</kw>
<msg timestamp="20250723 18:50:39.932" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250723 18:50:39.846" endtime="20250723 18:50:39.932"/>
</kw>
<status status="PASS" starttime="20250723 18:50:39.845" endtime="20250723 18:50:39.932"/>
</kw>
<status status="PASS" starttime="20250723 18:50:39.845" endtime="20250723 18:50:39.932"/>
</kw>
<status status="PASS" starttime="20250723 18:50:38.795" endtime="20250723 18:50:39.932"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20250723 18:50:38.794" endtime="20250723 18:50:39.932"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" starttime="20250723 18:50:38.757" endtime="20250723 18:50:39.933"/>
</suite>
<suite id="s1-s4" name="Ozone-Debug-Tests" source="/opt/hadoop/smoketest/debug/ozone-debug-tests.robot">
<kw name="Write keys" type="SETUP">
<kw name="Execute" library="os">
<arg>ozone sh volume create o3://${OM_SERVICE_ID}/${VOLUME} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250723 18:50:40.702" level="INFO">Running command 'ozone sh volume create o3://omservice/cli-debug-volume4713 --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20250723 18:50:44.276" level="INFO">${rc} = 0</msg>
<msg timestamp="20250723 18:50:44.276" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250723 18:50:40.699" endtime="20250723 18:50:44.276"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250723 18:50:44.277" level="INFO"/>
<status status="PASS" starttime="20250723 18:50:44.277" endtime="20250723 18:50:44.277"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250723 18:50:44.278" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250723 18:50:44.277" endtime="20250723 18:50:44.278"/>
</kw>
<status status="PASS" starttime="20250723 18:50:40.699" endtime="20250723 18:50:44.278"/>
</kw>
<msg timestamp="20250723 18:50:44.278" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250723 18:50:40.699" endtime="20250723 18:50:44.278"/>
</kw>
<status status="PASS" starttime="20250723 18:50:40.698" endtime="20250723 18:50:44.278"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create o3://${OM_SERVICE_ID}/${VOLUME}/${BUCKET} --space-quota 1TB</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250723 18:50:44.281" level="INFO">Running command 'ozone sh bucket create o3://omservice/cli-debug-volume4713/cli-debug-bucket --space-quota 1TB 2&gt;&amp;1'.</msg>
<msg timestamp="20250723 18:50:47.498" level="INFO">${rc} = 0</msg>
<msg timestamp="20250723 18:50:47.498" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250723 18:50:44.279" endtime="20250723 18:50:47.498"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250723 18:50:47.499" level="INFO"/>
<status status="PASS" starttime="20250723 18:50:47.498" endtime="20250723 18:50:47.499"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250723 18:50:47.499" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250723 18:50:47.499" endtime="20250723 18:50:47.499"/>
</kw>
<status status="PASS" starttime="20250723 18:50:44.279" endtime="20250723 18:50:47.499"/>
</kw>
<msg timestamp="20250723 18:50:47.499" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250723 18:50:44.279" endtime="20250723 18:50:47.499"/>
</kw>
<status status="PASS" starttime="20250723 18:50:44.278" endtime="20250723 18:50:47.499"/>
</kw>
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=${TEMP_DIR}/${TESTFILE} bs=100000 count=15</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250723 18:50:47.503" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/testfile bs=100000 count=15 2&gt;&amp;1'.</msg>
<msg timestamp="20250723 18:50:47.512" level="INFO">${rc} = 0</msg>
<msg timestamp="20250723 18:50:47.512" level="INFO">${output} = 15+0 records in
15+0 records out
1500000 bytes (1.5 MB, 1.4 MiB) copied, 0.00539906 s, 278 MB/s</msg>
<status status="PASS" starttime="20250723 18:50:47.500" endtime="20250723 18:50:47.512"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250723 18:50:47.513" level="INFO">15+0 records in
15+0 records out
1500000 bytes (1.5 MB, 1.4 MiB) copied, 0.00539906 s, 278 MB/s</msg>
<status status="PASS" starttime="20250723 18:50:47.512" endtime="20250723 18:50:47.513"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250723 18:50:47.513" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250723 18:50:47.513" endtime="20250723 18:50:47.513"/>
</kw>
<status status="PASS" starttime="20250723 18:50:47.500" endtime="20250723 18:50:47.513"/>
</kw>
<msg timestamp="20250723 18:50:47.513" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250723 18:50:47.500" endtime="20250723 18:50:47.513"/>
</kw>
<status status="PASS" starttime="20250723 18:50:47.500" endtime="20250723 18:50:47.513"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put o3://${OM_SERVICE_ID}/${VOLUME}/${BUCKET}/${TESTFILE} ${TEMP_DIR}/${TESTFILE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250723 18:50:47.517" level="INFO">Running command 'ozone sh key put o3://omservice/cli-debug-volume4713/cli-debug-bucket/testfile /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20250723 18:50:52.923" level="INFO">${rc} = 0</msg>
<msg timestamp="20250723 18:50:52.923" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250723 18:50:47.514" endtime="20250723 18:50:52.923"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250723 18:50:52.924" level="INFO"/>
<status status="PASS" starttime="20250723 18:50:52.923" endtime="20250723 18:50:52.924"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250723 18:50:52.924" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250723 18:50:52.924" endtime="20250723 18:50:52.924"/>
</kw>
<status status="PASS" starttime="20250723 18:50:47.514" endtime="20250723 18:50:52.924"/>
</kw>
<msg timestamp="20250723 18:50:52.924" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250723 18:50:47.514" endtime="20250723 18:50:52.925"/>
</kw>
<status status="PASS" starttime="20250723 18:50:47.513" endtime="20250723 18:50:52.925"/>
</kw>
<status status="PASS" starttime="20250723 18:50:40.698" endtime="20250723 18:50:52.925"/>
</kw>
<test id="s1-s4-t1" name="Test ozone debug replicas verify checksums" line="39">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone debug replicas verify --checksums --block-existence --container-state o3://${OM_SERVICE_ID}/${VOLUME}/${BUCKET}/${TESTFILE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250723 18:50:52.929" level="INFO">Running command 'ozone debug replicas verify --checksums --block-existence --container-state o3://omservice/cli-debug-volume4713/cli-debug-bucket/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20250723 18:51:00.596" level="INFO">${rc} = 0</msg>
<msg timestamp="20250723 18:51:00.596" level="INFO">${output} = {
  "keys" : [ ],
  "pass" : true
}</msg>
<status status="PASS" starttime="20250723 18:50:52.927" endtime="20250723 18:51:00.596"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250723 18:51:00.597" level="INFO">{
  "keys" : [ ],
  "pass" : true
}</msg>
<status status="PASS" starttime="20250723 18:51:00.596" endtime="20250723 18:51:00.597"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250723 18:51:00.598" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250723 18:51:00.597" endtime="20250723 18:51:00.598"/>
</kw>
<status status="PASS" starttime="20250723 18:50:52.926" endtime="20250723 18:51:00.598"/>
</kw>
<msg timestamp="20250723 18:51:00.598" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250723 18:50:52.926" endtime="20250723 18:51:00.598"/>
</kw>
<msg timestamp="20250723 18:51:00.598" level="INFO">${output} = {
  "keys" : [ ],
  "pass" : true
}</msg>
<status status="PASS" starttime="20250723 18:50:52.925" endtime="20250723 18:51:00.598"/>
</kw>
<kw name="Parse replicas verify JSON output" library="ozone-debug-keywords">
<var>${json}</var>
<arg>${output}</arg>
<kw name="Evaluate" library="BuiltIn">
<var>${json}</var>
<arg>json.loads('''${output}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20250723 18:51:00.599" level="INFO">${json} = {'keys': [], 'pass': True}</msg>
<status status="PASS" starttime="20250723 18:51:00.599" endtime="20250723 18:51:00.599"/>
</kw>
<msg timestamp="20250723 18:51:00.599" level="INFO">${json} = {'keys': [], 'pass': True}</msg>
<status status="PASS" starttime="20250723 18:51:00.598" endtime="20250723 18:51:00.599"/>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${json}[keys]</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20250723 18:51:00.599" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20250723 18:51:00.599" endtime="20250723 18:51:00.600"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${json}[pass]</arg>
<arg>${True}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20250723 18:51:00.600" endtime="20250723 18:51:00.600"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250723 18:50:52.925" endtime="20250723 18:51:00.600"/>
</test>
<test id="s1-s4-t2" name="Test ozone debug version" line="47">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone debug version</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250723 18:51:00.604" level="INFO">Running command 'ozone debug version 2&gt;&amp;1'.</msg>
<msg timestamp="20250723 18:51:02.267" level="INFO">${rc} = 0</msg>
<msg timestamp="20250723 18:51:02.267" level="INFO">${output} = {
  "components" : {
    "client" : {
      "componentVersion" : {
        "name" : "BUCKET_LAYOUT_SUPPORT",
        "protoValue" : 3
      }
    },
    "datanode" : {
      "componentVersion" : {
   ...</msg>
<status status="PASS" starttime="20250723 18:51:00.602" endtime="20250723 18:51:02.267"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250723 18:51:02.268" level="INFO">{
  "components" : {
    "client" : {
      "componentVersion" : {
        "name" : "BUCKET_LAYOUT_SUPPORT",
        "protoValue" : 3
      }
    },
    "datanode" : {
      "componentVersion" : {
        "name" : "COMBINED_PUTBLOCK_WRITECHUNK_RPC",
        "protoValue" : 2
      }
    },
    "om" : {
      "componentVersion" : {
        "name" : "S3_LIST_MULTIPART_UPLOADS_PAGINATION",
        "protoValue" : 11
      }
    }
  },
  "ozone" : {
    "revision" : "1c2c7f340cc4e595b3dbc94c5ece71d44e53a638",
    "url" : "https://github.com/apache/ozone",
    "version" : "2.1.0-SNAPSHOT"
  }
}</msg>
<status status="PASS" starttime="20250723 18:51:02.267" endtime="20250723 18:51:02.268"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250723 18:51:02.268" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250723 18:51:02.268" endtime="20250723 18:51:02.269"/>
</kw>
<status status="PASS" starttime="20250723 18:51:00.601" endtime="20250723 18:51:02.269"/>
</kw>
<msg timestamp="20250723 18:51:02.269" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250723 18:51:00.601" endtime="20250723 18:51:02.269"/>
</kw>
<msg timestamp="20250723 18:51:02.269" level="INFO">${output} = {
  "components" : {
    "client" : {
      "componentVersion" : {
        "name" : "BUCKET_LAYOUT_SUPPORT",
        "protoValue" : 3
      }
    },
    "datanode" : {
      "componentVersion" : {
   ...</msg>
<status status="PASS" starttime="20250723 18:51:00.601" endtime="20250723 18:51:02.269"/>
</kw>
<kw name="Execute" library="os">
<arg>echo '${output}' | jq -r '.' # validate JSON</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250723 18:51:02.272" level="INFO">Running command 'echo '{
  "components" : {
    "client" : {
      "componentVersion" : {
        "name" : "BUCKET_LAYOUT_SUPPORT",
        "protoValue" : 3
      }
    },
    "datanode" : {
      "componentVersion" : {
        "name" : "COMBINED_PUTBLOCK_WRITECHUNK_RPC",
        "protoValue" : 2
      }
    },
    "om" : {
      "componentVersion" : {
        "name" : "S3_LIST_MULTIPART_UPLOADS_PAGINATION",
        "protoValue" : 11
      }
    }
  },
  "ozone" : {
    "revision" : "1c2c7f340cc4e595b3dbc94c5ece71d44e53a638",
    "url" : "https://github.com/apache/ozone",
    "version" : "2.1.0-SNAPSHOT"
  }
}' | jq -r '.' # validate JSON 2&gt;&amp;1'.</msg>
<msg timestamp="20250723 18:51:02.278" level="INFO">${rc} = 0</msg>
<msg timestamp="20250723 18:51:02.278" level="INFO">${output} = {
  "components": {
    "client": {
      "componentVersion": {
        "name": "BUCKET_LAYOUT_SUPPORT",
        "protoValue": 3
      }
    },
    "datanode": {
      "componentVersion": {
        "n...</msg>
<status status="PASS" starttime="20250723 18:51:02.270" endtime="20250723 18:51:02.278"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250723 18:51:02.278" level="INFO">{
  "components": {
    "client": {
      "componentVersion": {
        "name": "BUCKET_LAYOUT_SUPPORT",
        "protoValue": 3
      }
    },
    "datanode": {
      "componentVersion": {
        "name": "COMBINED_PUTBLOCK_WRITECHUNK_RPC",
        "protoValue": 2
      }
    },
    "om": {
      "componentVersion": {
        "name": "S3_LIST_MULTIPART_UPLOADS_PAGINATION",
        "protoValue": 11
      }
    }
  },
  "ozone": {
    "revision": "1c2c7f340cc4e595b3dbc94c5ece71d44e53a638",
    "url": "https://github.com/apache/ozone",
    "version": "2.1.0-SNAPSHOT"
  }
}</msg>
<status status="PASS" starttime="20250723 18:51:02.278" endtime="20250723 18:51:02.278"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250723 18:51:02.279" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250723 18:51:02.279" endtime="20250723 18:51:02.279"/>
</kw>
<status status="PASS" starttime="20250723 18:51:02.270" endtime="20250723 18:51:02.279"/>
</kw>
<msg timestamp="20250723 18:51:02.279" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250723 18:51:02.269" endtime="20250723 18:51:02.279"/>
</kw>
<status status="PASS" starttime="20250723 18:51:02.269" endtime="20250723 18:51:02.279"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250723 18:51:00.601" endtime="20250723 18:51:02.279"/>
</test>
<doc>Test ozone debug CLI</doc>
<status status="PASS" starttime="20250723 18:50:40.659" endtime="20250723 18:51:02.280"/>
</suite>
<suite id="s1-s5" name="Corrupt-Block-Checksum" source="/opt/hadoop/smoketest/debug/corrupt-block-checksum.robot">
<test id="s1-s5-t1" name="Test checksums with a corrupt block replica" line="33">
<kw name="Execute replicas verify checksums debug tool" library="ozone-debug-keywords">
<var>${output}</var>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone debug replicas verify --checksums o3://${OM_SERVICE_ID}/${VOLUME}/${BUCKET}/${TESTFILE} --all-results</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250723 18:51:08.937" level="INFO">Running command 'ozone debug replicas verify --checksums o3://omservice/cli-debug-volume4713/cli-debug-bucket/testfile --all-results 2&gt;&amp;1'.</msg>
<msg timestamp="20250723 18:51:17.479" level="INFO">${rc} = 0</msg>
<msg timestamp="20250723 18:51:17.479" level="INFO">${output} = {
  "keys" : [ {
    "volumeName" : "cli-debug-volume4713",
    "bucketName" : "cli-debug-bucket",
    "name" : "testfile",
    "blocks" : [ {
      "containerID" : 1,
      "blockID" : 11581689692160...</msg>
<status status="PASS" starttime="20250723 18:51:08.935" endtime="20250723 18:51:17.479"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250723 18:51:17.480" level="INFO">{
  "keys" : [ {
    "volumeName" : "cli-debug-volume4713",
    "bucketName" : "cli-debug-bucket",
    "name" : "testfile",
    "blocks" : [ {
      "containerID" : 1,
      "blockID" : 115816896921600101,
      "replicas" : [ {
        "datanode" : {
          "uuid" : "59e1eabb-40ea-465b-b43a-5a9e7f8d0134",
          "hostname" : "ozonesecure-ha-datanode4-1.ozonesecure-ha_ozone_net"
        },
        "checks" : [ {
          "type" : "checksum",
          "completed" : true,
          "pass" : false,
          "failures" : [ {
            "message" : "Checksum mismatched: this.checksums(0) != that.checksums(0), thisStartIndex=0, this=ChecksumData{CRC32, bytesPerChecksum=16384, checksums=[99 3B B8 62, 2F ED E9 0B, 5F 3F 21 0E, C8 B8 76 89, 3C 39 9D 1D, 98 06 F0 E7, 52 FB 87 AE, EA 74 FD 55, 3C 2D 08 4F, DD 0E FD 5A, 5D 0E B4 B6, B4 1D 19 7D, 6B A7 C7 39, 3D D7 C6 5C, 94 E1 81 A7, 7F 6C D7 9C, 17 14 90 D8, A6 41 7F 82, C8 43 D9 AB, 0E 17 9C 09, ED 12 0D E6, 5C AF 5B F8, 5A DF 33 AE, 20 4E 73 67, 4F FF 70 FE, FB 00 BE 7C, 3B 48 95 DD, 4C 72 74 A4, 9C 00 C6 30, D7 F7 00 5C, 1D 3D 34 83, 18 9C 31 E8, 12 0C EF 1F, 2F 65 95 1D, 2E 08 1D 42, A3 A7 02 08, 0B 6D 96 E4, 7F D7 CE A1, 89 08 11 78, 69 04 8B B9, 35 2F 02 CF, E7 2B DC 49, BD EE D1 27, C3 BD 37 3E, 55 29 EE 6D, DE 5B A5 83, 3D D4 31 1C, 51 74 BE 31, 6E EF 3F 0D, FF 66 D8 61, 96 1C D1 1E, 03 5A F5 23, 7A 68 FC 67, C8 7F 00 67, 82 D7 26 36, 50 72 48 EB, DE D9 BA E7, 36 B8 AA 08, A3 19 A3 46, 7D BB A4 45, 59 D0 C0 41, 24 76 0A 35, F9 37 A4 20, 89 F3 99 82, C9 0C 9C 5E, CD 87 2B 4D, 4A 3F 11 D4, CB 9C 05 B6, E6 1B 23 DA, E8 79 13 FE, 4E E5 07 5B, 29 D1 C6 AB, CF 5D 31 AA, 27 B0 F6 E8, 43 A2 94 1C, 91 C5 17 9C, E3 D4 86 6F, 09 9E FD 24, 39 D0 6C 25, 28 FC CE 36, 40 25 A0 51, 78 85 B8 D2, 8F E1 AF AC, 5A B7 D7 D9, CA 2F 91 EF, 15 A6 53 9C, 8A C1 40 EF, B7 B7 5E E9, CE 0A DC C8, AB 4D B3 5C, 27 1B 38 94, C1 BE F5 2E]}, that=ChecksumData{CRC32, bytesPerChecksum=16384, checksums=[39 75 58 AC]}"
          } ]
        } ],
        "replicaIndex" : 0
      }, {
        "datanode" : {
          "uuid" : "ffeba4ba-4f12-4790-b44a-e494841424fe",
          "hostname" : "ozonesecure-ha-datanode5-1.ozonesecure-ha_ozone_net"
        },
        "checks" : [ {
          "type" : "checksum",
          "completed" : true,
          "pass" : true,
          "failures" : [ ]
        } ],
        "replicaIndex" : 0
      }, {
        "datanode" : {
          "uuid" : "be74795d-2fba-49cc-a991-34c798f5a78b",
          "hostname" : "ozonesecure-ha-datanode2-1.ozonesecure-ha_ozone_net"
        },
        "checks" : [ {
          "type" : "checksum",
          "completed" : true,
          "pass" : true,
          "failures" : [ ]
        } ],
        "replicaIndex" : 0
      } ]
    } ],
    "pass" : false
  } ],
  "pass" : false
}</msg>
<status status="PASS" starttime="20250723 18:51:17.480" endtime="20250723 18:51:17.480"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250723 18:51:17.481" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250723 18:51:17.480" endtime="20250723 18:51:17.481"/>
</kw>
<status status="PASS" starttime="20250723 18:51:08.934" endtime="20250723 18:51:17.481"/>
</kw>
<msg timestamp="20250723 18:51:17.481" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250723 18:51:08.934" endtime="20250723 18:51:17.481"/>
</kw>
<msg timestamp="20250723 18:51:17.481" level="INFO">${output} = {
  "keys" : [ {
    "volumeName" : "cli-debug-volume4713",
    "bucketName" : "cli-debug-bucket",
    "name" : "testfile",
    "blocks" : [ {
      "containerID" : 1,
      "blockID" : 11581689692160...</msg>
<status status="PASS" starttime="20250723 18:51:08.934" endtime="20250723 18:51:17.481"/>
</kw>
<msg timestamp="20250723 18:51:17.482" level="INFO">${output} = {
  "keys" : [ {
    "volumeName" : "cli-debug-volume4713",
    "bucketName" : "cli-debug-bucket",
    "name" : "testfile",
    "blocks" : [ {
      "containerID" : 1,
      "blockID" : 11581689692160...</msg>
<status status="PASS" starttime="20250723 18:51:08.933" endtime="20250723 18:51:17.482"/>
</kw>
<kw name="Parse replicas verify JSON output" library="ozone-debug-keywords">
<var>${json}</var>
<arg>${output}</arg>
<kw name="Evaluate" library="BuiltIn">
<var>${json}</var>
<arg>json.loads('''${output}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20250723 18:51:17.483" level="INFO">${json} = {'keys': [{'volumeName': 'cli-debug-volume4713', 'bucketName': 'cli-debug-bucket', 'name': 'testfile', 'blocks': [{'containerID': 1, 'blockID': 115816896921600101, 'replicas': [{'datanode': {'uuid': '...</msg>
<status status="PASS" starttime="20250723 18:51:17.482" endtime="20250723 18:51:17.483"/>
</kw>
<msg timestamp="20250723 18:51:17.483" level="INFO">${json} = {'keys': [{'volumeName': 'cli-debug-volume4713', 'bucketName': 'cli-debug-bucket', 'name': 'testfile', 'blocks': [{'containerID': 1, 'blockID': 115816896921600101, 'replicas': [{'datanode': {'uuid': '...</msg>
<status status="PASS" starttime="20250723 18:51:17.482" endtime="20250723 18:51:17.483"/>
</kw>
<kw name="Check to Verify Replicas" library="ozone-debug-keywords">
<arg>${json}</arg>
<arg>${CHECK_TYPE}</arg>
<arg>${CORRUPT_DATANODE}</arg>
<arg>Checksum mismatched</arg>
<kw name="Get From Dictionary" library="Collections">
<var>${replicas}</var>
<arg>${json['keys'][0]['blocks'][0]}</arg>
<arg>replicas</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20250723 18:51:17.484" level="INFO">${replicas} = [{'datanode': {'uuid': '59e1eabb-40ea-465b-b43a-5a9e7f8d0134', 'hostname': 'ozonesecure-ha-datanode4-1.ozonesecure-ha_ozone_net'}, 'checks': [{'type': 'checksum', 'completed': True, 'pass': False, 'fa...</msg>
<status status="PASS" starttime="20250723 18:51:17.484" endtime="20250723 18:51:17.485"/>
</kw>
<for flavor="IN">
<var>${replica}</var>
<value>@{replicas}</value>
<iter>
<var name="${replica}">{'datanode': {'uuid': '59e1eabb-40ea-465b-b43a-5a9e7f8d0134', 'hostname': 'ozonesecure-ha-datanode4-1.ozonesecure-ha_ozone_net'}, 'checks': [{'type': 'checksum', 'completed': True, 'pass': False, 'fai...</var>
<kw name="Get From Dictionary" library="Collections">
<var>${datanode}</var>
<arg>${replica}</arg>
<arg>datanode</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20250723 18:51:17.485" level="INFO">${datanode} = {'uuid': '59e1eabb-40ea-465b-b43a-5a9e7f8d0134', 'hostname': 'ozonesecure-ha-datanode4-1.ozonesecure-ha_ozone_net'}</msg>
<status status="PASS" starttime="20250723 18:51:17.485" endtime="20250723 18:51:17.485"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${hostname}</var>
<arg>${datanode}</arg>
<arg>hostname</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20250723 18:51:17.486" level="INFO">${hostname} = ozonesecure-ha-datanode4-1.ozonesecure-ha_ozone_net</msg>
<status status="PASS" starttime="20250723 18:51:17.485" endtime="20250723 18:51:17.486"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${hostname}' == '${faulty_datanode}'</arg>
<arg>Check Replica Failed</arg>
<arg>${replica}</arg>
<arg>${check_type}</arg>
<arg>${expected_message}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Check Replica Failed" library="ozone-debug-keywords">
<arg>${replica}</arg>
<arg>${check_type}</arg>
<arg>${expected_message}</arg>
<kw name="Get From Dictionary" library="Collections">
<var>${checks}</var>
<arg>${replica}</arg>
<arg>checks</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20250723 18:51:17.487" level="INFO">${checks} = [{'type': 'checksum', 'completed': True, 'pass': False, 'failures': [{'message': 'Checksum mismatched: this.checksums(0) != that.checksums(0), thisStartIndex=0, this=ChecksumData{CRC32, bytesPerChecks...</msg>
<status status="PASS" starttime="20250723 18:51:17.487" endtime="20250723 18:51:17.487"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${check}</var>
<arg>${checks}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20250723 18:51:17.487" level="INFO">${check} = {'type': 'checksum', 'completed': True, 'pass': False, 'failures': [{'message': 'Checksum mismatched: this.checksums(0) != that.checksums(0), thisStartIndex=0, this=ChecksumData{CRC32, bytesPerChecksu...</msg>
<status status="PASS" starttime="20250723 18:51:17.487" endtime="20250723 18:51:17.487"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${check['type']}</arg>
<arg>${check_type}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250723 18:51:17.487" endtime="20250723 18:51:17.488"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${check['pass']}</arg>
<arg>${False}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250723 18:51:17.488" endtime="20250723 18:51:17.489"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${check['failures'][0]['message']}</arg>
<arg>${expected_message}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250723 18:51:17.489" endtime="20250723 18:51:17.490"/>
</kw>
<status status="PASS" starttime="20250723 18:51:17.486" endtime="20250723 18:51:17.490"/>
</kw>
<status status="PASS" starttime="20250723 18:51:17.486" endtime="20250723 18:51:17.490"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${hostname}' != '${faulty_datanode}'</arg>
<arg>Check Replica Passed</arg>
<arg>${replica}</arg>
<arg>${check_type}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250723 18:51:17.490" endtime="20250723 18:51:17.490"/>
</kw>
<status status="PASS" starttime="20250723 18:51:17.485" endtime="20250723 18:51:17.490"/>
</iter>
<iter>
<var name="${replica}">{'datanode': {'uuid': 'ffeba4ba-4f12-4790-b44a-e494841424fe', 'hostname': 'ozonesecure-ha-datanode5-1.ozonesecure-ha_ozone_net'}, 'checks': [{'type': 'checksum', 'completed': True, 'pass': True, 'fail...</var>
<kw name="Get From Dictionary" library="Collections">
<var>${datanode}</var>
<arg>${replica}</arg>
<arg>datanode</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20250723 18:51:17.490" level="INFO">${datanode} = {'uuid': 'ffeba4ba-4f12-4790-b44a-e494841424fe', 'hostname': 'ozonesecure-ha-datanode5-1.ozonesecure-ha_ozone_net'}</msg>
<status status="PASS" starttime="20250723 18:51:17.490" endtime="20250723 18:51:17.490"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${hostname}</var>
<arg>${datanode}</arg>
<arg>hostname</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20250723 18:51:17.491" level="INFO">${hostname} = ozonesecure-ha-datanode5-1.ozonesecure-ha_ozone_net</msg>
<status status="PASS" starttime="20250723 18:51:17.490" endtime="20250723 18:51:17.491"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${hostname}' == '${faulty_datanode}'</arg>
<arg>Check Replica Failed</arg>
<arg>${replica}</arg>
<arg>${check_type}</arg>
<arg>${expected_message}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250723 18:51:17.491" endtime="20250723 18:51:17.491"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${hostname}' != '${faulty_datanode}'</arg>
<arg>Check Replica Passed</arg>
<arg>${replica}</arg>
<arg>${check_type}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Check Replica Passed" library="ozone-debug-keywords">
<arg>${replica}</arg>
<arg>${check_type}</arg>
<kw name="Get From Dictionary" library="Collections">
<var>${checks}</var>
<arg>${replica}</arg>
<arg>checks</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20250723 18:51:17.492" level="INFO">${checks} = [{'type': 'checksum', 'completed': True, 'pass': True, 'failures': []}]</msg>
<status status="PASS" starttime="20250723 18:51:17.492" endtime="20250723 18:51:17.492"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${check}</var>
<arg>${checks}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20250723 18:51:17.493" level="INFO">${check} = {'type': 'checksum', 'completed': True, 'pass': True, 'failures': []}</msg>
<status status="PASS" starttime="20250723 18:51:17.492" endtime="20250723 18:51:17.493"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${check['type']}</arg>
<arg>${check_type}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250723 18:51:17.493" endtime="20250723 18:51:17.493"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${check['completed']}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20250723 18:51:17.493" endtime="20250723 18:51:17.494"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${check['pass']}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20250723 18:51:17.494" endtime="20250723 18:51:17.495"/>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${check['failures']}</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20250723 18:51:17.495" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20250723 18:51:17.495" endtime="20250723 18:51:17.495"/>
</kw>
<status status="PASS" starttime="20250723 18:51:17.492" endtime="20250723 18:51:17.495"/>
</kw>
<status status="PASS" starttime="20250723 18:51:17.491" endtime="20250723 18:51:17.495"/>
</kw>
<status status="PASS" starttime="20250723 18:51:17.490" endtime="20250723 18:51:17.495"/>
</iter>
<iter>
<var name="${replica}">{'datanode': {'uuid': 'be74795d-2fba-49cc-a991-34c798f5a78b', 'hostname': 'ozonesecure-ha-datanode2-1.ozonesecure-ha_ozone_net'}, 'checks': [{'type': 'checksum', 'completed': True, 'pass': True, 'fail...</var>
<kw name="Get From Dictionary" library="Collections">
<var>${datanode}</var>
<arg>${replica}</arg>
<arg>datanode</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20250723 18:51:17.496" level="INFO">${datanode} = {'uuid': 'be74795d-2fba-49cc-a991-34c798f5a78b', 'hostname': 'ozonesecure-ha-datanode2-1.ozonesecure-ha_ozone_net'}</msg>
<status status="PASS" starttime="20250723 18:51:17.496" endtime="20250723 18:51:17.496"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${hostname}</var>
<arg>${datanode}</arg>
<arg>hostname</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20250723 18:51:17.496" level="INFO">${hostname} = ozonesecure-ha-datanode2-1.ozonesecure-ha_ozone_net</msg>
<status status="PASS" starttime="20250723 18:51:17.496" endtime="20250723 18:51:17.496"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${hostname}' == '${faulty_datanode}'</arg>
<arg>Check Replica Failed</arg>
<arg>${replica}</arg>
<arg>${check_type}</arg>
<arg>${expected_message}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250723 18:51:17.496" endtime="20250723 18:51:17.497"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${hostname}' != '${faulty_datanode}'</arg>
<arg>Check Replica Passed</arg>
<arg>${replica}</arg>
<arg>${check_type}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Check Replica Passed" library="ozone-debug-keywords">
<arg>${replica}</arg>
<arg>${check_type}</arg>
<kw name="Get From Dictionary" library="Collections">
<var>${checks}</var>
<arg>${replica}</arg>
<arg>checks</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20250723 18:51:17.497" level="INFO">${checks} = [{'type': 'checksum', 'completed': True, 'pass': True, 'failures': []}]</msg>
<status status="PASS" starttime="20250723 18:51:17.497" endtime="20250723 18:51:17.497"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${check}</var>
<arg>${checks}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20250723 18:51:17.498" level="INFO">${check} = {'type': 'checksum', 'completed': True, 'pass': True, 'failures': []}</msg>
<status status="PASS" starttime="20250723 18:51:17.498" endtime="20250723 18:51:17.498"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${check['type']}</arg>
<arg>${check_type}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250723 18:51:17.498" endtime="20250723 18:51:17.499"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${check['completed']}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20250723 18:51:17.499" endtime="20250723 18:51:17.499"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${check['pass']}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20250723 18:51:17.499" endtime="20250723 18:51:17.500"/>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${check['failures']}</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20250723 18:51:17.500" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20250723 18:51:17.500" endtime="20250723 18:51:17.501"/>
</kw>
<status status="PASS" starttime="20250723 18:51:17.497" endtime="20250723 18:51:17.501"/>
</kw>
<status status="PASS" starttime="20250723 18:51:17.497" endtime="20250723 18:51:17.501"/>
</kw>
<status status="PASS" starttime="20250723 18:51:17.495" endtime="20250723 18:51:17.501"/>
</iter>
<status status="PASS" starttime="20250723 18:51:17.485" endtime="20250723 18:51:17.501"/>
</for>
<status status="PASS" starttime="20250723 18:51:17.483" endtime="20250723 18:51:17.501"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250723 18:51:08.933" endtime="20250723 18:51:17.501"/>
</test>
<doc>Test checksums on a corrupt block replica</doc>
<status status="PASS" starttime="20250723 18:51:08.895" endtime="20250723 18:51:17.502"/>
</suite>
<suite id="s1-s6" name="Stale-Datanode-Checksum" source="/opt/hadoop/smoketest/debug/stale-datanode-checksum.robot">
<test id="s1-s6-t1" name="Test checksums with a stale datanode" line="32">
<kw name="Execute replicas verify checksums debug tool" library="ozone-debug-keywords">
<var>${output}</var>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone debug replicas verify --checksums o3://${OM_SERVICE_ID}/${VOLUME}/${BUCKET}/${TESTFILE} --all-results</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250723 18:51:48.341" level="INFO">Running command 'ozone debug replicas verify --checksums o3://omservice/cli-debug-volume4713/cli-debug-bucket/testfile --all-results 2&gt;&amp;1'.</msg>
<msg timestamp="20250723 18:52:08.887" level="INFO">${rc} = 0</msg>
<msg timestamp="20250723 18:52:08.887" level="INFO">${output} = {
  "keys" : [ {
    "volumeName" : "cli-debug-volume4713",
    "bucketName" : "cli-debug-bucket",
    "name" : "testfile",
    "blocks" : [ {
      "containerID" : 1,
      "blockID" : 11581689692160...</msg>
<status status="PASS" starttime="20250723 18:51:48.338" endtime="20250723 18:52:08.887"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250723 18:52:08.888" level="INFO">{
  "keys" : [ {
    "volumeName" : "cli-debug-volume4713",
    "bucketName" : "cli-debug-bucket",
    "name" : "testfile",
    "blocks" : [ {
      "containerID" : 1,
      "blockID" : 115816896921600101,
      "replicas" : [ {
        "datanode" : {
          "uuid" : "59e1eabb-40ea-465b-b43a-5a9e7f8d0134",
          "hostname" : "ozonesecure-ha-datanode4-1.ozonesecure-ha_ozone_net"
        },
        "checks" : [ {
          "type" : "checksum",
          "completed" : false,
          "pass" : false,
          "failures" : [ {
            "message" : "org.apache.ratis.thirdparty.io.grpc.StatusRuntimeException: UNAVAILABLE: io exception"
          } ]
        } ],
        "replicaIndex" : 0
      }, {
        "datanode" : {
          "uuid" : "ffeba4ba-4f12-4790-b44a-e494841424fe",
          "hostname" : "ozonesecure-ha-datanode5-1.ozonesecure-ha_ozone_net"
        },
        "checks" : [ {
          "type" : "checksum",
          "completed" : true,
          "pass" : true,
          "failures" : [ ]
        } ],
        "replicaIndex" : 0
      }, {
        "datanode" : {
          "uuid" : "be74795d-2fba-49cc-a991-34c798f5a78b",
          "hostname" : "ozonesecure-ha-datanode2-1.ozonesecure-ha_ozone_net"
        },
        "checks" : [ {
          "type" : "checksum",
          "completed" : true,
          "pass" : true,
          "failures" : [ ]
        } ],
        "replicaIndex" : 0
      } ]
    } ],
    "pass" : false
  } ],
  "pass" : false
}</msg>
<status status="PASS" starttime="20250723 18:52:08.887" endtime="20250723 18:52:08.888"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250723 18:52:08.888" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250723 18:52:08.888" endtime="20250723 18:52:08.888"/>
</kw>
<status status="PASS" starttime="20250723 18:51:48.338" endtime="20250723 18:52:08.889"/>
</kw>
<msg timestamp="20250723 18:52:08.889" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250723 18:51:48.338" endtime="20250723 18:52:08.889"/>
</kw>
<msg timestamp="20250723 18:52:08.889" level="INFO">${output} = {
  "keys" : [ {
    "volumeName" : "cli-debug-volume4713",
    "bucketName" : "cli-debug-bucket",
    "name" : "testfile",
    "blocks" : [ {
      "containerID" : 1,
      "blockID" : 11581689692160...</msg>
<status status="PASS" starttime="20250723 18:51:48.338" endtime="20250723 18:52:08.889"/>
</kw>
<msg timestamp="20250723 18:52:08.889" level="INFO">${output} = {
  "keys" : [ {
    "volumeName" : "cli-debug-volume4713",
    "bucketName" : "cli-debug-bucket",
    "name" : "testfile",
    "blocks" : [ {
      "containerID" : 1,
      "blockID" : 11581689692160...</msg>
<status status="PASS" starttime="20250723 18:51:48.337" endtime="20250723 18:52:08.889"/>
</kw>
<kw name="Parse replicas verify JSON output" library="ozone-debug-keywords">
<var>${json}</var>
<arg>${output}</arg>
<kw name="Evaluate" library="BuiltIn">
<var>${json}</var>
<arg>json.loads('''${output}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20250723 18:52:08.890" level="INFO">${json} = {'keys': [{'volumeName': 'cli-debug-volume4713', 'bucketName': 'cli-debug-bucket', 'name': 'testfile', 'blocks': [{'containerID': 1, 'blockID': 115816896921600101, 'replicas': [{'datanode': {'uuid': '...</msg>
<status status="PASS" starttime="20250723 18:52:08.890" endtime="20250723 18:52:08.890"/>
</kw>
<msg timestamp="20250723 18:52:08.890" level="INFO">${json} = {'keys': [{'volumeName': 'cli-debug-volume4713', 'bucketName': 'cli-debug-bucket', 'name': 'testfile', 'blocks': [{'containerID': 1, 'blockID': 115816896921600101, 'replicas': [{'datanode': {'uuid': '...</msg>
<status status="PASS" starttime="20250723 18:52:08.889" endtime="20250723 18:52:08.890"/>
</kw>
<kw name="Check to Verify Replicas" library="ozone-debug-keywords">
<arg>${json}</arg>
<arg>${CHECK_TYPE}</arg>
<arg>${STALE_DATANODE}</arg>
<arg>UNAVAILABLE</arg>
<kw name="Get From Dictionary" library="Collections">
<var>${replicas}</var>
<arg>${json['keys'][0]['blocks'][0]}</arg>
<arg>replicas</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20250723 18:52:08.892" level="INFO">${replicas} = [{'datanode': {'uuid': '59e1eabb-40ea-465b-b43a-5a9e7f8d0134', 'hostname': 'ozonesecure-ha-datanode4-1.ozonesecure-ha_ozone_net'}, 'checks': [{'type': 'checksum', 'completed': False, 'pass': False, 'f...</msg>
<status status="PASS" starttime="20250723 18:52:08.891" endtime="20250723 18:52:08.892"/>
</kw>
<for flavor="IN">
<var>${replica}</var>
<value>@{replicas}</value>
<iter>
<var name="${replica}">{'datanode': {'uuid': '59e1eabb-40ea-465b-b43a-5a9e7f8d0134', 'hostname': 'ozonesecure-ha-datanode4-1.ozonesecure-ha_ozone_net'}, 'checks': [{'type': 'checksum', 'completed': False, 'pass': False, 'fa...</var>
<kw name="Get From Dictionary" library="Collections">
<var>${datanode}</var>
<arg>${replica}</arg>
<arg>datanode</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20250723 18:52:08.892" level="INFO">${datanode} = {'uuid': '59e1eabb-40ea-465b-b43a-5a9e7f8d0134', 'hostname': 'ozonesecure-ha-datanode4-1.ozonesecure-ha_ozone_net'}</msg>
<status status="PASS" starttime="20250723 18:52:08.892" endtime="20250723 18:52:08.892"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${hostname}</var>
<arg>${datanode}</arg>
<arg>hostname</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20250723 18:52:08.893" level="INFO">${hostname} = ozonesecure-ha-datanode4-1.ozonesecure-ha_ozone_net</msg>
<status status="PASS" starttime="20250723 18:52:08.892" endtime="20250723 18:52:08.893"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${hostname}' == '${faulty_datanode}'</arg>
<arg>Check Replica Failed</arg>
<arg>${replica}</arg>
<arg>${check_type}</arg>
<arg>${expected_message}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Check Replica Failed" library="ozone-debug-keywords">
<arg>${replica}</arg>
<arg>${check_type}</arg>
<arg>${expected_message}</arg>
<kw name="Get From Dictionary" library="Collections">
<var>${checks}</var>
<arg>${replica}</arg>
<arg>checks</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20250723 18:52:08.894" level="INFO">${checks} = [{'type': 'checksum', 'completed': False, 'pass': False, 'failures': [{'message': 'org.apache.ratis.thirdparty.io.grpc.StatusRuntimeException: UNAVAILABLE: io exception'}]}]</msg>
<status status="PASS" starttime="20250723 18:52:08.894" endtime="20250723 18:52:08.894"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${check}</var>
<arg>${checks}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20250723 18:52:08.894" level="INFO">${check} = {'type': 'checksum', 'completed': False, 'pass': False, 'failures': [{'message': 'org.apache.ratis.thirdparty.io.grpc.StatusRuntimeException: UNAVAILABLE: io exception'}]}</msg>
<status status="PASS" starttime="20250723 18:52:08.894" endtime="20250723 18:52:08.894"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${check['type']}</arg>
<arg>${check_type}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250723 18:52:08.894" endtime="20250723 18:52:08.895"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${check['pass']}</arg>
<arg>${False}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250723 18:52:08.895" endtime="20250723 18:52:08.896"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${check['failures'][0]['message']}</arg>
<arg>${expected_message}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250723 18:52:08.896" endtime="20250723 18:52:08.896"/>
</kw>
<status status="PASS" starttime="20250723 18:52:08.893" endtime="20250723 18:52:08.896"/>
</kw>
<status status="PASS" starttime="20250723 18:52:08.893" endtime="20250723 18:52:08.897"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${hostname}' != '${faulty_datanode}'</arg>
<arg>Check Replica Passed</arg>
<arg>${replica}</arg>
<arg>${check_type}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250723 18:52:08.897" endtime="20250723 18:52:08.897"/>
</kw>
<status status="PASS" starttime="20250723 18:52:08.892" endtime="20250723 18:52:08.897"/>
</iter>
<iter>
<var name="${replica}">{'datanode': {'uuid': 'ffeba4ba-4f12-4790-b44a-e494841424fe', 'hostname': 'ozonesecure-ha-datanode5-1.ozonesecure-ha_ozone_net'}, 'checks': [{'type': 'checksum', 'completed': True, 'pass': True, 'fail...</var>
<kw name="Get From Dictionary" library="Collections">
<var>${datanode}</var>
<arg>${replica}</arg>
<arg>datanode</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20250723 18:52:08.898" level="INFO">${datanode} = {'uuid': 'ffeba4ba-4f12-4790-b44a-e494841424fe', 'hostname': 'ozonesecure-ha-datanode5-1.ozonesecure-ha_ozone_net'}</msg>
<status status="PASS" starttime="20250723 18:52:08.897" endtime="20250723 18:52:08.898"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${hostname}</var>
<arg>${datanode}</arg>
<arg>hostname</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20250723 18:52:08.898" level="INFO">${hostname} = ozonesecure-ha-datanode5-1.ozonesecure-ha_ozone_net</msg>
<status status="PASS" starttime="20250723 18:52:08.898" endtime="20250723 18:52:08.898"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${hostname}' == '${faulty_datanode}'</arg>
<arg>Check Replica Failed</arg>
<arg>${replica}</arg>
<arg>${check_type}</arg>
<arg>${expected_message}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250723 18:52:08.898" endtime="20250723 18:52:08.898"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${hostname}' != '${faulty_datanode}'</arg>
<arg>Check Replica Passed</arg>
<arg>${replica}</arg>
<arg>${check_type}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Check Replica Passed" library="ozone-debug-keywords">
<arg>${replica}</arg>
<arg>${check_type}</arg>
<kw name="Get From Dictionary" library="Collections">
<var>${checks}</var>
<arg>${replica}</arg>
<arg>checks</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20250723 18:52:08.899" level="INFO">${checks} = [{'type': 'checksum', 'completed': True, 'pass': True, 'failures': []}]</msg>
<status status="PASS" starttime="20250723 18:52:08.899" endtime="20250723 18:52:08.899"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${check}</var>
<arg>${checks}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20250723 18:52:08.900" level="INFO">${check} = {'type': 'checksum', 'completed': True, 'pass': True, 'failures': []}</msg>
<status status="PASS" starttime="20250723 18:52:08.899" endtime="20250723 18:52:08.900"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${check['type']}</arg>
<arg>${check_type}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250723 18:52:08.900" endtime="20250723 18:52:08.900"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${check['completed']}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20250723 18:52:08.900" endtime="20250723 18:52:08.901"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${check['pass']}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20250723 18:52:08.901" endtime="20250723 18:52:08.902"/>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${check['failures']}</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20250723 18:52:08.902" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20250723 18:52:08.902" endtime="20250723 18:52:08.902"/>
</kw>
<status status="PASS" starttime="20250723 18:52:08.899" endtime="20250723 18:52:08.902"/>
</kw>
<status status="PASS" starttime="20250723 18:52:08.898" endtime="20250723 18:52:08.902"/>
</kw>
<status status="PASS" starttime="20250723 18:52:08.897" endtime="20250723 18:52:08.902"/>
</iter>
<iter>
<var name="${replica}">{'datanode': {'uuid': 'be74795d-2fba-49cc-a991-34c798f5a78b', 'hostname': 'ozonesecure-ha-datanode2-1.ozonesecure-ha_ozone_net'}, 'checks': [{'type': 'checksum', 'completed': True, 'pass': True, 'fail...</var>
<kw name="Get From Dictionary" library="Collections">
<var>${datanode}</var>
<arg>${replica}</arg>
<arg>datanode</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20250723 18:52:08.903" level="INFO">${datanode} = {'uuid': 'be74795d-2fba-49cc-a991-34c798f5a78b', 'hostname': 'ozonesecure-ha-datanode2-1.ozonesecure-ha_ozone_net'}</msg>
<status status="PASS" starttime="20250723 18:52:08.903" endtime="20250723 18:52:08.903"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${hostname}</var>
<arg>${datanode}</arg>
<arg>hostname</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20250723 18:52:08.903" level="INFO">${hostname} = ozonesecure-ha-datanode2-1.ozonesecure-ha_ozone_net</msg>
<status status="PASS" starttime="20250723 18:52:08.903" endtime="20250723 18:52:08.903"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${hostname}' == '${faulty_datanode}'</arg>
<arg>Check Replica Failed</arg>
<arg>${replica}</arg>
<arg>${check_type}</arg>
<arg>${expected_message}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250723 18:52:08.903" endtime="20250723 18:52:08.904"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${hostname}' != '${faulty_datanode}'</arg>
<arg>Check Replica Passed</arg>
<arg>${replica}</arg>
<arg>${check_type}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Check Replica Passed" library="ozone-debug-keywords">
<arg>${replica}</arg>
<arg>${check_type}</arg>
<kw name="Get From Dictionary" library="Collections">
<var>${checks}</var>
<arg>${replica}</arg>
<arg>checks</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20250723 18:52:08.905" level="INFO">${checks} = [{'type': 'checksum', 'completed': True, 'pass': True, 'failures': []}]</msg>
<status status="PASS" starttime="20250723 18:52:08.904" endtime="20250723 18:52:08.905"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${check}</var>
<arg>${checks}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20250723 18:52:08.905" level="INFO">${check} = {'type': 'checksum', 'completed': True, 'pass': True, 'failures': []}</msg>
<status status="PASS" starttime="20250723 18:52:08.905" endtime="20250723 18:52:08.905"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${check['type']}</arg>
<arg>${check_type}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250723 18:52:08.905" endtime="20250723 18:52:08.906"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${check['completed']}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20250723 18:52:08.906" endtime="20250723 18:52:08.906"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${check['pass']}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20250723 18:52:08.906" endtime="20250723 18:52:08.907"/>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${check['failures']}</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20250723 18:52:08.908" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20250723 18:52:08.907" endtime="20250723 18:52:08.908"/>
</kw>
<status status="PASS" starttime="20250723 18:52:08.904" endtime="20250723 18:52:08.908"/>
</kw>
<status status="PASS" starttime="20250723 18:52:08.904" endtime="20250723 18:52:08.908"/>
</kw>
<status status="PASS" starttime="20250723 18:52:08.903" endtime="20250723 18:52:08.908"/>
</iter>
<status status="PASS" starttime="20250723 18:52:08.892" endtime="20250723 18:52:08.908"/>
</for>
<status status="PASS" starttime="20250723 18:52:08.890" endtime="20250723 18:52:08.908"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250723 18:51:48.337" endtime="20250723 18:52:08.908"/>
</test>
<doc>Test checksums in case of a stale datanode</doc>
<status status="PASS" starttime="20250723 18:51:48.300" endtime="20250723 18:52:08.909"/>
</suite>
<suite id="s1-s7" name="Block-Existence-Check" source="/opt/hadoop/smoketest/debug/block-existence-check.robot">
<test id="s1-s7-t1" name="Test block existence with a block missing on a replica" line="32">
<kw name="Execute replicas verify block existence debug tool" library="ozone-debug-keywords">
<var>${output}</var>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone debug replicas verify --block-existence o3://${OM_SERVICE_ID}/${VOLUME}/${BUCKET}/${TESTFILE} --all-results</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250723 18:52:28.917" level="INFO">Running command 'ozone debug replicas verify --block-existence o3://omservice/cli-debug-volume4713/cli-debug-bucket/testfile --all-results 2&gt;&amp;1'.</msg>
<msg timestamp="20250723 18:52:34.824" level="INFO">${rc} = 0</msg>
<msg timestamp="20250723 18:52:34.824" level="INFO">${output} = {
  "keys" : [ {
    "volumeName" : "cli-debug-volume4713",
    "bucketName" : "cli-debug-bucket",
    "name" : "testfile",
    "blocks" : [ {
      "containerID" : 1,
      "blockID" : 11581689692160...</msg>
<status status="PASS" starttime="20250723 18:52:28.914" endtime="20250723 18:52:34.824"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250723 18:52:34.825" level="INFO">{
  "keys" : [ {
    "volumeName" : "cli-debug-volume4713",
    "bucketName" : "cli-debug-bucket",
    "name" : "testfile",
    "blocks" : [ {
      "containerID" : 1,
      "blockID" : 115816896921600101,
      "replicas" : [ {
        "datanode" : {
          "uuid" : "59e1eabb-40ea-465b-b43a-5a9e7f8d0134",
          "hostname" : "ozonesecure-ha-datanode4-1.ozonesecure-ha_ozone_net"
        },
        "checks" : [ {
          "type" : "blockExistence",
          "completed" : false,
          "pass" : false,
          "failures" : [ {
            "message" : "Unable to find the block with bcsID 150 .Container 1 bcsId is 0."
          } ]
        } ],
        "replicaIndex" : 0
      }, {
        "datanode" : {
          "uuid" : "ffeba4ba-4f12-4790-b44a-e494841424fe",
          "hostname" : "ozonesecure-ha-datanode5-1.ozonesecure-ha_ozone_net"
        },
        "checks" : [ {
          "type" : "blockExistence",
          "completed" : true,
          "pass" : true,
          "failures" : [ ]
        } ],
        "replicaIndex" : 0
      }, {
        "datanode" : {
          "uuid" : "be74795d-2fba-49cc-a991-34c798f5a78b",
          "hostname" : "ozonesecure-ha-datanode2-1.ozonesecure-ha_ozone_net"
        },
        "checks" : [ {
          "type" : "blockExistence",
          "completed" : true,
          "pass" : true,
          "failures" : [ ]
        } ],
        "replicaIndex" : 0
      } ]
    } ],
    "pass" : false
  } ],
  "pass" : false
}</msg>
<status status="PASS" starttime="20250723 18:52:34.824" endtime="20250723 18:52:34.825"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250723 18:52:34.825" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250723 18:52:34.825" endtime="20250723 18:52:34.825"/>
</kw>
<status status="PASS" starttime="20250723 18:52:28.914" endtime="20250723 18:52:34.825"/>
</kw>
<msg timestamp="20250723 18:52:34.825" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250723 18:52:28.913" endtime="20250723 18:52:34.825"/>
</kw>
<msg timestamp="20250723 18:52:34.826" level="INFO">${output} = {
  "keys" : [ {
    "volumeName" : "cli-debug-volume4713",
    "bucketName" : "cli-debug-bucket",
    "name" : "testfile",
    "blocks" : [ {
      "containerID" : 1,
      "blockID" : 11581689692160...</msg>
<status status="PASS" starttime="20250723 18:52:28.913" endtime="20250723 18:52:34.826"/>
</kw>
<msg timestamp="20250723 18:52:34.826" level="INFO">${output} = {
  "keys" : [ {
    "volumeName" : "cli-debug-volume4713",
    "bucketName" : "cli-debug-bucket",
    "name" : "testfile",
    "blocks" : [ {
      "containerID" : 1,
      "blockID" : 11581689692160...</msg>
<status status="PASS" starttime="20250723 18:52:28.913" endtime="20250723 18:52:34.826"/>
</kw>
<kw name="Parse replicas verify JSON output" library="ozone-debug-keywords">
<var>${json}</var>
<arg>${output}</arg>
<kw name="Evaluate" library="BuiltIn">
<var>${json}</var>
<arg>json.loads('''${output}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20250723 18:52:34.827" level="INFO">${json} = {'keys': [{'volumeName': 'cli-debug-volume4713', 'bucketName': 'cli-debug-bucket', 'name': 'testfile', 'blocks': [{'containerID': 1, 'blockID': 115816896921600101, 'replicas': [{'datanode': {'uuid': '...</msg>
<status status="PASS" starttime="20250723 18:52:34.826" endtime="20250723 18:52:34.827"/>
</kw>
<msg timestamp="20250723 18:52:34.827" level="INFO">${json} = {'keys': [{'volumeName': 'cli-debug-volume4713', 'bucketName': 'cli-debug-bucket', 'name': 'testfile', 'blocks': [{'containerID': 1, 'blockID': 115816896921600101, 'replicas': [{'datanode': {'uuid': '...</msg>
<status status="PASS" starttime="20250723 18:52:34.826" endtime="20250723 18:52:34.827"/>
</kw>
<kw name="Check to Verify Replicas" library="ozone-debug-keywords">
<arg>${json}</arg>
<arg>${CHECK_TYPE}</arg>
<arg>${DATANODE}</arg>
<arg>Unable to find the block</arg>
<kw name="Get From Dictionary" library="Collections">
<var>${replicas}</var>
<arg>${json['keys'][0]['blocks'][0]}</arg>
<arg>replicas</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20250723 18:52:34.828" level="INFO">${replicas} = [{'datanode': {'uuid': '59e1eabb-40ea-465b-b43a-5a9e7f8d0134', 'hostname': 'ozonesecure-ha-datanode4-1.ozonesecure-ha_ozone_net'}, 'checks': [{'type': 'blockExistence', 'completed': False, 'pass': Fal...</msg>
<status status="PASS" starttime="20250723 18:52:34.828" endtime="20250723 18:52:34.828"/>
</kw>
<for flavor="IN">
<var>${replica}</var>
<value>@{replicas}</value>
<iter>
<var name="${replica}">{'datanode': {'uuid': '59e1eabb-40ea-465b-b43a-5a9e7f8d0134', 'hostname': 'ozonesecure-ha-datanode4-1.ozonesecure-ha_ozone_net'}, 'checks': [{'type': 'blockExistence', 'completed': False, 'pass': Fals...</var>
<kw name="Get From Dictionary" library="Collections">
<var>${datanode}</var>
<arg>${replica}</arg>
<arg>datanode</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20250723 18:52:34.829" level="INFO">${datanode} = {'uuid': '59e1eabb-40ea-465b-b43a-5a9e7f8d0134', 'hostname': 'ozonesecure-ha-datanode4-1.ozonesecure-ha_ozone_net'}</msg>
<status status="PASS" starttime="20250723 18:52:34.829" endtime="20250723 18:52:34.829"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${hostname}</var>
<arg>${datanode}</arg>
<arg>hostname</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20250723 18:52:34.830" level="INFO">${hostname} = ozonesecure-ha-datanode4-1.ozonesecure-ha_ozone_net</msg>
<status status="PASS" starttime="20250723 18:52:34.829" endtime="20250723 18:52:34.830"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${hostname}' == '${faulty_datanode}'</arg>
<arg>Check Replica Failed</arg>
<arg>${replica}</arg>
<arg>${check_type}</arg>
<arg>${expected_message}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Check Replica Failed" library="ozone-debug-keywords">
<arg>${replica}</arg>
<arg>${check_type}</arg>
<arg>${expected_message}</arg>
<kw name="Get From Dictionary" library="Collections">
<var>${checks}</var>
<arg>${replica}</arg>
<arg>checks</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20250723 18:52:34.831" level="INFO">${checks} = [{'type': 'blockExistence', 'completed': False, 'pass': False, 'failures': [{'message': 'Unable to find the block with bcsID 150 .Container 1 bcsId is 0.'}]}]</msg>
<status status="PASS" starttime="20250723 18:52:34.830" endtime="20250723 18:52:34.831"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${check}</var>
<arg>${checks}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20250723 18:52:34.831" level="INFO">${check} = {'type': 'blockExistence', 'completed': False, 'pass': False, 'failures': [{'message': 'Unable to find the block with bcsID 150 .Container 1 bcsId is 0.'}]}</msg>
<status status="PASS" starttime="20250723 18:52:34.831" endtime="20250723 18:52:34.831"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${check['type']}</arg>
<arg>${check_type}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250723 18:52:34.831" endtime="20250723 18:52:34.832"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${check['pass']}</arg>
<arg>${False}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250723 18:52:34.832" endtime="20250723 18:52:34.833"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${check['failures'][0]['message']}</arg>
<arg>${expected_message}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250723 18:52:34.833" endtime="20250723 18:52:34.833"/>
</kw>
<status status="PASS" starttime="20250723 18:52:34.830" endtime="20250723 18:52:34.833"/>
</kw>
<status status="PASS" starttime="20250723 18:52:34.830" endtime="20250723 18:52:34.834"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${hostname}' != '${faulty_datanode}'</arg>
<arg>Check Replica Passed</arg>
<arg>${replica}</arg>
<arg>${check_type}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250723 18:52:34.834" endtime="20250723 18:52:34.834"/>
</kw>
<status status="PASS" starttime="20250723 18:52:34.829" endtime="20250723 18:52:34.834"/>
</iter>
<iter>
<var name="${replica}">{'datanode': {'uuid': 'ffeba4ba-4f12-4790-b44a-e494841424fe', 'hostname': 'ozonesecure-ha-datanode5-1.ozonesecure-ha_ozone_net'}, 'checks': [{'type': 'blockExistence', 'completed': True, 'pass': True,...</var>
<kw name="Get From Dictionary" library="Collections">
<var>${datanode}</var>
<arg>${replica}</arg>
<arg>datanode</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20250723 18:52:34.834" level="INFO">${datanode} = {'uuid': 'ffeba4ba-4f12-4790-b44a-e494841424fe', 'hostname': 'ozonesecure-ha-datanode5-1.ozonesecure-ha_ozone_net'}</msg>
<status status="PASS" starttime="20250723 18:52:34.834" endtime="20250723 18:52:34.834"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${hostname}</var>
<arg>${datanode}</arg>
<arg>hostname</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20250723 18:52:34.835" level="INFO">${hostname} = ozonesecure-ha-datanode5-1.ozonesecure-ha_ozone_net</msg>
<status status="PASS" starttime="20250723 18:52:34.834" endtime="20250723 18:52:34.835"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${hostname}' == '${faulty_datanode}'</arg>
<arg>Check Replica Failed</arg>
<arg>${replica}</arg>
<arg>${check_type}</arg>
<arg>${expected_message}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250723 18:52:34.835" endtime="20250723 18:52:34.835"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${hostname}' != '${faulty_datanode}'</arg>
<arg>Check Replica Passed</arg>
<arg>${replica}</arg>
<arg>${check_type}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Check Replica Passed" library="ozone-debug-keywords">
<arg>${replica}</arg>
<arg>${check_type}</arg>
<kw name="Get From Dictionary" library="Collections">
<var>${checks}</var>
<arg>${replica}</arg>
<arg>checks</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20250723 18:52:34.836" level="INFO">${checks} = [{'type': 'blockExistence', 'completed': True, 'pass': True, 'failures': []}]</msg>
<status status="PASS" starttime="20250723 18:52:34.836" endtime="20250723 18:52:34.836"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${check}</var>
<arg>${checks}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20250723 18:52:34.836" level="INFO">${check} = {'type': 'blockExistence', 'completed': True, 'pass': True, 'failures': []}</msg>
<status status="PASS" starttime="20250723 18:52:34.836" endtime="20250723 18:52:34.836"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${check['type']}</arg>
<arg>${check_type}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250723 18:52:34.836" endtime="20250723 18:52:34.837"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${check['completed']}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20250723 18:52:34.837" endtime="20250723 18:52:34.838"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${check['pass']}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20250723 18:52:34.838" endtime="20250723 18:52:34.838"/>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${check['failures']}</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20250723 18:52:34.839" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20250723 18:52:34.839" endtime="20250723 18:52:34.839"/>
</kw>
<status status="PASS" starttime="20250723 18:52:34.835" endtime="20250723 18:52:34.839"/>
</kw>
<status status="PASS" starttime="20250723 18:52:34.835" endtime="20250723 18:52:34.839"/>
</kw>
<status status="PASS" starttime="20250723 18:52:34.834" endtime="20250723 18:52:34.839"/>
</iter>
<iter>
<var name="${replica}">{'datanode': {'uuid': 'be74795d-2fba-49cc-a991-34c798f5a78b', 'hostname': 'ozonesecure-ha-datanode2-1.ozonesecure-ha_ozone_net'}, 'checks': [{'type': 'blockExistence', 'completed': True, 'pass': True,...</var>
<kw name="Get From Dictionary" library="Collections">
<var>${datanode}</var>
<arg>${replica}</arg>
<arg>datanode</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20250723 18:52:34.840" level="INFO">${datanode} = {'uuid': 'be74795d-2fba-49cc-a991-34c798f5a78b', 'hostname': 'ozonesecure-ha-datanode2-1.ozonesecure-ha_ozone_net'}</msg>
<status status="PASS" starttime="20250723 18:52:34.839" endtime="20250723 18:52:34.840"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${hostname}</var>
<arg>${datanode}</arg>
<arg>hostname</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20250723 18:52:34.840" level="INFO">${hostname} = ozonesecure-ha-datanode2-1.ozonesecure-ha_ozone_net</msg>
<status status="PASS" starttime="20250723 18:52:34.840" endtime="20250723 18:52:34.840"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${hostname}' == '${faulty_datanode}'</arg>
<arg>Check Replica Failed</arg>
<arg>${replica}</arg>
<arg>${check_type}</arg>
<arg>${expected_message}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250723 18:52:34.840" endtime="20250723 18:52:34.840"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${hostname}' != '${faulty_datanode}'</arg>
<arg>Check Replica Passed</arg>
<arg>${replica}</arg>
<arg>${check_type}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Check Replica Passed" library="ozone-debug-keywords">
<arg>${replica}</arg>
<arg>${check_type}</arg>
<kw name="Get From Dictionary" library="Collections">
<var>${checks}</var>
<arg>${replica}</arg>
<arg>checks</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20250723 18:52:34.841" level="INFO">${checks} = [{'type': 'blockExistence', 'completed': True, 'pass': True, 'failures': []}]</msg>
<status status="PASS" starttime="20250723 18:52:34.841" endtime="20250723 18:52:34.841"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${check}</var>
<arg>${checks}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20250723 18:52:34.842" level="INFO">${check} = {'type': 'blockExistence', 'completed': True, 'pass': True, 'failures': []}</msg>
<status status="PASS" starttime="20250723 18:52:34.842" endtime="20250723 18:52:34.842"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${check['type']}</arg>
<arg>${check_type}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250723 18:52:34.842" endtime="20250723 18:52:34.843"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${check['completed']}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20250723 18:52:34.843" endtime="20250723 18:52:34.843"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${check['pass']}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20250723 18:52:34.843" endtime="20250723 18:52:34.844"/>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${check['failures']}</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20250723 18:52:34.844" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20250723 18:52:34.844" endtime="20250723 18:52:34.844"/>
</kw>
<status status="PASS" starttime="20250723 18:52:34.841" endtime="20250723 18:52:34.844"/>
</kw>
<status status="PASS" starttime="20250723 18:52:34.841" endtime="20250723 18:52:34.845"/>
</kw>
<status status="PASS" starttime="20250723 18:52:34.839" endtime="20250723 18:52:34.845"/>
</iter>
<status status="PASS" starttime="20250723 18:52:34.829" endtime="20250723 18:52:34.845"/>
</for>
<status status="PASS" starttime="20250723 18:52:34.827" endtime="20250723 18:52:34.845"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250723 18:52:28.912" endtime="20250723 18:52:34.845"/>
</test>
<doc>Test existence of a block on a datanode</doc>
<status status="PASS" starttime="20250723 18:52:28.874" endtime="20250723 18:52:34.846"/>
</suite>
<suite id="s1-s8" name="Kinit" source="/opt/hadoop/smoketest/kinit.robot">
<test id="s1-s8-t1" name="Kinit" line="27">
<kw name="Kinit test user" library="commonlib">
<arg>${USER}</arg>
<arg>${USER}.keytab</arg>
<kw name="Get Security Enabled From Config" library="commonlib">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' != ''</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20250723 18:52:35.524" endtime="20250723 18:52:35.524"/>
</kw>
<kw name="Execute" library="os">
<var>${value}</var>
<arg>ozone getconf confKey ozone.security.enabled</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250723 18:52:35.528" level="INFO">Running command 'ozone getconf confKey ozone.security.enabled 2&gt;&amp;1'.</msg>
<msg timestamp="20250723 18:52:36.478" level="INFO">${rc} = 0</msg>
<msg timestamp="20250723 18:52:36.479" level="INFO">${output} = true</msg>
<status status="PASS" starttime="20250723 18:52:35.525" endtime="20250723 18:52:36.479"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250723 18:52:36.479" level="INFO">true</msg>
<status status="PASS" starttime="20250723 18:52:36.479" endtime="20250723 18:52:36.480"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250723 18:52:36.480" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250723 18:52:36.480" endtime="20250723 18:52:36.480"/>
</kw>
<status status="PASS" starttime="20250723 18:52:35.525" endtime="20250723 18:52:36.480"/>
</kw>
<msg timestamp="20250723 18:52:36.480" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250723 18:52:35.525" endtime="20250723 18:52:36.480"/>
</kw>
<msg timestamp="20250723 18:52:36.481" level="INFO">${value} = true</msg>
<status status="PASS" starttime="20250723 18:52:35.524" endtime="20250723 18:52:36.481"/>
</kw>
<if>
<branch type="IF" condition="'${value}' != 'true' and '${value}' != 'false'">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>false</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20250723 18:52:36.481" endtime="20250723 18:52:36.481"/>
</kw>
<status status="NOT RUN" starttime="20250723 18:52:36.481" endtime="20250723 18:52:36.481"/>
</branch>
<status status="PASS" starttime="20250723 18:52:36.481" endtime="20250723 18:52:36.481"/>
</if>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${SECURITY_ENABLED}</arg>
<arg>${value}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250723 18:52:36.482" level="INFO">${SECURITY_ENABLED} = true</msg>
<status status="PASS" starttime="20250723 18:52:36.481" endtime="20250723 18:52:36.482"/>
</kw>
<status status="PASS" starttime="20250723 18:52:35.524" endtime="20250723 18:52:36.482"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250723 18:52:36.482" endtime="20250723 18:52:36.482"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250723 18:52:36.486" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250723 18:52:36.490" level="INFO">${rc} = 0</msg>
<msg timestamp="20250723 18:52:36.490" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20250723 18:52:36.483" endtime="20250723 18:52:36.490"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250723 18:52:36.490" level="INFO">om</msg>
<status status="PASS" starttime="20250723 18:52:36.490" endtime="20250723 18:52:36.491"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250723 18:52:36.491" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250723 18:52:36.491" endtime="20250723 18:52:36.491"/>
</kw>
<status status="PASS" starttime="20250723 18:52:36.483" endtime="20250723 18:52:36.491"/>
</kw>
<msg timestamp="20250723 18:52:36.491" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250723 18:52:36.483" endtime="20250723 18:52:36.491"/>
</kw>
<msg timestamp="20250723 18:52:36.491" level="INFO">${instance} = om</msg>
<status status="PASS" starttime="20250723 18:52:36.483" endtime="20250723 18:52:36.492"/>
</kw>
<msg timestamp="20250723 18:52:36.492" level="INFO">${TEST_USER} = testuser/om@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250723 18:52:36.482" endtime="20250723 18:52:36.492"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250723 18:52:36.492" level="INFO">${TEST_USER} = testuser/om@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250723 18:52:36.492" endtime="20250723 18:52:36.492"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250723 18:52:36.496" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/om@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250723 18:52:36.613" level="INFO">${rc} = 0</msg>
<msg timestamp="20250723 18:52:36.613" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250723 18:52:36.494" endtime="20250723 18:52:36.613"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250723 18:52:36.614" level="INFO"/>
<status status="PASS" starttime="20250723 18:52:36.614" endtime="20250723 18:52:36.614"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250723 18:52:36.615" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250723 18:52:36.614" endtime="20250723 18:52:36.615"/>
</kw>
<status status="PASS" starttime="20250723 18:52:36.493" endtime="20250723 18:52:36.615"/>
</kw>
<msg timestamp="20250723 18:52:36.615" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250723 18:52:36.493" endtime="20250723 18:52:36.615"/>
</kw>
<status status="PASS" starttime="20250723 18:52:36.493" endtime="20250723 18:52:36.615"/>
</kw>
<status status="PASS" starttime="20250723 18:52:36.492" endtime="20250723 18:52:36.615"/>
</kw>
<status status="PASS" starttime="20250723 18:52:35.523" endtime="20250723 18:52:36.615"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20250723 18:52:35.523" endtime="20250723 18:52:36.615"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" starttime="20250723 18:52:35.485" endtime="20250723 18:52:36.616"/>
</suite>
<suite id="s1-s9" name="Ozone-Debug-Tests-Ec3-2" source="/opt/hadoop/smoketest/debug/ozone-debug-tests-ec3-2.robot">
<kw name="Create Volume Bucket" type="SETUP">
<kw name="Execute" library="os">
<arg>ozone sh volume create o3://${OM_SERVICE_ID}/${VOLUME}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250723 18:52:37.306" level="INFO">Running command 'ozone sh volume create o3://omservice/cli-debug-ec-volume4713 2&gt;&amp;1'.</msg>
<msg timestamp="20250723 18:52:40.684" level="INFO">${rc} = 0</msg>
<msg timestamp="20250723 18:52:40.684" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250723 18:52:37.303" endtime="20250723 18:52:40.684"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250723 18:52:40.685" level="INFO"/>
<status status="PASS" starttime="20250723 18:52:40.684" endtime="20250723 18:52:40.685"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250723 18:52:40.685" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250723 18:52:40.685" endtime="20250723 18:52:40.685"/>
</kw>
<status status="PASS" starttime="20250723 18:52:37.303" endtime="20250723 18:52:40.685"/>
</kw>
<msg timestamp="20250723 18:52:40.685" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250723 18:52:37.302" endtime="20250723 18:52:40.685"/>
</kw>
<status status="PASS" starttime="20250723 18:52:37.302" endtime="20250723 18:52:40.686"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create o3://${OM_SERVICE_ID}/${VOLUME}/${BUCKET}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250723 18:52:40.689" level="INFO">Running command 'ozone sh bucket create o3://omservice/cli-debug-ec-volume4713/cli-debug-ec-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20250723 18:52:44.022" level="INFO">${rc} = 0</msg>
<msg timestamp="20250723 18:52:44.022" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250723 18:52:40.687" endtime="20250723 18:52:44.022"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250723 18:52:44.023" level="INFO"/>
<status status="PASS" starttime="20250723 18:52:44.023" endtime="20250723 18:52:44.023"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250723 18:52:44.023" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250723 18:52:44.023" endtime="20250723 18:52:44.023"/>
</kw>
<status status="PASS" starttime="20250723 18:52:40.686" endtime="20250723 18:52:44.024"/>
</kw>
<msg timestamp="20250723 18:52:44.024" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250723 18:52:40.686" endtime="20250723 18:52:44.024"/>
</kw>
<status status="PASS" starttime="20250723 18:52:40.686" endtime="20250723 18:52:44.024"/>
</kw>
<status status="PASS" starttime="20250723 18:52:37.302" endtime="20250723 18:52:44.024"/>
</kw>
<test id="s1-s9-t1" name="Test ozone debug replicas chunk-info" line="46">
<kw name="Create EC key">
<arg>1048576</arg>
<arg>3</arg>
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=${TEMP_DIR}/testfile bs=${bs} count=${count}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250723 18:52:44.029" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/testfile bs=1048576 count=3 2&gt;&amp;1'.</msg>
<msg timestamp="20250723 18:52:44.045" level="INFO">${rc} = 0</msg>
<msg timestamp="20250723 18:52:44.045" level="INFO">${output} = 3+0 records in
3+0 records out
3145728 bytes (3.1 MB, 3.0 MiB) copied, 0.0115838 s, 272 MB/s</msg>
<status status="PASS" starttime="20250723 18:52:44.026" endtime="20250723 18:52:44.045"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250723 18:52:44.045" level="INFO">3+0 records in
3+0 records out
3145728 bytes (3.1 MB, 3.0 MiB) copied, 0.0115838 s, 272 MB/s</msg>
<status status="PASS" starttime="20250723 18:52:44.045" endtime="20250723 18:52:44.045"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250723 18:52:44.046" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250723 18:52:44.046" endtime="20250723 18:52:44.046"/>
</kw>
<status status="PASS" starttime="20250723 18:52:44.026" endtime="20250723 18:52:44.046"/>
</kw>
<msg timestamp="20250723 18:52:44.046" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250723 18:52:44.026" endtime="20250723 18:52:44.046"/>
</kw>
<status status="PASS" starttime="20250723 18:52:44.025" endtime="20250723 18:52:44.046"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put o3://${OM_SERVICE_ID}/${VOLUME}/${BUCKET}/testfile ${TEMP_DIR}/testfile -r rs-${EC_DATA}-${EC_PARITY}-1024k -t EC</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250723 18:52:44.050" level="INFO">Running command 'ozone sh key put o3://omservice/cli-debug-ec-volume4713/cli-debug-ec-bucket/testfile /tmp/testfile -r rs-3-2-1024k -t EC 2&gt;&amp;1'.</msg>
<msg timestamp="20250723 18:52:49.685" level="INFO">${rc} = 0</msg>
<msg timestamp="20250723 18:52:49.685" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250723 18:52:44.048" endtime="20250723 18:52:49.685"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250723 18:52:49.686" level="INFO"/>
<status status="PASS" starttime="20250723 18:52:49.685" endtime="20250723 18:52:49.686"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250723 18:52:49.687" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250723 18:52:49.686" endtime="20250723 18:52:49.687"/>
</kw>
<status status="PASS" starttime="20250723 18:52:44.047" endtime="20250723 18:52:49.687"/>
</kw>
<msg timestamp="20250723 18:52:49.687" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250723 18:52:44.047" endtime="20250723 18:52:49.687"/>
</kw>
<status status="PASS" starttime="20250723 18:52:44.046" endtime="20250723 18:52:49.687"/>
</kw>
<status status="PASS" starttime="20250723 18:52:44.025" endtime="20250723 18:52:49.687"/>
</kw>
<kw name="Execute" library="os">
<var>${count}</var>
<arg>ozone debug replicas chunk-info o3://${OM_SERVICE_ID}/${VOLUME}/${BUCKET}/testfile | jq '[.keyLocations[0][] | select(.file | test("\\\\.block$")) | .file] | length'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250723 18:52:49.691" level="INFO">Running command 'ozone debug replicas chunk-info o3://omservice/cli-debug-ec-volume4713/cli-debug-ec-bucket/testfile | jq '[.keyLocations[0][] | select(.file | test("\\.block$")) | .file] | length' 2&gt;&amp;1'.</msg>
<msg timestamp="20250723 18:52:55.556" level="INFO">${rc} = 0</msg>
<msg timestamp="20250723 18:52:55.556" level="INFO">${output} = 5</msg>
<status status="PASS" starttime="20250723 18:52:49.688" endtime="20250723 18:52:55.556"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250723 18:52:55.557" level="INFO">5</msg>
<status status="PASS" starttime="20250723 18:52:55.556" endtime="20250723 18:52:55.557"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250723 18:52:55.557" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250723 18:52:55.557" endtime="20250723 18:52:55.557"/>
</kw>
<status status="PASS" starttime="20250723 18:52:49.688" endtime="20250723 18:52:55.558"/>
</kw>
<msg timestamp="20250723 18:52:55.558" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250723 18:52:49.688" endtime="20250723 18:52:55.558"/>
</kw>
<msg timestamp="20250723 18:52:55.558" level="INFO">${count} = 5</msg>
<status status="PASS" starttime="20250723 18:52:49.687" endtime="20250723 18:52:55.558"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${count}</arg>
<arg>5</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" starttime="20250723 18:52:55.558" endtime="20250723 18:52:55.558"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250723 18:52:44.024" endtime="20250723 18:52:55.558"/>
</test>
<doc>Test ozone Debug CLI for EC(3,2) replicated keys</doc>
<status status="PASS" starttime="20250723 18:52:37.260" endtime="20250723 18:52:55.559"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="108634"/>
</suite>
<statistics>
<total>
<stat pass="10" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="10" fail="0" skip="0" id="s1" name="ozonesecure-ha-debug-tools">ozonesecure-ha-debug-tools</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1" name="Kinit">ozonesecure-ha-debug-tools.Kinit</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2" name="Auditparser">ozonesecure-ha-debug-tools.Auditparser</stat>
<stat pass="1" fail="0" skip="0" id="s1-s3" name="Kinit">ozonesecure-ha-debug-tools.Kinit</stat>
<stat pass="2" fail="0" skip="0" id="s1-s4" name="Ozone-Debug-Tests">ozonesecure-ha-debug-tools.Ozone-Debug-Tests</stat>
<stat pass="1" fail="0" skip="0" id="s1-s5" name="Corrupt-Block-Checksum">ozonesecure-ha-debug-tools.Corrupt-Block-Checksum</stat>
<stat pass="1" fail="0" skip="0" id="s1-s6" name="Stale-Datanode-Checksum">ozonesecure-ha-debug-tools.Stale-Datanode-Checksum</stat>
<stat pass="1" fail="0" skip="0" id="s1-s7" name="Block-Existence-Check">ozonesecure-ha-debug-tools.Block-Existence-Check</stat>
<stat pass="1" fail="0" skip="0" id="s1-s8" name="Kinit">ozonesecure-ha-debug-tools.Kinit</stat>
<stat pass="1" fail="0" skip="0" id="s1-s9" name="Ozone-Debug-Tests-Ec3-2">ozonesecure-ha-debug-tools.Ozone-Debug-Tests-Ec3-2</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
