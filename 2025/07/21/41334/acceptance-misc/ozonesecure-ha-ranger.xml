<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.1.1 (Python 3.9.21 on linux)" generated="20250721 08:04:03.483" rpa="false" schemaversion="4">
<suite id="s1" name="ozonesecure-ha-ranger">
<suite id="s1-s1" name="Kinit" source="/opt/hadoop/smoketest/kinit.robot">
<test id="s1-s1-t1" name="Kinit" line="27">
<kw name="Kinit test user" library="commonlib">
<arg>${USER}</arg>
<arg>${USER}.keytab</arg>
<kw name="Get Security Enabled From Config" library="commonlib">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' != ''</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20250721 08:02:30.088" endtime="20250721 08:02:30.088"/>
</kw>
<kw name="Execute" library="os">
<var>${value}</var>
<arg>ozone getconf confKey ozone.security.enabled</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250721 08:02:30.092" level="INFO">Running command 'ozone getconf confKey ozone.security.enabled 2&gt;&amp;1'.</msg>
<msg timestamp="20250721 08:02:30.893" level="INFO">${rc} = 0</msg>
<msg timestamp="20250721 08:02:30.893" level="INFO">${output} = true</msg>
<status status="PASS" starttime="20250721 08:02:30.089" endtime="20250721 08:02:30.893"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250721 08:02:30.894" level="INFO">true</msg>
<status status="PASS" starttime="20250721 08:02:30.894" endtime="20250721 08:02:30.894"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250721 08:02:30.895" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250721 08:02:30.894" endtime="20250721 08:02:30.895"/>
</kw>
<status status="PASS" starttime="20250721 08:02:30.089" endtime="20250721 08:02:30.895"/>
</kw>
<msg timestamp="20250721 08:02:30.895" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250721 08:02:30.089" endtime="20250721 08:02:30.895"/>
</kw>
<msg timestamp="20250721 08:02:30.895" level="INFO">${value} = true</msg>
<status status="PASS" starttime="20250721 08:02:30.088" endtime="20250721 08:02:30.895"/>
</kw>
<if>
<branch type="IF" condition="'${value}' != 'true' and '${value}' != 'false'">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>false</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20250721 08:02:30.896" endtime="20250721 08:02:30.896"/>
</kw>
<status status="NOT RUN" starttime="20250721 08:02:30.895" endtime="20250721 08:02:30.896"/>
</branch>
<status status="PASS" starttime="20250721 08:02:30.895" endtime="20250721 08:02:30.896"/>
</if>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${SECURITY_ENABLED}</arg>
<arg>${value}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250721 08:02:30.896" level="INFO">${SECURITY_ENABLED} = true</msg>
<status status="PASS" starttime="20250721 08:02:30.896" endtime="20250721 08:02:30.896"/>
</kw>
<status status="PASS" starttime="20250721 08:02:30.088" endtime="20250721 08:02:30.897"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250721 08:02:30.897" endtime="20250721 08:02:30.897"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250721 08:02:30.901" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250721 08:02:30.904" level="INFO">${rc} = 0</msg>
<msg timestamp="20250721 08:02:30.904" level="INFO">${output} = s3g</msg>
<status status="PASS" starttime="20250721 08:02:30.898" endtime="20250721 08:02:30.904"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250721 08:02:30.905" level="INFO">s3g</msg>
<status status="PASS" starttime="20250721 08:02:30.905" endtime="20250721 08:02:30.905"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250721 08:02:30.906" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250721 08:02:30.905" endtime="20250721 08:02:30.906"/>
</kw>
<status status="PASS" starttime="20250721 08:02:30.898" endtime="20250721 08:02:30.906"/>
</kw>
<msg timestamp="20250721 08:02:30.906" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250721 08:02:30.898" endtime="20250721 08:02:30.906"/>
</kw>
<msg timestamp="20250721 08:02:30.906" level="INFO">${instance} = s3g</msg>
<status status="PASS" starttime="20250721 08:02:30.897" endtime="20250721 08:02:30.906"/>
</kw>
<msg timestamp="20250721 08:02:30.906" level="INFO">${TEST_USER} = hdfs/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250721 08:02:30.897" endtime="20250721 08:02:30.906"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250721 08:02:30.907" level="INFO">${TEST_USER} = hdfs/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250721 08:02:30.906" endtime="20250721 08:02:30.907"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250721 08:02:30.910" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/hdfs.keytab hdfs/s3g@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250721 08:02:30.952" level="INFO">${rc} = 0</msg>
<msg timestamp="20250721 08:02:30.952" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250721 08:02:30.908" endtime="20250721 08:02:30.952"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250721 08:02:30.953" level="INFO"/>
<status status="PASS" starttime="20250721 08:02:30.953" endtime="20250721 08:02:30.953"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250721 08:02:30.954" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250721 08:02:30.953" endtime="20250721 08:02:30.954"/>
</kw>
<status status="PASS" starttime="20250721 08:02:30.908" endtime="20250721 08:02:30.954"/>
</kw>
<msg timestamp="20250721 08:02:30.954" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250721 08:02:30.907" endtime="20250721 08:02:30.954"/>
</kw>
<status status="PASS" starttime="20250721 08:02:30.907" endtime="20250721 08:02:30.954"/>
</kw>
<status status="PASS" starttime="20250721 08:02:30.907" endtime="20250721 08:02:30.954"/>
</kw>
<status status="PASS" starttime="20250721 08:02:30.087" endtime="20250721 08:02:30.954"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20250721 08:02:30.087" endtime="20250721 08:02:30.954"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" starttime="20250721 08:02:30.046" endtime="20250721 08:02:30.955"/>
</suite>
<suite id="s1-s2" name="Generate" source="/opt/hadoop/smoketest/freon/generate.robot">
<test id="s1-s2-t1" name="Ozone Client Key Generator" line="25">
<kw name="Freon OCKG" library="freon">
<arg>prefix=ockg${PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250721 08:02:31.653" level="INFO">Running command 'ozone freon ockg --om-service-id=omservice -t 1 -n1 -p ockg  2&gt;&amp;1'.</msg>
<msg timestamp="20250721 08:02:37.446" level="INFO">${rc} = 0</msg>
<msg timestamp="20250721 08:02:37.446" level="INFO">${output} = 2025-07-21 08:02:32,634 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-07-21 08:02:32,802 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250721 08:02:31.650" endtime="20250721 08:02:37.446"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250721 08:02:37.447" level="INFO">2025-07-21 08:02:32,634 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-07-21 08:02:32,802 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2025-07-21 08:02:32,802 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2025-07-21 08:02:32,997 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockg and number-of-tests 1
2025-07-21 08:02:33,056 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2025-07-21 08:02:34,056 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2025-07-21 08:02:34,177 [main] INFO rpc.RpcClient: Creating Volume: vol1, with hdfs as owner and space quota set to -1 bytes, counts quota set to -1
2025-07-21 08:02:34,319 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with server-side default bucket layout, hdfs as owner, Versioning false, Storage Type set to DISK and Encryption set to false, Replication Type set to server-side default replication type, Namespace Quota set to -1, Space Quota set to -1 
2025-07-21 08:02:34,836 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2025-07-21 08:02:34,929 [pool-2-thread-1] INFO netty.NettyConfigKeys$DataStream: setTlsConf GrpcTlsConfig0-
2025-07-21 08:02:35,057 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2025-07-21 08:02:36,058 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2025-07-21 08:02:37,058 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2025-07-21 08:02:37,087 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1, min=2389.721839, max=2389.721839, mean=2389.721839, stddev=0.0, median=2389.721839, p75=2389.721839, p95=2389.721839, p98=2389.721839, p99=2389.721839, p999=2389.721839, mean_rate=0.3760453625807237, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2025-07-21 08:02:37,088 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 4
2025-07-21 08:02:37,088 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2025-07-21 08:02:37,088 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20250721 08:02:37.446" endtime="20250721 08:02:37.447"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250721 08:02:37.447" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250721 08:02:37.447" endtime="20250721 08:02:37.447"/>
</kw>
<status status="PASS" starttime="20250721 08:02:31.650" endtime="20250721 08:02:37.447"/>
</kw>
<msg timestamp="20250721 08:02:37.447" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250721 08:02:31.650" endtime="20250721 08:02:37.447"/>
</kw>
<msg timestamp="20250721 08:02:37.448" level="INFO">${result} = 2025-07-21 08:02:32,634 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-07-21 08:02:32,802 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250721 08:02:31.649" endtime="20250721 08:02:37.448"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250721 08:02:37.448" endtime="20250721 08:02:37.448"/>
</kw>
<status status="PASS" starttime="20250721 08:02:31.648" endtime="20250721 08:02:37.448"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250721 08:02:31.648" endtime="20250721 08:02:37.448"/>
</test>
<test id="s1-s2-t2" name="OM Key Generator" line="28">
<kw name="Freon OMKG" library="freon">
<arg>prefix=omkg${PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon omkg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250721 08:02:37.454" level="INFO">Running command 'ozone freon omkg --om-service-id=omservice -t 1 -n1 -p omkg  2&gt;&amp;1'.</msg>
<msg timestamp="20250721 08:02:40.910" level="INFO">${rc} = 0</msg>
<msg timestamp="20250721 08:02:40.910" level="INFO">${output} = 2025-07-21 08:02:38,448 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-07-21 08:02:38,604 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250721 08:02:37.451" endtime="20250721 08:02:40.911"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250721 08:02:40.911" level="INFO">2025-07-21 08:02:38,448 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-07-21 08:02:38,604 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2025-07-21 08:02:38,604 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2025-07-21 08:02:38,791 [main] INFO freon.BaseFreonGenerator: Executing test with prefix omkg and number-of-tests 1
2025-07-21 08:02:38,847 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2025-07-21 08:02:39,848 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2025-07-21 08:02:40,208 [pool-2-thread-1] WARN helpers.OzoneAclUtil: Failed to get primary group from user hdfs/s3g@EXAMPLE.COM (auth:KERBEROS)
2025-07-21 08:02:40,848 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2025-07-21 08:02:40,858 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1, min=98.640354, max=98.640354, mean=98.640354, stddev=0.0, median=98.640354, p75=98.640354, p95=98.640354, p98=98.640354, p99=98.640354, p999=98.640354, mean_rate=1.5071044837544483, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2025-07-21 08:02:40,859 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2025-07-21 08:02:40,859 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2025-07-21 08:02:40,859 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20250721 08:02:40.911" endtime="20250721 08:02:40.912"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250721 08:02:40.912" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250721 08:02:40.912" endtime="20250721 08:02:40.912"/>
</kw>
<status status="PASS" starttime="20250721 08:02:37.451" endtime="20250721 08:02:40.912"/>
</kw>
<msg timestamp="20250721 08:02:40.912" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250721 08:02:37.451" endtime="20250721 08:02:40.912"/>
</kw>
<msg timestamp="20250721 08:02:40.913" level="INFO">${result} = 2025-07-21 08:02:38,448 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-07-21 08:02:38,604 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250721 08:02:37.450" endtime="20250721 08:02:40.913"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250721 08:02:40.913" endtime="20250721 08:02:40.913"/>
</kw>
<status status="PASS" starttime="20250721 08:02:37.449" endtime="20250721 08:02:40.913"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250721 08:02:37.449" endtime="20250721 08:02:40.913"/>
</test>
<test id="s1-s2-t3" name="OM Bucket Generator" line="31">
<kw name="Freon OMBG" library="freon">
<arg>prefix=ombg${PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ombg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250721 08:02:40.918" level="INFO">Running command 'ozone freon ombg --om-service-id=omservice -t 1 -n1 -p ombg  2&gt;&amp;1'.</msg>
<msg timestamp="20250721 08:02:44.337" level="INFO">${rc} = 0</msg>
<msg timestamp="20250721 08:02:44.337" level="INFO">${output} = 2025-07-21 08:02:41,889 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-07-21 08:02:42,063 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250721 08:02:40.916" endtime="20250721 08:02:44.337"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250721 08:02:44.338" level="INFO">2025-07-21 08:02:41,889 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-07-21 08:02:42,063 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2025-07-21 08:02:42,064 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2025-07-21 08:02:42,220 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ombg and number-of-tests 1
2025-07-21 08:02:42,272 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2025-07-21 08:02:43,281 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2025-07-21 08:02:44,281 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2025-07-21 08:02:44,292 [shutdown-hook-0] INFO metrics: type=TIMER, name=bucket-create, count=1, min=36.450649, max=36.450649, mean=36.450649, stddev=0.0, median=36.450649, p75=36.450649, p95=36.450649, p98=36.450649, p99=36.450649, p999=36.450649, mean_rate=1.2456642786285914, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2025-07-21 08:02:44,292 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2025-07-21 08:02:44,293 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2025-07-21 08:02:44,293 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20250721 08:02:44.337" endtime="20250721 08:02:44.338"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250721 08:02:44.338" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250721 08:02:44.338" endtime="20250721 08:02:44.339"/>
</kw>
<status status="PASS" starttime="20250721 08:02:40.916" endtime="20250721 08:02:44.339"/>
</kw>
<msg timestamp="20250721 08:02:44.339" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250721 08:02:40.915" endtime="20250721 08:02:44.339"/>
</kw>
<msg timestamp="20250721 08:02:44.339" level="INFO">${result} = 2025-07-21 08:02:41,889 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-07-21 08:02:42,063 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250721 08:02:40.915" endtime="20250721 08:02:44.339"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250721 08:02:44.339" endtime="20250721 08:02:44.339"/>
</kw>
<status status="PASS" starttime="20250721 08:02:40.914" endtime="20250721 08:02:44.339"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250721 08:02:40.914" endtime="20250721 08:02:44.340"/>
</test>
<doc>Test freon data generation commands</doc>
<status status="PASS" starttime="20250721 08:02:31.612" endtime="20250721 08:02:44.340"/>
</suite>
<suite id="s1-s3" name="Validate" source="/opt/hadoop/smoketest/freon/validate.robot">
<test id="s1-s3-t1" name="Ozone Client Key Validator" line="25">
<kw name="Freon OCKV" library="freon">
<arg>prefix=ockg${PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockv ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250721 08:02:45.061" level="INFO">Running command 'ozone freon ockv --om-service-id=omservice -t 1 -n1 -p ockg  2&gt;&amp;1'.</msg>
<msg timestamp="20250721 08:02:49.753" level="INFO">${rc} = 0</msg>
<msg timestamp="20250721 08:02:49.753" level="INFO">${output} = 2025-07-21 08:02:45,987 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-07-21 08:02:46,166 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250721 08:02:45.058" endtime="20250721 08:02:49.753"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250721 08:02:49.754" level="INFO">2025-07-21 08:02:45,987 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-07-21 08:02:46,166 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2025-07-21 08:02:46,166 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2025-07-21 08:02:46,329 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockg and number-of-tests 1
2025-07-21 08:02:46,380 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2025-07-21 08:02:47,381 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2025-07-21 08:02:47,925 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2025-07-21 08:02:48,382 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2025-07-21 08:02:49,382 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2025-07-21 08:02:49,404 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-validate, count=1, min=35.185363, max=35.185363, mean=35.185363, stddev=0.0, median=35.185363, p75=35.185363, p95=35.185363, p98=35.185363, p99=35.185363, p999=35.185363, mean_rate=1.8581635137103507, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2025-07-21 08:02:49,405 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2025-07-21 08:02:49,405 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2025-07-21 08:02:49,405 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20250721 08:02:49.753" endtime="20250721 08:02:49.754"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250721 08:02:49.754" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250721 08:02:49.754" endtime="20250721 08:02:49.755"/>
</kw>
<status status="PASS" starttime="20250721 08:02:45.058" endtime="20250721 08:02:49.755"/>
</kw>
<msg timestamp="20250721 08:02:49.755" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250721 08:02:45.058" endtime="20250721 08:02:49.755"/>
</kw>
<msg timestamp="20250721 08:02:49.755" level="INFO">${result} = 2025-07-21 08:02:45,987 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-07-21 08:02:46,166 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250721 08:02:45.057" endtime="20250721 08:02:49.755"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250721 08:02:49.755" endtime="20250721 08:02:49.755"/>
</kw>
<status status="PASS" starttime="20250721 08:02:45.057" endtime="20250721 08:02:49.755"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250721 08:02:45.056" endtime="20250721 08:02:49.756"/>
</test>
<doc>Test freon data validation commands</doc>
<status status="PASS" starttime="20250721 08:02:45.019" endtime="20250721 08:02:49.756"/>
</suite>
<suite id="s1-s4" name="Ozone-Secure-Tenant" source="/opt/hadoop/smoketest/security/ozone-secure-tenant.robot">
<test id="s1-s4-t1" name="Create User in Ranger" line="33">
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${RANGER_ENDPOINT_URL}' == ''</arg>
<arg>No Ranger</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250721 08:02:50.488" endtime="20250721 08:02:50.488"/>
</kw>
<kw name="Execute" library="os">
<arg>curl --fail --include --location --netrc --request POST --header "Content-Type: application/json" --header "accept: application/json" --data '{"loginId": "${TENANT}", "password": "testpassword", "firstName": "Test", "lastName": "User", "emailAddress": "testuser@example.com"}' '${RANGER_ENDPOINT_URL}/service/users'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250721 08:02:50.492" level="INFO">Running command 'curl --fail --include --location --netrc --request POST --header "Content-Type: application/json" --header "accept: application/json" --data '{"loginId": "tenantone", "password": "testpassword", "firstName": "Test", "lastName": "User", "emailAddress": "testuser@example.com"}' 'http://ranger:6080/service/users' 2&gt;&amp;1'.</msg>
<msg timestamp="20250721 08:02:50.550" level="INFO">${rc} = 0</msg>
<msg timestamp="20250721 08:02:50.550" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20250721 08:02:50.489" endtime="20250721 08:02:50.550"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250721 08:02:50.552" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0
100   365    0   232  100   133   4734   2714 --:--:-- --:--:-- --:--:--  7448
HTTP/1.1 200 
Set-Cookie: RANGERADMINSESSIONID=D6F45B333E0E3602D0C90C7516FF6648; Path=/; HttpOnly
Cache-Control: no-cache, no-store, max-age=0, must-revalidate
X-Frame-Options: DENY
X-XSS-Protection: 1; mode=block
Strict-Transport-Security: max-age=31536000; includeSubDomains; preload
Content-Security-Policy: default-src 'none'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; connect-src 'self'; img-src 'self' data:; style-src 'self' 'unsafe-inline';font-src 'self'
X-Permitted-Cross-Domain-Policies: none
X-Content-Type-Options: nosniff
Content-Type: application/json
Transfer-Encoding: chunked
Date: Mon, 21 Jul 2025 08:02:50 GMT
Server: Apache Ranger

{"id":13,"loginId":"tenantone","status":1,"emailAddress":"testuser@example.com","firstName":"Test","lastName":"User","publicScreenName":"Test User","userSource":0,"userRoleList":["ROLE_USER"],"userPermList":[],"groupPermissions":[]}</msg>
<status status="PASS" starttime="20250721 08:02:50.551" endtime="20250721 08:02:50.552"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250721 08:02:50.552" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250721 08:02:50.552" endtime="20250721 08:02:50.552"/>
</kw>
<status status="PASS" starttime="20250721 08:02:50.489" endtime="20250721 08:02:50.552"/>
</kw>
<msg timestamp="20250721 08:02:50.553" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250721 08:02:50.489" endtime="20250721 08:02:50.553"/>
</kw>
<status status="PASS" starttime="20250721 08:02:50.488" endtime="20250721 08:02:50.553"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250721 08:02:50.487" endtime="20250721 08:02:50.553"/>
</test>
<test id="s1-s4-t2" name="Create Tenant Success with Cluster Admin" line="37">
<kw name="Kinit test user" library="commonlib">
<arg>${USER}</arg>
<arg>${USER}.keytab</arg>
<kw name="Get Security Enabled From Config" library="commonlib">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' != ''</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20250721 08:02:50.555" endtime="20250721 08:02:50.555"/>
</kw>
<kw name="Execute" library="os">
<var>${value}</var>
<arg>ozone getconf confKey ozone.security.enabled</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250721 08:02:50.560" level="INFO">Running command 'ozone getconf confKey ozone.security.enabled 2&gt;&amp;1'.</msg>
<msg timestamp="20250721 08:02:51.599" level="INFO">${rc} = 0</msg>
<msg timestamp="20250721 08:02:51.600" level="INFO">${output} = true</msg>
<status status="PASS" starttime="20250721 08:02:50.557" endtime="20250721 08:02:51.600"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250721 08:02:51.601" level="INFO">true</msg>
<status status="PASS" starttime="20250721 08:02:51.600" endtime="20250721 08:02:51.601"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250721 08:02:51.602" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250721 08:02:51.601" endtime="20250721 08:02:51.602"/>
</kw>
<status status="PASS" starttime="20250721 08:02:50.556" endtime="20250721 08:02:51.602"/>
</kw>
<msg timestamp="20250721 08:02:51.602" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250721 08:02:50.556" endtime="20250721 08:02:51.602"/>
</kw>
<msg timestamp="20250721 08:02:51.602" level="INFO">${value} = true</msg>
<status status="PASS" starttime="20250721 08:02:50.556" endtime="20250721 08:02:51.602"/>
</kw>
<if>
<branch type="IF" condition="'${value}' != 'true' and '${value}' != 'false'">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>false</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20250721 08:02:51.603" endtime="20250721 08:02:51.603"/>
</kw>
<status status="NOT RUN" starttime="20250721 08:02:51.602" endtime="20250721 08:02:51.603"/>
</branch>
<status status="PASS" starttime="20250721 08:02:51.602" endtime="20250721 08:02:51.603"/>
</if>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${SECURITY_ENABLED}</arg>
<arg>${value}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250721 08:02:51.603" level="INFO">${SECURITY_ENABLED} = true</msg>
<status status="PASS" starttime="20250721 08:02:51.603" endtime="20250721 08:02:51.603"/>
</kw>
<status status="PASS" starttime="20250721 08:02:50.555" endtime="20250721 08:02:51.604"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250721 08:02:51.604" endtime="20250721 08:02:51.604"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250721 08:02:51.609" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250721 08:02:51.614" level="INFO">${rc} = 0</msg>
<msg timestamp="20250721 08:02:51.614" level="INFO">${output} = s3g</msg>
<status status="PASS" starttime="20250721 08:02:51.605" endtime="20250721 08:02:51.614"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250721 08:02:51.615" level="INFO">s3g</msg>
<status status="PASS" starttime="20250721 08:02:51.614" endtime="20250721 08:02:51.615"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250721 08:02:51.616" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250721 08:02:51.615" endtime="20250721 08:02:51.616"/>
</kw>
<status status="PASS" starttime="20250721 08:02:51.605" endtime="20250721 08:02:51.616"/>
</kw>
<msg timestamp="20250721 08:02:51.616" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250721 08:02:51.605" endtime="20250721 08:02:51.616"/>
</kw>
<msg timestamp="20250721 08:02:51.616" level="INFO">${instance} = s3g</msg>
<status status="PASS" starttime="20250721 08:02:51.604" endtime="20250721 08:02:51.616"/>
</kw>
<msg timestamp="20250721 08:02:51.617" level="INFO">${TEST_USER} = hdfs/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250721 08:02:51.604" endtime="20250721 08:02:51.617"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250721 08:02:51.617" level="INFO">${TEST_USER} = hdfs/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250721 08:02:51.617" endtime="20250721 08:02:51.617"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250721 08:02:51.622" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/hdfs.keytab hdfs/s3g@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250721 08:02:51.670" level="INFO">${rc} = 0</msg>
<msg timestamp="20250721 08:02:51.670" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250721 08:02:51.619" endtime="20250721 08:02:51.670"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250721 08:02:51.671" level="INFO"/>
<status status="PASS" starttime="20250721 08:02:51.670" endtime="20250721 08:02:51.671"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250721 08:02:51.672" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250721 08:02:51.671" endtime="20250721 08:02:51.672"/>
</kw>
<status status="PASS" starttime="20250721 08:02:51.618" endtime="20250721 08:02:51.672"/>
</kw>
<msg timestamp="20250721 08:02:51.672" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250721 08:02:51.618" endtime="20250721 08:02:51.672"/>
</kw>
<status status="PASS" starttime="20250721 08:02:51.618" endtime="20250721 08:02:51.672"/>
</kw>
<status status="PASS" starttime="20250721 08:02:51.617" endtime="20250721 08:02:51.672"/>
</kw>
<status status="PASS" starttime="20250721 08:02:50.554" endtime="20250721 08:02:51.672"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone tenant --verbose create ${TENANT}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250721 08:02:51.676" level="INFO">Running command 'ozone tenant --verbose create tenantone 2&gt;&amp;1'.</msg>
<msg timestamp="20250721 08:02:54.469" level="INFO">${rc} = 0</msg>
<msg timestamp="20250721 08:02:54.470" level="INFO">${output} = {
  "tenantId" : "tenantone"
}</msg>
<status status="PASS" starttime="20250721 08:02:51.673" endtime="20250721 08:02:54.470"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250721 08:02:54.472" level="INFO">{
  "tenantId" : "tenantone"
}</msg>
<status status="PASS" starttime="20250721 08:02:54.471" endtime="20250721 08:02:54.472"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250721 08:02:54.473" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250721 08:02:54.472" endtime="20250721 08:02:54.473"/>
</kw>
<status status="PASS" starttime="20250721 08:02:51.673" endtime="20250721 08:02:54.473"/>
</kw>
<msg timestamp="20250721 08:02:54.473" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250721 08:02:51.673" endtime="20250721 08:02:54.473"/>
</kw>
<msg timestamp="20250721 08:02:54.473" level="INFO">${output} = {
  "tenantId" : "tenantone"
}</msg>
<status status="PASS" starttime="20250721 08:02:51.672" endtime="20250721 08:02:54.473"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"tenantId" : "${TENANT}"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250721 08:02:54.473" endtime="20250721 08:02:54.474"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250721 08:02:50.553" endtime="20250721 08:02:54.474"/>
</test>
<test id="s1-s4-t3" name="Assign User Success with Cluster Admin" line="42">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone tenant --verbose user assign ${USER} --tenant=${TENANT}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250721 08:02:54.480" level="INFO">Running command 'ozone tenant --verbose user assign hdfs --tenant=tenantone 2&gt;&amp;1'.</msg>
<msg timestamp="20250721 08:02:56.720" level="INFO">${rc} = 0</msg>
<msg timestamp="20250721 08:02:56.720" level="INFO">${output} = export AWS_ACCESS_KEY_ID='tenantone$hdfs'
export AWS_SECRET_ACCESS_KEY='68aa705d27f782b95f6993cc94d4dfc2064f69dd1f1d0bfaae6af4b47894b6a6'
Assigned 'hdfs' to 'tenantone' with accessId 'tenantone$hdfs'.</msg>
<status status="PASS" starttime="20250721 08:02:54.477" endtime="20250721 08:02:56.720"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250721 08:02:56.721" level="INFO">export AWS_ACCESS_KEY_ID='tenantone$hdfs'
export AWS_SECRET_ACCESS_KEY='68aa705d27f782b95f6993cc94d4dfc2064f69dd1f1d0bfaae6af4b47894b6a6'
Assigned 'hdfs' to 'tenantone' with accessId 'tenantone$hdfs'.</msg>
<status status="PASS" starttime="20250721 08:02:56.720" endtime="20250721 08:02:56.721"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250721 08:02:56.721" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250721 08:02:56.721" endtime="20250721 08:02:56.721"/>
</kw>
<status status="PASS" starttime="20250721 08:02:54.477" endtime="20250721 08:02:56.721"/>
</kw>
<msg timestamp="20250721 08:02:56.722" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250721 08:02:54.476" endtime="20250721 08:02:56.722"/>
</kw>
<msg timestamp="20250721 08:02:56.722" level="INFO">${output} = export AWS_ACCESS_KEY_ID='tenantone$hdfs'
export AWS_SECRET_ACCESS_KEY='68aa705d27f782b95f6993cc94d4dfc2064f69dd1f1d0bfaae6af4b47894b6a6'
Assigned 'hdfs' to 'tenantone' with accessId 'tenantone$hdfs'.</msg>
<status status="PASS" starttime="20250721 08:02:54.475" endtime="20250721 08:02:56.722"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Assigned '${USER}' to '${TENANT}'</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250721 08:02:56.722" endtime="20250721 08:02:56.722"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${accessId}</var>
<arg>${output}</arg>
<arg>(?&lt;=export AWS_ACCESS_KEY_ID=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20250721 08:02:56.723" level="INFO">${accessId} = ["'tenantone$hdfs'"]</msg>
<status status="PASS" starttime="20250721 08:02:56.722" endtime="20250721 08:02:56.723"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secretKey}</var>
<arg>${output}</arg>
<arg>(?&lt;=export AWS_SECRET_ACCESS_KEY=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20250721 08:02:56.724" level="INFO">${secretKey} = ["'68aa705d27f782b95f6993cc94d4dfc2064f69dd1f1d0bfaae6af4b47894b6a6'"]</msg>
<status status="PASS" starttime="20250721 08:02:56.723" endtime="20250721 08:02:56.724"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessId}</var>
<arg>${accessId[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250721 08:02:56.725" level="INFO">${accessId} = 'tenantone$hdfs'</msg>
<status status="PASS" starttime="20250721 08:02:56.724" endtime="20250721 08:02:56.725"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secretKey}</var>
<arg>${secretKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250721 08:02:56.726" level="INFO">${secretKey} = '68aa705d27f782b95f6993cc94d4dfc2064f69dd1f1d0bfaae6af4b47894b6a6'</msg>
<status status="PASS" starttime="20250721 08:02:56.725" endtime="20250721 08:02:56.726"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${ACCESS_ID}</arg>
<arg>${accessId}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250721 08:02:56.726" level="INFO">${ACCESS_ID} = 'tenantone$hdfs'</msg>
<status status="PASS" starttime="20250721 08:02:56.726" endtime="20250721 08:02:56.726"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${SECRET_KEY}</arg>
<arg>${secretKey}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250721 08:02:56.727" level="INFO">${SECRET_KEY} = '68aa705d27f782b95f6993cc94d4dfc2064f69dd1f1d0bfaae6af4b47894b6a6'</msg>
<status status="PASS" starttime="20250721 08:02:56.726" endtime="20250721 08:02:56.727"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250721 08:02:54.475" endtime="20250721 08:02:56.727"/>
</test>
<test id="s1-s4-t4" name="Assign User Failure to Non-existent Tenant" line="52">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>ozone tenant user assign ${USER} --tenant=thistenantdoesnotexist</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250721 08:02:56.730" level="INFO">Running command 'ozone tenant user assign hdfs --tenant=thistenantdoesnotexist 2&gt;&amp;1'.</msg>
<msg timestamp="20250721 08:02:58.890" level="INFO">${rc} = 255</msg>
<msg timestamp="20250721 08:02:58.890" level="INFO">${output} = TENANT_NOT_FOUND Tenant 'thistenantdoesnotexist' doesn't exist.</msg>
<status status="PASS" starttime="20250721 08:02:56.728" endtime="20250721 08:02:58.890"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Tenant 'thistenantdoesnotexist' doesn't exist</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250721 08:02:58.891" endtime="20250721 08:02:58.891"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250721 08:02:56.727" endtime="20250721 08:02:58.891"/>
</test>
<test id="s1-s4-t5" name="GetUserInfo Success" line="56">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone tenant user info ${USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250721 08:02:58.896" level="INFO">Running command 'ozone tenant user info hdfs 2&gt;&amp;1'.</msg>
<msg timestamp="20250721 08:03:00.988" level="INFO">${rc} = 0</msg>
<msg timestamp="20250721 08:03:00.988" level="INFO">${output} = User 'hdfs' is assigned to:
- Tenant 'tenantone' with accessId 'tenantone$hdfs'</msg>
<status status="PASS" starttime="20250721 08:02:58.893" endtime="20250721 08:03:00.988"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250721 08:03:00.989" level="INFO">User 'hdfs' is assigned to:
- Tenant 'tenantone' with accessId 'tenantone$hdfs'</msg>
<status status="PASS" starttime="20250721 08:03:00.989" endtime="20250721 08:03:00.989"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250721 08:03:00.990" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250721 08:03:00.989" endtime="20250721 08:03:00.990"/>
</kw>
<status status="PASS" starttime="20250721 08:02:58.893" endtime="20250721 08:03:00.990"/>
</kw>
<msg timestamp="20250721 08:03:00.990" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250721 08:02:58.893" endtime="20250721 08:03:00.990"/>
</kw>
<msg timestamp="20250721 08:03:00.990" level="INFO">${output} = User 'hdfs' is assigned to:
- Tenant 'tenantone' with accessId 'tenantone$hdfs'</msg>
<status status="PASS" starttime="20250721 08:02:58.892" endtime="20250721 08:03:00.990"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Tenant '${TENANT}' with accessId '${TENANT}$${USER}'</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250721 08:03:00.990" endtime="20250721 08:03:00.991"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250721 08:02:58.892" endtime="20250721 08:03:00.991"/>
</test>
<test id="s1-s4-t6" name="GetUserInfo as JSON Success" line="60">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone tenant user info --json ${USER} | jq '.tenants | .[].accessId'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250721 08:03:00.995" level="INFO">Running command 'ozone tenant user info --json hdfs | jq '.tenants | .[].accessId' 2&gt;&amp;1'.</msg>
<msg timestamp="20250721 08:03:03.264" level="INFO">${rc} = 0</msg>
<msg timestamp="20250721 08:03:03.264" level="INFO">${output} = "tenantone$hdfs"</msg>
<status status="PASS" starttime="20250721 08:03:00.993" endtime="20250721 08:03:03.264"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250721 08:03:03.265" level="INFO">"tenantone$hdfs"</msg>
<status status="PASS" starttime="20250721 08:03:03.265" endtime="20250721 08:03:03.265"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250721 08:03:03.266" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250721 08:03:03.265" endtime="20250721 08:03:03.266"/>
</kw>
<status status="PASS" starttime="20250721 08:03:00.992" endtime="20250721 08:03:03.266"/>
</kw>
<msg timestamp="20250721 08:03:03.266" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250721 08:03:00.992" endtime="20250721 08:03:03.266"/>
</kw>
<msg timestamp="20250721 08:03:03.266" level="INFO">${output} = "tenantone$hdfs"</msg>
<status status="PASS" starttime="20250721 08:03:00.992" endtime="20250721 08:03:03.266"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"${TENANT}$${USER}"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250721 08:03:03.266" endtime="20250721 08:03:03.267"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250721 08:03:00.991" endtime="20250721 08:03:03.267"/>
</test>
<test id="s1-s4-t7" name="Create Bucket 1 Success via S3 API" line="64">
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${ACCESS_ID}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250721 08:03:03.271" level="INFO">Running command 'aws configure set aws_access_key_id 'tenantone$hdfs' 2&gt;&amp;1'.</msg>
<msg timestamp="20250721 08:03:03.804" level="INFO">${rc} = 0</msg>
<msg timestamp="20250721 08:03:03.804" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250721 08:03:03.269" endtime="20250721 08:03:03.804"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250721 08:03:03.805" level="INFO"/>
<status status="PASS" starttime="20250721 08:03:03.805" endtime="20250721 08:03:03.805"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250721 08:03:03.806" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250721 08:03:03.805" endtime="20250721 08:03:03.806"/>
</kw>
<status status="PASS" starttime="20250721 08:03:03.268" endtime="20250721 08:03:03.806"/>
</kw>
<msg timestamp="20250721 08:03:03.806" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250721 08:03:03.268" endtime="20250721 08:03:03.806"/>
</kw>
<status status="PASS" starttime="20250721 08:03:03.268" endtime="20250721 08:03:03.806"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${SECRET_KEY}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250721 08:03:03.810" level="INFO">Running command 'aws configure set aws_secret_access_key '68aa705d27f782b95f6993cc94d4dfc2064f69dd1f1d0bfaae6af4b47894b6a6' 2&gt;&amp;1'.</msg>
<msg timestamp="20250721 08:03:04.184" level="INFO">${rc} = 0</msg>
<msg timestamp="20250721 08:03:04.184" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250721 08:03:03.807" endtime="20250721 08:03:04.184"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250721 08:03:04.185" level="INFO"/>
<status status="PASS" starttime="20250721 08:03:04.184" endtime="20250721 08:03:04.185"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250721 08:03:04.185" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250721 08:03:04.185" endtime="20250721 08:03:04.185"/>
</kw>
<status status="PASS" starttime="20250721 08:03:03.807" endtime="20250721 08:03:04.185"/>
</kw>
<msg timestamp="20250721 08:03:04.185" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250721 08:03:03.807" endtime="20250721 08:03:04.185"/>
</kw>
<status status="PASS" starttime="20250721 08:03:03.806" endtime="20250721 08:03:04.186"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${S3G_ENDPOINT_URL} create-bucket --bucket bucket-test1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250721 08:03:04.189" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-test1 2&gt;&amp;1'.</msg>
<msg timestamp="20250721 08:03:05.447" level="INFO">${rc} = 0</msg>
<msg timestamp="20250721 08:03:05.447" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-test1"
}</msg>
<status status="PASS" starttime="20250721 08:03:04.187" endtime="20250721 08:03:05.447"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250721 08:03:05.448" level="INFO">{
    "Location": "http://s3g:9878/bucket-test1"
}</msg>
<status status="PASS" starttime="20250721 08:03:05.448" endtime="20250721 08:03:05.448"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250721 08:03:05.449" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250721 08:03:05.449" endtime="20250721 08:03:05.449"/>
</kw>
<status status="PASS" starttime="20250721 08:03:04.186" endtime="20250721 08:03:05.449"/>
</kw>
<msg timestamp="20250721 08:03:05.449" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250721 08:03:04.186" endtime="20250721 08:03:05.449"/>
</kw>
<msg timestamp="20250721 08:03:05.449" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-test1"
}</msg>
<status status="PASS" starttime="20250721 08:03:04.186" endtime="20250721 08:03:05.449"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>bucket-test1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250721 08:03:05.449" endtime="20250721 08:03:05.450"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${S3G_ENDPOINT_URL} list-buckets</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250721 08:03:05.453" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-buckets 2&gt;&amp;1'.</msg>
<msg timestamp="20250721 08:03:06.020" level="INFO">${rc} = 0</msg>
<msg timestamp="20250721 08:03:06.020" level="INFO">${output} = {
    "Buckets": [
        {
            "Name": "bucket-test1",
            "CreationDate": "2025-07-21T08:03:05.349Z"
        }
    ],
    "Owner": {
        "DisplayName": "hdfs",
        "ID": "bb...</msg>
<status status="PASS" starttime="20250721 08:03:05.451" endtime="20250721 08:03:06.020"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250721 08:03:06.021" level="INFO">{
    "Buckets": [
        {
            "Name": "bucket-test1",
            "CreationDate": "2025-07-21T08:03:05.349Z"
        }
    ],
    "Owner": {
        "DisplayName": "hdfs",
        "ID": "bb2bd7ca4a327f84e6cd3979f8fa3828a50a08893c1b68f9d6715352c8d07b93"
    },
    "Prefix": null
}</msg>
<status status="PASS" starttime="20250721 08:03:06.021" endtime="20250721 08:03:06.021"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250721 08:03:06.022" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250721 08:03:06.021" endtime="20250721 08:03:06.022"/>
</kw>
<status status="PASS" starttime="20250721 08:03:05.450" endtime="20250721 08:03:06.022"/>
</kw>
<msg timestamp="20250721 08:03:06.022" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250721 08:03:05.450" endtime="20250721 08:03:06.022"/>
</kw>
<msg timestamp="20250721 08:03:06.022" level="INFO">${output} = {
    "Buckets": [
        {
            "Name": "bucket-test1",
            "CreationDate": "2025-07-21T08:03:05.349Z"
        }
    ],
    "Owner": {
        "DisplayName": "hdfs",
        "ID": "bb...</msg>
<status status="PASS" starttime="20250721 08:03:05.450" endtime="20250721 08:03:06.022"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>bucket-test1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250721 08:03:06.022" endtime="20250721 08:03:06.023"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250721 08:03:03.267" endtime="20250721 08:03:06.023"/>
</test>
<test id="s1-s4-t8" name="Verify Bucket 1 Owner" line="72">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info /${TENANT}/bucket-test1 | jq -r '.owner'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250721 08:03:06.027" level="INFO">Running command 'ozone sh bucket info /tenantone/bucket-test1 | jq -r '.owner' 2&gt;&amp;1'.</msg>
<msg timestamp="20250721 08:03:08.345" level="INFO">${rc} = 0</msg>
<msg timestamp="20250721 08:03:08.345" level="INFO">${output} = hdfs</msg>
<status status="PASS" starttime="20250721 08:03:06.025" endtime="20250721 08:03:08.345"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250721 08:03:08.346" level="INFO">hdfs</msg>
<status status="PASS" starttime="20250721 08:03:08.346" endtime="20250721 08:03:08.347"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250721 08:03:08.347" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250721 08:03:08.347" endtime="20250721 08:03:08.347"/>
</kw>
<status status="PASS" starttime="20250721 08:03:06.025" endtime="20250721 08:03:08.347"/>
</kw>
<msg timestamp="20250721 08:03:08.347" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250721 08:03:06.024" endtime="20250721 08:03:08.347"/>
</kw>
<msg timestamp="20250721 08:03:08.347" level="INFO">${result} = hdfs</msg>
<status status="PASS" starttime="20250721 08:03:06.024" endtime="20250721 08:03:08.347"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${USER}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250721 08:03:08.348" endtime="20250721 08:03:08.348"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250721 08:03:06.023" endtime="20250721 08:03:08.348"/>
</test>
<test id="s1-s4-t9" name="Put a key in the tenant bucket" line="76">
<kw name="Execute" library="os">
<arg>echo "Randomtext" &gt; /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250721 08:03:08.352" level="INFO">Running command 'echo "Randomtext" &gt; /tmp/testfile'.</msg>
<msg timestamp="20250721 08:03:08.354" level="INFO">${rc} = 0</msg>
<msg timestamp="20250721 08:03:08.355" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250721 08:03:08.350" endtime="20250721 08:03:08.355"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250721 08:03:08.355" level="INFO"/>
<status status="PASS" starttime="20250721 08:03:08.355" endtime="20250721 08:03:08.355"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250721 08:03:08.356" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250721 08:03:08.355" endtime="20250721 08:03:08.356"/>
</kw>
<status status="PASS" starttime="20250721 08:03:08.350" endtime="20250721 08:03:08.356"/>
</kw>
<msg timestamp="20250721 08:03:08.356" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250721 08:03:08.349" endtime="20250721 08:03:08.356"/>
</kw>
<status status="PASS" starttime="20250721 08:03:08.349" endtime="20250721 08:03:08.356"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>aws s3api --endpoint-url ${S3G_ENDPOINT_URL} put-object --bucket bucket-test1 --key mykey --body /tmp/testfile</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250721 08:03:08.359" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket bucket-test1 --key mykey --body /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20250721 08:03:10.387" level="INFO">${rc} = 0</msg>
<msg timestamp="20250721 08:03:10.387" level="INFO">${output} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20250721 08:03:08.357" endtime="20250721 08:03:10.387"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250721 08:03:10.388" level="INFO">{
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20250721 08:03:10.388" endtime="20250721 08:03:10.388"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250721 08:03:10.389" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250721 08:03:10.389" endtime="20250721 08:03:10.389"/>
</kw>
<status status="PASS" starttime="20250721 08:03:08.356" endtime="20250721 08:03:10.389"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250721 08:03:08.349" endtime="20250721 08:03:10.390"/>
</test>
<test id="s1-s4-t10" name="Verify Object Owner" line="80">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info /${TENANT}/bucket-test1/mykey | jq -r '.owner'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250721 08:03:10.395" level="INFO">Running command 'ozone sh key info /tenantone/bucket-test1/mykey | jq -r '.owner' 2&gt;&amp;1'.</msg>
<msg timestamp="20250721 08:03:12.810" level="INFO">${rc} = 0</msg>
<msg timestamp="20250721 08:03:12.810" level="INFO">${output} = hdfs</msg>
<status status="PASS" starttime="20250721 08:03:10.392" endtime="20250721 08:03:12.810"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250721 08:03:12.811" level="INFO">hdfs</msg>
<status status="PASS" starttime="20250721 08:03:12.810" endtime="20250721 08:03:12.811"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250721 08:03:12.811" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250721 08:03:12.811" endtime="20250721 08:03:12.811"/>
</kw>
<status status="PASS" starttime="20250721 08:03:10.392" endtime="20250721 08:03:12.812"/>
</kw>
<msg timestamp="20250721 08:03:12.812" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250721 08:03:10.391" endtime="20250721 08:03:12.812"/>
</kw>
<msg timestamp="20250721 08:03:12.812" level="INFO">${result} = hdfs</msg>
<status status="PASS" starttime="20250721 08:03:10.391" endtime="20250721 08:03:12.812"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${USER}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250721 08:03:12.812" endtime="20250721 08:03:12.812"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250721 08:03:10.390" endtime="20250721 08:03:12.812"/>
</test>
<test id="s1-s4-t11" name="Get and delete a key in the tenant bucket" line="84">
<kw name="Execute and checkrc" library="os">
<arg>aws s3api --endpoint-url ${S3G_ENDPOINT_URL} head-object --bucket bucket-test1 --key mykey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250721 08:03:12.816" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket bucket-test1 --key mykey 2&gt;&amp;1'.</msg>
<msg timestamp="20250721 08:03:13.349" level="INFO">${rc} = 0</msg>
<msg timestamp="20250721 08:03:13.350" level="INFO">${output} = {
    "LastModified": "Mon, 21 Jul 2025 08:03:10 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20250721 08:03:12.814" endtime="20250721 08:03:13.350"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250721 08:03:13.350" level="INFO">{
    "LastModified": "Mon, 21 Jul 2025 08:03:10 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-stream",
    "Expires": "Mon, 21 Jul 2025 08:03:13 GMT",
    "Metadata": {},
    "StorageClass": "STANDARD",
    "ExpiresString": "Mon, 21 Jul 2025 08:03:13 GMT"
}</msg>
<status status="PASS" starttime="20250721 08:03:13.350" endtime="20250721 08:03:13.351"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250721 08:03:13.351" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250721 08:03:13.351" endtime="20250721 08:03:13.351"/>
</kw>
<status status="PASS" starttime="20250721 08:03:12.813" endtime="20250721 08:03:13.351"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>aws s3api --endpoint-url ${S3G_ENDPOINT_URL} delete-object --bucket bucket-test1 --key mykey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250721 08:03:13.354" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-object --bucket bucket-test1 --key mykey 2&gt;&amp;1'.</msg>
<msg timestamp="20250721 08:03:13.905" level="INFO">${rc} = 0</msg>
<msg timestamp="20250721 08:03:13.905" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250721 08:03:13.352" endtime="20250721 08:03:13.905"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250721 08:03:13.906" level="INFO"/>
<status status="PASS" starttime="20250721 08:03:13.906" endtime="20250721 08:03:13.907"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250721 08:03:13.907" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250721 08:03:13.907" endtime="20250721 08:03:13.907"/>
</kw>
<status status="PASS" starttime="20250721 08:03:13.351" endtime="20250721 08:03:13.907"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250721 08:03:12.813" endtime="20250721 08:03:13.908"/>
</test>
<test id="s1-s4-t12" name="SetSecret Success with Cluster Admin" line="88">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone tenant user setsecret '${TENANT}$${USER}' --secret=somesecret1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250721 08:03:13.912" level="INFO">Running command 'ozone tenant user setsecret 'tenantone$hdfs' --secret=somesecret1 2&gt;&amp;1'.</msg>
<msg timestamp="20250721 08:03:15.985" level="INFO">${rc} = 0</msg>
<msg timestamp="20250721 08:03:15.985" level="INFO">${output} = export AWS_ACCESS_KEY_ID='tenantone$hdfs'
export AWS_SECRET_ACCESS_KEY='somesecret1'</msg>
<status status="PASS" starttime="20250721 08:03:13.910" endtime="20250721 08:03:15.986"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250721 08:03:15.987" level="INFO">export AWS_ACCESS_KEY_ID='tenantone$hdfs'
export AWS_SECRET_ACCESS_KEY='somesecret1'</msg>
<status status="PASS" starttime="20250721 08:03:15.986" endtime="20250721 08:03:15.987"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250721 08:03:15.987" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250721 08:03:15.987" endtime="20250721 08:03:15.987"/>
</kw>
<status status="PASS" starttime="20250721 08:03:13.909" endtime="20250721 08:03:15.987"/>
</kw>
<msg timestamp="20250721 08:03:15.987" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250721 08:03:13.909" endtime="20250721 08:03:15.988"/>
</kw>
<msg timestamp="20250721 08:03:15.988" level="INFO">${output} = export AWS_ACCESS_KEY_ID='tenantone$hdfs'
export AWS_SECRET_ACCESS_KEY='somesecret1'</msg>
<status status="PASS" starttime="20250721 08:03:13.909" endtime="20250721 08:03:15.988"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>export AWS_SECRET_ACCESS_KEY='somesecret1'</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250721 08:03:15.988" endtime="20250721 08:03:15.988"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250721 08:03:13.908" endtime="20250721 08:03:15.988"/>
</test>
<test id="s1-s4-t13" name="SetSecret Failure For Invalid Secret 1" line="92">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>ozone tenant user setsecret '${TENANT}$${USER}' --secret=''</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250721 08:03:15.992" level="INFO">Running command 'ozone tenant user setsecret 'tenantone$hdfs' --secret='' 2&gt;&amp;1'.</msg>
<msg timestamp="20250721 08:03:18.133" level="INFO">${rc} = 255</msg>
<msg timestamp="20250721 08:03:18.134" level="INFO">${output} = secretKey cannot be null or empty.</msg>
<status status="PASS" starttime="20250721 08:03:15.989" endtime="20250721 08:03:18.134"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>secretKey cannot be null or empty.</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250721 08:03:18.134" endtime="20250721 08:03:18.135"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250721 08:03:15.989" endtime="20250721 08:03:18.135"/>
</test>
<test id="s1-s4-t14" name="SetSecret Failure For Invalid Secret 2" line="96">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>ozone tenant user setsecret '${TENANT}$${USER}' --secret=short</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250721 08:03:18.139" level="INFO">Running command 'ozone tenant user setsecret 'tenantone$hdfs' --secret=short 2&gt;&amp;1'.</msg>
<msg timestamp="20250721 08:03:20.383" level="INFO">${rc} = 255</msg>
<msg timestamp="20250721 08:03:20.383" level="INFO">${output} = INVALID_REQUEST Secret key length should be at least 8 characters</msg>
<status status="PASS" starttime="20250721 08:03:18.136" endtime="20250721 08:03:20.383"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Secret key length should be at least 8 characters</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250721 08:03:20.384" endtime="20250721 08:03:20.384"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250721 08:03:18.135" endtime="20250721 08:03:20.385"/>
</test>
<test id="s1-s4-t15" name="GetSecret Success" line="100">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone tenant user getsecret '${TENANT}$${USER}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250721 08:03:20.389" level="INFO">Running command 'ozone tenant user getsecret 'tenantone$hdfs' 2&gt;&amp;1'.</msg>
<msg timestamp="20250721 08:03:22.463" level="INFO">${rc} = 0</msg>
<msg timestamp="20250721 08:03:22.463" level="INFO">${output} = export AWS_ACCESS_KEY_ID='tenantone$hdfs'
export AWS_SECRET_ACCESS_KEY='somesecret1'</msg>
<status status="PASS" starttime="20250721 08:03:20.387" endtime="20250721 08:03:22.463"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250721 08:03:22.464" level="INFO">export AWS_ACCESS_KEY_ID='tenantone$hdfs'
export AWS_SECRET_ACCESS_KEY='somesecret1'</msg>
<status status="PASS" starttime="20250721 08:03:22.463" endtime="20250721 08:03:22.464"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250721 08:03:22.464" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250721 08:03:22.464" endtime="20250721 08:03:22.464"/>
</kw>
<status status="PASS" starttime="20250721 08:03:20.386" endtime="20250721 08:03:22.464"/>
</kw>
<msg timestamp="20250721 08:03:22.464" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250721 08:03:20.386" endtime="20250721 08:03:22.465"/>
</kw>
<msg timestamp="20250721 08:03:22.465" level="INFO">${output} = export AWS_ACCESS_KEY_ID='tenantone$hdfs'
export AWS_SECRET_ACCESS_KEY='somesecret1'</msg>
<status status="PASS" starttime="20250721 08:03:20.386" endtime="20250721 08:03:22.465"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>export AWS_SECRET_ACCESS_KEY='somesecret1'</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250721 08:03:22.465" endtime="20250721 08:03:22.465"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250721 08:03:20.385" endtime="20250721 08:03:22.465"/>
</test>
<test id="s1-s4-t16" name="Delete Bucket 1 Failure With Old SecretKey via S3 API" line="104">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>aws s3api --endpoint-url ${S3G_ENDPOINT_URL} delete-bucket --bucket bucket-test1</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250721 08:03:22.469" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-bucket --bucket bucket-test1 2&gt;&amp;1'.</msg>
<msg timestamp="20250721 08:03:23.123" level="INFO">${rc} = 255</msg>
<msg timestamp="20250721 08:03:23.123" level="INFO">${output} = 
An error occurred (AccessDenied) when calling the DeleteBucket operation: User doesn't have the right to access this resource.</msg>
<status status="PASS" starttime="20250721 08:03:22.466" endtime="20250721 08:03:23.123"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${rc} &gt; 0</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20250721 08:03:23.123" endtime="20250721 08:03:23.125"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250721 08:03:22.466" endtime="20250721 08:03:23.125"/>
</test>
<test id="s1-s4-t17" name="Delete Bucket 1 Success With Newly Set SecretKey via S3 API" line="108">
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key 'somesecret1'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250721 08:03:23.129" level="INFO">Running command 'aws configure set aws_secret_access_key 'somesecret1' 2&gt;&amp;1'.</msg>
<msg timestamp="20250721 08:03:23.504" level="INFO">${rc} = 0</msg>
<msg timestamp="20250721 08:03:23.504" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250721 08:03:23.127" endtime="20250721 08:03:23.504"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250721 08:03:23.505" level="INFO"/>
<status status="PASS" starttime="20250721 08:03:23.505" endtime="20250721 08:03:23.505"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250721 08:03:23.506" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250721 08:03:23.505" endtime="20250721 08:03:23.506"/>
</kw>
<status status="PASS" starttime="20250721 08:03:23.126" endtime="20250721 08:03:23.506"/>
</kw>
<msg timestamp="20250721 08:03:23.506" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250721 08:03:23.126" endtime="20250721 08:03:23.506"/>
</kw>
<status status="PASS" starttime="20250721 08:03:23.126" endtime="20250721 08:03:23.506"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${S3G_ENDPOINT_URL} delete-bucket --bucket bucket-test1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250721 08:03:23.510" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-bucket --bucket bucket-test1 2&gt;&amp;1'.</msg>
<msg timestamp="20250721 08:03:24.068" level="INFO">${rc} = 0</msg>
<msg timestamp="20250721 08:03:24.068" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250721 08:03:23.507" endtime="20250721 08:03:24.068"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250721 08:03:24.069" level="INFO"/>
<status status="PASS" starttime="20250721 08:03:24.068" endtime="20250721 08:03:24.069"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250721 08:03:24.069" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250721 08:03:24.069" endtime="20250721 08:03:24.069"/>
</kw>
<status status="PASS" starttime="20250721 08:03:23.507" endtime="20250721 08:03:24.070"/>
</kw>
<msg timestamp="20250721 08:03:24.070" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250721 08:03:23.507" endtime="20250721 08:03:24.070"/>
</kw>
<msg timestamp="20250721 08:03:24.070" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250721 08:03:23.506" endtime="20250721 08:03:24.070"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250721 08:03:23.125" endtime="20250721 08:03:24.070"/>
</test>
<test id="s1-s4-t18" name="Delete Tenant Failure Tenant Not Empty" line="112">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>ozone tenant delete ${TENANT}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250721 08:03:24.074" level="INFO">Running command 'ozone tenant delete tenantone 2&gt;&amp;1'.</msg>
<msg timestamp="20250721 08:03:26.237" level="INFO">${rc} = 255</msg>
<msg timestamp="20250721 08:03:26.237" level="INFO">${output} = TENANT_NOT_EMPTY Tenant 'tenantone' is not empty. All accessIds associated to this tenant must be revoked before the tenant can be deleted. See `ozone tenant user revoke`</msg>
<status status="PASS" starttime="20250721 08:03:24.071" endtime="20250721 08:03:26.237"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>TENANT_NOT_EMPTY Tenant '${TENANT}' is not empty. All accessIds associated to this tenant must be revoked before the tenant can be deleted. See `ozone tenant user revoke`</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250721 08:03:26.238" endtime="20250721 08:03:26.238"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250721 08:03:24.071" endtime="20250721 08:03:26.238"/>
</test>
<test id="s1-s4-t19" name="Trigger and wait for background Sync to recover Policies and Roles in Authorizer" line="116">
<kw name="Get OM Service Param" library="lib">
<var>${om_param}</var>
<kw name="Get OM Service ID" library="lib">
<var>${service_id}</var>
<kw name="Get Environment Variable" library="OperatingSystem">
<var>${service_id}</var>
<arg>OM_SERVICE_ID</arg>
<arg>${EMPTY}</arg>
<doc>Returns the value of an environment variable with the given name.</doc>
<msg timestamp="20250721 08:03:26.242" level="INFO">${service_id} = omservice</msg>
<status status="PASS" starttime="20250721 08:03:26.241" endtime="20250721 08:03:26.242"/>
</kw>
<return>
<value>${service_id}</value>
<status status="PASS" starttime="20250721 08:03:26.242" endtime="20250721 08:03:26.242"/>
</return>
<msg timestamp="20250721 08:03:26.242" level="INFO">${service_id} = omservice</msg>
<status status="PASS" starttime="20250721 08:03:26.240" endtime="20250721 08:03:26.242"/>
</kw>
<if>
<branch type="IF" condition="'${service_id}' == ''">
<return>
<value>--service-host om</value>
<status status="NOT RUN" starttime="20250721 08:03:26.243" endtime="20250721 08:03:26.243"/>
</return>
<status status="NOT RUN" starttime="20250721 08:03:26.242" endtime="20250721 08:03:26.243"/>
</branch>
<branch type="ELSE">
<return>
<value>--service-id '${service_id}'</value>
<status status="PASS" starttime="20250721 08:03:26.243" endtime="20250721 08:03:26.243"/>
</return>
<status status="PASS" starttime="20250721 08:03:26.243" endtime="20250721 08:03:26.243"/>
</branch>
<status status="PASS" starttime="20250721 08:03:26.242" endtime="20250721 08:03:26.243"/>
</if>
<msg timestamp="20250721 08:03:26.243" level="INFO">${om_param} = --service-id 'omservice'</msg>
<status status="PASS" starttime="20250721 08:03:26.240" endtime="20250721 08:03:26.243"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>ozone admin om updateranger ${om_param}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250721 08:03:26.246" level="INFO">Running command 'ozone admin om updateranger --service-id 'omservice' 2&gt;&amp;1'.</msg>
<msg timestamp="20250721 08:03:28.242" level="INFO">${rc} = 0</msg>
<msg timestamp="20250721 08:03:28.242" level="INFO">${output} = Operation completed successfully</msg>
<status status="PASS" starttime="20250721 08:03:26.243" endtime="20250721 08:03:28.242"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Operation completed successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250721 08:03:28.242" endtime="20250721 08:03:28.243"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250721 08:03:26.239" endtime="20250721 08:03:28.243"/>
</test>
<test id="s1-s4-t20" name="Create Tenant Failure with Regular User" line="121">
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Get Security Enabled From Config" library="commonlib">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' != ''</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20250721 08:03:28.245" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250721 08:03:28.245" endtime="20250721 08:03:28.245"/>
</kw>
<kw name="Execute" library="os">
<var>${value}</var>
<arg>ozone getconf confKey ozone.security.enabled</arg>
<status status="NOT RUN" starttime="20250721 08:03:28.246" endtime="20250721 08:03:28.246"/>
</kw>
<if>
<branch type="IF" condition="'${value}' != 'true' and '${value}' != 'false'">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>false</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20250721 08:03:28.246" endtime="20250721 08:03:28.246"/>
</kw>
<status status="NOT RUN" starttime="20250721 08:03:28.246" endtime="20250721 08:03:28.246"/>
</branch>
<status status="NOT RUN" starttime="20250721 08:03:28.246" endtime="20250721 08:03:28.246"/>
</if>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${SECURITY_ENABLED}</arg>
<arg>${value}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20250721 08:03:28.246" endtime="20250721 08:03:28.246"/>
</kw>
<status status="PASS" starttime="20250721 08:03:28.245" endtime="20250721 08:03:28.246"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250721 08:03:28.246" endtime="20250721 08:03:28.247"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250721 08:03:28.251" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250721 08:03:28.255" level="INFO">${rc} = 0</msg>
<msg timestamp="20250721 08:03:28.255" level="INFO">${output} = s3g</msg>
<status status="PASS" starttime="20250721 08:03:28.248" endtime="20250721 08:03:28.255"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250721 08:03:28.255" level="INFO">s3g</msg>
<status status="PASS" starttime="20250721 08:03:28.255" endtime="20250721 08:03:28.255"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250721 08:03:28.256" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250721 08:03:28.255" endtime="20250721 08:03:28.256"/>
</kw>
<status status="PASS" starttime="20250721 08:03:28.247" endtime="20250721 08:03:28.256"/>
</kw>
<msg timestamp="20250721 08:03:28.256" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250721 08:03:28.247" endtime="20250721 08:03:28.256"/>
</kw>
<msg timestamp="20250721 08:03:28.256" level="INFO">${instance} = s3g</msg>
<status status="PASS" starttime="20250721 08:03:28.247" endtime="20250721 08:03:28.256"/>
</kw>
<msg timestamp="20250721 08:03:28.257" level="INFO">${TEST_USER} = testuser2/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250721 08:03:28.247" endtime="20250721 08:03:28.257"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250721 08:03:28.257" level="INFO">${TEST_USER} = testuser2/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250721 08:03:28.257" endtime="20250721 08:03:28.257"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250721 08:03:28.260" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser2.keytab testuser2/s3g@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250721 08:03:28.296" level="INFO">${rc} = 0</msg>
<msg timestamp="20250721 08:03:28.296" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250721 08:03:28.258" endtime="20250721 08:03:28.296"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250721 08:03:28.297" level="INFO"/>
<status status="PASS" starttime="20250721 08:03:28.296" endtime="20250721 08:03:28.297"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250721 08:03:28.297" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250721 08:03:28.297" endtime="20250721 08:03:28.297"/>
</kw>
<status status="PASS" starttime="20250721 08:03:28.258" endtime="20250721 08:03:28.297"/>
</kw>
<msg timestamp="20250721 08:03:28.297" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250721 08:03:28.258" endtime="20250721 08:03:28.297"/>
</kw>
<status status="PASS" starttime="20250721 08:03:28.257" endtime="20250721 08:03:28.298"/>
</kw>
<status status="PASS" starttime="20250721 08:03:28.257" endtime="20250721 08:03:28.298"/>
</kw>
<status status="PASS" starttime="20250721 08:03:28.244" endtime="20250721 08:03:28.298"/>
</kw>
<status status="PASS" starttime="20250721 08:03:28.244" endtime="20250721 08:03:28.298"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>ozone tenant create tenanttwo</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250721 08:03:28.300" level="INFO">Running command 'ozone tenant create tenanttwo 2&gt;&amp;1'.</msg>
<msg timestamp="20250721 08:03:30.371" level="INFO">${rc} = 255</msg>
<msg timestamp="20250721 08:03:30.371" level="INFO">${output} = PERMISSION_DENIED User 'testuser2' is not an Ozone admin</msg>
<status status="PASS" starttime="20250721 08:03:28.298" endtime="20250721 08:03:30.371"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>PERMISSION_DENIED User 'testuser2' is not an Ozone admin</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250721 08:03:30.371" endtime="20250721 08:03:30.372"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250721 08:03:28.244" endtime="20250721 08:03:30.372"/>
</test>
<test id="s1-s4-t21" name="SetSecret Failure with Regular User" line="126">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>ozone tenant user set-secret '${TENANT}$${USER}' --secret=somesecret2</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250721 08:03:30.376" level="INFO">Running command 'ozone tenant user set-secret 'tenantone$hdfs' --secret=somesecret2 2&gt;&amp;1'.</msg>
<msg timestamp="20250721 08:03:32.408" level="INFO">${rc} = 255</msg>
<msg timestamp="20250721 08:03:32.408" level="INFO">${output} = USER_MISMATCH Requested accessId 'tenantone$hdfs' doesn't belong to current user 'testuser2', nor does current user have Ozone or tenant administrator privilege</msg>
<status status="PASS" starttime="20250721 08:03:30.373" endtime="20250721 08:03:32.408"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>USER_MISMATCH Requested accessId '${TENANT}$${USER}' doesn't belong to current user 'testuser2', nor does current user have Ozone or tenant administrator privilege</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250721 08:03:32.409" endtime="20250721 08:03:32.409"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250721 08:03:30.373" endtime="20250721 08:03:32.410"/>
</test>
<test id="s1-s4-t22" name="Create Bucket 2 Success with somesecret1 via S3 API" line="130">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${S3G_ENDPOINT_URL} create-bucket --bucket bucket-test2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250721 08:03:32.414" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-test2 2&gt;&amp;1'.</msg>
<msg timestamp="20250721 08:03:32.956" level="INFO">${rc} = 0</msg>
<msg timestamp="20250721 08:03:32.956" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-test2"
}</msg>
<status status="PASS" starttime="20250721 08:03:32.412" endtime="20250721 08:03:32.956"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250721 08:03:32.957" level="INFO">{
    "Location": "http://s3g:9878/bucket-test2"
}</msg>
<status status="PASS" starttime="20250721 08:03:32.956" endtime="20250721 08:03:32.957"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250721 08:03:32.958" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250721 08:03:32.957" endtime="20250721 08:03:32.958"/>
</kw>
<status status="PASS" starttime="20250721 08:03:32.411" endtime="20250721 08:03:32.958"/>
</kw>
<msg timestamp="20250721 08:03:32.958" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250721 08:03:32.411" endtime="20250721 08:03:32.958"/>
</kw>
<msg timestamp="20250721 08:03:32.958" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-test2"
}</msg>
<status status="PASS" starttime="20250721 08:03:32.411" endtime="20250721 08:03:32.958"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>bucket-test2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250721 08:03:32.958" endtime="20250721 08:03:32.958"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250721 08:03:32.410" endtime="20250721 08:03:32.959"/>
</test>
<test id="s1-s4-t23" name="Delete Bucket 2 Failure with somesecret2 via S3 API" line="134">
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key 'somesecret2'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250721 08:03:32.963" level="INFO">Running command 'aws configure set aws_secret_access_key 'somesecret2' 2&gt;&amp;1'.</msg>
<msg timestamp="20250721 08:03:33.340" level="INFO">${rc} = 0</msg>
<msg timestamp="20250721 08:03:33.340" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250721 08:03:32.960" endtime="20250721 08:03:33.340"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250721 08:03:33.341" level="INFO"/>
<status status="PASS" starttime="20250721 08:03:33.340" endtime="20250721 08:03:33.341"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250721 08:03:33.341" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250721 08:03:33.341" endtime="20250721 08:03:33.341"/>
</kw>
<status status="PASS" starttime="20250721 08:03:32.960" endtime="20250721 08:03:33.342"/>
</kw>
<msg timestamp="20250721 08:03:33.342" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250721 08:03:32.960" endtime="20250721 08:03:33.342"/>
</kw>
<status status="PASS" starttime="20250721 08:03:32.960" endtime="20250721 08:03:33.342"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>aws s3api --endpoint-url ${S3G_ENDPOINT_URL} delete-bucket --bucket bucket-test2</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250721 08:03:33.344" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-bucket --bucket bucket-test2 2&gt;&amp;1'.</msg>
<msg timestamp="20250721 08:03:33.857" level="INFO">${rc} = 255</msg>
<msg timestamp="20250721 08:03:33.857" level="INFO">${output} = 
An error occurred (AccessDenied) when calling the DeleteBucket operation: User doesn't have the right to access this resource.</msg>
<status status="PASS" starttime="20250721 08:03:33.342" endtime="20250721 08:03:33.858"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${rc} &gt; 0</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20250721 08:03:33.858" endtime="20250721 08:03:33.859"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250721 08:03:32.959" endtime="20250721 08:03:33.859"/>
</test>
<test id="s1-s4-t24" name="Delete Bucket 2 Success with somesecret1 via S3 API" line="139">
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key 'somesecret1'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250721 08:03:33.863" level="INFO">Running command 'aws configure set aws_secret_access_key 'somesecret1' 2&gt;&amp;1'.</msg>
<msg timestamp="20250721 08:03:34.239" level="INFO">${rc} = 0</msg>
<msg timestamp="20250721 08:03:34.239" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250721 08:03:33.861" endtime="20250721 08:03:34.239"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250721 08:03:34.240" level="INFO"/>
<status status="PASS" starttime="20250721 08:03:34.240" endtime="20250721 08:03:34.240"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250721 08:03:34.241" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250721 08:03:34.241" endtime="20250721 08:03:34.241"/>
</kw>
<status status="PASS" starttime="20250721 08:03:33.860" endtime="20250721 08:03:34.241"/>
</kw>
<msg timestamp="20250721 08:03:34.241" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250721 08:03:33.860" endtime="20250721 08:03:34.241"/>
</kw>
<status status="PASS" starttime="20250721 08:03:33.860" endtime="20250721 08:03:34.241"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${S3G_ENDPOINT_URL} delete-bucket --bucket bucket-test2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250721 08:03:34.245" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-bucket --bucket bucket-test2 2&gt;&amp;1'.</msg>
<msg timestamp="20250721 08:03:34.781" level="INFO">${rc} = 0</msg>
<msg timestamp="20250721 08:03:34.781" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250721 08:03:34.242" endtime="20250721 08:03:34.781"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250721 08:03:34.782" level="INFO"/>
<status status="PASS" starttime="20250721 08:03:34.782" endtime="20250721 08:03:34.782"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250721 08:03:34.783" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250721 08:03:34.783" endtime="20250721 08:03:34.783"/>
</kw>
<status status="PASS" starttime="20250721 08:03:34.242" endtime="20250721 08:03:34.783"/>
</kw>
<msg timestamp="20250721 08:03:34.783" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250721 08:03:34.242" endtime="20250721 08:03:34.783"/>
</kw>
<msg timestamp="20250721 08:03:34.783" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250721 08:03:34.241" endtime="20250721 08:03:34.783"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250721 08:03:33.859" endtime="20250721 08:03:34.784"/>
</test>
<test id="s1-s4-t25" name="Revoke User AccessId Success with Cluster Admin" line="143">
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>${USER}</arg>
<arg>${USER}.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>${USER}</arg>
<arg>${USER}.keytab</arg>
<kw name="Get Security Enabled From Config" library="commonlib">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' != ''</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20250721 08:03:34.786" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250721 08:03:34.786" endtime="20250721 08:03:34.786"/>
</kw>
<kw name="Execute" library="os">
<var>${value}</var>
<arg>ozone getconf confKey ozone.security.enabled</arg>
<status status="NOT RUN" starttime="20250721 08:03:34.786" endtime="20250721 08:03:34.786"/>
</kw>
<if>
<branch type="IF" condition="'${value}' != 'true' and '${value}' != 'false'">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>false</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20250721 08:03:34.786" endtime="20250721 08:03:34.786"/>
</kw>
<status status="NOT RUN" starttime="20250721 08:03:34.786" endtime="20250721 08:03:34.786"/>
</branch>
<status status="NOT RUN" starttime="20250721 08:03:34.786" endtime="20250721 08:03:34.786"/>
</if>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${SECURITY_ENABLED}</arg>
<arg>${value}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20250721 08:03:34.786" endtime="20250721 08:03:34.787"/>
</kw>
<status status="PASS" starttime="20250721 08:03:34.785" endtime="20250721 08:03:34.787"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250721 08:03:34.787" endtime="20250721 08:03:34.787"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250721 08:03:34.791" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250721 08:03:34.794" level="INFO">${rc} = 0</msg>
<msg timestamp="20250721 08:03:34.794" level="INFO">${output} = s3g</msg>
<status status="PASS" starttime="20250721 08:03:34.788" endtime="20250721 08:03:34.794"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250721 08:03:34.795" level="INFO">s3g</msg>
<status status="PASS" starttime="20250721 08:03:34.795" endtime="20250721 08:03:34.795"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250721 08:03:34.796" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250721 08:03:34.795" endtime="20250721 08:03:34.796"/>
</kw>
<status status="PASS" starttime="20250721 08:03:34.788" endtime="20250721 08:03:34.796"/>
</kw>
<msg timestamp="20250721 08:03:34.796" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250721 08:03:34.788" endtime="20250721 08:03:34.796"/>
</kw>
<msg timestamp="20250721 08:03:34.796" level="INFO">${instance} = s3g</msg>
<status status="PASS" starttime="20250721 08:03:34.787" endtime="20250721 08:03:34.796"/>
</kw>
<msg timestamp="20250721 08:03:34.796" level="INFO">${TEST_USER} = hdfs/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250721 08:03:34.787" endtime="20250721 08:03:34.796"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250721 08:03:34.797" level="INFO">${TEST_USER} = hdfs/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250721 08:03:34.797" endtime="20250721 08:03:34.797"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250721 08:03:34.800" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/hdfs.keytab hdfs/s3g@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250721 08:03:34.827" level="INFO">${rc} = 0</msg>
<msg timestamp="20250721 08:03:34.827" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250721 08:03:34.798" endtime="20250721 08:03:34.827"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250721 08:03:34.828" level="INFO"/>
<status status="PASS" starttime="20250721 08:03:34.828" endtime="20250721 08:03:34.828"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250721 08:03:34.829" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250721 08:03:34.828" endtime="20250721 08:03:34.829"/>
</kw>
<status status="PASS" starttime="20250721 08:03:34.798" endtime="20250721 08:03:34.829"/>
</kw>
<msg timestamp="20250721 08:03:34.829" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250721 08:03:34.798" endtime="20250721 08:03:34.829"/>
</kw>
<status status="PASS" starttime="20250721 08:03:34.797" endtime="20250721 08:03:34.829"/>
</kw>
<status status="PASS" starttime="20250721 08:03:34.797" endtime="20250721 08:03:34.829"/>
</kw>
<status status="PASS" starttime="20250721 08:03:34.785" endtime="20250721 08:03:34.829"/>
</kw>
<status status="PASS" starttime="20250721 08:03:34.785" endtime="20250721 08:03:34.829"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone tenant --verbose user revoke '${TENANT}$${USER}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250721 08:03:34.832" level="INFO">Running command 'ozone tenant --verbose user revoke 'tenantone$hdfs' 2&gt;&amp;1'.</msg>
<msg timestamp="20250721 08:03:37.029" level="INFO">${rc} = 0</msg>
<msg timestamp="20250721 08:03:37.029" level="INFO">${output} = Revoked accessId 'tenantone$hdfs'.</msg>
<status status="PASS" starttime="20250721 08:03:34.830" endtime="20250721 08:03:37.029"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250721 08:03:37.030" level="INFO">Revoked accessId 'tenantone$hdfs'.</msg>
<status status="PASS" starttime="20250721 08:03:37.030" endtime="20250721 08:03:37.031"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250721 08:03:37.032" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250721 08:03:37.031" endtime="20250721 08:03:37.032"/>
</kw>
<status status="PASS" starttime="20250721 08:03:34.830" endtime="20250721 08:03:37.032"/>
</kw>
<msg timestamp="20250721 08:03:37.032" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250721 08:03:34.830" endtime="20250721 08:03:37.032"/>
</kw>
<msg timestamp="20250721 08:03:37.032" level="INFO">${output} = Revoked accessId 'tenantone$hdfs'.</msg>
<status status="PASS" starttime="20250721 08:03:34.829" endtime="20250721 08:03:37.032"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Revoked accessId '${TENANT}$${USER}'.</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250721 08:03:37.032" endtime="20250721 08:03:37.033"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250721 08:03:34.784" endtime="20250721 08:03:37.033"/>
</test>
<test id="s1-s4-t26" name="Create Bucket 3 Failure with Revoked AccessId via S3 API" line="148">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>aws s3api --endpoint-url ${S3G_ENDPOINT_URL} create-bucket --bucket bucket-test3</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250721 08:03:37.038" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-test3 2&gt;&amp;1'.</msg>
<msg timestamp="20250721 08:03:37.568" level="INFO">${rc} = 255</msg>
<msg timestamp="20250721 08:03:37.568" level="INFO">${output} = 
An error occurred (AccessDenied) when calling the CreateBucket operation: User doesn't have the right to access this resource.</msg>
<status status="PASS" starttime="20250721 08:03:37.034" endtime="20250721 08:03:37.568"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${rc} &gt; 0</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20250721 08:03:37.569" endtime="20250721 08:03:37.569"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250721 08:03:37.034" endtime="20250721 08:03:37.570"/>
</test>
<test id="s1-s4-t27" name="Delete Tenant Success with Cluster Admin" line="152">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone tenant delete ${TENANT}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250721 08:03:37.574" level="INFO">Running command 'ozone tenant delete tenantone 2&gt;&amp;1'.</msg>
<msg timestamp="20250721 08:03:39.986" level="INFO">${rc} = 0</msg>
<msg timestamp="20250721 08:03:39.986" level="INFO">${output} = Deleted tenant 'tenantone'.
But the associated volume 'tenantone' is not removed. To delete it, run
    ozone sh volume delete tenantone
</msg>
<status status="PASS" starttime="20250721 08:03:37.571" endtime="20250721 08:03:39.986"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250721 08:03:39.987" level="INFO">Deleted tenant 'tenantone'.
But the associated volume 'tenantone' is not removed. To delete it, run
    ozone sh volume delete tenantone
</msg>
<status status="PASS" starttime="20250721 08:03:39.986" endtime="20250721 08:03:39.987"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250721 08:03:39.987" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250721 08:03:39.987" endtime="20250721 08:03:39.988"/>
</kw>
<status status="PASS" starttime="20250721 08:03:37.571" endtime="20250721 08:03:39.988"/>
</kw>
<msg timestamp="20250721 08:03:39.988" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250721 08:03:37.571" endtime="20250721 08:03:39.988"/>
</kw>
<msg timestamp="20250721 08:03:39.988" level="INFO">${output} = Deleted tenant 'tenantone'.
But the associated volume 'tenantone' is not removed. To delete it, run
    ozone sh volume delete tenantone
</msg>
<status status="PASS" starttime="20250721 08:03:37.570" endtime="20250721 08:03:39.988"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Deleted tenant '${TENANT}'.</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250721 08:03:39.988" endtime="20250721 08:03:39.988"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250721 08:03:37.570" endtime="20250721 08:03:39.989"/>
</test>
<test id="s1-s4-t28" name="Delete Volume Success with Cluster Admin" line="156">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume delete ${TENANT}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250721 08:03:39.993" level="INFO">Running command 'ozone sh volume delete tenantone 2&gt;&amp;1'.</msg>
<msg timestamp="20250721 08:03:42.120" level="INFO">${rc} = 0</msg>
<msg timestamp="20250721 08:03:42.120" level="INFO">${output} = Volume tenantone is deleted</msg>
<status status="PASS" starttime="20250721 08:03:39.990" endtime="20250721 08:03:42.120"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250721 08:03:42.121" level="INFO">Volume tenantone is deleted</msg>
<status status="PASS" starttime="20250721 08:03:42.120" endtime="20250721 08:03:42.121"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250721 08:03:42.121" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250721 08:03:42.121" endtime="20250721 08:03:42.122"/>
</kw>
<status status="PASS" starttime="20250721 08:03:39.990" endtime="20250721 08:03:42.122"/>
</kw>
<msg timestamp="20250721 08:03:42.122" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250721 08:03:39.990" endtime="20250721 08:03:42.122"/>
</kw>
<msg timestamp="20250721 08:03:42.122" level="INFO">${output} = Volume tenantone is deleted</msg>
<status status="PASS" starttime="20250721 08:03:39.990" endtime="20250721 08:03:42.122"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Volume ${TENANT} is deleted</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250721 08:03:42.122" endtime="20250721 08:03:42.123"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250721 08:03:39.989" endtime="20250721 08:03:42.123"/>
</test>
<test id="s1-s4-t29" name="List Tenant Expect Empty Result" line="160">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone tenant list</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250721 08:03:42.127" level="INFO">Running command 'ozone tenant list 2&gt;&amp;1'.</msg>
<msg timestamp="20250721 08:03:44.243" level="INFO">${rc} = 0</msg>
<msg timestamp="20250721 08:03:44.243" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250721 08:03:42.125" endtime="20250721 08:03:44.243"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250721 08:03:44.244" level="INFO"/>
<status status="PASS" starttime="20250721 08:03:44.243" endtime="20250721 08:03:44.244"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250721 08:03:44.244" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250721 08:03:44.244" endtime="20250721 08:03:44.244"/>
</kw>
<status status="PASS" starttime="20250721 08:03:42.124" endtime="20250721 08:03:44.245"/>
</kw>
<msg timestamp="20250721 08:03:44.245" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250721 08:03:42.124" endtime="20250721 08:03:44.245"/>
</kw>
<msg timestamp="20250721 08:03:44.245" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250721 08:03:42.124" endtime="20250721 08:03:44.245"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${TENANT}</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250721 08:03:44.245" endtime="20250721 08:03:44.245"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250721 08:03:42.123" endtime="20250721 08:03:44.245"/>
</test>
<doc>Smoke test for ozone secure tenant commands</doc>
<status status="PASS" starttime="20250721 08:02:50.424" endtime="20250721 08:03:44.247"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="72197"/>
</suite>
<statistics>
<total>
<stat pass="34" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="34" fail="0" skip="0" id="s1" name="ozonesecure-ha-ranger">ozonesecure-ha-ranger</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1" name="Kinit">ozonesecure-ha-ranger.Kinit</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2" name="Generate">ozonesecure-ha-ranger.Generate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s3" name="Validate">ozonesecure-ha-ranger.Validate</stat>
<stat pass="29" fail="0" skip="0" id="s1-s4" name="Ozone-Secure-Tenant">ozonesecure-ha-ranger.Ozone-Secure-Tenant</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
