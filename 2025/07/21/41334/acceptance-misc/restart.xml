<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.1.1 (Python 3.9.21 on linux)" generated="20250721 08:17:51.459" rpa="false" schemaversion="4">
<suite id="s1" name="restart">
<suite id="s1-s1" name="Generate" source="/opt/hadoop/smoketest/freon/generate.robot">
<test id="s1-s1-t1" name="Ozone Client Key Generator" line="25">
<kw name="Freon OCKG" library="freon">
<arg>prefix=ockg${PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250721 08:16:04.357" level="INFO">Running command 'ozone freon ockg  -t 1 -n1 -p ockgpre  2&gt;&amp;1'.</msg>
<msg timestamp="20250721 08:16:10.200" level="INFO">${rc} = 0</msg>
<msg timestamp="20250721 08:16:10.200" level="INFO">${output} = 2025-07-21 08:16:05,236 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-07-21 08:16:05,400 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250721 08:16:04.355" endtime="20250721 08:16:10.200"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250721 08:16:10.201" level="INFO">2025-07-21 08:16:05,236 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-07-21 08:16:05,400 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2025-07-21 08:16:05,401 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2025-07-21 08:16:05,757 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockgpre and number-of-tests 1
2025-07-21 08:16:05,838 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2025-07-21 08:16:06,839 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2025-07-21 08:16:07,839 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2025-07-21 08:16:08,770 [main] INFO rpc.RpcClient: Creating Volume: vol1, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1
2025-07-21 08:16:08,839 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2025-07-21 08:16:08,858 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption set to false, Replication Type set to server-side default replication type, Namespace Quota set to -1, Space Quota set to -1 
2025-07-21 08:16:09,030 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2025-07-21 08:16:09,840 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2025-07-21 08:16:09,860 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1, min=882.555488, max=882.555488, mean=882.555488, stddev=0.0, median=882.555488, p75=882.555488, p95=882.555488, p98=882.555488, p99=882.555488, p999=882.555488, mean_rate=1.0279876060962108, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2025-07-21 08:16:09,860 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 4
2025-07-21 08:16:09,860 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2025-07-21 08:16:09,860 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20250721 08:16:10.200" endtime="20250721 08:16:10.201"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250721 08:16:10.201" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250721 08:16:10.201" endtime="20250721 08:16:10.202"/>
</kw>
<status status="PASS" starttime="20250721 08:16:04.355" endtime="20250721 08:16:10.202"/>
</kw>
<msg timestamp="20250721 08:16:10.202" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250721 08:16:04.355" endtime="20250721 08:16:10.202"/>
</kw>
<msg timestamp="20250721 08:16:10.202" level="INFO">${result} = 2025-07-21 08:16:05,236 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-07-21 08:16:05,400 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250721 08:16:04.355" endtime="20250721 08:16:10.202"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250721 08:16:10.202" endtime="20250721 08:16:10.202"/>
</kw>
<status status="PASS" starttime="20250721 08:16:04.354" endtime="20250721 08:16:10.202"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250721 08:16:04.353" endtime="20250721 08:16:10.203"/>
</test>
<test id="s1-s1-t2" name="OM Key Generator" line="28">
<kw name="Freon OMKG" library="freon">
<arg>prefix=omkg${PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon omkg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250721 08:16:10.208" level="INFO">Running command 'ozone freon omkg  -t 1 -n1 -p omkgpre  2&gt;&amp;1'.</msg>
<msg timestamp="20250721 08:16:12.514" level="INFO">${rc} = 0</msg>
<msg timestamp="20250721 08:16:12.514" level="INFO">${output} = 2025-07-21 08:16:11,085 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-07-21 08:16:11,248 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250721 08:16:10.206" endtime="20250721 08:16:12.514"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250721 08:16:12.515" level="INFO">2025-07-21 08:16:11,085 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-07-21 08:16:11,248 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2025-07-21 08:16:11,248 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2025-07-21 08:16:11,409 [main] INFO freon.BaseFreonGenerator: Executing test with prefix omkgpre and number-of-tests 1
2025-07-21 08:16:11,452 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2025-07-21 08:16:12,453 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2025-07-21 08:16:12,477 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1, min=61.814906, max=61.814906, mean=61.814906, stddev=0.0, median=61.814906, p75=61.814906, p95=61.814906, p98=61.814906, p99=61.814906, p999=61.814906, mean_rate=9.169374596937216, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2025-07-21 08:16:12,477 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 1
2025-07-21 08:16:12,477 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2025-07-21 08:16:12,477 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20250721 08:16:12.514" endtime="20250721 08:16:12.515"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250721 08:16:12.515" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250721 08:16:12.515" endtime="20250721 08:16:12.515"/>
</kw>
<status status="PASS" starttime="20250721 08:16:10.205" endtime="20250721 08:16:12.516"/>
</kw>
<msg timestamp="20250721 08:16:12.516" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250721 08:16:10.205" endtime="20250721 08:16:12.516"/>
</kw>
<msg timestamp="20250721 08:16:12.516" level="INFO">${result} = 2025-07-21 08:16:11,085 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-07-21 08:16:11,248 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250721 08:16:10.205" endtime="20250721 08:16:12.516"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250721 08:16:12.516" endtime="20250721 08:16:12.516"/>
</kw>
<status status="PASS" starttime="20250721 08:16:10.204" endtime="20250721 08:16:12.516"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250721 08:16:10.203" endtime="20250721 08:16:12.516"/>
</test>
<test id="s1-s1-t3" name="OM Bucket Generator" line="31">
<kw name="Freon OMBG" library="freon">
<arg>prefix=ombg${PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ombg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250721 08:16:12.521" level="INFO">Running command 'ozone freon ombg  -t 1 -n1 -p ombgpre  2&gt;&amp;1'.</msg>
<msg timestamp="20250721 08:16:14.858" level="INFO">${rc} = 0</msg>
<msg timestamp="20250721 08:16:14.858" level="INFO">${output} = 2025-07-21 08:16:13,408 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-07-21 08:16:13,585 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250721 08:16:12.519" endtime="20250721 08:16:14.858"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250721 08:16:14.859" level="INFO">2025-07-21 08:16:13,408 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-07-21 08:16:13,585 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2025-07-21 08:16:13,585 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2025-07-21 08:16:13,761 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ombgpre and number-of-tests 1
2025-07-21 08:16:13,812 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2025-07-21 08:16:14,812 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2025-07-21 08:16:14,821 [shutdown-hook-0] INFO metrics: type=TIMER, name=bucket-create, count=1, min=11.094768, max=11.094768, mean=11.094768, stddev=0.0, median=11.094768, p75=11.094768, p95=11.094768, p98=11.094768, p99=11.094768, p999=11.094768, mean_rate=5.309283271181093, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2025-07-21 08:16:14,821 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 1
2025-07-21 08:16:14,821 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2025-07-21 08:16:14,821 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20250721 08:16:14.859" endtime="20250721 08:16:14.859"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250721 08:16:14.860" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250721 08:16:14.859" endtime="20250721 08:16:14.860"/>
</kw>
<status status="PASS" starttime="20250721 08:16:12.519" endtime="20250721 08:16:14.860"/>
</kw>
<msg timestamp="20250721 08:16:14.860" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250721 08:16:12.518" endtime="20250721 08:16:14.860"/>
</kw>
<msg timestamp="20250721 08:16:14.860" level="INFO">${result} = 2025-07-21 08:16:13,408 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-07-21 08:16:13,585 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250721 08:16:12.518" endtime="20250721 08:16:14.860"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250721 08:16:14.860" endtime="20250721 08:16:14.861"/>
</kw>
<status status="PASS" starttime="20250721 08:16:12.517" endtime="20250721 08:16:14.861"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250721 08:16:12.517" endtime="20250721 08:16:14.861"/>
</test>
<doc>Test freon data generation commands</doc>
<status status="PASS" starttime="20250721 08:16:04.322" endtime="20250721 08:16:14.862"/>
</suite>
<suite id="s1-s2" name="Validate" source="/opt/hadoop/smoketest/freon/validate.robot">
<test id="s1-s2-t1" name="Ozone Client Key Validator" line="25">
<kw name="Freon OCKV" library="freon">
<arg>prefix=ockg${PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockv ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250721 08:16:15.390" level="INFO">Running command 'ozone freon ockv  -t 1 -n1 -p ockgpre  2&gt;&amp;1'.</msg>
<msg timestamp="20250721 08:16:18.977" level="INFO">${rc} = 0</msg>
<msg timestamp="20250721 08:16:18.977" level="INFO">${output} = 2025-07-21 08:16:16,268 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-07-21 08:16:16,431 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250721 08:16:15.387" endtime="20250721 08:16:18.977"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250721 08:16:18.978" level="INFO">2025-07-21 08:16:16,268 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-07-21 08:16:16,431 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2025-07-21 08:16:16,431 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2025-07-21 08:16:16,581 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockgpre and number-of-tests 1
2025-07-21 08:16:16,622 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2025-07-21 08:16:17,623 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2025-07-21 08:16:17,637 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2025-07-21 08:16:18,623 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2025-07-21 08:16:18,637 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-validate, count=1, min=17.635455, max=17.635455, mean=17.635455, stddev=0.0, median=17.635455, p75=17.635455, p95=17.635455, p98=17.635455, p99=17.635455, p999=17.635455, mean_rate=2.2596443070847845, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2025-07-21 08:16:18,637 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2025-07-21 08:16:18,637 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2025-07-21 08:16:18,637 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20250721 08:16:18.977" endtime="20250721 08:16:18.978"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250721 08:16:18.978" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250721 08:16:18.978" endtime="20250721 08:16:18.979"/>
</kw>
<status status="PASS" starttime="20250721 08:16:15.387" endtime="20250721 08:16:18.979"/>
</kw>
<msg timestamp="20250721 08:16:18.979" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250721 08:16:15.387" endtime="20250721 08:16:18.979"/>
</kw>
<msg timestamp="20250721 08:16:18.979" level="INFO">${result} = 2025-07-21 08:16:16,268 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-07-21 08:16:16,431 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250721 08:16:15.386" endtime="20250721 08:16:18.979"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250721 08:16:18.979" endtime="20250721 08:16:18.979"/>
</kw>
<status status="PASS" starttime="20250721 08:16:15.386" endtime="20250721 08:16:18.979"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250721 08:16:15.385" endtime="20250721 08:16:18.980"/>
</test>
<doc>Test freon data validation commands</doc>
<status status="PASS" starttime="20250721 08:16:15.353" endtime="20250721 08:16:18.980"/>
</suite>
<suite id="s1-s3" name="Generate-Chunk" source="/opt/hadoop/smoketest/freon/generate-chunk.robot">
<kw name="Get Security Enabled From Config" library="commonlib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' != ''</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20250721 08:16:19.504" endtime="20250721 08:16:19.505"/>
</kw>
<kw name="Execute" library="os">
<var>${value}</var>
<arg>ozone getconf confKey ozone.security.enabled</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250721 08:16:19.507" level="INFO">Running command 'ozone getconf confKey ozone.security.enabled 2&gt;&amp;1'.</msg>
<msg timestamp="20250721 08:16:20.248" level="INFO">${rc} = 0</msg>
<msg timestamp="20250721 08:16:20.248" level="INFO">${output} = false</msg>
<status status="PASS" starttime="20250721 08:16:19.505" endtime="20250721 08:16:20.248"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250721 08:16:20.248" level="INFO">false</msg>
<status status="PASS" starttime="20250721 08:16:20.248" endtime="20250721 08:16:20.248"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250721 08:16:20.249" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250721 08:16:20.249" endtime="20250721 08:16:20.249"/>
</kw>
<status status="PASS" starttime="20250721 08:16:19.505" endtime="20250721 08:16:20.249"/>
</kw>
<msg timestamp="20250721 08:16:20.249" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250721 08:16:19.505" endtime="20250721 08:16:20.249"/>
</kw>
<msg timestamp="20250721 08:16:20.249" level="INFO">${value} = false</msg>
<status status="PASS" starttime="20250721 08:16:19.505" endtime="20250721 08:16:20.249"/>
</kw>
<if>
<branch type="IF" condition="'${value}' != 'true' and '${value}' != 'false'">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>false</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20250721 08:16:20.250" endtime="20250721 08:16:20.250"/>
</kw>
<status status="NOT RUN" starttime="20250721 08:16:20.249" endtime="20250721 08:16:20.250"/>
</branch>
<status status="PASS" starttime="20250721 08:16:20.249" endtime="20250721 08:16:20.250"/>
</if>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${SECURITY_ENABLED}</arg>
<arg>${value}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250721 08:16:20.250" level="INFO">${SECURITY_ENABLED} = false</msg>
<status status="PASS" starttime="20250721 08:16:20.250" endtime="20250721 08:16:20.250"/>
</kw>
<status status="PASS" starttime="20250721 08:16:19.504" endtime="20250721 08:16:20.250"/>
</kw>
<test id="s1-s3-t1" name="DN Chunk Generator" line="27">
<kw name="Freon DCG" library="freon">
<arg>prefix=dcg${PREFIX}</arg>
<arg>n=100</arg>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20250721 08:16:20.252" endtime="20250721 08:16:20.252"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon dcg -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250721 08:16:20.255" level="INFO">Running command 'ozone freon dcg -t 1 -n100 -p dcgpre  2&gt;&amp;1'.</msg>
<msg timestamp="20250721 08:16:25.558" level="INFO">${rc} = 0</msg>
<msg timestamp="20250721 08:16:25.558" level="INFO">${output} = 2025-07-21 08:16:21,136 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-07-21 08:16:21,299 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250721 08:16:20.253" endtime="20250721 08:16:25.558"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250721 08:16:25.559" level="INFO">2025-07-21 08:16:21,136 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-07-21 08:16:21,299 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2025-07-21 08:16:21,299 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2025-07-21 08:16:21,925 [main] INFO proxy.SCMContainerLocationFailoverProxyProvider: Created fail-over proxy for protocol StorageContainerLocationProtocolPB with 1 nodes: [nodeId=scmNodeId,nodeAddress=scm/10.9.0.17:9860]
2025-07-21 08:16:22,170 [main] INFO freon.BaseFreonGenerator: Executing test with prefix dcgpre and number-of-tests 100
2025-07-21 08:16:22,196 [Thread-4] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2025-07-21 08:16:22,229 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2025-07-21 08:16:23,198 [Thread-4] INFO freon.ProgressBar: Progress: 4.00 % (4 out of 100)
2025-07-21 08:16:24,198 [Thread-4] INFO freon.ProgressBar: Progress: 85.00 % (85 out of 100)
2025-07-21 08:16:25,199 [Thread-4] INFO freon.ProgressBar: Progress: 100.00 % (100 out of 100)
2025-07-21 08:16:25,217 [shutdown-hook-0] INFO metrics: type=TIMER, name=chunk-write, count=100, min=6.340943, max=670.239812, mean=19.01709819304172, stddev=65.51194247019967, median=11.341665, p75=13.715074, p95=21.992761, p98=33.912433, p99=44.715132, p999=670.239812, mean_rate=35.173200035168556, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2025-07-21 08:16:25,218 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2025-07-21 08:16:25,218 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2025-07-21 08:16:25,218 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 100</msg>
<status status="PASS" starttime="20250721 08:16:25.559" endtime="20250721 08:16:25.559"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250721 08:16:25.560" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250721 08:16:25.559" endtime="20250721 08:16:25.560"/>
</kw>
<status status="PASS" starttime="20250721 08:16:20.253" endtime="20250721 08:16:25.560"/>
</kw>
<msg timestamp="20250721 08:16:25.560" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250721 08:16:20.252" endtime="20250721 08:16:25.560"/>
</kw>
<msg timestamp="20250721 08:16:25.560" level="INFO">${result} = 2025-07-21 08:16:21,136 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-07-21 08:16:21,299 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250721 08:16:20.252" endtime="20250721 08:16:25.560"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250721 08:16:25.560" endtime="20250721 08:16:25.561"/>
</kw>
<status status="PASS" starttime="20250721 08:16:20.251" endtime="20250721 08:16:25.561"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250721 08:16:20.250" endtime="20250721 08:16:25.561"/>
</test>
<doc>Test freon chunk generation commands</doc>
<status status="PASS" starttime="20250721 08:16:19.464" endtime="20250721 08:16:25.562"/>
</suite>
<suite id="s1-s4" name="Validate-Chunk" source="/opt/hadoop/smoketest/freon/validate-chunk.robot">
<kw name="Get Security Enabled From Config" library="commonlib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' != ''</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20250721 08:16:26.118" endtime="20250721 08:16:26.118"/>
</kw>
<kw name="Execute" library="os">
<var>${value}</var>
<arg>ozone getconf confKey ozone.security.enabled</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250721 08:16:26.121" level="INFO">Running command 'ozone getconf confKey ozone.security.enabled 2&gt;&amp;1'.</msg>
<msg timestamp="20250721 08:16:26.847" level="INFO">${rc} = 0</msg>
<msg timestamp="20250721 08:16:26.847" level="INFO">${output} = false</msg>
<status status="PASS" starttime="20250721 08:16:26.119" endtime="20250721 08:16:26.847"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250721 08:16:26.848" level="INFO">false</msg>
<status status="PASS" starttime="20250721 08:16:26.847" endtime="20250721 08:16:26.848"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250721 08:16:26.848" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250721 08:16:26.848" endtime="20250721 08:16:26.848"/>
</kw>
<status status="PASS" starttime="20250721 08:16:26.118" endtime="20250721 08:16:26.849"/>
</kw>
<msg timestamp="20250721 08:16:26.849" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250721 08:16:26.118" endtime="20250721 08:16:26.849"/>
</kw>
<msg timestamp="20250721 08:16:26.849" level="INFO">${value} = false</msg>
<status status="PASS" starttime="20250721 08:16:26.118" endtime="20250721 08:16:26.849"/>
</kw>
<if>
<branch type="IF" condition="'${value}' != 'true' and '${value}' != 'false'">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>false</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20250721 08:16:26.849" endtime="20250721 08:16:26.849"/>
</kw>
<status status="NOT RUN" starttime="20250721 08:16:26.849" endtime="20250721 08:16:26.849"/>
</branch>
<status status="PASS" starttime="20250721 08:16:26.849" endtime="20250721 08:16:26.849"/>
</if>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${SECURITY_ENABLED}</arg>
<arg>${value}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250721 08:16:26.850" level="INFO">${SECURITY_ENABLED} = false</msg>
<status status="PASS" starttime="20250721 08:16:26.850" endtime="20250721 08:16:26.850"/>
</kw>
<status status="PASS" starttime="20250721 08:16:26.117" endtime="20250721 08:16:26.850"/>
</kw>
<test id="s1-s4-t1" name="DN Chunk Validator" line="28">
<kw name="Freon DCV" library="freon">
<arg>prefix=dcg${PREFIX}</arg>
<arg>n=100</arg>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20250721 08:16:26.852" endtime="20250721 08:16:26.852"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon dcv -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250721 08:16:26.855" level="INFO">Running command 'ozone freon dcv -t 1 -n100 -p dcgpre  2&gt;&amp;1'.</msg>
<msg timestamp="20250721 08:16:30.472" level="INFO">${rc} = 0</msg>
<msg timestamp="20250721 08:16:30.472" level="INFO">${output} = 2025-07-21 08:16:27,724 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-07-21 08:16:27,896 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250721 08:16:26.853" endtime="20250721 08:16:30.472"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250721 08:16:30.473" level="INFO">2025-07-21 08:16:27,724 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-07-21 08:16:27,896 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2025-07-21 08:16:27,896 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2025-07-21 08:16:28,063 [main] INFO freon.BaseFreonGenerator: Executing test with prefix dcgpre and number-of-tests 100
2025-07-21 08:16:28,113 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2025-07-21 08:16:28,545 [main] INFO proxy.SCMContainerLocationFailoverProxyProvider: Created fail-over proxy for protocol StorageContainerLocationProtocolPB with 1 nodes: [nodeId=scmNodeId,nodeAddress=scm/10.9.0.17:9860]
2025-07-21 08:16:28,767 [main] INFO freon.DatanodeChunkValidator: Using pipeline Pipeline-ff4e3c11-d134-43c3-a991-341d39223a93
2025-07-21 08:16:28,800 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2025-07-21 08:16:29,113 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2025-07-21 08:16:30,114 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (100 out of 100)
2025-07-21 08:16:30,133 [shutdown-hook-0] INFO metrics: type=TIMER, name=chunk-validate, count=100, min=1.455323, max=4.127338, mean=2.0897954600000004, stddev=0.42637972151769643, median=1.985135, p75=2.21305, p95=2.827947, p98=3.254823, p99=3.695235, p999=4.127338, mean_rate=136.05375168084208, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2025-07-21 08:16:30,133 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2025-07-21 08:16:30,133 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2025-07-21 08:16:30,133 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 100</msg>
<status status="PASS" starttime="20250721 08:16:30.473" endtime="20250721 08:16:30.473"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250721 08:16:30.474" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250721 08:16:30.473" endtime="20250721 08:16:30.474"/>
</kw>
<status status="PASS" starttime="20250721 08:16:26.852" endtime="20250721 08:16:30.474"/>
</kw>
<msg timestamp="20250721 08:16:30.474" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250721 08:16:26.852" endtime="20250721 08:16:30.474"/>
</kw>
<msg timestamp="20250721 08:16:30.474" level="INFO">${result} = 2025-07-21 08:16:27,724 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-07-21 08:16:27,896 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250721 08:16:26.852" endtime="20250721 08:16:30.474"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250721 08:16:30.475" endtime="20250721 08:16:30.475"/>
</kw>
<status status="PASS" starttime="20250721 08:16:26.851" endtime="20250721 08:16:30.475"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250721 08:16:26.850" endtime="20250721 08:16:30.475"/>
</test>
<doc>Test freon chunk validation commands</doc>
<status status="PASS" starttime="20250721 08:16:26.078" endtime="20250721 08:16:30.476"/>
</suite>
<suite id="s1-s5" name="Validate" source="/opt/hadoop/smoketest/freon/validate.robot">
<test id="s1-s5-t1" name="Ozone Client Key Validator" line="25">
<kw name="Freon OCKV" library="freon">
<arg>prefix=ockg${PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockv ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250721 08:17:05.083" level="INFO">Running command 'ozone freon ockv  -t 1 -n1 -p ockgpre  2&gt;&amp;1'.</msg>
<msg timestamp="20250721 08:17:15.790" level="INFO">${rc} = 0</msg>
<msg timestamp="20250721 08:17:15.790" level="INFO">${output} = 2025-07-21 08:17:06,031 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-07-21 08:17:06,200 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250721 08:17:05.081" endtime="20250721 08:17:15.791"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250721 08:17:15.792" level="INFO">2025-07-21 08:17:06,031 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-07-21 08:17:06,200 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2025-07-21 08:17:06,200 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2025-07-21 08:17:06,380 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockgpre and number-of-tests 1
2025-07-21 08:17:06,431 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2025-07-21 08:17:07,432 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2025-07-21 08:17:08,432 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2025-07-21 08:17:09,187 [main] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om1 is not the leader. Could not determine the leader node.
	at org.apache.hadoop.ozone.om.ratis.OzoneManagerRatisServer.newOMNotLeaderException(OzoneManagerRatisServer.java:822)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createLeaderErrorException(OzoneManagerProtocolServerSideTranslatorPB.java:200)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitReadRequestToOM(OzoneManagerProtocolServerSideTranslatorPB.java:193)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.internalProcessRequest(OzoneManagerProtocolServerSideTranslatorPB.java:158)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:124)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:87)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:115)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server.processCall(ProtobufRpcEngine.java:484)
	at org.apache.hadoop.ipc.ProtobufRpcEngine2$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine2.java:595)
	at org.apache.hadoop.ipc.ProtobufRpcEngine2$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine2.java:573)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1227)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:1246)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:1169)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:714)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:525)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1953)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:3198)
, while invoking $Proxy22.submitRequest over nodeId=null,nodeAddress=om:9862 after 1 failover attempts. Trying to failover after sleeping for 4000ms. Current retry count: 1.
2025-07-21 08:17:09,433 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2025-07-21 08:17:10,433 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2025-07-21 08:17:11,434 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2025-07-21 08:17:12,434 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2025-07-21 08:17:13,434 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2025-07-21 08:17:13,944 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2025-07-21 08:17:14,435 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2025-07-21 08:17:15,435 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2025-07-21 08:17:15,450 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-validate, count=1, min=22.344993, max=22.344993, mean=22.344993, stddev=0.0, median=22.344993, p75=22.344993, p95=22.344993, p98=22.344993, p99=22.344993, p999=22.344993, mean_rate=1.2403558164574002, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2025-07-21 08:17:15,451 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 9
2025-07-21 08:17:15,451 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2025-07-21 08:17:15,451 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20250721 08:17:15.791" endtime="20250721 08:17:15.792"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250721 08:17:15.792" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250721 08:17:15.792" endtime="20250721 08:17:15.792"/>
</kw>
<status status="PASS" starttime="20250721 08:17:05.080" endtime="20250721 08:17:15.792"/>
</kw>
<msg timestamp="20250721 08:17:15.792" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250721 08:17:05.080" endtime="20250721 08:17:15.792"/>
</kw>
<msg timestamp="20250721 08:17:15.793" level="INFO">${result} = 2025-07-21 08:17:06,031 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-07-21 08:17:06,200 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250721 08:17:05.080" endtime="20250721 08:17:15.793"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250721 08:17:15.793" endtime="20250721 08:17:15.793"/>
</kw>
<status status="PASS" starttime="20250721 08:17:05.079" endtime="20250721 08:17:15.793"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250721 08:17:05.078" endtime="20250721 08:17:15.793"/>
</test>
<doc>Test freon data validation commands</doc>
<status status="PASS" starttime="20250721 08:17:05.044" endtime="20250721 08:17:15.794"/>
</suite>
<suite id="s1-s6" name="Validate-Chunk" source="/opt/hadoop/smoketest/freon/validate-chunk.robot">
<kw name="Get Security Enabled From Config" library="commonlib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' != ''</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20250721 08:17:16.343" endtime="20250721 08:17:16.344"/>
</kw>
<kw name="Execute" library="os">
<var>${value}</var>
<arg>ozone getconf confKey ozone.security.enabled</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250721 08:17:16.347" level="INFO">Running command 'ozone getconf confKey ozone.security.enabled 2&gt;&amp;1'.</msg>
<msg timestamp="20250721 08:17:17.093" level="INFO">${rc} = 0</msg>
<msg timestamp="20250721 08:17:17.093" level="INFO">${output} = false</msg>
<status status="PASS" starttime="20250721 08:17:16.344" endtime="20250721 08:17:17.093"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250721 08:17:17.094" level="INFO">false</msg>
<status status="PASS" starttime="20250721 08:17:17.094" endtime="20250721 08:17:17.094"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250721 08:17:17.095" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250721 08:17:17.094" endtime="20250721 08:17:17.095"/>
</kw>
<status status="PASS" starttime="20250721 08:17:16.344" endtime="20250721 08:17:17.095"/>
</kw>
<msg timestamp="20250721 08:17:17.095" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250721 08:17:16.344" endtime="20250721 08:17:17.095"/>
</kw>
<msg timestamp="20250721 08:17:17.095" level="INFO">${value} = false</msg>
<status status="PASS" starttime="20250721 08:17:16.344" endtime="20250721 08:17:17.095"/>
</kw>
<if>
<branch type="IF" condition="'${value}' != 'true' and '${value}' != 'false'">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>false</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20250721 08:17:17.096" endtime="20250721 08:17:17.096"/>
</kw>
<status status="NOT RUN" starttime="20250721 08:17:17.095" endtime="20250721 08:17:17.096"/>
</branch>
<status status="PASS" starttime="20250721 08:17:17.095" endtime="20250721 08:17:17.096"/>
</if>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${SECURITY_ENABLED}</arg>
<arg>${value}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250721 08:17:17.096" level="INFO">${SECURITY_ENABLED} = false</msg>
<status status="PASS" starttime="20250721 08:17:17.096" endtime="20250721 08:17:17.096"/>
</kw>
<status status="PASS" starttime="20250721 08:17:16.343" endtime="20250721 08:17:17.096"/>
</kw>
<test id="s1-s6-t1" name="DN Chunk Validator" line="28">
<kw name="Freon DCV" library="freon">
<arg>prefix=dcg${PREFIX}</arg>
<arg>n=100</arg>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20250721 08:17:17.098" endtime="20250721 08:17:17.098"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon dcv -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250721 08:17:17.101" level="INFO">Running command 'ozone freon dcv -t 1 -n100 -p dcgpre  2&gt;&amp;1'.</msg>
<msg timestamp="20250721 08:17:20.783" level="INFO">${rc} = 0</msg>
<msg timestamp="20250721 08:17:20.783" level="INFO">${output} = 2025-07-21 08:17:18,047 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-07-21 08:17:18,218 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250721 08:17:17.099" endtime="20250721 08:17:20.783"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250721 08:17:20.784" level="INFO">2025-07-21 08:17:18,047 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-07-21 08:17:18,218 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2025-07-21 08:17:18,218 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2025-07-21 08:17:18,377 [main] INFO freon.BaseFreonGenerator: Executing test with prefix dcgpre and number-of-tests 100
2025-07-21 08:17:18,420 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2025-07-21 08:17:18,856 [main] INFO proxy.SCMContainerLocationFailoverProxyProvider: Created fail-over proxy for protocol StorageContainerLocationProtocolPB with 1 nodes: [nodeId=scmNodeId,nodeAddress=scm/10.9.0.17:9860]
2025-07-21 08:17:19,084 [main] INFO freon.DatanodeChunkValidator: Using pipeline Pipeline-ff4e3c11-d134-43c3-a991-341d39223a93
2025-07-21 08:17:19,119 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2025-07-21 08:17:19,421 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2025-07-21 08:17:20,421 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (100 out of 100)
2025-07-21 08:17:20,441 [shutdown-hook-0] INFO metrics: type=TIMER, name=chunk-validate, count=100, min=1.715208, max=6.003526, mean=2.5351874497531597, stddev=0.5417643876525342, median=2.492941, p75=2.712131, p95=3.242778, p98=3.56415, p99=4.353825, p999=6.003526, mean_rate=146.4150186060399, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2025-07-21 08:17:20,442 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2025-07-21 08:17:20,442 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2025-07-21 08:17:20,442 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 100</msg>
<status status="PASS" starttime="20250721 08:17:20.783" endtime="20250721 08:17:20.784"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250721 08:17:20.784" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250721 08:17:20.784" endtime="20250721 08:17:20.784"/>
</kw>
<status status="PASS" starttime="20250721 08:17:17.099" endtime="20250721 08:17:20.785"/>
</kw>
<msg timestamp="20250721 08:17:20.785" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250721 08:17:17.098" endtime="20250721 08:17:20.785"/>
</kw>
<msg timestamp="20250721 08:17:20.785" level="INFO">${result} = 2025-07-21 08:17:18,047 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-07-21 08:17:18,218 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250721 08:17:17.098" endtime="20250721 08:17:20.785"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250721 08:17:20.785" endtime="20250721 08:17:20.785"/>
</kw>
<status status="PASS" starttime="20250721 08:17:17.097" endtime="20250721 08:17:20.785"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250721 08:17:17.096" endtime="20250721 08:17:20.786"/>
</test>
<doc>Test freon chunk validation commands</doc>
<status status="PASS" starttime="20250721 08:17:16.305" endtime="20250721 08:17:20.786"/>
</suite>
<suite id="s1-s7" name="Generate" source="/opt/hadoop/smoketest/freon/generate.robot">
<test id="s1-s7-t1" name="Ozone Client Key Generator" line="25">
<kw name="Freon OCKG" library="freon">
<arg>prefix=ockg${PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250721 08:17:21.332" level="INFO">Running command 'ozone freon ockg  -t 1 -n1 -p ockgpost  2&gt;&amp;1'.</msg>
<msg timestamp="20250721 08:17:24.951" level="INFO">${rc} = 0</msg>
<msg timestamp="20250721 08:17:24.951" level="INFO">${output} = 2025-07-21 08:17:22,192 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-07-21 08:17:22,356 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250721 08:17:21.330" endtime="20250721 08:17:24.951"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250721 08:17:24.952" level="INFO">2025-07-21 08:17:22,192 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-07-21 08:17:22,356 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2025-07-21 08:17:22,356 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2025-07-21 08:17:22,526 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockgpost and number-of-tests 1
2025-07-21 08:17:22,573 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2025-07-21 08:17:23,573 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2025-07-21 08:17:23,723 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2025-07-21 08:17:24,574 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2025-07-21 08:17:24,607 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1, min=1003.174708, max=1003.174708, mean=1003.174708, stddev=0.0, median=1003.174708, p75=1003.174708, p95=1003.174708, p98=1003.174708, p99=1003.174708, p999=1003.174708, mean_rate=0.8771916712854317, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2025-07-21 08:17:24,607 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2025-07-21 08:17:24,607 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2025-07-21 08:17:24,607 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20250721 08:17:24.951" endtime="20250721 08:17:24.952"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250721 08:17:24.952" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250721 08:17:24.952" endtime="20250721 08:17:24.952"/>
</kw>
<status status="PASS" starttime="20250721 08:17:21.329" endtime="20250721 08:17:24.952"/>
</kw>
<msg timestamp="20250721 08:17:24.952" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250721 08:17:21.329" endtime="20250721 08:17:24.953"/>
</kw>
<msg timestamp="20250721 08:17:24.953" level="INFO">${result} = 2025-07-21 08:17:22,192 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-07-21 08:17:22,356 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250721 08:17:21.329" endtime="20250721 08:17:24.953"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250721 08:17:24.953" endtime="20250721 08:17:24.953"/>
</kw>
<status status="PASS" starttime="20250721 08:17:21.328" endtime="20250721 08:17:24.953"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250721 08:17:21.327" endtime="20250721 08:17:24.953"/>
</test>
<test id="s1-s7-t2" name="OM Key Generator" line="28">
<kw name="Freon OMKG" library="freon">
<arg>prefix=omkg${PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon omkg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250721 08:17:24.958" level="INFO">Running command 'ozone freon omkg  -t 1 -n1 -p omkgpost  2&gt;&amp;1'.</msg>
<msg timestamp="20250721 08:17:27.309" level="INFO">${rc} = 0</msg>
<msg timestamp="20250721 08:17:27.310" level="INFO">${output} = 2025-07-21 08:17:25,879 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-07-21 08:17:26,047 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250721 08:17:24.956" endtime="20250721 08:17:27.310"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250721 08:17:27.310" level="INFO">2025-07-21 08:17:25,879 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-07-21 08:17:26,047 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2025-07-21 08:17:26,047 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2025-07-21 08:17:26,220 [main] INFO freon.BaseFreonGenerator: Executing test with prefix omkgpost and number-of-tests 1
2025-07-21 08:17:26,273 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2025-07-21 08:17:27,273 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2025-07-21 08:17:27,281 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1, min=55.263091, max=55.263091, mean=55.263091, stddev=0.0, median=55.263091, p75=55.263091, p95=55.263091, p98=55.263091, p99=55.263091, p999=55.263091, mean_rate=7.992132672471342, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2025-07-21 08:17:27,282 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 1
2025-07-21 08:17:27,282 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2025-07-21 08:17:27,282 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20250721 08:17:27.310" endtime="20250721 08:17:27.311"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250721 08:17:27.311" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250721 08:17:27.311" endtime="20250721 08:17:27.311"/>
</kw>
<status status="PASS" starttime="20250721 08:17:24.956" endtime="20250721 08:17:27.311"/>
</kw>
<msg timestamp="20250721 08:17:27.311" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250721 08:17:24.956" endtime="20250721 08:17:27.311"/>
</kw>
<msg timestamp="20250721 08:17:27.311" level="INFO">${result} = 2025-07-21 08:17:25,879 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-07-21 08:17:26,047 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250721 08:17:24.955" endtime="20250721 08:17:27.311"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250721 08:17:27.311" endtime="20250721 08:17:27.312"/>
</kw>
<status status="PASS" starttime="20250721 08:17:24.954" endtime="20250721 08:17:27.312"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250721 08:17:24.954" endtime="20250721 08:17:27.312"/>
</test>
<test id="s1-s7-t3" name="OM Bucket Generator" line="31">
<kw name="Freon OMBG" library="freon">
<arg>prefix=ombg${PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ombg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250721 08:17:27.317" level="INFO">Running command 'ozone freon ombg  -t 1 -n1 -p ombgpost  2&gt;&amp;1'.</msg>
<msg timestamp="20250721 08:17:29.683" level="INFO">${rc} = 0</msg>
<msg timestamp="20250721 08:17:29.683" level="INFO">${output} = 2025-07-21 08:17:28,227 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-07-21 08:17:28,397 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250721 08:17:27.315" endtime="20250721 08:17:29.683"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250721 08:17:29.684" level="INFO">2025-07-21 08:17:28,227 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-07-21 08:17:28,397 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2025-07-21 08:17:28,397 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2025-07-21 08:17:28,580 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ombgpost and number-of-tests 1
2025-07-21 08:17:28,635 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2025-07-21 08:17:29,636 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2025-07-21 08:17:29,645 [shutdown-hook-0] INFO metrics: type=TIMER, name=bucket-create, count=1, min=15.550777, max=15.550777, mean=15.550777, stddev=0.0, median=15.550777, p75=15.550777, p95=15.550777, p98=15.550777, p99=15.550777, p999=15.550777, mean_rate=6.892854967176707, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2025-07-21 08:17:29,645 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 1
2025-07-21 08:17:29,646 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2025-07-21 08:17:29,646 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20250721 08:17:29.684" endtime="20250721 08:17:29.684"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250721 08:17:29.685" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250721 08:17:29.684" endtime="20250721 08:17:29.685"/>
</kw>
<status status="PASS" starttime="20250721 08:17:27.314" endtime="20250721 08:17:29.685"/>
</kw>
<msg timestamp="20250721 08:17:29.685" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250721 08:17:27.314" endtime="20250721 08:17:29.685"/>
</kw>
<msg timestamp="20250721 08:17:29.685" level="INFO">${result} = 2025-07-21 08:17:28,227 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-07-21 08:17:28,397 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250721 08:17:27.314" endtime="20250721 08:17:29.685"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250721 08:17:29.685" endtime="20250721 08:17:29.686"/>
</kw>
<status status="PASS" starttime="20250721 08:17:27.313" endtime="20250721 08:17:29.686"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250721 08:17:27.312" endtime="20250721 08:17:29.686"/>
</test>
<doc>Test freon data generation commands</doc>
<status status="PASS" starttime="20250721 08:17:21.295" endtime="20250721 08:17:29.687"/>
</suite>
<suite id="s1-s8" name="Validate" source="/opt/hadoop/smoketest/freon/validate.robot">
<test id="s1-s8-t1" name="Ozone Client Key Validator" line="25">
<kw name="Freon OCKV" library="freon">
<arg>prefix=ockg${PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockv ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250721 08:17:30.240" level="INFO">Running command 'ozone freon ockv  -t 1 -n1 -p ockgpost  2&gt;&amp;1'.</msg>
<msg timestamp="20250721 08:17:33.887" level="INFO">${rc} = 0</msg>
<msg timestamp="20250721 08:17:33.887" level="INFO">${output} = 2025-07-21 08:17:31,160 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-07-21 08:17:31,323 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250721 08:17:30.237" endtime="20250721 08:17:33.887"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250721 08:17:33.888" level="INFO">2025-07-21 08:17:31,160 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-07-21 08:17:31,323 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2025-07-21 08:17:31,323 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2025-07-21 08:17:31,476 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockgpost and number-of-tests 1
2025-07-21 08:17:31,525 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2025-07-21 08:17:32,488 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2025-07-21 08:17:32,526 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2025-07-21 08:17:33,526 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2025-07-21 08:17:33,542 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-validate, count=1, min=18.984843, max=18.984843, mean=18.984843, stddev=0.0, median=18.984843, p75=18.984843, p95=18.984843, p98=18.984843, p99=18.984843, p999=18.984843, mean_rate=2.7228039352151603, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2025-07-21 08:17:33,543 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2025-07-21 08:17:33,543 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2025-07-21 08:17:33,543 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20250721 08:17:33.887" endtime="20250721 08:17:33.888"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250721 08:17:33.888" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250721 08:17:33.888" endtime="20250721 08:17:33.888"/>
</kw>
<status status="PASS" starttime="20250721 08:17:30.237" endtime="20250721 08:17:33.889"/>
</kw>
<msg timestamp="20250721 08:17:33.889" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250721 08:17:30.237" endtime="20250721 08:17:33.889"/>
</kw>
<msg timestamp="20250721 08:17:33.889" level="INFO">${result} = 2025-07-21 08:17:31,160 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-07-21 08:17:31,323 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250721 08:17:30.237" endtime="20250721 08:17:33.889"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250721 08:17:33.889" endtime="20250721 08:17:33.889"/>
</kw>
<status status="PASS" starttime="20250721 08:17:30.236" endtime="20250721 08:17:33.889"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250721 08:17:30.235" endtime="20250721 08:17:33.890"/>
</test>
<doc>Test freon data validation commands</doc>
<status status="PASS" starttime="20250721 08:17:30.203" endtime="20250721 08:17:33.890"/>
</suite>
<suite id="s1-s9" name="Generate-Chunk" source="/opt/hadoop/smoketest/freon/generate-chunk.robot">
<kw name="Get Security Enabled From Config" library="commonlib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' != ''</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20250721 08:17:34.442" endtime="20250721 08:17:34.442"/>
</kw>
<kw name="Execute" library="os">
<var>${value}</var>
<arg>ozone getconf confKey ozone.security.enabled</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250721 08:17:34.445" level="INFO">Running command 'ozone getconf confKey ozone.security.enabled 2&gt;&amp;1'.</msg>
<msg timestamp="20250721 08:17:35.164" level="INFO">${rc} = 0</msg>
<msg timestamp="20250721 08:17:35.165" level="INFO">${output} = false</msg>
<status status="PASS" starttime="20250721 08:17:34.443" endtime="20250721 08:17:35.165"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250721 08:17:35.165" level="INFO">false</msg>
<status status="PASS" starttime="20250721 08:17:35.165" endtime="20250721 08:17:35.165"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250721 08:17:35.166" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250721 08:17:35.166" endtime="20250721 08:17:35.166"/>
</kw>
<status status="PASS" starttime="20250721 08:17:34.442" endtime="20250721 08:17:35.166"/>
</kw>
<msg timestamp="20250721 08:17:35.166" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250721 08:17:34.442" endtime="20250721 08:17:35.166"/>
</kw>
<msg timestamp="20250721 08:17:35.166" level="INFO">${value} = false</msg>
<status status="PASS" starttime="20250721 08:17:34.442" endtime="20250721 08:17:35.166"/>
</kw>
<if>
<branch type="IF" condition="'${value}' != 'true' and '${value}' != 'false'">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>false</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20250721 08:17:35.167" endtime="20250721 08:17:35.167"/>
</kw>
<status status="NOT RUN" starttime="20250721 08:17:35.166" endtime="20250721 08:17:35.167"/>
</branch>
<status status="PASS" starttime="20250721 08:17:35.166" endtime="20250721 08:17:35.167"/>
</if>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${SECURITY_ENABLED}</arg>
<arg>${value}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250721 08:17:35.167" level="INFO">${SECURITY_ENABLED} = false</msg>
<status status="PASS" starttime="20250721 08:17:35.167" endtime="20250721 08:17:35.167"/>
</kw>
<status status="PASS" starttime="20250721 08:17:34.441" endtime="20250721 08:17:35.167"/>
</kw>
<test id="s1-s9-t1" name="DN Chunk Generator" line="27">
<kw name="Freon DCG" library="freon">
<arg>prefix=dcg${PREFIX}</arg>
<arg>n=100</arg>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20250721 08:17:35.169" endtime="20250721 08:17:35.169"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon dcg -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250721 08:17:35.172" level="INFO">Running command 'ozone freon dcg -t 1 -n100 -p dcgpost  2&gt;&amp;1'.</msg>
<msg timestamp="20250721 08:17:39.449" level="INFO">${rc} = 0</msg>
<msg timestamp="20250721 08:17:39.449" level="INFO">${output} = 2025-07-21 08:17:36,046 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-07-21 08:17:36,206 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250721 08:17:35.170" endtime="20250721 08:17:39.449"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250721 08:17:39.450" level="INFO">2025-07-21 08:17:36,046 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-07-21 08:17:36,206 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2025-07-21 08:17:36,206 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2025-07-21 08:17:36,835 [main] INFO proxy.SCMContainerLocationFailoverProxyProvider: Created fail-over proxy for protocol StorageContainerLocationProtocolPB with 1 nodes: [nodeId=scmNodeId,nodeAddress=scm/10.9.0.17:9860]
2025-07-21 08:17:37,058 [main] INFO freon.BaseFreonGenerator: Executing test with prefix dcgpost and number-of-tests 100
2025-07-21 08:17:37,081 [Thread-4] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2025-07-21 08:17:37,115 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2025-07-21 08:17:38,081 [Thread-4] INFO freon.ProgressBar: Progress: 21.00 % (21 out of 100)
2025-07-21 08:17:39,082 [Thread-4] INFO freon.ProgressBar: Progress: 100.00 % (100 out of 100)
2025-07-21 08:17:39,103 [shutdown-hook-0] INFO metrics: type=TIMER, name=chunk-write, count=100, min=7.361188, max=487.554085, mean=16.698331692664325, stddev=47.10591196280623, median=11.547828, p75=13.093333, p95=18.297714, p98=21.933489, p99=24.363352, p999=487.554085, mean_rate=53.97380949931955, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2025-07-21 08:17:39,103 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2025-07-21 08:17:39,103 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2025-07-21 08:17:39,103 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 100</msg>
<status status="PASS" starttime="20250721 08:17:39.450" endtime="20250721 08:17:39.450"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250721 08:17:39.451" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250721 08:17:39.451" endtime="20250721 08:17:39.451"/>
</kw>
<status status="PASS" starttime="20250721 08:17:35.170" endtime="20250721 08:17:39.451"/>
</kw>
<msg timestamp="20250721 08:17:39.451" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250721 08:17:35.169" endtime="20250721 08:17:39.451"/>
</kw>
<msg timestamp="20250721 08:17:39.452" level="INFO">${result} = 2025-07-21 08:17:36,046 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-07-21 08:17:36,206 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250721 08:17:35.169" endtime="20250721 08:17:39.452"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250721 08:17:39.452" endtime="20250721 08:17:39.452"/>
</kw>
<status status="PASS" starttime="20250721 08:17:35.168" endtime="20250721 08:17:39.452"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250721 08:17:35.168" endtime="20250721 08:17:39.452"/>
</test>
<doc>Test freon chunk generation commands</doc>
<status status="PASS" starttime="20250721 08:17:34.402" endtime="20250721 08:17:39.453"/>
</suite>
<suite id="s1-s10" name="Validate-Chunk" source="/opt/hadoop/smoketest/freon/validate-chunk.robot">
<kw name="Get Security Enabled From Config" library="commonlib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' != ''</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20250721 08:17:40.008" endtime="20250721 08:17:40.008"/>
</kw>
<kw name="Execute" library="os">
<var>${value}</var>
<arg>ozone getconf confKey ozone.security.enabled</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250721 08:17:40.011" level="INFO">Running command 'ozone getconf confKey ozone.security.enabled 2&gt;&amp;1'.</msg>
<msg timestamp="20250721 08:17:40.759" level="INFO">${rc} = 0</msg>
<msg timestamp="20250721 08:17:40.759" level="INFO">${output} = false</msg>
<status status="PASS" starttime="20250721 08:17:40.009" endtime="20250721 08:17:40.759"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250721 08:17:40.760" level="INFO">false</msg>
<status status="PASS" starttime="20250721 08:17:40.760" endtime="20250721 08:17:40.760"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250721 08:17:40.760" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250721 08:17:40.760" endtime="20250721 08:17:40.761"/>
</kw>
<status status="PASS" starttime="20250721 08:17:40.009" endtime="20250721 08:17:40.761"/>
</kw>
<msg timestamp="20250721 08:17:40.761" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250721 08:17:40.009" endtime="20250721 08:17:40.761"/>
</kw>
<msg timestamp="20250721 08:17:40.761" level="INFO">${value} = false</msg>
<status status="PASS" starttime="20250721 08:17:40.008" endtime="20250721 08:17:40.761"/>
</kw>
<if>
<branch type="IF" condition="'${value}' != 'true' and '${value}' != 'false'">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>false</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20250721 08:17:40.761" endtime="20250721 08:17:40.761"/>
</kw>
<status status="NOT RUN" starttime="20250721 08:17:40.761" endtime="20250721 08:17:40.761"/>
</branch>
<status status="PASS" starttime="20250721 08:17:40.761" endtime="20250721 08:17:40.761"/>
</if>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${SECURITY_ENABLED}</arg>
<arg>${value}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250721 08:17:40.762" level="INFO">${SECURITY_ENABLED} = false</msg>
<status status="PASS" starttime="20250721 08:17:40.762" endtime="20250721 08:17:40.762"/>
</kw>
<status status="PASS" starttime="20250721 08:17:40.008" endtime="20250721 08:17:40.762"/>
</kw>
<test id="s1-s10-t1" name="DN Chunk Validator" line="28">
<kw name="Freon DCV" library="freon">
<arg>prefix=dcg${PREFIX}</arg>
<arg>n=100</arg>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20250721 08:17:40.764" endtime="20250721 08:17:40.764"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon dcv -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250721 08:17:40.767" level="INFO">Running command 'ozone freon dcv -t 1 -n100 -p dcgpost  2&gt;&amp;1'.</msg>
<msg timestamp="20250721 08:17:44.405" level="INFO">${rc} = 0</msg>
<msg timestamp="20250721 08:17:44.405" level="INFO">${output} = 2025-07-21 08:17:41,657 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-07-21 08:17:41,821 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250721 08:17:40.765" endtime="20250721 08:17:44.405"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250721 08:17:44.406" level="INFO">2025-07-21 08:17:41,657 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-07-21 08:17:41,821 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2025-07-21 08:17:41,822 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2025-07-21 08:17:41,997 [main] INFO freon.BaseFreonGenerator: Executing test with prefix dcgpost and number-of-tests 100
2025-07-21 08:17:42,041 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2025-07-21 08:17:42,471 [main] INFO proxy.SCMContainerLocationFailoverProxyProvider: Created fail-over proxy for protocol StorageContainerLocationProtocolPB with 1 nodes: [nodeId=scmNodeId,nodeAddress=scm/10.9.0.17:9860]
2025-07-21 08:17:42,715 [main] INFO freon.DatanodeChunkValidator: Using pipeline Pipeline-ff4e3c11-d134-43c3-a991-341d39223a93
2025-07-21 08:17:42,750 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2025-07-21 08:17:43,042 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2025-07-21 08:17:44,043 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (100 out of 100)
2025-07-21 08:17:44,062 [shutdown-hook-0] INFO metrics: type=TIMER, name=chunk-validate, count=100, min=1.429508, max=4.168355, mean=1.9890358000000004, stddev=0.39381789249075516, median=1.937996, p75=2.142801, p95=2.481494, p98=2.99036, p99=3.442845, p999=4.168355, mean_rate=145.58906106456692, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2025-07-21 08:17:44,062 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2025-07-21 08:17:44,062 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2025-07-21 08:17:44,062 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 100</msg>
<status status="PASS" starttime="20250721 08:17:44.405" endtime="20250721 08:17:44.406"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250721 08:17:44.407" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250721 08:17:44.406" endtime="20250721 08:17:44.407"/>
</kw>
<status status="PASS" starttime="20250721 08:17:40.764" endtime="20250721 08:17:44.407"/>
</kw>
<msg timestamp="20250721 08:17:44.407" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250721 08:17:40.764" endtime="20250721 08:17:44.407"/>
</kw>
<msg timestamp="20250721 08:17:44.407" level="INFO">${result} = 2025-07-21 08:17:41,657 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-07-21 08:17:41,821 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250721 08:17:40.764" endtime="20250721 08:17:44.407"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250721 08:17:44.407" endtime="20250721 08:17:44.408"/>
</kw>
<status status="PASS" starttime="20250721 08:17:40.763" endtime="20250721 08:17:44.408"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250721 08:17:40.762" endtime="20250721 08:17:44.408"/>
</test>
<doc>Test freon chunk validation commands</doc>
<status status="PASS" starttime="20250721 08:17:39.966" endtime="20250721 08:17:44.409"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="61467"/>
</suite>
<statistics>
<total>
<stat pass="14" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="14" fail="0" skip="0" id="s1" name="restart">restart</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1" name="Generate">restart.Generate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2" name="Validate">restart.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s3" name="Generate-Chunk">restart.Generate-Chunk</stat>
<stat pass="1" fail="0" skip="0" id="s1-s4" name="Validate-Chunk">restart.Validate-Chunk</stat>
<stat pass="1" fail="0" skip="0" id="s1-s5" name="Validate">restart.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s6" name="Validate-Chunk">restart.Validate-Chunk</stat>
<stat pass="3" fail="0" skip="0" id="s1-s7" name="Generate">restart.Generate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s8" name="Validate">restart.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s9" name="Generate-Chunk">restart.Generate-Chunk</stat>
<stat pass="1" fail="0" skip="0" id="s1-s10" name="Validate-Chunk">restart.Validate-Chunk</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
