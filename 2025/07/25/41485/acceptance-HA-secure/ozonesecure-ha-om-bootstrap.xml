<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.1.1 (Python 3.9.21 on linux)" generated="20250725 08:01:24.763" rpa="false" schemaversion="4">
<suite id="s1" name="ozonesecure-ha-om-bootstrap">
<suite id="s1-s1" name="Kinit" source="/opt/hadoop/smoketest/kinit.robot">
<test id="s1-s1-t1" name="Kinit" line="27">
<kw name="Kinit test user" library="commonlib">
<arg>${USER}</arg>
<arg>${USER}.keytab</arg>
<kw name="Get Security Enabled From Config" library="commonlib">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' != ''</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20250725 07:59:34.403" endtime="20250725 07:59:34.403"/>
</kw>
<kw name="Execute" library="os">
<var>${value}</var>
<arg>ozone getconf confKey ozone.security.enabled</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250725 07:59:34.406" level="INFO">Running command 'ozone getconf confKey ozone.security.enabled 2&gt;&amp;1'.</msg>
<msg timestamp="20250725 07:59:35.391" level="INFO">${rc} = 0</msg>
<msg timestamp="20250725 07:59:35.391" level="INFO">${output} = true</msg>
<status status="PASS" starttime="20250725 07:59:34.404" endtime="20250725 07:59:35.391"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250725 07:59:35.392" level="INFO">true</msg>
<status status="PASS" starttime="20250725 07:59:35.392" endtime="20250725 07:59:35.392"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250725 07:59:35.393" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250725 07:59:35.393" endtime="20250725 07:59:35.393"/>
</kw>
<status status="PASS" starttime="20250725 07:59:34.403" endtime="20250725 07:59:35.393"/>
</kw>
<msg timestamp="20250725 07:59:35.393" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250725 07:59:34.403" endtime="20250725 07:59:35.393"/>
</kw>
<msg timestamp="20250725 07:59:35.393" level="INFO">${value} = true</msg>
<status status="PASS" starttime="20250725 07:59:34.403" endtime="20250725 07:59:35.393"/>
</kw>
<if>
<branch type="IF" condition="'${value}' != 'true' and '${value}' != 'false'">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>false</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20250725 07:59:35.394" endtime="20250725 07:59:35.394"/>
</kw>
<status status="NOT RUN" starttime="20250725 07:59:35.394" endtime="20250725 07:59:35.394"/>
</branch>
<status status="PASS" starttime="20250725 07:59:35.394" endtime="20250725 07:59:35.394"/>
</if>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${SECURITY_ENABLED}</arg>
<arg>${value}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250725 07:59:35.394" level="INFO">${SECURITY_ENABLED} = true</msg>
<status status="PASS" starttime="20250725 07:59:35.394" endtime="20250725 07:59:35.394"/>
</kw>
<status status="PASS" starttime="20250725 07:59:34.402" endtime="20250725 07:59:35.395"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250725 07:59:35.395" endtime="20250725 07:59:35.395"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250725 07:59:35.398" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250725 07:59:35.402" level="INFO">${rc} = 0</msg>
<msg timestamp="20250725 07:59:35.402" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20250725 07:59:35.396" endtime="20250725 07:59:35.402"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250725 07:59:35.403" level="INFO">om</msg>
<status status="PASS" starttime="20250725 07:59:35.402" endtime="20250725 07:59:35.403"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250725 07:59:35.403" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250725 07:59:35.403" endtime="20250725 07:59:35.403"/>
</kw>
<status status="PASS" starttime="20250725 07:59:35.396" endtime="20250725 07:59:35.403"/>
</kw>
<msg timestamp="20250725 07:59:35.403" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250725 07:59:35.396" endtime="20250725 07:59:35.403"/>
</kw>
<msg timestamp="20250725 07:59:35.404" level="INFO">${instance} = om</msg>
<status status="PASS" starttime="20250725 07:59:35.395" endtime="20250725 07:59:35.404"/>
</kw>
<msg timestamp="20250725 07:59:35.404" level="INFO">${TEST_USER} = testuser/om@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250725 07:59:35.395" endtime="20250725 07:59:35.404"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250725 07:59:35.404" level="INFO">${TEST_USER} = testuser/om@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250725 07:59:35.404" endtime="20250725 07:59:35.404"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250725 07:59:35.407" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/om@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250725 07:59:35.436" level="INFO">${rc} = 0</msg>
<msg timestamp="20250725 07:59:35.436" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250725 07:59:35.405" endtime="20250725 07:59:35.436"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250725 07:59:35.437" level="INFO"/>
<status status="PASS" starttime="20250725 07:59:35.437" endtime="20250725 07:59:35.437"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250725 07:59:35.438" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250725 07:59:35.437" endtime="20250725 07:59:35.438"/>
</kw>
<status status="PASS" starttime="20250725 07:59:35.405" endtime="20250725 07:59:35.438"/>
</kw>
<msg timestamp="20250725 07:59:35.438" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250725 07:59:35.405" endtime="20250725 07:59:35.438"/>
</kw>
<status status="PASS" starttime="20250725 07:59:35.405" endtime="20250725 07:59:35.438"/>
</kw>
<status status="PASS" starttime="20250725 07:59:35.404" endtime="20250725 07:59:35.438"/>
</kw>
<status status="PASS" starttime="20250725 07:59:34.402" endtime="20250725 07:59:35.438"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20250725 07:59:34.402" endtime="20250725 07:59:35.438"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" starttime="20250725 07:59:34.361" endtime="20250725 07:59:35.439"/>
</suite>
<suite id="s1-s2" name="Data-Creation-Before-Om-Bootstrap" source="/opt/hadoop/smoketest/omha/data-creation-before-om-bootstrap.robot">
<kw name="Get Security Enabled From Config" library="commonlib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' != ''</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20250725 07:59:36.113" endtime="20250725 07:59:36.114"/>
</kw>
<kw name="Execute" library="os">
<var>${value}</var>
<arg>ozone getconf confKey ozone.security.enabled</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250725 07:59:36.117" level="INFO">Running command 'ozone getconf confKey ozone.security.enabled 2&gt;&amp;1'.</msg>
<msg timestamp="20250725 07:59:37.105" level="INFO">${rc} = 0</msg>
<msg timestamp="20250725 07:59:37.105" level="INFO">${output} = true</msg>
<status status="PASS" starttime="20250725 07:59:36.114" endtime="20250725 07:59:37.105"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250725 07:59:37.106" level="INFO">true</msg>
<status status="PASS" starttime="20250725 07:59:37.105" endtime="20250725 07:59:37.106"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250725 07:59:37.106" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250725 07:59:37.106" endtime="20250725 07:59:37.106"/>
</kw>
<status status="PASS" starttime="20250725 07:59:36.114" endtime="20250725 07:59:37.107"/>
</kw>
<msg timestamp="20250725 07:59:37.107" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250725 07:59:36.114" endtime="20250725 07:59:37.107"/>
</kw>
<msg timestamp="20250725 07:59:37.107" level="INFO">${value} = true</msg>
<status status="PASS" starttime="20250725 07:59:36.114" endtime="20250725 07:59:37.107"/>
</kw>
<if>
<branch type="IF" condition="'${value}' != 'true' and '${value}' != 'false'">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>false</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20250725 07:59:37.107" endtime="20250725 07:59:37.107"/>
</kw>
<status status="NOT RUN" starttime="20250725 07:59:37.107" endtime="20250725 07:59:37.108"/>
</branch>
<status status="PASS" starttime="20250725 07:59:37.107" endtime="20250725 07:59:37.108"/>
</if>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${SECURITY_ENABLED}</arg>
<arg>${value}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250725 07:59:37.108" level="INFO">${SECURITY_ENABLED} = true</msg>
<status status="PASS" starttime="20250725 07:59:37.108" endtime="20250725 07:59:37.108"/>
</kw>
<status status="PASS" starttime="20250725 07:59:36.113" endtime="20250725 07:59:37.108"/>
</kw>
<test id="s1-s2-t1" name="Volume-bucket init" line="65">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get Security Enabled From Config" library="commonlib">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' != ''</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20250725 07:59:37.110" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250725 07:59:37.110" endtime="20250725 07:59:37.110"/>
</kw>
<kw name="Execute" library="os">
<var>${value}</var>
<arg>ozone getconf confKey ozone.security.enabled</arg>
<status status="NOT RUN" starttime="20250725 07:59:37.110" endtime="20250725 07:59:37.111"/>
</kw>
<if>
<branch type="IF" condition="'${value}' != 'true' and '${value}' != 'false'">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>false</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20250725 07:59:37.111" endtime="20250725 07:59:37.111"/>
</kw>
<status status="NOT RUN" starttime="20250725 07:59:37.111" endtime="20250725 07:59:37.111"/>
</branch>
<status status="NOT RUN" starttime="20250725 07:59:37.111" endtime="20250725 07:59:37.111"/>
</if>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${SECURITY_ENABLED}</arg>
<arg>${value}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20250725 07:59:37.111" endtime="20250725 07:59:37.111"/>
</kw>
<status status="PASS" starttime="20250725 07:59:37.110" endtime="20250725 07:59:37.111"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250725 07:59:37.111" endtime="20250725 07:59:37.112"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250725 07:59:37.119" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250725 07:59:37.129" level="INFO">${rc} = 0</msg>
<msg timestamp="20250725 07:59:37.129" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20250725 07:59:37.113" endtime="20250725 07:59:37.129"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250725 07:59:37.130" level="INFO">om</msg>
<status status="PASS" starttime="20250725 07:59:37.129" endtime="20250725 07:59:37.130"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250725 07:59:37.130" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250725 07:59:37.130" endtime="20250725 07:59:37.130"/>
</kw>
<status status="PASS" starttime="20250725 07:59:37.113" endtime="20250725 07:59:37.130"/>
</kw>
<msg timestamp="20250725 07:59:37.130" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250725 07:59:37.113" endtime="20250725 07:59:37.131"/>
</kw>
<msg timestamp="20250725 07:59:37.131" level="INFO">${instance} = om</msg>
<status status="PASS" starttime="20250725 07:59:37.112" endtime="20250725 07:59:37.131"/>
</kw>
<msg timestamp="20250725 07:59:37.131" level="INFO">${TEST_USER} = testuser/om@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250725 07:59:37.112" endtime="20250725 07:59:37.131"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250725 07:59:37.131" level="INFO">${TEST_USER} = testuser/om@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250725 07:59:37.131" endtime="20250725 07:59:37.131"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250725 07:59:37.136" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/om@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250725 07:59:37.164" level="INFO">${rc} = 0</msg>
<msg timestamp="20250725 07:59:37.164" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250725 07:59:37.133" endtime="20250725 07:59:37.164"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250725 07:59:37.165" level="INFO"/>
<status status="PASS" starttime="20250725 07:59:37.164" endtime="20250725 07:59:37.165"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250725 07:59:37.166" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250725 07:59:37.165" endtime="20250725 07:59:37.166"/>
</kw>
<status status="PASS" starttime="20250725 07:59:37.133" endtime="20250725 07:59:37.166"/>
</kw>
<msg timestamp="20250725 07:59:37.166" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250725 07:59:37.133" endtime="20250725 07:59:37.166"/>
</kw>
<status status="PASS" starttime="20250725 07:59:37.132" endtime="20250725 07:59:37.166"/>
</kw>
<status status="PASS" starttime="20250725 07:59:37.132" endtime="20250725 07:59:37.166"/>
</kw>
<status status="PASS" starttime="20250725 07:59:37.109" endtime="20250725 07:59:37.166"/>
</kw>
<status status="PASS" starttime="20250725 07:59:37.109" endtime="20250725 07:59:37.166"/>
</kw>
<kw name="Create volume and bucket">
<arg>${VOLUME}</arg>
<arg>${BUCKET}</arg>
<kw name="Execute" library="os">
<var>${vol_res}</var>
<arg>ozone sh volume create /${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250725 07:59:37.171" level="INFO">Running command 'ozone sh volume create /vol1 2&gt;&amp;1'.</msg>
<msg timestamp="20250725 07:59:40.684" level="INFO">${rc} = 0</msg>
<msg timestamp="20250725 07:59:40.684" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250725 07:59:37.168" endtime="20250725 07:59:40.684"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250725 07:59:40.685" level="INFO"/>
<status status="PASS" starttime="20250725 07:59:40.684" endtime="20250725 07:59:40.685"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250725 07:59:40.685" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250725 07:59:40.685" endtime="20250725 07:59:40.685"/>
</kw>
<status status="PASS" starttime="20250725 07:59:37.168" endtime="20250725 07:59:40.685"/>
</kw>
<msg timestamp="20250725 07:59:40.685" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250725 07:59:37.167" endtime="20250725 07:59:40.685"/>
</kw>
<msg timestamp="20250725 07:59:40.686" level="INFO">${vol_res} = </msg>
<status status="PASS" starttime="20250725 07:59:37.167" endtime="20250725 07:59:40.686"/>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${vol_res}</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20250725 07:59:40.686" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20250725 07:59:40.686" endtime="20250725 07:59:40.686"/>
</kw>
<kw name="Execute" library="os">
<var>${bucket_res}</var>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250725 07:59:40.689" level="INFO">Running command 'ozone sh bucket create /vol1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20250725 07:59:44.132" level="INFO">${rc} = 0</msg>
<msg timestamp="20250725 07:59:44.132" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250725 07:59:40.687" endtime="20250725 07:59:44.132"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250725 07:59:44.133" level="INFO"/>
<status status="PASS" starttime="20250725 07:59:44.133" endtime="20250725 07:59:44.133"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250725 07:59:44.134" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250725 07:59:44.133" endtime="20250725 07:59:44.134"/>
</kw>
<status status="PASS" starttime="20250725 07:59:40.687" endtime="20250725 07:59:44.134"/>
</kw>
<msg timestamp="20250725 07:59:44.134" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250725 07:59:40.686" endtime="20250725 07:59:44.134"/>
</kw>
<msg timestamp="20250725 07:59:44.134" level="INFO">${bucket_res} = </msg>
<status status="PASS" starttime="20250725 07:59:40.686" endtime="20250725 07:59:44.134"/>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${bucket_res}</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20250725 07:59:44.134" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20250725 07:59:44.134" endtime="20250725 07:59:44.134"/>
</kw>
<status status="PASS" starttime="20250725 07:59:37.166" endtime="20250725 07:59:44.134"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250725 07:59:37.108" endtime="20250725 07:59:44.135"/>
</test>
<test id="s1-s2-t2" name="Create 100 metadata keys under /vol1/bucket1" line="68">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get Security Enabled From Config" library="commonlib">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' != ''</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20250725 07:59:44.137" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250725 07:59:44.137" endtime="20250725 07:59:44.137"/>
</kw>
<kw name="Execute" library="os">
<var>${value}</var>
<arg>ozone getconf confKey ozone.security.enabled</arg>
<status status="NOT RUN" starttime="20250725 07:59:44.137" endtime="20250725 07:59:44.137"/>
</kw>
<if>
<branch type="IF" condition="'${value}' != 'true' and '${value}' != 'false'">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>false</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20250725 07:59:44.137" endtime="20250725 07:59:44.137"/>
</kw>
<status status="NOT RUN" starttime="20250725 07:59:44.137" endtime="20250725 07:59:44.137"/>
</branch>
<status status="NOT RUN" starttime="20250725 07:59:44.137" endtime="20250725 07:59:44.137"/>
</if>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${SECURITY_ENABLED}</arg>
<arg>${value}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20250725 07:59:44.138" endtime="20250725 07:59:44.138"/>
</kw>
<status status="PASS" starttime="20250725 07:59:44.136" endtime="20250725 07:59:44.138"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250725 07:59:44.138" endtime="20250725 07:59:44.138"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250725 07:59:44.141" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250725 07:59:44.145" level="INFO">${rc} = 0</msg>
<msg timestamp="20250725 07:59:44.145" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20250725 07:59:44.139" endtime="20250725 07:59:44.145"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250725 07:59:44.146" level="INFO">om</msg>
<status status="PASS" starttime="20250725 07:59:44.146" endtime="20250725 07:59:44.146"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250725 07:59:44.147" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250725 07:59:44.146" endtime="20250725 07:59:44.147"/>
</kw>
<status status="PASS" starttime="20250725 07:59:44.139" endtime="20250725 07:59:44.147"/>
</kw>
<msg timestamp="20250725 07:59:44.147" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250725 07:59:44.139" endtime="20250725 07:59:44.147"/>
</kw>
<msg timestamp="20250725 07:59:44.147" level="INFO">${instance} = om</msg>
<status status="PASS" starttime="20250725 07:59:44.138" endtime="20250725 07:59:44.147"/>
</kw>
<msg timestamp="20250725 07:59:44.147" level="INFO">${TEST_USER} = testuser/om@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250725 07:59:44.138" endtime="20250725 07:59:44.147"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250725 07:59:44.148" level="INFO">${TEST_USER} = testuser/om@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250725 07:59:44.147" endtime="20250725 07:59:44.148"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250725 07:59:44.151" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/om@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250725 07:59:44.191" level="INFO">${rc} = 0</msg>
<msg timestamp="20250725 07:59:44.191" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250725 07:59:44.149" endtime="20250725 07:59:44.192"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250725 07:59:44.192" level="INFO"/>
<status status="PASS" starttime="20250725 07:59:44.192" endtime="20250725 07:59:44.193"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250725 07:59:44.193" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250725 07:59:44.193" endtime="20250725 07:59:44.193"/>
</kw>
<status status="PASS" starttime="20250725 07:59:44.149" endtime="20250725 07:59:44.193"/>
</kw>
<msg timestamp="20250725 07:59:44.193" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250725 07:59:44.149" endtime="20250725 07:59:44.193"/>
</kw>
<status status="PASS" starttime="20250725 07:59:44.148" endtime="20250725 07:59:44.193"/>
</kw>
<status status="PASS" starttime="20250725 07:59:44.148" endtime="20250725 07:59:44.193"/>
</kw>
<status status="PASS" starttime="20250725 07:59:44.136" endtime="20250725 07:59:44.194"/>
</kw>
<status status="PASS" starttime="20250725 07:59:44.136" endtime="20250725 07:59:44.194"/>
</kw>
<kw name="Create metadata keys">
<arg>10</arg>
<arg>100</arg>
<arg>${VOLUME}</arg>
<arg>${BUCKET}</arg>
<kw name="Execute" library="os">
<var>${freon_res}</var>
<arg>ozone freon omkg -t ${threads} -n ${key_num} -v ${volume} -b ${bucket}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250725 07:59:44.198" level="INFO">Running command 'ozone freon omkg -t 10 -n 100 -v vol1 -b bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20250725 07:59:51.187" level="INFO">${rc} = 0</msg>
<msg timestamp="20250725 07:59:51.187" level="INFO">${output} = 2025-07-25 07:59:45,623 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-07-25 07:59:45,800 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250725 07:59:44.195" endtime="20250725 07:59:51.187"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250725 07:59:51.188" level="INFO">2025-07-25 07:59:45,623 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-07-25 07:59:45,800 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2025-07-25 07:59:45,801 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2025-07-25 07:59:46,025 [main] INFO freon.BaseFreonGenerator: Executing test with prefix 2malttuznp and number-of-tests 100
2025-07-25 07:59:46,089 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2025-07-25 07:59:47,090 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2025-07-25 07:59:48,091 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2025-07-25 07:59:49,094 [Thread-5] INFO freon.ProgressBar: Progress: 24.00 % (24 out of 100)
2025-07-25 07:59:50,100 [Thread-5] INFO freon.ProgressBar: Progress: 75.00 % (75 out of 100)
2025-07-25 07:59:51,100 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (100 out of 100)
2025-07-25 07:59:51,118 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=100, min=88.518961, max=627.310587, mean=243.1091754778282, stddev=118.52146910154488, median=208.909307, p75=245.632795, p95=573.309722, p98=596.528145, p99=596.681302, p999=627.310587, mean_rate=31.612254765459994, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2025-07-25 07:59:51,120 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 5
2025-07-25 07:59:51,121 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2025-07-25 07:59:51,121 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 100</msg>
<status status="PASS" starttime="20250725 07:59:51.187" endtime="20250725 07:59:51.188"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250725 07:59:51.188" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250725 07:59:51.188" endtime="20250725 07:59:51.188"/>
</kw>
<status status="PASS" starttime="20250725 07:59:44.195" endtime="20250725 07:59:51.188"/>
</kw>
<msg timestamp="20250725 07:59:51.189" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250725 07:59:44.195" endtime="20250725 07:59:51.189"/>
</kw>
<msg timestamp="20250725 07:59:51.189" level="INFO">${freon_res} = 2025-07-25 07:59:45,623 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-07-25 07:59:45,800 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250725 07:59:44.194" endtime="20250725 07:59:51.189"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${freon_res}</arg>
<arg>Successful executions: ${key_num}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250725 07:59:51.189" endtime="20250725 07:59:51.189"/>
</kw>
<status status="PASS" starttime="20250725 07:59:44.194" endtime="20250725 07:59:51.189"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250725 07:59:44.135" endtime="20250725 07:59:51.189"/>
</test>
<test id="s1-s2-t3" name="Create snapshot 'snap1'" line="71">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get Security Enabled From Config" library="commonlib">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' != ''</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20250725 07:59:51.192" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250725 07:59:51.192" endtime="20250725 07:59:51.192"/>
</kw>
<kw name="Execute" library="os">
<var>${value}</var>
<arg>ozone getconf confKey ozone.security.enabled</arg>
<status status="NOT RUN" starttime="20250725 07:59:51.192" endtime="20250725 07:59:51.192"/>
</kw>
<if>
<branch type="IF" condition="'${value}' != 'true' and '${value}' != 'false'">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>false</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20250725 07:59:51.192" endtime="20250725 07:59:51.192"/>
</kw>
<status status="NOT RUN" starttime="20250725 07:59:51.192" endtime="20250725 07:59:51.192"/>
</branch>
<status status="NOT RUN" starttime="20250725 07:59:51.192" endtime="20250725 07:59:51.192"/>
</if>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${SECURITY_ENABLED}</arg>
<arg>${value}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20250725 07:59:51.193" endtime="20250725 07:59:51.193"/>
</kw>
<status status="PASS" starttime="20250725 07:59:51.192" endtime="20250725 07:59:51.193"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250725 07:59:51.193" endtime="20250725 07:59:51.193"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250725 07:59:51.196" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250725 07:59:51.200" level="INFO">${rc} = 0</msg>
<msg timestamp="20250725 07:59:51.200" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20250725 07:59:51.194" endtime="20250725 07:59:51.200"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250725 07:59:51.201" level="INFO">om</msg>
<status status="PASS" starttime="20250725 07:59:51.201" endtime="20250725 07:59:51.201"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250725 07:59:51.202" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250725 07:59:51.201" endtime="20250725 07:59:51.202"/>
</kw>
<status status="PASS" starttime="20250725 07:59:51.194" endtime="20250725 07:59:51.202"/>
</kw>
<msg timestamp="20250725 07:59:51.202" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250725 07:59:51.194" endtime="20250725 07:59:51.202"/>
</kw>
<msg timestamp="20250725 07:59:51.202" level="INFO">${instance} = om</msg>
<status status="PASS" starttime="20250725 07:59:51.193" endtime="20250725 07:59:51.202"/>
</kw>
<msg timestamp="20250725 07:59:51.202" level="INFO">${TEST_USER} = testuser/om@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250725 07:59:51.193" endtime="20250725 07:59:51.202"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250725 07:59:51.203" level="INFO">${TEST_USER} = testuser/om@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250725 07:59:51.202" endtime="20250725 07:59:51.203"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250725 07:59:51.206" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/om@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250725 07:59:51.237" level="INFO">${rc} = 0</msg>
<msg timestamp="20250725 07:59:51.237" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250725 07:59:51.204" endtime="20250725 07:59:51.237"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250725 07:59:51.238" level="INFO"/>
<status status="PASS" starttime="20250725 07:59:51.237" endtime="20250725 07:59:51.238"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250725 07:59:51.238" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250725 07:59:51.238" endtime="20250725 07:59:51.238"/>
</kw>
<status status="PASS" starttime="20250725 07:59:51.204" endtime="20250725 07:59:51.238"/>
</kw>
<msg timestamp="20250725 07:59:51.238" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250725 07:59:51.203" endtime="20250725 07:59:51.238"/>
</kw>
<status status="PASS" starttime="20250725 07:59:51.203" endtime="20250725 07:59:51.238"/>
</kw>
<status status="PASS" starttime="20250725 07:59:51.203" endtime="20250725 07:59:51.239"/>
</kw>
<status status="PASS" starttime="20250725 07:59:51.191" endtime="20250725 07:59:51.239"/>
</kw>
<status status="PASS" starttime="20250725 07:59:51.191" endtime="20250725 07:59:51.239"/>
</kw>
<kw name="Create snapshot">
<arg>${VOLUME}</arg>
<arg>${BUCKET}</arg>
<arg>${SNAP_1}</arg>
<kw name="Execute" library="os">
<var>${snap_res}</var>
<arg>ozone sh snapshot create /${volume}/${bucket} ${snapshot}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250725 07:59:51.243" level="INFO">Running command 'ozone sh snapshot create /vol1/bucket1 snap1 2&gt;&amp;1'.</msg>
<msg timestamp="20250725 07:59:54.720" level="INFO">${rc} = 0</msg>
<msg timestamp="20250725 07:59:54.720" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250725 07:59:51.240" endtime="20250725 07:59:54.720"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250725 07:59:54.721" level="INFO"/>
<status status="PASS" starttime="20250725 07:59:54.720" endtime="20250725 07:59:54.721"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250725 07:59:54.721" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250725 07:59:54.721" endtime="20250725 07:59:54.721"/>
</kw>
<status status="PASS" starttime="20250725 07:59:51.240" endtime="20250725 07:59:54.721"/>
</kw>
<msg timestamp="20250725 07:59:54.721" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250725 07:59:51.240" endtime="20250725 07:59:54.721"/>
</kw>
<msg timestamp="20250725 07:59:54.722" level="INFO">${snap_res} = </msg>
<status status="PASS" starttime="20250725 07:59:51.239" endtime="20250725 07:59:54.722"/>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${snap_res}</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20250725 07:59:54.722" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20250725 07:59:54.722" endtime="20250725 07:59:54.722"/>
</kw>
<status status="PASS" starttime="20250725 07:59:51.239" endtime="20250725 07:59:54.722"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250725 07:59:51.190" endtime="20250725 07:59:54.722"/>
</test>
<test id="s1-s2-t4" name="Create 2 actual keys with prefix 'sn', key contents the same as the key name" line="74">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get Security Enabled From Config" library="commonlib">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' != ''</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20250725 07:59:54.725" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250725 07:59:54.724" endtime="20250725 07:59:54.725"/>
</kw>
<kw name="Execute" library="os">
<var>${value}</var>
<arg>ozone getconf confKey ozone.security.enabled</arg>
<status status="NOT RUN" starttime="20250725 07:59:54.725" endtime="20250725 07:59:54.725"/>
</kw>
<if>
<branch type="IF" condition="'${value}' != 'true' and '${value}' != 'false'">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>false</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20250725 07:59:54.725" endtime="20250725 07:59:54.725"/>
</kw>
<status status="NOT RUN" starttime="20250725 07:59:54.725" endtime="20250725 07:59:54.725"/>
</branch>
<status status="NOT RUN" starttime="20250725 07:59:54.725" endtime="20250725 07:59:54.725"/>
</if>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${SECURITY_ENABLED}</arg>
<arg>${value}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20250725 07:59:54.725" endtime="20250725 07:59:54.725"/>
</kw>
<status status="PASS" starttime="20250725 07:59:54.724" endtime="20250725 07:59:54.725"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250725 07:59:54.725" endtime="20250725 07:59:54.726"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250725 07:59:54.729" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250725 07:59:54.733" level="INFO">${rc} = 0</msg>
<msg timestamp="20250725 07:59:54.733" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20250725 07:59:54.727" endtime="20250725 07:59:54.733"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250725 07:59:54.734" level="INFO">om</msg>
<status status="PASS" starttime="20250725 07:59:54.733" endtime="20250725 07:59:54.734"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250725 07:59:54.734" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250725 07:59:54.734" endtime="20250725 07:59:54.734"/>
</kw>
<status status="PASS" starttime="20250725 07:59:54.726" endtime="20250725 07:59:54.734"/>
</kw>
<msg timestamp="20250725 07:59:54.734" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250725 07:59:54.726" endtime="20250725 07:59:54.734"/>
</kw>
<msg timestamp="20250725 07:59:54.735" level="INFO">${instance} = om</msg>
<status status="PASS" starttime="20250725 07:59:54.726" endtime="20250725 07:59:54.735"/>
</kw>
<msg timestamp="20250725 07:59:54.735" level="INFO">${TEST_USER} = testuser/om@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250725 07:59:54.726" endtime="20250725 07:59:54.735"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250725 07:59:54.735" level="INFO">${TEST_USER} = testuser/om@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250725 07:59:54.735" endtime="20250725 07:59:54.735"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250725 07:59:54.739" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/om@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250725 07:59:54.756" level="INFO">${rc} = 0</msg>
<msg timestamp="20250725 07:59:54.756" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250725 07:59:54.737" endtime="20250725 07:59:54.756"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250725 07:59:54.757" level="INFO"/>
<status status="PASS" starttime="20250725 07:59:54.757" endtime="20250725 07:59:54.757"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250725 07:59:54.758" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250725 07:59:54.757" endtime="20250725 07:59:54.758"/>
</kw>
<status status="PASS" starttime="20250725 07:59:54.736" endtime="20250725 07:59:54.758"/>
</kw>
<msg timestamp="20250725 07:59:54.758" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250725 07:59:54.736" endtime="20250725 07:59:54.758"/>
</kw>
<status status="PASS" starttime="20250725 07:59:54.736" endtime="20250725 07:59:54.758"/>
</kw>
<status status="PASS" starttime="20250725 07:59:54.735" endtime="20250725 07:59:54.758"/>
</kw>
<status status="PASS" starttime="20250725 07:59:54.724" endtime="20250725 07:59:54.758"/>
</kw>
<status status="PASS" starttime="20250725 07:59:54.723" endtime="20250725 07:59:54.758"/>
</kw>
<kw name="Create actual keys">
<arg>${VOLUME}</arg>
<arg>${BUCKET}</arg>
<arg>${KEY_PREFIX}</arg>
<arg>${KEY_1}</arg>
<arg>${KEY_2}</arg>
<arg>${TMP_FILE}</arg>
<kw name="Create a key and set contents same as the keyName">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${key_prefix}</arg>
<arg>${key_1}</arg>
<arg>${tmp_file}</arg>
<kw name="Execute" library="os">
<arg>echo "${key_prefix}/${key_name}" &gt; ${tmp_file}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250725 07:59:54.763" level="INFO">Running command 'echo "sn/key1" &gt; /tmp/tmp.txt'.</msg>
<msg timestamp="20250725 07:59:54.765" level="INFO">${rc} = 0</msg>
<msg timestamp="20250725 07:59:54.765" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250725 07:59:54.761" endtime="20250725 07:59:54.765"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250725 07:59:54.766" level="INFO"/>
<status status="PASS" starttime="20250725 07:59:54.765" endtime="20250725 07:59:54.766"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250725 07:59:54.767" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250725 07:59:54.766" endtime="20250725 07:59:54.767"/>
</kw>
<status status="PASS" starttime="20250725 07:59:54.760" endtime="20250725 07:59:54.767"/>
</kw>
<msg timestamp="20250725 07:59:54.767" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250725 07:59:54.760" endtime="20250725 07:59:54.767"/>
</kw>
<status status="PASS" starttime="20250725 07:59:54.759" endtime="20250725 07:59:54.767"/>
</kw>
<kw name="Execute" library="os">
<var>${key_res}</var>
<arg>ozone sh key put /${volume}/${bucket}/${key_prefix}/${key_name} ${tmp_file}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250725 07:59:54.772" level="INFO">Running command 'ozone sh key put /vol1/bucket1/sn/key1 /tmp/tmp.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20250725 08:00:00.774" level="INFO">${rc} = 0</msg>
<msg timestamp="20250725 08:00:00.774" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250725 07:59:54.770" endtime="20250725 08:00:00.775"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250725 08:00:00.775" level="INFO"/>
<status status="PASS" starttime="20250725 08:00:00.775" endtime="20250725 08:00:00.775"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250725 08:00:00.776" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250725 08:00:00.776" endtime="20250725 08:00:00.776"/>
</kw>
<status status="PASS" starttime="20250725 07:59:54.769" endtime="20250725 08:00:00.776"/>
</kw>
<msg timestamp="20250725 08:00:00.776" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250725 07:59:54.768" endtime="20250725 08:00:00.776"/>
</kw>
<msg timestamp="20250725 08:00:00.776" level="INFO">${key_res} = </msg>
<status status="PASS" starttime="20250725 07:59:54.768" endtime="20250725 08:00:00.776"/>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${key_res}</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20250725 08:00:00.777" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20250725 08:00:00.777" endtime="20250725 08:00:00.777"/>
</kw>
<kw name="Execute" library="os">
<var>${key_cat_res}</var>
<arg>ozone sh key cat /${volume}/${bucket}/${key_prefix}/${key_name}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250725 08:00:00.781" level="INFO">Running command 'ozone sh key cat /vol1/bucket1/sn/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20250725 08:00:06.368" level="INFO">${rc} = 0</msg>
<msg timestamp="20250725 08:00:06.368" level="INFO">${output} = sn/key1</msg>
<status status="PASS" starttime="20250725 08:00:00.778" endtime="20250725 08:00:06.368"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250725 08:00:06.369" level="INFO">sn/key1</msg>
<status status="PASS" starttime="20250725 08:00:06.368" endtime="20250725 08:00:06.369"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250725 08:00:06.369" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250725 08:00:06.369" endtime="20250725 08:00:06.369"/>
</kw>
<status status="PASS" starttime="20250725 08:00:00.778" endtime="20250725 08:00:06.369"/>
</kw>
<msg timestamp="20250725 08:00:06.370" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250725 08:00:00.777" endtime="20250725 08:00:06.370"/>
</kw>
<msg timestamp="20250725 08:00:06.370" level="INFO">${key_cat_res} = sn/key1</msg>
<status status="PASS" starttime="20250725 08:00:00.777" endtime="20250725 08:00:06.370"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${key_cat_res}</arg>
<arg>${key_prefix}/${key_name}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250725 08:00:06.370" endtime="20250725 08:00:06.370"/>
</kw>
<status status="PASS" starttime="20250725 07:59:54.759" endtime="20250725 08:00:06.370"/>
</kw>
<kw name="Create a key and set contents same as the keyName">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${key_prefix}</arg>
<arg>${key_2}</arg>
<arg>${tmp_file}</arg>
<kw name="Execute" library="os">
<arg>echo "${key_prefix}/${key_name}" &gt; ${tmp_file}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250725 08:00:06.374" level="INFO">Running command 'echo "sn/key2" &gt; /tmp/tmp.txt'.</msg>
<msg timestamp="20250725 08:00:06.376" level="INFO">${rc} = 0</msg>
<msg timestamp="20250725 08:00:06.376" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250725 08:00:06.372" endtime="20250725 08:00:06.376"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250725 08:00:06.377" level="INFO"/>
<status status="PASS" starttime="20250725 08:00:06.377" endtime="20250725 08:00:06.377"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250725 08:00:06.377" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250725 08:00:06.377" endtime="20250725 08:00:06.378"/>
</kw>
<status status="PASS" starttime="20250725 08:00:06.372" endtime="20250725 08:00:06.378"/>
</kw>
<msg timestamp="20250725 08:00:06.378" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250725 08:00:06.371" endtime="20250725 08:00:06.378"/>
</kw>
<status status="PASS" starttime="20250725 08:00:06.371" endtime="20250725 08:00:06.378"/>
</kw>
<kw name="Execute" library="os">
<var>${key_res}</var>
<arg>ozone sh key put /${volume}/${bucket}/${key_prefix}/${key_name} ${tmp_file}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250725 08:00:06.381" level="INFO">Running command 'ozone sh key put /vol1/bucket1/sn/key2 /tmp/tmp.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20250725 08:00:11.830" level="INFO">${rc} = 0</msg>
<msg timestamp="20250725 08:00:11.830" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250725 08:00:06.379" endtime="20250725 08:00:11.831"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250725 08:00:11.831" level="INFO"/>
<status status="PASS" starttime="20250725 08:00:11.831" endtime="20250725 08:00:11.832"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250725 08:00:11.832" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250725 08:00:11.832" endtime="20250725 08:00:11.832"/>
</kw>
<status status="PASS" starttime="20250725 08:00:06.379" endtime="20250725 08:00:11.832"/>
</kw>
<msg timestamp="20250725 08:00:11.832" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250725 08:00:06.378" endtime="20250725 08:00:11.832"/>
</kw>
<msg timestamp="20250725 08:00:11.833" level="INFO">${key_res} = </msg>
<status status="PASS" starttime="20250725 08:00:06.378" endtime="20250725 08:00:11.833"/>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${key_res}</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20250725 08:00:11.833" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20250725 08:00:11.833" endtime="20250725 08:00:11.833"/>
</kw>
<kw name="Execute" library="os">
<var>${key_cat_res}</var>
<arg>ozone sh key cat /${volume}/${bucket}/${key_prefix}/${key_name}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250725 08:00:11.837" level="INFO">Running command 'ozone sh key cat /vol1/bucket1/sn/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20250725 08:00:16.982" level="INFO">${rc} = 0</msg>
<msg timestamp="20250725 08:00:16.982" level="INFO">${output} = sn/key2</msg>
<status status="PASS" starttime="20250725 08:00:11.834" endtime="20250725 08:00:16.982"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250725 08:00:16.983" level="INFO">sn/key2</msg>
<status status="PASS" starttime="20250725 08:00:16.982" endtime="20250725 08:00:16.983"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250725 08:00:16.983" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250725 08:00:16.983" endtime="20250725 08:00:16.984"/>
</kw>
<status status="PASS" starttime="20250725 08:00:11.834" endtime="20250725 08:00:16.984"/>
</kw>
<msg timestamp="20250725 08:00:16.984" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250725 08:00:11.834" endtime="20250725 08:00:16.984"/>
</kw>
<msg timestamp="20250725 08:00:16.984" level="INFO">${key_cat_res} = sn/key2</msg>
<status status="PASS" starttime="20250725 08:00:11.833" endtime="20250725 08:00:16.984"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${key_cat_res}</arg>
<arg>${key_prefix}/${key_name}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250725 08:00:16.984" endtime="20250725 08:00:16.984"/>
</kw>
<status status="PASS" starttime="20250725 08:00:06.370" endtime="20250725 08:00:16.984"/>
</kw>
<status status="PASS" starttime="20250725 07:59:54.758" endtime="20250725 08:00:16.985"/>
</kw>
<kw name="Remove File" library="OperatingSystem" type="TEARDOWN">
<arg>${TMP_FILE}</arg>
<doc>Removes a file with the given path.</doc>
<msg timestamp="20250725 08:00:16.985" level="INFO" html="true">Removed file '&lt;a href="file:///tmp/tmp.txt"&gt;/tmp/tmp.txt&lt;/a&gt;'.</msg>
<status status="PASS" starttime="20250725 08:00:16.985" endtime="20250725 08:00:16.985"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250725 07:59:54.723" endtime="20250725 08:00:16.985"/>
</test>
<test id="s1-s2-t5" name="Create snapshot 'snap2'" line="78">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get Security Enabled From Config" library="commonlib">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' != ''</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20250725 08:00:16.987" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250725 08:00:16.987" endtime="20250725 08:00:16.987"/>
</kw>
<kw name="Execute" library="os">
<var>${value}</var>
<arg>ozone getconf confKey ozone.security.enabled</arg>
<status status="NOT RUN" starttime="20250725 08:00:16.987" endtime="20250725 08:00:16.987"/>
</kw>
<if>
<branch type="IF" condition="'${value}' != 'true' and '${value}' != 'false'">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>false</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20250725 08:00:16.988" endtime="20250725 08:00:16.988"/>
</kw>
<status status="NOT RUN" starttime="20250725 08:00:16.987" endtime="20250725 08:00:16.988"/>
</branch>
<status status="NOT RUN" starttime="20250725 08:00:16.987" endtime="20250725 08:00:16.988"/>
</if>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${SECURITY_ENABLED}</arg>
<arg>${value}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20250725 08:00:16.988" endtime="20250725 08:00:16.988"/>
</kw>
<status status="PASS" starttime="20250725 08:00:16.987" endtime="20250725 08:00:16.988"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250725 08:00:16.988" endtime="20250725 08:00:16.988"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250725 08:00:16.992" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250725 08:00:16.996" level="INFO">${rc} = 0</msg>
<msg timestamp="20250725 08:00:16.996" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20250725 08:00:16.990" endtime="20250725 08:00:16.996"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250725 08:00:16.997" level="INFO">om</msg>
<status status="PASS" starttime="20250725 08:00:16.996" endtime="20250725 08:00:16.997"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250725 08:00:16.997" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250725 08:00:16.997" endtime="20250725 08:00:16.997"/>
</kw>
<status status="PASS" starttime="20250725 08:00:16.989" endtime="20250725 08:00:16.997"/>
</kw>
<msg timestamp="20250725 08:00:16.997" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250725 08:00:16.989" endtime="20250725 08:00:16.997"/>
</kw>
<msg timestamp="20250725 08:00:16.997" level="INFO">${instance} = om</msg>
<status status="PASS" starttime="20250725 08:00:16.989" endtime="20250725 08:00:16.998"/>
</kw>
<msg timestamp="20250725 08:00:16.998" level="INFO">${TEST_USER} = testuser/om@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250725 08:00:16.988" endtime="20250725 08:00:16.998"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250725 08:00:16.998" level="INFO">${TEST_USER} = testuser/om@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250725 08:00:16.998" endtime="20250725 08:00:16.998"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250725 08:00:17.002" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/om@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250725 08:00:17.030" level="INFO">${rc} = 0</msg>
<msg timestamp="20250725 08:00:17.030" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250725 08:00:16.999" endtime="20250725 08:00:17.030"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250725 08:00:17.031" level="INFO"/>
<status status="PASS" starttime="20250725 08:00:17.030" endtime="20250725 08:00:17.031"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250725 08:00:17.031" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250725 08:00:17.031" endtime="20250725 08:00:17.031"/>
</kw>
<status status="PASS" starttime="20250725 08:00:16.999" endtime="20250725 08:00:17.031"/>
</kw>
<msg timestamp="20250725 08:00:17.031" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250725 08:00:16.999" endtime="20250725 08:00:17.031"/>
</kw>
<status status="PASS" starttime="20250725 08:00:16.998" endtime="20250725 08:00:17.031"/>
</kw>
<status status="PASS" starttime="20250725 08:00:16.998" endtime="20250725 08:00:17.031"/>
</kw>
<status status="PASS" starttime="20250725 08:00:16.986" endtime="20250725 08:00:17.032"/>
</kw>
<status status="PASS" starttime="20250725 08:00:16.986" endtime="20250725 08:00:17.032"/>
</kw>
<kw name="Create snapshot">
<arg>${VOLUME}</arg>
<arg>${BUCKET}</arg>
<arg>${SNAP_2}</arg>
<kw name="Execute" library="os">
<var>${snap_res}</var>
<arg>ozone sh snapshot create /${volume}/${bucket} ${snapshot}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250725 08:00:17.035" level="INFO">Running command 'ozone sh snapshot create /vol1/bucket1 snap2 2&gt;&amp;1'.</msg>
<msg timestamp="20250725 08:00:20.339" level="INFO">${rc} = 0</msg>
<msg timestamp="20250725 08:00:20.339" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250725 08:00:17.033" endtime="20250725 08:00:20.339"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250725 08:00:20.340" level="INFO"/>
<status status="PASS" starttime="20250725 08:00:20.339" endtime="20250725 08:00:20.340"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250725 08:00:20.341" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250725 08:00:20.340" endtime="20250725 08:00:20.341"/>
</kw>
<status status="PASS" starttime="20250725 08:00:17.033" endtime="20250725 08:00:20.341"/>
</kw>
<msg timestamp="20250725 08:00:20.341" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250725 08:00:17.033" endtime="20250725 08:00:20.341"/>
</kw>
<msg timestamp="20250725 08:00:20.341" level="INFO">${snap_res} = </msg>
<status status="PASS" starttime="20250725 08:00:17.032" endtime="20250725 08:00:20.341"/>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${snap_res}</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20250725 08:00:20.342" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20250725 08:00:20.341" endtime="20250725 08:00:20.342"/>
</kw>
<status status="PASS" starttime="20250725 08:00:17.032" endtime="20250725 08:00:20.342"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250725 08:00:16.986" endtime="20250725 08:00:20.342"/>
</test>
<doc>Smoke test for creating data needed for om bootstrap load test.</doc>
<status status="PASS" starttime="20250725 07:59:36.077" endtime="20250725 08:00:20.343"/>
</suite>
<suite id="s1-s3" name="Kinit" source="/opt/hadoop/smoketest/kinit.robot">
<test id="s1-s3-t1" name="Kinit" line="27">
<kw name="Kinit test user" library="commonlib">
<arg>${USER}</arg>
<arg>${USER}.keytab</arg>
<kw name="Get Security Enabled From Config" library="commonlib">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' != ''</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20250725 08:00:35.655" endtime="20250725 08:00:35.655"/>
</kw>
<kw name="Execute" library="os">
<var>${value}</var>
<arg>ozone getconf confKey ozone.security.enabled</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250725 08:00:35.658" level="INFO">Running command 'ozone getconf confKey ozone.security.enabled 2&gt;&amp;1'.</msg>
<msg timestamp="20250725 08:00:37.201" level="INFO">${rc} = 0</msg>
<msg timestamp="20250725 08:00:37.201" level="INFO">${output} = true</msg>
<status status="PASS" starttime="20250725 08:00:35.656" endtime="20250725 08:00:37.201"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250725 08:00:37.202" level="INFO">true</msg>
<status status="PASS" starttime="20250725 08:00:37.202" endtime="20250725 08:00:37.202"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250725 08:00:37.203" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250725 08:00:37.203" endtime="20250725 08:00:37.203"/>
</kw>
<status status="PASS" starttime="20250725 08:00:35.656" endtime="20250725 08:00:37.203"/>
</kw>
<msg timestamp="20250725 08:00:37.203" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250725 08:00:35.656" endtime="20250725 08:00:37.203"/>
</kw>
<msg timestamp="20250725 08:00:37.203" level="INFO">${value} = true</msg>
<status status="PASS" starttime="20250725 08:00:35.655" endtime="20250725 08:00:37.203"/>
</kw>
<if>
<branch type="IF" condition="'${value}' != 'true' and '${value}' != 'false'">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>false</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20250725 08:00:37.204" endtime="20250725 08:00:37.204"/>
</kw>
<status status="NOT RUN" starttime="20250725 08:00:37.204" endtime="20250725 08:00:37.204"/>
</branch>
<status status="PASS" starttime="20250725 08:00:37.204" endtime="20250725 08:00:37.204"/>
</if>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${SECURITY_ENABLED}</arg>
<arg>${value}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250725 08:00:37.205" level="INFO">${SECURITY_ENABLED} = true</msg>
<status status="PASS" starttime="20250725 08:00:37.204" endtime="20250725 08:00:37.205"/>
</kw>
<status status="PASS" starttime="20250725 08:00:35.655" endtime="20250725 08:00:37.205"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250725 08:00:37.205" endtime="20250725 08:00:37.205"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250725 08:00:37.208" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250725 08:00:37.212" level="INFO">${rc} = 0</msg>
<msg timestamp="20250725 08:00:37.212" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20250725 08:00:37.206" endtime="20250725 08:00:37.212"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250725 08:00:37.213" level="INFO">om</msg>
<status status="PASS" starttime="20250725 08:00:37.213" endtime="20250725 08:00:37.213"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250725 08:00:37.213" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250725 08:00:37.213" endtime="20250725 08:00:37.213"/>
</kw>
<status status="PASS" starttime="20250725 08:00:37.206" endtime="20250725 08:00:37.214"/>
</kw>
<msg timestamp="20250725 08:00:37.214" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250725 08:00:37.206" endtime="20250725 08:00:37.214"/>
</kw>
<msg timestamp="20250725 08:00:37.214" level="INFO">${instance} = om</msg>
<status status="PASS" starttime="20250725 08:00:37.205" endtime="20250725 08:00:37.214"/>
</kw>
<msg timestamp="20250725 08:00:37.214" level="INFO">${TEST_USER} = testuser/om@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250725 08:00:37.205" endtime="20250725 08:00:37.214"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250725 08:00:37.214" level="INFO">${TEST_USER} = testuser/om@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250725 08:00:37.214" endtime="20250725 08:00:37.214"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250725 08:00:37.218" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/om@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250725 08:00:37.233" level="INFO">${rc} = 0</msg>
<msg timestamp="20250725 08:00:37.234" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250725 08:00:37.216" endtime="20250725 08:00:37.234"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250725 08:00:37.235" level="INFO"/>
<status status="PASS" starttime="20250725 08:00:37.234" endtime="20250725 08:00:37.235"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250725 08:00:37.235" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250725 08:00:37.235" endtime="20250725 08:00:37.235"/>
</kw>
<status status="PASS" starttime="20250725 08:00:37.215" endtime="20250725 08:00:37.235"/>
</kw>
<msg timestamp="20250725 08:00:37.235" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250725 08:00:37.215" endtime="20250725 08:00:37.235"/>
</kw>
<status status="PASS" starttime="20250725 08:00:37.215" endtime="20250725 08:00:37.235"/>
</kw>
<status status="PASS" starttime="20250725 08:00:37.215" endtime="20250725 08:00:37.236"/>
</kw>
<status status="PASS" starttime="20250725 08:00:35.654" endtime="20250725 08:00:37.236"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20250725 08:00:35.654" endtime="20250725 08:00:37.236"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" starttime="20250725 08:00:35.617" endtime="20250725 08:00:37.237"/>
</suite>
<suite id="s1-s4" name="Data-Validation-After-Om-Bootstrap" source="/opt/hadoop/smoketest/omha/data-validation-after-om-bootstrap.robot">
<kw name="Get Security Enabled From Config" library="commonlib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' != ''</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20250725 08:00:37.917" endtime="20250725 08:00:37.918"/>
</kw>
<kw name="Execute" library="os">
<var>${value}</var>
<arg>ozone getconf confKey ozone.security.enabled</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250725 08:00:37.921" level="INFO">Running command 'ozone getconf confKey ozone.security.enabled 2&gt;&amp;1'.</msg>
<msg timestamp="20250725 08:00:38.881" level="INFO">${rc} = 0</msg>
<msg timestamp="20250725 08:00:38.881" level="INFO">${output} = true</msg>
<status status="PASS" starttime="20250725 08:00:37.918" endtime="20250725 08:00:38.881"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250725 08:00:38.882" level="INFO">true</msg>
<status status="PASS" starttime="20250725 08:00:38.881" endtime="20250725 08:00:38.882"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250725 08:00:38.882" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250725 08:00:38.882" endtime="20250725 08:00:38.882"/>
</kw>
<status status="PASS" starttime="20250725 08:00:37.918" endtime="20250725 08:00:38.882"/>
</kw>
<msg timestamp="20250725 08:00:38.882" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250725 08:00:37.918" endtime="20250725 08:00:38.883"/>
</kw>
<msg timestamp="20250725 08:00:38.883" level="INFO">${value} = true</msg>
<status status="PASS" starttime="20250725 08:00:37.918" endtime="20250725 08:00:38.883"/>
</kw>
<if>
<branch type="IF" condition="'${value}' != 'true' and '${value}' != 'false'">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>false</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20250725 08:00:38.883" endtime="20250725 08:00:38.883"/>
</kw>
<status status="NOT RUN" starttime="20250725 08:00:38.883" endtime="20250725 08:00:38.883"/>
</branch>
<status status="PASS" starttime="20250725 08:00:38.883" endtime="20250725 08:00:38.883"/>
</if>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${SECURITY_ENABLED}</arg>
<arg>${value}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250725 08:00:38.884" level="INFO">${SECURITY_ENABLED} = true</msg>
<status status="PASS" starttime="20250725 08:00:38.883" endtime="20250725 08:00:38.884"/>
</kw>
<status status="PASS" starttime="20250725 08:00:37.917" endtime="20250725 08:00:38.884"/>
</kw>
<test id="s1-s4-t1" name="Check number of checkpoints made" line="86">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get Security Enabled From Config" library="commonlib">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' != ''</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20250725 08:00:38.885" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250725 08:00:38.885" endtime="20250725 08:00:38.886"/>
</kw>
<kw name="Execute" library="os">
<var>${value}</var>
<arg>ozone getconf confKey ozone.security.enabled</arg>
<status status="NOT RUN" starttime="20250725 08:00:38.886" endtime="20250725 08:00:38.886"/>
</kw>
<if>
<branch type="IF" condition="'${value}' != 'true' and '${value}' != 'false'">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>false</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20250725 08:00:38.886" endtime="20250725 08:00:38.886"/>
</kw>
<status status="NOT RUN" starttime="20250725 08:00:38.886" endtime="20250725 08:00:38.886"/>
</branch>
<status status="NOT RUN" starttime="20250725 08:00:38.886" endtime="20250725 08:00:38.886"/>
</if>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${SECURITY_ENABLED}</arg>
<arg>${value}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20250725 08:00:38.886" endtime="20250725 08:00:38.886"/>
</kw>
<status status="PASS" starttime="20250725 08:00:38.885" endtime="20250725 08:00:38.886"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250725 08:00:38.886" endtime="20250725 08:00:38.886"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250725 08:00:38.890" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250725 08:00:38.894" level="INFO">${rc} = 0</msg>
<msg timestamp="20250725 08:00:38.894" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20250725 08:00:38.887" endtime="20250725 08:00:38.894"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250725 08:00:38.895" level="INFO">om</msg>
<status status="PASS" starttime="20250725 08:00:38.894" endtime="20250725 08:00:38.895"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250725 08:00:38.895" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250725 08:00:38.895" endtime="20250725 08:00:38.895"/>
</kw>
<status status="PASS" starttime="20250725 08:00:38.887" endtime="20250725 08:00:38.895"/>
</kw>
<msg timestamp="20250725 08:00:38.895" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250725 08:00:38.887" endtime="20250725 08:00:38.896"/>
</kw>
<msg timestamp="20250725 08:00:38.896" level="INFO">${instance} = om</msg>
<status status="PASS" starttime="20250725 08:00:38.887" endtime="20250725 08:00:38.896"/>
</kw>
<msg timestamp="20250725 08:00:38.896" level="INFO">${TEST_USER} = testuser/om@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250725 08:00:38.886" endtime="20250725 08:00:38.896"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250725 08:00:38.896" level="INFO">${TEST_USER} = testuser/om@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250725 08:00:38.896" endtime="20250725 08:00:38.896"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250725 08:00:38.900" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/om@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250725 08:00:38.924" level="INFO">${rc} = 0</msg>
<msg timestamp="20250725 08:00:38.924" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250725 08:00:38.898" endtime="20250725 08:00:38.924"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250725 08:00:38.925" level="INFO"/>
<status status="PASS" starttime="20250725 08:00:38.924" endtime="20250725 08:00:38.925"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250725 08:00:38.925" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250725 08:00:38.925" endtime="20250725 08:00:38.925"/>
</kw>
<status status="PASS" starttime="20250725 08:00:38.897" endtime="20250725 08:00:38.925"/>
</kw>
<msg timestamp="20250725 08:00:38.925" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250725 08:00:38.897" endtime="20250725 08:00:38.925"/>
</kw>
<status status="PASS" starttime="20250725 08:00:38.897" endtime="20250725 08:00:38.926"/>
</kw>
<status status="PASS" starttime="20250725 08:00:38.896" endtime="20250725 08:00:38.926"/>
</kw>
<status status="PASS" starttime="20250725 08:00:38.885" endtime="20250725 08:00:38.926"/>
</kw>
<status status="PASS" starttime="20250725 08:00:38.884" endtime="20250725 08:00:38.926"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>5sec</arg>
<arg>Number of checkpoints equals 2</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Number of checkpoints equals 2">
<kw name="Execute" library="os">
<var>${checkpoints}</var>
<arg>ls -lah /data/metadata/db.snapshots/checkpointState | grep 'om.db-' | wc -l</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250725 08:00:38.929" level="INFO">Running command 'ls -lah /data/metadata/db.snapshots/checkpointState | grep 'om.db-' | wc -l 2&gt;&amp;1'.</msg>
<msg timestamp="20250725 08:00:38.934" level="INFO">${rc} = 0</msg>
<msg timestamp="20250725 08:00:38.934" level="INFO">${output} = 2</msg>
<status status="PASS" starttime="20250725 08:00:38.927" endtime="20250725 08:00:38.934"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250725 08:00:38.935" level="INFO">2</msg>
<status status="PASS" starttime="20250725 08:00:38.934" endtime="20250725 08:00:38.935"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250725 08:00:38.935" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250725 08:00:38.935" endtime="20250725 08:00:38.935"/>
</kw>
<status status="PASS" starttime="20250725 08:00:38.927" endtime="20250725 08:00:38.935"/>
</kw>
<msg timestamp="20250725 08:00:38.935" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250725 08:00:38.927" endtime="20250725 08:00:38.935"/>
</kw>
<msg timestamp="20250725 08:00:38.936" level="INFO">${checkpoints} = 2</msg>
<status status="PASS" starttime="20250725 08:00:38.926" endtime="20250725 08:00:38.936"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${checkpoints} == 2</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20250725 08:00:38.936" endtime="20250725 08:00:38.936"/>
</kw>
<status status="PASS" starttime="20250725 08:00:38.926" endtime="20250725 08:00:38.936"/>
</kw>
<status status="PASS" starttime="20250725 08:00:38.926" endtime="20250725 08:00:38.936"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250725 08:00:38.884" endtime="20250725 08:00:38.936"/>
</test>
<test id="s1-s4-t2" name="Check current leader and transfer leadership to 'om3'" line="89">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get Security Enabled From Config" library="commonlib">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' != ''</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20250725 08:00:38.938" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250725 08:00:38.938" endtime="20250725 08:00:38.938"/>
</kw>
<kw name="Execute" library="os">
<var>${value}</var>
<arg>ozone getconf confKey ozone.security.enabled</arg>
<status status="NOT RUN" starttime="20250725 08:00:38.939" endtime="20250725 08:00:38.939"/>
</kw>
<if>
<branch type="IF" condition="'${value}' != 'true' and '${value}' != 'false'">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>false</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20250725 08:00:38.939" endtime="20250725 08:00:38.939"/>
</kw>
<status status="NOT RUN" starttime="20250725 08:00:38.939" endtime="20250725 08:00:38.939"/>
</branch>
<status status="NOT RUN" starttime="20250725 08:00:38.939" endtime="20250725 08:00:38.939"/>
</if>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${SECURITY_ENABLED}</arg>
<arg>${value}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20250725 08:00:38.939" endtime="20250725 08:00:38.939"/>
</kw>
<status status="PASS" starttime="20250725 08:00:38.938" endtime="20250725 08:00:38.939"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250725 08:00:38.939" endtime="20250725 08:00:38.939"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250725 08:00:38.943" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250725 08:00:38.946" level="INFO">${rc} = 0</msg>
<msg timestamp="20250725 08:00:38.946" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20250725 08:00:38.941" endtime="20250725 08:00:38.946"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250725 08:00:38.947" level="INFO">om</msg>
<status status="PASS" starttime="20250725 08:00:38.946" endtime="20250725 08:00:38.947"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250725 08:00:38.947" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250725 08:00:38.947" endtime="20250725 08:00:38.947"/>
</kw>
<status status="PASS" starttime="20250725 08:00:38.940" endtime="20250725 08:00:38.948"/>
</kw>
<msg timestamp="20250725 08:00:38.948" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250725 08:00:38.940" endtime="20250725 08:00:38.948"/>
</kw>
<msg timestamp="20250725 08:00:38.948" level="INFO">${instance} = om</msg>
<status status="PASS" starttime="20250725 08:00:38.940" endtime="20250725 08:00:38.948"/>
</kw>
<msg timestamp="20250725 08:00:38.948" level="INFO">${TEST_USER} = testuser/om@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250725 08:00:38.940" endtime="20250725 08:00:38.948"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250725 08:00:38.948" level="INFO">${TEST_USER} = testuser/om@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250725 08:00:38.948" endtime="20250725 08:00:38.948"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250725 08:00:38.952" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/om@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250725 08:00:38.979" level="INFO">${rc} = 0</msg>
<msg timestamp="20250725 08:00:38.979" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250725 08:00:38.950" endtime="20250725 08:00:38.979"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250725 08:00:38.980" level="INFO"/>
<status status="PASS" starttime="20250725 08:00:38.980" endtime="20250725 08:00:38.980"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250725 08:00:38.981" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250725 08:00:38.980" endtime="20250725 08:00:38.981"/>
</kw>
<status status="PASS" starttime="20250725 08:00:38.949" endtime="20250725 08:00:38.981"/>
</kw>
<msg timestamp="20250725 08:00:38.981" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250725 08:00:38.949" endtime="20250725 08:00:38.981"/>
</kw>
<status status="PASS" starttime="20250725 08:00:38.949" endtime="20250725 08:00:38.981"/>
</kw>
<status status="PASS" starttime="20250725 08:00:38.949" endtime="20250725 08:00:38.981"/>
</kw>
<status status="PASS" starttime="20250725 08:00:38.938" endtime="20250725 08:00:38.981"/>
</kw>
<status status="PASS" starttime="20250725 08:00:38.937" endtime="20250725 08:00:38.981"/>
</kw>
<kw name="Check current leader is different than OM">
<arg>${BOOTSTRAPPED_OM}</arg>
<kw name="Execute" library="os">
<var>${leader}</var>
<arg>ozone admin om roles -id=omservice | grep 'LEADER' | awk -F ':' '{ print $1 }'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250725 08:00:38.985" level="INFO">Running command 'ozone admin om roles -id=omservice | grep 'LEADER' | awk -F ':' '{ print $1 }' 2&gt;&amp;1'.</msg>
<msg timestamp="20250725 08:00:42.105" level="INFO">${rc} = 0</msg>
<msg timestamp="20250725 08:00:42.105" level="INFO">${output} = om1 </msg>
<status status="PASS" starttime="20250725 08:00:38.983" endtime="20250725 08:00:42.105"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250725 08:00:42.106" level="INFO">om1 </msg>
<status status="PASS" starttime="20250725 08:00:42.106" endtime="20250725 08:00:42.106"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250725 08:00:42.107" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250725 08:00:42.106" endtime="20250725 08:00:42.107"/>
</kw>
<status status="PASS" starttime="20250725 08:00:38.982" endtime="20250725 08:00:42.107"/>
</kw>
<msg timestamp="20250725 08:00:42.107" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250725 08:00:38.982" endtime="20250725 08:00:42.107"/>
</kw>
<msg timestamp="20250725 08:00:42.107" level="INFO">${leader} = om1 </msg>
<status status="PASS" starttime="20250725 08:00:38.982" endtime="20250725 08:00:42.107"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${leader}</arg>
<arg>${om}</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250725 08:00:42.107" endtime="20250725 08:00:42.108"/>
</kw>
<status status="PASS" starttime="20250725 08:00:38.982" endtime="20250725 08:00:42.108"/>
</kw>
<kw name="Transfer leadership to OM">
<arg>${BOOTSTRAPPED_OM}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om transfer --service-id=omservice -n ${new_leader}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250725 08:00:42.111" level="INFO">Running command 'ozone admin om transfer --service-id=omservice -n om3 2&gt;&amp;1'.</msg>
<msg timestamp="20250725 08:00:48.708" level="INFO">${rc} = 0</msg>
<msg timestamp="20250725 08:00:48.708" level="INFO">${output} = Transfer leadership successfully to om3.</msg>
<status status="PASS" starttime="20250725 08:00:42.109" endtime="20250725 08:00:48.708"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250725 08:00:48.709" level="INFO">Transfer leadership successfully to om3.</msg>
<status status="PASS" starttime="20250725 08:00:48.708" endtime="20250725 08:00:48.709"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250725 08:00:48.709" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250725 08:00:48.709" endtime="20250725 08:00:48.709"/>
</kw>
<status status="PASS" starttime="20250725 08:00:42.109" endtime="20250725 08:00:48.709"/>
</kw>
<msg timestamp="20250725 08:00:48.709" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250725 08:00:42.109" endtime="20250725 08:00:48.710"/>
</kw>
<msg timestamp="20250725 08:00:48.710" level="INFO">${result} = Transfer leadership successfully to om3.</msg>
<status status="PASS" starttime="20250725 08:00:42.108" endtime="20250725 08:00:48.710"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Transfer leadership successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250725 08:00:48.710" endtime="20250725 08:00:48.710"/>
</kw>
<status status="PASS" starttime="20250725 08:00:42.108" endtime="20250725 08:00:48.710"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250725 08:00:38.937" endtime="20250725 08:00:48.710"/>
</test>
<test id="s1-s4-t3" name="Snapshots exist on 'om3'" line="93">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get Security Enabled From Config" library="commonlib">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' != ''</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20250725 08:00:48.713" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250725 08:00:48.713" endtime="20250725 08:00:48.713"/>
</kw>
<kw name="Execute" library="os">
<var>${value}</var>
<arg>ozone getconf confKey ozone.security.enabled</arg>
<status status="NOT RUN" starttime="20250725 08:00:48.713" endtime="20250725 08:00:48.713"/>
</kw>
<if>
<branch type="IF" condition="'${value}' != 'true' and '${value}' != 'false'">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>false</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20250725 08:00:48.713" endtime="20250725 08:00:48.713"/>
</kw>
<status status="NOT RUN" starttime="20250725 08:00:48.713" endtime="20250725 08:00:48.713"/>
</branch>
<status status="NOT RUN" starttime="20250725 08:00:48.713" endtime="20250725 08:00:48.713"/>
</if>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${SECURITY_ENABLED}</arg>
<arg>${value}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20250725 08:00:48.713" endtime="20250725 08:00:48.713"/>
</kw>
<status status="PASS" starttime="20250725 08:00:48.712" endtime="20250725 08:00:48.714"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250725 08:00:48.714" endtime="20250725 08:00:48.714"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250725 08:00:48.717" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250725 08:00:48.721" level="INFO">${rc} = 0</msg>
<msg timestamp="20250725 08:00:48.721" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20250725 08:00:48.715" endtime="20250725 08:00:48.721"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250725 08:00:48.722" level="INFO">om</msg>
<status status="PASS" starttime="20250725 08:00:48.721" endtime="20250725 08:00:48.722"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250725 08:00:48.722" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250725 08:00:48.722" endtime="20250725 08:00:48.722"/>
</kw>
<status status="PASS" starttime="20250725 08:00:48.715" endtime="20250725 08:00:48.722"/>
</kw>
<msg timestamp="20250725 08:00:48.722" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250725 08:00:48.714" endtime="20250725 08:00:48.723"/>
</kw>
<msg timestamp="20250725 08:00:48.723" level="INFO">${instance} = om</msg>
<status status="PASS" starttime="20250725 08:00:48.714" endtime="20250725 08:00:48.723"/>
</kw>
<msg timestamp="20250725 08:00:48.723" level="INFO">${TEST_USER} = testuser/om@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250725 08:00:48.714" endtime="20250725 08:00:48.723"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250725 08:00:48.723" level="INFO">${TEST_USER} = testuser/om@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250725 08:00:48.723" endtime="20250725 08:00:48.723"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250725 08:00:48.727" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/om@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250725 08:00:48.751" level="INFO">${rc} = 0</msg>
<msg timestamp="20250725 08:00:48.751" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250725 08:00:48.725" endtime="20250725 08:00:48.751"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250725 08:00:48.752" level="INFO"/>
<status status="PASS" starttime="20250725 08:00:48.751" endtime="20250725 08:00:48.752"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250725 08:00:48.752" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250725 08:00:48.752" endtime="20250725 08:00:48.752"/>
</kw>
<status status="PASS" starttime="20250725 08:00:48.724" endtime="20250725 08:00:48.752"/>
</kw>
<msg timestamp="20250725 08:00:48.752" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250725 08:00:48.724" endtime="20250725 08:00:48.753"/>
</kw>
<status status="PASS" starttime="20250725 08:00:48.724" endtime="20250725 08:00:48.753"/>
</kw>
<status status="PASS" starttime="20250725 08:00:48.723" endtime="20250725 08:00:48.753"/>
</kw>
<status status="PASS" starttime="20250725 08:00:48.712" endtime="20250725 08:00:48.753"/>
</kw>
<status status="PASS" starttime="20250725 08:00:48.711" endtime="20250725 08:00:48.753"/>
</kw>
<kw name="Check snapshots on OM">
<arg>${VOLUME}</arg>
<arg>${BUCKET}</arg>
<arg>${SNAP_1}</arg>
<arg>${SNAP_2}</arg>
<kw name="Execute" library="os">
<var>${snap_list}</var>
<arg>ozone sh snapshot list /${volume}/${bucket}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250725 08:00:48.757" level="INFO">Running command 'ozone sh snapshot list /vol1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20250725 08:00:52.464" level="INFO">${rc} = 0</msg>
<msg timestamp="20250725 08:00:52.464" level="INFO">${output} = [ {
  "volumeName" : "vol1",
  "bucketName" : "bucket1",
  "name" : "snap1",
  "creationTime" : 1753430394473,
  "snapshotStatus" : "SNAPSHOT_ACTIVE",
  "snapshotId" : "1dca01de-4aec-4e6b-85f9-bb7a2c4...</msg>
<status status="PASS" starttime="20250725 08:00:48.754" endtime="20250725 08:00:52.464"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250725 08:00:52.465" level="INFO">[ {
  "volumeName" : "vol1",
  "bucketName" : "bucket1",
  "name" : "snap1",
  "creationTime" : 1753430394473,
  "snapshotStatus" : "SNAPSHOT_ACTIVE",
  "snapshotId" : "1dca01de-4aec-4e6b-85f9-bb7a2c4f33d5",
  "snapshotPath" : "vol1/bucket1",
  "checkpointDir" : "-1dca01de-4aec-4e6b-85f9-bb7a2c4f33d5",
  "referencedSize" : 0,
  "referencedReplicatedSize" : 0,
  "exclusiveSize" : 0,
  "exclusiveReplicatedSize" : 0
}, {
  "volumeName" : "vol1",
  "bucketName" : "bucket1",
  "name" : "snap2",
  "creationTime" : 1753430420196,
  "snapshotStatus" : "SNAPSHOT_ACTIVE",
  "snapshotId" : "150d3e4b-2b29-4580-bca0-4de7daf5201c",
  "snapshotPath" : "vol1/bucket1",
  "checkpointDir" : "-150d3e4b-2b29-4580-bca0-4de7daf5201c",
  "referencedSize" : 16,
  "referencedReplicatedSize" : 48,
  "exclusiveSize" : 0,
  "exclusiveReplicatedSize" : 0
} ]</msg>
<status status="PASS" starttime="20250725 08:00:52.465" endtime="20250725 08:00:52.465"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250725 08:00:52.466" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250725 08:00:52.465" endtime="20250725 08:00:52.466"/>
</kw>
<status status="PASS" starttime="20250725 08:00:48.754" endtime="20250725 08:00:52.466"/>
</kw>
<msg timestamp="20250725 08:00:52.466" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250725 08:00:48.754" endtime="20250725 08:00:52.466"/>
</kw>
<msg timestamp="20250725 08:00:52.466" level="INFO">${snap_list} = [ {
  "volumeName" : "vol1",
  "bucketName" : "bucket1",
  "name" : "snap1",
  "creationTime" : 1753430394473,
  "snapshotStatus" : "SNAPSHOT_ACTIVE",
  "snapshotId" : "1dca01de-4aec-4e6b-85f9-bb7a2c4...</msg>
<status status="PASS" starttime="20250725 08:00:48.753" endtime="20250725 08:00:52.466"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${snap_list}</arg>
<arg>[ ]</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250725 08:00:52.466" endtime="20250725 08:00:52.467"/>
</kw>
<kw name="Execute" library="os">
<var>${snap1_res}</var>
<arg>echo "${snap_list}" | grep ${snap_1}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250725 08:00:52.470" level="INFO">Running command 'echo "[ {
  "volumeName" : "vol1",
  "bucketName" : "bucket1",
  "name" : "snap1",
  "creationTime" : 1753430394473,
  "snapshotStatus" : "SNAPSHOT_ACTIVE",
  "snapshotId" : "1dca01de-4aec-4e6b-85f9-bb7a2c4f33d5",
  "snapshotPath" : "vol1/bucket1",
  "checkpointDir" : "-1dca01de-4aec-4e6b-85f9-bb7a2c4f33d5",
  "referencedSize" : 0,
  "referencedReplicatedSize" : 0,
  "exclusiveSize" : 0,
  "exclusiveReplicatedSize" : 0
}, {
  "volumeName" : "vol1",
  "bucketName" : "bucket1",
  "name" : "snap2",
  "creationTime" : 1753430420196,
  "snapshotStatus" : "SNAPSHOT_ACTIVE",
  "snapshotId" : "150d3e4b-2b29-4580-bca0-4de7daf5201c",
  "snapshotPath" : "vol1/bucket1",
  "checkpointDir" : "-150d3e4b-2b29-4580-bca0-4de7daf5201c",
  "referencedSize" : 16,
  "referencedReplicatedSize" : 48,
  "exclusiveSize" : 0,
  "exclusiveReplicatedSize" : 0
} ]" | grep snap1 2&gt;&amp;1'.</msg>
<msg timestamp="20250725 08:00:52.474" level="INFO">${rc} = 0</msg>
<msg timestamp="20250725 08:00:52.474" level="INFO">${output} =   name : snap1,</msg>
<status status="PASS" starttime="20250725 08:00:52.468" endtime="20250725 08:00:52.474"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250725 08:00:52.475" level="INFO">  name : snap1,</msg>
<status status="PASS" starttime="20250725 08:00:52.474" endtime="20250725 08:00:52.475"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250725 08:00:52.475" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250725 08:00:52.475" endtime="20250725 08:00:52.475"/>
</kw>
<status status="PASS" starttime="20250725 08:00:52.467" endtime="20250725 08:00:52.476"/>
</kw>
<msg timestamp="20250725 08:00:52.476" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250725 08:00:52.467" endtime="20250725 08:00:52.476"/>
</kw>
<msg timestamp="20250725 08:00:52.476" level="INFO">${snap1_res} =   name : snap1,</msg>
<status status="PASS" starttime="20250725 08:00:52.467" endtime="20250725 08:00:52.476"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${snap1_res}</arg>
<arg>${snap_1}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250725 08:00:52.476" endtime="20250725 08:00:52.476"/>
</kw>
<kw name="Execute" library="os">
<var>${snap2_res}</var>
<arg>echo "${snap_list}" | grep ${snap_2}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250725 08:00:52.479" level="INFO">Running command 'echo "[ {
  "volumeName" : "vol1",
  "bucketName" : "bucket1",
  "name" : "snap1",
  "creationTime" : 1753430394473,
  "snapshotStatus" : "SNAPSHOT_ACTIVE",
  "snapshotId" : "1dca01de-4aec-4e6b-85f9-bb7a2c4f33d5",
  "snapshotPath" : "vol1/bucket1",
  "checkpointDir" : "-1dca01de-4aec-4e6b-85f9-bb7a2c4f33d5",
  "referencedSize" : 0,
  "referencedReplicatedSize" : 0,
  "exclusiveSize" : 0,
  "exclusiveReplicatedSize" : 0
}, {
  "volumeName" : "vol1",
  "bucketName" : "bucket1",
  "name" : "snap2",
  "creationTime" : 1753430420196,
  "snapshotStatus" : "SNAPSHOT_ACTIVE",
  "snapshotId" : "150d3e4b-2b29-4580-bca0-4de7daf5201c",
  "snapshotPath" : "vol1/bucket1",
  "checkpointDir" : "-150d3e4b-2b29-4580-bca0-4de7daf5201c",
  "referencedSize" : 16,
  "referencedReplicatedSize" : 48,
  "exclusiveSize" : 0,
  "exclusiveReplicatedSize" : 0
} ]" | grep snap2 2&gt;&amp;1'.</msg>
<msg timestamp="20250725 08:00:52.483" level="INFO">${rc} = 0</msg>
<msg timestamp="20250725 08:00:52.483" level="INFO">${output} =   name : snap2,</msg>
<status status="PASS" starttime="20250725 08:00:52.477" endtime="20250725 08:00:52.483"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250725 08:00:52.483" level="INFO">  name : snap2,</msg>
<status status="PASS" starttime="20250725 08:00:52.483" endtime="20250725 08:00:52.484"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250725 08:00:52.484" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250725 08:00:52.484" endtime="20250725 08:00:52.484"/>
</kw>
<status status="PASS" starttime="20250725 08:00:52.477" endtime="20250725 08:00:52.484"/>
</kw>
<msg timestamp="20250725 08:00:52.484" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250725 08:00:52.477" endtime="20250725 08:00:52.484"/>
</kw>
<msg timestamp="20250725 08:00:52.484" level="INFO">${snap2_res} =   name : snap2,</msg>
<status status="PASS" starttime="20250725 08:00:52.476" endtime="20250725 08:00:52.484"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${snap2_res}</arg>
<arg>${snap_2}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250725 08:00:52.485" endtime="20250725 08:00:52.485"/>
</kw>
<status status="PASS" starttime="20250725 08:00:48.753" endtime="20250725 08:00:52.485"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250725 08:00:48.711" endtime="20250725 08:00:52.485"/>
</test>
<test id="s1-s4-t4" name="Run snap diff on 'om3' and check diff keys" line="96">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get Security Enabled From Config" library="commonlib">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' != ''</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20250725 08:00:52.487" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250725 08:00:52.487" endtime="20250725 08:00:52.487"/>
</kw>
<kw name="Execute" library="os">
<var>${value}</var>
<arg>ozone getconf confKey ozone.security.enabled</arg>
<status status="NOT RUN" starttime="20250725 08:00:52.487" endtime="20250725 08:00:52.487"/>
</kw>
<if>
<branch type="IF" condition="'${value}' != 'true' and '${value}' != 'false'">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>false</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20250725 08:00:52.488" endtime="20250725 08:00:52.488"/>
</kw>
<status status="NOT RUN" starttime="20250725 08:00:52.487" endtime="20250725 08:00:52.488"/>
</branch>
<status status="NOT RUN" starttime="20250725 08:00:52.487" endtime="20250725 08:00:52.488"/>
</if>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${SECURITY_ENABLED}</arg>
<arg>${value}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20250725 08:00:52.488" endtime="20250725 08:00:52.488"/>
</kw>
<status status="PASS" starttime="20250725 08:00:52.487" endtime="20250725 08:00:52.488"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250725 08:00:52.488" endtime="20250725 08:00:52.488"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250725 08:00:52.491" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250725 08:00:52.495" level="INFO">${rc} = 0</msg>
<msg timestamp="20250725 08:00:52.495" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20250725 08:00:52.489" endtime="20250725 08:00:52.495"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250725 08:00:52.496" level="INFO">om</msg>
<status status="PASS" starttime="20250725 08:00:52.495" endtime="20250725 08:00:52.496"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250725 08:00:52.496" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250725 08:00:52.496" endtime="20250725 08:00:52.497"/>
</kw>
<status status="PASS" starttime="20250725 08:00:52.489" endtime="20250725 08:00:52.497"/>
</kw>
<msg timestamp="20250725 08:00:52.497" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250725 08:00:52.489" endtime="20250725 08:00:52.497"/>
</kw>
<msg timestamp="20250725 08:00:52.497" level="INFO">${instance} = om</msg>
<status status="PASS" starttime="20250725 08:00:52.488" endtime="20250725 08:00:52.497"/>
</kw>
<msg timestamp="20250725 08:00:52.497" level="INFO">${TEST_USER} = testuser/om@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250725 08:00:52.488" endtime="20250725 08:00:52.497"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250725 08:00:52.497" level="INFO">${TEST_USER} = testuser/om@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250725 08:00:52.497" endtime="20250725 08:00:52.498"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250725 08:00:52.501" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/om@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250725 08:00:52.540" level="INFO">${rc} = 0</msg>
<msg timestamp="20250725 08:00:52.540" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250725 08:00:52.499" endtime="20250725 08:00:52.540"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250725 08:00:52.541" level="INFO"/>
<status status="PASS" starttime="20250725 08:00:52.540" endtime="20250725 08:00:52.541"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250725 08:00:52.541" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250725 08:00:52.541" endtime="20250725 08:00:52.541"/>
</kw>
<status status="PASS" starttime="20250725 08:00:52.498" endtime="20250725 08:00:52.541"/>
</kw>
<msg timestamp="20250725 08:00:52.541" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250725 08:00:52.498" endtime="20250725 08:00:52.541"/>
</kw>
<status status="PASS" starttime="20250725 08:00:52.498" endtime="20250725 08:00:52.541"/>
</kw>
<status status="PASS" starttime="20250725 08:00:52.498" endtime="20250725 08:00:52.542"/>
</kw>
<status status="PASS" starttime="20250725 08:00:52.486" endtime="20250725 08:00:52.542"/>
</kw>
<status status="PASS" starttime="20250725 08:00:52.486" endtime="20250725 08:00:52.542"/>
</kw>
<kw name="Run snap diff and validate results">
<arg>${VOLUME}</arg>
<arg>${BUCKET}</arg>
<arg>${SNAP_1}</arg>
<arg>${SNAP_2}</arg>
<arg>${KEY_1}</arg>
<arg>${KEY_2}</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>3sec</arg>
<arg>Snap diff finished</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${snap_1}</arg>
<arg>${snap_2}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Snap diff finished">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${snap_1}</arg>
<arg>${snap_2}</arg>
<kw name="Run snap diff and get response">
<var>${diff_res}</var>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${snap_1}</arg>
<arg>${snap_2}</arg>
<kw name="Execute" library="os">
<var>${diff_res}</var>
<arg>ozone sh snapshot diff /${volume}/${bucket} ${snap_1} ${snap_2}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250725 08:00:52.547" level="INFO">Running command 'ozone sh snapshot diff /vol1/bucket1 snap1 snap2 2&gt;&amp;1'.</msg>
<msg timestamp="20250725 08:00:55.989" level="INFO">${rc} = 0</msg>
<msg timestamp="20250725 08:00:55.989" level="INFO">${output} = Snapshot diff job is IN_PROGRESS. Please retry after 60000 ms.
</msg>
<status status="PASS" starttime="20250725 08:00:52.544" endtime="20250725 08:00:55.989"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250725 08:00:55.991" level="INFO">Snapshot diff job is IN_PROGRESS. Please retry after 60000 ms.
</msg>
<status status="PASS" starttime="20250725 08:00:55.990" endtime="20250725 08:00:55.991"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250725 08:00:55.992" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250725 08:00:55.991" endtime="20250725 08:00:55.992"/>
</kw>
<status status="PASS" starttime="20250725 08:00:52.544" endtime="20250725 08:00:55.992"/>
</kw>
<msg timestamp="20250725 08:00:55.992" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250725 08:00:52.544" endtime="20250725 08:00:55.992"/>
</kw>
<msg timestamp="20250725 08:00:55.993" level="INFO">${diff_res} = Snapshot diff job is IN_PROGRESS. Please retry after 60000 ms.
</msg>
<status status="PASS" starttime="20250725 08:00:52.543" endtime="20250725 08:00:55.993"/>
</kw>
<msg timestamp="20250725 08:00:55.993" level="INFO">${diff_res} = Snapshot diff job is IN_PROGRESS. Please retry after 60000 ms.
</msg>
<status status="PASS" starttime="20250725 08:00:52.543" endtime="20250725 08:00:55.993"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${diff_res}</arg>
<arg>Difference between snapshot: ${snap_1} and snapshot: ${snap_2}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20250725 08:00:55.994" level="FAIL">'Snapshot diff job is IN_PROGRESS. Please retry after 60000 ms.
' does not contain 'Difference between snapshot: snap1 and snapshot: snap2'</msg>
<status status="FAIL" starttime="20250725 08:00:55.993" endtime="20250725 08:00:55.994"/>
</kw>
<status status="FAIL" starttime="20250725 08:00:52.543" endtime="20250725 08:00:55.994"/>
</kw>
<kw name="Snap diff finished">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${snap_1}</arg>
<arg>${snap_2}</arg>
<kw name="Run snap diff and get response">
<var>${diff_res}</var>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${snap_1}</arg>
<arg>${snap_2}</arg>
<kw name="Execute" library="os">
<var>${diff_res}</var>
<arg>ozone sh snapshot diff /${volume}/${bucket} ${snap_1} ${snap_2}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250725 08:00:58.999" level="INFO">Running command 'ozone sh snapshot diff /vol1/bucket1 snap1 snap2 2&gt;&amp;1'.</msg>
<msg timestamp="20250725 08:01:02.284" level="INFO">${rc} = 0</msg>
<msg timestamp="20250725 08:01:02.285" level="INFO">${output} = Difference between snapshot: snap1 and snapshot: snap2
+	./sn
+	./sn/key1
+	./sn/key2
</msg>
<status status="PASS" starttime="20250725 08:00:58.997" endtime="20250725 08:01:02.285"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250725 08:01:02.286" level="INFO">Difference between snapshot: snap1 and snapshot: snap2
+	./sn
+	./sn/key1
+	./sn/key2
</msg>
<status status="PASS" starttime="20250725 08:01:02.285" endtime="20250725 08:01:02.286"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250725 08:01:02.286" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250725 08:01:02.286" endtime="20250725 08:01:02.286"/>
</kw>
<status status="PASS" starttime="20250725 08:00:58.997" endtime="20250725 08:01:02.286"/>
</kw>
<msg timestamp="20250725 08:01:02.286" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250725 08:00:58.996" endtime="20250725 08:01:02.286"/>
</kw>
<msg timestamp="20250725 08:01:02.287" level="INFO">${diff_res} = Difference between snapshot: snap1 and snapshot: snap2
+	./sn
+	./sn/key1
+	./sn/key2
</msg>
<status status="PASS" starttime="20250725 08:00:58.996" endtime="20250725 08:01:02.287"/>
</kw>
<msg timestamp="20250725 08:01:02.287" level="INFO">${diff_res} = Difference between snapshot: snap1 and snapshot: snap2
+	./sn
+	./sn/key1
+	./sn/key2
</msg>
<status status="PASS" starttime="20250725 08:00:58.995" endtime="20250725 08:01:02.287"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${diff_res}</arg>
<arg>Difference between snapshot: ${snap_1} and snapshot: ${snap_2}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250725 08:01:02.287" endtime="20250725 08:01:02.287"/>
</kw>
<status status="PASS" starttime="20250725 08:00:58.994" endtime="20250725 08:01:02.287"/>
</kw>
<status status="PASS" starttime="20250725 08:00:52.542" endtime="20250725 08:01:02.287"/>
</kw>
<kw name="Run snap diff and get response">
<var>${diff_res}</var>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${snap_1}</arg>
<arg>${snap_2}</arg>
<kw name="Execute" library="os">
<var>${diff_res}</var>
<arg>ozone sh snapshot diff /${volume}/${bucket} ${snap_1} ${snap_2}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250725 08:01:02.291" level="INFO">Running command 'ozone sh snapshot diff /vol1/bucket1 snap1 snap2 2&gt;&amp;1'.</msg>
<msg timestamp="20250725 08:01:05.641" level="INFO">${rc} = 0</msg>
<msg timestamp="20250725 08:01:05.641" level="INFO">${output} = Difference between snapshot: snap1 and snapshot: snap2
+	./sn
+	./sn/key1
+	./sn/key2
</msg>
<status status="PASS" starttime="20250725 08:01:02.289" endtime="20250725 08:01:05.641"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250725 08:01:05.642" level="INFO">Difference between snapshot: snap1 and snapshot: snap2
+	./sn
+	./sn/key1
+	./sn/key2
</msg>
<status status="PASS" starttime="20250725 08:01:05.641" endtime="20250725 08:01:05.642"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250725 08:01:05.642" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250725 08:01:05.642" endtime="20250725 08:01:05.642"/>
</kw>
<status status="PASS" starttime="20250725 08:01:02.288" endtime="20250725 08:01:05.642"/>
</kw>
<msg timestamp="20250725 08:01:05.642" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250725 08:01:02.288" endtime="20250725 08:01:05.642"/>
</kw>
<msg timestamp="20250725 08:01:05.642" level="INFO">${diff_res} = Difference between snapshot: snap1 and snapshot: snap2
+	./sn
+	./sn/key1
+	./sn/key2
</msg>
<status status="PASS" starttime="20250725 08:01:02.288" endtime="20250725 08:01:05.642"/>
</kw>
<msg timestamp="20250725 08:01:05.643" level="INFO">${diff_res} = Difference between snapshot: snap1 and snapshot: snap2
+	./sn
+	./sn/key1
+	./sn/key2
</msg>
<status status="PASS" starttime="20250725 08:01:02.287" endtime="20250725 08:01:05.643"/>
</kw>
<kw name="Execute" library="os">
<var>${key_num}</var>
<arg>echo "${diff_res}" | grep 'key' | wc -l</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250725 08:01:05.646" level="INFO">Running command 'echo "Difference between snapshot: snap1 and snapshot: snap2
+	./sn
+	./sn/key1
+	./sn/key2
" | grep 'key' | wc -l 2&gt;&amp;1'.</msg>
<msg timestamp="20250725 08:01:05.650" level="INFO">${rc} = 0</msg>
<msg timestamp="20250725 08:01:05.650" level="INFO">${output} = 2</msg>
<status status="PASS" starttime="20250725 08:01:05.644" endtime="20250725 08:01:05.650"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250725 08:01:05.651" level="INFO">2</msg>
<status status="PASS" starttime="20250725 08:01:05.650" endtime="20250725 08:01:05.651"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250725 08:01:05.651" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250725 08:01:05.651" endtime="20250725 08:01:05.651"/>
</kw>
<status status="PASS" starttime="20250725 08:01:05.643" endtime="20250725 08:01:05.651"/>
</kw>
<msg timestamp="20250725 08:01:05.651" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250725 08:01:05.643" endtime="20250725 08:01:05.652"/>
</kw>
<msg timestamp="20250725 08:01:05.652" level="INFO">${key_num} = 2</msg>
<status status="PASS" starttime="20250725 08:01:05.643" endtime="20250725 08:01:05.652"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${key_num} == 2</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20250725 08:01:05.652" endtime="20250725 08:01:05.652"/>
</kw>
<kw name="Execute" library="os">
<var>${diff_key1}</var>
<arg>echo "${diff_res}" | grep ${key_1} | wc -l</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250725 08:01:05.655" level="INFO">Running command 'echo "Difference between snapshot: snap1 and snapshot: snap2
+	./sn
+	./sn/key1
+	./sn/key2
" | grep key1 | wc -l 2&gt;&amp;1'.</msg>
<msg timestamp="20250725 08:01:05.659" level="INFO">${rc} = 0</msg>
<msg timestamp="20250725 08:01:05.659" level="INFO">${output} = 1</msg>
<status status="PASS" starttime="20250725 08:01:05.653" endtime="20250725 08:01:05.659"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250725 08:01:05.660" level="INFO">1</msg>
<status status="PASS" starttime="20250725 08:01:05.659" endtime="20250725 08:01:05.660"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250725 08:01:05.660" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250725 08:01:05.660" endtime="20250725 08:01:05.660"/>
</kw>
<status status="PASS" starttime="20250725 08:01:05.653" endtime="20250725 08:01:05.661"/>
</kw>
<msg timestamp="20250725 08:01:05.661" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250725 08:01:05.653" endtime="20250725 08:01:05.661"/>
</kw>
<msg timestamp="20250725 08:01:05.661" level="INFO">${diff_key1} = 1</msg>
<status status="PASS" starttime="20250725 08:01:05.652" endtime="20250725 08:01:05.661"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${diff_key1} == 1</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20250725 08:01:05.661" endtime="20250725 08:01:05.661"/>
</kw>
<kw name="Execute" library="os">
<var>${diff_key2}</var>
<arg>echo "${diff_res}" | grep ${key_2} | wc -l</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250725 08:01:05.664" level="INFO">Running command 'echo "Difference between snapshot: snap1 and snapshot: snap2
+	./sn
+	./sn/key1
+	./sn/key2
" | grep key2 | wc -l 2&gt;&amp;1'.</msg>
<msg timestamp="20250725 08:01:05.668" level="INFO">${rc} = 0</msg>
<msg timestamp="20250725 08:01:05.668" level="INFO">${output} = 1</msg>
<status status="PASS" starttime="20250725 08:01:05.662" endtime="20250725 08:01:05.668"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250725 08:01:05.669" level="INFO">1</msg>
<status status="PASS" starttime="20250725 08:01:05.668" endtime="20250725 08:01:05.669"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250725 08:01:05.669" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250725 08:01:05.669" endtime="20250725 08:01:05.669"/>
</kw>
<status status="PASS" starttime="20250725 08:01:05.662" endtime="20250725 08:01:05.670"/>
</kw>
<msg timestamp="20250725 08:01:05.670" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250725 08:01:05.662" endtime="20250725 08:01:05.670"/>
</kw>
<msg timestamp="20250725 08:01:05.670" level="INFO">${diff_key2} = 1</msg>
<status status="PASS" starttime="20250725 08:01:05.661" endtime="20250725 08:01:05.670"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${diff_key2} == 1</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20250725 08:01:05.670" endtime="20250725 08:01:05.670"/>
</kw>
<status status="PASS" starttime="20250725 08:00:52.542" endtime="20250725 08:01:05.670"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250725 08:00:52.486" endtime="20250725 08:01:05.671"/>
</test>
<test id="s1-s4-t5" name="Cat snapshot keys and validate contents" line="99">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get Security Enabled From Config" library="commonlib">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' != ''</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20250725 08:01:05.672" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250725 08:01:05.672" endtime="20250725 08:01:05.672"/>
</kw>
<kw name="Execute" library="os">
<var>${value}</var>
<arg>ozone getconf confKey ozone.security.enabled</arg>
<status status="NOT RUN" starttime="20250725 08:01:05.673" endtime="20250725 08:01:05.673"/>
</kw>
<if>
<branch type="IF" condition="'${value}' != 'true' and '${value}' != 'false'">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>false</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20250725 08:01:05.673" endtime="20250725 08:01:05.673"/>
</kw>
<status status="NOT RUN" starttime="20250725 08:01:05.673" endtime="20250725 08:01:05.673"/>
</branch>
<status status="NOT RUN" starttime="20250725 08:01:05.673" endtime="20250725 08:01:05.673"/>
</if>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${SECURITY_ENABLED}</arg>
<arg>${value}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20250725 08:01:05.673" endtime="20250725 08:01:05.673"/>
</kw>
<status status="PASS" starttime="20250725 08:01:05.672" endtime="20250725 08:01:05.673"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250725 08:01:05.673" endtime="20250725 08:01:05.673"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250725 08:01:05.677" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250725 08:01:05.680" level="INFO">${rc} = 0</msg>
<msg timestamp="20250725 08:01:05.680" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20250725 08:01:05.674" endtime="20250725 08:01:05.680"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250725 08:01:05.681" level="INFO">om</msg>
<status status="PASS" starttime="20250725 08:01:05.681" endtime="20250725 08:01:05.681"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250725 08:01:05.682" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250725 08:01:05.681" endtime="20250725 08:01:05.682"/>
</kw>
<status status="PASS" starttime="20250725 08:01:05.674" endtime="20250725 08:01:05.682"/>
</kw>
<msg timestamp="20250725 08:01:05.682" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250725 08:01:05.674" endtime="20250725 08:01:05.682"/>
</kw>
<msg timestamp="20250725 08:01:05.682" level="INFO">${instance} = om</msg>
<status status="PASS" starttime="20250725 08:01:05.674" endtime="20250725 08:01:05.682"/>
</kw>
<msg timestamp="20250725 08:01:05.682" level="INFO">${TEST_USER} = testuser/om@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250725 08:01:05.673" endtime="20250725 08:01:05.682"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250725 08:01:05.683" level="INFO">${TEST_USER} = testuser/om@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250725 08:01:05.682" endtime="20250725 08:01:05.683"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250725 08:01:05.686" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/om@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250725 08:01:05.716" level="INFO">${rc} = 0</msg>
<msg timestamp="20250725 08:01:05.716" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250725 08:01:05.684" endtime="20250725 08:01:05.716"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250725 08:01:05.717" level="INFO"/>
<status status="PASS" starttime="20250725 08:01:05.717" endtime="20250725 08:01:05.717"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250725 08:01:05.718" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250725 08:01:05.717" endtime="20250725 08:01:05.718"/>
</kw>
<status status="PASS" starttime="20250725 08:01:05.683" endtime="20250725 08:01:05.718"/>
</kw>
<msg timestamp="20250725 08:01:05.718" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250725 08:01:05.683" endtime="20250725 08:01:05.718"/>
</kw>
<status status="PASS" starttime="20250725 08:01:05.683" endtime="20250725 08:01:05.718"/>
</kw>
<status status="PASS" starttime="20250725 08:01:05.683" endtime="20250725 08:01:05.718"/>
</kw>
<status status="PASS" starttime="20250725 08:01:05.672" endtime="20250725 08:01:05.718"/>
</kw>
<status status="PASS" starttime="20250725 08:01:05.671" endtime="20250725 08:01:05.718"/>
</kw>
<kw name="Validate keys under snapshot">
<arg>${VOLUME}</arg>
<arg>${BUCKET}</arg>
<arg>${SNAP_2}</arg>
<arg>${KEY_PREFIX}</arg>
<arg>${KEY_1}</arg>
<arg>${KEY_2}</arg>
<kw name="Execute" library="os">
<var>${key1_res}</var>
<arg>ozone sh key cat /${volume}/${bucket}/.snapshot/${snap}/${key_prefix}/${key_1}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250725 08:01:05.722" level="INFO">Running command 'ozone sh key cat /vol1/bucket1/.snapshot/snap2/sn/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20250725 08:01:11.129" level="INFO">${rc} = 0</msg>
<msg timestamp="20250725 08:01:11.129" level="INFO">${output} = sn/key1</msg>
<status status="PASS" starttime="20250725 08:01:05.720" endtime="20250725 08:01:11.129"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250725 08:01:11.130" level="INFO">sn/key1</msg>
<status status="PASS" starttime="20250725 08:01:11.130" endtime="20250725 08:01:11.130"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250725 08:01:11.131" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250725 08:01:11.130" endtime="20250725 08:01:11.131"/>
</kw>
<status status="PASS" starttime="20250725 08:01:05.720" endtime="20250725 08:01:11.131"/>
</kw>
<msg timestamp="20250725 08:01:11.131" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250725 08:01:05.719" endtime="20250725 08:01:11.131"/>
</kw>
<msg timestamp="20250725 08:01:11.131" level="INFO">${key1_res} = sn/key1</msg>
<status status="PASS" starttime="20250725 08:01:05.719" endtime="20250725 08:01:11.131"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${key1_res}</arg>
<arg>${key_prefix}/${key_1}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250725 08:01:11.131" endtime="20250725 08:01:11.132"/>
</kw>
<kw name="Execute" library="os">
<var>${key2_res}</var>
<arg>ozone sh key cat /${volume}/${bucket}/.snapshot/${snap}/${key_prefix}/${key_2}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250725 08:01:11.135" level="INFO">Running command 'ozone sh key cat /vol1/bucket1/.snapshot/snap2/sn/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20250725 08:01:16.165" level="INFO">${rc} = 0</msg>
<msg timestamp="20250725 08:01:16.165" level="INFO">${output} = sn/key2</msg>
<status status="PASS" starttime="20250725 08:01:11.133" endtime="20250725 08:01:16.165"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250725 08:01:16.166" level="INFO">sn/key2</msg>
<status status="PASS" starttime="20250725 08:01:16.165" endtime="20250725 08:01:16.166"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250725 08:01:16.166" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250725 08:01:16.166" endtime="20250725 08:01:16.166"/>
</kw>
<status status="PASS" starttime="20250725 08:01:11.132" endtime="20250725 08:01:16.166"/>
</kw>
<msg timestamp="20250725 08:01:16.166" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250725 08:01:11.132" endtime="20250725 08:01:16.167"/>
</kw>
<msg timestamp="20250725 08:01:16.167" level="INFO">${key2_res} = sn/key2</msg>
<status status="PASS" starttime="20250725 08:01:11.132" endtime="20250725 08:01:16.167"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${key2_res}</arg>
<arg>${key_prefix}/${key_2}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250725 08:01:16.167" endtime="20250725 08:01:16.167"/>
</kw>
<status status="PASS" starttime="20250725 08:01:05.718" endtime="20250725 08:01:16.167"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250725 08:01:05.671" endtime="20250725 08:01:16.167"/>
</test>
<doc>Smoke test for validating snapshot data after om bootstrap.</doc>
<status status="PASS" starttime="20250725 08:00:37.871" endtime="20250725 08:01:16.168"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="85261"/>
</suite>
<statistics>
<total>
<stat pass="12" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="12" fail="0" skip="0" id="s1" name="ozonesecure-ha-om-bootstrap">ozonesecure-ha-om-bootstrap</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1" name="Kinit">ozonesecure-ha-om-bootstrap.Kinit</stat>
<stat pass="5" fail="0" skip="0" id="s1-s2" name="Data-Creation-Before-Om-Bootstrap">ozonesecure-ha-om-bootstrap.Data-Creation-Before-Om-Bootstrap</stat>
<stat pass="1" fail="0" skip="0" id="s1-s3" name="Kinit">ozonesecure-ha-om-bootstrap.Kinit</stat>
<stat pass="5" fail="0" skip="0" id="s1-s4" name="Data-Validation-After-Om-Bootstrap">ozonesecure-ha-om-bootstrap.Data-Validation-After-Om-Bootstrap</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
