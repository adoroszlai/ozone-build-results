<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.1.1 (Python 3.9.21 on linux)" generated="20250714 14:52:52.236" rpa="false" schemaversion="4">
<suite id="s1" name="ozone-legacy-bucket" source="/opt/hadoop/smoketest/recon/recon-nssummary.robot">
<kw name="Get Security Enabled From Config" library="commonlib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' != ''</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20250714 14:51:56.268" endtime="20250714 14:51:56.268"/>
</kw>
<kw name="Execute" library="os">
<var>${value}</var>
<arg>ozone getconf confKey ozone.security.enabled</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250714 14:51:56.271" level="INFO">Running command 'ozone getconf confKey ozone.security.enabled 2&gt;&amp;1'.</msg>
<msg timestamp="20250714 14:51:57.236" level="INFO">${rc} = 0</msg>
<msg timestamp="20250714 14:51:57.236" level="INFO">${output} = false</msg>
<status status="PASS" starttime="20250714 14:51:56.269" endtime="20250714 14:51:57.236"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250714 14:51:57.236" level="INFO">false</msg>
<status status="PASS" starttime="20250714 14:51:57.236" endtime="20250714 14:51:57.236"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250714 14:51:57.237" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250714 14:51:57.237" endtime="20250714 14:51:57.237"/>
</kw>
<status status="PASS" starttime="20250714 14:51:56.269" endtime="20250714 14:51:57.237"/>
</kw>
<msg timestamp="20250714 14:51:57.237" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250714 14:51:56.268" endtime="20250714 14:51:57.237"/>
</kw>
<msg timestamp="20250714 14:51:57.237" level="INFO">${value} = false</msg>
<status status="PASS" starttime="20250714 14:51:56.268" endtime="20250714 14:51:57.237"/>
</kw>
<if>
<branch type="IF" condition="'${value}' != 'true' and '${value}' != 'false'">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>false</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20250714 14:51:57.238" endtime="20250714 14:51:57.238"/>
</kw>
<status status="NOT RUN" starttime="20250714 14:51:57.237" endtime="20250714 14:51:57.238"/>
</branch>
<status status="PASS" starttime="20250714 14:51:57.237" endtime="20250714 14:51:57.238"/>
</if>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${SECURITY_ENABLED}</arg>
<arg>${value}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250714 14:51:57.238" level="INFO">${SECURITY_ENABLED} = false</msg>
<status status="PASS" starttime="20250714 14:51:57.238" endtime="20250714 14:51:57.238"/>
</kw>
<status status="PASS" starttime="20250714 14:51:56.268" endtime="20250714 14:51:57.238"/>
</kw>
<test id="s1-t1" name="Check volume creation" line="100">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250714 14:51:57.242" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20250714 14:51:57.247" level="INFO">${rc} = 0</msg>
<msg timestamp="20250714 14:51:57.247" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20250714 14:51:57.240" endtime="20250714 14:51:57.247"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250714 14:51:57.247" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20250714 14:51:57.247" endtime="20250714 14:51:57.247"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250714 14:51:57.248" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250714 14:51:57.248" endtime="20250714 14:51:57.248"/>
</kw>
<status status="PASS" starttime="20250714 14:51:57.240" endtime="20250714 14:51:57.248"/>
</kw>
<msg timestamp="20250714 14:51:57.248" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250714 14:51:57.239" endtime="20250714 14:51:57.248"/>
</kw>
<status status="PASS" starttime="20250714 14:51:57.239" endtime="20250714 14:51:57.248"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250714 14:51:57.248" endtime="20250714 14:51:57.249"/>
</kw>
<status status="PASS" starttime="20250714 14:51:57.248" endtime="20250714 14:51:57.249"/>
</kw>
<kw name="Create volume">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[LOWER]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250714 14:51:57.249" level="INFO">${random} = hmgya</msg>
<status status="PASS" starttime="20250714 14:51:57.249" endtime="20250714 14:51:57.249"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${VOLUME}</arg>
<arg>vol-${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250714 14:51:57.250" level="INFO">${VOLUME} = vol-hmgya</msg>
<status status="PASS" starttime="20250714 14:51:57.249" endtime="20250714 14:51:57.250"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create /${VOLUME}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250714 14:51:57.252" level="INFO">Running command 'ozone sh volume create /vol-hmgya 2&gt;&amp;1'.</msg>
<msg timestamp="20250714 14:52:02.314" level="INFO">${rc} = 0</msg>
<msg timestamp="20250714 14:52:02.314" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250714 14:51:57.251" endtime="20250714 14:52:02.314"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250714 14:52:02.315" level="INFO"/>
<status status="PASS" starttime="20250714 14:52:02.314" endtime="20250714 14:52:02.315"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250714 14:52:02.315" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250714 14:52:02.315" endtime="20250714 14:52:02.315"/>
</kw>
<status status="PASS" starttime="20250714 14:51:57.250" endtime="20250714 14:52:02.315"/>
</kw>
<msg timestamp="20250714 14:52:02.315" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250714 14:51:57.250" endtime="20250714 14:52:02.315"/>
</kw>
<msg timestamp="20250714 14:52:02.316" level="INFO">${result} = </msg>
<status status="PASS" starttime="20250714 14:51:57.250" endtime="20250714 14:52:02.316"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250714 14:52:02.316" endtime="20250714 14:52:02.316"/>
</kw>
<status status="PASS" starttime="20250714 14:51:57.249" endtime="20250714 14:52:02.316"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250714 14:51:57.239" endtime="20250714 14:52:02.316"/>
</test>
<test id="s1-t2" name="Check bucket creation" line="105">
<kw name="Create bucket">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[LOWER]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250714 14:52:02.318" level="INFO">${random} = ufuiz</msg>
<status status="PASS" starttime="20250714 14:52:02.317" endtime="20250714 14:52:02.318"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<arg>buc-${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250714 14:52:02.318" level="INFO">${BUCKET} = buc-ufuiz</msg>
<status status="PASS" starttime="20250714 14:52:02.318" endtime="20250714 14:52:02.318"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket create -l ${BUCKET_LAYOUT} /${VOLUME}/${BUCKET}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250714 14:52:02.321" level="INFO">Running command 'ozone sh bucket create -l LEGACY /vol-hmgya/buc-ufuiz 2&gt;&amp;1'.</msg>
<msg timestamp="20250714 14:52:05.264" level="INFO">${rc} = 0</msg>
<msg timestamp="20250714 14:52:05.264" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250714 14:52:02.319" endtime="20250714 14:52:05.264"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250714 14:52:05.265" level="INFO"/>
<status status="PASS" starttime="20250714 14:52:05.264" endtime="20250714 14:52:05.265"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250714 14:52:05.265" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250714 14:52:05.265" endtime="20250714 14:52:05.265"/>
</kw>
<status status="PASS" starttime="20250714 14:52:02.319" endtime="20250714 14:52:05.265"/>
</kw>
<msg timestamp="20250714 14:52:05.265" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250714 14:52:02.319" endtime="20250714 14:52:05.265"/>
</kw>
<msg timestamp="20250714 14:52:05.266" level="INFO">${result} = </msg>
<status status="PASS" starttime="20250714 14:52:02.319" endtime="20250714 14:52:05.266"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250714 14:52:05.266" endtime="20250714 14:52:05.266"/>
</kw>
<status status="PASS" starttime="20250714 14:52:02.317" endtime="20250714 14:52:05.266"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250714 14:52:02.317" endtime="20250714 14:52:05.266"/>
</test>
<test id="s1-t3" name="Check keys creation" line="108">
<kw name="Create keys">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key put /${VOLUME}/${BUCKET}/file1 README.md</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250714 14:52:05.270" level="INFO">Running command 'ozone sh key put /vol-hmgya/buc-ufuiz/file1 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20250714 14:52:10.358" level="INFO">${rc} = 0</msg>
<msg timestamp="20250714 14:52:10.358" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250714 14:52:05.268" endtime="20250714 14:52:10.358"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250714 14:52:10.359" level="INFO"/>
<status status="PASS" starttime="20250714 14:52:10.359" endtime="20250714 14:52:10.359"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250714 14:52:10.360" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250714 14:52:10.359" endtime="20250714 14:52:10.360"/>
</kw>
<status status="PASS" starttime="20250714 14:52:05.268" endtime="20250714 14:52:10.360"/>
</kw>
<msg timestamp="20250714 14:52:10.360" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250714 14:52:05.268" endtime="20250714 14:52:10.360"/>
</kw>
<msg timestamp="20250714 14:52:10.360" level="INFO">${result} = </msg>
<status status="PASS" starttime="20250714 14:52:05.267" endtime="20250714 14:52:10.360"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250714 14:52:10.360" endtime="20250714 14:52:10.361"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key put /${VOLUME}/${BUCKET}/dir1/dir2/file2 HISTORY.md</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250714 14:52:10.364" level="INFO">Running command 'ozone sh key put /vol-hmgya/buc-ufuiz/dir1/dir2/file2 HISTORY.md 2&gt;&amp;1'.</msg>
<msg timestamp="20250714 14:52:14.748" level="INFO">${rc} = 0</msg>
<msg timestamp="20250714 14:52:14.748" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250714 14:52:10.362" endtime="20250714 14:52:14.748"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250714 14:52:14.749" level="INFO"/>
<status status="PASS" starttime="20250714 14:52:14.749" endtime="20250714 14:52:14.749"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250714 14:52:14.750" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250714 14:52:14.749" endtime="20250714 14:52:14.750"/>
</kw>
<status status="PASS" starttime="20250714 14:52:10.361" endtime="20250714 14:52:14.750"/>
</kw>
<msg timestamp="20250714 14:52:14.750" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250714 14:52:10.361" endtime="20250714 14:52:14.750"/>
</kw>
<msg timestamp="20250714 14:52:14.750" level="INFO">${result} = </msg>
<status status="PASS" starttime="20250714 14:52:10.361" endtime="20250714 14:52:14.750"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250714 14:52:14.750" endtime="20250714 14:52:14.750"/>
</kw>
<status status="PASS" starttime="20250714 14:52:05.267" endtime="20250714 14:52:14.751"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250714 14:52:05.267" endtime="20250714 14:52:14.751"/>
</test>
<test id="s1-t4" name="Check Summary api access" line="111">
<kw name="Check Access">
<arg>${SUMMARY_URL}?path=/</arg>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250714 14:52:14.755" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20250714 14:52:14.759" level="INFO">${rc} = 0</msg>
<msg timestamp="20250714 14:52:14.759" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20250714 14:52:14.753" endtime="20250714 14:52:14.759"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250714 14:52:14.760" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20250714 14:52:14.760" endtime="20250714 14:52:14.760"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250714 14:52:14.760" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250714 14:52:14.760" endtime="20250714 14:52:14.761"/>
</kw>
<status status="PASS" starttime="20250714 14:52:14.753" endtime="20250714 14:52:14.761"/>
</kw>
<msg timestamp="20250714 14:52:14.761" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250714 14:52:14.752" endtime="20250714 14:52:14.761"/>
</kw>
<status status="PASS" starttime="20250714 14:52:14.752" endtime="20250714 14:52:14.761"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250714 14:52:14.764" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250714 14:52:14.910" level="INFO">${rc} = 0</msg>
<msg timestamp="20250714 14:52:14.910" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20250714 14:52:14.762" endtime="20250714 14:52:14.910"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250714 14:52:14.911" level="INFO">200</msg>
<status status="PASS" starttime="20250714 14:52:14.910" endtime="20250714 14:52:14.911"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250714 14:52:14.912" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250714 14:52:14.911" endtime="20250714 14:52:14.912"/>
</kw>
<status status="PASS" starttime="20250714 14:52:14.762" endtime="20250714 14:52:14.912"/>
</kw>
<msg timestamp="20250714 14:52:14.912" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250714 14:52:14.762" endtime="20250714 14:52:14.912"/>
</kw>
<msg timestamp="20250714 14:52:14.912" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20250714 14:52:14.761" endtime="20250714 14:52:14.912"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250714 14:52:14.913" endtime="20250714 14:52:14.913"/>
</kw>
<status status="NOT RUN" starttime="20250714 14:52:14.912" endtime="20250714 14:52:14.913"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250714 14:52:14.913" endtime="20250714 14:52:14.913"/>
</kw>
<status status="PASS" starttime="20250714 14:52:14.913" endtime="20250714 14:52:14.913"/>
</branch>
<status status="PASS" starttime="20250714 14:52:14.912" endtime="20250714 14:52:14.913"/>
</if>
<status status="PASS" starttime="20250714 14:52:14.761" endtime="20250714 14:52:14.914"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250714 14:52:14.914" endtime="20250714 14:52:14.914"/>
</kw>
<status status="PASS" starttime="20250714 14:52:14.914" endtime="20250714 14:52:14.914"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250714 14:52:14.920" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250714 14:52:14.933" level="INFO">${rc} = 0</msg>
<msg timestamp="20250714 14:52:14.933" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20250714 14:52:14.916" endtime="20250714 14:52:14.933"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250714 14:52:14.934" level="INFO">200</msg>
<status status="PASS" starttime="20250714 14:52:14.933" endtime="20250714 14:52:14.934"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250714 14:52:14.934" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250714 14:52:14.934" endtime="20250714 14:52:14.934"/>
</kw>
<status status="PASS" starttime="20250714 14:52:14.916" endtime="20250714 14:52:14.935"/>
</kw>
<msg timestamp="20250714 14:52:14.935" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250714 14:52:14.915" endtime="20250714 14:52:14.935"/>
</kw>
<msg timestamp="20250714 14:52:14.935" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20250714 14:52:14.915" endtime="20250714 14:52:14.935"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250714 14:52:14.935" endtime="20250714 14:52:14.935"/>
</kw>
<status status="NOT RUN" starttime="20250714 14:52:14.935" endtime="20250714 14:52:14.935"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250714 14:52:14.935" endtime="20250714 14:52:14.936"/>
</kw>
<status status="PASS" starttime="20250714 14:52:14.935" endtime="20250714 14:52:14.936"/>
</branch>
<status status="PASS" starttime="20250714 14:52:14.935" endtime="20250714 14:52:14.936"/>
</if>
<status status="PASS" starttime="20250714 14:52:14.915" endtime="20250714 14:52:14.936"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250714 14:52:14.936" endtime="20250714 14:52:14.936"/>
</kw>
<status status="PASS" starttime="20250714 14:52:14.936" endtime="20250714 14:52:14.936"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250714 14:52:14.940" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250714 14:52:14.949" level="INFO">${rc} = 0</msg>
<msg timestamp="20250714 14:52:14.949" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20250714 14:52:14.938" endtime="20250714 14:52:14.949"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250714 14:52:14.949" level="INFO">200</msg>
<status status="PASS" starttime="20250714 14:52:14.949" endtime="20250714 14:52:14.949"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250714 14:52:14.950" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250714 14:52:14.950" endtime="20250714 14:52:14.950"/>
</kw>
<status status="PASS" starttime="20250714 14:52:14.937" endtime="20250714 14:52:14.950"/>
</kw>
<msg timestamp="20250714 14:52:14.950" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250714 14:52:14.937" endtime="20250714 14:52:14.950"/>
</kw>
<msg timestamp="20250714 14:52:14.950" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20250714 14:52:14.937" endtime="20250714 14:52:14.950"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250714 14:52:14.951" endtime="20250714 14:52:14.951"/>
</kw>
<status status="NOT RUN" starttime="20250714 14:52:14.950" endtime="20250714 14:52:14.951"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250714 14:52:14.951" endtime="20250714 14:52:14.951"/>
</kw>
<status status="PASS" starttime="20250714 14:52:14.951" endtime="20250714 14:52:14.951"/>
</branch>
<status status="PASS" starttime="20250714 14:52:14.950" endtime="20250714 14:52:14.951"/>
</if>
<status status="PASS" starttime="20250714 14:52:14.937" endtime="20250714 14:52:14.951"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250714 14:52:14.951" endtime="20250714 14:52:14.952"/>
</kw>
<status status="PASS" starttime="20250714 14:52:14.951" endtime="20250714 14:52:14.952"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250714 14:52:14.955" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250714 14:52:14.963" level="INFO">${rc} = 0</msg>
<msg timestamp="20250714 14:52:14.963" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20250714 14:52:14.953" endtime="20250714 14:52:14.963"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250714 14:52:14.964" level="INFO">200</msg>
<status status="PASS" starttime="20250714 14:52:14.963" endtime="20250714 14:52:14.964"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250714 14:52:14.964" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250714 14:52:14.964" endtime="20250714 14:52:14.964"/>
</kw>
<status status="PASS" starttime="20250714 14:52:14.953" endtime="20250714 14:52:14.964"/>
</kw>
<msg timestamp="20250714 14:52:14.964" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250714 14:52:14.952" endtime="20250714 14:52:14.965"/>
</kw>
<msg timestamp="20250714 14:52:14.965" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20250714 14:52:14.952" endtime="20250714 14:52:14.965"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250714 14:52:14.965" endtime="20250714 14:52:14.965"/>
</kw>
<status status="NOT RUN" starttime="20250714 14:52:14.965" endtime="20250714 14:52:14.965"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250714 14:52:14.965" endtime="20250714 14:52:14.965"/>
</kw>
<status status="PASS" starttime="20250714 14:52:14.965" endtime="20250714 14:52:14.965"/>
</branch>
<status status="PASS" starttime="20250714 14:52:14.965" endtime="20250714 14:52:14.965"/>
</if>
<status status="PASS" starttime="20250714 14:52:14.952" endtime="20250714 14:52:14.965"/>
</kw>
<status status="PASS" starttime="20250714 14:52:14.752" endtime="20250714 14:52:14.966"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250714 14:52:14.751" endtime="20250714 14:52:14.966"/>
</test>
<test id="s1-t5" name="Check Disk Usage api access" line="114">
<kw name="Check Access">
<arg>${DISK_USAGE_URL}?path=/</arg>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250714 14:52:14.969" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20250714 14:52:14.973" level="INFO">${rc} = 0</msg>
<msg timestamp="20250714 14:52:14.973" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20250714 14:52:14.968" endtime="20250714 14:52:14.973"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250714 14:52:14.974" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20250714 14:52:14.973" endtime="20250714 14:52:14.974"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250714 14:52:14.975" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250714 14:52:14.974" endtime="20250714 14:52:14.975"/>
</kw>
<status status="PASS" starttime="20250714 14:52:14.967" endtime="20250714 14:52:14.975"/>
</kw>
<msg timestamp="20250714 14:52:14.975" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250714 14:52:14.967" endtime="20250714 14:52:14.975"/>
</kw>
<status status="PASS" starttime="20250714 14:52:14.967" endtime="20250714 14:52:14.975"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250714 14:52:14.978" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/usage?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250714 14:52:14.992" level="INFO">${rc} = 0</msg>
<msg timestamp="20250714 14:52:14.992" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20250714 14:52:14.976" endtime="20250714 14:52:14.992"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250714 14:52:14.993" level="INFO">200</msg>
<status status="PASS" starttime="20250714 14:52:14.992" endtime="20250714 14:52:14.993"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250714 14:52:14.993" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250714 14:52:14.993" endtime="20250714 14:52:14.993"/>
</kw>
<status status="PASS" starttime="20250714 14:52:14.976" endtime="20250714 14:52:14.994"/>
</kw>
<msg timestamp="20250714 14:52:14.994" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250714 14:52:14.976" endtime="20250714 14:52:14.994"/>
</kw>
<msg timestamp="20250714 14:52:14.994" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20250714 14:52:14.975" endtime="20250714 14:52:14.994"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250714 14:52:14.994" endtime="20250714 14:52:14.994"/>
</kw>
<status status="NOT RUN" starttime="20250714 14:52:14.994" endtime="20250714 14:52:14.994"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250714 14:52:14.994" endtime="20250714 14:52:14.995"/>
</kw>
<status status="PASS" starttime="20250714 14:52:14.994" endtime="20250714 14:52:14.995"/>
</branch>
<status status="PASS" starttime="20250714 14:52:14.994" endtime="20250714 14:52:14.995"/>
</if>
<status status="PASS" starttime="20250714 14:52:14.975" endtime="20250714 14:52:14.995"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250714 14:52:14.995" endtime="20250714 14:52:14.995"/>
</kw>
<status status="PASS" starttime="20250714 14:52:14.995" endtime="20250714 14:52:14.995"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250714 14:52:14.998" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/usage?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250714 14:52:15.007" level="INFO">${rc} = 0</msg>
<msg timestamp="20250714 14:52:15.007" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20250714 14:52:14.996" endtime="20250714 14:52:15.007"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250714 14:52:15.008" level="INFO">200</msg>
<status status="PASS" starttime="20250714 14:52:15.007" endtime="20250714 14:52:15.008"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250714 14:52:15.008" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250714 14:52:15.008" endtime="20250714 14:52:15.008"/>
</kw>
<status status="PASS" starttime="20250714 14:52:14.996" endtime="20250714 14:52:15.008"/>
</kw>
<msg timestamp="20250714 14:52:15.008" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250714 14:52:14.996" endtime="20250714 14:52:15.008"/>
</kw>
<msg timestamp="20250714 14:52:15.008" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20250714 14:52:14.996" endtime="20250714 14:52:15.008"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250714 14:52:15.009" endtime="20250714 14:52:15.009"/>
</kw>
<status status="NOT RUN" starttime="20250714 14:52:15.009" endtime="20250714 14:52:15.009"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250714 14:52:15.009" endtime="20250714 14:52:15.009"/>
</kw>
<status status="PASS" starttime="20250714 14:52:15.009" endtime="20250714 14:52:15.009"/>
</branch>
<status status="PASS" starttime="20250714 14:52:15.009" endtime="20250714 14:52:15.009"/>
</if>
<status status="PASS" starttime="20250714 14:52:14.995" endtime="20250714 14:52:15.009"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250714 14:52:15.010" endtime="20250714 14:52:15.010"/>
</kw>
<status status="PASS" starttime="20250714 14:52:15.009" endtime="20250714 14:52:15.010"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250714 14:52:15.013" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/usage?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250714 14:52:15.021" level="INFO">${rc} = 0</msg>
<msg timestamp="20250714 14:52:15.021" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20250714 14:52:15.011" endtime="20250714 14:52:15.021"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250714 14:52:15.022" level="INFO">200</msg>
<status status="PASS" starttime="20250714 14:52:15.022" endtime="20250714 14:52:15.022"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250714 14:52:15.022" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250714 14:52:15.022" endtime="20250714 14:52:15.022"/>
</kw>
<status status="PASS" starttime="20250714 14:52:15.011" endtime="20250714 14:52:15.023"/>
</kw>
<msg timestamp="20250714 14:52:15.023" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250714 14:52:15.011" endtime="20250714 14:52:15.023"/>
</kw>
<msg timestamp="20250714 14:52:15.023" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20250714 14:52:15.010" endtime="20250714 14:52:15.023"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250714 14:52:15.023" endtime="20250714 14:52:15.023"/>
</kw>
<status status="NOT RUN" starttime="20250714 14:52:15.023" endtime="20250714 14:52:15.023"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250714 14:52:15.023" endtime="20250714 14:52:15.024"/>
</kw>
<status status="PASS" starttime="20250714 14:52:15.023" endtime="20250714 14:52:15.024"/>
</branch>
<status status="PASS" starttime="20250714 14:52:15.023" endtime="20250714 14:52:15.024"/>
</if>
<status status="PASS" starttime="20250714 14:52:15.010" endtime="20250714 14:52:15.024"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250714 14:52:15.024" endtime="20250714 14:52:15.024"/>
</kw>
<status status="PASS" starttime="20250714 14:52:15.024" endtime="20250714 14:52:15.024"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250714 14:52:15.027" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/usage?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250714 14:52:15.035" level="INFO">${rc} = 0</msg>
<msg timestamp="20250714 14:52:15.035" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20250714 14:52:15.025" endtime="20250714 14:52:15.035"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250714 14:52:15.036" level="INFO">200</msg>
<status status="PASS" starttime="20250714 14:52:15.035" endtime="20250714 14:52:15.036"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250714 14:52:15.036" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250714 14:52:15.036" endtime="20250714 14:52:15.036"/>
</kw>
<status status="PASS" starttime="20250714 14:52:15.025" endtime="20250714 14:52:15.036"/>
</kw>
<msg timestamp="20250714 14:52:15.036" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250714 14:52:15.025" endtime="20250714 14:52:15.036"/>
</kw>
<msg timestamp="20250714 14:52:15.036" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20250714 14:52:15.025" endtime="20250714 14:52:15.037"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250714 14:52:15.037" endtime="20250714 14:52:15.037"/>
</kw>
<status status="NOT RUN" starttime="20250714 14:52:15.037" endtime="20250714 14:52:15.037"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250714 14:52:15.037" endtime="20250714 14:52:15.037"/>
</kw>
<status status="PASS" starttime="20250714 14:52:15.037" endtime="20250714 14:52:15.037"/>
</branch>
<status status="PASS" starttime="20250714 14:52:15.037" endtime="20250714 14:52:15.037"/>
</if>
<status status="PASS" starttime="20250714 14:52:15.024" endtime="20250714 14:52:15.037"/>
</kw>
<status status="PASS" starttime="20250714 14:52:14.966" endtime="20250714 14:52:15.037"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250714 14:52:14.966" endtime="20250714 14:52:15.038"/>
</test>
<test id="s1-t6" name="Check Quota Usage api access" line="117">
<kw name="Check Access">
<arg>${QUOTA_USAGE_URL}?path=/</arg>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250714 14:52:15.042" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20250714 14:52:15.046" level="INFO">${rc} = 0</msg>
<msg timestamp="20250714 14:52:15.046" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20250714 14:52:15.040" endtime="20250714 14:52:15.046"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250714 14:52:15.047" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20250714 14:52:15.046" endtime="20250714 14:52:15.047"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250714 14:52:15.047" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250714 14:52:15.047" endtime="20250714 14:52:15.047"/>
</kw>
<status status="PASS" starttime="20250714 14:52:15.039" endtime="20250714 14:52:15.047"/>
</kw>
<msg timestamp="20250714 14:52:15.047" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250714 14:52:15.039" endtime="20250714 14:52:15.047"/>
</kw>
<status status="PASS" starttime="20250714 14:52:15.039" endtime="20250714 14:52:15.047"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250714 14:52:15.051" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/quota?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250714 14:52:15.062" level="INFO">${rc} = 0</msg>
<msg timestamp="20250714 14:52:15.062" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20250714 14:52:15.049" endtime="20250714 14:52:15.062"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250714 14:52:15.063" level="INFO">200</msg>
<status status="PASS" starttime="20250714 14:52:15.062" endtime="20250714 14:52:15.063"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250714 14:52:15.063" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250714 14:52:15.063" endtime="20250714 14:52:15.063"/>
</kw>
<status status="PASS" starttime="20250714 14:52:15.048" endtime="20250714 14:52:15.063"/>
</kw>
<msg timestamp="20250714 14:52:15.063" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250714 14:52:15.048" endtime="20250714 14:52:15.064"/>
</kw>
<msg timestamp="20250714 14:52:15.064" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20250714 14:52:15.048" endtime="20250714 14:52:15.064"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250714 14:52:15.064" endtime="20250714 14:52:15.064"/>
</kw>
<status status="NOT RUN" starttime="20250714 14:52:15.064" endtime="20250714 14:52:15.064"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250714 14:52:15.064" endtime="20250714 14:52:15.065"/>
</kw>
<status status="PASS" starttime="20250714 14:52:15.064" endtime="20250714 14:52:15.065"/>
</branch>
<status status="PASS" starttime="20250714 14:52:15.064" endtime="20250714 14:52:15.065"/>
</if>
<status status="PASS" starttime="20250714 14:52:15.048" endtime="20250714 14:52:15.065"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250714 14:52:15.065" endtime="20250714 14:52:15.065"/>
</kw>
<status status="PASS" starttime="20250714 14:52:15.065" endtime="20250714 14:52:15.065"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250714 14:52:15.068" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/quota?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250714 14:52:15.078" level="INFO">${rc} = 0</msg>
<msg timestamp="20250714 14:52:15.078" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20250714 14:52:15.066" endtime="20250714 14:52:15.078"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250714 14:52:15.079" level="INFO">200</msg>
<status status="PASS" starttime="20250714 14:52:15.078" endtime="20250714 14:52:15.079"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250714 14:52:15.079" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250714 14:52:15.079" endtime="20250714 14:52:15.079"/>
</kw>
<status status="PASS" starttime="20250714 14:52:15.066" endtime="20250714 14:52:15.079"/>
</kw>
<msg timestamp="20250714 14:52:15.079" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250714 14:52:15.066" endtime="20250714 14:52:15.079"/>
</kw>
<msg timestamp="20250714 14:52:15.079" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20250714 14:52:15.066" endtime="20250714 14:52:15.079"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250714 14:52:15.080" endtime="20250714 14:52:15.080"/>
</kw>
<status status="NOT RUN" starttime="20250714 14:52:15.080" endtime="20250714 14:52:15.080"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250714 14:52:15.080" endtime="20250714 14:52:15.080"/>
</kw>
<status status="PASS" starttime="20250714 14:52:15.080" endtime="20250714 14:52:15.080"/>
</branch>
<status status="PASS" starttime="20250714 14:52:15.079" endtime="20250714 14:52:15.080"/>
</if>
<status status="PASS" starttime="20250714 14:52:15.065" endtime="20250714 14:52:15.080"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250714 14:52:15.081" endtime="20250714 14:52:15.081"/>
</kw>
<status status="PASS" starttime="20250714 14:52:15.080" endtime="20250714 14:52:15.081"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250714 14:52:15.084" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/quota?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250714 14:52:15.093" level="INFO">${rc} = 0</msg>
<msg timestamp="20250714 14:52:15.093" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20250714 14:52:15.082" endtime="20250714 14:52:15.093"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250714 14:52:15.093" level="INFO">200</msg>
<status status="PASS" starttime="20250714 14:52:15.093" endtime="20250714 14:52:15.093"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250714 14:52:15.094" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250714 14:52:15.094" endtime="20250714 14:52:15.094"/>
</kw>
<status status="PASS" starttime="20250714 14:52:15.082" endtime="20250714 14:52:15.094"/>
</kw>
<msg timestamp="20250714 14:52:15.094" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250714 14:52:15.082" endtime="20250714 14:52:15.094"/>
</kw>
<msg timestamp="20250714 14:52:15.094" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20250714 14:52:15.081" endtime="20250714 14:52:15.094"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250714 14:52:15.095" endtime="20250714 14:52:15.095"/>
</kw>
<status status="NOT RUN" starttime="20250714 14:52:15.094" endtime="20250714 14:52:15.095"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250714 14:52:15.095" endtime="20250714 14:52:15.095"/>
</kw>
<status status="PASS" starttime="20250714 14:52:15.095" endtime="20250714 14:52:15.095"/>
</branch>
<status status="PASS" starttime="20250714 14:52:15.094" endtime="20250714 14:52:15.095"/>
</if>
<status status="PASS" starttime="20250714 14:52:15.081" endtime="20250714 14:52:15.095"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250714 14:52:15.096" endtime="20250714 14:52:15.096"/>
</kw>
<status status="PASS" starttime="20250714 14:52:15.095" endtime="20250714 14:52:15.096"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250714 14:52:15.099" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/quota?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250714 14:52:15.107" level="INFO">${rc} = 0</msg>
<msg timestamp="20250714 14:52:15.107" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20250714 14:52:15.097" endtime="20250714 14:52:15.107"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250714 14:52:15.108" level="INFO">200</msg>
<status status="PASS" starttime="20250714 14:52:15.107" endtime="20250714 14:52:15.108"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250714 14:52:15.108" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250714 14:52:15.108" endtime="20250714 14:52:15.108"/>
</kw>
<status status="PASS" starttime="20250714 14:52:15.097" endtime="20250714 14:52:15.108"/>
</kw>
<msg timestamp="20250714 14:52:15.108" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250714 14:52:15.096" endtime="20250714 14:52:15.108"/>
</kw>
<msg timestamp="20250714 14:52:15.108" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20250714 14:52:15.096" endtime="20250714 14:52:15.108"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250714 14:52:15.109" endtime="20250714 14:52:15.109"/>
</kw>
<status status="NOT RUN" starttime="20250714 14:52:15.108" endtime="20250714 14:52:15.109"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250714 14:52:15.109" endtime="20250714 14:52:15.109"/>
</kw>
<status status="PASS" starttime="20250714 14:52:15.109" endtime="20250714 14:52:15.109"/>
</branch>
<status status="PASS" starttime="20250714 14:52:15.108" endtime="20250714 14:52:15.109"/>
</if>
<status status="PASS" starttime="20250714 14:52:15.096" endtime="20250714 14:52:15.109"/>
</kw>
<status status="PASS" starttime="20250714 14:52:15.038" endtime="20250714 14:52:15.109"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250714 14:52:15.038" endtime="20250714 14:52:15.109"/>
</test>
<test id="s1-t7" name="Check File Size Distribution api access" line="120">
<kw name="Check Access">
<arg>${FILE_SIZE_DIST_URL}?path=/</arg>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250714 14:52:15.113" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20250714 14:52:15.117" level="INFO">${rc} = 0</msg>
<msg timestamp="20250714 14:52:15.117" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20250714 14:52:15.111" endtime="20250714 14:52:15.117"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250714 14:52:15.118" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20250714 14:52:15.117" endtime="20250714 14:52:15.118"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250714 14:52:15.118" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250714 14:52:15.118" endtime="20250714 14:52:15.118"/>
</kw>
<status status="PASS" starttime="20250714 14:52:15.111" endtime="20250714 14:52:15.118"/>
</kw>
<msg timestamp="20250714 14:52:15.118" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250714 14:52:15.111" endtime="20250714 14:52:15.118"/>
</kw>
<status status="PASS" starttime="20250714 14:52:15.111" endtime="20250714 14:52:15.118"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250714 14:52:15.121" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250714 14:52:15.134" level="INFO">${rc} = 0</msg>
<msg timestamp="20250714 14:52:15.134" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20250714 14:52:15.120" endtime="20250714 14:52:15.134"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250714 14:52:15.134" level="INFO">200</msg>
<status status="PASS" starttime="20250714 14:52:15.134" endtime="20250714 14:52:15.135"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250714 14:52:15.135" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250714 14:52:15.135" endtime="20250714 14:52:15.135"/>
</kw>
<status status="PASS" starttime="20250714 14:52:15.119" endtime="20250714 14:52:15.135"/>
</kw>
<msg timestamp="20250714 14:52:15.135" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250714 14:52:15.119" endtime="20250714 14:52:15.135"/>
</kw>
<msg timestamp="20250714 14:52:15.135" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20250714 14:52:15.119" endtime="20250714 14:52:15.135"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250714 14:52:15.136" endtime="20250714 14:52:15.136"/>
</kw>
<status status="NOT RUN" starttime="20250714 14:52:15.136" endtime="20250714 14:52:15.136"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250714 14:52:15.136" endtime="20250714 14:52:15.136"/>
</kw>
<status status="PASS" starttime="20250714 14:52:15.136" endtime="20250714 14:52:15.136"/>
</branch>
<status status="PASS" starttime="20250714 14:52:15.135" endtime="20250714 14:52:15.136"/>
</if>
<status status="PASS" starttime="20250714 14:52:15.118" endtime="20250714 14:52:15.136"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250714 14:52:15.137" endtime="20250714 14:52:15.137"/>
</kw>
<status status="PASS" starttime="20250714 14:52:15.136" endtime="20250714 14:52:15.137"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250714 14:52:15.140" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250714 14:52:15.149" level="INFO">${rc} = 0</msg>
<msg timestamp="20250714 14:52:15.149" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20250714 14:52:15.138" endtime="20250714 14:52:15.149"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250714 14:52:15.150" level="INFO">200</msg>
<status status="PASS" starttime="20250714 14:52:15.149" endtime="20250714 14:52:15.150"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250714 14:52:15.150" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250714 14:52:15.150" endtime="20250714 14:52:15.150"/>
</kw>
<status status="PASS" starttime="20250714 14:52:15.138" endtime="20250714 14:52:15.150"/>
</kw>
<msg timestamp="20250714 14:52:15.150" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250714 14:52:15.138" endtime="20250714 14:52:15.150"/>
</kw>
<msg timestamp="20250714 14:52:15.150" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20250714 14:52:15.137" endtime="20250714 14:52:15.150"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250714 14:52:15.151" endtime="20250714 14:52:15.151"/>
</kw>
<status status="NOT RUN" starttime="20250714 14:52:15.151" endtime="20250714 14:52:15.151"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250714 14:52:15.151" endtime="20250714 14:52:15.151"/>
</kw>
<status status="PASS" starttime="20250714 14:52:15.151" endtime="20250714 14:52:15.151"/>
</branch>
<status status="PASS" starttime="20250714 14:52:15.151" endtime="20250714 14:52:15.151"/>
</if>
<status status="PASS" starttime="20250714 14:52:15.137" endtime="20250714 14:52:15.151"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250714 14:52:15.152" endtime="20250714 14:52:15.152"/>
</kw>
<status status="PASS" starttime="20250714 14:52:15.151" endtime="20250714 14:52:15.152"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250714 14:52:15.155" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250714 14:52:15.163" level="INFO">${rc} = 0</msg>
<msg timestamp="20250714 14:52:15.163" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20250714 14:52:15.153" endtime="20250714 14:52:15.163"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250714 14:52:15.164" level="INFO">200</msg>
<status status="PASS" starttime="20250714 14:52:15.164" endtime="20250714 14:52:15.164"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250714 14:52:15.164" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250714 14:52:15.164" endtime="20250714 14:52:15.164"/>
</kw>
<status status="PASS" starttime="20250714 14:52:15.153" endtime="20250714 14:52:15.165"/>
</kw>
<msg timestamp="20250714 14:52:15.165" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250714 14:52:15.153" endtime="20250714 14:52:15.165"/>
</kw>
<msg timestamp="20250714 14:52:15.165" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20250714 14:52:15.152" endtime="20250714 14:52:15.165"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250714 14:52:15.165" endtime="20250714 14:52:15.165"/>
</kw>
<status status="NOT RUN" starttime="20250714 14:52:15.165" endtime="20250714 14:52:15.165"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250714 14:52:15.165" endtime="20250714 14:52:15.166"/>
</kw>
<status status="PASS" starttime="20250714 14:52:15.165" endtime="20250714 14:52:15.166"/>
</branch>
<status status="PASS" starttime="20250714 14:52:15.165" endtime="20250714 14:52:15.166"/>
</if>
<status status="PASS" starttime="20250714 14:52:15.152" endtime="20250714 14:52:15.166"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250714 14:52:15.166" endtime="20250714 14:52:15.166"/>
</kw>
<status status="PASS" starttime="20250714 14:52:15.166" endtime="20250714 14:52:15.166"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250714 14:52:15.170" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250714 14:52:15.178" level="INFO">${rc} = 0</msg>
<msg timestamp="20250714 14:52:15.178" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20250714 14:52:15.168" endtime="20250714 14:52:15.178"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250714 14:52:15.178" level="INFO">200</msg>
<status status="PASS" starttime="20250714 14:52:15.178" endtime="20250714 14:52:15.178"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250714 14:52:15.179" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250714 14:52:15.179" endtime="20250714 14:52:15.179"/>
</kw>
<status status="PASS" starttime="20250714 14:52:15.167" endtime="20250714 14:52:15.179"/>
</kw>
<msg timestamp="20250714 14:52:15.179" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250714 14:52:15.167" endtime="20250714 14:52:15.179"/>
</kw>
<msg timestamp="20250714 14:52:15.179" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20250714 14:52:15.167" endtime="20250714 14:52:15.179"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250714 14:52:15.180" endtime="20250714 14:52:15.180"/>
</kw>
<status status="NOT RUN" starttime="20250714 14:52:15.179" endtime="20250714 14:52:15.180"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250714 14:52:15.180" endtime="20250714 14:52:15.180"/>
</kw>
<status status="PASS" starttime="20250714 14:52:15.180" endtime="20250714 14:52:15.180"/>
</branch>
<status status="PASS" starttime="20250714 14:52:15.179" endtime="20250714 14:52:15.180"/>
</if>
<status status="PASS" starttime="20250714 14:52:15.167" endtime="20250714 14:52:15.180"/>
</kw>
<status status="PASS" starttime="20250714 14:52:15.110" endtime="20250714 14:52:15.180"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250714 14:52:15.110" endtime="20250714 14:52:15.180"/>
</test>
<test id="s1-t8" name="Check Recon Namespace Summary Root" line="123">
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/</arg>
<arg>ROOT</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250714 14:52:15.185" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250714 14:52:15.193" level="INFO">${rc} = 0</msg>
<msg timestamp="20250714 14:52:15.193" level="INFO">${output} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"INITIALIZING"}</msg>
<status status="PASS" starttime="20250714 14:52:15.183" endtime="20250714 14:52:15.193"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250714 14:52:15.194" level="INFO">{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"INITIALIZING"}</msg>
<status status="PASS" starttime="20250714 14:52:15.194" endtime="20250714 14:52:15.194"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250714 14:52:15.194" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250714 14:52:15.194" endtime="20250714 14:52:15.195"/>
</kw>
<status status="PASS" starttime="20250714 14:52:15.183" endtime="20250714 14:52:15.195"/>
</kw>
<msg timestamp="20250714 14:52:15.195" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250714 14:52:15.183" endtime="20250714 14:52:15.195"/>
</kw>
<msg timestamp="20250714 14:52:15.195" level="INFO">${result} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"INITIALIZING"}</msg>
<status status="PASS" starttime="20250714 14:52:15.183" endtime="20250714 14:52:15.195"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20250714 14:52:15.195" level="FAIL">'{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"INITIALIZING"}' does not contain '"status":"OK"'</msg>
<status status="FAIL" starttime="20250714 14:52:15.195" endtime="20250714 14:52:15.195"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250714 14:52:15.195" endtime="20250714 14:52:15.196"/>
</kw>
<status status="FAIL" starttime="20250714 14:52:15.182" endtime="20250714 14:52:15.196"/>
</kw>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250714 14:52:25.200" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250714 14:52:25.211" level="INFO">${rc} = 0</msg>
<msg timestamp="20250714 14:52:25.211" level="INFO">${output} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"INITIALIZING"}</msg>
<status status="PASS" starttime="20250714 14:52:25.198" endtime="20250714 14:52:25.211"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250714 14:52:25.212" level="INFO">{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"INITIALIZING"}</msg>
<status status="PASS" starttime="20250714 14:52:25.211" endtime="20250714 14:52:25.212"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250714 14:52:25.212" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250714 14:52:25.212" endtime="20250714 14:52:25.212"/>
</kw>
<status status="PASS" starttime="20250714 14:52:25.197" endtime="20250714 14:52:25.213"/>
</kw>
<msg timestamp="20250714 14:52:25.213" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250714 14:52:25.197" endtime="20250714 14:52:25.213"/>
</kw>
<msg timestamp="20250714 14:52:25.213" level="INFO">${result} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"INITIALIZING"}</msg>
<status status="PASS" starttime="20250714 14:52:25.197" endtime="20250714 14:52:25.213"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20250714 14:52:25.214" level="FAIL">'{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"INITIALIZING"}' does not contain '"status":"OK"'</msg>
<status status="FAIL" starttime="20250714 14:52:25.213" endtime="20250714 14:52:25.214"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250714 14:52:25.214" endtime="20250714 14:52:25.214"/>
</kw>
<status status="FAIL" starttime="20250714 14:52:25.196" endtime="20250714 14:52:25.214"/>
</kw>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250714 14:52:35.218" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250714 14:52:35.228" level="INFO">${rc} = 0</msg>
<msg timestamp="20250714 14:52:35.228" level="INFO">${output} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"INITIALIZING"}</msg>
<status status="PASS" starttime="20250714 14:52:35.216" endtime="20250714 14:52:35.228"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250714 14:52:35.228" level="INFO">{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"INITIALIZING"}</msg>
<status status="PASS" starttime="20250714 14:52:35.228" endtime="20250714 14:52:35.228"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250714 14:52:35.229" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250714 14:52:35.229" endtime="20250714 14:52:35.229"/>
</kw>
<status status="PASS" starttime="20250714 14:52:35.215" endtime="20250714 14:52:35.229"/>
</kw>
<msg timestamp="20250714 14:52:35.229" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250714 14:52:35.215" endtime="20250714 14:52:35.229"/>
</kw>
<msg timestamp="20250714 14:52:35.229" level="INFO">${result} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"INITIALIZING"}</msg>
<status status="PASS" starttime="20250714 14:52:35.215" endtime="20250714 14:52:35.229"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20250714 14:52:35.230" level="FAIL">'{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"INITIALIZING"}' does not contain '"status":"OK"'</msg>
<status status="FAIL" starttime="20250714 14:52:35.229" endtime="20250714 14:52:35.230"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250714 14:52:35.230" endtime="20250714 14:52:35.230"/>
</kw>
<status status="FAIL" starttime="20250714 14:52:35.214" endtime="20250714 14:52:35.230"/>
</kw>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250714 14:52:45.234" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250714 14:52:45.252" level="INFO">${rc} = 0</msg>
<msg timestamp="20250714 14:52:45.252" level="INFO">${output} = {"path":"","type":"ROOT","countStats":{"numVolume":2,"numBucket":1,"numDir":2,"numKey":2},"objectInfo":{"metadata":null,"name":null,"quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"creationTim...</msg>
<status status="PASS" starttime="20250714 14:52:45.232" endtime="20250714 14:52:45.252"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250714 14:52:45.253" level="INFO">{"path":"","type":"ROOT","countStats":{"numVolume":2,"numBucket":1,"numDir":2,"numKey":2},"objectInfo":{"metadata":null,"name":null,"quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"creationTime":0,"modificationTime":0,"acls":null},"status":"OK"}</msg>
<status status="PASS" starttime="20250714 14:52:45.252" endtime="20250714 14:52:45.253"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250714 14:52:45.253" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250714 14:52:45.253" endtime="20250714 14:52:45.253"/>
</kw>
<status status="PASS" starttime="20250714 14:52:45.231" endtime="20250714 14:52:45.254"/>
</kw>
<msg timestamp="20250714 14:52:45.254" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250714 14:52:45.231" endtime="20250714 14:52:45.254"/>
</kw>
<msg timestamp="20250714 14:52:45.254" level="INFO">${result} = {"path":"","type":"ROOT","countStats":{"numVolume":2,"numBucket":1,"numDir":2,"numKey":2},"objectInfo":{"metadata":null,"name":null,"quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"creationTim...</msg>
<status status="PASS" starttime="20250714 14:52:45.231" endtime="20250714 14:52:45.254"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250714 14:52:45.254" endtime="20250714 14:52:45.254"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250714 14:52:45.254" endtime="20250714 14:52:45.254"/>
</kw>
<status status="PASS" starttime="20250714 14:52:45.230" endtime="20250714 14:52:45.255"/>
</kw>
<status status="PASS" starttime="20250714 14:52:15.182" endtime="20250714 14:52:45.255"/>
</kw>
<status status="PASS" starttime="20250714 14:52:15.181" endtime="20250714 14:52:45.255"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250714 14:52:15.181" endtime="20250714 14:52:45.255"/>
</test>
<test id="s1-t9" name="Check Recon Namespace Summary Volume" line="126">
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/${VOLUME}</arg>
<arg>VOLUME</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250714 14:52:45.259" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-hmgya 2&gt;&amp;1'.</msg>
<msg timestamp="20250714 14:52:45.282" level="INFO">${rc} = 0</msg>
<msg timestamp="20250714 14:52:45.282" level="INFO">${output} = {"path":"","type":"VOLUME","countStats":{"numVolume":-1,"numBucket":1,"numDir":2,"numKey":2},"objectInfo":{"metadata":{},"name":"vol-hmgya","quotaInBytes":-1,"quotaInNamespace":-1,"usedNamespace":1,"c...</msg>
<status status="PASS" starttime="20250714 14:52:45.257" endtime="20250714 14:52:45.282"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250714 14:52:45.283" level="INFO">{"path":"","type":"VOLUME","countStats":{"numVolume":-1,"numBucket":1,"numDir":2,"numKey":2},"objectInfo":{"metadata":{},"name":"vol-hmgya","quotaInBytes":-1,"quotaInNamespace":-1,"usedNamespace":1,"creationTime":1752504722128,"modificationTime":1752504722128,"acls":[{"type":"USER","name":"hadoop","scope":"ACCESS","aclList":["ALL"]},{"type":"GROUP","name":"hadoop","scope":"ACCESS","aclList":["READ","LIST"]}],"admin":"hadoop","owner":"hadoop","volume":"vol-hmgya"},"status":"OK"}</msg>
<status status="PASS" starttime="20250714 14:52:45.282" endtime="20250714 14:52:45.283"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250714 14:52:45.284" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250714 14:52:45.283" endtime="20250714 14:52:45.284"/>
</kw>
<status status="PASS" starttime="20250714 14:52:45.257" endtime="20250714 14:52:45.284"/>
</kw>
<msg timestamp="20250714 14:52:45.284" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250714 14:52:45.257" endtime="20250714 14:52:45.284"/>
</kw>
<msg timestamp="20250714 14:52:45.284" level="INFO">${result} = {"path":"","type":"VOLUME","countStats":{"numVolume":-1,"numBucket":1,"numDir":2,"numKey":2},"objectInfo":{"metadata":{},"name":"vol-hmgya","quotaInBytes":-1,"quotaInNamespace":-1,"usedNamespace":1,"c...</msg>
<status status="PASS" starttime="20250714 14:52:45.257" endtime="20250714 14:52:45.284"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250714 14:52:45.284" endtime="20250714 14:52:45.284"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250714 14:52:45.285" endtime="20250714 14:52:45.285"/>
</kw>
<status status="PASS" starttime="20250714 14:52:45.256" endtime="20250714 14:52:45.285"/>
</kw>
<status status="PASS" starttime="20250714 14:52:45.256" endtime="20250714 14:52:45.285"/>
</kw>
<status status="PASS" starttime="20250714 14:52:45.256" endtime="20250714 14:52:45.285"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250714 14:52:45.255" endtime="20250714 14:52:45.285"/>
</test>
<test id="s1-t10" name="Check Recon Namespace Summary Bucket" line="129">
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}</arg>
<arg>BUCKET</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250714 14:52:45.290" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-hmgya/buc-ufuiz 2&gt;&amp;1'.</msg>
<msg timestamp="20250714 14:52:45.312" level="INFO">${rc} = 0</msg>
<msg timestamp="20250714 14:52:45.312" level="INFO">${output} = {"path":"","type":"BUCKET","countStats":{"numVolume":-1,"numBucket":-1,"numDir":2,"numKey":2},"objectInfo":{"versioningEnabled":false,"metadata":{},"name":"buc-ufuiz","quotaInBytes":-1,"quotaInNamespa...</msg>
<status status="PASS" starttime="20250714 14:52:45.288" endtime="20250714 14:52:45.312"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250714 14:52:45.313" level="INFO">{"path":"","type":"BUCKET","countStats":{"numVolume":-1,"numBucket":-1,"numDir":2,"numKey":2},"objectInfo":{"versioningEnabled":false,"metadata":{},"name":"buc-ufuiz","quotaInBytes":-1,"quotaInNamespace":-1,"usedNamespace":4,"creationTime":1752504725140,"modificationTime":1752504725140,"acls":[{"type":"USER","name":"hadoop","scope":"ACCESS","aclList":["ALL"]},{"type":"GROUP","name":"hadoop","scope":"ACCESS","aclList":["READ","LIST"]}],"volumeName":"vol-hmgya","storageType":"DISK","versioning":false,"usedBytes":32967,"encryptionInfo":null,"replicationConfigInfo":null,"sourceVolume":null,"sourceBucket":null,"bucketLayout":"LEGACY","owner":"hadoop"},"status":"OK"}</msg>
<status status="PASS" starttime="20250714 14:52:45.313" endtime="20250714 14:52:45.313"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250714 14:52:45.314" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250714 14:52:45.313" endtime="20250714 14:52:45.314"/>
</kw>
<status status="PASS" starttime="20250714 14:52:45.287" endtime="20250714 14:52:45.314"/>
</kw>
<msg timestamp="20250714 14:52:45.314" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250714 14:52:45.287" endtime="20250714 14:52:45.314"/>
</kw>
<msg timestamp="20250714 14:52:45.314" level="INFO">${result} = {"path":"","type":"BUCKET","countStats":{"numVolume":-1,"numBucket":-1,"numDir":2,"numKey":2},"objectInfo":{"versioningEnabled":false,"metadata":{},"name":"buc-ufuiz","quotaInBytes":-1,"quotaInNamespa...</msg>
<status status="PASS" starttime="20250714 14:52:45.287" endtime="20250714 14:52:45.314"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250714 14:52:45.315" endtime="20250714 14:52:45.315"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250714 14:52:45.315" endtime="20250714 14:52:45.315"/>
</kw>
<status status="PASS" starttime="20250714 14:52:45.287" endtime="20250714 14:52:45.315"/>
</kw>
<status status="PASS" starttime="20250714 14:52:45.286" endtime="20250714 14:52:45.315"/>
</kw>
<status status="PASS" starttime="20250714 14:52:45.286" endtime="20250714 14:52:45.315"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250714 14:52:45.285" endtime="20250714 14:52:45.316"/>
</test>
<test id="s1-t11" name="Check Recon Namespace Summary Key" line="132">
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}/file1</arg>
<arg>KEY</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250714 14:52:45.322" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-hmgya/buc-ufuiz/file1 2&gt;&amp;1'.</msg>
<msg timestamp="20250714 14:52:45.363" level="INFO">${rc} = 0</msg>
<msg timestamp="20250714 14:52:45.363" level="INFO">${output} = {"path":"","type":"KEY","countStats":{"numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0},"objectInfo":{"fileName":"file1","file":true,"metadata":{},"name":"file1","quotaInBytes":0,"quotaInNamespace...</msg>
<status status="PASS" starttime="20250714 14:52:45.319" endtime="20250714 14:52:45.364"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250714 14:52:45.365" level="INFO">{"path":"","type":"KEY","countStats":{"numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0},"objectInfo":{"fileName":"file1","file":true,"metadata":{},"name":"file1","quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"creationTime":1752504728219,"modificationTime":1752504729918,"acls":[{"type":"USER","name":"hadoop","scope":"ACCESS","aclList":["ALL"]},{"type":"GROUP","name":"hadoop","scope":"ACCESS","aclList":["READ","LIST"]}],"volumeName":"vol-hmgya","bucketName":"buc-ufuiz","keyName":"file1","dataSize":4951,"keyLocationVersions":[{"version":0,"locationVersionMap":{"0":[{"blockID":{"containerBlockID":{"containerID":1,"localID":115816896921600001},"blockCommitSequenceId":2,"replicaIndex":null,"containerID":1,"localID":115816896921600001},"length":4951,"offset":0,"token":null,"createVersion":0,"pipeline":null,"partNumber":0,"underConstruction":false,"containerID":1,"localID":115816896921600001,"blockCommitSequenceId":2}]},"locationList":[{"blockID":{"containerBlockID":{"containerID":1,"localID":115816896921600001},"blockCommitSequenceId":2,"replicaIndex":null,"containerID":1,"localID":115816896921600001},"length":4951,"offset":0,"token":null,"createVersion":0,"pipeline":null,"partNumber":0,"underConstruction":false,"containerID":1,"localID":115816896921600001,"blockCommitSequenceId":2}],"blocksLatestVersionOnly":[{"blockID":{"containerBlockID":{"containerID":1,"localID":115816896921600001},"blockCommitSequenceId":2,"replicaIndex":null,"containerID":1,"localID":115816896921600001},"length":4951,"offset":0,"token":null,"createVersion":0,"pipeline":null,"partNumber":0,"underConstruction":false,"containerID":1,"localID":115816896921600001,"blockCommitSequenceId":2}],"locationLists":[[{"blockID":{"containerBlockID":{"containerID":1,"localID":115816896921600001},"blockCommitSequenceId":2,"replicaIndex":null,"containerID":1,"localID":115816896921600001},"length":4951,"offset":0,"token":null,"createVersion":0,"pipeline":null,"partNumber":0,"underConstruction":false,"containerID":1,"localID":115816896921600001,"blockCommitSequenceId":2}]],"locationListCount":1,"multipartKey":false}],"replicationConfig":{"replicationFactor":"THREE","requiredNodes":3,"minimumNodes":1,"replicationType":"RATIS"},"encInfo":null},"status":"OK"}</msg>
<status status="PASS" starttime="20250714 14:52:45.364" endtime="20250714 14:52:45.365"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250714 14:52:45.365" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250714 14:52:45.365" endtime="20250714 14:52:45.365"/>
</kw>
<status status="PASS" starttime="20250714 14:52:45.319" endtime="20250714 14:52:45.365"/>
</kw>
<msg timestamp="20250714 14:52:45.366" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250714 14:52:45.318" endtime="20250714 14:52:45.366"/>
</kw>
<msg timestamp="20250714 14:52:45.366" level="INFO">${result} = {"path":"","type":"KEY","countStats":{"numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0},"objectInfo":{"fileName":"file1","file":true,"metadata":{},"name":"file1","quotaInBytes":0,"quotaInNamespace...</msg>
<status status="PASS" starttime="20250714 14:52:45.318" endtime="20250714 14:52:45.366"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250714 14:52:45.366" endtime="20250714 14:52:45.366"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250714 14:52:45.366" endtime="20250714 14:52:45.367"/>
</kw>
<status status="PASS" starttime="20250714 14:52:45.318" endtime="20250714 14:52:45.367"/>
</kw>
<status status="PASS" starttime="20250714 14:52:45.317" endtime="20250714 14:52:45.367"/>
</kw>
<status status="PASS" starttime="20250714 14:52:45.317" endtime="20250714 14:52:45.367"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250714 14:52:45.316" endtime="20250714 14:52:45.367"/>
</test>
<test id="s1-t12" name="Check Recon Namespace Summary Directory" line="135">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET_LAYOUT}' == 'LEGACY'</arg>
<arg>Wait For Summary</arg>
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}/dir1/dir2/</arg>
<arg>DIRECTORY</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}/dir1/dir2/</arg>
<arg>DIRECTORY</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250714 14:52:45.374" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-hmgya/buc-ufuiz/dir1/dir2/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250714 14:52:45.387" level="INFO">${rc} = 0</msg>
<msg timestamp="20250714 14:52:45.387" level="INFO">${output} = {"path":"","type":"DIRECTORY","countStats":{"numVolume":-1,"numBucket":-1,"numDir":0,"numKey":1},"objectInfo":{"metadata":{},"name":"dir1","quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"crea...</msg>
<status status="PASS" starttime="20250714 14:52:45.371" endtime="20250714 14:52:45.387"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250714 14:52:45.388" level="INFO">{"path":"","type":"DIRECTORY","countStats":{"numVolume":-1,"numBucket":-1,"numDir":0,"numKey":1},"objectInfo":{"metadata":{},"name":"dir1","quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"creationTime":0,"modificationTime":0,"acls":[]},"status":"OK"}</msg>
<status status="PASS" starttime="20250714 14:52:45.388" endtime="20250714 14:52:45.388"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250714 14:52:45.389" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250714 14:52:45.388" endtime="20250714 14:52:45.389"/>
</kw>
<status status="PASS" starttime="20250714 14:52:45.371" endtime="20250714 14:52:45.389"/>
</kw>
<msg timestamp="20250714 14:52:45.389" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250714 14:52:45.370" endtime="20250714 14:52:45.389"/>
</kw>
<msg timestamp="20250714 14:52:45.389" level="INFO">${result} = {"path":"","type":"DIRECTORY","countStats":{"numVolume":-1,"numBucket":-1,"numDir":0,"numKey":1},"objectInfo":{"metadata":{},"name":"dir1","quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"crea...</msg>
<status status="PASS" starttime="20250714 14:52:45.370" endtime="20250714 14:52:45.389"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250714 14:52:45.389" endtime="20250714 14:52:45.390"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250714 14:52:45.390" endtime="20250714 14:52:45.390"/>
</kw>
<status status="PASS" starttime="20250714 14:52:45.370" endtime="20250714 14:52:45.390"/>
</kw>
<status status="PASS" starttime="20250714 14:52:45.369" endtime="20250714 14:52:45.390"/>
</kw>
<status status="PASS" starttime="20250714 14:52:45.368" endtime="20250714 14:52:45.390"/>
</kw>
<status status="PASS" starttime="20250714 14:52:45.368" endtime="20250714 14:52:45.390"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET_LAYOUT}' == 'FILE_SYSTEM_OPTIMIZED'</arg>
<arg>Wait For Summary</arg>
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}/dir1/dir2</arg>
<arg>DIRECTORY</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250714 14:52:45.390" endtime="20250714 14:52:45.391"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250714 14:52:45.368" endtime="20250714 14:52:45.391"/>
</test>
<test id="s1-t13" name="Check Recon Namespace Disk Usage" line="139">
<kw name="Wait For Summary">
<arg>${DISK_USAGE_URL}?path=/${VOLUME}/${BUCKET}&amp;files=true&amp;replica=true</arg>
<arg>\"sizeWithReplica\"</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250714 14:52:45.396" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/usage?path=/vol-hmgya/buc-ufuiz&amp;files=true&amp;replica=true 2&gt;&amp;1'.</msg>
<msg timestamp="20250714 14:52:45.408" level="INFO">${rc} = 0</msg>
<msg timestamp="20250714 14:52:45.408" level="INFO">${output} = {"status":"OK","path":"/vol-hmgya/buc-ufuiz","size":10989,"sizeWithReplica":-1,"subPathCount":1,"subPaths":[{"key":false,"path":"/vol-hmgya/buc-ufuiz/dir1","size":6038,"sizeWithReplica":-1,"isKey":fal...</msg>
<status status="PASS" starttime="20250714 14:52:45.393" endtime="20250714 14:52:45.408"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250714 14:52:45.409" level="INFO">{"status":"OK","path":"/vol-hmgya/buc-ufuiz","size":10989,"sizeWithReplica":-1,"subPathCount":1,"subPaths":[{"key":false,"path":"/vol-hmgya/buc-ufuiz/dir1","size":6038,"sizeWithReplica":-1,"isKey":false}],"sizeDirectKey":4951}</msg>
<status status="PASS" starttime="20250714 14:52:45.409" endtime="20250714 14:52:45.409"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250714 14:52:45.410" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250714 14:52:45.409" endtime="20250714 14:52:45.410"/>
</kw>
<status status="PASS" starttime="20250714 14:52:45.393" endtime="20250714 14:52:45.410"/>
</kw>
<msg timestamp="20250714 14:52:45.410" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250714 14:52:45.393" endtime="20250714 14:52:45.410"/>
</kw>
<msg timestamp="20250714 14:52:45.410" level="INFO">${result} = {"status":"OK","path":"/vol-hmgya/buc-ufuiz","size":10989,"sizeWithReplica":-1,"subPathCount":1,"subPaths":[{"key":false,"path":"/vol-hmgya/buc-ufuiz/dir1","size":6038,"sizeWithReplica":-1,"isKey":fal...</msg>
<status status="PASS" starttime="20250714 14:52:45.393" endtime="20250714 14:52:45.410"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250714 14:52:45.410" endtime="20250714 14:52:45.411"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250714 14:52:45.411" endtime="20250714 14:52:45.411"/>
</kw>
<status status="PASS" starttime="20250714 14:52:45.392" endtime="20250714 14:52:45.411"/>
</kw>
<status status="PASS" starttime="20250714 14:52:45.392" endtime="20250714 14:52:45.411"/>
</kw>
<status status="PASS" starttime="20250714 14:52:45.392" endtime="20250714 14:52:45.411"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250714 14:52:45.391" endtime="20250714 14:52:45.411"/>
</test>
<test id="s1-t14" name="Check Recon Namespace Volume Quota Usage" line="142">
<kw name="Wait For Summary">
<arg>${QUOTA_USAGE_URL}?path=/${VOLUME}</arg>
<arg>\"used\"</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250714 14:52:45.416" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/quota?path=/vol-hmgya 2&gt;&amp;1'.</msg>
<msg timestamp="20250714 14:52:45.427" level="INFO">${rc} = 0</msg>
<msg timestamp="20250714 14:52:45.427" level="INFO">${output} = {"allowed":-1,"used":10989,"status":"OK"}</msg>
<status status="PASS" starttime="20250714 14:52:45.414" endtime="20250714 14:52:45.427"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250714 14:52:45.428" level="INFO">{"allowed":-1,"used":10989,"status":"OK"}</msg>
<status status="PASS" starttime="20250714 14:52:45.427" endtime="20250714 14:52:45.428"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250714 14:52:45.428" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250714 14:52:45.428" endtime="20250714 14:52:45.428"/>
</kw>
<status status="PASS" starttime="20250714 14:52:45.414" endtime="20250714 14:52:45.428"/>
</kw>
<msg timestamp="20250714 14:52:45.428" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250714 14:52:45.413" endtime="20250714 14:52:45.428"/>
</kw>
<msg timestamp="20250714 14:52:45.429" level="INFO">${result} = {"allowed":-1,"used":10989,"status":"OK"}</msg>
<status status="PASS" starttime="20250714 14:52:45.413" endtime="20250714 14:52:45.429"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250714 14:52:45.429" endtime="20250714 14:52:45.429"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250714 14:52:45.429" endtime="20250714 14:52:45.429"/>
</kw>
<status status="PASS" starttime="20250714 14:52:45.413" endtime="20250714 14:52:45.429"/>
</kw>
<status status="PASS" starttime="20250714 14:52:45.413" endtime="20250714 14:52:45.429"/>
</kw>
<status status="PASS" starttime="20250714 14:52:45.412" endtime="20250714 14:52:45.429"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250714 14:52:45.412" endtime="20250714 14:52:45.430"/>
</test>
<test id="s1-t15" name="Check Recon Namespace Bucket Quota Usage" line="145">
<kw name="Wait For Summary">
<arg>${QUOTA_USAGE_URL}?path=/${VOLUME}/${BUCKET}</arg>
<arg>\"used\"</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250714 14:52:45.434" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/quota?path=/vol-hmgya/buc-ufuiz 2&gt;&amp;1'.</msg>
<msg timestamp="20250714 14:52:45.444" level="INFO">${rc} = 0</msg>
<msg timestamp="20250714 14:52:45.444" level="INFO">${output} = {"allowed":-1,"used":10989,"status":"OK"}</msg>
<status status="PASS" starttime="20250714 14:52:45.432" endtime="20250714 14:52:45.444"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250714 14:52:45.445" level="INFO">{"allowed":-1,"used":10989,"status":"OK"}</msg>
<status status="PASS" starttime="20250714 14:52:45.444" endtime="20250714 14:52:45.445"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250714 14:52:45.446" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250714 14:52:45.445" endtime="20250714 14:52:45.446"/>
</kw>
<status status="PASS" starttime="20250714 14:52:45.432" endtime="20250714 14:52:45.446"/>
</kw>
<msg timestamp="20250714 14:52:45.446" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250714 14:52:45.432" endtime="20250714 14:52:45.446"/>
</kw>
<msg timestamp="20250714 14:52:45.446" level="INFO">${result} = {"allowed":-1,"used":10989,"status":"OK"}</msg>
<status status="PASS" starttime="20250714 14:52:45.431" endtime="20250714 14:52:45.446"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250714 14:52:45.446" endtime="20250714 14:52:45.446"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250714 14:52:45.447" endtime="20250714 14:52:45.447"/>
</kw>
<status status="PASS" starttime="20250714 14:52:45.431" endtime="20250714 14:52:45.447"/>
</kw>
<status status="PASS" starttime="20250714 14:52:45.431" endtime="20250714 14:52:45.447"/>
</kw>
<status status="PASS" starttime="20250714 14:52:45.430" endtime="20250714 14:52:45.447"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250714 14:52:45.430" endtime="20250714 14:52:45.447"/>
</test>
<test id="s1-t16" name="Check Recon Namespace File Size Distribution Root" line="148">
<kw name="Wait For Summary">
<arg>${FILE_SIZE_DIST_URL}?path=/</arg>
<arg>\"dist\"</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250714 14:52:45.451" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250714 14:52:45.460" level="INFO">${rc} = 0</msg>
<msg timestamp="20250714 14:52:45.460" level="INFO">${output} = {"dist":[0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"status":"OK"}</msg>
<status status="PASS" starttime="20250714 14:52:45.449" endtime="20250714 14:52:45.460"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250714 14:52:45.461" level="INFO">{"dist":[0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"status":"OK"}</msg>
<status status="PASS" starttime="20250714 14:52:45.460" endtime="20250714 14:52:45.461"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250714 14:52:45.461" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250714 14:52:45.461" endtime="20250714 14:52:45.461"/>
</kw>
<status status="PASS" starttime="20250714 14:52:45.449" endtime="20250714 14:52:45.461"/>
</kw>
<msg timestamp="20250714 14:52:45.461" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250714 14:52:45.449" endtime="20250714 14:52:45.462"/>
</kw>
<msg timestamp="20250714 14:52:45.462" level="INFO">${result} = {"dist":[0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"status":"OK"}</msg>
<status status="PASS" starttime="20250714 14:52:45.449" endtime="20250714 14:52:45.462"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250714 14:52:45.462" endtime="20250714 14:52:45.462"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250714 14:52:45.462" endtime="20250714 14:52:45.462"/>
</kw>
<status status="PASS" starttime="20250714 14:52:45.449" endtime="20250714 14:52:45.462"/>
</kw>
<status status="PASS" starttime="20250714 14:52:45.448" endtime="20250714 14:52:45.462"/>
</kw>
<status status="PASS" starttime="20250714 14:52:45.448" endtime="20250714 14:52:45.462"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250714 14:52:45.447" endtime="20250714 14:52:45.463"/>
</test>
<doc>Smoke test for Recon Namespace Summary Endpoint for LEGACY buckets.</doc>
<status status="PASS" starttime="20250714 14:51:56.231" endtime="20250714 14:52:45.464"/>
</suite>
<statistics>
<total>
<stat pass="16" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="16" fail="0" skip="0" id="s1" name="ozone-legacy-bucket">ozone-legacy-bucket</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
