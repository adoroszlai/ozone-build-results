<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.1.1 (Python 3.9.21 on linux)" generated="20250702 18:54:12.064" rpa="false" schemaversion="4">
<suite id="s1" name="ozonesecure">
<suite id="s1-s1" name="Kinit" source="/opt/hadoop/smoketest/kinit.robot">
<test id="s1-s1-t1" name="Kinit" line="27">
<kw name="Kinit test user" library="commonlib">
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
<kw name="Get Security Enabled From Config" library="commonlib">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' != ''</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20250702 18:33:22.929" endtime="20250702 18:33:22.929"/>
</kw>
<kw name="Execute" library="os">
<var>${value}</var>
<arg>ozone getconf confKey ozone.security.enabled</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:33:22.932" level="INFO">Running command 'ozone getconf confKey ozone.security.enabled 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:33:23.863" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:33:23.863" level="INFO">${output} = true</msg>
<status status="PASS" starttime="20250702 18:33:22.930" endtime="20250702 18:33:23.863"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:33:23.864" level="INFO">true</msg>
<status status="PASS" starttime="20250702 18:33:23.864" endtime="20250702 18:33:23.864"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:33:23.865" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:33:23.865" endtime="20250702 18:33:23.865"/>
</kw>
<status status="PASS" starttime="20250702 18:33:22.929" endtime="20250702 18:33:23.865"/>
</kw>
<msg timestamp="20250702 18:33:23.865" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:33:22.929" endtime="20250702 18:33:23.865"/>
</kw>
<msg timestamp="20250702 18:33:23.865" level="INFO">${value} = true</msg>
<status status="PASS" starttime="20250702 18:33:22.929" endtime="20250702 18:33:23.865"/>
</kw>
<if>
<branch type="IF" condition="'${value}' != 'true' and '${value}' != 'false'">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>false</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20250702 18:33:23.866" endtime="20250702 18:33:23.866"/>
</kw>
<status status="NOT RUN" starttime="20250702 18:33:23.865" endtime="20250702 18:33:23.866"/>
</branch>
<status status="PASS" starttime="20250702 18:33:23.865" endtime="20250702 18:33:23.866"/>
</if>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${SECURITY_ENABLED}</arg>
<arg>${value}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250702 18:33:23.866" level="INFO">${SECURITY_ENABLED} = true</msg>
<status status="PASS" starttime="20250702 18:33:23.866" endtime="20250702 18:33:23.866"/>
</kw>
<status status="PASS" starttime="20250702 18:33:22.928" endtime="20250702 18:33:23.866"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250702 18:33:23.866" endtime="20250702 18:33:23.867"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:33:23.870" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:33:23.873" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:33:23.873" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250702 18:33:23.868" endtime="20250702 18:33:23.873"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:33:23.874" level="INFO">scm</msg>
<status status="PASS" starttime="20250702 18:33:23.873" endtime="20250702 18:33:23.874"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:33:23.874" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:33:23.874" endtime="20250702 18:33:23.874"/>
</kw>
<status status="PASS" starttime="20250702 18:33:23.867" endtime="20250702 18:33:23.874"/>
</kw>
<msg timestamp="20250702 18:33:23.874" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:33:23.867" endtime="20250702 18:33:23.875"/>
</kw>
<msg timestamp="20250702 18:33:23.875" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250702 18:33:23.867" endtime="20250702 18:33:23.875"/>
</kw>
<msg timestamp="20250702 18:33:23.875" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250702 18:33:23.867" endtime="20250702 18:33:23.875"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250702 18:33:23.875" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250702 18:33:23.875" endtime="20250702 18:33:23.875"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:33:23.878" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:33:23.904" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:33:23.904" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:33:23.876" endtime="20250702 18:33:23.904"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:33:23.905" level="INFO"/>
<status status="PASS" starttime="20250702 18:33:23.905" endtime="20250702 18:33:23.905"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:33:23.905" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:33:23.905" endtime="20250702 18:33:23.906"/>
</kw>
<status status="PASS" starttime="20250702 18:33:23.876" endtime="20250702 18:33:23.906"/>
</kw>
<msg timestamp="20250702 18:33:23.906" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:33:23.876" endtime="20250702 18:33:23.906"/>
</kw>
<status status="PASS" starttime="20250702 18:33:23.876" endtime="20250702 18:33:23.906"/>
</kw>
<status status="PASS" starttime="20250702 18:33:23.875" endtime="20250702 18:33:23.906"/>
</kw>
<status status="PASS" starttime="20250702 18:33:22.928" endtime="20250702 18:33:23.906"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20250702 18:33:22.928" endtime="20250702 18:33:23.906"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" starttime="20250702 18:33:22.894" endtime="20250702 18:33:23.907"/>
</suite>
<suite id="s1-s2" name="Basic" source="/opt/hadoop/smoketest/basic">
<suite id="s1-s2-s1" name="Basic" source="/opt/hadoop/smoketest/basic/basic.robot">
<kw name="Get Security Enabled From Config" library="commonlib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' != ''</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20250702 18:33:24.472" endtime="20250702 18:33:24.473"/>
</kw>
<kw name="Execute" library="os">
<var>${value}</var>
<arg>ozone getconf confKey ozone.security.enabled</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:33:24.475" level="INFO">Running command 'ozone getconf confKey ozone.security.enabled 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:33:25.340" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:33:25.340" level="INFO">${output} = true</msg>
<status status="PASS" starttime="20250702 18:33:24.473" endtime="20250702 18:33:25.340"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:33:25.341" level="INFO">true</msg>
<status status="PASS" starttime="20250702 18:33:25.341" endtime="20250702 18:33:25.341"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:33:25.342" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:33:25.341" endtime="20250702 18:33:25.342"/>
</kw>
<status status="PASS" starttime="20250702 18:33:24.473" endtime="20250702 18:33:25.342"/>
</kw>
<msg timestamp="20250702 18:33:25.342" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:33:24.473" endtime="20250702 18:33:25.342"/>
</kw>
<msg timestamp="20250702 18:33:25.342" level="INFO">${value} = true</msg>
<status status="PASS" starttime="20250702 18:33:24.473" endtime="20250702 18:33:25.342"/>
</kw>
<if>
<branch type="IF" condition="'${value}' != 'true' and '${value}' != 'false'">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>false</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20250702 18:33:25.342" endtime="20250702 18:33:25.343"/>
</kw>
<status status="NOT RUN" starttime="20250702 18:33:25.342" endtime="20250702 18:33:25.343"/>
</branch>
<status status="PASS" starttime="20250702 18:33:25.342" endtime="20250702 18:33:25.343"/>
</if>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${SECURITY_ENABLED}</arg>
<arg>${value}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250702 18:33:25.343" level="INFO">${SECURITY_ENABLED} = true</msg>
<status status="PASS" starttime="20250702 18:33:25.343" endtime="20250702 18:33:25.343"/>
</kw>
<status status="PASS" starttime="20250702 18:33:24.472" endtime="20250702 18:33:25.343"/>
</kw>
<test id="s1-s2-s1-t1" name="Check webui static resources" line="30">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250702 18:33:25.344" endtime="20250702 18:33:25.345"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${principal}</var>
<arg>HTTP</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:33:25.348" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:33:25.351" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:33:25.351" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250702 18:33:25.346" endtime="20250702 18:33:25.351"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:33:25.352" level="INFO">scm</msg>
<status status="PASS" starttime="20250702 18:33:25.351" endtime="20250702 18:33:25.352"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:33:25.352" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:33:25.352" endtime="20250702 18:33:25.352"/>
</kw>
<status status="PASS" starttime="20250702 18:33:25.345" endtime="20250702 18:33:25.352"/>
</kw>
<msg timestamp="20250702 18:33:25.352" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:33:25.345" endtime="20250702 18:33:25.353"/>
</kw>
<msg timestamp="20250702 18:33:25.353" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250702 18:33:25.345" endtime="20250702 18:33:25.353"/>
</kw>
<msg timestamp="20250702 18:33:25.353" level="INFO">${principal} = HTTP/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250702 18:33:25.345" endtime="20250702 18:33:25.353"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/HTTP.keytab ${principal}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/HTTP.keytab ${principal}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:33:25.356" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/HTTP.keytab HTTP/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:33:25.371" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:33:25.371" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:33:25.354" endtime="20250702 18:33:25.371"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:33:25.371" level="INFO"/>
<status status="PASS" starttime="20250702 18:33:25.371" endtime="20250702 18:33:25.372"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:33:25.372" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:33:25.372" endtime="20250702 18:33:25.372"/>
</kw>
<status status="PASS" starttime="20250702 18:33:25.354" endtime="20250702 18:33:25.372"/>
</kw>
<msg timestamp="20250702 18:33:25.372" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:33:25.354" endtime="20250702 18:33:25.372"/>
</kw>
<status status="PASS" starttime="20250702 18:33:25.353" endtime="20250702 18:33:25.372"/>
</kw>
<status status="PASS" starttime="20250702 18:33:25.353" endtime="20250702 18:33:25.372"/>
</kw>
<status status="PASS" starttime="20250702 18:33:25.344" endtime="20250702 18:33:25.372"/>
</kw>
<status status="PASS" starttime="20250702 18:33:25.344" endtime="20250702 18:33:25.372"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -s -I http://${SCM}:9876/static/bootstrap-3.4.1/js/bootstrap.min.js</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:33:25.375" level="INFO">Running command 'curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:33:25.429" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:33:25.429" level="INFO">${output} = HTTP/1.1 200 OK
Date: Wed, 02 Jul 2025 18:33:25 GMT
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
X-FRAME-OPTIONS: SAMEORIGIN
WWW-Authenticate: Negotiate oYGFMIGCoAMKAQChCwYJKoZIhvcS...</msg>
<status status="PASS" starttime="20250702 18:33:25.373" endtime="20250702 18:33:25.429"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:33:25.430" level="INFO">HTTP/1.1 200 OK
Date: Wed, 02 Jul 2025 18:33:25 GMT
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
X-FRAME-OPTIONS: SAMEORIGIN
WWW-Authenticate: Negotiate oYGFMIGCoAMKAQChCwYJKoZIhvcSAQICom4EbGBqBgkqhkiG9xIBAgICAG9bMFmgAwIBBaEDAgEPok0wS6ADAgESokQEQh28VdeAoXaGeiClhjGdpzlVDEuUeqST8kz9E4XjyoFTaPzvjA7i415dQbSzrZt22ZG26TnKF1HWblKeUmqEuKb2fA==
Set-Cookie: hadoop.auth="u=HTTP&amp;p=HTTP/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1751517205421&amp;s=DIvaim1GRD0nMZv+vzvl6rA9CKFJ4zai3BldxYAQ47I="; Path=/; HttpOnly
Last-Modified: Wed, 12 Mar 2025 22:12:52 GMT
Content-Type: application/javascript
Accept-Ranges: bytes
Content-Length: 39680
</msg>
<status status="PASS" starttime="20250702 18:33:25.429" endtime="20250702 18:33:25.430"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:33:25.430" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:33:25.430" endtime="20250702 18:33:25.430"/>
</kw>
<status status="PASS" starttime="20250702 18:33:25.373" endtime="20250702 18:33:25.430"/>
</kw>
<msg timestamp="20250702 18:33:25.430" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:33:25.373" endtime="20250702 18:33:25.431"/>
</kw>
<msg timestamp="20250702 18:33:25.431" level="INFO">${result} = HTTP/1.1 200 OK
Date: Wed, 02 Jul 2025 18:33:25 GMT
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
X-FRAME-OPTIONS: SAMEORIGIN
WWW-Authenticate: Negotiate oYGFMIGCoAMKAQChCwYJKoZIhvcS...</msg>
<status status="PASS" starttime="20250702 18:33:25.373" endtime="20250702 18:33:25.431"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250702 18:33:25.431" endtime="20250702 18:33:25.431"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250702 18:33:25.343" endtime="20250702 18:33:25.431"/>
</test>
<test id="s1-s2-s1-t2" name="Basic Freon smoketest" line="35">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get Security Enabled From Config" library="commonlib">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' != ''</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20250702 18:33:25.434" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:33:25.434" endtime="20250702 18:33:25.434"/>
</kw>
<kw name="Execute" library="os">
<var>${value}</var>
<arg>ozone getconf confKey ozone.security.enabled</arg>
<status status="NOT RUN" starttime="20250702 18:33:25.434" endtime="20250702 18:33:25.434"/>
</kw>
<if>
<branch type="IF" condition="'${value}' != 'true' and '${value}' != 'false'">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>false</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20250702 18:33:25.434" endtime="20250702 18:33:25.434"/>
</kw>
<status status="NOT RUN" starttime="20250702 18:33:25.434" endtime="20250702 18:33:25.434"/>
</branch>
<status status="NOT RUN" starttime="20250702 18:33:25.434" endtime="20250702 18:33:25.434"/>
</if>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${SECURITY_ENABLED}</arg>
<arg>${value}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20250702 18:33:25.435" endtime="20250702 18:33:25.435"/>
</kw>
<status status="PASS" starttime="20250702 18:33:25.433" endtime="20250702 18:33:25.435"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250702 18:33:25.435" endtime="20250702 18:33:25.435"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:33:25.440" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:33:25.444" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:33:25.444" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250702 18:33:25.437" endtime="20250702 18:33:25.444"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:33:25.445" level="INFO">scm</msg>
<status status="PASS" starttime="20250702 18:33:25.444" endtime="20250702 18:33:25.445"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:33:25.445" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:33:25.445" endtime="20250702 18:33:25.445"/>
</kw>
<status status="PASS" starttime="20250702 18:33:25.436" endtime="20250702 18:33:25.446"/>
</kw>
<msg timestamp="20250702 18:33:25.446" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:33:25.436" endtime="20250702 18:33:25.446"/>
</kw>
<msg timestamp="20250702 18:33:25.446" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250702 18:33:25.436" endtime="20250702 18:33:25.446"/>
</kw>
<msg timestamp="20250702 18:33:25.446" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250702 18:33:25.435" endtime="20250702 18:33:25.446"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250702 18:33:25.446" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250702 18:33:25.446" endtime="20250702 18:33:25.446"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:33:25.450" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:33:25.483" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:33:25.483" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:33:25.447" endtime="20250702 18:33:25.483"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:33:25.483" level="INFO"/>
<status status="PASS" starttime="20250702 18:33:25.483" endtime="20250702 18:33:25.483"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:33:25.484" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:33:25.484" endtime="20250702 18:33:25.484"/>
</kw>
<status status="PASS" starttime="20250702 18:33:25.447" endtime="20250702 18:33:25.484"/>
</kw>
<msg timestamp="20250702 18:33:25.484" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:33:25.447" endtime="20250702 18:33:25.484"/>
</kw>
<status status="PASS" starttime="20250702 18:33:25.447" endtime="20250702 18:33:25.484"/>
</kw>
<status status="PASS" starttime="20250702 18:33:25.446" endtime="20250702 18:33:25.484"/>
</kw>
<status status="PASS" starttime="20250702 18:33:25.433" endtime="20250702 18:33:25.484"/>
</kw>
<status status="PASS" starttime="20250702 18:33:25.432" endtime="20250702 18:33:25.484"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>10</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250702 18:33:25.485" level="INFO">${random} = qikWnwJPC3</msg>
<status status="PASS" starttime="20250702 18:33:25.484" endtime="20250702 18:33:25.485"/>
</kw>
<kw name="Freon OCKG" library="freon">
<arg>prefix=${random}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:33:25.489" level="INFO">Running command 'ozone freon ockg  -t 1 -n1 -p qikWnwJPC3  2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:33:31.596" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:33:31.596" level="INFO">${output} = 2025-07-02 18:33:26,794 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-07-02 18:33:26,961 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250702 18:33:25.487" endtime="20250702 18:33:31.596"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:33:31.597" level="INFO">2025-07-02 18:33:26,794 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-07-02 18:33:26,961 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2025-07-02 18:33:26,962 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2025-07-02 18:33:27,120 [main] INFO freon.BaseFreonGenerator: Executing test with prefix qikWnwJPC3 and number-of-tests 1
2025-07-02 18:33:27,173 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2025-07-02 18:33:28,174 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2025-07-02 18:33:28,788 [main] INFO rpc.RpcClient: Creating Volume: vol1, with testuser as owner and space quota set to -1 bytes, counts quota set to -1
2025-07-02 18:33:28,893 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with server-side default bucket layout, testuser as owner, Versioning false, Storage Type set to DISK and Encryption set to false, Replication Type set to server-side default replication type, Namespace Quota set to -1, Space Quota set to -1 
2025-07-02 18:33:29,138 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2025-07-02 18:33:29,175 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2025-07-02 18:33:29,202 [pool-2-thread-1] INFO netty.NettyConfigKeys$DataStream: setTlsConf GrpcTlsConfig0-
2025-07-02 18:33:30,180 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2025-07-02 18:33:31,180 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2025-07-02 18:33:31,207 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1, min=1849.309329, max=1849.309329, mean=1849.309329, stddev=0.0, median=1849.309329, p75=1849.309329, p95=1849.309329, p98=1849.309329, p99=1849.309329, p999=1849.309329, mean_rate=0.4371687416429976, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2025-07-02 18:33:31,207 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 4
2025-07-02 18:33:31,207 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2025-07-02 18:33:31,207 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20250702 18:33:31.596" endtime="20250702 18:33:31.597"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:33:31.597" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:33:31.597" endtime="20250702 18:33:31.597"/>
</kw>
<status status="PASS" starttime="20250702 18:33:25.486" endtime="20250702 18:33:31.598"/>
</kw>
<msg timestamp="20250702 18:33:31.598" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:33:25.486" endtime="20250702 18:33:31.598"/>
</kw>
<msg timestamp="20250702 18:33:31.598" level="INFO">${result} = 2025-07-02 18:33:26,794 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-07-02 18:33:26,961 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250702 18:33:25.486" endtime="20250702 18:33:31.598"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250702 18:33:31.598" endtime="20250702 18:33:31.598"/>
</kw>
<status status="PASS" starttime="20250702 18:33:25.485" endtime="20250702 18:33:31.598"/>
</kw>
<kw name="Freon OCKV" library="freon">
<arg>prefix=${random}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockv ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:33:31.603" level="INFO">Running command 'ozone freon ockv  -t 1 -n1 -p qikWnwJPC3  2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:33:37.158" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:33:37.158" level="INFO">${output} = 2025-07-02 18:33:33,047 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-07-02 18:33:33,312 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250702 18:33:31.600" endtime="20250702 18:33:37.158"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:33:37.159" level="INFO">2025-07-02 18:33:33,047 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-07-02 18:33:33,312 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2025-07-02 18:33:33,312 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2025-07-02 18:33:33,644 [main] INFO freon.BaseFreonGenerator: Executing test with prefix qikWnwJPC3 and number-of-tests 1
2025-07-02 18:33:33,720 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2025-07-02 18:33:34,721 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2025-07-02 18:33:35,631 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2025-07-02 18:33:35,721 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2025-07-02 18:33:36,722 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2025-07-02 18:33:36,762 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-validate, count=1, min=31.298084, max=31.298084, mean=31.298084, stddev=0.0, median=31.298084, p75=31.298084, p95=31.298084, p98=31.298084, p99=31.298084, p999=31.298084, mean_rate=7.564762880616317, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2025-07-02 18:33:36,762 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2025-07-02 18:33:36,762 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2025-07-02 18:33:36,762 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20250702 18:33:37.158" endtime="20250702 18:33:37.159"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:33:37.159" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:33:37.159" endtime="20250702 18:33:37.160"/>
</kw>
<status status="PASS" starttime="20250702 18:33:31.600" endtime="20250702 18:33:37.160"/>
</kw>
<msg timestamp="20250702 18:33:37.160" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:33:31.600" endtime="20250702 18:33:37.160"/>
</kw>
<msg timestamp="20250702 18:33:37.160" level="INFO">${result} = 2025-07-02 18:33:33,047 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-07-02 18:33:33,312 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250702 18:33:31.599" endtime="20250702 18:33:37.160"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250702 18:33:37.160" endtime="20250702 18:33:37.160"/>
</kw>
<status status="PASS" starttime="20250702 18:33:31.599" endtime="20250702 18:33:37.160"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250702 18:33:25.432" endtime="20250702 18:33:37.161"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20250702 18:33:24.448" endtime="20250702 18:33:37.161"/>
</suite>
<suite id="s1-s2-s2" name="Getconf" source="/opt/hadoop/smoketest/basic/getconf.robot">
<test id="s1-s2-s2-t1" name="Get OM" line="22">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf ozonemanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:33:37.169" level="INFO">Running command 'ozone getconf ozonemanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:33:38.204" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:33:38.204" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20250702 18:33:37.166" endtime="20250702 18:33:38.204"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:33:38.205" level="INFO">om</msg>
<status status="PASS" starttime="20250702 18:33:38.205" endtime="20250702 18:33:38.205"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:33:38.206" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:33:38.205" endtime="20250702 18:33:38.206"/>
</kw>
<status status="PASS" starttime="20250702 18:33:37.166" endtime="20250702 18:33:38.206"/>
</kw>
<msg timestamp="20250702 18:33:38.206" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:33:37.166" endtime="20250702 18:33:38.206"/>
</kw>
<msg timestamp="20250702 18:33:38.206" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20250702 18:33:37.166" endtime="20250702 18:33:38.206"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250702 18:33:38.206" endtime="20250702 18:33:38.207"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf -ozonemanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:33:38.210" level="INFO">Running command 'ozone getconf -ozonemanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:33:39.227" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:33:39.227" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20250702 18:33:38.207" endtime="20250702 18:33:39.227"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:33:39.228" level="INFO">om</msg>
<status status="PASS" starttime="20250702 18:33:39.227" endtime="20250702 18:33:39.228"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:33:39.228" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:33:39.228" endtime="20250702 18:33:39.228"/>
</kw>
<status status="PASS" starttime="20250702 18:33:38.207" endtime="20250702 18:33:39.228"/>
</kw>
<msg timestamp="20250702 18:33:39.228" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:33:38.207" endtime="20250702 18:33:39.228"/>
</kw>
<msg timestamp="20250702 18:33:39.229" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20250702 18:33:38.207" endtime="20250702 18:33:39.229"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250702 18:33:39.229" endtime="20250702 18:33:39.229"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250702 18:33:37.165" endtime="20250702 18:33:39.229"/>
</test>
<test id="s1-s2-s2-t2" name="Get SCM" line="28">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf storagecontainermanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:33:39.233" level="INFO">Running command 'ozone getconf storagecontainermanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:33:40.201" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:33:40.201" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250702 18:33:39.231" endtime="20250702 18:33:40.201"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:33:40.202" level="INFO">scm</msg>
<status status="PASS" starttime="20250702 18:33:40.202" endtime="20250702 18:33:40.202"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:33:40.203" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:33:40.202" endtime="20250702 18:33:40.203"/>
</kw>
<status status="PASS" starttime="20250702 18:33:39.231" endtime="20250702 18:33:40.203"/>
</kw>
<msg timestamp="20250702 18:33:40.203" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:33:39.230" endtime="20250702 18:33:40.203"/>
</kw>
<msg timestamp="20250702 18:33:40.203" level="INFO">${result} = scm</msg>
<status status="PASS" starttime="20250702 18:33:39.230" endtime="20250702 18:33:40.203"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>scm</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250702 18:33:40.203" endtime="20250702 18:33:40.203"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf -storagecontainermanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:33:40.207" level="INFO">Running command 'ozone getconf -storagecontainermanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:33:41.233" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:33:41.233" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250702 18:33:40.205" endtime="20250702 18:33:41.233"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:33:41.234" level="INFO">scm</msg>
<status status="PASS" starttime="20250702 18:33:41.234" endtime="20250702 18:33:41.234"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:33:41.235" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:33:41.234" endtime="20250702 18:33:41.235"/>
</kw>
<status status="PASS" starttime="20250702 18:33:40.205" endtime="20250702 18:33:41.235"/>
</kw>
<msg timestamp="20250702 18:33:41.235" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:33:40.204" endtime="20250702 18:33:41.235"/>
</kw>
<msg timestamp="20250702 18:33:41.235" level="INFO">${result} = scm</msg>
<status status="PASS" starttime="20250702 18:33:40.203" endtime="20250702 18:33:41.235"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>scm</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250702 18:33:41.235" endtime="20250702 18:33:41.236"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250702 18:33:39.230" endtime="20250702 18:33:41.236"/>
</test>
<test id="s1-s2-s2-t3" name="Get existing config key" line="34">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf confKey ozone.om.address</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:33:41.240" level="INFO">Running command 'ozone getconf confKey ozone.om.address 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:33:42.113" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:33:42.113" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20250702 18:33:41.237" endtime="20250702 18:33:42.113"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:33:42.114" level="INFO">om</msg>
<status status="PASS" starttime="20250702 18:33:42.114" endtime="20250702 18:33:42.114"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:33:42.115" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:33:42.114" endtime="20250702 18:33:42.115"/>
</kw>
<status status="PASS" starttime="20250702 18:33:41.237" endtime="20250702 18:33:42.115"/>
</kw>
<msg timestamp="20250702 18:33:42.115" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:33:41.237" endtime="20250702 18:33:42.115"/>
</kw>
<msg timestamp="20250702 18:33:42.115" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20250702 18:33:41.237" endtime="20250702 18:33:42.115"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250702 18:33:42.115" endtime="20250702 18:33:42.115"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>is missing</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250702 18:33:42.116" endtime="20250702 18:33:42.116"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf -confKey ozone.om.address</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:33:42.119" level="INFO">Running command 'ozone getconf -confKey ozone.om.address 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:33:43.029" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:33:43.029" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20250702 18:33:42.117" endtime="20250702 18:33:43.029"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:33:43.030" level="INFO">om</msg>
<status status="PASS" starttime="20250702 18:33:43.029" endtime="20250702 18:33:43.030"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:33:43.030" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:33:43.030" endtime="20250702 18:33:43.030"/>
</kw>
<status status="PASS" starttime="20250702 18:33:42.116" endtime="20250702 18:33:43.030"/>
</kw>
<msg timestamp="20250702 18:33:43.030" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:33:42.116" endtime="20250702 18:33:43.030"/>
</kw>
<msg timestamp="20250702 18:33:43.031" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20250702 18:33:42.116" endtime="20250702 18:33:43.031"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250702 18:33:43.031" endtime="20250702 18:33:43.031"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>is missing</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250702 18:33:43.031" endtime="20250702 18:33:43.031"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250702 18:33:41.236" endtime="20250702 18:33:43.031"/>
</test>
<test id="s1-s2-s2-t4" name="Get undefined config key" line="42">
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone getconf confKey no-such-config-key</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:33:43.035" level="INFO">Running command 'ozone getconf confKey no-such-config-key 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:33:43.935" level="INFO">${rc} = 255</msg>
<msg timestamp="20250702 18:33:43.935" level="INFO">${output} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20250702 18:33:43.033" endtime="20250702 18:33:43.936"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:33:43.937" level="INFO">Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20250702 18:33:43.936" endtime="20250702 18:33:43.937"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:33:43.937" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:33:43.937" endtime="20250702 18:33:43.937"/>
</kw>
<msg timestamp="20250702 18:33:43.937" level="INFO">${result} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20250702 18:33:43.032" endtime="20250702 18:33:43.937"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Configuration no-such-config-key is missing</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250702 18:33:43.937" endtime="20250702 18:33:43.938"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone getconf -confKey no-such-config-key</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:33:43.940" level="INFO">Running command 'ozone getconf -confKey no-such-config-key 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:33:44.839" level="INFO">${rc} = 255</msg>
<msg timestamp="20250702 18:33:44.839" level="INFO">${output} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20250702 18:33:43.938" endtime="20250702 18:33:44.839"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:33:44.840" level="INFO">Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20250702 18:33:44.840" endtime="20250702 18:33:44.840"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:33:44.841" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:33:44.840" endtime="20250702 18:33:44.841"/>
</kw>
<msg timestamp="20250702 18:33:44.841" level="INFO">${result} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20250702 18:33:43.938" endtime="20250702 18:33:44.841"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Configuration no-such-config-key is missing</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250702 18:33:44.841" endtime="20250702 18:33:44.841"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250702 18:33:43.032" endtime="20250702 18:33:44.841"/>
</test>
<doc>Test 'ozone getconf' command</doc>
<status status="PASS" starttime="20250702 18:33:37.162" endtime="20250702 18:33:44.842"/>
</suite>
<suite id="s1-s2-s3" name="Links" source="/opt/hadoop/smoketest/basic/links.robot">
<kw name="Create volumes" type="SETUP">
<kw name="Get Security Enabled From Config" library="commonlib">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' != ''</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20250702 18:33:44.856" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:33:44.855" endtime="20250702 18:33:44.856"/>
</kw>
<kw name="Execute" library="os">
<var>${value}</var>
<arg>ozone getconf confKey ozone.security.enabled</arg>
<status status="NOT RUN" starttime="20250702 18:33:44.856" endtime="20250702 18:33:44.856"/>
</kw>
<if>
<branch type="IF" condition="'${value}' != 'true' and '${value}' != 'false'">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>false</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20250702 18:33:44.856" endtime="20250702 18:33:44.856"/>
</kw>
<status status="NOT RUN" starttime="20250702 18:33:44.856" endtime="20250702 18:33:44.856"/>
</branch>
<status status="NOT RUN" starttime="20250702 18:33:44.856" endtime="20250702 18:33:44.856"/>
</if>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${SECURITY_ENABLED}</arg>
<arg>${value}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20250702 18:33:44.856" endtime="20250702 18:33:44.856"/>
</kw>
<status status="PASS" starttime="20250702 18:33:44.855" endtime="20250702 18:33:44.856"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250702 18:33:44.857" level="INFO">${random} = 56851</msg>
<status status="PASS" starttime="20250702 18:33:44.856" endtime="20250702 18:33:44.857"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${source}</arg>
<arg>${random}-source</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250702 18:33:44.857" level="INFO">${source} = 56851-source</msg>
<status status="PASS" starttime="20250702 18:33:44.857" endtime="20250702 18:33:44.858"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${target}</arg>
<arg>${random}-target</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250702 18:33:44.858" level="INFO">${target} = 56851-target</msg>
<status status="PASS" starttime="20250702 18:33:44.858" endtime="20250702 18:33:44.858"/>
</kw>
<kw name="Ozone Shell Batch" library="shell">
<arg>volume create ${source}</arg>
<arg>volume create ${target}</arg>
<kw name="Catenate" library="BuiltIn">
<var>${cmd}</var>
<arg>SEPARATOR=' --execute '</arg>
<arg>@{commands}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20250702 18:33:44.859" level="INFO">${cmd} = volume create 56851-source' --execute 'volume create 56851-target</msg>
<status status="PASS" starttime="20250702 18:33:44.859" endtime="20250702 18:33:44.859"/>
</kw>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>ozone sh --execute '${cmd}'</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>ozone sh --execute '${cmd}'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:33:44.861" level="INFO">Running command 'ozone sh --execute 'volume create 56851-source' --execute 'volume create 56851-target' 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:33:48.070" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:33:48.070" level="INFO">${output} = volume create 56851-source
volume create 56851-target</msg>
<status status="PASS" starttime="20250702 18:33:44.859" endtime="20250702 18:33:48.070"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:33:48.071" level="INFO">volume create 56851-source
volume create 56851-target</msg>
<status status="PASS" starttime="20250702 18:33:48.070" endtime="20250702 18:33:48.071"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:33:48.071" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:33:48.071" endtime="20250702 18:33:48.071"/>
</kw>
<status status="PASS" starttime="20250702 18:33:44.859" endtime="20250702 18:33:48.071"/>
</kw>
<msg timestamp="20250702 18:33:48.071" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:33:44.859" endtime="20250702 18:33:48.072"/>
</kw>
<status status="PASS" starttime="20250702 18:33:44.858" endtime="20250702 18:33:48.072"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup ACL tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup ACL tests">
<kw name="Ozone Shell Batch" library="shell">
<arg>bucket create ${source}/readable-bucket</arg>
<arg>key put ${source}/readable-bucket/key-in-readable-bucket /etc/passwd</arg>
<arg>bucket create ${source}/unreadable-bucket</arg>
<arg>bucket link ${source}/unreadable-bucket ${target}/link-to-unreadable-bucket</arg>
<arg>volume addacl --acl user:testuser2:r[DEFAULT] ${target}</arg>
<arg>bucket link ${source}/readable-bucket ${target}/readable-link</arg>
<arg>bucket link ${source}/readable-bucket ${target}/readable-link2</arg>
<arg>volume addacl --acl user:testuser2:rl ${source}</arg>
<arg>bucket addacl --acl user:testuser2:rl ${source}/readable-bucket</arg>
<kw name="Catenate" library="BuiltIn">
<var>${cmd}</var>
<arg>SEPARATOR=' --execute '</arg>
<arg>@{commands}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20250702 18:33:48.073" level="INFO">${cmd} = bucket create 56851-source/readable-bucket' --execute 'key put 56851-source/readable-bucket/key-in-readable-bucket /etc/passwd' --execute 'bucket create 56851-source/unreadable-bucket' --execute 'buck...</msg>
<status status="PASS" starttime="20250702 18:33:48.073" endtime="20250702 18:33:48.073"/>
</kw>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>ozone sh --execute '${cmd}'</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>ozone sh --execute '${cmd}'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:33:48.076" level="INFO">Running command 'ozone sh --execute 'bucket create 56851-source/readable-bucket' --execute 'key put 56851-source/readable-bucket/key-in-readable-bucket /etc/passwd' --execute 'bucket create 56851-source/unreadable-bucket' --execute 'bucket link 56851-source/unreadable-bucket 56851-target/link-to-unreadable-bucket' --execute 'volume addacl --acl user:testuser2:r[DEFAULT] 56851-target' --execute 'bucket link 56851-source/readable-bucket 56851-target/readable-link' --execute 'bucket link 56851-source/readable-bucket 56851-target/readable-link2' --execute 'volume addacl --acl user:testuser2:rl 56851-source' --execute 'bucket addacl --acl user:testuser2:rl 56851-source/readable-bucket' 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:33:53.169" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:33:53.169" level="INFO">${output} = bucket create 56851-source/readable-bucket
key put 56851-source/readable-bucket/key-in-readable-bucket /etc/passwd
bucket create 56851-source/unreadable-bucket
bucket link 56851-source/unreadable-buck...</msg>
<status status="PASS" starttime="20250702 18:33:48.074" endtime="20250702 18:33:53.169"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:33:53.170" level="INFO">bucket create 56851-source/readable-bucket
key put 56851-source/readable-bucket/key-in-readable-bucket /etc/passwd
bucket create 56851-source/unreadable-bucket
bucket link 56851-source/unreadable-bucket 56851-target/link-to-unreadable-bucket
volume addacl --acl user:testuser2:r[DEFAULT] 56851-target
ACL user:testuser2:r[DEFAULT] added successfully.
bucket link 56851-source/readable-bucket 56851-target/readable-link
bucket link 56851-source/readable-bucket 56851-target/readable-link2
volume addacl --acl user:testuser2:rl 56851-source
ACL user:testuser2:rl[ACCESS] added successfully.
bucket addacl --acl user:testuser2:rl 56851-source/readable-bucket
ACL user:testuser2:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20250702 18:33:53.169" endtime="20250702 18:33:53.170"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:33:53.170" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:33:53.170" endtime="20250702 18:33:53.170"/>
</kw>
<status status="PASS" starttime="20250702 18:33:48.074" endtime="20250702 18:33:53.170"/>
</kw>
<msg timestamp="20250702 18:33:53.170" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:33:48.073" endtime="20250702 18:33:53.170"/>
</kw>
<status status="PASS" starttime="20250702 18:33:48.072" endtime="20250702 18:33:53.170"/>
</kw>
<status status="PASS" starttime="20250702 18:33:48.072" endtime="20250702 18:33:53.170"/>
</kw>
<status status="PASS" starttime="20250702 18:33:48.072" endtime="20250702 18:33:53.170"/>
</kw>
<status status="PASS" starttime="20250702 18:33:44.855" endtime="20250702 18:33:53.170"/>
</kw>
<test id="s1-s2-s3-t1" name="Link to non-existent bucket" line="92">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get Security Enabled From Config" library="commonlib">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' != ''</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20250702 18:33:53.172" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:33:53.172" endtime="20250702 18:33:53.172"/>
</kw>
<kw name="Execute" library="os">
<var>${value}</var>
<arg>ozone getconf confKey ozone.security.enabled</arg>
<status status="NOT RUN" starttime="20250702 18:33:53.172" endtime="20250702 18:33:53.172"/>
</kw>
<if>
<branch type="IF" condition="'${value}' != 'true' and '${value}' != 'false'">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>false</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20250702 18:33:53.173" endtime="20250702 18:33:53.173"/>
</kw>
<status status="NOT RUN" starttime="20250702 18:33:53.173" endtime="20250702 18:33:53.173"/>
</branch>
<status status="NOT RUN" starttime="20250702 18:33:53.172" endtime="20250702 18:33:53.173"/>
</if>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${SECURITY_ENABLED}</arg>
<arg>${value}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20250702 18:33:53.173" endtime="20250702 18:33:53.173"/>
</kw>
<status status="PASS" starttime="20250702 18:33:53.172" endtime="20250702 18:33:53.173"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250702 18:33:53.173" endtime="20250702 18:33:53.173"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:33:53.176" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:33:53.180" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:33:53.180" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250702 18:33:53.174" endtime="20250702 18:33:53.180"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:33:53.181" level="INFO">scm</msg>
<status status="PASS" starttime="20250702 18:33:53.180" endtime="20250702 18:33:53.181"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:33:53.181" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:33:53.181" endtime="20250702 18:33:53.181"/>
</kw>
<status status="PASS" starttime="20250702 18:33:53.174" endtime="20250702 18:33:53.181"/>
</kw>
<msg timestamp="20250702 18:33:53.181" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:33:53.174" endtime="20250702 18:33:53.181"/>
</kw>
<msg timestamp="20250702 18:33:53.181" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250702 18:33:53.174" endtime="20250702 18:33:53.181"/>
</kw>
<msg timestamp="20250702 18:33:53.182" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250702 18:33:53.173" endtime="20250702 18:33:53.182"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250702 18:33:53.182" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250702 18:33:53.182" endtime="20250702 18:33:53.182"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:33:53.185" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:33:53.231" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:33:53.231" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:33:53.183" endtime="20250702 18:33:53.231"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:33:53.232" level="INFO"/>
<status status="PASS" starttime="20250702 18:33:53.231" endtime="20250702 18:33:53.232"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:33:53.232" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:33:53.232" endtime="20250702 18:33:53.232"/>
</kw>
<status status="PASS" starttime="20250702 18:33:53.183" endtime="20250702 18:33:53.232"/>
</kw>
<msg timestamp="20250702 18:33:53.232" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:33:53.183" endtime="20250702 18:33:53.232"/>
</kw>
<status status="PASS" starttime="20250702 18:33:53.182" endtime="20250702 18:33:53.232"/>
</kw>
<status status="PASS" starttime="20250702 18:33:53.182" endtime="20250702 18:33:53.232"/>
</kw>
<status status="PASS" starttime="20250702 18:33:53.172" endtime="20250702 18:33:53.232"/>
</kw>
<status status="PASS" starttime="20250702 18:33:53.171" endtime="20250702 18:33:53.233"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/no-such-bucket ${target}/dangling-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:33:53.235" level="INFO">Running command 'ozone sh bucket link 56851-source/no-such-bucket 56851-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:33:56.171" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:33:56.171" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:33:53.233" endtime="20250702 18:33:56.171"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:33:56.172" level="INFO"/>
<status status="PASS" starttime="20250702 18:33:56.171" endtime="20250702 18:33:56.172"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:33:56.172" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:33:56.172" endtime="20250702 18:33:56.172"/>
</kw>
<status status="PASS" starttime="20250702 18:33:53.233" endtime="20250702 18:33:56.172"/>
</kw>
<msg timestamp="20250702 18:33:56.172" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:33:53.233" endtime="20250702 18:33:56.172"/>
</kw>
<status status="PASS" starttime="20250702 18:33:53.233" endtime="20250702 18:33:56.173"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/dangling-link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:33:56.175" level="INFO">Running command 'ozone sh key list 56851-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:33:59.250" level="INFO">${rc} = 255</msg>
<msg timestamp="20250702 18:33:59.250" level="INFO">${output} = BUCKET_NOT_FOUND Bucket not found: 56851-source/no-such-bucket</msg>
<status status="PASS" starttime="20250702 18:33:56.173" endtime="20250702 18:33:59.250"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:33:59.251" level="INFO">BUCKET_NOT_FOUND Bucket not found: 56851-source/no-such-bucket</msg>
<status status="PASS" starttime="20250702 18:33:59.250" endtime="20250702 18:33:59.251"/>
</kw>
<msg timestamp="20250702 18:33:59.251" level="INFO">${result} = BUCKET_NOT_FOUND Bucket not found: 56851-source/no-such-bucket</msg>
<status status="PASS" starttime="20250702 18:33:56.173" endtime="20250702 18:33:59.251"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BUCKET_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250702 18:33:59.251" endtime="20250702 18:33:59.251"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20250702 18:33:53.171" endtime="20250702 18:33:59.251"/>
</test>
<test id="s1-s2-s3-t2" name="Key create passthrough" line="97">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get Security Enabled From Config" library="commonlib">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' != ''</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20250702 18:33:59.253" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:33:59.253" endtime="20250702 18:33:59.253"/>
</kw>
<kw name="Execute" library="os">
<var>${value}</var>
<arg>ozone getconf confKey ozone.security.enabled</arg>
<status status="NOT RUN" starttime="20250702 18:33:59.254" endtime="20250702 18:33:59.254"/>
</kw>
<if>
<branch type="IF" condition="'${value}' != 'true' and '${value}' != 'false'">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>false</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20250702 18:33:59.254" endtime="20250702 18:33:59.254"/>
</kw>
<status status="NOT RUN" starttime="20250702 18:33:59.254" endtime="20250702 18:33:59.254"/>
</branch>
<status status="NOT RUN" starttime="20250702 18:33:59.254" endtime="20250702 18:33:59.254"/>
</if>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${SECURITY_ENABLED}</arg>
<arg>${value}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20250702 18:33:59.254" endtime="20250702 18:33:59.254"/>
</kw>
<status status="PASS" starttime="20250702 18:33:59.253" endtime="20250702 18:33:59.254"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250702 18:33:59.254" endtime="20250702 18:33:59.254"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:33:59.257" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:33:59.261" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:33:59.261" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250702 18:33:59.255" endtime="20250702 18:33:59.261"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:33:59.262" level="INFO">scm</msg>
<status status="PASS" starttime="20250702 18:33:59.261" endtime="20250702 18:33:59.262"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:33:59.262" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:33:59.262" endtime="20250702 18:33:59.262"/>
</kw>
<status status="PASS" starttime="20250702 18:33:59.255" endtime="20250702 18:33:59.262"/>
</kw>
<msg timestamp="20250702 18:33:59.262" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:33:59.255" endtime="20250702 18:33:59.262"/>
</kw>
<msg timestamp="20250702 18:33:59.263" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250702 18:33:59.255" endtime="20250702 18:33:59.263"/>
</kw>
<msg timestamp="20250702 18:33:59.263" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250702 18:33:59.254" endtime="20250702 18:33:59.263"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250702 18:33:59.263" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250702 18:33:59.263" endtime="20250702 18:33:59.263"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:33:59.266" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:33:59.290" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:33:59.291" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:33:59.264" endtime="20250702 18:33:59.291"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:33:59.291" level="INFO"/>
<status status="PASS" starttime="20250702 18:33:59.291" endtime="20250702 18:33:59.291"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:33:59.292" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:33:59.291" endtime="20250702 18:33:59.292"/>
</kw>
<status status="PASS" starttime="20250702 18:33:59.264" endtime="20250702 18:33:59.292"/>
</kw>
<msg timestamp="20250702 18:33:59.292" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:33:59.264" endtime="20250702 18:33:59.292"/>
</kw>
<status status="PASS" starttime="20250702 18:33:59.263" endtime="20250702 18:33:59.292"/>
</kw>
<status status="PASS" starttime="20250702 18:33:59.263" endtime="20250702 18:33:59.292"/>
</kw>
<status status="PASS" starttime="20250702 18:33:59.253" endtime="20250702 18:33:59.292"/>
</kw>
<status status="PASS" starttime="20250702 18:33:59.252" endtime="20250702 18:33:59.292"/>
</kw>
<kw name="Ozone Shell Batch" library="shell">
<arg>bucket link ${source}/bucket1 ${target}/link1</arg>
<arg>bucket create ${source}/bucket1</arg>
<arg>key put ${target}/link1/key1 /etc/passwd</arg>
<kw name="Catenate" library="BuiltIn">
<var>${cmd}</var>
<arg>SEPARATOR=' --execute '</arg>
<arg>@{commands}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20250702 18:33:59.293" level="INFO">${cmd} = bucket link 56851-source/bucket1 56851-target/link1' --execute 'bucket create 56851-source/bucket1' --execute 'key put 56851-target/link1/key1 /etc/passwd</msg>
<status status="PASS" starttime="20250702 18:33:59.293" endtime="20250702 18:33:59.293"/>
</kw>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>ozone sh --execute '${cmd}'</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>ozone sh --execute '${cmd}'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:33:59.296" level="INFO">Running command 'ozone sh --execute 'bucket link 56851-source/bucket1 56851-target/link1' --execute 'bucket create 56851-source/bucket1' --execute 'key put 56851-target/link1/key1 /etc/passwd' 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:34:04.431" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:34:04.431" level="INFO">${output} = bucket link 56851-source/bucket1 56851-target/link1
bucket create 56851-source/bucket1
key put 56851-target/link1/key1 /etc/passwd</msg>
<status status="PASS" starttime="20250702 18:33:59.294" endtime="20250702 18:34:04.431"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:34:04.432" level="INFO">bucket link 56851-source/bucket1 56851-target/link1
bucket create 56851-source/bucket1
key put 56851-target/link1/key1 /etc/passwd</msg>
<status status="PASS" starttime="20250702 18:34:04.432" endtime="20250702 18:34:04.432"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:34:04.433" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:34:04.432" endtime="20250702 18:34:04.433"/>
</kw>
<status status="PASS" starttime="20250702 18:33:59.293" endtime="20250702 18:34:04.433"/>
</kw>
<msg timestamp="20250702 18:34:04.433" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:33:59.293" endtime="20250702 18:34:04.433"/>
</kw>
<status status="PASS" starttime="20250702 18:33:59.292" endtime="20250702 18:34:04.433"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${target}/link1/key1</arg>
<arg>/etc/passwd</arg>
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250702 18:34:04.434" level="INFO">${postfix} = 63693</msg>
<status status="PASS" starttime="20250702 18:34:04.434" endtime="20250702 18:34:04.434"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250702 18:34:04.434" level="INFO">${tmpfile} = /tmp/tempkey-63693</msg>
<status status="PASS" starttime="20250702 18:34:04.434" endtime="20250702 18:34:04.434"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone ${cmd} ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:34:04.437" level="INFO">Running command 'ozone sh key get 56851-target/link1/key1 /tmp/tempkey-63693 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:34:09.219" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:34:09.219" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:34:04.435" endtime="20250702 18:34:09.219"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:34:09.220" level="INFO"/>
<status status="PASS" starttime="20250702 18:34:09.219" endtime="20250702 18:34:09.220"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:34:09.220" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:34:09.220" endtime="20250702 18:34:09.220"/>
</kw>
<status status="PASS" starttime="20250702 18:34:04.435" endtime="20250702 18:34:09.220"/>
</kw>
<msg timestamp="20250702 18:34:09.220" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:34:04.435" endtime="20250702 18:34:09.220"/>
</kw>
<status status="PASS" starttime="20250702 18:34:04.434" endtime="20250702 18:34:09.220"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20250702 18:34:09.223" level="INFO">Running command 'diff -q /etc/passwd /tmp/tempkey-63693 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:34:09.226" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20250702 18:34:09.220" endtime="20250702 18:34:09.226"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:34:09.230" level="INFO">Running command 'rm -f /tmp/tempkey-63693 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:34:09.233" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:34:09.233" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:34:09.228" endtime="20250702 18:34:09.233"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:34:09.234" level="INFO"/>
<status status="PASS" starttime="20250702 18:34:09.233" endtime="20250702 18:34:09.234"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:34:09.234" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:34:09.234" endtime="20250702 18:34:09.234"/>
</kw>
<status status="PASS" starttime="20250702 18:34:09.227" endtime="20250702 18:34:09.234"/>
</kw>
<msg timestamp="20250702 18:34:09.235" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:34:09.227" endtime="20250702 18:34:09.235"/>
</kw>
<status status="PASS" starttime="20250702 18:34:09.226" endtime="20250702 18:34:09.235"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20250702 18:34:09.235" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20250702 18:34:09.235" endtime="20250702 18:34:09.235"/>
</kw>
<msg timestamp="20250702 18:34:09.235" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20250702 18:34:04.433" endtime="20250702 18:34:09.235"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${matches}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20250702 18:34:09.235" endtime="20250702 18:34:09.236"/>
</kw>
<status status="PASS" starttime="20250702 18:34:04.433" endtime="20250702 18:34:09.236"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20250702 18:33:59.252" endtime="20250702 18:34:09.236"/>
</test>
<test id="s1-s2-s3-t3" name="Key read passthrough" line="103">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get Security Enabled From Config" library="commonlib">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' != ''</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20250702 18:34:09.238" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:34:09.237" endtime="20250702 18:34:09.238"/>
</kw>
<kw name="Execute" library="os">
<var>${value}</var>
<arg>ozone getconf confKey ozone.security.enabled</arg>
<status status="NOT RUN" starttime="20250702 18:34:09.238" endtime="20250702 18:34:09.238"/>
</kw>
<if>
<branch type="IF" condition="'${value}' != 'true' and '${value}' != 'false'">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>false</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20250702 18:34:09.238" endtime="20250702 18:34:09.238"/>
</kw>
<status status="NOT RUN" starttime="20250702 18:34:09.238" endtime="20250702 18:34:09.238"/>
</branch>
<status status="NOT RUN" starttime="20250702 18:34:09.238" endtime="20250702 18:34:09.238"/>
</if>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${SECURITY_ENABLED}</arg>
<arg>${value}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20250702 18:34:09.238" endtime="20250702 18:34:09.238"/>
</kw>
<status status="PASS" starttime="20250702 18:34:09.237" endtime="20250702 18:34:09.238"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250702 18:34:09.238" endtime="20250702 18:34:09.238"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:34:09.241" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:34:09.245" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:34:09.245" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250702 18:34:09.239" endtime="20250702 18:34:09.245"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:34:09.246" level="INFO">scm</msg>
<status status="PASS" starttime="20250702 18:34:09.245" endtime="20250702 18:34:09.246"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:34:09.246" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:34:09.246" endtime="20250702 18:34:09.246"/>
</kw>
<status status="PASS" starttime="20250702 18:34:09.239" endtime="20250702 18:34:09.246"/>
</kw>
<msg timestamp="20250702 18:34:09.246" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:34:09.239" endtime="20250702 18:34:09.246"/>
</kw>
<msg timestamp="20250702 18:34:09.246" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250702 18:34:09.239" endtime="20250702 18:34:09.246"/>
</kw>
<msg timestamp="20250702 18:34:09.247" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250702 18:34:09.239" endtime="20250702 18:34:09.247"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250702 18:34:09.247" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250702 18:34:09.247" endtime="20250702 18:34:09.247"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:34:09.250" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:34:09.265" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:34:09.265" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:34:09.248" endtime="20250702 18:34:09.265"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:34:09.266" level="INFO"/>
<status status="PASS" starttime="20250702 18:34:09.266" endtime="20250702 18:34:09.266"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:34:09.267" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:34:09.267" endtime="20250702 18:34:09.267"/>
</kw>
<status status="PASS" starttime="20250702 18:34:09.248" endtime="20250702 18:34:09.267"/>
</kw>
<msg timestamp="20250702 18:34:09.267" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:34:09.248" endtime="20250702 18:34:09.267"/>
</kw>
<status status="PASS" starttime="20250702 18:34:09.247" endtime="20250702 18:34:09.267"/>
</kw>
<status status="PASS" starttime="20250702 18:34:09.247" endtime="20250702 18:34:09.267"/>
</kw>
<status status="PASS" starttime="20250702 18:34:09.237" endtime="20250702 18:34:09.267"/>
</kw>
<status status="PASS" starttime="20250702 18:34:09.237" endtime="20250702 18:34:09.267"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${source}/bucket1/key2 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:34:09.270" level="INFO">Running command 'ozone sh key put 56851-source/bucket1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:34:14.159" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:34:14.159" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:34:09.268" endtime="20250702 18:34:14.159"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:34:14.160" level="INFO"/>
<status status="PASS" starttime="20250702 18:34:14.159" endtime="20250702 18:34:14.160"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:34:14.160" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:34:14.160" endtime="20250702 18:34:14.161"/>
</kw>
<status status="PASS" starttime="20250702 18:34:09.268" endtime="20250702 18:34:14.161"/>
</kw>
<msg timestamp="20250702 18:34:14.161" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:34:09.268" endtime="20250702 18:34:14.161"/>
</kw>
<status status="PASS" starttime="20250702 18:34:09.267" endtime="20250702 18:34:14.161"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${source}/bucket1/key2</arg>
<arg>/opt/hadoop/NOTICE.txt</arg>
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250702 18:34:14.162" level="INFO">${postfix} = 57839</msg>
<status status="PASS" starttime="20250702 18:34:14.162" endtime="20250702 18:34:14.162"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250702 18:34:14.163" level="INFO">${tmpfile} = /tmp/tempkey-57839</msg>
<status status="PASS" starttime="20250702 18:34:14.162" endtime="20250702 18:34:14.163"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone ${cmd} ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:34:14.166" level="INFO">Running command 'ozone sh key get 56851-source/bucket1/key2 /tmp/tempkey-57839 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:34:19.093" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:34:19.093" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:34:14.164" endtime="20250702 18:34:19.093"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:34:19.094" level="INFO"/>
<status status="PASS" starttime="20250702 18:34:19.093" endtime="20250702 18:34:19.094"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:34:19.094" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:34:19.094" endtime="20250702 18:34:19.094"/>
</kw>
<status status="PASS" starttime="20250702 18:34:14.163" endtime="20250702 18:34:19.094"/>
</kw>
<msg timestamp="20250702 18:34:19.094" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:34:14.163" endtime="20250702 18:34:19.094"/>
</kw>
<status status="PASS" starttime="20250702 18:34:14.163" endtime="20250702 18:34:19.094"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20250702 18:34:19.097" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/tempkey-57839 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:34:19.100" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20250702 18:34:19.095" endtime="20250702 18:34:19.100"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:34:19.103" level="INFO">Running command 'rm -f /tmp/tempkey-57839 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:34:19.106" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:34:19.106" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:34:19.101" endtime="20250702 18:34:19.106"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:34:19.107" level="INFO"/>
<status status="PASS" starttime="20250702 18:34:19.107" endtime="20250702 18:34:19.107"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:34:19.107" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:34:19.107" endtime="20250702 18:34:19.107"/>
</kw>
<status status="PASS" starttime="20250702 18:34:19.101" endtime="20250702 18:34:19.108"/>
</kw>
<msg timestamp="20250702 18:34:19.108" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:34:19.100" endtime="20250702 18:34:19.108"/>
</kw>
<status status="PASS" starttime="20250702 18:34:19.100" endtime="20250702 18:34:19.108"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20250702 18:34:19.108" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20250702 18:34:19.108" endtime="20250702 18:34:19.108"/>
</kw>
<msg timestamp="20250702 18:34:19.108" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20250702 18:34:14.162" endtime="20250702 18:34:19.108"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${matches}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20250702 18:34:19.108" endtime="20250702 18:34:19.109"/>
</kw>
<status status="PASS" starttime="20250702 18:34:14.161" endtime="20250702 18:34:19.109"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20250702 18:34:09.236" endtime="20250702 18:34:19.109"/>
</test>
<test id="s1-s2-s3-t4" name="Key list passthrough" line="107">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get Security Enabled From Config" library="commonlib">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' != ''</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20250702 18:34:19.111" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:34:19.111" endtime="20250702 18:34:19.111"/>
</kw>
<kw name="Execute" library="os">
<var>${value}</var>
<arg>ozone getconf confKey ozone.security.enabled</arg>
<status status="NOT RUN" starttime="20250702 18:34:19.111" endtime="20250702 18:34:19.111"/>
</kw>
<if>
<branch type="IF" condition="'${value}' != 'true' and '${value}' != 'false'">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>false</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20250702 18:34:19.111" endtime="20250702 18:34:19.111"/>
</kw>
<status status="NOT RUN" starttime="20250702 18:34:19.111" endtime="20250702 18:34:19.111"/>
</branch>
<status status="NOT RUN" starttime="20250702 18:34:19.111" endtime="20250702 18:34:19.111"/>
</if>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${SECURITY_ENABLED}</arg>
<arg>${value}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20250702 18:34:19.111" endtime="20250702 18:34:19.111"/>
</kw>
<status status="PASS" starttime="20250702 18:34:19.110" endtime="20250702 18:34:19.111"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250702 18:34:19.112" endtime="20250702 18:34:19.112"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:34:19.115" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:34:19.118" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:34:19.118" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250702 18:34:19.113" endtime="20250702 18:34:19.118"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:34:19.118" level="INFO">scm</msg>
<status status="PASS" starttime="20250702 18:34:19.118" endtime="20250702 18:34:19.119"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:34:19.119" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:34:19.119" endtime="20250702 18:34:19.119"/>
</kw>
<status status="PASS" starttime="20250702 18:34:19.112" endtime="20250702 18:34:19.119"/>
</kw>
<msg timestamp="20250702 18:34:19.119" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:34:19.112" endtime="20250702 18:34:19.119"/>
</kw>
<msg timestamp="20250702 18:34:19.119" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250702 18:34:19.112" endtime="20250702 18:34:19.119"/>
</kw>
<msg timestamp="20250702 18:34:19.120" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250702 18:34:19.112" endtime="20250702 18:34:19.120"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250702 18:34:19.120" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250702 18:34:19.120" endtime="20250702 18:34:19.120"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:34:19.123" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:34:19.165" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:34:19.165" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:34:19.121" endtime="20250702 18:34:19.165"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:34:19.165" level="INFO"/>
<status status="PASS" starttime="20250702 18:34:19.165" endtime="20250702 18:34:19.165"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:34:19.166" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:34:19.166" endtime="20250702 18:34:19.166"/>
</kw>
<status status="PASS" starttime="20250702 18:34:19.121" endtime="20250702 18:34:19.166"/>
</kw>
<msg timestamp="20250702 18:34:19.166" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:34:19.121" endtime="20250702 18:34:19.166"/>
</kw>
<status status="PASS" starttime="20250702 18:34:19.120" endtime="20250702 18:34:19.166"/>
</kw>
<status status="PASS" starttime="20250702 18:34:19.120" endtime="20250702 18:34:19.166"/>
</kw>
<status status="PASS" starttime="20250702 18:34:19.110" endtime="20250702 18:34:19.166"/>
</kw>
<status status="PASS" starttime="20250702 18:34:19.110" endtime="20250702 18:34:19.166"/>
</kw>
<kw name="Execute" library="os">
<var>${target_list}</var>
<arg>ozone sh key list ${target}/link1 | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:34:19.169" level="INFO">Running command 'ozone sh key list 56851-target/link1 | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:34:22.486" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:34:22.486" level="INFO">${output} = key1
key2</msg>
<status status="PASS" starttime="20250702 18:34:19.167" endtime="20250702 18:34:22.486"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:34:22.487" level="INFO">key1
key2</msg>
<status status="PASS" starttime="20250702 18:34:22.486" endtime="20250702 18:34:22.487"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:34:22.487" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:34:22.487" endtime="20250702 18:34:22.487"/>
</kw>
<status status="PASS" starttime="20250702 18:34:19.167" endtime="20250702 18:34:22.487"/>
</kw>
<msg timestamp="20250702 18:34:22.487" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:34:19.167" endtime="20250702 18:34:22.487"/>
</kw>
<msg timestamp="20250702 18:34:22.487" level="INFO">${target_list} = key1
key2</msg>
<status status="PASS" starttime="20250702 18:34:19.167" endtime="20250702 18:34:22.488"/>
</kw>
<kw name="Execute" library="os">
<var>${source_list}</var>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:34:22.491" level="INFO">Running command 'ozone sh key list 56851-source/bucket1 | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:34:25.802" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:34:25.802" level="INFO">${output} = key1
key2</msg>
<status status="PASS" starttime="20250702 18:34:22.489" endtime="20250702 18:34:25.802"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:34:25.803" level="INFO">key1
key2</msg>
<status status="PASS" starttime="20250702 18:34:25.803" endtime="20250702 18:34:25.803"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:34:25.804" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:34:25.803" endtime="20250702 18:34:25.804"/>
</kw>
<status status="PASS" starttime="20250702 18:34:22.488" endtime="20250702 18:34:25.804"/>
</kw>
<msg timestamp="20250702 18:34:25.804" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:34:22.488" endtime="20250702 18:34:25.804"/>
</kw>
<msg timestamp="20250702 18:34:25.804" level="INFO">${source_list} = key1
key2</msg>
<status status="PASS" starttime="20250702 18:34:22.488" endtime="20250702 18:34:25.804"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${target_list}</arg>
<arg>${source_list}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250702 18:34:25.804" endtime="20250702 18:34:25.805"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250702 18:34:25.805" endtime="20250702 18:34:25.805"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250702 18:34:25.805" endtime="20250702 18:34:25.805"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20250702 18:34:19.109" endtime="20250702 18:34:25.805"/>
</test>
<test id="s1-s2-s3-t5" name="Key delete passthrough" line="114">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get Security Enabled From Config" library="commonlib">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' != ''</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20250702 18:34:25.808" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:34:25.807" endtime="20250702 18:34:25.808"/>
</kw>
<kw name="Execute" library="os">
<var>${value}</var>
<arg>ozone getconf confKey ozone.security.enabled</arg>
<status status="NOT RUN" starttime="20250702 18:34:25.808" endtime="20250702 18:34:25.808"/>
</kw>
<if>
<branch type="IF" condition="'${value}' != 'true' and '${value}' != 'false'">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>false</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20250702 18:34:25.808" endtime="20250702 18:34:25.808"/>
</kw>
<status status="NOT RUN" starttime="20250702 18:34:25.808" endtime="20250702 18:34:25.808"/>
</branch>
<status status="NOT RUN" starttime="20250702 18:34:25.808" endtime="20250702 18:34:25.808"/>
</if>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${SECURITY_ENABLED}</arg>
<arg>${value}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20250702 18:34:25.808" endtime="20250702 18:34:25.808"/>
</kw>
<status status="PASS" starttime="20250702 18:34:25.807" endtime="20250702 18:34:25.808"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250702 18:34:25.808" endtime="20250702 18:34:25.809"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:34:25.812" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:34:25.815" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:34:25.815" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250702 18:34:25.810" endtime="20250702 18:34:25.815"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:34:25.816" level="INFO">scm</msg>
<status status="PASS" starttime="20250702 18:34:25.816" endtime="20250702 18:34:25.816"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:34:25.816" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:34:25.816" endtime="20250702 18:34:25.816"/>
</kw>
<status status="PASS" starttime="20250702 18:34:25.809" endtime="20250702 18:34:25.817"/>
</kw>
<msg timestamp="20250702 18:34:25.817" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:34:25.809" endtime="20250702 18:34:25.817"/>
</kw>
<msg timestamp="20250702 18:34:25.817" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250702 18:34:25.809" endtime="20250702 18:34:25.817"/>
</kw>
<msg timestamp="20250702 18:34:25.817" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250702 18:34:25.809" endtime="20250702 18:34:25.817"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250702 18:34:25.817" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250702 18:34:25.817" endtime="20250702 18:34:25.817"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:34:25.821" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:34:25.835" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:34:25.836" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:34:25.819" endtime="20250702 18:34:25.836"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:34:25.836" level="INFO"/>
<status status="PASS" starttime="20250702 18:34:25.836" endtime="20250702 18:34:25.836"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:34:25.837" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:34:25.836" endtime="20250702 18:34:25.837"/>
</kw>
<status status="PASS" starttime="20250702 18:34:25.818" endtime="20250702 18:34:25.837"/>
</kw>
<msg timestamp="20250702 18:34:25.837" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:34:25.818" endtime="20250702 18:34:25.837"/>
</kw>
<status status="PASS" starttime="20250702 18:34:25.818" endtime="20250702 18:34:25.837"/>
</kw>
<status status="PASS" starttime="20250702 18:34:25.817" endtime="20250702 18:34:25.837"/>
</kw>
<status status="PASS" starttime="20250702 18:34:25.807" endtime="20250702 18:34:25.837"/>
</kw>
<status status="PASS" starttime="20250702 18:34:25.806" endtime="20250702 18:34:25.837"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${target}/link1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:34:25.840" level="INFO">Running command 'ozone sh key delete 56851-target/link1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:34:29.195" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:34:29.195" level="INFO">${output} = Key moved inside Trash: /.Trash/testuser/Current/key2 </msg>
<status status="PASS" starttime="20250702 18:34:25.838" endtime="20250702 18:34:29.195"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:34:29.196" level="INFO">Key moved inside Trash: /.Trash/testuser/Current/key2 </msg>
<status status="PASS" starttime="20250702 18:34:29.196" endtime="20250702 18:34:29.196"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:34:29.197" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:34:29.196" endtime="20250702 18:34:29.197"/>
</kw>
<status status="PASS" starttime="20250702 18:34:25.838" endtime="20250702 18:34:29.197"/>
</kw>
<msg timestamp="20250702 18:34:29.197" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:34:25.838" endtime="20250702 18:34:29.197"/>
</kw>
<status status="PASS" starttime="20250702 18:34:25.837" endtime="20250702 18:34:29.197"/>
</kw>
<kw name="Execute" library="os">
<var>${bucket1keys}</var>
<arg>ozone sh key list ${source}/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:34:29.200" level="INFO">Running command 'ozone sh key list 56851-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:34:32.672" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:34:32.672" level="INFO">${output} = [ {
  "volumeName" : "56851-source",
  "bucketName" : "bucket1",
  "name" : ".Trash/",
  "owner" : "testuser",
  "dataSize" : 0,
  "creationTime" : "2025-07-02T18:34:29.059Z",
  "modificationTime" : "...</msg>
<status status="PASS" starttime="20250702 18:34:29.198" endtime="20250702 18:34:32.672"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:34:32.673" level="INFO">[ {
  "volumeName" : "56851-source",
  "bucketName" : "bucket1",
  "name" : ".Trash/",
  "owner" : "testuser",
  "dataSize" : 0,
  "creationTime" : "2025-07-02T18:34:29.059Z",
  "modificationTime" : "2025-07-02T18:34:29.059Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "minimumNodes" : 1,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "tags" : { },
  "file" : false
}, {
  "volumeName" : "56851-source",
  "bucketName" : "bucket1",
  "name" : ".Trash/testuser/",
  "owner" : "testuser",
  "dataSize" : 0,
  "creationTime" : "2025-07-02T18:34:29.059Z",
  "modificationTime" : "2025-07-02T18:34:29.059Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "minimumNodes" : 1,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "tags" : { },
  "file" : false
}, {
  "volumeName" : "56851-source",
  "bucketName" : "bucket1",
  "name" : ".Trash/testuser/Current/",
  "owner" : "",
  "dataSize" : 0,
  "creationTime" : "2025-07-02T18:34:29.059Z",
  "modificationTime" : "2025-07-02T18:34:29.073Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "minimumNodes" : 1,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "tags" : { },
  "file" : false
}, {
  "volumeName" : "56851-source",
  "bucketName" : "bucket1",
  "name" : ".Trash/testuser/Current/key2",
  "owner" : "testuser",
  "dataSize" : 15892,
  "creationTime" : "2025-07-02T18:34:12.247Z",
  "modificationTime" : "2025-07-02T18:34:13.733Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "minimumNodes" : 1,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "tags" : { },
  "file" : true
}, {
  "volumeName" : "56851-source",
  "bucketName" : "bucket1",
  "name" : "key1",
  "owner" : "testuser",
  "dataSize" : 1062,
  "creationTime" : "2025-07-02T18:34:02.634Z",
  "modificationTime" : "2025-07-02T18:34:04.001Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "minimumNodes" : 1,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "tags" : { },
  "file" : true
} ]</msg>
<status status="PASS" starttime="20250702 18:34:32.673" endtime="20250702 18:34:32.673"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:34:32.674" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:34:32.673" endtime="20250702 18:34:32.674"/>
</kw>
<status status="PASS" starttime="20250702 18:34:29.198" endtime="20250702 18:34:32.674"/>
</kw>
<msg timestamp="20250702 18:34:32.674" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:34:29.198" endtime="20250702 18:34:32.674"/>
</kw>
<msg timestamp="20250702 18:34:32.674" level="INFO">${bucket1keys} = [ {
  "volumeName" : "56851-source",
  "bucketName" : "bucket1",
  "name" : ".Trash/",
  "owner" : "testuser",
  "dataSize" : 0,
  "creationTime" : "2025-07-02T18:34:29.059Z",
  "modificationTime" : "...</msg>
<status status="PASS" starttime="20250702 18:34:29.197" endtime="20250702 18:34:32.674"/>
</kw>
<kw name="Execute" library="os">
<var>${source_list}</var>
<arg>echo '${bucket1keys}' | jq -r '.[] | select(.name | startswith(".Trash")) | .name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:34:32.678" level="INFO">Running command 'echo '[ {
  "volumeName" : "56851-source",
  "bucketName" : "bucket1",
  "name" : ".Trash/",
  "owner" : "testuser",
  "dataSize" : 0,
  "creationTime" : "2025-07-02T18:34:29.059Z",
  "modificationTime" : "2025-07-02T18:34:29.059Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "minimumNodes" : 1,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "tags" : { },
  "file" : false
}, {
  "volumeName" : "56851-source",
  "bucketName" : "bucket1",
  "name" : ".Trash/testuser/",
  "owner" : "testuser",
  "dataSize" : 0,
  "creationTime" : "2025-07-02T18:34:29.059Z",
  "modificationTime" : "2025-07-02T18:34:29.059Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "minimumNodes" : 1,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "tags" : { },
  "file" : false
}, {
  "volumeName" : "56851-source",
  "bucketName" : "bucket1",
  "name" : ".Trash/testuser/Current/",
  "owner" : "",
  "dataSize" : 0,
  "creationTime" : "2025-07-02T18:34:29.059Z",
  "modificationTime" : "2025-07-02T18:34:29.073Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "minimumNodes" : 1,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "tags" : { },
  "file" : false
}, {
  "volumeName" : "56851-source",
  "bucketName" : "bucket1",
  "name" : ".Trash/testuser/Current/key2",
  "owner" : "testuser",
  "dataSize" : 15892,
  "creationTime" : "2025-07-02T18:34:12.247Z",
  "modificationTime" : "2025-07-02T18:34:13.733Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "minimumNodes" : 1,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "tags" : { },
  "file" : true
}, {
  "volumeName" : "56851-source",
  "bucketName" : "bucket1",
  "name" : "key1",
  "owner" : "testuser",
  "dataSize" : 1062,
  "creationTime" : "2025-07-02T18:34:02.634Z",
  "modificationTime" : "2025-07-02T18:34:04.001Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "minimumNodes" : 1,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "tags" : { },
  "file" : true
} ]' | jq -r '.[] | select(.name | startswith(".Trash")) | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:34:32.683" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:34:32.683" level="INFO">${output} = .Trash/
.Trash/testuser/
.Trash/testuser/Current/
.Trash/testuser/Current/key2</msg>
<status status="PASS" starttime="20250702 18:34:32.675" endtime="20250702 18:34:32.683"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:34:32.684" level="INFO">.Trash/
.Trash/testuser/
.Trash/testuser/Current/
.Trash/testuser/Current/key2</msg>
<status status="PASS" starttime="20250702 18:34:32.683" endtime="20250702 18:34:32.684"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:34:32.684" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:34:32.684" endtime="20250702 18:34:32.684"/>
</kw>
<status status="PASS" starttime="20250702 18:34:32.675" endtime="20250702 18:34:32.684"/>
</kw>
<msg timestamp="20250702 18:34:32.684" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:34:32.675" endtime="20250702 18:34:32.685"/>
</kw>
<msg timestamp="20250702 18:34:32.685" level="INFO">${source_list} = .Trash/
.Trash/testuser/
.Trash/testuser/Current/
.Trash/testuser/Current/key2</msg>
<status status="PASS" starttime="20250702 18:34:32.674" endtime="20250702 18:34:32.685"/>
</kw>
<kw name="Should Contain Any" library="BuiltIn">
<arg>${source_list}</arg>
<arg>.Trash/hadoop</arg>
<arg>.Trash/testuser</arg>
<arg>.Trash/root</arg>
<doc>Fails if ``container`` does not contain any of the ``*items``.</doc>
<status status="PASS" starttime="20250702 18:34:32.685" endtime="20250702 18:34:32.685"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250702 18:34:32.685" endtime="20250702 18:34:32.685"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>echo '${bucket1keys}' | jq -r '.[] | select(.name | startswith(".Trash") | not) | .name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:34:32.688" level="INFO">Running command 'echo '[ {
  "volumeName" : "56851-source",
  "bucketName" : "bucket1",
  "name" : ".Trash/",
  "owner" : "testuser",
  "dataSize" : 0,
  "creationTime" : "2025-07-02T18:34:29.059Z",
  "modificationTime" : "2025-07-02T18:34:29.059Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "minimumNodes" : 1,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "tags" : { },
  "file" : false
}, {
  "volumeName" : "56851-source",
  "bucketName" : "bucket1",
  "name" : ".Trash/testuser/",
  "owner" : "testuser",
  "dataSize" : 0,
  "creationTime" : "2025-07-02T18:34:29.059Z",
  "modificationTime" : "2025-07-02T18:34:29.059Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "minimumNodes" : 1,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "tags" : { },
  "file" : false
}, {
  "volumeName" : "56851-source",
  "bucketName" : "bucket1",
  "name" : ".Trash/testuser/Current/",
  "owner" : "",
  "dataSize" : 0,
  "creationTime" : "2025-07-02T18:34:29.059Z",
  "modificationTime" : "2025-07-02T18:34:29.073Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "minimumNodes" : 1,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "tags" : { },
  "file" : false
}, {
  "volumeName" : "56851-source",
  "bucketName" : "bucket1",
  "name" : ".Trash/testuser/Current/key2",
  "owner" : "testuser",
  "dataSize" : 15892,
  "creationTime" : "2025-07-02T18:34:12.247Z",
  "modificationTime" : "2025-07-02T18:34:13.733Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "minimumNodes" : 1,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "tags" : { },
  "file" : true
}, {
  "volumeName" : "56851-source",
  "bucketName" : "bucket1",
  "name" : "key1",
  "owner" : "testuser",
  "dataSize" : 1062,
  "creationTime" : "2025-07-02T18:34:02.634Z",
  "modificationTime" : "2025-07-02T18:34:04.001Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "minimumNodes" : 1,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "tags" : { },
  "file" : true
} ]' | jq -r '.[] | select(.name | startswith(".Trash") | not) | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:34:32.693" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:34:32.693" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20250702 18:34:32.686" endtime="20250702 18:34:32.693"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:34:32.695" level="INFO">key1</msg>
<status status="PASS" starttime="20250702 18:34:32.694" endtime="20250702 18:34:32.695"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:34:32.695" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:34:32.695" endtime="20250702 18:34:32.695"/>
</kw>
<status status="PASS" starttime="20250702 18:34:32.686" endtime="20250702 18:34:32.695"/>
</kw>
<msg timestamp="20250702 18:34:32.695" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:34:32.686" endtime="20250702 18:34:32.696"/>
</kw>
<msg timestamp="20250702 18:34:32.696" level="INFO">${result} = key1</msg>
<status status="PASS" starttime="20250702 18:34:32.686" endtime="20250702 18:34:32.696"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250702 18:34:32.696" endtime="20250702 18:34:32.696"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20250702 18:34:25.806" endtime="20250702 18:34:32.696"/>
</test>
<test id="s1-s2-s3-t6" name="Bucket list contains links" line="123">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get Security Enabled From Config" library="commonlib">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' != ''</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20250702 18:34:32.698" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:34:32.698" endtime="20250702 18:34:32.698"/>
</kw>
<kw name="Execute" library="os">
<var>${value}</var>
<arg>ozone getconf confKey ozone.security.enabled</arg>
<status status="NOT RUN" starttime="20250702 18:34:32.698" endtime="20250702 18:34:32.698"/>
</kw>
<if>
<branch type="IF" condition="'${value}' != 'true' and '${value}' != 'false'">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>false</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20250702 18:34:32.698" endtime="20250702 18:34:32.698"/>
</kw>
<status status="NOT RUN" starttime="20250702 18:34:32.698" endtime="20250702 18:34:32.698"/>
</branch>
<status status="NOT RUN" starttime="20250702 18:34:32.698" endtime="20250702 18:34:32.698"/>
</if>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${SECURITY_ENABLED}</arg>
<arg>${value}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20250702 18:34:32.698" endtime="20250702 18:34:32.698"/>
</kw>
<status status="PASS" starttime="20250702 18:34:32.698" endtime="20250702 18:34:32.699"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250702 18:34:32.699" endtime="20250702 18:34:32.699"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:34:32.702" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:34:32.705" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:34:32.705" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250702 18:34:32.700" endtime="20250702 18:34:32.705"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:34:32.706" level="INFO">scm</msg>
<status status="PASS" starttime="20250702 18:34:32.706" endtime="20250702 18:34:32.706"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:34:32.706" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:34:32.706" endtime="20250702 18:34:32.706"/>
</kw>
<status status="PASS" starttime="20250702 18:34:32.699" endtime="20250702 18:34:32.707"/>
</kw>
<msg timestamp="20250702 18:34:32.707" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:34:32.699" endtime="20250702 18:34:32.707"/>
</kw>
<msg timestamp="20250702 18:34:32.707" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250702 18:34:32.699" endtime="20250702 18:34:32.707"/>
</kw>
<msg timestamp="20250702 18:34:32.707" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250702 18:34:32.699" endtime="20250702 18:34:32.707"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250702 18:34:32.707" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250702 18:34:32.707" endtime="20250702 18:34:32.707"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:34:32.711" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:34:32.745" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:34:32.745" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:34:32.709" endtime="20250702 18:34:32.745"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:34:32.746" level="INFO"/>
<status status="PASS" starttime="20250702 18:34:32.745" endtime="20250702 18:34:32.746"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:34:32.746" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:34:32.746" endtime="20250702 18:34:32.746"/>
</kw>
<status status="PASS" starttime="20250702 18:34:32.708" endtime="20250702 18:34:32.747"/>
</kw>
<msg timestamp="20250702 18:34:32.747" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:34:32.708" endtime="20250702 18:34:32.747"/>
</kw>
<status status="PASS" starttime="20250702 18:34:32.708" endtime="20250702 18:34:32.747"/>
</kw>
<status status="PASS" starttime="20250702 18:34:32.707" endtime="20250702 18:34:32.747"/>
</kw>
<status status="PASS" starttime="20250702 18:34:32.697" endtime="20250702 18:34:32.747"/>
</kw>
<status status="PASS" starttime="20250702 18:34:32.697" endtime="20250702 18:34:32.747"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:34:32.750" level="INFO">Running command 'ozone sh bucket list 56851-target 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:34:36.183" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:34:36.183" level="INFO">${output} = [ {
  "volumeName" : "56851-target",
  "name" : "dangling-link",
  "sourceVolume" : "56851-source",
  "sourceBucket" : "no-such-bucket",
  "creationTime" : "2025-07-02T18:33:56.076Z",
  "modificationT...</msg>
<status status="PASS" starttime="20250702 18:34:32.748" endtime="20250702 18:34:36.183"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:34:36.184" level="INFO">[ {
  "volumeName" : "56851-target",
  "name" : "dangling-link",
  "sourceVolume" : "56851-source",
  "sourceBucket" : "no-such-bucket",
  "creationTime" : "2025-07-02T18:33:56.076Z",
  "modificationTime" : "2025-07-02T18:33:56.076Z",
  "owner" : "testuser",
  "link" : true
}, {
  "volumeName" : "56851-target",
  "name" : "link-to-unreadable-bucket",
  "sourceVolume" : "56851-source",
  "sourceBucket" : "unreadable-bucket",
  "creationTime" : "2025-07-02T18:33:52.622Z",
  "modificationTime" : "2025-07-02T18:33:52.622Z",
  "owner" : "testuser",
  "link" : true
}, {
  "volumeName" : "56851-target",
  "name" : "link1",
  "sourceVolume" : "56851-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2025-07-02T18:34:02.516Z",
  "modificationTime" : "2025-07-02T18:34:02.516Z",
  "owner" : "testuser",
  "link" : true
}, {
  "volumeName" : "56851-target",
  "name" : "readable-link",
  "sourceVolume" : "56851-source",
  "sourceBucket" : "readable-bucket",
  "creationTime" : "2025-07-02T18:33:52.695Z",
  "modificationTime" : "2025-07-02T18:33:52.695Z",
  "owner" : "testuser",
  "link" : true
}, {
  "volumeName" : "56851-target",
  "name" : "readable-link2",
  "sourceVolume" : "56851-source",
  "sourceBucket" : "readable-bucket",
  "creationTime" : "2025-07-02T18:33:52.733Z",
  "modificationTime" : "2025-07-02T18:33:52.733Z",
  "owner" : "testuser",
  "link" : true
} ]</msg>
<status status="PASS" starttime="20250702 18:34:36.184" endtime="20250702 18:34:36.184"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:34:36.185" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:34:36.185" endtime="20250702 18:34:36.185"/>
</kw>
<status status="PASS" starttime="20250702 18:34:32.748" endtime="20250702 18:34:36.185"/>
</kw>
<msg timestamp="20250702 18:34:36.185" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:34:32.747" endtime="20250702 18:34:36.185"/>
</kw>
<msg timestamp="20250702 18:34:36.185" level="INFO">${result} = [ {
  "volumeName" : "56851-target",
  "name" : "dangling-link",
  "sourceVolume" : "56851-source",
  "sourceBucket" : "no-such-bucket",
  "creationTime" : "2025-07-02T18:33:56.076Z",
  "modificationT...</msg>
<status status="PASS" starttime="20250702 18:34:32.747" endtime="20250702 18:34:36.185"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>link1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250702 18:34:36.185" endtime="20250702 18:34:36.186"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>dangling-link</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250702 18:34:36.186" endtime="20250702 18:34:36.186"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20250702 18:34:32.697" endtime="20250702 18:34:36.186"/>
</test>
<test id="s1-s2-s3-t7" name="Bucket info shows source" line="128">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get Security Enabled From Config" library="commonlib">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' != ''</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20250702 18:34:36.188" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:34:36.188" endtime="20250702 18:34:36.188"/>
</kw>
<kw name="Execute" library="os">
<var>${value}</var>
<arg>ozone getconf confKey ozone.security.enabled</arg>
<status status="NOT RUN" starttime="20250702 18:34:36.188" endtime="20250702 18:34:36.188"/>
</kw>
<if>
<branch type="IF" condition="'${value}' != 'true' and '${value}' != 'false'">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>false</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20250702 18:34:36.188" endtime="20250702 18:34:36.188"/>
</kw>
<status status="NOT RUN" starttime="20250702 18:34:36.188" endtime="20250702 18:34:36.188"/>
</branch>
<status status="NOT RUN" starttime="20250702 18:34:36.188" endtime="20250702 18:34:36.189"/>
</if>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${SECURITY_ENABLED}</arg>
<arg>${value}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20250702 18:34:36.189" endtime="20250702 18:34:36.189"/>
</kw>
<status status="PASS" starttime="20250702 18:34:36.188" endtime="20250702 18:34:36.189"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250702 18:34:36.189" endtime="20250702 18:34:36.189"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:34:36.192" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:34:36.195" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:34:36.196" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250702 18:34:36.190" endtime="20250702 18:34:36.196"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:34:36.196" level="INFO">scm</msg>
<status status="PASS" starttime="20250702 18:34:36.196" endtime="20250702 18:34:36.196"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:34:36.197" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:34:36.196" endtime="20250702 18:34:36.197"/>
</kw>
<status status="PASS" starttime="20250702 18:34:36.190" endtime="20250702 18:34:36.197"/>
</kw>
<msg timestamp="20250702 18:34:36.197" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:34:36.189" endtime="20250702 18:34:36.197"/>
</kw>
<msg timestamp="20250702 18:34:36.197" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250702 18:34:36.189" endtime="20250702 18:34:36.197"/>
</kw>
<msg timestamp="20250702 18:34:36.198" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250702 18:34:36.189" endtime="20250702 18:34:36.198"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250702 18:34:36.198" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250702 18:34:36.198" endtime="20250702 18:34:36.198"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:34:36.202" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:34:36.235" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:34:36.235" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:34:36.200" endtime="20250702 18:34:36.235"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:34:36.236" level="INFO"/>
<status status="PASS" starttime="20250702 18:34:36.236" endtime="20250702 18:34:36.236"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:34:36.237" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:34:36.236" endtime="20250702 18:34:36.237"/>
</kw>
<status status="PASS" starttime="20250702 18:34:36.199" endtime="20250702 18:34:36.237"/>
</kw>
<msg timestamp="20250702 18:34:36.237" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:34:36.199" endtime="20250702 18:34:36.237"/>
</kw>
<status status="PASS" starttime="20250702 18:34:36.199" endtime="20250702 18:34:36.237"/>
</kw>
<status status="PASS" starttime="20250702 18:34:36.198" endtime="20250702 18:34:36.237"/>
</kw>
<status status="PASS" starttime="20250702 18:34:36.187" endtime="20250702 18:34:36.237"/>
</kw>
<status status="PASS" starttime="20250702 18:34:36.187" endtime="20250702 18:34:36.237"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:34:36.241" level="INFO">Running command 'ozone sh bucket info 56851-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:34:39.466" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:34:39.466" level="INFO">${output} = {
  "volumeName" : "56851-target",
  "name" : "link1",
  "sourceVolume" : "56851-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2025-07-02T18:34:02.516Z",
  "modificationTime" : "2025-07-0...</msg>
<status status="PASS" starttime="20250702 18:34:36.238" endtime="20250702 18:34:39.466"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:34:39.467" level="INFO">{
  "volumeName" : "56851-target",
  "name" : "link1",
  "sourceVolume" : "56851-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2025-07-02T18:34:02.516Z",
  "modificationTime" : "2025-07-02T18:34:02.516Z",
  "owner" : "testuser",
  "link" : true
}</msg>
<status status="PASS" starttime="20250702 18:34:39.466" endtime="20250702 18:34:39.467"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:34:39.467" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:34:39.467" endtime="20250702 18:34:39.467"/>
</kw>
<status status="PASS" starttime="20250702 18:34:36.238" endtime="20250702 18:34:39.467"/>
</kw>
<msg timestamp="20250702 18:34:39.467" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:34:36.238" endtime="20250702 18:34:39.468"/>
</kw>
<msg timestamp="20250702 18:34:39.468" level="INFO">${result} = {
  "volumeName" : "56851-target",
  "name" : "link1",
  "sourceVolume" : "56851-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2025-07-02T18:34:02.516Z",
  "modificationTime" : "2025-07-0...</msg>
<status status="PASS" starttime="20250702 18:34:36.238" endtime="20250702 18:34:39.468"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${source}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250702 18:34:39.468" endtime="20250702 18:34:39.468"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bucket1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250702 18:34:39.468" endtime="20250702 18:34:39.468"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${target}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250702 18:34:39.468" endtime="20250702 18:34:39.469"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>link1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250702 18:34:39.469" endtime="20250702 18:34:39.469"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>modificationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250702 18:34:39.469" endtime="20250702 18:34:39.469"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250702 18:34:39.469" endtime="20250702 18:34:39.470"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>metadata</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250702 18:34:39.470" endtime="20250702 18:34:39.470"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20250702 18:34:36.187" endtime="20250702 18:34:39.470"/>
</test>
<test id="s1-s2-s3-t8" name="Source and target bucket have different ACLs" line="138">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get Security Enabled From Config" library="commonlib">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' != ''</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20250702 18:34:39.472" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:34:39.472" endtime="20250702 18:34:39.472"/>
</kw>
<kw name="Execute" library="os">
<var>${value}</var>
<arg>ozone getconf confKey ozone.security.enabled</arg>
<status status="NOT RUN" starttime="20250702 18:34:39.472" endtime="20250702 18:34:39.472"/>
</kw>
<if>
<branch type="IF" condition="'${value}' != 'true' and '${value}' != 'false'">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>false</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20250702 18:34:39.472" endtime="20250702 18:34:39.473"/>
</kw>
<status status="NOT RUN" starttime="20250702 18:34:39.472" endtime="20250702 18:34:39.473"/>
</branch>
<status status="NOT RUN" starttime="20250702 18:34:39.472" endtime="20250702 18:34:39.473"/>
</if>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${SECURITY_ENABLED}</arg>
<arg>${value}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20250702 18:34:39.473" endtime="20250702 18:34:39.473"/>
</kw>
<status status="PASS" starttime="20250702 18:34:39.472" endtime="20250702 18:34:39.473"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250702 18:34:39.473" endtime="20250702 18:34:39.473"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:34:39.477" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:34:39.480" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:34:39.480" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250702 18:34:39.474" endtime="20250702 18:34:39.480"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:34:39.481" level="INFO">scm</msg>
<status status="PASS" starttime="20250702 18:34:39.480" endtime="20250702 18:34:39.481"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:34:39.481" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:34:39.481" endtime="20250702 18:34:39.481"/>
</kw>
<status status="PASS" starttime="20250702 18:34:39.474" endtime="20250702 18:34:39.482"/>
</kw>
<msg timestamp="20250702 18:34:39.482" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:34:39.474" endtime="20250702 18:34:39.482"/>
</kw>
<msg timestamp="20250702 18:34:39.482" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250702 18:34:39.473" endtime="20250702 18:34:39.482"/>
</kw>
<msg timestamp="20250702 18:34:39.482" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250702 18:34:39.473" endtime="20250702 18:34:39.482"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250702 18:34:39.482" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250702 18:34:39.482" endtime="20250702 18:34:39.482"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:34:39.486" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:34:39.501" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:34:39.501" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:34:39.484" endtime="20250702 18:34:39.501"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:34:39.502" level="INFO"/>
<status status="PASS" starttime="20250702 18:34:39.502" endtime="20250702 18:34:39.502"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:34:39.503" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:34:39.503" endtime="20250702 18:34:39.503"/>
</kw>
<status status="PASS" starttime="20250702 18:34:39.483" endtime="20250702 18:34:39.503"/>
</kw>
<msg timestamp="20250702 18:34:39.503" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:34:39.483" endtime="20250702 18:34:39.503"/>
</kw>
<status status="PASS" starttime="20250702 18:34:39.483" endtime="20250702 18:34:39.503"/>
</kw>
<status status="PASS" starttime="20250702 18:34:39.483" endtime="20250702 18:34:39.503"/>
</kw>
<status status="PASS" starttime="20250702 18:34:39.471" endtime="20250702 18:34:39.503"/>
</kw>
<status status="PASS" starttime="20250702 18:34:39.471" endtime="20250702 18:34:39.503"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:user1:rwxy ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:34:39.507" level="INFO">Running command 'ozone sh bucket addacl --acl user:user1:rwxy 56851-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:34:42.610" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:34:42.610" level="INFO">${output} = ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20250702 18:34:39.504" endtime="20250702 18:34:42.610"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:34:42.611" level="INFO">ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20250702 18:34:42.611" endtime="20250702 18:34:42.611"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:34:42.612" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:34:42.611" endtime="20250702 18:34:42.612"/>
</kw>
<status status="PASS" starttime="20250702 18:34:39.504" endtime="20250702 18:34:42.612"/>
</kw>
<msg timestamp="20250702 18:34:42.612" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:34:39.504" endtime="20250702 18:34:42.612"/>
</kw>
<status status="PASS" starttime="20250702 18:34:39.503" endtime="20250702 18:34:42.612"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>${EMPTY}</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:34:42.617" level="INFO">Running command 'ozone sh bucket getacl 56851-target/link1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:34:45.795" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:34:45.795" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:34:42.614" endtime="20250702 18:34:45.795"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:34:45.796" level="INFO"/>
<status status="PASS" starttime="20250702 18:34:45.795" endtime="20250702 18:34:45.796"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:34:45.796" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:34:45.796" endtime="20250702 18:34:45.796"/>
</kw>
<status status="PASS" starttime="20250702 18:34:42.614" endtime="20250702 18:34:45.796"/>
</kw>
<msg timestamp="20250702 18:34:45.797" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:34:42.614" endtime="20250702 18:34:45.797"/>
</kw>
<msg timestamp="20250702 18:34:45.797" level="INFO">${actual_acls} = </msg>
<status status="PASS" starttime="20250702 18:34:42.613" endtime="20250702 18:34:45.797"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250702 18:34:45.797" endtime="20250702 18:34:45.797"/>
</kw>
<status status="PASS" starttime="20250702 18:34:42.612" endtime="20250702 18:34:45.797"/>
</kw>
<kw name="Verify Bucket ACL">
<arg>--source=false</arg>
<arg>${target}/link1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>${EMPTY}</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh bucket getacl ${source_option} ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:34:45.802" level="INFO">Running command 'ozone sh bucket getacl --source=false 56851-target/link1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:34:48.996" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:34:48.996" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:34:45.799" endtime="20250702 18:34:48.996"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:34:48.997" level="INFO"/>
<status status="PASS" starttime="20250702 18:34:48.996" endtime="20250702 18:34:48.997"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:34:48.998" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:34:48.997" endtime="20250702 18:34:48.998"/>
</kw>
<status status="PASS" starttime="20250702 18:34:45.799" endtime="20250702 18:34:48.998"/>
</kw>
<msg timestamp="20250702 18:34:48.998" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:34:45.799" endtime="20250702 18:34:48.998"/>
</kw>
<msg timestamp="20250702 18:34:48.998" level="INFO">${actual_acls} = </msg>
<status status="PASS" starttime="20250702 18:34:45.798" endtime="20250702 18:34:48.998"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250702 18:34:48.998" endtime="20250702 18:34:48.999"/>
</kw>
<status status="PASS" starttime="20250702 18:34:45.797" endtime="20250702 18:34:48.999"/>
</kw>
<kw name="Verify Bucket ACL">
<arg>--source</arg>
<arg>${target}/link1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL WRITE_ACL</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh bucket getacl ${source_option} ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:34:49.003" level="INFO">Running command 'ozone sh bucket getacl --source 56851-target/link1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:34:52.207" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:34:52.207" level="INFO">${output} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20250702 18:34:49.001" endtime="20250702 18:34:52.207"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:34:52.207" level="INFO">READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20250702 18:34:52.207" endtime="20250702 18:34:52.208"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:34:52.208" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:34:52.208" endtime="20250702 18:34:52.208"/>
</kw>
<status status="PASS" starttime="20250702 18:34:49.000" endtime="20250702 18:34:52.208"/>
</kw>
<msg timestamp="20250702 18:34:52.208" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:34:49.000" endtime="20250702 18:34:52.208"/>
</kw>
<msg timestamp="20250702 18:34:52.208" level="INFO">${actual_acls} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20250702 18:34:48.999" endtime="20250702 18:34:52.209"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250702 18:34:52.209" endtime="20250702 18:34:52.209"/>
</kw>
<status status="PASS" starttime="20250702 18:34:48.999" endtime="20250702 18:34:52.209"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL WRITE_ACL</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:34:52.213" level="INFO">Running command 'ozone sh bucket getacl 56851-source/bucket1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:34:55.371" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:34:55.371" level="INFO">${output} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20250702 18:34:52.210" endtime="20250702 18:34:55.371"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:34:55.372" level="INFO">READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20250702 18:34:55.372" endtime="20250702 18:34:55.372"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:34:55.372" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:34:55.372" endtime="20250702 18:34:55.373"/>
</kw>
<status status="PASS" starttime="20250702 18:34:52.210" endtime="20250702 18:34:55.373"/>
</kw>
<msg timestamp="20250702 18:34:55.373" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:34:52.210" endtime="20250702 18:34:55.373"/>
</kw>
<msg timestamp="20250702 18:34:55.373" level="INFO">${actual_acls} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20250702 18:34:52.209" endtime="20250702 18:34:55.373"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250702 18:34:55.373" endtime="20250702 18:34:55.373"/>
</kw>
<status status="PASS" starttime="20250702 18:34:52.209" endtime="20250702 18:34:55.373"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket removeacl --acl user:user1:y ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:34:55.376" level="INFO">Running command 'ozone sh bucket removeacl --acl user:user1:y 56851-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:34:58.284" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:34:58.284" level="INFO">${output} = ACL user:user1:y[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20250702 18:34:55.374" endtime="20250702 18:34:58.284"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:34:58.285" level="INFO">ACL user:user1:y[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20250702 18:34:58.285" endtime="20250702 18:34:58.285"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:34:58.286" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:34:58.285" endtime="20250702 18:34:58.286"/>
</kw>
<status status="PASS" starttime="20250702 18:34:55.374" endtime="20250702 18:34:58.286"/>
</kw>
<msg timestamp="20250702 18:34:58.286" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:34:55.374" endtime="20250702 18:34:58.286"/>
</kw>
<status status="PASS" starttime="20250702 18:34:55.374" endtime="20250702 18:34:58.286"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>${EMPTY}</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:34:58.290" level="INFO">Running command 'ozone sh bucket getacl 56851-target/link1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:35:01.511" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:35:01.511" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:34:58.288" endtime="20250702 18:35:01.511"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:35:01.512" level="INFO"/>
<status status="PASS" starttime="20250702 18:35:01.511" endtime="20250702 18:35:01.512"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:35:01.512" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:35:01.512" endtime="20250702 18:35:01.512"/>
</kw>
<status status="PASS" starttime="20250702 18:34:58.288" endtime="20250702 18:35:01.512"/>
</kw>
<msg timestamp="20250702 18:35:01.513" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:34:58.287" endtime="20250702 18:35:01.513"/>
</kw>
<msg timestamp="20250702 18:35:01.513" level="INFO">${actual_acls} = </msg>
<status status="PASS" starttime="20250702 18:34:58.287" endtime="20250702 18:35:01.513"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250702 18:35:01.513" endtime="20250702 18:35:01.513"/>
</kw>
<status status="PASS" starttime="20250702 18:34:58.286" endtime="20250702 18:35:01.513"/>
</kw>
<kw name="Verify Bucket ACL">
<arg>--source</arg>
<arg>${target}/link1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh bucket getacl ${source_option} ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:35:01.517" level="INFO">Running command 'ozone sh bucket getacl --source 56851-target/link1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:35:04.714" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:35:04.714" level="INFO">${output} = READ WRITE READ_ACL</msg>
<status status="PASS" starttime="20250702 18:35:01.515" endtime="20250702 18:35:04.714"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:35:04.715" level="INFO">READ WRITE READ_ACL</msg>
<status status="PASS" starttime="20250702 18:35:04.714" endtime="20250702 18:35:04.715"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:35:04.715" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:35:04.715" endtime="20250702 18:35:04.715"/>
</kw>
<status status="PASS" starttime="20250702 18:35:01.514" endtime="20250702 18:35:04.716"/>
</kw>
<msg timestamp="20250702 18:35:04.716" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:35:01.514" endtime="20250702 18:35:04.716"/>
</kw>
<msg timestamp="20250702 18:35:04.716" level="INFO">${actual_acls} = READ WRITE READ_ACL</msg>
<status status="PASS" starttime="20250702 18:35:01.514" endtime="20250702 18:35:04.716"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250702 18:35:04.716" endtime="20250702 18:35:04.716"/>
</kw>
<status status="PASS" starttime="20250702 18:35:01.513" endtime="20250702 18:35:04.716"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setacl --acl user:user1:rw ${source}/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:35:04.719" level="INFO">Running command 'ozone sh bucket setacl --acl user:user1:rw 56851-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:35:07.627" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:35:07.627" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20250702 18:35:04.717" endtime="20250702 18:35:07.627"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:35:07.628" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20250702 18:35:07.627" endtime="20250702 18:35:07.628"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:35:07.628" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:35:07.628" endtime="20250702 18:35:07.628"/>
</kw>
<status status="PASS" starttime="20250702 18:35:04.717" endtime="20250702 18:35:07.628"/>
</kw>
<msg timestamp="20250702 18:35:07.628" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:35:04.717" endtime="20250702 18:35:07.629"/>
</kw>
<status status="PASS" starttime="20250702 18:35:04.716" endtime="20250702 18:35:07.629"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>${EMPTY}</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:35:07.633" level="INFO">Running command 'ozone sh bucket getacl 56851-target/link1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:35:10.721" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:35:10.721" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:35:07.630" endtime="20250702 18:35:10.721"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:35:10.722" level="INFO"/>
<status status="PASS" starttime="20250702 18:35:10.721" endtime="20250702 18:35:10.722"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:35:10.722" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:35:10.722" endtime="20250702 18:35:10.723"/>
</kw>
<status status="PASS" starttime="20250702 18:35:07.630" endtime="20250702 18:35:10.723"/>
</kw>
<msg timestamp="20250702 18:35:10.723" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:35:07.630" endtime="20250702 18:35:10.723"/>
</kw>
<msg timestamp="20250702 18:35:10.723" level="INFO">${actual_acls} = </msg>
<status status="PASS" starttime="20250702 18:35:07.630" endtime="20250702 18:35:10.723"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250702 18:35:10.723" endtime="20250702 18:35:10.723"/>
</kw>
<status status="PASS" starttime="20250702 18:35:07.629" endtime="20250702 18:35:10.723"/>
</kw>
<kw name="Verify Bucket ACL">
<arg>--source</arg>
<arg>${target}/link1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh bucket getacl ${source_option} ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:35:10.727" level="INFO">Running command 'ozone sh bucket getacl --source 56851-target/link1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:35:13.933" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:35:13.933" level="INFO">${output} = READ WRITE</msg>
<status status="PASS" starttime="20250702 18:35:10.725" endtime="20250702 18:35:13.933"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:35:13.934" level="INFO">READ WRITE</msg>
<status status="PASS" starttime="20250702 18:35:13.933" endtime="20250702 18:35:13.934"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:35:13.934" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:35:13.934" endtime="20250702 18:35:13.935"/>
</kw>
<status status="PASS" starttime="20250702 18:35:10.725" endtime="20250702 18:35:13.935"/>
</kw>
<msg timestamp="20250702 18:35:13.935" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:35:10.724" endtime="20250702 18:35:13.935"/>
</kw>
<msg timestamp="20250702 18:35:13.935" level="INFO">${actual_acls} = READ WRITE</msg>
<status status="PASS" starttime="20250702 18:35:10.724" endtime="20250702 18:35:13.935"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250702 18:35:13.935" endtime="20250702 18:35:13.935"/>
</kw>
<status status="PASS" starttime="20250702 18:35:10.724" endtime="20250702 18:35:13.935"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl group:group2:r ${source}/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:35:13.939" level="INFO">Running command 'ozone sh bucket addacl --acl group:group2:r 56851-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:35:16.888" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:35:16.888" level="INFO">${output} = ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20250702 18:35:13.937" endtime="20250702 18:35:16.888"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:35:16.889" level="INFO">ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20250702 18:35:16.888" endtime="20250702 18:35:16.889"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:35:16.889" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:35:16.889" endtime="20250702 18:35:16.889"/>
</kw>
<status status="PASS" starttime="20250702 18:35:13.936" endtime="20250702 18:35:16.889"/>
</kw>
<msg timestamp="20250702 18:35:16.889" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:35:13.936" endtime="20250702 18:35:16.889"/>
</kw>
<status status="PASS" starttime="20250702 18:35:13.936" endtime="20250702 18:35:16.889"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>${EMPTY}</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:35:16.893" level="INFO">Running command 'ozone sh bucket getacl 56851-target/link1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:35:19.959" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:35:19.959" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:35:16.891" endtime="20250702 18:35:19.959"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:35:19.960" level="INFO"/>
<status status="PASS" starttime="20250702 18:35:19.960" endtime="20250702 18:35:19.960"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:35:19.960" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:35:19.960" endtime="20250702 18:35:19.961"/>
</kw>
<status status="PASS" starttime="20250702 18:35:16.891" endtime="20250702 18:35:19.961"/>
</kw>
<msg timestamp="20250702 18:35:19.961" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:35:16.891" endtime="20250702 18:35:19.961"/>
</kw>
<msg timestamp="20250702 18:35:19.961" level="INFO">${actual_acls} = </msg>
<status status="PASS" starttime="20250702 18:35:16.890" endtime="20250702 18:35:19.961"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250702 18:35:19.961" endtime="20250702 18:35:19.961"/>
</kw>
<status status="PASS" starttime="20250702 18:35:16.889" endtime="20250702 18:35:19.961"/>
</kw>
<kw name="Verify Bucket ACL">
<arg>--source</arg>
<arg>${target}/link1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>READ</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh bucket getacl ${source_option} ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:35:19.965" level="INFO">Running command 'ozone sh bucket getacl --source 56851-target/link1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:35:23.033" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:35:23.033" level="INFO">${output} = READ</msg>
<status status="PASS" starttime="20250702 18:35:19.963" endtime="20250702 18:35:23.033"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:35:23.034" level="INFO">READ</msg>
<status status="PASS" starttime="20250702 18:35:23.034" endtime="20250702 18:35:23.034"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:35:23.035" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:35:23.034" endtime="20250702 18:35:23.035"/>
</kw>
<status status="PASS" starttime="20250702 18:35:19.963" endtime="20250702 18:35:23.035"/>
</kw>
<msg timestamp="20250702 18:35:23.035" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:35:19.962" endtime="20250702 18:35:23.035"/>
</kw>
<msg timestamp="20250702 18:35:23.035" level="INFO">${actual_acls} = READ</msg>
<status status="PASS" starttime="20250702 18:35:19.962" endtime="20250702 18:35:23.035"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250702 18:35:23.035" endtime="20250702 18:35:23.035"/>
</kw>
<status status="PASS" starttime="20250702 18:35:19.962" endtime="20250702 18:35:23.035"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20250702 18:34:39.470" endtime="20250702 18:35:23.036"/>
</test>
<test id="s1-s2-s3-t9" name="Source and target key have same ACLs" line="157">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get Security Enabled From Config" library="commonlib">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' != ''</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20250702 18:35:23.037" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:35:23.037" endtime="20250702 18:35:23.038"/>
</kw>
<kw name="Execute" library="os">
<var>${value}</var>
<arg>ozone getconf confKey ozone.security.enabled</arg>
<status status="NOT RUN" starttime="20250702 18:35:23.038" endtime="20250702 18:35:23.038"/>
</kw>
<if>
<branch type="IF" condition="'${value}' != 'true' and '${value}' != 'false'">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>false</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20250702 18:35:23.038" endtime="20250702 18:35:23.038"/>
</kw>
<status status="NOT RUN" starttime="20250702 18:35:23.038" endtime="20250702 18:35:23.038"/>
</branch>
<status status="NOT RUN" starttime="20250702 18:35:23.038" endtime="20250702 18:35:23.038"/>
</if>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${SECURITY_ENABLED}</arg>
<arg>${value}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20250702 18:35:23.038" endtime="20250702 18:35:23.038"/>
</kw>
<status status="PASS" starttime="20250702 18:35:23.037" endtime="20250702 18:35:23.038"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250702 18:35:23.038" endtime="20250702 18:35:23.038"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:35:23.042" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:35:23.045" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:35:23.045" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250702 18:35:23.039" endtime="20250702 18:35:23.045"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:35:23.046" level="INFO">scm</msg>
<status status="PASS" starttime="20250702 18:35:23.045" endtime="20250702 18:35:23.046"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:35:23.046" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:35:23.046" endtime="20250702 18:35:23.046"/>
</kw>
<status status="PASS" starttime="20250702 18:35:23.039" endtime="20250702 18:35:23.046"/>
</kw>
<msg timestamp="20250702 18:35:23.046" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:35:23.039" endtime="20250702 18:35:23.047"/>
</kw>
<msg timestamp="20250702 18:35:23.047" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250702 18:35:23.039" endtime="20250702 18:35:23.047"/>
</kw>
<msg timestamp="20250702 18:35:23.047" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250702 18:35:23.039" endtime="20250702 18:35:23.047"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250702 18:35:23.047" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250702 18:35:23.047" endtime="20250702 18:35:23.047"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:35:23.050" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:35:23.066" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:35:23.066" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:35:23.048" endtime="20250702 18:35:23.066"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:35:23.067" level="INFO"/>
<status status="PASS" starttime="20250702 18:35:23.066" endtime="20250702 18:35:23.067"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:35:23.068" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:35:23.067" endtime="20250702 18:35:23.068"/>
</kw>
<status status="PASS" starttime="20250702 18:35:23.048" endtime="20250702 18:35:23.068"/>
</kw>
<msg timestamp="20250702 18:35:23.068" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:35:23.048" endtime="20250702 18:35:23.068"/>
</kw>
<status status="PASS" starttime="20250702 18:35:23.048" endtime="20250702 18:35:23.068"/>
</kw>
<status status="PASS" starttime="20250702 18:35:23.047" endtime="20250702 18:35:23.068"/>
</kw>
<status status="PASS" starttime="20250702 18:35:23.037" endtime="20250702 18:35:23.068"/>
</kw>
<status status="PASS" starttime="20250702 18:35:23.036" endtime="20250702 18:35:23.068"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key addacl --acl user:user1:rwxy ${source}/bucket1/key1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:35:23.071" level="INFO">Running command 'ozone sh key addacl --acl user:user1:rwxy 56851-source/bucket1/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:35:26.005" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:35:26.005" level="INFO">${output} = ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20250702 18:35:23.069" endtime="20250702 18:35:26.005"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:35:26.006" level="INFO">ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20250702 18:35:26.006" endtime="20250702 18:35:26.006"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:35:26.007" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:35:26.006" endtime="20250702 18:35:26.007"/>
</kw>
<status status="PASS" starttime="20250702 18:35:23.069" endtime="20250702 18:35:26.007"/>
</kw>
<msg timestamp="20250702 18:35:26.007" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:35:23.069" endtime="20250702 18:35:26.007"/>
</kw>
<status status="PASS" starttime="20250702 18:35:23.068" endtime="20250702 18:35:26.007"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>key</arg>
<arg>${target}/link1/key1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL WRITE_ACL</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:35:26.011" level="INFO">Running command 'ozone sh key getacl 56851-target/link1/key1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:35:29.076" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:35:29.076" level="INFO">${output} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20250702 18:35:26.009" endtime="20250702 18:35:29.076"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:35:29.077" level="INFO">READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20250702 18:35:29.076" endtime="20250702 18:35:29.077"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:35:29.077" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:35:29.077" endtime="20250702 18:35:29.078"/>
</kw>
<status status="PASS" starttime="20250702 18:35:26.008" endtime="20250702 18:35:29.078"/>
</kw>
<msg timestamp="20250702 18:35:29.078" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:35:26.008" endtime="20250702 18:35:29.078"/>
</kw>
<msg timestamp="20250702 18:35:29.078" level="INFO">${actual_acls} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20250702 18:35:26.008" endtime="20250702 18:35:29.078"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250702 18:35:29.078" endtime="20250702 18:35:29.078"/>
</kw>
<status status="PASS" starttime="20250702 18:35:26.007" endtime="20250702 18:35:29.078"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>key</arg>
<arg>${source}/bucket1/key1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL WRITE_ACL</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:35:29.082" level="INFO">Running command 'ozone sh key getacl 56851-source/bucket1/key1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:35:32.204" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:35:32.204" level="INFO">${output} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20250702 18:35:29.080" endtime="20250702 18:35:32.204"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:35:32.205" level="INFO">READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20250702 18:35:32.204" endtime="20250702 18:35:32.205"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:35:32.205" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:35:32.205" endtime="20250702 18:35:32.205"/>
</kw>
<status status="PASS" starttime="20250702 18:35:29.080" endtime="20250702 18:35:32.206"/>
</kw>
<msg timestamp="20250702 18:35:32.206" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:35:29.079" endtime="20250702 18:35:32.206"/>
</kw>
<msg timestamp="20250702 18:35:32.206" level="INFO">${actual_acls} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20250702 18:35:29.079" endtime="20250702 18:35:32.206"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250702 18:35:32.206" endtime="20250702 18:35:32.206"/>
</kw>
<status status="PASS" starttime="20250702 18:35:29.079" endtime="20250702 18:35:32.206"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key removeacl --acl user:user1:y ${target}/link1/key1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:35:32.210" level="INFO">Running command 'ozone sh key removeacl --acl user:user1:y 56851-target/link1/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:35:35.075" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:35:35.075" level="INFO">${output} = ACL user:user1:y[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20250702 18:35:32.208" endtime="20250702 18:35:35.075"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:35:35.076" level="INFO">ACL user:user1:y[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20250702 18:35:35.076" endtime="20250702 18:35:35.076"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:35:35.077" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:35:35.076" endtime="20250702 18:35:35.077"/>
</kw>
<status status="PASS" starttime="20250702 18:35:32.207" endtime="20250702 18:35:35.077"/>
</kw>
<msg timestamp="20250702 18:35:35.077" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:35:32.207" endtime="20250702 18:35:35.077"/>
</kw>
<status status="PASS" starttime="20250702 18:35:32.207" endtime="20250702 18:35:35.077"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>key</arg>
<arg>${target}/link1/key1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:35:35.081" level="INFO">Running command 'ozone sh key getacl 56851-target/link1/key1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:35:38.189" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:35:38.189" level="INFO">${output} = READ WRITE READ_ACL</msg>
<status status="PASS" starttime="20250702 18:35:35.079" endtime="20250702 18:35:38.189"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:35:38.190" level="INFO">READ WRITE READ_ACL</msg>
<status status="PASS" starttime="20250702 18:35:38.189" endtime="20250702 18:35:38.190"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:35:38.190" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:35:38.190" endtime="20250702 18:35:38.190"/>
</kw>
<status status="PASS" starttime="20250702 18:35:35.078" endtime="20250702 18:35:38.191"/>
</kw>
<msg timestamp="20250702 18:35:38.191" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:35:35.078" endtime="20250702 18:35:38.191"/>
</kw>
<msg timestamp="20250702 18:35:38.191" level="INFO">${actual_acls} = READ WRITE READ_ACL</msg>
<status status="PASS" starttime="20250702 18:35:35.078" endtime="20250702 18:35:38.191"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250702 18:35:38.191" endtime="20250702 18:35:38.191"/>
</kw>
<status status="PASS" starttime="20250702 18:35:35.077" endtime="20250702 18:35:38.191"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>key</arg>
<arg>${source}/bucket1/key1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:35:38.195" level="INFO">Running command 'ozone sh key getacl 56851-source/bucket1/key1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:35:41.225" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:35:41.225" level="INFO">${output} = READ WRITE READ_ACL</msg>
<status status="PASS" starttime="20250702 18:35:38.193" endtime="20250702 18:35:41.225"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:35:41.226" level="INFO">READ WRITE READ_ACL</msg>
<status status="PASS" starttime="20250702 18:35:41.225" endtime="20250702 18:35:41.226"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:35:41.226" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:35:41.226" endtime="20250702 18:35:41.226"/>
</kw>
<status status="PASS" starttime="20250702 18:35:38.193" endtime="20250702 18:35:41.227"/>
</kw>
<msg timestamp="20250702 18:35:41.227" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:35:38.192" endtime="20250702 18:35:41.227"/>
</kw>
<msg timestamp="20250702 18:35:41.227" level="INFO">${actual_acls} = READ WRITE READ_ACL</msg>
<status status="PASS" starttime="20250702 18:35:38.192" endtime="20250702 18:35:41.227"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250702 18:35:41.227" endtime="20250702 18:35:41.227"/>
</kw>
<status status="PASS" starttime="20250702 18:35:38.191" endtime="20250702 18:35:41.227"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key setacl --acl user:user1:rw ${source}/bucket1/key1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:35:41.231" level="INFO">Running command 'ozone sh key setacl --acl user:user1:rw 56851-source/bucket1/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:35:44.066" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:35:44.066" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20250702 18:35:41.228" endtime="20250702 18:35:44.066"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:35:44.067" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20250702 18:35:44.066" endtime="20250702 18:35:44.067"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:35:44.067" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:35:44.067" endtime="20250702 18:35:44.067"/>
</kw>
<status status="PASS" starttime="20250702 18:35:41.228" endtime="20250702 18:35:44.067"/>
</kw>
<msg timestamp="20250702 18:35:44.067" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:35:41.228" endtime="20250702 18:35:44.067"/>
</kw>
<status status="PASS" starttime="20250702 18:35:41.228" endtime="20250702 18:35:44.068"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>key</arg>
<arg>${target}/link1/key1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:35:44.072" level="INFO">Running command 'ozone sh key getacl 56851-target/link1/key1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:35:47.167" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:35:47.167" level="INFO">${output} = READ WRITE</msg>
<status status="PASS" starttime="20250702 18:35:44.069" endtime="20250702 18:35:47.167"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:35:47.168" level="INFO">READ WRITE</msg>
<status status="PASS" starttime="20250702 18:35:47.167" endtime="20250702 18:35:47.168"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:35:47.168" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:35:47.168" endtime="20250702 18:35:47.168"/>
</kw>
<status status="PASS" starttime="20250702 18:35:44.069" endtime="20250702 18:35:47.169"/>
</kw>
<msg timestamp="20250702 18:35:47.169" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:35:44.069" endtime="20250702 18:35:47.169"/>
</kw>
<msg timestamp="20250702 18:35:47.169" level="INFO">${actual_acls} = READ WRITE</msg>
<status status="PASS" starttime="20250702 18:35:44.068" endtime="20250702 18:35:47.169"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250702 18:35:47.169" endtime="20250702 18:35:47.169"/>
</kw>
<status status="PASS" starttime="20250702 18:35:44.068" endtime="20250702 18:35:47.169"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>key</arg>
<arg>${source}/bucket1/key1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:35:47.173" level="INFO">Running command 'ozone sh key getacl 56851-source/bucket1/key1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:35:50.244" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:35:50.244" level="INFO">${output} = READ WRITE</msg>
<status status="PASS" starttime="20250702 18:35:47.171" endtime="20250702 18:35:50.244"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:35:50.245" level="INFO">READ WRITE</msg>
<status status="PASS" starttime="20250702 18:35:50.244" endtime="20250702 18:35:50.245"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:35:50.245" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:35:50.245" endtime="20250702 18:35:50.245"/>
</kw>
<status status="PASS" starttime="20250702 18:35:47.171" endtime="20250702 18:35:50.246"/>
</kw>
<msg timestamp="20250702 18:35:50.246" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:35:47.170" endtime="20250702 18:35:50.246"/>
</kw>
<msg timestamp="20250702 18:35:50.246" level="INFO">${actual_acls} = READ WRITE</msg>
<status status="PASS" starttime="20250702 18:35:47.170" endtime="20250702 18:35:50.246"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250702 18:35:50.246" endtime="20250702 18:35:50.246"/>
</kw>
<status status="PASS" starttime="20250702 18:35:47.169" endtime="20250702 18:35:50.246"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key addacl --acl group:group2:r ${source}/bucket1/key1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:35:50.249" level="INFO">Running command 'ozone sh key addacl --acl group:group2:r 56851-source/bucket1/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:35:53.109" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:35:53.109" level="INFO">${output} = ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20250702 18:35:50.247" endtime="20250702 18:35:53.109"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:35:53.110" level="INFO">ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20250702 18:35:53.110" endtime="20250702 18:35:53.110"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:35:53.111" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:35:53.110" endtime="20250702 18:35:53.111"/>
</kw>
<status status="PASS" starttime="20250702 18:35:50.247" endtime="20250702 18:35:53.111"/>
</kw>
<msg timestamp="20250702 18:35:53.111" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:35:50.247" endtime="20250702 18:35:53.111"/>
</kw>
<status status="PASS" starttime="20250702 18:35:50.246" endtime="20250702 18:35:53.111"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>key</arg>
<arg>${target}/link1/key1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>READ</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:35:53.115" level="INFO">Running command 'ozone sh key getacl 56851-target/link1/key1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:35:56.299" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:35:56.299" level="INFO">${output} = READ</msg>
<status status="PASS" starttime="20250702 18:35:53.113" endtime="20250702 18:35:56.299"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:35:56.300" level="INFO">READ</msg>
<status status="PASS" starttime="20250702 18:35:56.299" endtime="20250702 18:35:56.300"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:35:56.301" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:35:56.300" endtime="20250702 18:35:56.301"/>
</kw>
<status status="PASS" starttime="20250702 18:35:53.113" endtime="20250702 18:35:56.301"/>
</kw>
<msg timestamp="20250702 18:35:56.301" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:35:53.112" endtime="20250702 18:35:56.301"/>
</kw>
<msg timestamp="20250702 18:35:56.301" level="INFO">${actual_acls} = READ</msg>
<status status="PASS" starttime="20250702 18:35:53.112" endtime="20250702 18:35:56.301"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250702 18:35:56.301" endtime="20250702 18:35:56.302"/>
</kw>
<status status="PASS" starttime="20250702 18:35:53.111" endtime="20250702 18:35:56.302"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>key</arg>
<arg>${source}/bucket1/key1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>READ</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:35:56.305" level="INFO">Running command 'ozone sh key getacl 56851-source/bucket1/key1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:35:59.357" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:35:59.357" level="INFO">${output} = READ</msg>
<status status="PASS" starttime="20250702 18:35:56.303" endtime="20250702 18:35:59.357"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:35:59.358" level="INFO">READ</msg>
<status status="PASS" starttime="20250702 18:35:59.357" endtime="20250702 18:35:59.358"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:35:59.358" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:35:59.358" endtime="20250702 18:35:59.358"/>
</kw>
<status status="PASS" starttime="20250702 18:35:56.303" endtime="20250702 18:35:59.358"/>
</kw>
<msg timestamp="20250702 18:35:59.358" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:35:56.303" endtime="20250702 18:35:59.358"/>
</kw>
<msg timestamp="20250702 18:35:59.359" level="INFO">${actual_acls} = READ</msg>
<status status="PASS" starttime="20250702 18:35:56.302" endtime="20250702 18:35:59.359"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250702 18:35:59.359" endtime="20250702 18:35:59.359"/>
</kw>
<status status="PASS" starttime="20250702 18:35:56.302" endtime="20250702 18:35:59.359"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20250702 18:35:23.036" endtime="20250702 18:35:59.359"/>
</test>
<test id="s1-s2-s3-t10" name="Source and target prefix have same ACLs" line="172">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get Security Enabled From Config" library="commonlib">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' != ''</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20250702 18:35:59.361" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:35:59.361" endtime="20250702 18:35:59.361"/>
</kw>
<kw name="Execute" library="os">
<var>${value}</var>
<arg>ozone getconf confKey ozone.security.enabled</arg>
<status status="NOT RUN" starttime="20250702 18:35:59.361" endtime="20250702 18:35:59.361"/>
</kw>
<if>
<branch type="IF" condition="'${value}' != 'true' and '${value}' != 'false'">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>false</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20250702 18:35:59.362" endtime="20250702 18:35:59.362"/>
</kw>
<status status="NOT RUN" starttime="20250702 18:35:59.361" endtime="20250702 18:35:59.362"/>
</branch>
<status status="NOT RUN" starttime="20250702 18:35:59.361" endtime="20250702 18:35:59.362"/>
</if>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${SECURITY_ENABLED}</arg>
<arg>${value}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20250702 18:35:59.362" endtime="20250702 18:35:59.362"/>
</kw>
<status status="PASS" starttime="20250702 18:35:59.361" endtime="20250702 18:35:59.362"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250702 18:35:59.362" endtime="20250702 18:35:59.362"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:35:59.365" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:35:59.368" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:35:59.368" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250702 18:35:59.363" endtime="20250702 18:35:59.369"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:35:59.369" level="INFO">scm</msg>
<status status="PASS" starttime="20250702 18:35:59.369" endtime="20250702 18:35:59.369"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:35:59.370" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:35:59.369" endtime="20250702 18:35:59.370"/>
</kw>
<status status="PASS" starttime="20250702 18:35:59.363" endtime="20250702 18:35:59.370"/>
</kw>
<msg timestamp="20250702 18:35:59.370" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:35:59.363" endtime="20250702 18:35:59.370"/>
</kw>
<msg timestamp="20250702 18:35:59.370" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250702 18:35:59.362" endtime="20250702 18:35:59.370"/>
</kw>
<msg timestamp="20250702 18:35:59.370" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250702 18:35:59.362" endtime="20250702 18:35:59.370"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250702 18:35:59.371" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250702 18:35:59.370" endtime="20250702 18:35:59.371"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:35:59.374" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:35:59.389" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:35:59.389" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:35:59.372" endtime="20250702 18:35:59.389"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:35:59.390" level="INFO"/>
<status status="PASS" starttime="20250702 18:35:59.390" endtime="20250702 18:35:59.390"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:35:59.390" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:35:59.390" endtime="20250702 18:35:59.391"/>
</kw>
<status status="PASS" starttime="20250702 18:35:59.372" endtime="20250702 18:35:59.391"/>
</kw>
<msg timestamp="20250702 18:35:59.391" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:35:59.372" endtime="20250702 18:35:59.391"/>
</kw>
<status status="PASS" starttime="20250702 18:35:59.371" endtime="20250702 18:35:59.391"/>
</kw>
<status status="PASS" starttime="20250702 18:35:59.371" endtime="20250702 18:35:59.391"/>
</kw>
<status status="PASS" starttime="20250702 18:35:59.360" endtime="20250702 18:35:59.391"/>
</kw>
<status status="PASS" starttime="20250702 18:35:59.360" endtime="20250702 18:35:59.391"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh prefix addacl --acl user:user1:rwxy ${source}/bucket1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:35:59.394" level="INFO">Running command 'ozone sh prefix addacl --acl user:user1:rwxy 56851-source/bucket1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:36:02.352" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:36:02.352" level="INFO">${output} = ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20250702 18:35:59.392" endtime="20250702 18:36:02.352"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:36:02.353" level="INFO">ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20250702 18:36:02.353" endtime="20250702 18:36:02.353"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:36:02.353" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:36:02.353" endtime="20250702 18:36:02.354"/>
</kw>
<status status="PASS" starttime="20250702 18:35:59.392" endtime="20250702 18:36:02.354"/>
</kw>
<msg timestamp="20250702 18:36:02.354" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:35:59.391" endtime="20250702 18:36:02.354"/>
</kw>
<status status="PASS" starttime="20250702 18:35:59.391" endtime="20250702 18:36:02.354"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>prefix</arg>
<arg>${target}/link1/prefix1/</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL WRITE_ACL</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:36:02.358" level="INFO">Running command 'ozone sh prefix getacl 56851-target/link1/prefix1/ | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:36:05.453" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:36:05.453" level="INFO">${output} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20250702 18:36:02.355" endtime="20250702 18:36:05.453"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:36:05.454" level="INFO">READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20250702 18:36:05.453" endtime="20250702 18:36:05.454"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:36:05.454" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:36:05.454" endtime="20250702 18:36:05.454"/>
</kw>
<status status="PASS" starttime="20250702 18:36:02.355" endtime="20250702 18:36:05.454"/>
</kw>
<msg timestamp="20250702 18:36:05.454" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:36:02.355" endtime="20250702 18:36:05.455"/>
</kw>
<msg timestamp="20250702 18:36:05.455" level="INFO">${actual_acls} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20250702 18:36:02.354" endtime="20250702 18:36:05.455"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250702 18:36:05.455" endtime="20250702 18:36:05.455"/>
</kw>
<status status="PASS" starttime="20250702 18:36:02.354" endtime="20250702 18:36:05.455"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>prefix</arg>
<arg>${source}/bucket1/prefix1/</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL WRITE_ACL</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:36:05.459" level="INFO">Running command 'ozone sh prefix getacl 56851-source/bucket1/prefix1/ | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:36:08.431" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:36:08.431" level="INFO">${output} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20250702 18:36:05.457" endtime="20250702 18:36:08.431"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:36:08.432" level="INFO">READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20250702 18:36:08.431" endtime="20250702 18:36:08.432"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:36:08.432" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:36:08.432" endtime="20250702 18:36:08.433"/>
</kw>
<status status="PASS" starttime="20250702 18:36:05.456" endtime="20250702 18:36:08.433"/>
</kw>
<msg timestamp="20250702 18:36:08.433" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:36:05.456" endtime="20250702 18:36:08.433"/>
</kw>
<msg timestamp="20250702 18:36:08.433" level="INFO">${actual_acls} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20250702 18:36:05.456" endtime="20250702 18:36:08.433"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250702 18:36:08.433" endtime="20250702 18:36:08.433"/>
</kw>
<status status="PASS" starttime="20250702 18:36:05.455" endtime="20250702 18:36:08.433"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh prefix removeacl --acl user:user1:y ${target}/link1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:36:08.446" level="INFO">Running command 'ozone sh prefix removeacl --acl user:user1:y 56851-target/link1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:36:11.313" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:36:11.313" level="INFO">${output} = ACL user:user1:y[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20250702 18:36:08.444" endtime="20250702 18:36:11.313"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:36:11.314" level="INFO">ACL user:user1:y[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20250702 18:36:11.314" endtime="20250702 18:36:11.314"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:36:11.315" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:36:11.314" endtime="20250702 18:36:11.315"/>
</kw>
<status status="PASS" starttime="20250702 18:36:08.444" endtime="20250702 18:36:11.315"/>
</kw>
<msg timestamp="20250702 18:36:11.315" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:36:08.434" endtime="20250702 18:36:11.315"/>
</kw>
<status status="PASS" starttime="20250702 18:36:08.434" endtime="20250702 18:36:11.315"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>prefix</arg>
<arg>${target}/link1/prefix1/</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:36:11.319" level="INFO">Running command 'ozone sh prefix getacl 56851-target/link1/prefix1/ | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:36:14.308" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:36:14.308" level="INFO">${output} = READ WRITE READ_ACL</msg>
<status status="PASS" starttime="20250702 18:36:11.317" endtime="20250702 18:36:14.308"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:36:14.309" level="INFO">READ WRITE READ_ACL</msg>
<status status="PASS" starttime="20250702 18:36:14.309" endtime="20250702 18:36:14.309"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:36:14.310" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:36:14.309" endtime="20250702 18:36:14.310"/>
</kw>
<status status="PASS" starttime="20250702 18:36:11.316" endtime="20250702 18:36:14.310"/>
</kw>
<msg timestamp="20250702 18:36:14.310" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:36:11.316" endtime="20250702 18:36:14.310"/>
</kw>
<msg timestamp="20250702 18:36:14.310" level="INFO">${actual_acls} = READ WRITE READ_ACL</msg>
<status status="PASS" starttime="20250702 18:36:11.316" endtime="20250702 18:36:14.310"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250702 18:36:14.310" endtime="20250702 18:36:14.311"/>
</kw>
<status status="PASS" starttime="20250702 18:36:11.315" endtime="20250702 18:36:14.311"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>prefix</arg>
<arg>${source}/bucket1/prefix1/</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:36:14.314" level="INFO">Running command 'ozone sh prefix getacl 56851-source/bucket1/prefix1/ | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:36:17.394" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:36:17.394" level="INFO">${output} = READ WRITE READ_ACL</msg>
<status status="PASS" starttime="20250702 18:36:14.312" endtime="20250702 18:36:17.394"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:36:17.395" level="INFO">READ WRITE READ_ACL</msg>
<status status="PASS" starttime="20250702 18:36:17.394" endtime="20250702 18:36:17.395"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:36:17.395" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:36:17.395" endtime="20250702 18:36:17.395"/>
</kw>
<status status="PASS" starttime="20250702 18:36:14.312" endtime="20250702 18:36:17.396"/>
</kw>
<msg timestamp="20250702 18:36:17.396" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:36:14.312" endtime="20250702 18:36:17.396"/>
</kw>
<msg timestamp="20250702 18:36:17.396" level="INFO">${actual_acls} = READ WRITE READ_ACL</msg>
<status status="PASS" starttime="20250702 18:36:14.311" endtime="20250702 18:36:17.396"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250702 18:36:17.396" endtime="20250702 18:36:17.396"/>
</kw>
<status status="PASS" starttime="20250702 18:36:14.311" endtime="20250702 18:36:17.396"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh prefix setacl --acl user:user1:rw ${source}/bucket1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:36:17.399" level="INFO">Running command 'ozone sh prefix setacl --acl user:user1:rw 56851-source/bucket1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:36:20.295" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:36:20.295" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20250702 18:36:17.397" endtime="20250702 18:36:20.295"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:36:20.296" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20250702 18:36:20.296" endtime="20250702 18:36:20.296"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:36:20.297" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:36:20.296" endtime="20250702 18:36:20.297"/>
</kw>
<status status="PASS" starttime="20250702 18:36:17.397" endtime="20250702 18:36:20.297"/>
</kw>
<msg timestamp="20250702 18:36:20.297" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:36:17.397" endtime="20250702 18:36:20.297"/>
</kw>
<status status="PASS" starttime="20250702 18:36:17.396" endtime="20250702 18:36:20.297"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>prefix</arg>
<arg>${target}/link1/prefix1/</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:36:20.301" level="INFO">Running command 'ozone sh prefix getacl 56851-target/link1/prefix1/ | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:36:23.230" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:36:23.230" level="INFO">${output} = READ WRITE</msg>
<status status="PASS" starttime="20250702 18:36:20.299" endtime="20250702 18:36:23.230"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:36:23.231" level="INFO">READ WRITE</msg>
<status status="PASS" starttime="20250702 18:36:23.230" endtime="20250702 18:36:23.231"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:36:23.231" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:36:23.231" endtime="20250702 18:36:23.231"/>
</kw>
<status status="PASS" starttime="20250702 18:36:20.298" endtime="20250702 18:36:23.232"/>
</kw>
<msg timestamp="20250702 18:36:23.232" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:36:20.298" endtime="20250702 18:36:23.232"/>
</kw>
<msg timestamp="20250702 18:36:23.232" level="INFO">${actual_acls} = READ WRITE</msg>
<status status="PASS" starttime="20250702 18:36:20.298" endtime="20250702 18:36:23.232"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250702 18:36:23.232" endtime="20250702 18:36:23.232"/>
</kw>
<status status="PASS" starttime="20250702 18:36:20.297" endtime="20250702 18:36:23.232"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>prefix</arg>
<arg>${source}/bucket1/prefix1/</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:36:23.236" level="INFO">Running command 'ozone sh prefix getacl 56851-source/bucket1/prefix1/ | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:36:26.312" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:36:26.312" level="INFO">${output} = READ WRITE</msg>
<status status="PASS" starttime="20250702 18:36:23.234" endtime="20250702 18:36:26.312"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:36:26.313" level="INFO">READ WRITE</msg>
<status status="PASS" starttime="20250702 18:36:26.313" endtime="20250702 18:36:26.313"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:36:26.314" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:36:26.313" endtime="20250702 18:36:26.314"/>
</kw>
<status status="PASS" starttime="20250702 18:36:23.233" endtime="20250702 18:36:26.314"/>
</kw>
<msg timestamp="20250702 18:36:26.314" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:36:23.233" endtime="20250702 18:36:26.314"/>
</kw>
<msg timestamp="20250702 18:36:26.314" level="INFO">${actual_acls} = READ WRITE</msg>
<status status="PASS" starttime="20250702 18:36:23.233" endtime="20250702 18:36:26.314"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250702 18:36:26.314" endtime="20250702 18:36:26.315"/>
</kw>
<status status="PASS" starttime="20250702 18:36:23.232" endtime="20250702 18:36:26.315"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh prefix addacl --acl group:group2:r ${source}/bucket1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:36:26.318" level="INFO">Running command 'ozone sh prefix addacl --acl group:group2:r 56851-source/bucket1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:36:29.204" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:36:29.204" level="INFO">${output} = ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20250702 18:36:26.316" endtime="20250702 18:36:29.204"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:36:29.205" level="INFO">ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20250702 18:36:29.204" endtime="20250702 18:36:29.205"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:36:29.205" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:36:29.205" endtime="20250702 18:36:29.205"/>
</kw>
<status status="PASS" starttime="20250702 18:36:26.315" endtime="20250702 18:36:29.205"/>
</kw>
<msg timestamp="20250702 18:36:29.205" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:36:26.315" endtime="20250702 18:36:29.205"/>
</kw>
<status status="PASS" starttime="20250702 18:36:26.315" endtime="20250702 18:36:29.206"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>prefix</arg>
<arg>${target}/link1/prefix1/</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>READ</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:36:29.209" level="INFO">Running command 'ozone sh prefix getacl 56851-target/link1/prefix1/ | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:36:32.360" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:36:32.360" level="INFO">${output} = READ</msg>
<status status="PASS" starttime="20250702 18:36:29.207" endtime="20250702 18:36:32.360"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:36:32.361" level="INFO">READ</msg>
<status status="PASS" starttime="20250702 18:36:32.361" endtime="20250702 18:36:32.361"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:36:32.362" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:36:32.361" endtime="20250702 18:36:32.362"/>
</kw>
<status status="PASS" starttime="20250702 18:36:29.207" endtime="20250702 18:36:32.362"/>
</kw>
<msg timestamp="20250702 18:36:32.362" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:36:29.207" endtime="20250702 18:36:32.362"/>
</kw>
<msg timestamp="20250702 18:36:32.362" level="INFO">${actual_acls} = READ</msg>
<status status="PASS" starttime="20250702 18:36:29.206" endtime="20250702 18:36:32.362"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250702 18:36:32.362" endtime="20250702 18:36:32.363"/>
</kw>
<status status="PASS" starttime="20250702 18:36:29.206" endtime="20250702 18:36:32.363"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>prefix</arg>
<arg>${source}/bucket1/prefix1/</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>READ</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:36:32.366" level="INFO">Running command 'ozone sh prefix getacl 56851-source/bucket1/prefix1/ | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:36:35.530" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:36:35.530" level="INFO">${output} = READ</msg>
<status status="PASS" starttime="20250702 18:36:32.364" endtime="20250702 18:36:35.530"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:36:35.531" level="INFO">READ</msg>
<status status="PASS" starttime="20250702 18:36:35.530" endtime="20250702 18:36:35.531"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:36:35.531" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:36:35.531" endtime="20250702 18:36:35.531"/>
</kw>
<status status="PASS" starttime="20250702 18:36:32.364" endtime="20250702 18:36:35.531"/>
</kw>
<msg timestamp="20250702 18:36:35.531" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:36:32.364" endtime="20250702 18:36:35.531"/>
</kw>
<msg timestamp="20250702 18:36:35.532" level="INFO">${actual_acls} = READ</msg>
<status status="PASS" starttime="20250702 18:36:32.363" endtime="20250702 18:36:35.532"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250702 18:36:35.532" endtime="20250702 18:36:35.532"/>
</kw>
<status status="PASS" starttime="20250702 18:36:32.363" endtime="20250702 18:36:35.532"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20250702 18:35:59.360" endtime="20250702 18:36:35.532"/>
</test>
<test id="s1-s2-s3-t11" name="Buckets and links share namespace" line="187">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get Security Enabled From Config" library="commonlib">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' != ''</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20250702 18:36:35.534" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:36:35.534" endtime="20250702 18:36:35.534"/>
</kw>
<kw name="Execute" library="os">
<var>${value}</var>
<arg>ozone getconf confKey ozone.security.enabled</arg>
<status status="NOT RUN" starttime="20250702 18:36:35.534" endtime="20250702 18:36:35.534"/>
</kw>
<if>
<branch type="IF" condition="'${value}' != 'true' and '${value}' != 'false'">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>false</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20250702 18:36:35.535" endtime="20250702 18:36:35.535"/>
</kw>
<status status="NOT RUN" starttime="20250702 18:36:35.534" endtime="20250702 18:36:35.535"/>
</branch>
<status status="NOT RUN" starttime="20250702 18:36:35.534" endtime="20250702 18:36:35.535"/>
</if>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${SECURITY_ENABLED}</arg>
<arg>${value}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20250702 18:36:35.535" endtime="20250702 18:36:35.535"/>
</kw>
<status status="PASS" starttime="20250702 18:36:35.534" endtime="20250702 18:36:35.535"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250702 18:36:35.535" endtime="20250702 18:36:35.535"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:36:35.538" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:36:35.542" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:36:35.542" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250702 18:36:35.536" endtime="20250702 18:36:35.542"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:36:35.542" level="INFO">scm</msg>
<status status="PASS" starttime="20250702 18:36:35.542" endtime="20250702 18:36:35.543"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:36:35.543" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:36:35.543" endtime="20250702 18:36:35.543"/>
</kw>
<status status="PASS" starttime="20250702 18:36:35.536" endtime="20250702 18:36:35.543"/>
</kw>
<msg timestamp="20250702 18:36:35.543" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:36:35.536" endtime="20250702 18:36:35.543"/>
</kw>
<msg timestamp="20250702 18:36:35.543" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250702 18:36:35.536" endtime="20250702 18:36:35.543"/>
</kw>
<msg timestamp="20250702 18:36:35.543" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250702 18:36:35.535" endtime="20250702 18:36:35.543"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250702 18:36:35.544" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250702 18:36:35.544" endtime="20250702 18:36:35.544"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:36:35.547" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:36:35.596" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:36:35.596" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:36:35.545" endtime="20250702 18:36:35.596"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:36:35.597" level="INFO"/>
<status status="PASS" starttime="20250702 18:36:35.596" endtime="20250702 18:36:35.597"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:36:35.597" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:36:35.597" endtime="20250702 18:36:35.597"/>
</kw>
<status status="PASS" starttime="20250702 18:36:35.545" endtime="20250702 18:36:35.597"/>
</kw>
<msg timestamp="20250702 18:36:35.598" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:36:35.545" endtime="20250702 18:36:35.598"/>
</kw>
<status status="PASS" starttime="20250702 18:36:35.544" endtime="20250702 18:36:35.598"/>
</kw>
<status status="PASS" starttime="20250702 18:36:35.544" endtime="20250702 18:36:35.598"/>
</kw>
<status status="PASS" starttime="20250702 18:36:35.533" endtime="20250702 18:36:35.598"/>
</kw>
<status status="PASS" starttime="20250702 18:36:35.533" endtime="20250702 18:36:35.598"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket2 ${target}/link2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:36:35.601" level="INFO">Running command 'ozone sh bucket link 56851-source/bucket2 56851-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:36:38.674" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:36:38.674" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:36:35.599" endtime="20250702 18:36:38.674"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:36:38.674" level="INFO"/>
<status status="PASS" starttime="20250702 18:36:38.674" endtime="20250702 18:36:38.675"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:36:38.675" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:36:38.675" endtime="20250702 18:36:38.675"/>
</kw>
<status status="PASS" starttime="20250702 18:36:35.598" endtime="20250702 18:36:38.675"/>
</kw>
<msg timestamp="20250702 18:36:38.675" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:36:35.598" endtime="20250702 18:36:38.675"/>
</kw>
<status status="PASS" starttime="20250702 18:36:35.598" endtime="20250702 18:36:38.675"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket create ${target}/link2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:36:38.678" level="INFO">Running command 'ozone sh bucket create 56851-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:36:41.633" level="INFO">${rc} = 255</msg>
<msg timestamp="20250702 18:36:41.633" level="INFO">${output} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20250702 18:36:38.676" endtime="20250702 18:36:41.633"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:36:41.634" level="INFO">BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20250702 18:36:41.633" endtime="20250702 18:36:41.634"/>
</kw>
<msg timestamp="20250702 18:36:41.634" level="INFO">${result} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20250702 18:36:38.675" endtime="20250702 18:36:41.634"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250702 18:36:41.634" endtime="20250702 18:36:41.634"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${target}/bucket3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:36:41.638" level="INFO">Running command 'ozone sh bucket create 56851-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:36:44.522" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:36:44.522" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:36:41.636" endtime="20250702 18:36:44.523"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:36:44.523" level="INFO"/>
<status status="PASS" starttime="20250702 18:36:44.523" endtime="20250702 18:36:44.523"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:36:44.524" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:36:44.524" endtime="20250702 18:36:44.524"/>
</kw>
<status status="PASS" starttime="20250702 18:36:41.635" endtime="20250702 18:36:44.524"/>
</kw>
<msg timestamp="20250702 18:36:44.524" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:36:41.635" endtime="20250702 18:36:44.524"/>
</kw>
<status status="PASS" starttime="20250702 18:36:41.634" endtime="20250702 18:36:44.524"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/bucket3</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:36:44.527" level="INFO">Running command 'ozone sh bucket link 56851-source/bucket1 56851-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:36:47.516" level="INFO">${rc} = 255</msg>
<msg timestamp="20250702 18:36:47.516" level="INFO">${output} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20250702 18:36:44.525" endtime="20250702 18:36:47.516"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:36:47.517" level="INFO">BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20250702 18:36:47.517" endtime="20250702 18:36:47.517"/>
</kw>
<msg timestamp="20250702 18:36:47.517" level="INFO">${result} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20250702 18:36:44.524" endtime="20250702 18:36:47.517"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250702 18:36:47.518" endtime="20250702 18:36:47.518"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20250702 18:36:35.533" endtime="20250702 18:36:47.518"/>
</test>
<test id="s1-s2-s3-t12" name="Can follow link with read access" line="196">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get Security Enabled From Config" library="commonlib">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' != ''</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20250702 18:36:47.520" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:36:47.520" endtime="20250702 18:36:47.520"/>
</kw>
<kw name="Execute" library="os">
<var>${value}</var>
<arg>ozone getconf confKey ozone.security.enabled</arg>
<status status="NOT RUN" starttime="20250702 18:36:47.520" endtime="20250702 18:36:47.520"/>
</kw>
<if>
<branch type="IF" condition="'${value}' != 'true' and '${value}' != 'false'">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>false</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20250702 18:36:47.520" endtime="20250702 18:36:47.520"/>
</kw>
<status status="NOT RUN" starttime="20250702 18:36:47.520" endtime="20250702 18:36:47.520"/>
</branch>
<status status="NOT RUN" starttime="20250702 18:36:47.520" endtime="20250702 18:36:47.521"/>
</if>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${SECURITY_ENABLED}</arg>
<arg>${value}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20250702 18:36:47.521" endtime="20250702 18:36:47.521"/>
</kw>
<status status="PASS" starttime="20250702 18:36:47.520" endtime="20250702 18:36:47.521"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250702 18:36:47.521" endtime="20250702 18:36:47.521"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:36:47.524" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:36:47.528" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:36:47.528" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250702 18:36:47.522" endtime="20250702 18:36:47.528"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:36:47.528" level="INFO">scm</msg>
<status status="PASS" starttime="20250702 18:36:47.528" endtime="20250702 18:36:47.528"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:36:47.529" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:36:47.528" endtime="20250702 18:36:47.529"/>
</kw>
<status status="PASS" starttime="20250702 18:36:47.522" endtime="20250702 18:36:47.529"/>
</kw>
<msg timestamp="20250702 18:36:47.529" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:36:47.522" endtime="20250702 18:36:47.529"/>
</kw>
<msg timestamp="20250702 18:36:47.529" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250702 18:36:47.521" endtime="20250702 18:36:47.529"/>
</kw>
<msg timestamp="20250702 18:36:47.529" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250702 18:36:47.521" endtime="20250702 18:36:47.529"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250702 18:36:47.530" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250702 18:36:47.529" endtime="20250702 18:36:47.530"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:36:47.533" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:36:47.547" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:36:47.547" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:36:47.531" endtime="20250702 18:36:47.547"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:36:47.548" level="INFO"/>
<status status="PASS" starttime="20250702 18:36:47.547" endtime="20250702 18:36:47.548"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:36:47.548" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:36:47.548" endtime="20250702 18:36:47.548"/>
</kw>
<status status="PASS" starttime="20250702 18:36:47.531" endtime="20250702 18:36:47.548"/>
</kw>
<msg timestamp="20250702 18:36:47.548" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:36:47.530" endtime="20250702 18:36:47.549"/>
</kw>
<status status="PASS" starttime="20250702 18:36:47.530" endtime="20250702 18:36:47.549"/>
</kw>
<status status="PASS" starttime="20250702 18:36:47.530" endtime="20250702 18:36:47.549"/>
</kw>
<status status="PASS" starttime="20250702 18:36:47.519" endtime="20250702 18:36:47.549"/>
</kw>
<status status="PASS" starttime="20250702 18:36:47.519" endtime="20250702 18:36:47.549"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Can follow link with read access</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Can follow link with read access">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:36:47.552" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:36:47.556" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:36:47.556" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:36:47.550" endtime="20250702 18:36:47.556"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:36:47.557" level="INFO"/>
<status status="PASS" starttime="20250702 18:36:47.556" endtime="20250702 18:36:47.557"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:36:47.557" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:36:47.557" endtime="20250702 18:36:47.557"/>
</kw>
<status status="PASS" starttime="20250702 18:36:47.550" endtime="20250702 18:36:47.557"/>
</kw>
<msg timestamp="20250702 18:36:47.557" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:36:47.550" endtime="20250702 18:36:47.557"/>
</kw>
<status status="PASS" starttime="20250702 18:36:47.549" endtime="20250702 18:36:47.557"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Get Security Enabled From Config" library="commonlib">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' != ''</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20250702 18:36:47.558" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:36:47.558" endtime="20250702 18:36:47.558"/>
</kw>
<kw name="Execute" library="os">
<var>${value}</var>
<arg>ozone getconf confKey ozone.security.enabled</arg>
<status status="NOT RUN" starttime="20250702 18:36:47.559" endtime="20250702 18:36:47.559"/>
</kw>
<if>
<branch type="IF" condition="'${value}' != 'true' and '${value}' != 'false'">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>false</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20250702 18:36:47.559" endtime="20250702 18:36:47.559"/>
</kw>
<status status="NOT RUN" starttime="20250702 18:36:47.559" endtime="20250702 18:36:47.559"/>
</branch>
<status status="NOT RUN" starttime="20250702 18:36:47.559" endtime="20250702 18:36:47.559"/>
</if>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${SECURITY_ENABLED}</arg>
<arg>${value}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20250702 18:36:47.559" endtime="20250702 18:36:47.559"/>
</kw>
<status status="PASS" starttime="20250702 18:36:47.558" endtime="20250702 18:36:47.559"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250702 18:36:47.559" endtime="20250702 18:36:47.559"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:36:47.562" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:36:47.566" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:36:47.566" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250702 18:36:47.560" endtime="20250702 18:36:47.566"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:36:47.566" level="INFO">scm</msg>
<status status="PASS" starttime="20250702 18:36:47.566" endtime="20250702 18:36:47.566"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:36:47.567" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:36:47.566" endtime="20250702 18:36:47.567"/>
</kw>
<status status="PASS" starttime="20250702 18:36:47.560" endtime="20250702 18:36:47.567"/>
</kw>
<msg timestamp="20250702 18:36:47.567" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:36:47.560" endtime="20250702 18:36:47.567"/>
</kw>
<msg timestamp="20250702 18:36:47.567" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250702 18:36:47.560" endtime="20250702 18:36:47.567"/>
</kw>
<msg timestamp="20250702 18:36:47.567" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250702 18:36:47.559" endtime="20250702 18:36:47.567"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250702 18:36:47.568" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250702 18:36:47.567" endtime="20250702 18:36:47.568"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:36:47.571" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser2.keytab testuser2/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:36:47.609" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:36:47.609" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:36:47.569" endtime="20250702 18:36:47.609"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:36:47.609" level="INFO"/>
<status status="PASS" starttime="20250702 18:36:47.609" endtime="20250702 18:36:47.609"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:36:47.610" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:36:47.610" endtime="20250702 18:36:47.610"/>
</kw>
<status status="PASS" starttime="20250702 18:36:47.569" endtime="20250702 18:36:47.610"/>
</kw>
<msg timestamp="20250702 18:36:47.610" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:36:47.568" endtime="20250702 18:36:47.610"/>
</kw>
<status status="PASS" starttime="20250702 18:36:47.568" endtime="20250702 18:36:47.610"/>
</kw>
<status status="PASS" starttime="20250702 18:36:47.568" endtime="20250702 18:36:47.610"/>
</kw>
<status status="PASS" starttime="20250702 18:36:47.558" endtime="20250702 18:36:47.610"/>
</kw>
<status status="PASS" starttime="20250702 18:36:47.558" endtime="20250702 18:36:47.610"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/readable-link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:36:47.613" level="INFO">Running command 'ozone sh key list 56851-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:36:50.746" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:36:50.746" level="INFO">${output} = [ {
  "volumeName" : "56851-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "owner" : "testuser",
  "dataSize" : 1062,
  "creationTime" : "2025-07-02T18:33:51.183Z"...</msg>
<status status="PASS" starttime="20250702 18:36:47.611" endtime="20250702 18:36:50.746"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:36:50.747" level="INFO">[ {
  "volumeName" : "56851-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "owner" : "testuser",
  "dataSize" : 1062,
  "creationTime" : "2025-07-02T18:33:51.183Z",
  "modificationTime" : "2025-07-02T18:33:52.523Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "minimumNodes" : 1,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "tags" : { },
  "file" : true
} ]</msg>
<status status="PASS" starttime="20250702 18:36:50.747" endtime="20250702 18:36:50.747"/>
</kw>
<msg timestamp="20250702 18:36:50.747" level="INFO">${result} = [ {
  "volumeName" : "56851-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "owner" : "testuser",
  "dataSize" : 1062,
  "creationTime" : "2025-07-02T18:33:51.183Z"...</msg>
<status status="PASS" starttime="20250702 18:36:47.610" endtime="20250702 18:36:50.747"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>key-in-readable-bucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250702 18:36:50.748" endtime="20250702 18:36:50.748"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/readable-link2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:36:50.751" level="INFO">Running command 'ozone sh key list 56851-target/readable-link2 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:36:54.016" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:36:54.016" level="INFO">${output} = [ {
  "volumeName" : "56851-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "owner" : "testuser",
  "dataSize" : 1062,
  "creationTime" : "2025-07-02T18:33:51.183Z"...</msg>
<status status="PASS" starttime="20250702 18:36:50.748" endtime="20250702 18:36:54.016"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:36:54.017" level="INFO">[ {
  "volumeName" : "56851-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "owner" : "testuser",
  "dataSize" : 1062,
  "creationTime" : "2025-07-02T18:33:51.183Z",
  "modificationTime" : "2025-07-02T18:33:52.523Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "minimumNodes" : 1,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "tags" : { },
  "file" : true
} ]</msg>
<status status="PASS" starttime="20250702 18:36:54.016" endtime="20250702 18:36:54.017"/>
</kw>
<msg timestamp="20250702 18:36:54.017" level="INFO">${result} = [ {
  "volumeName" : "56851-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "owner" : "testuser",
  "dataSize" : 1062,
  "creationTime" : "2025-07-02T18:33:51.183Z"...</msg>
<status status="PASS" starttime="20250702 18:36:50.748" endtime="20250702 18:36:54.017"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>key-in-readable-bucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250702 18:36:54.017" endtime="20250702 18:36:54.018"/>
</kw>
<status status="PASS" starttime="20250702 18:36:47.549" endtime="20250702 18:36:54.018"/>
</kw>
<status status="PASS" starttime="20250702 18:36:47.549" endtime="20250702 18:36:54.018"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20250702 18:36:47.518" endtime="20250702 18:36:54.018"/>
</test>
<test id="s1-s2-s3-t13" name="Cannot follow link without read access" line="199">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get Security Enabled From Config" library="commonlib">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' != ''</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20250702 18:36:54.020" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:36:54.020" endtime="20250702 18:36:54.020"/>
</kw>
<kw name="Execute" library="os">
<var>${value}</var>
<arg>ozone getconf confKey ozone.security.enabled</arg>
<status status="NOT RUN" starttime="20250702 18:36:54.020" endtime="20250702 18:36:54.020"/>
</kw>
<if>
<branch type="IF" condition="'${value}' != 'true' and '${value}' != 'false'">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>false</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20250702 18:36:54.020" endtime="20250702 18:36:54.020"/>
</kw>
<status status="NOT RUN" starttime="20250702 18:36:54.020" endtime="20250702 18:36:54.020"/>
</branch>
<status status="NOT RUN" starttime="20250702 18:36:54.020" endtime="20250702 18:36:54.020"/>
</if>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${SECURITY_ENABLED}</arg>
<arg>${value}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20250702 18:36:54.020" endtime="20250702 18:36:54.021"/>
</kw>
<status status="PASS" starttime="20250702 18:36:54.020" endtime="20250702 18:36:54.021"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250702 18:36:54.021" endtime="20250702 18:36:54.021"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:36:54.024" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:36:54.028" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:36:54.028" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250702 18:36:54.022" endtime="20250702 18:36:54.028"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:36:54.028" level="INFO">scm</msg>
<status status="PASS" starttime="20250702 18:36:54.028" endtime="20250702 18:36:54.028"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:36:54.029" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:36:54.028" endtime="20250702 18:36:54.029"/>
</kw>
<status status="PASS" starttime="20250702 18:36:54.022" endtime="20250702 18:36:54.029"/>
</kw>
<msg timestamp="20250702 18:36:54.029" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:36:54.021" endtime="20250702 18:36:54.029"/>
</kw>
<msg timestamp="20250702 18:36:54.029" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250702 18:36:54.021" endtime="20250702 18:36:54.029"/>
</kw>
<msg timestamp="20250702 18:36:54.029" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250702 18:36:54.021" endtime="20250702 18:36:54.029"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250702 18:36:54.030" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250702 18:36:54.029" endtime="20250702 18:36:54.030"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:36:54.033" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:36:54.068" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:36:54.068" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:36:54.031" endtime="20250702 18:36:54.068"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:36:54.069" level="INFO"/>
<status status="PASS" starttime="20250702 18:36:54.068" endtime="20250702 18:36:54.069"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:36:54.069" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:36:54.069" endtime="20250702 18:36:54.069"/>
</kw>
<status status="PASS" starttime="20250702 18:36:54.030" endtime="20250702 18:36:54.069"/>
</kw>
<msg timestamp="20250702 18:36:54.069" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:36:54.030" endtime="20250702 18:36:54.069"/>
</kw>
<status status="PASS" starttime="20250702 18:36:54.030" endtime="20250702 18:36:54.069"/>
</kw>
<status status="PASS" starttime="20250702 18:36:54.030" endtime="20250702 18:36:54.069"/>
</kw>
<status status="PASS" starttime="20250702 18:36:54.019" endtime="20250702 18:36:54.070"/>
</kw>
<status status="PASS" starttime="20250702 18:36:54.019" endtime="20250702 18:36:54.070"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Cannot follow link without read access</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Cannot follow link without read access">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:36:54.073" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:36:54.077" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:36:54.078" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:36:54.071" endtime="20250702 18:36:54.078"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:36:54.078" level="INFO"/>
<status status="PASS" starttime="20250702 18:36:54.078" endtime="20250702 18:36:54.078"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:36:54.079" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:36:54.078" endtime="20250702 18:36:54.079"/>
</kw>
<status status="PASS" starttime="20250702 18:36:54.071" endtime="20250702 18:36:54.079"/>
</kw>
<msg timestamp="20250702 18:36:54.079" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:36:54.071" endtime="20250702 18:36:54.079"/>
</kw>
<status status="PASS" starttime="20250702 18:36:54.070" endtime="20250702 18:36:54.079"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Get Security Enabled From Config" library="commonlib">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' != ''</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20250702 18:36:54.080" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:36:54.080" endtime="20250702 18:36:54.080"/>
</kw>
<kw name="Execute" library="os">
<var>${value}</var>
<arg>ozone getconf confKey ozone.security.enabled</arg>
<status status="NOT RUN" starttime="20250702 18:36:54.080" endtime="20250702 18:36:54.080"/>
</kw>
<if>
<branch type="IF" condition="'${value}' != 'true' and '${value}' != 'false'">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>false</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20250702 18:36:54.080" endtime="20250702 18:36:54.080"/>
</kw>
<status status="NOT RUN" starttime="20250702 18:36:54.080" endtime="20250702 18:36:54.080"/>
</branch>
<status status="NOT RUN" starttime="20250702 18:36:54.080" endtime="20250702 18:36:54.080"/>
</if>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${SECURITY_ENABLED}</arg>
<arg>${value}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20250702 18:36:54.081" endtime="20250702 18:36:54.081"/>
</kw>
<status status="PASS" starttime="20250702 18:36:54.080" endtime="20250702 18:36:54.081"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250702 18:36:54.081" endtime="20250702 18:36:54.081"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:36:54.084" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:36:54.087" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:36:54.087" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250702 18:36:54.082" endtime="20250702 18:36:54.087"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:36:54.088" level="INFO">scm</msg>
<status status="PASS" starttime="20250702 18:36:54.087" endtime="20250702 18:36:54.088"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:36:54.088" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:36:54.088" endtime="20250702 18:36:54.088"/>
</kw>
<status status="PASS" starttime="20250702 18:36:54.082" endtime="20250702 18:36:54.088"/>
</kw>
<msg timestamp="20250702 18:36:54.089" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:36:54.082" endtime="20250702 18:36:54.089"/>
</kw>
<msg timestamp="20250702 18:36:54.089" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250702 18:36:54.081" endtime="20250702 18:36:54.089"/>
</kw>
<msg timestamp="20250702 18:36:54.089" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250702 18:36:54.081" endtime="20250702 18:36:54.089"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250702 18:36:54.089" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250702 18:36:54.089" endtime="20250702 18:36:54.089"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:36:54.092" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser2.keytab testuser2/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:36:54.108" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:36:54.108" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:36:54.090" endtime="20250702 18:36:54.108"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:36:54.109" level="INFO"/>
<status status="PASS" starttime="20250702 18:36:54.108" endtime="20250702 18:36:54.109"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:36:54.110" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:36:54.109" endtime="20250702 18:36:54.110"/>
</kw>
<status status="PASS" starttime="20250702 18:36:54.090" endtime="20250702 18:36:54.110"/>
</kw>
<msg timestamp="20250702 18:36:54.110" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:36:54.090" endtime="20250702 18:36:54.110"/>
</kw>
<status status="PASS" starttime="20250702 18:36:54.090" endtime="20250702 18:36:54.110"/>
</kw>
<status status="PASS" starttime="20250702 18:36:54.089" endtime="20250702 18:36:54.110"/>
</kw>
<status status="PASS" starttime="20250702 18:36:54.079" endtime="20250702 18:36:54.110"/>
</kw>
<status status="PASS" starttime="20250702 18:36:54.079" endtime="20250702 18:36:54.110"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/link-to-unreadable-bucket</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:36:54.114" level="INFO">Running command 'ozone sh key list 56851-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:36:57.054" level="INFO">${rc} = 255</msg>
<msg timestamp="20250702 18:36:57.055" level="INFO">${output} = PERMISSION_DENIED User testuser2 doesn't have READ permission to access bucket Volume:56851-source Bucket:unreadable-bucket Key:</msg>
<status status="PASS" starttime="20250702 18:36:54.111" endtime="20250702 18:36:57.055"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:36:57.055" level="INFO">PERMISSION_DENIED User testuser2 doesn't have READ permission to access bucket Volume:56851-source Bucket:unreadable-bucket Key:</msg>
<status status="PASS" starttime="20250702 18:36:57.055" endtime="20250702 18:36:57.056"/>
</kw>
<msg timestamp="20250702 18:36:57.056" level="INFO">${result} = PERMISSION_DENIED User testuser2 doesn't have READ permission to access bucket Volume:56851-source Bucket:unreadable-bucket Key:</msg>
<status status="PASS" starttime="20250702 18:36:54.110" endtime="20250702 18:36:57.056"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250702 18:36:57.056" endtime="20250702 18:36:57.056"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${source}/unreadable-bucket</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:36:57.059" level="INFO">Running command 'ozone sh key list 56851-source/unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:36:59.958" level="INFO">${rc} = 255</msg>
<msg timestamp="20250702 18:36:59.958" level="INFO">${output} = PERMISSION_DENIED User testuser2 doesn't have READ permission to access bucket Volume:56851-source Bucket:unreadable-bucket </msg>
<status status="PASS" starttime="20250702 18:36:57.057" endtime="20250702 18:36:59.958"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:36:59.959" level="INFO">PERMISSION_DENIED User testuser2 doesn't have READ permission to access bucket Volume:56851-source Bucket:unreadable-bucket </msg>
<status status="PASS" starttime="20250702 18:36:59.958" endtime="20250702 18:36:59.959"/>
</kw>
<msg timestamp="20250702 18:36:59.959" level="INFO">${result} = PERMISSION_DENIED User testuser2 doesn't have READ permission to access bucket Volume:56851-source Bucket:unreadable-bucket </msg>
<status status="PASS" starttime="20250702 18:36:57.056" endtime="20250702 18:36:59.959"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250702 18:36:59.959" endtime="20250702 18:36:59.959"/>
</kw>
<status status="PASS" starttime="20250702 18:36:54.070" endtime="20250702 18:36:59.959"/>
</kw>
<status status="PASS" starttime="20250702 18:36:54.070" endtime="20250702 18:36:59.960"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20250702 18:36:54.018" endtime="20250702 18:36:59.960"/>
</test>
<test id="s1-s2-s3-t14" name="ACL verified on source and target bucket" line="202">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get Security Enabled From Config" library="commonlib">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' != ''</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20250702 18:36:59.962" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:36:59.962" endtime="20250702 18:36:59.962"/>
</kw>
<kw name="Execute" library="os">
<var>${value}</var>
<arg>ozone getconf confKey ozone.security.enabled</arg>
<status status="NOT RUN" starttime="20250702 18:36:59.962" endtime="20250702 18:36:59.962"/>
</kw>
<if>
<branch type="IF" condition="'${value}' != 'true' and '${value}' != 'false'">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>false</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20250702 18:36:59.962" endtime="20250702 18:36:59.962"/>
</kw>
<status status="NOT RUN" starttime="20250702 18:36:59.962" endtime="20250702 18:36:59.962"/>
</branch>
<status status="NOT RUN" starttime="20250702 18:36:59.962" endtime="20250702 18:36:59.962"/>
</if>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${SECURITY_ENABLED}</arg>
<arg>${value}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20250702 18:36:59.962" endtime="20250702 18:36:59.962"/>
</kw>
<status status="PASS" starttime="20250702 18:36:59.961" endtime="20250702 18:36:59.962"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250702 18:36:59.963" endtime="20250702 18:36:59.963"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:36:59.966" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:36:59.970" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:36:59.970" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250702 18:36:59.964" endtime="20250702 18:36:59.970"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:36:59.970" level="INFO">scm</msg>
<status status="PASS" starttime="20250702 18:36:59.970" endtime="20250702 18:36:59.971"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:36:59.971" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:36:59.971" endtime="20250702 18:36:59.971"/>
</kw>
<status status="PASS" starttime="20250702 18:36:59.964" endtime="20250702 18:36:59.971"/>
</kw>
<msg timestamp="20250702 18:36:59.971" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:36:59.963" endtime="20250702 18:36:59.971"/>
</kw>
<msg timestamp="20250702 18:36:59.971" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250702 18:36:59.963" endtime="20250702 18:36:59.971"/>
</kw>
<msg timestamp="20250702 18:36:59.972" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250702 18:36:59.963" endtime="20250702 18:36:59.972"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250702 18:36:59.972" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250702 18:36:59.972" endtime="20250702 18:36:59.972"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:36:59.975" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:37:00.010" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:37:00.010" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:36:59.973" endtime="20250702 18:37:00.010"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:37:00.011" level="INFO"/>
<status status="PASS" starttime="20250702 18:37:00.011" endtime="20250702 18:37:00.011"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:37:00.012" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:37:00.011" endtime="20250702 18:37:00.012"/>
</kw>
<status status="PASS" starttime="20250702 18:36:59.973" endtime="20250702 18:37:00.012"/>
</kw>
<msg timestamp="20250702 18:37:00.012" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:36:59.973" endtime="20250702 18:37:00.012"/>
</kw>
<status status="PASS" starttime="20250702 18:36:59.972" endtime="20250702 18:37:00.012"/>
</kw>
<status status="PASS" starttime="20250702 18:36:59.972" endtime="20250702 18:37:00.012"/>
</kw>
<status status="PASS" starttime="20250702 18:36:59.961" endtime="20250702 18:37:00.012"/>
</kw>
<status status="PASS" starttime="20250702 18:36:59.961" endtime="20250702 18:37:00.012"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>ACL verified on source and target bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="ACL verified on source and target bucket">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:37:00.016" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:37:00.020" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:37:00.020" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:37:00.014" endtime="20250702 18:37:00.020"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:37:00.021" level="INFO"/>
<status status="PASS" starttime="20250702 18:37:00.021" endtime="20250702 18:37:00.021"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:37:00.021" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:37:00.021" endtime="20250702 18:37:00.021"/>
</kw>
<status status="PASS" starttime="20250702 18:37:00.013" endtime="20250702 18:37:00.022"/>
</kw>
<msg timestamp="20250702 18:37:00.022" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:37:00.013" endtime="20250702 18:37:00.022"/>
</kw>
<status status="PASS" starttime="20250702 18:37:00.013" endtime="20250702 18:37:00.022"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Get Security Enabled From Config" library="commonlib">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' != ''</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20250702 18:37:00.023" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:37:00.023" endtime="20250702 18:37:00.023"/>
</kw>
<kw name="Execute" library="os">
<var>${value}</var>
<arg>ozone getconf confKey ozone.security.enabled</arg>
<status status="NOT RUN" starttime="20250702 18:37:00.023" endtime="20250702 18:37:00.023"/>
</kw>
<if>
<branch type="IF" condition="'${value}' != 'true' and '${value}' != 'false'">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>false</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20250702 18:37:00.023" endtime="20250702 18:37:00.023"/>
</kw>
<status status="NOT RUN" starttime="20250702 18:37:00.023" endtime="20250702 18:37:00.023"/>
</branch>
<status status="NOT RUN" starttime="20250702 18:37:00.023" endtime="20250702 18:37:00.023"/>
</if>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${SECURITY_ENABLED}</arg>
<arg>${value}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20250702 18:37:00.023" endtime="20250702 18:37:00.023"/>
</kw>
<status status="PASS" starttime="20250702 18:37:00.022" endtime="20250702 18:37:00.023"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250702 18:37:00.024" endtime="20250702 18:37:00.024"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:37:00.027" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:37:00.030" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:37:00.030" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250702 18:37:00.025" endtime="20250702 18:37:00.030"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:37:00.031" level="INFO">scm</msg>
<status status="PASS" starttime="20250702 18:37:00.030" endtime="20250702 18:37:00.031"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:37:00.031" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:37:00.031" endtime="20250702 18:37:00.031"/>
</kw>
<status status="PASS" starttime="20250702 18:37:00.025" endtime="20250702 18:37:00.031"/>
</kw>
<msg timestamp="20250702 18:37:00.031" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:37:00.025" endtime="20250702 18:37:00.032"/>
</kw>
<msg timestamp="20250702 18:37:00.032" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250702 18:37:00.024" endtime="20250702 18:37:00.032"/>
</kw>
<msg timestamp="20250702 18:37:00.032" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250702 18:37:00.024" endtime="20250702 18:37:00.032"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250702 18:37:00.032" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250702 18:37:00.032" endtime="20250702 18:37:00.032"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:37:00.035" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser2.keytab testuser2/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:37:00.060" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:37:00.060" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:37:00.033" endtime="20250702 18:37:00.060"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:37:00.061" level="INFO"/>
<status status="PASS" starttime="20250702 18:37:00.060" endtime="20250702 18:37:00.061"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:37:00.061" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:37:00.061" endtime="20250702 18:37:00.061"/>
</kw>
<status status="PASS" starttime="20250702 18:37:00.033" endtime="20250702 18:37:00.061"/>
</kw>
<msg timestamp="20250702 18:37:00.061" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:37:00.033" endtime="20250702 18:37:00.062"/>
</kw>
<status status="PASS" starttime="20250702 18:37:00.033" endtime="20250702 18:37:00.062"/>
</kw>
<status status="PASS" starttime="20250702 18:37:00.032" endtime="20250702 18:37:00.062"/>
</kw>
<status status="PASS" starttime="20250702 18:37:00.022" endtime="20250702 18:37:00.062"/>
</kw>
<status status="PASS" starttime="20250702 18:37:00.022" endtime="20250702 18:37:00.062"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${target}/link-to-unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:37:00.065" level="INFO">Running command 'ozone sh bucket info 56851-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:37:03.166" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:37:03.166" level="INFO">${output} = {
  "volumeName" : "56851-target",
  "name" : "link-to-unreadable-bucket",
  "sourceVolume" : "56851-source",
  "sourceBucket" : "unreadable-bucket",
  "creationTime" : "2025-07-02T18:33:52.622Z",
  "...</msg>
<status status="PASS" starttime="20250702 18:37:00.063" endtime="20250702 18:37:03.166"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:37:03.167" level="INFO">{
  "volumeName" : "56851-target",
  "name" : "link-to-unreadable-bucket",
  "sourceVolume" : "56851-source",
  "sourceBucket" : "unreadable-bucket",
  "creationTime" : "2025-07-02T18:33:52.622Z",
  "modificationTime" : "2025-07-02T18:33:52.622Z",
  "owner" : "testuser",
  "link" : true
}</msg>
<status status="PASS" starttime="20250702 18:37:03.167" endtime="20250702 18:37:03.167"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:37:03.168" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:37:03.167" endtime="20250702 18:37:03.168"/>
</kw>
<status status="PASS" starttime="20250702 18:37:00.062" endtime="20250702 18:37:03.168"/>
</kw>
<msg timestamp="20250702 18:37:03.168" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:37:00.062" endtime="20250702 18:37:03.168"/>
</kw>
<msg timestamp="20250702 18:37:03.168" level="INFO">${result} = {
  "volumeName" : "56851-target",
  "name" : "link-to-unreadable-bucket",
  "sourceVolume" : "56851-source",
  "sourceBucket" : "unreadable-bucket",
  "creationTime" : "2025-07-02T18:33:52.622Z",
  "...</msg>
<status status="PASS" starttime="20250702 18:37:00.062" endtime="20250702 18:37:03.168"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>link-to-unreadable-bucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250702 18:37:03.168" endtime="20250702 18:37:03.168"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250702 18:37:03.168" endtime="20250702 18:37:03.169"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${source}/unreadable-bucket</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:37:03.171" level="INFO">Running command 'ozone sh bucket info 56851-source/unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:37:06.031" level="INFO">${rc} = 255</msg>
<msg timestamp="20250702 18:37:06.031" level="INFO">${output} = PERMISSION_DENIED User testuser2 doesn't have READ permission to access bucket Volume:56851-source Bucket:unreadable-bucket </msg>
<status status="PASS" starttime="20250702 18:37:03.169" endtime="20250702 18:37:06.031"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:37:06.032" level="INFO">PERMISSION_DENIED User testuser2 doesn't have READ permission to access bucket Volume:56851-source Bucket:unreadable-bucket </msg>
<status status="PASS" starttime="20250702 18:37:06.032" endtime="20250702 18:37:06.032"/>
</kw>
<msg timestamp="20250702 18:37:06.033" level="INFO">${result} = PERMISSION_DENIED User testuser2 doesn't have READ permission to access bucket Volume:56851-source Bucket:unreadable-bucket </msg>
<status status="PASS" starttime="20250702 18:37:03.169" endtime="20250702 18:37:06.033"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250702 18:37:06.033" endtime="20250702 18:37:06.033"/>
</kw>
<status status="PASS" starttime="20250702 18:37:00.013" endtime="20250702 18:37:06.033"/>
</kw>
<status status="PASS" starttime="20250702 18:37:00.012" endtime="20250702 18:37:06.033"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20250702 18:36:59.960" endtime="20250702 18:37:06.033"/>
</test>
<test id="s1-s2-s3-t15" name="Loop in link chain is detected" line="205">
<kw name="Create link loop" type="SETUP">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get Security Enabled From Config" library="commonlib">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' != ''</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20250702 18:37:06.036" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:37:06.036" endtime="20250702 18:37:06.036"/>
</kw>
<kw name="Execute" library="os">
<var>${value}</var>
<arg>ozone getconf confKey ozone.security.enabled</arg>
<status status="NOT RUN" starttime="20250702 18:37:06.036" endtime="20250702 18:37:06.036"/>
</kw>
<if>
<branch type="IF" condition="'${value}' != 'true' and '${value}' != 'false'">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>false</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20250702 18:37:06.036" endtime="20250702 18:37:06.036"/>
</kw>
<status status="NOT RUN" starttime="20250702 18:37:06.036" endtime="20250702 18:37:06.036"/>
</branch>
<status status="NOT RUN" starttime="20250702 18:37:06.036" endtime="20250702 18:37:06.036"/>
</if>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${SECURITY_ENABLED}</arg>
<arg>${value}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20250702 18:37:06.036" endtime="20250702 18:37:06.036"/>
</kw>
<status status="PASS" starttime="20250702 18:37:06.035" endtime="20250702 18:37:06.036"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250702 18:37:06.036" endtime="20250702 18:37:06.037"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:37:06.040" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:37:06.043" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:37:06.043" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250702 18:37:06.038" endtime="20250702 18:37:06.043"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:37:06.044" level="INFO">scm</msg>
<status status="PASS" starttime="20250702 18:37:06.044" endtime="20250702 18:37:06.044"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:37:06.045" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:37:06.044" endtime="20250702 18:37:06.045"/>
</kw>
<status status="PASS" starttime="20250702 18:37:06.037" endtime="20250702 18:37:06.045"/>
</kw>
<msg timestamp="20250702 18:37:06.045" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:37:06.037" endtime="20250702 18:37:06.045"/>
</kw>
<msg timestamp="20250702 18:37:06.045" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250702 18:37:06.037" endtime="20250702 18:37:06.045"/>
</kw>
<msg timestamp="20250702 18:37:06.045" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250702 18:37:06.037" endtime="20250702 18:37:06.045"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250702 18:37:06.046" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250702 18:37:06.045" endtime="20250702 18:37:06.046"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:37:06.049" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:37:06.062" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:37:06.062" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:37:06.047" endtime="20250702 18:37:06.062"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:37:06.063" level="INFO"/>
<status status="PASS" starttime="20250702 18:37:06.062" endtime="20250702 18:37:06.063"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:37:06.063" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:37:06.063" endtime="20250702 18:37:06.063"/>
</kw>
<status status="PASS" starttime="20250702 18:37:06.047" endtime="20250702 18:37:06.063"/>
</kw>
<msg timestamp="20250702 18:37:06.064" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:37:06.046" endtime="20250702 18:37:06.064"/>
</kw>
<status status="PASS" starttime="20250702 18:37:06.046" endtime="20250702 18:37:06.064"/>
</kw>
<status status="PASS" starttime="20250702 18:37:06.046" endtime="20250702 18:37:06.064"/>
</kw>
<status status="PASS" starttime="20250702 18:37:06.035" endtime="20250702 18:37:06.064"/>
</kw>
<status status="PASS" starttime="20250702 18:37:06.034" endtime="20250702 18:37:06.064"/>
</kw>
<kw name="Ozone Shell Batch" library="shell">
<arg>bucket link ${target}/loop1 ${target}/loop2</arg>
<arg>bucket link ${target}/loop2 ${target}/loop3</arg>
<arg>bucket link ${target}/loop3 ${target}/loop1</arg>
<kw name="Catenate" library="BuiltIn">
<var>${cmd}</var>
<arg>SEPARATOR=' --execute '</arg>
<arg>@{commands}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20250702 18:37:06.065" level="INFO">${cmd} = bucket link 56851-target/loop1 56851-target/loop2' --execute 'bucket link 56851-target/loop2 56851-target/loop3' --execute 'bucket link 56851-target/loop3 56851-target/loop1</msg>
<status status="PASS" starttime="20250702 18:37:06.064" endtime="20250702 18:37:06.065"/>
</kw>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>ozone sh --execute '${cmd}'</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>ozone sh --execute '${cmd}'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:37:06.067" level="INFO">Running command 'ozone sh --execute 'bucket link 56851-target/loop1 56851-target/loop2' --execute 'bucket link 56851-target/loop2 56851-target/loop3' --execute 'bucket link 56851-target/loop3 56851-target/loop1' 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:37:09.234" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:37:09.235" level="INFO">${output} = bucket link 56851-target/loop1 56851-target/loop2
bucket link 56851-target/loop2 56851-target/loop3
bucket link 56851-target/loop3 56851-target/loop1</msg>
<status status="PASS" starttime="20250702 18:37:06.065" endtime="20250702 18:37:09.235"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:37:09.235" level="INFO">bucket link 56851-target/loop1 56851-target/loop2
bucket link 56851-target/loop2 56851-target/loop3
bucket link 56851-target/loop3 56851-target/loop1</msg>
<status status="PASS" starttime="20250702 18:37:09.235" endtime="20250702 18:37:09.235"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:37:09.236" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:37:09.236" endtime="20250702 18:37:09.236"/>
</kw>
<status status="PASS" starttime="20250702 18:37:06.065" endtime="20250702 18:37:09.236"/>
</kw>
<msg timestamp="20250702 18:37:09.236" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:37:06.065" endtime="20250702 18:37:09.236"/>
</kw>
<status status="PASS" starttime="20250702 18:37:06.064" endtime="20250702 18:37:09.236"/>
</kw>
<status status="PASS" starttime="20250702 18:37:06.034" endtime="20250702 18:37:09.236"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/loop2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:37:09.239" level="INFO">Running command 'ozone sh key list 56851-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:37:12.192" level="INFO">${rc} = 255</msg>
<msg timestamp="20250702 18:37:12.192" level="INFO">${output} = DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" starttime="20250702 18:37:09.237" endtime="20250702 18:37:12.192"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:37:12.194" level="INFO">DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" starttime="20250702 18:37:12.192" endtime="20250702 18:37:12.194"/>
</kw>
<msg timestamp="20250702 18:37:12.194" level="INFO">${result} = DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" starttime="20250702 18:37:09.236" endtime="20250702 18:37:12.194"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>DETECTED_LOOP</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250702 18:37:12.194" endtime="20250702 18:37:12.194"/>
</kw>
<kw name="Delete link loop" type="TEARDOWN">
<kw name="Ozone Shell Batch" library="shell">
<arg>bucket delete ${target}/loop1</arg>
<arg>bucket delete ${target}/loop2</arg>
<arg>bucket delete ${target}/loop3</arg>
<kw name="Catenate" library="BuiltIn">
<var>${cmd}</var>
<arg>SEPARATOR=' --execute '</arg>
<arg>@{commands}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20250702 18:37:12.195" level="INFO">${cmd} = bucket delete 56851-target/loop1' --execute 'bucket delete 56851-target/loop2' --execute 'bucket delete 56851-target/loop3</msg>
<status status="PASS" starttime="20250702 18:37:12.195" endtime="20250702 18:37:12.195"/>
</kw>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>ozone sh --execute '${cmd}'</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>ozone sh --execute '${cmd}'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:37:12.198" level="INFO">Running command 'ozone sh --execute 'bucket delete 56851-target/loop1' --execute 'bucket delete 56851-target/loop2' --execute 'bucket delete 56851-target/loop3' 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:37:15.524" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:37:15.524" level="INFO">${output} = bucket delete 56851-target/loop1
Bucket loop1 is deleted
bucket delete 56851-target/loop2
Bucket loop2 is deleted
bucket delete 56851-target/loop3
Bucket loop3 is deleted</msg>
<status status="PASS" starttime="20250702 18:37:12.196" endtime="20250702 18:37:15.524"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:37:15.525" level="INFO">bucket delete 56851-target/loop1
Bucket loop1 is deleted
bucket delete 56851-target/loop2
Bucket loop2 is deleted
bucket delete 56851-target/loop3
Bucket loop3 is deleted</msg>
<status status="PASS" starttime="20250702 18:37:15.525" endtime="20250702 18:37:15.525"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:37:15.526" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:37:15.525" endtime="20250702 18:37:15.526"/>
</kw>
<status status="PASS" starttime="20250702 18:37:12.196" endtime="20250702 18:37:15.526"/>
</kw>
<msg timestamp="20250702 18:37:15.526" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:37:12.195" endtime="20250702 18:37:15.526"/>
</kw>
<status status="PASS" starttime="20250702 18:37:12.195" endtime="20250702 18:37:15.526"/>
</kw>
<status status="PASS" starttime="20250702 18:37:12.194" endtime="20250702 18:37:15.526"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20250702 18:37:06.034" endtime="20250702 18:37:15.526"/>
</test>
<test id="s1-s2-s3-t16" name="Multiple links to same bucket are allowed" line="211">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get Security Enabled From Config" library="commonlib">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' != ''</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20250702 18:37:15.528" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:37:15.528" endtime="20250702 18:37:15.528"/>
</kw>
<kw name="Execute" library="os">
<var>${value}</var>
<arg>ozone getconf confKey ozone.security.enabled</arg>
<status status="NOT RUN" starttime="20250702 18:37:15.529" endtime="20250702 18:37:15.529"/>
</kw>
<if>
<branch type="IF" condition="'${value}' != 'true' and '${value}' != 'false'">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>false</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20250702 18:37:15.529" endtime="20250702 18:37:15.529"/>
</kw>
<status status="NOT RUN" starttime="20250702 18:37:15.529" endtime="20250702 18:37:15.529"/>
</branch>
<status status="NOT RUN" starttime="20250702 18:37:15.529" endtime="20250702 18:37:15.529"/>
</if>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${SECURITY_ENABLED}</arg>
<arg>${value}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20250702 18:37:15.529" endtime="20250702 18:37:15.529"/>
</kw>
<status status="PASS" starttime="20250702 18:37:15.528" endtime="20250702 18:37:15.529"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250702 18:37:15.529" endtime="20250702 18:37:15.529"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:37:15.533" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:37:15.536" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:37:15.536" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250702 18:37:15.530" endtime="20250702 18:37:15.536"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:37:15.537" level="INFO">scm</msg>
<status status="PASS" starttime="20250702 18:37:15.536" endtime="20250702 18:37:15.537"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:37:15.537" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:37:15.537" endtime="20250702 18:37:15.538"/>
</kw>
<status status="PASS" starttime="20250702 18:37:15.530" endtime="20250702 18:37:15.538"/>
</kw>
<msg timestamp="20250702 18:37:15.538" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:37:15.530" endtime="20250702 18:37:15.538"/>
</kw>
<msg timestamp="20250702 18:37:15.538" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250702 18:37:15.530" endtime="20250702 18:37:15.538"/>
</kw>
<msg timestamp="20250702 18:37:15.538" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250702 18:37:15.529" endtime="20250702 18:37:15.538"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250702 18:37:15.538" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250702 18:37:15.538" endtime="20250702 18:37:15.538"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:37:15.541" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:37:15.597" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:37:15.597" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:37:15.539" endtime="20250702 18:37:15.597"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:37:15.598" level="INFO"/>
<status status="PASS" starttime="20250702 18:37:15.598" endtime="20250702 18:37:15.598"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:37:15.598" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:37:15.598" endtime="20250702 18:37:15.598"/>
</kw>
<status status="PASS" starttime="20250702 18:37:15.539" endtime="20250702 18:37:15.599"/>
</kw>
<msg timestamp="20250702 18:37:15.599" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:37:15.539" endtime="20250702 18:37:15.599"/>
</kw>
<status status="PASS" starttime="20250702 18:37:15.539" endtime="20250702 18:37:15.599"/>
</kw>
<status status="PASS" starttime="20250702 18:37:15.539" endtime="20250702 18:37:15.599"/>
</kw>
<status status="PASS" starttime="20250702 18:37:15.528" endtime="20250702 18:37:15.599"/>
</kw>
<status status="PASS" starttime="20250702 18:37:15.527" endtime="20250702 18:37:15.599"/>
</kw>
<kw name="Ozone Shell Batch" library="shell">
<arg>bucket link ${source}/bucket1 ${target}/link3</arg>
<arg>key put ${target}/link3/key3 /etc/group</arg>
<kw name="Catenate" library="BuiltIn">
<var>${cmd}</var>
<arg>SEPARATOR=' --execute '</arg>
<arg>@{commands}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20250702 18:37:15.600" level="INFO">${cmd} = bucket link 56851-source/bucket1 56851-target/link3' --execute 'key put 56851-target/link3/key3 /etc/group</msg>
<status status="PASS" starttime="20250702 18:37:15.599" endtime="20250702 18:37:15.600"/>
</kw>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>ozone sh --execute '${cmd}'</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>ozone sh --execute '${cmd}'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:37:15.602" level="INFO">Running command 'ozone sh --execute 'bucket link 56851-source/bucket1 56851-target/link3' --execute 'key put 56851-target/link3/key3 /etc/group' 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:37:20.467" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:37:20.467" level="INFO">${output} = bucket link 56851-source/bucket1 56851-target/link3
key put 56851-target/link3/key3 /etc/group</msg>
<status status="PASS" starttime="20250702 18:37:15.600" endtime="20250702 18:37:20.467"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:37:20.468" level="INFO">bucket link 56851-source/bucket1 56851-target/link3
key put 56851-target/link3/key3 /etc/group</msg>
<status status="PASS" starttime="20250702 18:37:20.468" endtime="20250702 18:37:20.468"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:37:20.469" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:37:20.468" endtime="20250702 18:37:20.469"/>
</kw>
<status status="PASS" starttime="20250702 18:37:15.600" endtime="20250702 18:37:20.469"/>
</kw>
<msg timestamp="20250702 18:37:20.469" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:37:15.600" endtime="20250702 18:37:20.469"/>
</kw>
<status status="PASS" starttime="20250702 18:37:15.599" endtime="20250702 18:37:20.469"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${target}/link1/key3</arg>
<arg>/etc/group</arg>
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250702 18:37:20.470" level="INFO">${postfix} = 71840</msg>
<status status="PASS" starttime="20250702 18:37:20.470" endtime="20250702 18:37:20.470"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250702 18:37:20.471" level="INFO">${tmpfile} = /tmp/tempkey-71840</msg>
<status status="PASS" starttime="20250702 18:37:20.470" endtime="20250702 18:37:20.471"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone ${cmd} ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:37:20.474" level="INFO">Running command 'ozone sh key get 56851-target/link1/key3 /tmp/tempkey-71840 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:37:24.938" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:37:24.938" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:37:20.472" endtime="20250702 18:37:24.938"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:37:24.939" level="INFO"/>
<status status="PASS" starttime="20250702 18:37:24.938" endtime="20250702 18:37:24.939"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:37:24.939" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:37:24.939" endtime="20250702 18:37:24.939"/>
</kw>
<status status="PASS" starttime="20250702 18:37:20.471" endtime="20250702 18:37:24.939"/>
</kw>
<msg timestamp="20250702 18:37:24.939" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:37:20.471" endtime="20250702 18:37:24.939"/>
</kw>
<status status="PASS" starttime="20250702 18:37:20.471" endtime="20250702 18:37:24.939"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20250702 18:37:24.942" level="INFO">Running command 'diff -q /etc/group /tmp/tempkey-71840 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:37:24.945" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20250702 18:37:24.940" endtime="20250702 18:37:24.945"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:37:24.949" level="INFO">Running command 'rm -f /tmp/tempkey-71840 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:37:24.952" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:37:24.952" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:37:24.947" endtime="20250702 18:37:24.952"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:37:24.953" level="INFO"/>
<status status="PASS" starttime="20250702 18:37:24.952" endtime="20250702 18:37:24.953"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:37:24.953" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:37:24.953" endtime="20250702 18:37:24.953"/>
</kw>
<status status="PASS" starttime="20250702 18:37:24.946" endtime="20250702 18:37:24.953"/>
</kw>
<msg timestamp="20250702 18:37:24.953" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:37:24.946" endtime="20250702 18:37:24.953"/>
</kw>
<status status="PASS" starttime="20250702 18:37:24.945" endtime="20250702 18:37:24.953"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20250702 18:37:24.954" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20250702 18:37:24.953" endtime="20250702 18:37:24.954"/>
</kw>
<msg timestamp="20250702 18:37:24.954" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20250702 18:37:20.470" endtime="20250702 18:37:24.954"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${matches}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20250702 18:37:24.954" endtime="20250702 18:37:24.954"/>
</kw>
<status status="PASS" starttime="20250702 18:37:20.469" endtime="20250702 18:37:24.954"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20250702 18:37:15.527" endtime="20250702 18:37:24.954"/>
</test>
<test id="s1-s2-s3-t17" name="Source bucket not affected by deleting link" line="216">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get Security Enabled From Config" library="commonlib">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' != ''</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20250702 18:37:24.956" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:37:24.956" endtime="20250702 18:37:24.956"/>
</kw>
<kw name="Execute" library="os">
<var>${value}</var>
<arg>ozone getconf confKey ozone.security.enabled</arg>
<status status="NOT RUN" starttime="20250702 18:37:24.957" endtime="20250702 18:37:24.957"/>
</kw>
<if>
<branch type="IF" condition="'${value}' != 'true' and '${value}' != 'false'">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>false</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20250702 18:37:24.957" endtime="20250702 18:37:24.957"/>
</kw>
<status status="NOT RUN" starttime="20250702 18:37:24.957" endtime="20250702 18:37:24.957"/>
</branch>
<status status="NOT RUN" starttime="20250702 18:37:24.957" endtime="20250702 18:37:24.957"/>
</if>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${SECURITY_ENABLED}</arg>
<arg>${value}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20250702 18:37:24.957" endtime="20250702 18:37:24.957"/>
</kw>
<status status="PASS" starttime="20250702 18:37:24.956" endtime="20250702 18:37:24.957"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250702 18:37:24.957" endtime="20250702 18:37:24.957"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:37:24.960" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:37:24.964" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:37:24.964" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250702 18:37:24.958" endtime="20250702 18:37:24.964"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:37:24.964" level="INFO">scm</msg>
<status status="PASS" starttime="20250702 18:37:24.964" endtime="20250702 18:37:24.964"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:37:24.965" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:37:24.965" endtime="20250702 18:37:24.965"/>
</kw>
<status status="PASS" starttime="20250702 18:37:24.958" endtime="20250702 18:37:24.965"/>
</kw>
<msg timestamp="20250702 18:37:24.965" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:37:24.958" endtime="20250702 18:37:24.965"/>
</kw>
<msg timestamp="20250702 18:37:24.965" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250702 18:37:24.958" endtime="20250702 18:37:24.965"/>
</kw>
<msg timestamp="20250702 18:37:24.965" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250702 18:37:24.957" endtime="20250702 18:37:24.965"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250702 18:37:24.966" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250702 18:37:24.966" endtime="20250702 18:37:24.966"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:37:24.969" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:37:24.984" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:37:24.984" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:37:24.967" endtime="20250702 18:37:24.984"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:37:24.986" level="INFO"/>
<status status="PASS" starttime="20250702 18:37:24.985" endtime="20250702 18:37:24.986"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:37:24.986" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:37:24.986" endtime="20250702 18:37:24.986"/>
</kw>
<status status="PASS" starttime="20250702 18:37:24.967" endtime="20250702 18:37:24.986"/>
</kw>
<msg timestamp="20250702 18:37:24.986" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:37:24.967" endtime="20250702 18:37:24.986"/>
</kw>
<status status="PASS" starttime="20250702 18:37:24.966" endtime="20250702 18:37:24.987"/>
</kw>
<status status="PASS" starttime="20250702 18:37:24.966" endtime="20250702 18:37:24.987"/>
</kw>
<status status="PASS" starttime="20250702 18:37:24.956" endtime="20250702 18:37:24.987"/>
</kw>
<status status="PASS" starttime="20250702 18:37:24.955" endtime="20250702 18:37:24.987"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:37:24.990" level="INFO">Running command 'ozone sh bucket delete 56851-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:37:27.924" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:37:27.924" level="INFO">${output} = Bucket link1 is deleted</msg>
<status status="PASS" starttime="20250702 18:37:24.988" endtime="20250702 18:37:27.924"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:37:27.925" level="INFO">Bucket link1 is deleted</msg>
<status status="PASS" starttime="20250702 18:37:27.925" endtime="20250702 18:37:27.925"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:37:27.926" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:37:27.926" endtime="20250702 18:37:27.926"/>
</kw>
<status status="PASS" starttime="20250702 18:37:24.987" endtime="20250702 18:37:27.926"/>
</kw>
<msg timestamp="20250702 18:37:27.926" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:37:24.987" endtime="20250702 18:37:27.926"/>
</kw>
<status status="PASS" starttime="20250702 18:37:24.987" endtime="20250702 18:37:27.926"/>
</kw>
<kw name="Execute" library="os">
<var>${bucket_list}</var>
<arg>ozone sh bucket list ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:37:27.929" level="INFO">Running command 'ozone sh bucket list 56851-target 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:37:31.204" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:37:31.204" level="INFO">${output} = [ {
  "metadata" : { },
  "volumeName" : "56851-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "listCacheSize" : 1000,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "...</msg>
<status status="PASS" starttime="20250702 18:37:27.927" endtime="20250702 18:37:31.204"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:37:31.205" level="INFO">[ {
  "metadata" : { },
  "volumeName" : "56851-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "listCacheSize" : 1000,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2025-07-02T18:36:44.425Z",
  "modificationTime" : "2025-07-02T18:36:44.425Z",
  "sourcePathExist" : true,
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "FILE_SYSTEM_OPTIMIZED",
  "owner" : "testuser",
  "link" : false
}, {
  "volumeName" : "56851-target",
  "name" : "dangling-link",
  "sourceVolume" : "56851-source",
  "sourceBucket" : "no-such-bucket",
  "creationTime" : "2025-07-02T18:33:56.076Z",
  "modificationTime" : "2025-07-02T18:33:56.076Z",
  "owner" : "testuser",
  "link" : true
}, {
  "volumeName" : "56851-target",
  "name" : "link-to-unreadable-bucket",
  "sourceVolume" : "56851-source",
  "sourceBucket" : "unreadable-bucket",
  "creationTime" : "2025-07-02T18:33:52.622Z",
  "modificationTime" : "2025-07-02T18:33:52.622Z",
  "owner" : "testuser",
  "link" : true
}, {
  "volumeName" : "56851-target",
  "name" : "link2",
  "sourceVolume" : "56851-source",
  "sourceBucket" : "bucket2",
  "creationTime" : "2025-07-02T18:36:38.578Z",
  "modificationTime" : "2025-07-02T18:36:38.578Z",
  "owner" : "testuser",
  "link" : true
}, {
  "volumeName" : "56851-target",
  "name" : "link3",
  "sourceVolume" : "56851-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2025-07-02T18:37:18.661Z",
  "modificationTime" : "2025-07-02T18:37:18.661Z",
  "owner" : "testuser",
  "link" : true
}, {
  "volumeName" : "56851-target",
  "name" : "readable-link",
  "sourceVolume" : "56851-source",
  "sourceBucket" : "readable-bucket",
  "creationTime" : "2025-07-02T18:33:52.695Z",
  "modificationTime" : "2025-07-02T18:33:52.695Z",
  "owner" : "testuser",
  "link" : true
}, {
  "volumeName" : "56851-target",
  "name" : "readable-link2",
  "sourceVolume" : "56851-source",
  "sourceBucket" : "readable-bucket",
  "creationTime" : "2025-07-02T18:33:52.733Z",
  "modificationTime" : "2025-07-02T18:33:52.733Z",
  "owner" : "testuser",
  "link" : true
} ]</msg>
<status status="PASS" starttime="20250702 18:37:31.204" endtime="20250702 18:37:31.205"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:37:31.205" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:37:31.205" endtime="20250702 18:37:31.205"/>
</kw>
<status status="PASS" starttime="20250702 18:37:27.927" endtime="20250702 18:37:31.206"/>
</kw>
<msg timestamp="20250702 18:37:31.206" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:37:27.927" endtime="20250702 18:37:31.206"/>
</kw>
<msg timestamp="20250702 18:37:31.206" level="INFO">${bucket_list} = [ {
  "metadata" : { },
  "volumeName" : "56851-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "listCacheSize" : 1000,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "...</msg>
<status status="PASS" starttime="20250702 18:37:27.926" endtime="20250702 18:37:31.206"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${bucket_list}</arg>
<arg>link1</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250702 18:37:31.206" endtime="20250702 18:37:31.206"/>
</kw>
<kw name="Execute" library="os">
<var>${source_list}</var>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:37:31.209" level="INFO">Running command 'ozone sh key list 56851-source/bucket1 | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:37:34.716" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:37:34.717" level="INFO">${output} = .Trash/
.Trash/testuser/
key1
key3</msg>
<status status="PASS" starttime="20250702 18:37:31.207" endtime="20250702 18:37:34.717"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:37:34.718" level="INFO">.Trash/
.Trash/testuser/
key1
key3</msg>
<status status="PASS" starttime="20250702 18:37:34.717" endtime="20250702 18:37:34.718"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:37:34.718" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:37:34.718" endtime="20250702 18:37:34.718"/>
</kw>
<status status="PASS" starttime="20250702 18:37:31.207" endtime="20250702 18:37:34.718"/>
</kw>
<msg timestamp="20250702 18:37:34.718" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:37:31.207" endtime="20250702 18:37:34.718"/>
</kw>
<msg timestamp="20250702 18:37:34.718" level="INFO">${source_list} = .Trash/
.Trash/testuser/
key1
key3</msg>
<status status="PASS" starttime="20250702 18:37:31.206" endtime="20250702 18:37:34.719"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250702 18:37:34.719" endtime="20250702 18:37:34.719"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20250702 18:37:24.955" endtime="20250702 18:37:34.719"/>
</test>
<test id="s1-s2-s3-t18" name="Setting bucket property on link not allowed" line="223">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get Security Enabled From Config" library="commonlib">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' != ''</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20250702 18:37:34.721" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:37:34.721" endtime="20250702 18:37:34.721"/>
</kw>
<kw name="Execute" library="os">
<var>${value}</var>
<arg>ozone getconf confKey ozone.security.enabled</arg>
<status status="NOT RUN" starttime="20250702 18:37:34.721" endtime="20250702 18:37:34.721"/>
</kw>
<if>
<branch type="IF" condition="'${value}' != 'true' and '${value}' != 'false'">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>false</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20250702 18:37:34.722" endtime="20250702 18:37:34.722"/>
</kw>
<status status="NOT RUN" starttime="20250702 18:37:34.722" endtime="20250702 18:37:34.722"/>
</branch>
<status status="NOT RUN" starttime="20250702 18:37:34.721" endtime="20250702 18:37:34.722"/>
</if>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${SECURITY_ENABLED}</arg>
<arg>${value}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20250702 18:37:34.722" endtime="20250702 18:37:34.722"/>
</kw>
<status status="PASS" starttime="20250702 18:37:34.721" endtime="20250702 18:37:34.722"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250702 18:37:34.722" endtime="20250702 18:37:34.722"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:37:34.725" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:37:34.729" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:37:34.729" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250702 18:37:34.723" endtime="20250702 18:37:34.729"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:37:34.729" level="INFO">scm</msg>
<status status="PASS" starttime="20250702 18:37:34.729" endtime="20250702 18:37:34.729"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:37:34.730" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:37:34.730" endtime="20250702 18:37:34.730"/>
</kw>
<status status="PASS" starttime="20250702 18:37:34.723" endtime="20250702 18:37:34.730"/>
</kw>
<msg timestamp="20250702 18:37:34.730" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:37:34.723" endtime="20250702 18:37:34.730"/>
</kw>
<msg timestamp="20250702 18:37:34.730" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250702 18:37:34.723" endtime="20250702 18:37:34.730"/>
</kw>
<msg timestamp="20250702 18:37:34.730" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250702 18:37:34.722" endtime="20250702 18:37:34.730"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250702 18:37:34.731" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250702 18:37:34.730" endtime="20250702 18:37:34.731"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:37:34.734" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:37:34.769" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:37:34.769" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:37:34.732" endtime="20250702 18:37:34.769"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:37:34.770" level="INFO"/>
<status status="PASS" starttime="20250702 18:37:34.769" endtime="20250702 18:37:34.770"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:37:34.770" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:37:34.770" endtime="20250702 18:37:34.770"/>
</kw>
<status status="PASS" starttime="20250702 18:37:34.732" endtime="20250702 18:37:34.771"/>
</kw>
<msg timestamp="20250702 18:37:34.771" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:37:34.731" endtime="20250702 18:37:34.771"/>
</kw>
<status status="PASS" starttime="20250702 18:37:34.731" endtime="20250702 18:37:34.771"/>
</kw>
<status status="PASS" starttime="20250702 18:37:34.731" endtime="20250702 18:37:34.771"/>
</kw>
<status status="PASS" starttime="20250702 18:37:34.720" endtime="20250702 18:37:34.771"/>
</kw>
<status status="PASS" starttime="20250702 18:37:34.720" endtime="20250702 18:37:34.771"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:37:34.774" level="INFO">Running command 'ozone sh bucket link 56851-source/bucket1 56851-target/link4 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:37:37.746" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:37:37.747" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:37:34.772" endtime="20250702 18:37:37.747"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:37:37.748" level="INFO"/>
<status status="PASS" starttime="20250702 18:37:37.747" endtime="20250702 18:37:37.748"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:37:37.748" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:37:37.748" endtime="20250702 18:37:37.748"/>
</kw>
<status status="PASS" starttime="20250702 18:37:34.772" endtime="20250702 18:37:37.748"/>
</kw>
<msg timestamp="20250702 18:37:37.748" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:37:34.771" endtime="20250702 18:37:37.748"/>
</kw>
<status status="PASS" starttime="20250702 18:37:34.771" endtime="20250702 18:37:37.748"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket setquota ${target}/link4 --quota 1GB</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:37:37.751" level="INFO">Running command 'ozone sh bucket setquota 56851-target/link4 --quota 1GB 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:37:40.666" level="INFO">${rc} = 255</msg>
<msg timestamp="20250702 18:37:40.666" level="INFO">${output} = NOT_SUPPORTED_OPERATION Cannot set property on link</msg>
<status status="PASS" starttime="20250702 18:37:37.749" endtime="20250702 18:37:40.666"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:37:40.667" level="INFO">NOT_SUPPORTED_OPERATION Cannot set property on link</msg>
<status status="PASS" starttime="20250702 18:37:40.666" endtime="20250702 18:37:40.667"/>
</kw>
<msg timestamp="20250702 18:37:40.667" level="INFO">${result} = NOT_SUPPORTED_OPERATION Cannot set property on link</msg>
<status status="PASS" starttime="20250702 18:37:37.748" endtime="20250702 18:37:40.667"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOT_SUPPORTED_OPERATION</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250702 18:37:40.667" endtime="20250702 18:37:40.668"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${target}/link4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:37:40.671" level="INFO">Running command 'ozone sh bucket info 56851-target/link4 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:37:43.695" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:37:43.695" level="INFO">${output} = {
  "volumeName" : "56851-target",
  "name" : "link4",
  "sourceVolume" : "56851-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2025-07-02T18:37:37.658Z",
  "modificationTime" : "2025-07-0...</msg>
<status status="PASS" starttime="20250702 18:37:40.669" endtime="20250702 18:37:43.695"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:37:43.696" level="INFO">{
  "volumeName" : "56851-target",
  "name" : "link4",
  "sourceVolume" : "56851-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2025-07-02T18:37:37.658Z",
  "modificationTime" : "2025-07-02T18:37:37.658Z",
  "owner" : "testuser",
  "link" : true
}</msg>
<status status="PASS" starttime="20250702 18:37:43.695" endtime="20250702 18:37:43.696"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:37:43.696" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:37:43.696" endtime="20250702 18:37:43.696"/>
</kw>
<status status="PASS" starttime="20250702 18:37:40.668" endtime="20250702 18:37:43.696"/>
</kw>
<msg timestamp="20250702 18:37:43.696" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:37:40.668" endtime="20250702 18:37:43.696"/>
</kw>
<msg timestamp="20250702 18:37:43.696" level="INFO">${result} = {
  "volumeName" : "56851-target",
  "name" : "link4",
  "sourceVolume" : "56851-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2025-07-02T18:37:37.658Z",
  "modificationTime" : "2025-07-0...</msg>
<status status="PASS" starttime="20250702 18:37:40.668" endtime="20250702 18:37:43.697"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>sourceBucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250702 18:37:43.697" endtime="20250702 18:37:43.697"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20250702 18:37:34.719" endtime="20250702 18:37:43.697"/>
</test>
<doc>Test bucket links via Ozone CLI</doc>
<status status="PASS" starttime="20250702 18:33:44.843" endtime="20250702 18:37:43.698"/>
</suite>
<suite id="s1-s2-s4" name="Ozone-Shell-Single" source="/opt/hadoop/smoketest/basic/ozone-shell-single.robot">
<kw name="Generate prefix" library="ozone-shell-lib" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250702 18:37:43.723" level="INFO">${random} = 97409</msg>
<status status="PASS" starttime="20250702 18:37:43.723" endtime="20250702 18:37:43.723"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${prefix}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250702 18:37:43.723" level="INFO">${prefix} = 97409</msg>
<status status="PASS" starttime="20250702 18:37:43.723" endtime="20250702 18:37:43.723"/>
</kw>
<status status="PASS" starttime="20250702 18:37:43.723" endtime="20250702 18:37:43.724"/>
</kw>
<test id="s1-s2-s4-t1" name="Test ozone shell" line="26">
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-without-scheme</arg>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:37:43.727" level="INFO">Running command 'ozone sh volume info /97409-without-scheme 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:37:46.541" level="INFO">${rc} = 255</msg>
<msg timestamp="20250702 18:37:46.541" level="INFO">${output} = VOLUME_NOT_FOUND Volume 97409-without-scheme is not found</msg>
<status status="PASS" starttime="20250702 18:37:43.725" endtime="20250702 18:37:46.541"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:37:46.542" level="INFO">VOLUME_NOT_FOUND Volume 97409-without-scheme is not found</msg>
<status status="PASS" starttime="20250702 18:37:46.541" endtime="20250702 18:37:46.542"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:37:46.542" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:37:46.542" endtime="20250702 18:37:46.542"/>
</kw>
<msg timestamp="20250702 18:37:46.542" level="INFO">${result} = VOLUME_NOT_FOUND Volume 97409-without-scheme is not found</msg>
<status status="PASS" starttime="20250702 18:37:43.725" endtime="20250702 18:37:46.542"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250702 18:37:46.542" endtime="20250702 18:37:46.543"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:37:46.546" level="INFO">Running command 'ozone sh volume create /97409-without-scheme --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:37:49.437" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:37:49.437" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:37:46.544" endtime="20250702 18:37:49.437"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:37:49.438" level="INFO"/>
<status status="PASS" starttime="20250702 18:37:49.437" endtime="20250702 18:37:49.438"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:37:49.438" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:37:49.438" endtime="20250702 18:37:49.438"/>
</kw>
<status status="PASS" starttime="20250702 18:37:46.543" endtime="20250702 18:37:49.439"/>
</kw>
<msg timestamp="20250702 18:37:49.439" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:37:46.543" endtime="20250702 18:37:49.439"/>
</kw>
<msg timestamp="20250702 18:37:49.439" level="INFO">${result} = </msg>
<status status="PASS" starttime="20250702 18:37:46.543" endtime="20250702 18:37:49.439"/>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${result}</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20250702 18:37:49.439" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20250702 18:37:49.439" endtime="20250702 18:37:49.439"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '.[] | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:37:49.443" level="INFO">Running command 'ozone sh volume list / | jq -r '.[] | select(.name=="97409-without-scheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:37:52.617" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:37:52.618" level="INFO">${output} = {
  "metadata": {},
  "name": "97409-without-scheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime"...</msg>
<status status="PASS" starttime="20250702 18:37:49.440" endtime="20250702 18:37:52.618"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:37:52.618" level="INFO">{
  "metadata": {},
  "name": "97409-without-scheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2025-07-02T18:37:49.334Z",
  "modificationTime": "2025-07-02T18:37:49.334Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ],
      "aclSet": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "READ",
        "LIST"
      ],
      "aclSet": [
        "READ",
        "LIST"
      ]
    }
  ],
  "refCount": 0
}</msg>
<status status="PASS" starttime="20250702 18:37:52.618" endtime="20250702 18:37:52.619"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:37:52.619" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:37:52.619" endtime="20250702 18:37:52.619"/>
</kw>
<status status="PASS" starttime="20250702 18:37:49.440" endtime="20250702 18:37:52.619"/>
</kw>
<msg timestamp="20250702 18:37:52.619" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:37:49.440" endtime="20250702 18:37:52.619"/>
</kw>
<msg timestamp="20250702 18:37:52.619" level="INFO">${result} = {
  "metadata": {},
  "name": "97409-without-scheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime"...</msg>
<status status="PASS" starttime="20250702 18:37:49.439" endtime="20250702 18:37:52.619"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250702 18:37:52.620" endtime="20250702 18:37:52.620"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:37:52.623" level="INFO">Running command 'ozone sh volume setquota /97409-without-scheme --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:37:55.500" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:37:55.500" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:37:52.621" endtime="20250702 18:37:55.500"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:37:55.501" level="INFO"/>
<status status="PASS" starttime="20250702 18:37:55.501" endtime="20250702 18:37:55.501"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:37:55.502" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:37:55.501" endtime="20250702 18:37:55.502"/>
</kw>
<status status="PASS" starttime="20250702 18:37:52.621" endtime="20250702 18:37:55.502"/>
</kw>
<msg timestamp="20250702 18:37:55.502" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:37:52.620" endtime="20250702 18:37:55.502"/>
</kw>
<status status="PASS" starttime="20250702 18:37:52.620" endtime="20250702 18:37:55.502"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:37:55.505" level="INFO">Running command 'ozone sh volume info /97409-without-scheme | jq -r '. | select(.name=="97409-without-scheme") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:37:58.774" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:37:58.774" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20250702 18:37:55.503" endtime="20250702 18:37:58.774"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:37:58.775" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20250702 18:37:58.774" endtime="20250702 18:37:58.775"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:37:58.775" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:37:58.775" endtime="20250702 18:37:58.776"/>
</kw>
<status status="PASS" starttime="20250702 18:37:55.503" endtime="20250702 18:37:58.776"/>
</kw>
<msg timestamp="20250702 18:37:58.776" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:37:55.503" endtime="20250702 18:37:58.776"/>
</kw>
<msg timestamp="20250702 18:37:58.776" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20250702 18:37:55.502" endtime="20250702 18:37:58.776"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250702 18:37:58.776" endtime="20250702 18:37:58.776"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:37:58.780" level="INFO">Running command 'ozone sh bucket create /97409-without-scheme/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:38:01.956" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:38:01.956" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:37:58.777" endtime="20250702 18:38:01.956"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:38:01.957" level="INFO"/>
<status status="PASS" starttime="20250702 18:38:01.957" endtime="20250702 18:38:01.957"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:38:01.957" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:38:01.957" endtime="20250702 18:38:01.958"/>
</kw>
<status status="PASS" starttime="20250702 18:37:58.777" endtime="20250702 18:38:01.958"/>
</kw>
<msg timestamp="20250702 18:38:01.958" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:37:58.777" endtime="20250702 18:38:01.958"/>
</kw>
<msg timestamp="20250702 18:38:01.958" level="INFO">${result} = </msg>
<status status="PASS" starttime="20250702 18:37:58.776" endtime="20250702 18:38:01.958"/>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${result}</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20250702 18:38:01.958" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20250702 18:38:01.958" endtime="20250702 18:38:01.958"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 &gt; ${TMP_JSON}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:38:01.962" level="INFO">Running command 'ozone sh bucket info /97409-without-scheme/bb1 &gt; /tmp/bb1.json'.</msg>
<msg timestamp="20250702 18:38:05.042" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:38:05.042" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:38:01.959" endtime="20250702 18:38:05.042"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:38:05.043" level="INFO"/>
<status status="PASS" starttime="20250702 18:38:05.043" endtime="20250702 18:38:05.043"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:38:05.044" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:38:05.044" endtime="20250702 18:38:05.044"/>
</kw>
<status status="PASS" starttime="20250702 18:38:01.959" endtime="20250702 18:38:05.044"/>
</kw>
<msg timestamp="20250702 18:38:05.044" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:38:01.959" endtime="20250702 18:38:05.044"/>
</kw>
<status status="PASS" starttime="20250702 18:38:01.958" endtime="20250702 18:38:05.044"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>jq -r '. | select(.name=="bb1") | .storageType' ${TMP_JSON}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:38:05.047" level="INFO">Running command 'jq -r '. | select(.name=="bb1") | .storageType' /tmp/bb1.json 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:38:05.052" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:38:05.052" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20250702 18:38:05.045" endtime="20250702 18:38:05.052"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:38:05.053" level="INFO">DISK</msg>
<status status="PASS" starttime="20250702 18:38:05.052" endtime="20250702 18:38:05.053"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:38:05.053" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:38:05.053" endtime="20250702 18:38:05.053"/>
</kw>
<status status="PASS" starttime="20250702 18:38:05.045" endtime="20250702 18:38:05.053"/>
</kw>
<msg timestamp="20250702 18:38:05.053" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:38:05.045" endtime="20250702 18:38:05.054"/>
</kw>
<msg timestamp="20250702 18:38:05.054" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20250702 18:38:05.044" endtime="20250702 18:38:05.054"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250702 18:38:05.054" endtime="20250702 18:38:05.054"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>jq -r '. | select(.name=="bb1") | .quotaInBytes' ${TMP_JSON}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:38:05.057" level="INFO">Running command 'jq -r '. | select(.name=="bb1") | .quotaInBytes' /tmp/bb1.json 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:38:05.061" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:38:05.061" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20250702 18:38:05.055" endtime="20250702 18:38:05.061"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:38:05.062" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20250702 18:38:05.062" endtime="20250702 18:38:05.062"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:38:05.062" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:38:05.062" endtime="20250702 18:38:05.062"/>
</kw>
<status status="PASS" starttime="20250702 18:38:05.055" endtime="20250702 18:38:05.063"/>
</kw>
<msg timestamp="20250702 18:38:05.063" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:38:05.054" endtime="20250702 18:38:05.063"/>
</kw>
<msg timestamp="20250702 18:38:05.063" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20250702 18:38:05.054" endtime="20250702 18:38:05.063"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250702 18:38:05.063" endtime="20250702 18:38:05.063"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>jq -r '. | select(.name=="bb1") | .quotaInNamespace' ${TMP_JSON}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:38:05.066" level="INFO">Running command 'jq -r '. | select(.name=="bb1") | .quotaInNamespace' /tmp/bb1.json 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:38:05.071" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:38:05.071" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20250702 18:38:05.064" endtime="20250702 18:38:05.071"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:38:05.072" level="INFO">100</msg>
<status status="PASS" starttime="20250702 18:38:05.071" endtime="20250702 18:38:05.072"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:38:05.072" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:38:05.072" endtime="20250702 18:38:05.072"/>
</kw>
<status status="PASS" starttime="20250702 18:38:05.064" endtime="20250702 18:38:05.072"/>
</kw>
<msg timestamp="20250702 18:38:05.072" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:38:05.064" endtime="20250702 18:38:05.072"/>
</kw>
<msg timestamp="20250702 18:38:05.072" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20250702 18:38:05.063" endtime="20250702 18:38:05.073"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250702 18:38:05.073" endtime="20250702 18:38:05.073"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:38:05.076" level="INFO">Running command 'ozone sh bucket setquota /97409-without-scheme/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:38:08.077" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:38:08.077" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:38:05.074" endtime="20250702 18:38:08.077"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:38:08.078" level="INFO"/>
<status status="PASS" starttime="20250702 18:38:08.078" endtime="20250702 18:38:08.078"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:38:08.079" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:38:08.078" endtime="20250702 18:38:08.079"/>
</kw>
<status status="PASS" starttime="20250702 18:38:05.073" endtime="20250702 18:38:08.079"/>
</kw>
<msg timestamp="20250702 18:38:08.079" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:38:05.073" endtime="20250702 18:38:08.079"/>
</kw>
<status status="PASS" starttime="20250702 18:38:05.073" endtime="20250702 18:38:08.079"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 &gt; ${TMP_JSON}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:38:08.082" level="INFO">Running command 'ozone sh bucket info /97409-without-scheme/bb1 &gt; /tmp/bb1.json'.</msg>
<msg timestamp="20250702 18:38:11.248" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:38:11.248" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:38:08.080" endtime="20250702 18:38:11.248"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:38:11.249" level="INFO"/>
<status status="PASS" starttime="20250702 18:38:11.249" endtime="20250702 18:38:11.249"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:38:11.250" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:38:11.249" endtime="20250702 18:38:11.250"/>
</kw>
<status status="PASS" starttime="20250702 18:38:08.080" endtime="20250702 18:38:11.250"/>
</kw>
<msg timestamp="20250702 18:38:11.250" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:38:08.080" endtime="20250702 18:38:11.250"/>
</kw>
<status status="PASS" starttime="20250702 18:38:08.079" endtime="20250702 18:38:11.250"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>jq -r '. | select(.name=="bb1") | .quotaInBytes' ${TMP_JSON}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:38:11.254" level="INFO">Running command 'jq -r '. | select(.name=="bb1") | .quotaInBytes' /tmp/bb1.json 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:38:11.258" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:38:11.258" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20250702 18:38:11.251" endtime="20250702 18:38:11.258"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:38:11.259" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20250702 18:38:11.259" endtime="20250702 18:38:11.259"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:38:11.259" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:38:11.259" endtime="20250702 18:38:11.259"/>
</kw>
<status status="PASS" starttime="20250702 18:38:11.251" endtime="20250702 18:38:11.260"/>
</kw>
<msg timestamp="20250702 18:38:11.260" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:38:11.251" endtime="20250702 18:38:11.260"/>
</kw>
<msg timestamp="20250702 18:38:11.260" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20250702 18:38:11.250" endtime="20250702 18:38:11.260"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250702 18:38:11.260" endtime="20250702 18:38:11.260"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>jq -r '. | select(.name=="bb1") | .quotaInNamespace' ${TMP_JSON}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:38:11.263" level="INFO">Running command 'jq -r '. | select(.name=="bb1") | .quotaInNamespace' /tmp/bb1.json 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:38:11.268" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:38:11.268" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20250702 18:38:11.261" endtime="20250702 18:38:11.268"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:38:11.268" level="INFO">1000</msg>
<status status="PASS" starttime="20250702 18:38:11.268" endtime="20250702 18:38:11.268"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:38:11.269" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:38:11.268" endtime="20250702 18:38:11.269"/>
</kw>
<status status="PASS" starttime="20250702 18:38:11.261" endtime="20250702 18:38:11.269"/>
</kw>
<msg timestamp="20250702 18:38:11.269" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:38:11.261" endtime="20250702 18:38:11.269"/>
</kw>
<msg timestamp="20250702 18:38:11.269" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20250702 18:38:11.260" endtime="20250702 18:38:11.269"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250702 18:38:11.269" endtime="20250702 18:38:11.270"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '.[] | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:38:11.273" level="INFO">Running command 'ozone sh bucket list /97409-without-scheme/ | jq -r '.[] | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:38:14.503" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:38:14.503" level="INFO">${output} = 97409-without-scheme</msg>
<status status="PASS" starttime="20250702 18:38:11.271" endtime="20250702 18:38:14.503"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:38:14.504" level="INFO">97409-without-scheme</msg>
<status status="PASS" starttime="20250702 18:38:14.503" endtime="20250702 18:38:14.504"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:38:14.504" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:38:14.504" endtime="20250702 18:38:14.505"/>
</kw>
<status status="PASS" starttime="20250702 18:38:11.271" endtime="20250702 18:38:14.505"/>
</kw>
<msg timestamp="20250702 18:38:14.505" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:38:11.270" endtime="20250702 18:38:14.505"/>
</kw>
<msg timestamp="20250702 18:38:14.505" level="INFO">${result} = 97409-without-scheme</msg>
<status status="PASS" starttime="20250702 18:38:11.270" endtime="20250702 18:38:14.505"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250702 18:38:14.505" endtime="20250702 18:38:14.505"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1 /tmp/key1_RATIS /tmp/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:38:14.509" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 /tmp/key1_RATIS /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:38:14.512" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:38:14.513" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:38:14.507" endtime="20250702 18:38:14.513"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:38:14.513" level="INFO"/>
<status status="PASS" starttime="20250702 18:38:14.513" endtime="20250702 18:38:14.513"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:38:14.514" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:38:14.513" endtime="20250702 18:38:14.514"/>
</kw>
<status status="PASS" starttime="20250702 18:38:14.507" endtime="20250702 18:38:14.514"/>
</kw>
<msg timestamp="20250702 18:38:14.514" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:38:14.506" endtime="20250702 18:38:14.514"/>
</kw>
<status status="PASS" starttime="20250702 18:38:14.506" endtime="20250702 18:38:14.514"/>
</kw>
<kw name="Ozone Shell Batch" library="shell">
<arg>key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<arg>key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<arg>key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<arg>key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<arg>key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<arg>key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<kw name="Catenate" library="BuiltIn">
<var>${cmd}</var>
<arg>SEPARATOR=' --execute '</arg>
<arg>@{commands}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20250702 18:38:14.515" level="INFO">${cmd} = key put /97409-without-scheme/bb1/key1 /opt/hadoop/NOTICE.txt' --execute 'key get /97409-without-scheme/bb1/key1 /tmp/NOTICE.txt.1' --execute 'key put -t RATIS /97409-without-scheme/bb1/key1_RATIS /op...</msg>
<status status="PASS" starttime="20250702 18:38:14.515" endtime="20250702 18:38:14.515"/>
</kw>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>ozone sh --execute '${cmd}'</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>ozone sh --execute '${cmd}'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:38:14.518" level="INFO">Running command 'ozone sh --execute 'key put /97409-without-scheme/bb1/key1 /opt/hadoop/NOTICE.txt' --execute 'key get /97409-without-scheme/bb1/key1 /tmp/NOTICE.txt.1' --execute 'key put -t RATIS /97409-without-scheme/bb1/key1_RATIS /opt/hadoop/NOTICE.txt' --execute 'key get /97409-without-scheme/bb1/key1_RATIS /tmp/key1_RATIS' --execute 'key cp /97409-without-scheme/bb1 key1 key1-copy' --execute 'key get /97409-without-scheme/bb1/key1-copy /tmp/key1-copy' 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:38:20.131" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:38:20.131" level="INFO">${output} = key put /97409-without-scheme/bb1/key1 /opt/hadoop/NOTICE.txt
key get /97409-without-scheme/bb1/key1 /tmp/NOTICE.txt.1
key put -t RATIS /97409-without-scheme/bb1/key1_RATIS /opt/hadoop/NOTICE.txt
key ...</msg>
<status status="PASS" starttime="20250702 18:38:14.516" endtime="20250702 18:38:20.131"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:38:20.132" level="INFO">key put /97409-without-scheme/bb1/key1 /opt/hadoop/NOTICE.txt
key get /97409-without-scheme/bb1/key1 /tmp/NOTICE.txt.1
key put -t RATIS /97409-without-scheme/bb1/key1_RATIS /opt/hadoop/NOTICE.txt
key get /97409-without-scheme/bb1/key1_RATIS /tmp/key1_RATIS
key cp /97409-without-scheme/bb1 key1 key1-copy
key get /97409-without-scheme/bb1/key1-copy /tmp/key1-copy</msg>
<status status="PASS" starttime="20250702 18:38:20.131" endtime="20250702 18:38:20.132"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:38:20.132" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:38:20.132" endtime="20250702 18:38:20.132"/>
</kw>
<status status="PASS" starttime="20250702 18:38:14.516" endtime="20250702 18:38:20.133"/>
</kw>
<msg timestamp="20250702 18:38:20.133" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:38:14.515" endtime="20250702 18:38:20.133"/>
</kw>
<status status="PASS" starttime="20250702 18:38:14.514" endtime="20250702 18:38:20.133"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:38:20.136" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:38:20.139" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:38:20.139" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:38:20.134" endtime="20250702 18:38:20.139"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:38:20.140" level="INFO"/>
<status status="PASS" starttime="20250702 18:38:20.139" endtime="20250702 18:38:20.140"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:38:20.140" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:38:20.140" endtime="20250702 18:38:20.140"/>
</kw>
<status status="PASS" starttime="20250702 18:38:20.134" endtime="20250702 18:38:20.140"/>
</kw>
<msg timestamp="20250702 18:38:20.141" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:38:20.133" endtime="20250702 18:38:20.141"/>
</kw>
<status status="PASS" starttime="20250702 18:38:20.133" endtime="20250702 18:38:20.141"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:38:20.143" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:38:20.146" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:38:20.146" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:38:20.141" endtime="20250702 18:38:20.146"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:38:20.147" level="INFO"/>
<status status="PASS" starttime="20250702 18:38:20.146" endtime="20250702 18:38:20.147"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:38:20.147" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:38:20.147" endtime="20250702 18:38:20.147"/>
</kw>
<status status="PASS" starttime="20250702 18:38:20.141" endtime="20250702 18:38:20.147"/>
</kw>
<msg timestamp="20250702 18:38:20.147" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:38:20.141" endtime="20250702 18:38:20.147"/>
</kw>
<status status="PASS" starttime="20250702 18:38:20.141" endtime="20250702 18:38:20.147"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:38:20.150" level="INFO">Running command 'ozone sh key info /97409-without-scheme/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")' 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:38:23.482" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:38:23.482" level="INFO">${output} = {
  "volumeName": "97409-without-scheme",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "owner": "testuser",
  "dataSize": 15892,
  "creationTime": "2025-07-02T18:38:19.396Z",
  "modificationTime":...</msg>
<status status="PASS" starttime="20250702 18:38:20.148" endtime="20250702 18:38:23.482"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:38:23.483" level="INFO">{
  "volumeName": "97409-without-scheme",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "owner": "testuser",
  "dataSize": 15892,
  "creationTime": "2025-07-02T18:38:19.396Z",
  "modificationTime": "2025-07-02T18:38:19.462Z",
  "replicationConfig": {
    "replicationFactor": "THREE",
    "requiredNodes": 3,
    "minimumNodes": 1,
    "replicationType": "RATIS"
  },
  "metadata": {},
  "tags": {},
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 115816896921600007,
      "length": 15892,
      "offset": 0,
      "keyOffset": 0
    }
  ],
  "generation": 66,
  "file": true
}</msg>
<status status="PASS" starttime="20250702 18:38:23.482" endtime="20250702 18:38:23.483"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:38:23.483" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:38:23.483" endtime="20250702 18:38:23.484"/>
</kw>
<status status="PASS" starttime="20250702 18:38:20.148" endtime="20250702 18:38:23.484"/>
</kw>
<msg timestamp="20250702 18:38:23.484" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:38:20.148" endtime="20250702 18:38:23.484"/>
</kw>
<msg timestamp="20250702 18:38:23.484" level="INFO">${result} = {
  "volumeName": "97409-without-scheme",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "owner": "testuser",
  "dataSize": 15892,
  "creationTime": "2025-07-02T18:38:19.396Z",
  "modificationTime":...</msg>
<status status="PASS" starttime="20250702 18:38:20.148" endtime="20250702 18:38:23.484"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250702 18:38:23.484" endtime="20250702 18:38:23.484"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:38:23.488" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:38:23.490" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:38:23.490" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:38:23.485" endtime="20250702 18:38:23.490"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:38:23.491" level="INFO"/>
<status status="PASS" starttime="20250702 18:38:23.491" endtime="20250702 18:38:23.491"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:38:23.491" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:38:23.491" endtime="20250702 18:38:23.492"/>
</kw>
<status status="PASS" starttime="20250702 18:38:23.485" endtime="20250702 18:38:23.492"/>
</kw>
<msg timestamp="20250702 18:38:23.492" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:38:23.485" endtime="20250702 18:38:23.492"/>
</kw>
<status status="PASS" starttime="20250702 18:38:23.484" endtime="20250702 18:38:23.492"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:38:23.494" level="INFO">Running command 'ozone sh key get /97409-without-scheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:38:26.621" level="INFO">${rc} = 255</msg>
<msg timestamp="20250702 18:38:26.621" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20250702 18:38:23.492" endtime="20250702 18:38:26.621"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:38:26.622" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20250702 18:38:26.621" endtime="20250702 18:38:26.622"/>
</kw>
<msg timestamp="20250702 18:38:26.622" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20250702 18:38:23.492" endtime="20250702 18:38:26.622"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250702 18:38:26.622" endtime="20250702 18:38:26.622"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:38:26.626" level="INFO">Running command 'ozone sh key get --force /97409-without-scheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:38:31.152" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:38:31.152" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:38:26.624" endtime="20250702 18:38:31.152"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:38:31.153" level="INFO"/>
<status status="PASS" starttime="20250702 18:38:31.153" endtime="20250702 18:38:31.153"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:38:31.154" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:38:31.153" endtime="20250702 18:38:31.154"/>
</kw>
<status status="PASS" starttime="20250702 18:38:26.623" endtime="20250702 18:38:31.154"/>
</kw>
<msg timestamp="20250702 18:38:31.154" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:38:26.623" endtime="20250702 18:38:31.154"/>
</kw>
<msg timestamp="20250702 18:38:31.154" level="INFO">${result} = </msg>
<status status="PASS" starttime="20250702 18:38:26.622" endtime="20250702 18:38:31.154"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250702 18:38:31.154" endtime="20250702 18:38:31.154"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 sample.txt</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:38:31.157" level="INFO">Running command 'ozone sh key put /97409-without-scheme/bb1/key1 sample.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:38:34.101" level="INFO">${rc} = 255</msg>
<msg timestamp="20250702 18:38:34.101" level="INFO">${output} = Error: File not found: sample.txt</msg>
<status status="PASS" starttime="20250702 18:38:31.155" endtime="20250702 18:38:34.101"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:38:34.102" level="INFO">Error: File not found: sample.txt</msg>
<status status="PASS" starttime="20250702 18:38:34.101" endtime="20250702 18:38:34.102"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:38:34.102" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:38:34.102" endtime="20250702 18:38:34.102"/>
</kw>
<msg timestamp="20250702 18:38:34.102" level="INFO">${result} = Error: File not found: sample.txt</msg>
<status status="PASS" starttime="20250702 18:38:31.155" endtime="20250702 18:38:34.102"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>File not found: sample.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250702 18:38:34.102" endtime="20250702 18:38:34.103"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:38:34.106" level="INFO">Running command 'ozone sh key info /97409-without-scheme/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:38:37.471" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:38:37.471" level="INFO">${output} = {
  "volumeName": "97409-without-scheme",
  "bucketName": "bb1",
  "name": "key1",
  "owner": "testuser",
  "dataSize": 15892,
  "creationTime": "2025-07-02T18:38:17.674Z",
  "modificationTime": "2025...</msg>
<status status="PASS" starttime="20250702 18:38:34.104" endtime="20250702 18:38:37.471"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:38:37.472" level="INFO">{
  "volumeName": "97409-without-scheme",
  "bucketName": "bb1",
  "name": "key1",
  "owner": "testuser",
  "dataSize": 15892,
  "creationTime": "2025-07-02T18:38:17.674Z",
  "modificationTime": "2025-07-02T18:38:19.093Z",
  "replicationConfig": {
    "replicationFactor": "THREE",
    "requiredNodes": 3,
    "minimumNodes": 1,
    "replicationType": "RATIS"
  },
  "metadata": {},
  "tags": {},
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 115816896921600006,
      "length": 15892,
      "offset": 0,
      "keyOffset": 0
    }
  ],
  "generation": 64,
  "file": true
}</msg>
<status status="PASS" starttime="20250702 18:38:37.471" endtime="20250702 18:38:37.472"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:38:37.472" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:38:37.472" endtime="20250702 18:38:37.472"/>
</kw>
<status status="PASS" starttime="20250702 18:38:34.104" endtime="20250702 18:38:37.472"/>
</kw>
<msg timestamp="20250702 18:38:37.473" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:38:34.103" endtime="20250702 18:38:37.473"/>
</kw>
<msg timestamp="20250702 18:38:37.473" level="INFO">${result} = {
  "volumeName": "97409-without-scheme",
  "bucketName": "bb1",
  "name": "key1",
  "owner": "testuser",
  "dataSize": 15892,
  "creationTime": "2025-07-02T18:38:17.674Z",
  "modificationTime": "2025...</msg>
<status status="PASS" starttime="20250702 18:38:34.103" endtime="20250702 18:38:37.473"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250702 18:38:37.473" endtime="20250702 18:38:37.473"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250702 18:38:37.473" endtime="20250702 18:38:37.474"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[] | select(.name=="key1") | .name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:38:37.477" level="INFO">Running command 'ozone sh key list /97409-without-scheme/bb1 | jq -r '.[] | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:38:40.755" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:38:40.755" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20250702 18:38:37.475" endtime="20250702 18:38:40.755"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:38:40.756" level="INFO">key1</msg>
<status status="PASS" starttime="20250702 18:38:40.755" endtime="20250702 18:38:40.756"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:38:40.756" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:38:40.756" endtime="20250702 18:38:40.756"/>
</kw>
<status status="PASS" starttime="20250702 18:38:37.474" endtime="20250702 18:38:40.756"/>
</kw>
<msg timestamp="20250702 18:38:40.756" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:38:37.474" endtime="20250702 18:38:40.756"/>
</kw>
<msg timestamp="20250702 18:38:40.756" level="INFO">${result} = key1</msg>
<status status="PASS" starttime="20250702 18:38:37.474" endtime="20250702 18:38:40.756"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250702 18:38:40.757" endtime="20250702 18:38:40.757"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:38:40.760" level="INFO">Running command 'ozone sh key rename /97409-without-scheme/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:38:43.724" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:38:43.724" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:38:40.758" endtime="20250702 18:38:43.724"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:38:43.725" level="INFO"/>
<status status="PASS" starttime="20250702 18:38:43.725" endtime="20250702 18:38:43.725"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:38:43.726" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:38:43.725" endtime="20250702 18:38:43.726"/>
</kw>
<status status="PASS" starttime="20250702 18:38:40.758" endtime="20250702 18:38:43.726"/>
</kw>
<msg timestamp="20250702 18:38:43.726" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:38:40.757" endtime="20250702 18:38:43.726"/>
</kw>
<status status="PASS" starttime="20250702 18:38:40.757" endtime="20250702 18:38:43.726"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[] | select(.name=="key2") | .name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:38:43.729" level="INFO">Running command 'ozone sh key list /97409-without-scheme/bb1 | jq -r '.[] | select(.name=="key2") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:38:46.967" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:38:46.967" level="INFO">${output} = key2</msg>
<status status="PASS" starttime="20250702 18:38:43.727" endtime="20250702 18:38:46.967"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:38:46.968" level="INFO">key2</msg>
<status status="PASS" starttime="20250702 18:38:46.967" endtime="20250702 18:38:46.968"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:38:46.968" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:38:46.968" endtime="20250702 18:38:46.968"/>
</kw>
<status status="PASS" starttime="20250702 18:38:43.727" endtime="20250702 18:38:46.968"/>
</kw>
<msg timestamp="20250702 18:38:46.968" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:38:43.727" endtime="20250702 18:38:46.968"/>
</kw>
<msg timestamp="20250702 18:38:46.969" level="INFO">${result} = key2</msg>
<status status="PASS" starttime="20250702 18:38:43.726" endtime="20250702 18:38:46.969"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250702 18:38:46.969" endtime="20250702 18:38:46.969"/>
</kw>
<kw name="Ozone Shell Batch" library="shell">
<arg>key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<arg>key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<arg>key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<kw name="Catenate" library="BuiltIn">
<var>${cmd}</var>
<arg>SEPARATOR=' --execute '</arg>
<arg>@{commands}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20250702 18:38:46.970" level="INFO">${cmd} = key delete /97409-without-scheme/bb1/key2' --execute 'key delete /97409-without-scheme/bb1/key1_RATIS' --execute 'key delete /97409-without-scheme/bb1/key1-copy</msg>
<status status="PASS" starttime="20250702 18:38:46.970" endtime="20250702 18:38:46.970"/>
</kw>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>ozone sh --execute '${cmd}'</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>ozone sh --execute '${cmd}'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:38:46.973" level="INFO">Running command 'ozone sh --execute 'key delete /97409-without-scheme/bb1/key2' --execute 'key delete /97409-without-scheme/bb1/key1_RATIS' --execute 'key delete /97409-without-scheme/bb1/key1-copy' 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:38:50.608" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:38:50.608" level="INFO">${output} = key delete /97409-without-scheme/bb1/key2
Key moved inside Trash: /.Trash/testuser/Current/key2 
key delete /97409-without-scheme/bb1/key1_RATIS
Key moved inside Trash: /.Trash/testuser/Current/key1_R...</msg>
<status status="PASS" starttime="20250702 18:38:46.970" endtime="20250702 18:38:50.608"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:38:50.609" level="INFO">key delete /97409-without-scheme/bb1/key2
Key moved inside Trash: /.Trash/testuser/Current/key2 
key delete /97409-without-scheme/bb1/key1_RATIS
Key moved inside Trash: /.Trash/testuser/Current/key1_RATIS 
key delete /97409-without-scheme/bb1/key1-copy
Key moved inside Trash: /.Trash/testuser/Current/key1-copy </msg>
<status status="PASS" starttime="20250702 18:38:50.608" endtime="20250702 18:38:50.609"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:38:50.609" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:38:50.609" endtime="20250702 18:38:50.609"/>
</kw>
<status status="PASS" starttime="20250702 18:38:46.970" endtime="20250702 18:38:50.609"/>
</kw>
<msg timestamp="20250702 18:38:50.609" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:38:46.970" endtime="20250702 18:38:50.609"/>
</kw>
<status status="PASS" starttime="20250702 18:38:46.969" endtime="20250702 18:38:50.610"/>
</kw>
<status status="PASS" starttime="20250702 18:38:14.506" endtime="20250702 18:38:50.610"/>
</kw>
<status status="PASS" starttime="20250702 18:38:14.506" endtime="20250702 18:38:50.610"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:38:50.613" level="INFO">Running command 'ozone sh volume clrquota --space-quota /97409-without-scheme 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:38:53.599" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:38:53.599" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:38:50.611" endtime="20250702 18:38:53.599"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:38:53.600" level="INFO"/>
<status status="PASS" starttime="20250702 18:38:53.600" endtime="20250702 18:38:53.600"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:38:53.601" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:38:53.600" endtime="20250702 18:38:53.601"/>
</kw>
<status status="PASS" starttime="20250702 18:38:50.610" endtime="20250702 18:38:53.601"/>
</kw>
<msg timestamp="20250702 18:38:53.601" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:38:50.610" endtime="20250702 18:38:53.601"/>
</kw>
<status status="PASS" starttime="20250702 18:38:50.610" endtime="20250702 18:38:53.601"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:38:53.605" level="INFO">Running command 'ozone sh volume info /97409-without-scheme | jq -r '. | select(.name=="97409-without-scheme") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:38:56.767" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:38:56.767" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20250702 18:38:53.602" endtime="20250702 18:38:56.767"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:38:56.768" level="INFO">-1</msg>
<status status="PASS" starttime="20250702 18:38:56.767" endtime="20250702 18:38:56.768"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:38:56.768" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:38:56.768" endtime="20250702 18:38:56.768"/>
</kw>
<status status="PASS" starttime="20250702 18:38:53.602" endtime="20250702 18:38:56.768"/>
</kw>
<msg timestamp="20250702 18:38:56.768" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:38:53.602" endtime="20250702 18:38:56.769"/>
</kw>
<msg timestamp="20250702 18:38:56.769" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20250702 18:38:53.601" endtime="20250702 18:38:56.769"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250702 18:38:56.769" endtime="20250702 18:38:56.769"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:38:56.773" level="INFO">Running command 'ozone sh volume clrquota --namespace-quota /97409-without-scheme 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:38:59.719" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:38:59.719" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:38:56.770" endtime="20250702 18:38:59.719"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:38:59.720" level="INFO"/>
<status status="PASS" starttime="20250702 18:38:59.720" endtime="20250702 18:38:59.720"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:38:59.721" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:38:59.720" endtime="20250702 18:38:59.721"/>
</kw>
<status status="PASS" starttime="20250702 18:38:56.770" endtime="20250702 18:38:59.721"/>
</kw>
<msg timestamp="20250702 18:38:59.721" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:38:56.770" endtime="20250702 18:38:59.721"/>
</kw>
<status status="PASS" starttime="20250702 18:38:56.769" endtime="20250702 18:38:59.721"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:38:59.724" level="INFO">Running command 'ozone sh volume info /97409-without-scheme | jq -r '. | select(.name=="97409-without-scheme") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:39:03.078" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:39:03.078" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20250702 18:38:59.722" endtime="20250702 18:39:03.078"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:39:03.079" level="INFO">-1</msg>
<status status="PASS" starttime="20250702 18:39:03.079" endtime="20250702 18:39:03.079"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:39:03.080" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:39:03.079" endtime="20250702 18:39:03.080"/>
</kw>
<status status="PASS" starttime="20250702 18:38:59.722" endtime="20250702 18:39:03.080"/>
</kw>
<msg timestamp="20250702 18:39:03.080" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:38:59.722" endtime="20250702 18:39:03.080"/>
</kw>
<msg timestamp="20250702 18:39:03.080" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20250702 18:38:59.721" endtime="20250702 18:39:03.080"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250702 18:39:03.080" endtime="20250702 18:39:03.081"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:39:03.084" level="INFO">Running command 'ozone sh bucket clrquota --space-quota /97409-without-scheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:39:06.077" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:39:06.077" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:39:03.082" endtime="20250702 18:39:06.077"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:39:06.078" level="INFO"/>
<status status="PASS" starttime="20250702 18:39:06.077" endtime="20250702 18:39:06.078"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:39:06.078" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:39:06.078" endtime="20250702 18:39:06.078"/>
</kw>
<status status="PASS" starttime="20250702 18:39:03.081" endtime="20250702 18:39:06.078"/>
</kw>
<msg timestamp="20250702 18:39:06.079" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:39:03.081" endtime="20250702 18:39:06.079"/>
</kw>
<status status="PASS" starttime="20250702 18:39:03.081" endtime="20250702 18:39:06.079"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:39:06.082" level="INFO">Running command 'ozone sh bucket info /97409-without-scheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:39:09.162" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:39:09.162" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20250702 18:39:06.080" endtime="20250702 18:39:09.162"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:39:09.163" level="INFO">-1</msg>
<status status="PASS" starttime="20250702 18:39:09.163" endtime="20250702 18:39:09.163"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:39:09.164" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:39:09.163" endtime="20250702 18:39:09.164"/>
</kw>
<status status="PASS" starttime="20250702 18:39:06.080" endtime="20250702 18:39:09.164"/>
</kw>
<msg timestamp="20250702 18:39:09.164" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:39:06.079" endtime="20250702 18:39:09.164"/>
</kw>
<msg timestamp="20250702 18:39:09.164" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20250702 18:39:06.079" endtime="20250702 18:39:09.164"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250702 18:39:09.164" endtime="20250702 18:39:09.165"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:39:09.168" level="INFO">Running command 'ozone sh bucket clrquota --namespace-quota /97409-without-scheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:39:12.067" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:39:12.067" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:39:09.166" endtime="20250702 18:39:12.067"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:39:12.068" level="INFO"/>
<status status="PASS" starttime="20250702 18:39:12.068" endtime="20250702 18:39:12.068"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:39:12.069" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:39:12.069" endtime="20250702 18:39:12.069"/>
</kw>
<status status="PASS" starttime="20250702 18:39:09.165" endtime="20250702 18:39:12.069"/>
</kw>
<msg timestamp="20250702 18:39:12.069" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:39:09.165" endtime="20250702 18:39:12.069"/>
</kw>
<status status="PASS" starttime="20250702 18:39:09.165" endtime="20250702 18:39:12.069"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:39:12.073" level="INFO">Running command 'ozone sh bucket info /97409-without-scheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:39:15.255" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:39:15.255" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20250702 18:39:12.070" endtime="20250702 18:39:15.255"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:39:15.256" level="INFO">-1</msg>
<status status="PASS" starttime="20250702 18:39:15.255" endtime="20250702 18:39:15.256"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:39:15.256" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:39:15.256" endtime="20250702 18:39:15.256"/>
</kw>
<status status="PASS" starttime="20250702 18:39:12.070" endtime="20250702 18:39:15.256"/>
</kw>
<msg timestamp="20250702 18:39:15.256" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:39:12.070" endtime="20250702 18:39:15.256"/>
</kw>
<msg timestamp="20250702 18:39:15.256" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20250702 18:39:12.069" endtime="20250702 18:39:15.256"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250702 18:39:15.257" endtime="20250702 18:39:15.257"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete -r --yes ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:39:15.260" level="INFO">Running command 'ozone sh bucket delete -r --yes /97409-without-scheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:39:18.453" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:39:18.453" level="INFO">${output} = Bucket bb1 is deleted</msg>
<status status="PASS" starttime="20250702 18:39:15.258" endtime="20250702 18:39:18.453"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:39:18.454" level="INFO">Bucket bb1 is deleted</msg>
<status status="PASS" starttime="20250702 18:39:18.454" endtime="20250702 18:39:18.454"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:39:18.455" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:39:18.454" endtime="20250702 18:39:18.455"/>
</kw>
<status status="PASS" starttime="20250702 18:39:15.258" endtime="20250702 18:39:18.455"/>
</kw>
<msg timestamp="20250702 18:39:18.455" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:39:15.257" endtime="20250702 18:39:18.455"/>
</kw>
<status status="PASS" starttime="20250702 18:39:15.257" endtime="20250702 18:39:18.455"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:39:18.458" level="INFO">Running command 'ozone sh volume delete /97409-without-scheme 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:39:21.368" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:39:21.368" level="INFO">${output} = Volume 97409-without-scheme is deleted</msg>
<status status="PASS" starttime="20250702 18:39:18.456" endtime="20250702 18:39:21.368"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:39:21.369" level="INFO">Volume 97409-without-scheme is deleted</msg>
<status status="PASS" starttime="20250702 18:39:21.368" endtime="20250702 18:39:21.369"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:39:21.369" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:39:21.369" endtime="20250702 18:39:21.369"/>
</kw>
<status status="PASS" starttime="20250702 18:39:18.456" endtime="20250702 18:39:21.369"/>
</kw>
<msg timestamp="20250702 18:39:21.370" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:39:18.455" endtime="20250702 18:39:21.370"/>
</kw>
<status status="PASS" starttime="20250702 18:39:18.455" endtime="20250702 18:39:21.370"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:39:21.373" level="INFO">Running command 'ozone sh volume create /97409-without-scheme 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:39:24.328" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:39:24.328" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:39:21.371" endtime="20250702 18:39:24.328"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:39:24.329" level="INFO"/>
<status status="PASS" starttime="20250702 18:39:24.329" endtime="20250702 18:39:24.329"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:39:24.330" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:39:24.330" endtime="20250702 18:39:24.330"/>
</kw>
<status status="PASS" starttime="20250702 18:39:21.370" endtime="20250702 18:39:24.330"/>
</kw>
<msg timestamp="20250702 18:39:24.330" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:39:21.370" endtime="20250702 18:39:24.330"/>
</kw>
<status status="PASS" starttime="20250702 18:39:21.370" endtime="20250702 18:39:24.330"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume info ${protocol}${server}/${volume} &gt; ${TMP_JSON}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:39:24.334" level="INFO">Running command 'ozone sh volume info /97409-without-scheme &gt; /tmp/bb1.json'.</msg>
<msg timestamp="20250702 18:39:27.539" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:39:27.539" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:39:24.332" endtime="20250702 18:39:27.539"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:39:27.540" level="INFO"/>
<status status="PASS" starttime="20250702 18:39:27.539" endtime="20250702 18:39:27.540"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:39:27.540" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:39:27.540" endtime="20250702 18:39:27.540"/>
</kw>
<status status="PASS" starttime="20250702 18:39:24.331" endtime="20250702 18:39:27.540"/>
</kw>
<msg timestamp="20250702 18:39:27.540" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:39:24.331" endtime="20250702 18:39:27.541"/>
</kw>
<status status="PASS" starttime="20250702 18:39:24.330" endtime="20250702 18:39:27.541"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>jq -r '. | select(.name=="${volume}") | .quotaInBytes' ${TMP_JSON}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:39:27.544" level="INFO">Running command 'jq -r '. | select(.name=="97409-without-scheme") | .quotaInBytes' /tmp/bb1.json 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:39:27.549" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:39:27.549" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20250702 18:39:27.542" endtime="20250702 18:39:27.549"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:39:27.550" level="INFO">-1</msg>
<status status="PASS" starttime="20250702 18:39:27.549" endtime="20250702 18:39:27.550"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:39:27.550" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:39:27.550" endtime="20250702 18:39:27.550"/>
</kw>
<status status="PASS" starttime="20250702 18:39:27.541" endtime="20250702 18:39:27.550"/>
</kw>
<msg timestamp="20250702 18:39:27.550" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:39:27.541" endtime="20250702 18:39:27.550"/>
</kw>
<msg timestamp="20250702 18:39:27.550" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20250702 18:39:27.541" endtime="20250702 18:39:27.551"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250702 18:39:27.551" endtime="20250702 18:39:27.551"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>jq -r '. | select(.name=="${volume}") | .quotaInNamespace' ${TMP_JSON}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:39:27.554" level="INFO">Running command 'jq -r '. | select(.name=="97409-without-scheme") | .quotaInNamespace' /tmp/bb1.json 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:39:27.558" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:39:27.558" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20250702 18:39:27.552" endtime="20250702 18:39:27.559"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:39:27.559" level="INFO">-1</msg>
<status status="PASS" starttime="20250702 18:39:27.559" endtime="20250702 18:39:27.559"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:39:27.560" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:39:27.559" endtime="20250702 18:39:27.560"/>
</kw>
<status status="PASS" starttime="20250702 18:39:27.552" endtime="20250702 18:39:27.560"/>
</kw>
<msg timestamp="20250702 18:39:27.560" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:39:27.551" endtime="20250702 18:39:27.560"/>
</kw>
<msg timestamp="20250702 18:39:27.560" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20250702 18:39:27.551" endtime="20250702 18:39:27.560"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250702 18:39:27.560" endtime="20250702 18:39:27.560"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:39:27.563" level="INFO">Running command 'ozone sh bucket create /97409-without-scheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:39:30.566" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:39:30.567" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:39:27.561" endtime="20250702 18:39:30.567"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:39:30.567" level="INFO"/>
<status status="PASS" starttime="20250702 18:39:30.567" endtime="20250702 18:39:30.567"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:39:30.568" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:39:30.568" endtime="20250702 18:39:30.568"/>
</kw>
<status status="PASS" starttime="20250702 18:39:27.561" endtime="20250702 18:39:30.568"/>
</kw>
<msg timestamp="20250702 18:39:30.568" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:39:27.561" endtime="20250702 18:39:30.568"/>
</kw>
<status status="PASS" starttime="20250702 18:39:27.560" endtime="20250702 18:39:30.568"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 &gt; ${TMP_JSON}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:39:30.572" level="INFO">Running command 'ozone sh bucket info /97409-without-scheme/bb1 &gt; /tmp/bb1.json'.</msg>
<msg timestamp="20250702 18:39:33.591" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:39:33.591" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:39:30.569" endtime="20250702 18:39:33.591"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:39:33.592" level="INFO"/>
<status status="PASS" starttime="20250702 18:39:33.591" endtime="20250702 18:39:33.592"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:39:33.592" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:39:33.592" endtime="20250702 18:39:33.592"/>
</kw>
<status status="PASS" starttime="20250702 18:39:30.569" endtime="20250702 18:39:33.593"/>
</kw>
<msg timestamp="20250702 18:39:33.593" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:39:30.569" endtime="20250702 18:39:33.593"/>
</kw>
<status status="PASS" starttime="20250702 18:39:30.568" endtime="20250702 18:39:33.593"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>jq -r '. | select(.name=="bb1") | .quotaInBytes' ${TMP_JSON}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:39:33.596" level="INFO">Running command 'jq -r '. | select(.name=="bb1") | .quotaInBytes' /tmp/bb1.json 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:39:33.601" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:39:33.601" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20250702 18:39:33.594" endtime="20250702 18:39:33.601"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:39:33.602" level="INFO">-1</msg>
<status status="PASS" starttime="20250702 18:39:33.601" endtime="20250702 18:39:33.602"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:39:33.602" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:39:33.602" endtime="20250702 18:39:33.602"/>
</kw>
<status status="PASS" starttime="20250702 18:39:33.594" endtime="20250702 18:39:33.602"/>
</kw>
<msg timestamp="20250702 18:39:33.602" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:39:33.593" endtime="20250702 18:39:33.603"/>
</kw>
<msg timestamp="20250702 18:39:33.603" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20250702 18:39:33.593" endtime="20250702 18:39:33.603"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250702 18:39:33.603" endtime="20250702 18:39:33.603"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>jq -r '. | select(.name=="bb1") | .quotaInNamespace' ${TMP_JSON}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:39:33.606" level="INFO">Running command 'jq -r '. | select(.name=="bb1") | .quotaInNamespace' /tmp/bb1.json 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:39:33.610" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:39:33.611" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20250702 18:39:33.604" endtime="20250702 18:39:33.611"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:39:33.611" level="INFO">-1</msg>
<status status="PASS" starttime="20250702 18:39:33.611" endtime="20250702 18:39:33.611"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:39:33.612" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:39:33.611" endtime="20250702 18:39:33.612"/>
</kw>
<status status="PASS" starttime="20250702 18:39:33.604" endtime="20250702 18:39:33.612"/>
</kw>
<msg timestamp="20250702 18:39:33.612" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:39:33.604" endtime="20250702 18:39:33.612"/>
</kw>
<msg timestamp="20250702 18:39:33.612" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20250702 18:39:33.603" endtime="20250702 18:39:33.612"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250702 18:39:33.612" endtime="20250702 18:39:33.612"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:39:33.615" level="INFO">Running command 'ozone sh bucket delete /97409-without-scheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:39:36.472" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:39:36.472" level="INFO">${output} = Bucket bb1 is deleted</msg>
<status status="PASS" starttime="20250702 18:39:33.613" endtime="20250702 18:39:36.472"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:39:36.473" level="INFO">Bucket bb1 is deleted</msg>
<status status="PASS" starttime="20250702 18:39:36.472" endtime="20250702 18:39:36.473"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:39:36.473" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:39:36.473" endtime="20250702 18:39:36.473"/>
</kw>
<status status="PASS" starttime="20250702 18:39:33.613" endtime="20250702 18:39:36.473"/>
</kw>
<msg timestamp="20250702 18:39:36.473" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:39:33.613" endtime="20250702 18:39:36.474"/>
</kw>
<status status="PASS" starttime="20250702 18:39:33.612" endtime="20250702 18:39:36.474"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:39:36.477" level="INFO">Running command 'ozone sh volume delete /97409-without-scheme 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:39:39.375" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:39:39.375" level="INFO">${output} = Volume 97409-without-scheme is deleted</msg>
<status status="PASS" starttime="20250702 18:39:36.475" endtime="20250702 18:39:39.375"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:39:39.376" level="INFO">Volume 97409-without-scheme is deleted</msg>
<status status="PASS" starttime="20250702 18:39:39.376" endtime="20250702 18:39:39.376"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:39:39.377" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:39:39.376" endtime="20250702 18:39:39.377"/>
</kw>
<status status="PASS" starttime="20250702 18:39:36.474" endtime="20250702 18:39:39.377"/>
</kw>
<msg timestamp="20250702 18:39:39.377" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:39:36.474" endtime="20250702 18:39:39.378"/>
</kw>
<status status="PASS" starttime="20250702 18:39:36.474" endtime="20250702 18:39:39.378"/>
</kw>
<status status="PASS" starttime="20250702 18:37:43.724" endtime="20250702 18:39:39.378"/>
</kw>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20250702 18:37:43.724" endtime="20250702 18:39:39.378"/>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="PASS" starttime="20250702 18:37:43.701" endtime="20250702 18:39:39.379"/>
</suite>
<suite id="s1-s2-s5" name="Ozone-Shell" source="/opt/hadoop/smoketest/basic/ozone-shell.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Generate prefix</arg>
<arg>AND</arg>
<arg>Get Security Enabled From Config</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Generate prefix" library="ozone-shell-lib">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250702 18:39:39.387" level="INFO">${random} = 40406</msg>
<status status="PASS" starttime="20250702 18:39:39.386" endtime="20250702 18:39:39.387"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${prefix}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250702 18:39:39.387" level="INFO">${prefix} = 40406</msg>
<status status="PASS" starttime="20250702 18:39:39.387" endtime="20250702 18:39:39.387"/>
</kw>
<status status="PASS" starttime="20250702 18:39:39.386" endtime="20250702 18:39:39.387"/>
</kw>
<kw name="Get Security Enabled From Config" library="commonlib">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' != ''</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20250702 18:39:39.387" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:39:39.387" endtime="20250702 18:39:39.388"/>
</kw>
<kw name="Execute" library="os">
<var>${value}</var>
<arg>ozone getconf confKey ozone.security.enabled</arg>
<status status="NOT RUN" starttime="20250702 18:39:39.388" endtime="20250702 18:39:39.388"/>
</kw>
<if>
<branch type="IF" condition="'${value}' != 'true' and '${value}' != 'false'">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>false</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20250702 18:39:39.388" endtime="20250702 18:39:39.388"/>
</kw>
<status status="NOT RUN" starttime="20250702 18:39:39.388" endtime="20250702 18:39:39.388"/>
</branch>
<status status="NOT RUN" starttime="20250702 18:39:39.388" endtime="20250702 18:39:39.388"/>
</if>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${SECURITY_ENABLED}</arg>
<arg>${value}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20250702 18:39:39.388" endtime="20250702 18:39:39.388"/>
</kw>
<status status="PASS" starttime="20250702 18:39:39.387" endtime="20250702 18:39:39.388"/>
</kw>
<status status="PASS" starttime="20250702 18:39:39.386" endtime="20250702 18:39:39.388"/>
</kw>
<test id="s1-s2-s5-t1" name="RpcClient with port" line="27">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get Security Enabled From Config" library="commonlib">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' != ''</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20250702 18:39:39.389" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:39:39.389" endtime="20250702 18:39:39.389"/>
</kw>
<kw name="Execute" library="os">
<var>${value}</var>
<arg>ozone getconf confKey ozone.security.enabled</arg>
<status status="NOT RUN" starttime="20250702 18:39:39.390" endtime="20250702 18:39:39.390"/>
</kw>
<if>
<branch type="IF" condition="'${value}' != 'true' and '${value}' != 'false'">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>false</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20250702 18:39:39.390" endtime="20250702 18:39:39.390"/>
</kw>
<status status="NOT RUN" starttime="20250702 18:39:39.390" endtime="20250702 18:39:39.390"/>
</branch>
<status status="NOT RUN" starttime="20250702 18:39:39.390" endtime="20250702 18:39:39.390"/>
</if>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${SECURITY_ENABLED}</arg>
<arg>${value}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20250702 18:39:39.390" endtime="20250702 18:39:39.390"/>
</kw>
<status status="PASS" starttime="20250702 18:39:39.389" endtime="20250702 18:39:39.390"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250702 18:39:39.390" endtime="20250702 18:39:39.390"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:39:39.394" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:39:39.397" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:39:39.398" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250702 18:39:39.391" endtime="20250702 18:39:39.398"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:39:39.398" level="INFO">scm</msg>
<status status="PASS" starttime="20250702 18:39:39.398" endtime="20250702 18:39:39.398"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:39:39.399" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:39:39.398" endtime="20250702 18:39:39.399"/>
</kw>
<status status="PASS" starttime="20250702 18:39:39.391" endtime="20250702 18:39:39.399"/>
</kw>
<msg timestamp="20250702 18:39:39.399" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:39:39.391" endtime="20250702 18:39:39.399"/>
</kw>
<msg timestamp="20250702 18:39:39.399" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250702 18:39:39.391" endtime="20250702 18:39:39.399"/>
</kw>
<msg timestamp="20250702 18:39:39.399" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250702 18:39:39.390" endtime="20250702 18:39:39.399"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250702 18:39:39.400" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250702 18:39:39.400" endtime="20250702 18:39:39.400"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:39:39.403" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:39:39.455" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:39:39.455" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:39:39.401" endtime="20250702 18:39:39.455"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:39:39.456" level="INFO"/>
<status status="PASS" starttime="20250702 18:39:39.455" endtime="20250702 18:39:39.456"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:39:39.456" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:39:39.456" endtime="20250702 18:39:39.456"/>
</kw>
<status status="PASS" starttime="20250702 18:39:39.401" endtime="20250702 18:39:39.456"/>
</kw>
<msg timestamp="20250702 18:39:39.456" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:39:39.401" endtime="20250702 18:39:39.456"/>
</kw>
<status status="PASS" starttime="20250702 18:39:39.400" endtime="20250702 18:39:39.457"/>
</kw>
<status status="PASS" starttime="20250702 18:39:39.400" endtime="20250702 18:39:39.457"/>
</kw>
<status status="PASS" starttime="20250702 18:39:39.389" endtime="20250702 18:39:39.457"/>
</kw>
<status status="PASS" starttime="20250702 18:39:39.389" endtime="20250702 18:39:39.457"/>
</kw>
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-with-host</arg>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:39:39.460" level="INFO">Running command 'ozone sh volume info o3://om:9862/40406-with-host 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:39:42.422" level="INFO">${rc} = 255</msg>
<msg timestamp="20250702 18:39:42.422" level="INFO">${output} = VOLUME_NOT_FOUND Volume 40406-with-host is not found</msg>
<status status="PASS" starttime="20250702 18:39:39.458" endtime="20250702 18:39:42.422"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:39:42.423" level="INFO">VOLUME_NOT_FOUND Volume 40406-with-host is not found</msg>
<status status="PASS" starttime="20250702 18:39:42.422" endtime="20250702 18:39:42.423"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:39:42.423" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:39:42.423" endtime="20250702 18:39:42.423"/>
</kw>
<msg timestamp="20250702 18:39:42.423" level="INFO">${result} = VOLUME_NOT_FOUND Volume 40406-with-host is not found</msg>
<status status="PASS" starttime="20250702 18:39:39.457" endtime="20250702 18:39:42.423"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250702 18:39:42.423" endtime="20250702 18:39:42.424"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:39:42.427" level="INFO">Running command 'ozone sh volume create o3://om:9862/40406-with-host --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:39:45.340" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:39:45.340" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:39:42.425" endtime="20250702 18:39:45.340"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:39:45.341" level="INFO"/>
<status status="PASS" starttime="20250702 18:39:45.341" endtime="20250702 18:39:45.341"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:39:45.342" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:39:45.341" endtime="20250702 18:39:45.342"/>
</kw>
<status status="PASS" starttime="20250702 18:39:42.424" endtime="20250702 18:39:45.342"/>
</kw>
<msg timestamp="20250702 18:39:45.342" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:39:42.424" endtime="20250702 18:39:45.342"/>
</kw>
<msg timestamp="20250702 18:39:45.342" level="INFO">${result} = </msg>
<status status="PASS" starttime="20250702 18:39:42.424" endtime="20250702 18:39:45.342"/>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${result}</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20250702 18:39:45.342" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20250702 18:39:45.342" endtime="20250702 18:39:45.343"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '.[] | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:39:45.346" level="INFO">Running command 'ozone sh volume list o3://om:9862/ | jq -r '.[] | select(.name=="40406-with-host")' 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:39:48.595" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:39:48.595" level="INFO">${output} = {
  "metadata": {},
  "name": "40406-with-host",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "20...</msg>
<status status="PASS" starttime="20250702 18:39:45.344" endtime="20250702 18:39:48.595"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:39:48.596" level="INFO">{
  "metadata": {},
  "name": "40406-with-host",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2025-07-02T18:39:45.252Z",
  "modificationTime": "2025-07-02T18:39:45.252Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ],
      "aclSet": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "READ",
        "LIST"
      ],
      "aclSet": [
        "READ",
        "LIST"
      ]
    }
  ],
  "refCount": 0
}</msg>
<status status="PASS" starttime="20250702 18:39:48.595" endtime="20250702 18:39:48.596"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:39:48.596" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:39:48.596" endtime="20250702 18:39:48.596"/>
</kw>
<status status="PASS" starttime="20250702 18:39:45.343" endtime="20250702 18:39:48.596"/>
</kw>
<msg timestamp="20250702 18:39:48.596" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:39:45.343" endtime="20250702 18:39:48.596"/>
</kw>
<msg timestamp="20250702 18:39:48.597" level="INFO">${result} = {
  "metadata": {},
  "name": "40406-with-host",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "20...</msg>
<status status="PASS" starttime="20250702 18:39:45.343" endtime="20250702 18:39:48.597"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250702 18:39:48.597" endtime="20250702 18:39:48.597"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:39:48.600" level="INFO">Running command 'ozone sh volume setquota o3://om:9862/40406-with-host --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:39:51.732" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:39:51.732" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:39:48.598" endtime="20250702 18:39:51.732"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:39:51.733" level="INFO"/>
<status status="PASS" starttime="20250702 18:39:51.732" endtime="20250702 18:39:51.733"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:39:51.733" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:39:51.733" endtime="20250702 18:39:51.733"/>
</kw>
<status status="PASS" starttime="20250702 18:39:48.598" endtime="20250702 18:39:51.733"/>
</kw>
<msg timestamp="20250702 18:39:51.733" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:39:48.597" endtime="20250702 18:39:51.733"/>
</kw>
<status status="PASS" starttime="20250702 18:39:48.597" endtime="20250702 18:39:51.734"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:39:51.737" level="INFO">Running command 'ozone sh volume info o3://om:9862/40406-with-host | jq -r '. | select(.name=="40406-with-host") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:39:54.934" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:39:54.934" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20250702 18:39:51.735" endtime="20250702 18:39:54.934"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:39:54.935" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20250702 18:39:54.935" endtime="20250702 18:39:54.936"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:39:54.936" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:39:54.936" endtime="20250702 18:39:54.936"/>
</kw>
<status status="PASS" starttime="20250702 18:39:51.735" endtime="20250702 18:39:54.936"/>
</kw>
<msg timestamp="20250702 18:39:54.936" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:39:51.734" endtime="20250702 18:39:54.936"/>
</kw>
<msg timestamp="20250702 18:39:54.936" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20250702 18:39:51.734" endtime="20250702 18:39:54.936"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250702 18:39:54.937" endtime="20250702 18:39:54.937"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:39:54.940" level="INFO">Running command 'ozone sh bucket create o3://om:9862/40406-with-host/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:39:58.019" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:39:58.019" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:39:54.938" endtime="20250702 18:39:58.019"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:39:58.020" level="INFO"/>
<status status="PASS" starttime="20250702 18:39:58.019" endtime="20250702 18:39:58.020"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:39:58.020" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:39:58.020" endtime="20250702 18:39:58.020"/>
</kw>
<status status="PASS" starttime="20250702 18:39:54.938" endtime="20250702 18:39:58.021"/>
</kw>
<msg timestamp="20250702 18:39:58.021" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:39:54.937" endtime="20250702 18:39:58.021"/>
</kw>
<msg timestamp="20250702 18:39:58.021" level="INFO">${result} = </msg>
<status status="PASS" starttime="20250702 18:39:54.937" endtime="20250702 18:39:58.021"/>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${result}</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20250702 18:39:58.021" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20250702 18:39:58.021" endtime="20250702 18:39:58.021"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 &gt; ${TMP_JSON}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:39:58.025" level="INFO">Running command 'ozone sh bucket info o3://om:9862/40406-with-host/bb1 &gt; /tmp/bb1.json'.</msg>
<msg timestamp="20250702 18:40:01.380" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:40:01.380" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:39:58.022" endtime="20250702 18:40:01.380"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:40:01.381" level="INFO"/>
<status status="PASS" starttime="20250702 18:40:01.381" endtime="20250702 18:40:01.381"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:40:01.382" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:40:01.381" endtime="20250702 18:40:01.382"/>
</kw>
<status status="PASS" starttime="20250702 18:39:58.022" endtime="20250702 18:40:01.382"/>
</kw>
<msg timestamp="20250702 18:40:01.382" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:39:58.022" endtime="20250702 18:40:01.382"/>
</kw>
<status status="PASS" starttime="20250702 18:39:58.021" endtime="20250702 18:40:01.382"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>jq -r '. | select(.name=="bb1") | .storageType' ${TMP_JSON}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:40:01.386" level="INFO">Running command 'jq -r '. | select(.name=="bb1") | .storageType' /tmp/bb1.json 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:40:01.390" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:40:01.390" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20250702 18:40:01.383" endtime="20250702 18:40:01.390"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:40:01.391" level="INFO">DISK</msg>
<status status="PASS" starttime="20250702 18:40:01.391" endtime="20250702 18:40:01.391"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:40:01.392" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:40:01.391" endtime="20250702 18:40:01.392"/>
</kw>
<status status="PASS" starttime="20250702 18:40:01.383" endtime="20250702 18:40:01.392"/>
</kw>
<msg timestamp="20250702 18:40:01.392" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:40:01.383" endtime="20250702 18:40:01.392"/>
</kw>
<msg timestamp="20250702 18:40:01.392" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20250702 18:40:01.382" endtime="20250702 18:40:01.392"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250702 18:40:01.392" endtime="20250702 18:40:01.392"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>jq -r '. | select(.name=="bb1") | .quotaInBytes' ${TMP_JSON}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:40:01.395" level="INFO">Running command 'jq -r '. | select(.name=="bb1") | .quotaInBytes' /tmp/bb1.json 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:40:01.400" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:40:01.400" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20250702 18:40:01.393" endtime="20250702 18:40:01.400"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:40:01.401" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20250702 18:40:01.401" endtime="20250702 18:40:01.401"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:40:01.402" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:40:01.401" endtime="20250702 18:40:01.402"/>
</kw>
<status status="PASS" starttime="20250702 18:40:01.393" endtime="20250702 18:40:01.402"/>
</kw>
<msg timestamp="20250702 18:40:01.402" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:40:01.393" endtime="20250702 18:40:01.402"/>
</kw>
<msg timestamp="20250702 18:40:01.402" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20250702 18:40:01.392" endtime="20250702 18:40:01.402"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250702 18:40:01.402" endtime="20250702 18:40:01.402"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>jq -r '. | select(.name=="bb1") | .quotaInNamespace' ${TMP_JSON}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:40:01.405" level="INFO">Running command 'jq -r '. | select(.name=="bb1") | .quotaInNamespace' /tmp/bb1.json 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:40:01.410" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:40:01.410" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20250702 18:40:01.403" endtime="20250702 18:40:01.410"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:40:01.411" level="INFO">100</msg>
<status status="PASS" starttime="20250702 18:40:01.410" endtime="20250702 18:40:01.411"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:40:01.411" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:40:01.411" endtime="20250702 18:40:01.411"/>
</kw>
<status status="PASS" starttime="20250702 18:40:01.403" endtime="20250702 18:40:01.411"/>
</kw>
<msg timestamp="20250702 18:40:01.411" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:40:01.403" endtime="20250702 18:40:01.412"/>
</kw>
<msg timestamp="20250702 18:40:01.412" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20250702 18:40:01.402" endtime="20250702 18:40:01.412"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250702 18:40:01.412" endtime="20250702 18:40:01.412"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:40:01.415" level="INFO">Running command 'ozone sh bucket setquota o3://om:9862/40406-with-host/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:40:04.522" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:40:04.522" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:40:01.413" endtime="20250702 18:40:04.522"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:40:04.523" level="INFO"/>
<status status="PASS" starttime="20250702 18:40:04.523" endtime="20250702 18:40:04.523"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:40:04.524" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:40:04.523" endtime="20250702 18:40:04.524"/>
</kw>
<status status="PASS" starttime="20250702 18:40:01.413" endtime="20250702 18:40:04.524"/>
</kw>
<msg timestamp="20250702 18:40:04.524" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:40:01.413" endtime="20250702 18:40:04.524"/>
</kw>
<status status="PASS" starttime="20250702 18:40:01.412" endtime="20250702 18:40:04.524"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 &gt; ${TMP_JSON}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:40:04.528" level="INFO">Running command 'ozone sh bucket info o3://om:9862/40406-with-host/bb1 &gt; /tmp/bb1.json'.</msg>
<msg timestamp="20250702 18:40:07.890" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:40:07.890" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:40:04.525" endtime="20250702 18:40:07.890"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:40:07.891" level="INFO"/>
<status status="PASS" starttime="20250702 18:40:07.890" endtime="20250702 18:40:07.891"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:40:07.891" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:40:07.891" endtime="20250702 18:40:07.891"/>
</kw>
<status status="PASS" starttime="20250702 18:40:04.525" endtime="20250702 18:40:07.891"/>
</kw>
<msg timestamp="20250702 18:40:07.891" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:40:04.525" endtime="20250702 18:40:07.891"/>
</kw>
<status status="PASS" starttime="20250702 18:40:04.524" endtime="20250702 18:40:07.892"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>jq -r '. | select(.name=="bb1") | .quotaInBytes' ${TMP_JSON}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:40:07.895" level="INFO">Running command 'jq -r '. | select(.name=="bb1") | .quotaInBytes' /tmp/bb1.json 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:40:07.900" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:40:07.900" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20250702 18:40:07.893" endtime="20250702 18:40:07.900"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:40:07.900" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20250702 18:40:07.900" endtime="20250702 18:40:07.901"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:40:07.901" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:40:07.901" endtime="20250702 18:40:07.901"/>
</kw>
<status status="PASS" starttime="20250702 18:40:07.892" endtime="20250702 18:40:07.901"/>
</kw>
<msg timestamp="20250702 18:40:07.901" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:40:07.892" endtime="20250702 18:40:07.901"/>
</kw>
<msg timestamp="20250702 18:40:07.901" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20250702 18:40:07.892" endtime="20250702 18:40:07.901"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250702 18:40:07.901" endtime="20250702 18:40:07.902"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>jq -r '. | select(.name=="bb1") | .quotaInNamespace' ${TMP_JSON}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:40:07.905" level="INFO">Running command 'jq -r '. | select(.name=="bb1") | .quotaInNamespace' /tmp/bb1.json 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:40:07.910" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:40:07.910" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20250702 18:40:07.903" endtime="20250702 18:40:07.910"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:40:07.911" level="INFO">1000</msg>
<status status="PASS" starttime="20250702 18:40:07.910" endtime="20250702 18:40:07.911"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:40:07.911" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:40:07.911" endtime="20250702 18:40:07.911"/>
</kw>
<status status="PASS" starttime="20250702 18:40:07.902" endtime="20250702 18:40:07.911"/>
</kw>
<msg timestamp="20250702 18:40:07.911" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:40:07.902" endtime="20250702 18:40:07.912"/>
</kw>
<msg timestamp="20250702 18:40:07.912" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20250702 18:40:07.902" endtime="20250702 18:40:07.912"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250702 18:40:07.912" endtime="20250702 18:40:07.912"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '.[] | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:40:07.915" level="INFO">Running command 'ozone sh bucket list o3://om:9862/40406-with-host/ | jq -r '.[] | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:40:11.158" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:40:11.158" level="INFO">${output} = 40406-with-host</msg>
<status status="PASS" starttime="20250702 18:40:07.913" endtime="20250702 18:40:11.158"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:40:11.159" level="INFO">40406-with-host</msg>
<status status="PASS" starttime="20250702 18:40:11.158" endtime="20250702 18:40:11.159"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:40:11.159" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:40:11.159" endtime="20250702 18:40:11.159"/>
</kw>
<status status="PASS" starttime="20250702 18:40:07.913" endtime="20250702 18:40:11.159"/>
</kw>
<msg timestamp="20250702 18:40:11.159" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:40:07.913" endtime="20250702 18:40:11.159"/>
</kw>
<msg timestamp="20250702 18:40:11.160" level="INFO">${result} = 40406-with-host</msg>
<status status="PASS" starttime="20250702 18:40:07.912" endtime="20250702 18:40:11.160"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250702 18:40:11.160" endtime="20250702 18:40:11.160"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1 /tmp/key1_RATIS /tmp/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:40:11.164" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 /tmp/key1_RATIS /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:40:11.167" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:40:11.167" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:40:11.162" endtime="20250702 18:40:11.167"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:40:11.168" level="INFO"/>
<status status="PASS" starttime="20250702 18:40:11.168" endtime="20250702 18:40:11.168"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:40:11.169" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:40:11.168" endtime="20250702 18:40:11.169"/>
</kw>
<status status="PASS" starttime="20250702 18:40:11.161" endtime="20250702 18:40:11.169"/>
</kw>
<msg timestamp="20250702 18:40:11.169" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:40:11.161" endtime="20250702 18:40:11.169"/>
</kw>
<status status="PASS" starttime="20250702 18:40:11.161" endtime="20250702 18:40:11.169"/>
</kw>
<kw name="Ozone Shell Batch" library="shell">
<arg>key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<arg>key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<arg>key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<arg>key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<arg>key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<arg>key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<kw name="Catenate" library="BuiltIn">
<var>${cmd}</var>
<arg>SEPARATOR=' --execute '</arg>
<arg>@{commands}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20250702 18:40:11.170" level="INFO">${cmd} = key put o3://om:9862/40406-with-host/bb1/key1 /opt/hadoop/NOTICE.txt' --execute 'key get o3://om:9862/40406-with-host/bb1/key1 /tmp/NOTICE.txt.1' --execute 'key put -t RATIS o3://om:9862/40406-with-ho...</msg>
<status status="PASS" starttime="20250702 18:40:11.170" endtime="20250702 18:40:11.170"/>
</kw>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>ozone sh --execute '${cmd}'</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>ozone sh --execute '${cmd}'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:40:11.173" level="INFO">Running command 'ozone sh --execute 'key put o3://om:9862/40406-with-host/bb1/key1 /opt/hadoop/NOTICE.txt' --execute 'key get o3://om:9862/40406-with-host/bb1/key1 /tmp/NOTICE.txt.1' --execute 'key put -t RATIS o3://om:9862/40406-with-host/bb1/key1_RATIS /opt/hadoop/NOTICE.txt' --execute 'key get o3://om:9862/40406-with-host/bb1/key1_RATIS /tmp/key1_RATIS' --execute 'key cp o3://om:9862/40406-with-host/bb1 key1 key1-copy' --execute 'key get o3://om:9862/40406-with-host/bb1/key1-copy /tmp/key1-copy' 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:40:16.962" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:40:16.962" level="INFO">${output} = key put o3://om:9862/40406-with-host/bb1/key1 /opt/hadoop/NOTICE.txt
key get o3://om:9862/40406-with-host/bb1/key1 /tmp/NOTICE.txt.1
key put -t RATIS o3://om:9862/40406-with-host/bb1/key1_RATIS /opt/h...</msg>
<status status="PASS" starttime="20250702 18:40:11.171" endtime="20250702 18:40:16.962"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:40:16.963" level="INFO">key put o3://om:9862/40406-with-host/bb1/key1 /opt/hadoop/NOTICE.txt
key get o3://om:9862/40406-with-host/bb1/key1 /tmp/NOTICE.txt.1
key put -t RATIS o3://om:9862/40406-with-host/bb1/key1_RATIS /opt/hadoop/NOTICE.txt
key get o3://om:9862/40406-with-host/bb1/key1_RATIS /tmp/key1_RATIS
key cp o3://om:9862/40406-with-host/bb1 key1 key1-copy
key get o3://om:9862/40406-with-host/bb1/key1-copy /tmp/key1-copy</msg>
<status status="PASS" starttime="20250702 18:40:16.963" endtime="20250702 18:40:16.963"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:40:16.963" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:40:16.963" endtime="20250702 18:40:16.964"/>
</kw>
<status status="PASS" starttime="20250702 18:40:11.170" endtime="20250702 18:40:16.964"/>
</kw>
<msg timestamp="20250702 18:40:16.964" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:40:11.170" endtime="20250702 18:40:16.964"/>
</kw>
<status status="PASS" starttime="20250702 18:40:11.169" endtime="20250702 18:40:16.964"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:40:16.967" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:40:16.970" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:40:16.970" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:40:16.965" endtime="20250702 18:40:16.970"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:40:16.971" level="INFO"/>
<status status="PASS" starttime="20250702 18:40:16.971" endtime="20250702 18:40:16.971"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:40:16.972" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:40:16.971" endtime="20250702 18:40:16.972"/>
</kw>
<status status="PASS" starttime="20250702 18:40:16.965" endtime="20250702 18:40:16.972"/>
</kw>
<msg timestamp="20250702 18:40:16.972" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:40:16.964" endtime="20250702 18:40:16.972"/>
</kw>
<status status="PASS" starttime="20250702 18:40:16.964" endtime="20250702 18:40:16.972"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:40:16.975" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:40:16.978" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:40:16.978" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:40:16.973" endtime="20250702 18:40:16.978"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:40:16.979" level="INFO"/>
<status status="PASS" starttime="20250702 18:40:16.979" endtime="20250702 18:40:16.979"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:40:16.980" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:40:16.979" endtime="20250702 18:40:16.980"/>
</kw>
<status status="PASS" starttime="20250702 18:40:16.973" endtime="20250702 18:40:16.980"/>
</kw>
<msg timestamp="20250702 18:40:16.980" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:40:16.973" endtime="20250702 18:40:16.980"/>
</kw>
<status status="PASS" starttime="20250702 18:40:16.972" endtime="20250702 18:40:16.980"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:40:16.984" level="INFO">Running command 'ozone sh key info o3://om:9862/40406-with-host/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")' 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:40:20.420" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:40:20.420" level="INFO">${output} = {
  "volumeName": "40406-with-host",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "owner": "testuser",
  "dataSize": 15892,
  "creationTime": "2025-07-02T18:40:16.185Z",
  "modificationTime": "202...</msg>
<status status="PASS" starttime="20250702 18:40:16.981" endtime="20250702 18:40:20.420"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:40:20.421" level="INFO">{
  "volumeName": "40406-with-host",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "owner": "testuser",
  "dataSize": 15892,
  "creationTime": "2025-07-02T18:40:16.185Z",
  "modificationTime": "2025-07-02T18:40:16.250Z",
  "replicationConfig": {
    "replicationFactor": "THREE",
    "requiredNodes": 3,
    "minimumNodes": 1,
    "replicationType": "RATIS"
  },
  "metadata": {},
  "tags": {},
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 115816896921600010,
      "length": 15892,
      "offset": 0,
      "keyOffset": 0
    }
  ],
  "generation": 94,
  "file": true
}</msg>
<status status="PASS" starttime="20250702 18:40:20.420" endtime="20250702 18:40:20.421"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:40:20.422" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:40:20.422" endtime="20250702 18:40:20.422"/>
</kw>
<status status="PASS" starttime="20250702 18:40:16.981" endtime="20250702 18:40:20.422"/>
</kw>
<msg timestamp="20250702 18:40:20.422" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:40:16.981" endtime="20250702 18:40:20.422"/>
</kw>
<msg timestamp="20250702 18:40:20.422" level="INFO">${result} = {
  "volumeName": "40406-with-host",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "owner": "testuser",
  "dataSize": 15892,
  "creationTime": "2025-07-02T18:40:16.185Z",
  "modificationTime": "202...</msg>
<status status="PASS" starttime="20250702 18:40:16.980" endtime="20250702 18:40:20.422"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250702 18:40:20.423" endtime="20250702 18:40:20.423"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:40:20.426" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:40:20.429" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:40:20.429" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:40:20.424" endtime="20250702 18:40:20.429"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:40:20.430" level="INFO"/>
<status status="PASS" starttime="20250702 18:40:20.429" endtime="20250702 18:40:20.430"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:40:20.430" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:40:20.430" endtime="20250702 18:40:20.430"/>
</kw>
<status status="PASS" starttime="20250702 18:40:20.423" endtime="20250702 18:40:20.430"/>
</kw>
<msg timestamp="20250702 18:40:20.430" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:40:20.423" endtime="20250702 18:40:20.430"/>
</kw>
<status status="PASS" starttime="20250702 18:40:20.423" endtime="20250702 18:40:20.431"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:40:20.433" level="INFO">Running command 'ozone sh key get o3://om:9862/40406-with-host/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:40:23.507" level="INFO">${rc} = 255</msg>
<msg timestamp="20250702 18:40:23.507" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20250702 18:40:20.431" endtime="20250702 18:40:23.507"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:40:23.508" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20250702 18:40:23.508" endtime="20250702 18:40:23.509"/>
</kw>
<msg timestamp="20250702 18:40:23.509" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20250702 18:40:20.431" endtime="20250702 18:40:23.509"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250702 18:40:23.509" endtime="20250702 18:40:23.509"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:40:23.513" level="INFO">Running command 'ozone sh key get --force o3://om:9862/40406-with-host/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:40:28.341" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:40:28.341" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:40:23.510" endtime="20250702 18:40:28.341"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:40:28.342" level="INFO"/>
<status status="PASS" starttime="20250702 18:40:28.341" endtime="20250702 18:40:28.342"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:40:28.342" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:40:28.342" endtime="20250702 18:40:28.342"/>
</kw>
<status status="PASS" starttime="20250702 18:40:23.510" endtime="20250702 18:40:28.343"/>
</kw>
<msg timestamp="20250702 18:40:28.343" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:40:23.510" endtime="20250702 18:40:28.343"/>
</kw>
<msg timestamp="20250702 18:40:28.343" level="INFO">${result} = </msg>
<status status="PASS" starttime="20250702 18:40:23.509" endtime="20250702 18:40:28.343"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250702 18:40:28.343" endtime="20250702 18:40:28.343"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 sample.txt</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:40:28.346" level="INFO">Running command 'ozone sh key put o3://om:9862/40406-with-host/bb1/key1 sample.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:40:31.576" level="INFO">${rc} = 255</msg>
<msg timestamp="20250702 18:40:31.576" level="INFO">${output} = Error: File not found: sample.txt</msg>
<status status="PASS" starttime="20250702 18:40:28.344" endtime="20250702 18:40:31.576"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:40:31.577" level="INFO">Error: File not found: sample.txt</msg>
<status status="PASS" starttime="20250702 18:40:31.576" endtime="20250702 18:40:31.577"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:40:31.577" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:40:31.577" endtime="20250702 18:40:31.577"/>
</kw>
<msg timestamp="20250702 18:40:31.578" level="INFO">${result} = Error: File not found: sample.txt</msg>
<status status="PASS" starttime="20250702 18:40:28.343" endtime="20250702 18:40:31.578"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>File not found: sample.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250702 18:40:31.578" endtime="20250702 18:40:31.578"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:40:31.582" level="INFO">Running command 'ozone sh key info o3://om:9862/40406-with-host/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:40:35.070" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:40:35.070" level="INFO">${output} = {
  "volumeName": "40406-with-host",
  "bucketName": "bb1",
  "name": "key1",
  "owner": "testuser",
  "dataSize": 15892,
  "creationTime": "2025-07-02T18:40:14.368Z",
  "modificationTime": "2025-07-0...</msg>
<status status="PASS" starttime="20250702 18:40:31.579" endtime="20250702 18:40:35.070"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:40:35.071" level="INFO">{
  "volumeName": "40406-with-host",
  "bucketName": "bb1",
  "name": "key1",
  "owner": "testuser",
  "dataSize": 15892,
  "creationTime": "2025-07-02T18:40:14.368Z",
  "modificationTime": "2025-07-02T18:40:15.910Z",
  "replicationConfig": {
    "replicationFactor": "THREE",
    "requiredNodes": 3,
    "minimumNodes": 1,
    "replicationType": "RATIS"
  },
  "metadata": {},
  "tags": {},
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 115816896921600009,
      "length": 15892,
      "offset": 0,
      "keyOffset": 0
    }
  ],
  "generation": 92,
  "file": true
}</msg>
<status status="PASS" starttime="20250702 18:40:35.070" endtime="20250702 18:40:35.071"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:40:35.071" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:40:35.071" endtime="20250702 18:40:35.071"/>
</kw>
<status status="PASS" starttime="20250702 18:40:31.579" endtime="20250702 18:40:35.071"/>
</kw>
<msg timestamp="20250702 18:40:35.071" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:40:31.579" endtime="20250702 18:40:35.072"/>
</kw>
<msg timestamp="20250702 18:40:35.072" level="INFO">${result} = {
  "volumeName": "40406-with-host",
  "bucketName": "bb1",
  "name": "key1",
  "owner": "testuser",
  "dataSize": 15892,
  "creationTime": "2025-07-02T18:40:14.368Z",
  "modificationTime": "2025-07-0...</msg>
<status status="PASS" starttime="20250702 18:40:31.578" endtime="20250702 18:40:35.072"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250702 18:40:35.072" endtime="20250702 18:40:35.072"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250702 18:40:35.072" endtime="20250702 18:40:35.072"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[] | select(.name=="key1") | .name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:40:35.076" level="INFO">Running command 'ozone sh key list o3://om:9862/40406-with-host/bb1 | jq -r '.[] | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:40:38.412" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:40:38.412" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20250702 18:40:35.073" endtime="20250702 18:40:38.412"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:40:38.413" level="INFO">key1</msg>
<status status="PASS" starttime="20250702 18:40:38.412" endtime="20250702 18:40:38.413"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:40:38.413" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:40:38.413" endtime="20250702 18:40:38.414"/>
</kw>
<status status="PASS" starttime="20250702 18:40:35.073" endtime="20250702 18:40:38.414"/>
</kw>
<msg timestamp="20250702 18:40:38.414" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:40:35.073" endtime="20250702 18:40:38.414"/>
</kw>
<msg timestamp="20250702 18:40:38.414" level="INFO">${result} = key1</msg>
<status status="PASS" starttime="20250702 18:40:35.072" endtime="20250702 18:40:38.414"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250702 18:40:38.415" endtime="20250702 18:40:38.415"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:40:38.418" level="INFO">Running command 'ozone sh key rename o3://om:9862/40406-with-host/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:40:41.518" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:40:41.518" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:40:38.416" endtime="20250702 18:40:41.518"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:40:41.519" level="INFO"/>
<status status="PASS" starttime="20250702 18:40:41.518" endtime="20250702 18:40:41.519"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:40:41.519" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:40:41.519" endtime="20250702 18:40:41.519"/>
</kw>
<status status="PASS" starttime="20250702 18:40:38.416" endtime="20250702 18:40:41.519"/>
</kw>
<msg timestamp="20250702 18:40:41.519" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:40:38.415" endtime="20250702 18:40:41.519"/>
</kw>
<status status="PASS" starttime="20250702 18:40:38.415" endtime="20250702 18:40:41.520"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[] | select(.name=="key2") | .name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:40:41.523" level="INFO">Running command 'ozone sh key list o3://om:9862/40406-with-host/bb1 | jq -r '.[] | select(.name=="key2") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:40:44.890" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:40:44.890" level="INFO">${output} = key2</msg>
<status status="PASS" starttime="20250702 18:40:41.521" endtime="20250702 18:40:44.890"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:40:44.891" level="INFO">key2</msg>
<status status="PASS" starttime="20250702 18:40:44.890" endtime="20250702 18:40:44.891"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:40:44.891" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:40:44.891" endtime="20250702 18:40:44.891"/>
</kw>
<status status="PASS" starttime="20250702 18:40:41.520" endtime="20250702 18:40:44.892"/>
</kw>
<msg timestamp="20250702 18:40:44.892" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:40:41.520" endtime="20250702 18:40:44.892"/>
</kw>
<msg timestamp="20250702 18:40:44.892" level="INFO">${result} = key2</msg>
<status status="PASS" starttime="20250702 18:40:41.520" endtime="20250702 18:40:44.892"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250702 18:40:44.892" endtime="20250702 18:40:44.892"/>
</kw>
<kw name="Ozone Shell Batch" library="shell">
<arg>key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<arg>key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<arg>key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<kw name="Catenate" library="BuiltIn">
<var>${cmd}</var>
<arg>SEPARATOR=' --execute '</arg>
<arg>@{commands}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20250702 18:40:44.893" level="INFO">${cmd} = key delete o3://om:9862/40406-with-host/bb1/key2' --execute 'key delete o3://om:9862/40406-with-host/bb1/key1_RATIS' --execute 'key delete o3://om:9862/40406-with-host/bb1/key1-copy</msg>
<status status="PASS" starttime="20250702 18:40:44.893" endtime="20250702 18:40:44.893"/>
</kw>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>ozone sh --execute '${cmd}'</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>ozone sh --execute '${cmd}'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:40:44.897" level="INFO">Running command 'ozone sh --execute 'key delete o3://om:9862/40406-with-host/bb1/key2' --execute 'key delete o3://om:9862/40406-with-host/bb1/key1_RATIS' --execute 'key delete o3://om:9862/40406-with-host/bb1/key1-copy' 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:40:48.435" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:40:48.435" level="INFO">${output} = key delete o3://om:9862/40406-with-host/bb1/key2
Key moved inside Trash: /.Trash/testuser/Current/key2 
key delete o3://om:9862/40406-with-host/bb1/key1_RATIS
Key moved inside Trash: /.Trash/testuser/...</msg>
<status status="PASS" starttime="20250702 18:40:44.894" endtime="20250702 18:40:48.435"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:40:48.436" level="INFO">key delete o3://om:9862/40406-with-host/bb1/key2
Key moved inside Trash: /.Trash/testuser/Current/key2 
key delete o3://om:9862/40406-with-host/bb1/key1_RATIS
Key moved inside Trash: /.Trash/testuser/Current/key1_RATIS 
key delete o3://om:9862/40406-with-host/bb1/key1-copy
Key moved inside Trash: /.Trash/testuser/Current/key1-copy </msg>
<status status="PASS" starttime="20250702 18:40:48.436" endtime="20250702 18:40:48.436"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:40:48.437" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:40:48.436" endtime="20250702 18:40:48.437"/>
</kw>
<status status="PASS" starttime="20250702 18:40:44.894" endtime="20250702 18:40:48.437"/>
</kw>
<msg timestamp="20250702 18:40:48.437" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:40:44.893" endtime="20250702 18:40:48.437"/>
</kw>
<status status="PASS" starttime="20250702 18:40:44.892" endtime="20250702 18:40:48.437"/>
</kw>
<status status="PASS" starttime="20250702 18:40:11.160" endtime="20250702 18:40:48.437"/>
</kw>
<status status="PASS" starttime="20250702 18:40:11.160" endtime="20250702 18:40:48.437"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:40:48.441" level="INFO">Running command 'ozone sh volume clrquota --space-quota o3://om:9862/40406-with-host 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:40:51.534" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:40:51.534" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:40:48.438" endtime="20250702 18:40:51.534"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:40:51.535" level="INFO"/>
<status status="PASS" starttime="20250702 18:40:51.535" endtime="20250702 18:40:51.535"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:40:51.536" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:40:51.535" endtime="20250702 18:40:51.536"/>
</kw>
<status status="PASS" starttime="20250702 18:40:48.438" endtime="20250702 18:40:51.536"/>
</kw>
<msg timestamp="20250702 18:40:51.536" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:40:48.438" endtime="20250702 18:40:51.536"/>
</kw>
<status status="PASS" starttime="20250702 18:40:48.437" endtime="20250702 18:40:51.536"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:40:51.540" level="INFO">Running command 'ozone sh volume info o3://om:9862/40406-with-host | jq -r '. | select(.name=="40406-with-host") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:40:54.827" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:40:54.827" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20250702 18:40:51.537" endtime="20250702 18:40:54.827"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:40:54.828" level="INFO">-1</msg>
<status status="PASS" starttime="20250702 18:40:54.827" endtime="20250702 18:40:54.828"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:40:54.828" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:40:54.828" endtime="20250702 18:40:54.828"/>
</kw>
<status status="PASS" starttime="20250702 18:40:51.537" endtime="20250702 18:40:54.828"/>
</kw>
<msg timestamp="20250702 18:40:54.828" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:40:51.537" endtime="20250702 18:40:54.828"/>
</kw>
<msg timestamp="20250702 18:40:54.829" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20250702 18:40:51.536" endtime="20250702 18:40:54.829"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250702 18:40:54.829" endtime="20250702 18:40:54.829"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:40:54.832" level="INFO">Running command 'ozone sh volume clrquota --namespace-quota o3://om:9862/40406-with-host 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:40:57.825" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:40:57.825" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:40:54.830" endtime="20250702 18:40:57.825"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:40:57.826" level="INFO"/>
<status status="PASS" starttime="20250702 18:40:57.825" endtime="20250702 18:40:57.826"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:40:57.827" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:40:57.826" endtime="20250702 18:40:57.827"/>
</kw>
<status status="PASS" starttime="20250702 18:40:54.830" endtime="20250702 18:40:57.827"/>
</kw>
<msg timestamp="20250702 18:40:57.827" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:40:54.829" endtime="20250702 18:40:57.827"/>
</kw>
<status status="PASS" starttime="20250702 18:40:54.829" endtime="20250702 18:40:57.827"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:40:57.831" level="INFO">Running command 'ozone sh volume info o3://om:9862/40406-with-host | jq -r '. | select(.name=="40406-with-host") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:41:00.986" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:41:00.986" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20250702 18:40:57.828" endtime="20250702 18:41:00.986"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:41:00.987" level="INFO">-1</msg>
<status status="PASS" starttime="20250702 18:41:00.986" endtime="20250702 18:41:00.987"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:41:00.987" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:41:00.987" endtime="20250702 18:41:00.987"/>
</kw>
<status status="PASS" starttime="20250702 18:40:57.828" endtime="20250702 18:41:00.988"/>
</kw>
<msg timestamp="20250702 18:41:00.988" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:40:57.828" endtime="20250702 18:41:00.988"/>
</kw>
<msg timestamp="20250702 18:41:00.988" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20250702 18:40:57.827" endtime="20250702 18:41:00.988"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250702 18:41:00.988" endtime="20250702 18:41:00.988"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:41:00.992" level="INFO">Running command 'ozone sh bucket clrquota --space-quota o3://om:9862/40406-with-host/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:41:04.129" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:41:04.129" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:41:00.990" endtime="20250702 18:41:04.129"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:41:04.130" level="INFO"/>
<status status="PASS" starttime="20250702 18:41:04.129" endtime="20250702 18:41:04.130"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:41:04.130" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:41:04.130" endtime="20250702 18:41:04.130"/>
</kw>
<status status="PASS" starttime="20250702 18:41:00.989" endtime="20250702 18:41:04.130"/>
</kw>
<msg timestamp="20250702 18:41:04.130" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:41:00.989" endtime="20250702 18:41:04.131"/>
</kw>
<status status="PASS" starttime="20250702 18:41:00.988" endtime="20250702 18:41:04.131"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:41:04.134" level="INFO">Running command 'ozone sh bucket info o3://om:9862/40406-with-host/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:41:07.402" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:41:07.402" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20250702 18:41:04.132" endtime="20250702 18:41:07.402"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:41:07.403" level="INFO">-1</msg>
<status status="PASS" starttime="20250702 18:41:07.402" endtime="20250702 18:41:07.403"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:41:07.403" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:41:07.403" endtime="20250702 18:41:07.403"/>
</kw>
<status status="PASS" starttime="20250702 18:41:04.132" endtime="20250702 18:41:07.404"/>
</kw>
<msg timestamp="20250702 18:41:07.404" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:41:04.131" endtime="20250702 18:41:07.404"/>
</kw>
<msg timestamp="20250702 18:41:07.404" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20250702 18:41:04.131" endtime="20250702 18:41:07.404"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250702 18:41:07.404" endtime="20250702 18:41:07.404"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:41:07.408" level="INFO">Running command 'ozone sh bucket clrquota --namespace-quota o3://om:9862/40406-with-host/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:41:10.548" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:41:10.548" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:41:07.405" endtime="20250702 18:41:10.548"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:41:10.549" level="INFO"/>
<status status="PASS" starttime="20250702 18:41:10.549" endtime="20250702 18:41:10.549"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:41:10.550" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:41:10.549" endtime="20250702 18:41:10.550"/>
</kw>
<status status="PASS" starttime="20250702 18:41:07.405" endtime="20250702 18:41:10.550"/>
</kw>
<msg timestamp="20250702 18:41:10.550" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:41:07.405" endtime="20250702 18:41:10.550"/>
</kw>
<status status="PASS" starttime="20250702 18:41:07.404" endtime="20250702 18:41:10.550"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:41:10.554" level="INFO">Running command 'ozone sh bucket info o3://om:9862/40406-with-host/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:41:13.744" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:41:13.744" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20250702 18:41:10.551" endtime="20250702 18:41:13.744"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:41:13.745" level="INFO">-1</msg>
<status status="PASS" starttime="20250702 18:41:13.745" endtime="20250702 18:41:13.745"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:41:13.746" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:41:13.745" endtime="20250702 18:41:13.746"/>
</kw>
<status status="PASS" starttime="20250702 18:41:10.551" endtime="20250702 18:41:13.746"/>
</kw>
<msg timestamp="20250702 18:41:13.746" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:41:10.551" endtime="20250702 18:41:13.746"/>
</kw>
<msg timestamp="20250702 18:41:13.746" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20250702 18:41:10.550" endtime="20250702 18:41:13.746"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250702 18:41:13.746" endtime="20250702 18:41:13.747"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete -r --yes ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:41:13.750" level="INFO">Running command 'ozone sh bucket delete -r --yes o3://om:9862/40406-with-host/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:41:17.151" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:41:17.151" level="INFO">${output} = Bucket bb1 is deleted</msg>
<status status="PASS" starttime="20250702 18:41:13.748" endtime="20250702 18:41:17.151"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:41:17.152" level="INFO">Bucket bb1 is deleted</msg>
<status status="PASS" starttime="20250702 18:41:17.152" endtime="20250702 18:41:17.152"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:41:17.153" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:41:17.152" endtime="20250702 18:41:17.153"/>
</kw>
<status status="PASS" starttime="20250702 18:41:13.747" endtime="20250702 18:41:17.153"/>
</kw>
<msg timestamp="20250702 18:41:17.153" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:41:13.747" endtime="20250702 18:41:17.153"/>
</kw>
<status status="PASS" starttime="20250702 18:41:13.747" endtime="20250702 18:41:17.153"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:41:17.157" level="INFO">Running command 'ozone sh volume delete o3://om:9862/40406-with-host 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:41:20.286" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:41:20.286" level="INFO">${output} = Volume 40406-with-host is deleted</msg>
<status status="PASS" starttime="20250702 18:41:17.154" endtime="20250702 18:41:20.286"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:41:20.287" level="INFO">Volume 40406-with-host is deleted</msg>
<status status="PASS" starttime="20250702 18:41:20.286" endtime="20250702 18:41:20.287"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:41:20.287" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:41:20.287" endtime="20250702 18:41:20.287"/>
</kw>
<status status="PASS" starttime="20250702 18:41:17.154" endtime="20250702 18:41:20.287"/>
</kw>
<msg timestamp="20250702 18:41:20.287" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:41:17.154" endtime="20250702 18:41:20.288"/>
</kw>
<status status="PASS" starttime="20250702 18:41:17.153" endtime="20250702 18:41:20.288"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:41:20.291" level="INFO">Running command 'ozone sh volume create o3://om:9862/40406-with-host 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:41:23.331" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:41:23.331" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:41:20.289" endtime="20250702 18:41:23.331"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:41:23.332" level="INFO"/>
<status status="PASS" starttime="20250702 18:41:23.332" endtime="20250702 18:41:23.332"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:41:23.333" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:41:23.332" endtime="20250702 18:41:23.333"/>
</kw>
<status status="PASS" starttime="20250702 18:41:20.288" endtime="20250702 18:41:23.333"/>
</kw>
<msg timestamp="20250702 18:41:23.333" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:41:20.288" endtime="20250702 18:41:23.333"/>
</kw>
<status status="PASS" starttime="20250702 18:41:20.288" endtime="20250702 18:41:23.333"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume info ${protocol}${server}/${volume} &gt; ${TMP_JSON}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:41:23.337" level="INFO">Running command 'ozone sh volume info o3://om:9862/40406-with-host &gt; /tmp/bb1.json'.</msg>
<msg timestamp="20250702 18:41:26.653" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:41:26.653" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:41:23.334" endtime="20250702 18:41:26.653"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:41:26.654" level="INFO"/>
<status status="PASS" starttime="20250702 18:41:26.654" endtime="20250702 18:41:26.654"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:41:26.655" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:41:26.654" endtime="20250702 18:41:26.655"/>
</kw>
<status status="PASS" starttime="20250702 18:41:23.334" endtime="20250702 18:41:26.655"/>
</kw>
<msg timestamp="20250702 18:41:26.655" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:41:23.334" endtime="20250702 18:41:26.655"/>
</kw>
<status status="PASS" starttime="20250702 18:41:23.333" endtime="20250702 18:41:26.655"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>jq -r '. | select(.name=="${volume}") | .quotaInBytes' ${TMP_JSON}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:41:26.659" level="INFO">Running command 'jq -r '. | select(.name=="40406-with-host") | .quotaInBytes' /tmp/bb1.json 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:41:26.663" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:41:26.663" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20250702 18:41:26.656" endtime="20250702 18:41:26.663"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:41:26.664" level="INFO">-1</msg>
<status status="PASS" starttime="20250702 18:41:26.664" endtime="20250702 18:41:26.664"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:41:26.664" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:41:26.664" endtime="20250702 18:41:26.664"/>
</kw>
<status status="PASS" starttime="20250702 18:41:26.656" endtime="20250702 18:41:26.665"/>
</kw>
<msg timestamp="20250702 18:41:26.665" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:41:26.656" endtime="20250702 18:41:26.665"/>
</kw>
<msg timestamp="20250702 18:41:26.665" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20250702 18:41:26.655" endtime="20250702 18:41:26.665"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250702 18:41:26.665" endtime="20250702 18:41:26.665"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>jq -r '. | select(.name=="${volume}") | .quotaInNamespace' ${TMP_JSON}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:41:26.668" level="INFO">Running command 'jq -r '. | select(.name=="40406-with-host") | .quotaInNamespace' /tmp/bb1.json 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:41:26.673" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:41:26.674" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20250702 18:41:26.666" endtime="20250702 18:41:26.674"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:41:26.674" level="INFO">-1</msg>
<status status="PASS" starttime="20250702 18:41:26.674" endtime="20250702 18:41:26.674"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:41:26.675" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:41:26.674" endtime="20250702 18:41:26.675"/>
</kw>
<status status="PASS" starttime="20250702 18:41:26.666" endtime="20250702 18:41:26.675"/>
</kw>
<msg timestamp="20250702 18:41:26.675" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:41:26.666" endtime="20250702 18:41:26.675"/>
</kw>
<msg timestamp="20250702 18:41:26.675" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20250702 18:41:26.665" endtime="20250702 18:41:26.675"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250702 18:41:26.675" endtime="20250702 18:41:26.676"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:41:26.679" level="INFO">Running command 'ozone sh bucket create o3://om:9862/40406-with-host/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:41:29.738" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:41:29.738" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:41:26.677" endtime="20250702 18:41:29.738"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:41:29.739" level="INFO"/>
<status status="PASS" starttime="20250702 18:41:29.738" endtime="20250702 18:41:29.739"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:41:29.740" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:41:29.739" endtime="20250702 18:41:29.740"/>
</kw>
<status status="PASS" starttime="20250702 18:41:26.676" endtime="20250702 18:41:29.740"/>
</kw>
<msg timestamp="20250702 18:41:29.740" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:41:26.676" endtime="20250702 18:41:29.740"/>
</kw>
<status status="PASS" starttime="20250702 18:41:26.676" endtime="20250702 18:41:29.740"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 &gt; ${TMP_JSON}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:41:29.744" level="INFO">Running command 'ozone sh bucket info o3://om:9862/40406-with-host/bb1 &gt; /tmp/bb1.json'.</msg>
<msg timestamp="20250702 18:41:32.935" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:41:32.935" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:41:29.742" endtime="20250702 18:41:32.935"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:41:32.936" level="INFO"/>
<status status="PASS" starttime="20250702 18:41:32.936" endtime="20250702 18:41:32.936"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:41:32.937" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:41:32.937" endtime="20250702 18:41:32.937"/>
</kw>
<status status="PASS" starttime="20250702 18:41:29.741" endtime="20250702 18:41:32.937"/>
</kw>
<msg timestamp="20250702 18:41:32.937" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:41:29.741" endtime="20250702 18:41:32.937"/>
</kw>
<status status="PASS" starttime="20250702 18:41:29.740" endtime="20250702 18:41:32.937"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>jq -r '. | select(.name=="bb1") | .quotaInBytes' ${TMP_JSON}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:41:32.941" level="INFO">Running command 'jq -r '. | select(.name=="bb1") | .quotaInBytes' /tmp/bb1.json 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:41:32.945" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:41:32.945" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20250702 18:41:32.938" endtime="20250702 18:41:32.945"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:41:32.946" level="INFO">-1</msg>
<status status="PASS" starttime="20250702 18:41:32.946" endtime="20250702 18:41:32.946"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:41:32.947" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:41:32.946" endtime="20250702 18:41:32.947"/>
</kw>
<status status="PASS" starttime="20250702 18:41:32.938" endtime="20250702 18:41:32.947"/>
</kw>
<msg timestamp="20250702 18:41:32.947" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:41:32.938" endtime="20250702 18:41:32.947"/>
</kw>
<msg timestamp="20250702 18:41:32.947" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20250702 18:41:32.937" endtime="20250702 18:41:32.947"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250702 18:41:32.947" endtime="20250702 18:41:32.947"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>jq -r '. | select(.name=="bb1") | .quotaInNamespace' ${TMP_JSON}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:41:32.951" level="INFO">Running command 'jq -r '. | select(.name=="bb1") | .quotaInNamespace' /tmp/bb1.json 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:41:32.955" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:41:32.955" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20250702 18:41:32.948" endtime="20250702 18:41:32.955"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:41:32.956" level="INFO">-1</msg>
<status status="PASS" starttime="20250702 18:41:32.955" endtime="20250702 18:41:32.956"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:41:32.956" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:41:32.956" endtime="20250702 18:41:32.956"/>
</kw>
<status status="PASS" starttime="20250702 18:41:32.948" endtime="20250702 18:41:32.956"/>
</kw>
<msg timestamp="20250702 18:41:32.956" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:41:32.948" endtime="20250702 18:41:32.957"/>
</kw>
<msg timestamp="20250702 18:41:32.957" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20250702 18:41:32.947" endtime="20250702 18:41:32.957"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250702 18:41:32.957" endtime="20250702 18:41:32.957"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:41:32.960" level="INFO">Running command 'ozone sh bucket delete o3://om:9862/40406-with-host/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:41:36.002" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:41:36.002" level="INFO">${output} = Bucket bb1 is deleted</msg>
<status status="PASS" starttime="20250702 18:41:32.958" endtime="20250702 18:41:36.002"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:41:36.003" level="INFO">Bucket bb1 is deleted</msg>
<status status="PASS" starttime="20250702 18:41:36.003" endtime="20250702 18:41:36.003"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:41:36.004" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:41:36.003" endtime="20250702 18:41:36.004"/>
</kw>
<status status="PASS" starttime="20250702 18:41:32.958" endtime="20250702 18:41:36.004"/>
</kw>
<msg timestamp="20250702 18:41:36.004" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:41:32.958" endtime="20250702 18:41:36.004"/>
</kw>
<status status="PASS" starttime="20250702 18:41:32.957" endtime="20250702 18:41:36.004"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:41:36.007" level="INFO">Running command 'ozone sh volume delete o3://om:9862/40406-with-host 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:41:38.982" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:41:38.982" level="INFO">${output} = Volume 40406-with-host is deleted</msg>
<status status="PASS" starttime="20250702 18:41:36.005" endtime="20250702 18:41:38.982"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:41:38.983" level="INFO">Volume 40406-with-host is deleted</msg>
<status status="PASS" starttime="20250702 18:41:38.982" endtime="20250702 18:41:38.983"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:41:38.983" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:41:38.983" endtime="20250702 18:41:38.983"/>
</kw>
<status status="PASS" starttime="20250702 18:41:36.005" endtime="20250702 18:41:38.983"/>
</kw>
<msg timestamp="20250702 18:41:38.983" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:41:36.005" endtime="20250702 18:41:38.983"/>
</kw>
<status status="PASS" starttime="20250702 18:41:36.004" endtime="20250702 18:41:38.984"/>
</kw>
<status status="PASS" starttime="20250702 18:39:39.457" endtime="20250702 18:41:38.984"/>
</kw>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20250702 18:39:39.388" endtime="20250702 18:41:38.984"/>
</test>
<test id="s1-s2-s5-t2" name="RpcClient with execution errors" line="30">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get Security Enabled From Config" library="commonlib">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' != ''</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20250702 18:41:38.986" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:41:38.986" endtime="20250702 18:41:38.986"/>
</kw>
<kw name="Execute" library="os">
<var>${value}</var>
<arg>ozone getconf confKey ozone.security.enabled</arg>
<status status="NOT RUN" starttime="20250702 18:41:38.986" endtime="20250702 18:41:38.986"/>
</kw>
<if>
<branch type="IF" condition="'${value}' != 'true' and '${value}' != 'false'">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>false</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20250702 18:41:38.986" endtime="20250702 18:41:38.986"/>
</kw>
<status status="NOT RUN" starttime="20250702 18:41:38.986" endtime="20250702 18:41:38.986"/>
</branch>
<status status="NOT RUN" starttime="20250702 18:41:38.986" endtime="20250702 18:41:38.986"/>
</if>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${SECURITY_ENABLED}</arg>
<arg>${value}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20250702 18:41:38.986" endtime="20250702 18:41:38.987"/>
</kw>
<status status="PASS" starttime="20250702 18:41:38.985" endtime="20250702 18:41:38.987"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250702 18:41:38.987" endtime="20250702 18:41:38.987"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:41:38.991" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:41:38.994" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:41:38.994" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250702 18:41:38.988" endtime="20250702 18:41:38.994"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:41:38.995" level="INFO">scm</msg>
<status status="PASS" starttime="20250702 18:41:38.995" endtime="20250702 18:41:38.995"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:41:38.996" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:41:38.995" endtime="20250702 18:41:38.996"/>
</kw>
<status status="PASS" starttime="20250702 18:41:38.988" endtime="20250702 18:41:38.996"/>
</kw>
<msg timestamp="20250702 18:41:38.996" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:41:38.987" endtime="20250702 18:41:38.996"/>
</kw>
<msg timestamp="20250702 18:41:38.996" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250702 18:41:38.987" endtime="20250702 18:41:38.996"/>
</kw>
<msg timestamp="20250702 18:41:38.996" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250702 18:41:38.987" endtime="20250702 18:41:38.996"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250702 18:41:38.997" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250702 18:41:38.997" endtime="20250702 18:41:38.997"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:41:39.001" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:41:39.041" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:41:39.041" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:41:38.998" endtime="20250702 18:41:39.041"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:41:39.042" level="INFO"/>
<status status="PASS" starttime="20250702 18:41:39.041" endtime="20250702 18:41:39.042"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:41:39.042" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:41:39.042" endtime="20250702 18:41:39.042"/>
</kw>
<status status="PASS" starttime="20250702 18:41:38.998" endtime="20250702 18:41:39.042"/>
</kw>
<msg timestamp="20250702 18:41:39.042" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:41:38.998" endtime="20250702 18:41:39.042"/>
</kw>
<status status="PASS" starttime="20250702 18:41:38.997" endtime="20250702 18:41:39.042"/>
</kw>
<status status="PASS" starttime="20250702 18:41:38.997" endtime="20250702 18:41:39.042"/>
</kw>
<status status="PASS" starttime="20250702 18:41:38.985" endtime="20250702 18:41:39.042"/>
</kw>
<status status="PASS" starttime="20250702 18:41:38.985" endtime="20250702 18:41:39.043"/>
</kw>
<kw name="Test ozone shell errors" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-with-errors</arg>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 1.5GB</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:41:39.046" level="INFO">Running command 'ozone sh volume create o3://om:9862/40406-with-errors --space-quota 1.5GB 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:41:41.994" level="INFO">${rc} = 255</msg>
<msg timestamp="20250702 18:41:41.994" level="INFO">${output} = 1.5GB is invalid. The quota value should be a positive integer with byte numeration(B, KB, MB, GB and TB)</msg>
<status status="PASS" starttime="20250702 18:41:39.043" endtime="20250702 18:41:41.994"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:41:41.995" level="INFO">1.5GB is invalid. The quota value should be a positive integer with byte numeration(B, KB, MB, GB and TB)</msg>
<status status="PASS" starttime="20250702 18:41:41.994" endtime="20250702 18:41:41.995"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:41:41.995" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:41:41.995" endtime="20250702 18:41:41.995"/>
</kw>
<msg timestamp="20250702 18:41:41.996" level="INFO">${result} = 1.5GB is invalid. The quota value should be a positive integer with byte numeration(B, KB, MB, GB and TB)</msg>
<status status="PASS" starttime="20250702 18:41:39.043" endtime="20250702 18:41:41.996"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>1.5GB is invalid</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250702 18:41:41.996" endtime="20250702 18:41:41.996"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --namespace-quota 1.5</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:41:41.999" level="INFO">Running command 'ozone sh volume create o3://om:9862/40406-with-errors --namespace-quota 1.5 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:41:44.985" level="INFO">${rc} = 255</msg>
<msg timestamp="20250702 18:41:44.985" level="INFO">${output} = 1.5 is invalid. The quota value should be a positive integer</msg>
<status status="PASS" starttime="20250702 18:41:41.997" endtime="20250702 18:41:44.985"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:41:44.986" level="INFO">1.5 is invalid. The quota value should be a positive integer</msg>
<status status="PASS" starttime="20250702 18:41:44.985" endtime="20250702 18:41:44.986"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:41:44.986" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:41:44.986" endtime="20250702 18:41:44.986"/>
</kw>
<msg timestamp="20250702 18:41:44.987" level="INFO">${result} = 1.5 is invalid. The quota value should be a positive integer</msg>
<status status="PASS" starttime="20250702 18:41:41.996" endtime="20250702 18:41:44.987"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>1.5 is invalid</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250702 18:41:44.987" endtime="20250702 18:41:44.987"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:41:44.990" level="INFO">Running command 'ozone sh volume create o3://om:9862/40406-with-errors 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:41:48.009" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:41:48.009" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:41:44.988" endtime="20250702 18:41:48.009"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:41:48.010" level="INFO"/>
<status status="PASS" starttime="20250702 18:41:48.009" endtime="20250702 18:41:48.010"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:41:48.010" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:41:48.010" endtime="20250702 18:41:48.011"/>
</kw>
<status status="PASS" starttime="20250702 18:41:44.987" endtime="20250702 18:41:48.011"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bucket_1</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:41:48.013" level="INFO">Running command 'ozone sh bucket create o3://om:9862/40406-with-errors/bucket_1 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:41:51.261" level="INFO">${rc} = 255</msg>
<msg timestamp="20250702 18:41:51.261" level="INFO">${output} = INVALID_BUCKET_NAME Invalid bucket name: bucket_1</msg>
<status status="PASS" starttime="20250702 18:41:48.011" endtime="20250702 18:41:51.261"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:41:51.262" level="INFO">INVALID_BUCKET_NAME Invalid bucket name: bucket_1</msg>
<status status="PASS" starttime="20250702 18:41:51.261" endtime="20250702 18:41:51.262"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:41:51.262" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:41:51.262" endtime="20250702 18:41:51.263"/>
</kw>
<msg timestamp="20250702 18:41:51.263" level="INFO">${result} = INVALID_BUCKET_NAME Invalid bucket name: bucket_1</msg>
<status status="PASS" starttime="20250702 18:41:48.011" endtime="20250702 18:41:51.263"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>INVALID_BUCKET_NAME</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250702 18:41:51.263" endtime="20250702 18:41:51.263"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bucket1 --space-quota 1.5GB</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:41:51.266" level="INFO">Running command 'ozone sh bucket create o3://om:9862/40406-with-errors/bucket1 --space-quota 1.5GB 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:41:54.325" level="INFO">${rc} = 255</msg>
<msg timestamp="20250702 18:41:54.326" level="INFO">${output} = 1.5GB is invalid. The quota value should be a positive integer with byte numeration(B, KB, MB, GB and TB)</msg>
<status status="PASS" starttime="20250702 18:41:51.264" endtime="20250702 18:41:54.326"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:41:54.326" level="INFO">1.5GB is invalid. The quota value should be a positive integer with byte numeration(B, KB, MB, GB and TB)</msg>
<status status="PASS" starttime="20250702 18:41:54.326" endtime="20250702 18:41:54.327"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:41:54.327" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:41:54.327" endtime="20250702 18:41:54.327"/>
</kw>
<msg timestamp="20250702 18:41:54.328" level="INFO">${result} = 1.5GB is invalid. The quota value should be a positive integer with byte numeration(B, KB, MB, GB and TB)</msg>
<status status="PASS" starttime="20250702 18:41:51.263" endtime="20250702 18:41:54.328"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>1.5GB is invalid</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250702 18:41:54.328" endtime="20250702 18:41:54.328"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bucket1 --namespace-quota 1.5</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:41:54.331" level="INFO">Running command 'ozone sh bucket create o3://om:9862/40406-with-errors/bucket1 --namespace-quota 1.5 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:41:57.386" level="INFO">${rc} = 255</msg>
<msg timestamp="20250702 18:41:57.386" level="INFO">${output} = 1.5 is invalid. The quota value should be a positive integer</msg>
<status status="PASS" starttime="20250702 18:41:54.328" endtime="20250702 18:41:57.386"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:41:57.387" level="INFO">1.5 is invalid. The quota value should be a positive integer</msg>
<status status="PASS" starttime="20250702 18:41:57.386" endtime="20250702 18:41:57.387"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:41:57.387" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:41:57.387" endtime="20250702 18:41:57.387"/>
</kw>
<msg timestamp="20250702 18:41:57.387" level="INFO">${result} = 1.5 is invalid. The quota value should be a positive integer</msg>
<status status="PASS" starttime="20250702 18:41:54.328" endtime="20250702 18:41:57.387"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>1.5 is invalid</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250702 18:41:57.387" endtime="20250702 18:41:57.388"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bucket1 --layout Invalid</arg>
<arg>2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:41:57.391" level="INFO">Running command 'ozone sh bucket create o3://om:9862/40406-with-errors/bucket1 --layout Invalid 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:41:58.509" level="INFO">${rc} = 2</msg>
<msg timestamp="20250702 18:41:58.509" level="INFO">${output} = Invalid value for option '--layout': cannot convert 'Invalid' to BucketLayout (java.lang.IllegalArgumentException: Unknown bucket layout: Invalid)
Usage: ozone sh bucket create [-ghV] [--verbose] [-k=...</msg>
<status status="PASS" starttime="20250702 18:41:57.388" endtime="20250702 18:41:58.509"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:41:58.510" level="INFO">Invalid value for option '--layout': cannot convert 'Invalid' to BucketLayout (java.lang.IllegalArgumentException: Unknown bucket layout: Invalid)
Usage: ozone sh bucket create [-ghV] [--verbose] [-k=&lt;bekName&gt;]
                              [-l=&lt;allowedBucketLayout&gt;]
                              [--namespace-quota=&lt;quotaInNamespace&gt;]
                              [--quota=&lt;quotaInBytes&gt;] [-r=&lt;replication&gt;]
                              [-t=&lt;type&gt;] [-u=&lt;ownerName&gt;] &lt;value&gt;
creates a bucket in a given volume
      &lt;value&gt;              URI of the bucket (format: volume/bucket).
                           Ozone URI could either be a full URI or short URI.
                           Full URI should start with o3://, in case of non-HA
                           clusters it should be followed by the host name and
                           optionally the port number. In case of HA clusters
                           the service id should be used. Service id provides a
                           logical name for multiple hosts and it is defined
                           in the property ozone.om.service.ids.
                           Example of a full URI with host name and port number
                           for a key:
                           o3://omhostname:9862/vol1/bucket1/key1
                           With a service id for a volume:
                           o3://omserviceid/vol1/
                           Short URI should start from the volume.
                           Example of a short URI for a bucket:
                           vol1/bucket1
                           Any unspecified information will be identified from
                           the config files.

  -g, --enforcegdpr        if true, indicates GDPR enforced bucket,
                             false/unspecified indicates otherwise
  -h, --help               Show this help message and exit.
  -k, --bucketkey=&lt;bekName&gt;
                           bucket encryption key name
  -l, --layout=&lt;allowedBucketLayout&gt;
                           Allowed Bucket Layouts: fso (for file system
                             optimized buckets FILE_SYSTEM_OPTIMIZED), obs (for
                             object store optimized OBJECT_STORE) and legacy
                             (LEGACY is Deprecated)
      --namespace-quota=&lt;quotaInNamespace&gt;
                           For volume this parameter represents the number of
                             buckets, and for buckets represents the number of
                             keys (eg. 5)
      --quota, --space-quota=&lt;quotaInBytes&gt;
                           The maximum space quota can be used (eg. 1GB)
  -r, --replication=&lt;replication&gt;
                           Replication definition. Valid values are replication
                             type-specific.  For RATIS: ONE or THREE. In case
                             of EC, pass CODEC-DATA-PARITY-CHUNKSIZE,  e.g.
                             rs-3-2-1024k, rs-6-3-1024k, rs-10-4-1024k
  -t, --type, --replication-type=&lt;type&gt;
                           Replication type. Supported types are: RATIS, EC
  -u, --user=&lt;ownerName&gt;   Owner of the bucket. Defaults to current user if not
                             specified
  -V, --version            Print version information and exit.
      --verbose            More verbose output. Show the stack trace of the
                             errors.</msg>
<status status="PASS" starttime="20250702 18:41:58.509" endtime="20250702 18:41:58.510"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:41:58.510" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:41:58.510" endtime="20250702 18:41:58.510"/>
</kw>
<msg timestamp="20250702 18:41:58.511" level="INFO">${result} = Invalid value for option '--layout': cannot convert 'Invalid' to BucketLayout (java.lang.IllegalArgumentException: Unknown bucket layout: Invalid)
Usage: ozone sh bucket create [-ghV] [--verbose] [-k=...</msg>
<status status="PASS" starttime="20250702 18:41:57.388" endtime="20250702 18:41:58.511"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Usage</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250702 18:41:58.511" endtime="20250702 18:41:58.511"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bucket1</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:41:58.514" level="INFO">Running command 'ozone sh bucket create o3://om:9862/40406-with-errors/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:42:01.665" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:42:01.665" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:41:58.512" endtime="20250702 18:42:01.665"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:42:01.666" level="INFO"/>
<status status="PASS" starttime="20250702 18:42:01.665" endtime="20250702 18:42:01.666"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:42:01.666" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:42:01.666" endtime="20250702 18:42:01.667"/>
</kw>
<status status="PASS" starttime="20250702 18:41:58.511" endtime="20250702 18:42:01.667"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bucket1/non-existing</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:42:01.670" level="INFO">Running command 'ozone sh key info o3://om:9862/40406-with-errors/bucket1/non-existing 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:42:04.690" level="INFO">${rc} = 255</msg>
<msg timestamp="20250702 18:42:04.690" level="INFO">${output} = KEY_NOT_FOUND Key:non-existing not found</msg>
<status status="PASS" starttime="20250702 18:42:01.667" endtime="20250702 18:42:04.690"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:42:04.691" level="INFO">KEY_NOT_FOUND Key:non-existing not found</msg>
<status status="PASS" starttime="20250702 18:42:04.690" endtime="20250702 18:42:04.691"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:42:04.691" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:42:04.691" endtime="20250702 18:42:04.691"/>
</kw>
<msg timestamp="20250702 18:42:04.691" level="INFO">${result} = KEY_NOT_FOUND Key:non-existing not found</msg>
<status status="PASS" starttime="20250702 18:42:01.667" endtime="20250702 18:42:04.691"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>KEY_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250702 18:42:04.692" endtime="20250702 18:42:04.692"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh key put ${protocol}${server}/${volume}/bucket1/key1 unexisting --type invalid</arg>
<arg>2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:42:04.695" level="INFO">Running command 'ozone sh key put o3://om:9862/40406-with-errors/bucket1/key1 unexisting --type invalid 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:42:05.781" level="INFO">${rc} = 2</msg>
<msg timestamp="20250702 18:42:05.781" level="INFO">${output} = Could not invoke public void org.apache.hadoop.ozone.shell.ShellReplicationOptions.setType(java.lang.String) with invalid (java.lang.IllegalArgumentException: Invalid value 'invalid' for option '--typ...</msg>
<status status="PASS" starttime="20250702 18:42:04.693" endtime="20250702 18:42:05.781"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:42:05.782" level="INFO">Could not invoke public void org.apache.hadoop.ozone.shell.ShellReplicationOptions.setType(java.lang.String) with invalid (java.lang.IllegalArgumentException: Invalid value 'invalid' for option '--type'. No enum constant org.apache.hadoop.hdds.client.ReplicationType.invalid. Supported values are: RATIS, EC.)
Usage: ozone sh key put [-hV] [--stream] [--verbose]
                        [--expectedGeneration=&lt;expectedGeneration&gt;]
                        [-r=&lt;replication&gt;] [-t=&lt;type&gt;] &lt;value&gt; &lt;fileName&gt;
creates or overwrites an existing key
      &lt;value&gt;      URI of the key (format: volume/bucket/key).
                   Ozone URI could either be a full URI or short URI.
                   Full URI should start with o3://, in case of non-HA
                   clusters it should be followed by the host name and
                   optionally the port number. In case of HA clusters
                   the service id should be used. Service id provides a
                   logical name for multiple hosts and it is defined
                   in the property ozone.om.service.ids.
                   Example of a full URI with host name and port number
                   for a key:
                   o3://omhostname:9862/vol1/bucket1/key1
                   With a service id for a volume:
                   o3://omserviceid/vol1/
                   Short URI should start from the volume.
                   Example of a short URI for a bucket:
                   vol1/bucket1
                   Any unspecified information will be identified from
                   the config files.

      &lt;fileName&gt;   File to upload
      --expectedGeneration=&lt;expectedGeneration&gt;
                   Store key only if it already exists and its generation
                     matches the value provided
  -h, --help       Show this help message and exit.
  -r, --replication=&lt;replication&gt;
                   Replication definition. Valid values are replication
                     type-specific.  For RATIS: ONE or THREE. In case of EC,
                     pass CODEC-DATA-PARITY-CHUNKSIZE,  e.g. rs-3-2-1024k,
                     rs-6-3-1024k, rs-10-4-1024k
      --stream
  -t, --type, --replication-type=&lt;type&gt;
                   Replication type. Supported types are: RATIS, EC
  -V, --version    Print version information and exit.
      --verbose    More verbose output. Show the stack trace of the errors.</msg>
<status status="PASS" starttime="20250702 18:42:05.782" endtime="20250702 18:42:05.782"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:42:05.783" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:42:05.783" endtime="20250702 18:42:05.783"/>
</kw>
<msg timestamp="20250702 18:42:05.783" level="INFO">${result} = Could not invoke public void org.apache.hadoop.ozone.shell.ShellReplicationOptions.setType(java.lang.String) with invalid (java.lang.IllegalArgumentException: Invalid value 'invalid' for option '--typ...</msg>
<status status="PASS" starttime="20250702 18:42:04.692" endtime="20250702 18:42:05.783"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh bucket setquota ${volume}/bucket1 --space-quota 1.5</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:42:05.786" level="INFO">Running command 'ozone sh bucket setquota 40406-with-errors/bucket1 --space-quota 1.5 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:42:08.798" level="INFO">${rc} = 255</msg>
<msg timestamp="20250702 18:42:08.798" level="INFO">${output} = 1.5 is invalid. The quota value should be a positive integer with byte numeration(B, KB, MB, GB and TB)</msg>
<status status="PASS" starttime="20250702 18:42:05.784" endtime="20250702 18:42:08.798"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:42:08.799" level="INFO">1.5 is invalid. The quota value should be a positive integer with byte numeration(B, KB, MB, GB and TB)</msg>
<status status="PASS" starttime="20250702 18:42:08.799" endtime="20250702 18:42:08.799"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:42:08.800" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:42:08.799" endtime="20250702 18:42:08.800"/>
</kw>
<msg timestamp="20250702 18:42:08.800" level="INFO">${result} = 1.5 is invalid. The quota value should be a positive integer with byte numeration(B, KB, MB, GB and TB)</msg>
<status status="PASS" starttime="20250702 18:42:05.783" endtime="20250702 18:42:08.800"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>1.5 is invalid</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250702 18:42:08.800" endtime="20250702 18:42:08.800"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh bucket setquota ${volume}/bucket1 --namespace-quota 1.5</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:42:08.803" level="INFO">Running command 'ozone sh bucket setquota 40406-with-errors/bucket1 --namespace-quota 1.5 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:42:11.792" level="INFO">${rc} = 255</msg>
<msg timestamp="20250702 18:42:11.792" level="INFO">${output} = 1.5 is invalid. The quota value should be a positive integer</msg>
<status status="PASS" starttime="20250702 18:42:08.801" endtime="20250702 18:42:11.792"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:42:11.793" level="INFO">1.5 is invalid. The quota value should be a positive integer</msg>
<status status="PASS" starttime="20250702 18:42:11.792" endtime="20250702 18:42:11.793"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:42:11.793" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:42:11.793" endtime="20250702 18:42:11.794"/>
</kw>
<msg timestamp="20250702 18:42:11.794" level="INFO">${result} = 1.5 is invalid. The quota value should be a positive integer</msg>
<status status="PASS" starttime="20250702 18:42:08.800" endtime="20250702 18:42:11.794"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>1.5 is invalid</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250702 18:42:11.794" endtime="20250702 18:42:11.794"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh volume setquota ${volume} --space-quota 1.5</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:42:11.798" level="INFO">Running command 'ozone sh volume setquota 40406-with-errors --space-quota 1.5 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:42:14.982" level="INFO">${rc} = 255</msg>
<msg timestamp="20250702 18:42:14.983" level="INFO">${output} = 1.5 is invalid. The quota value should be a positive integer with byte numeration(B, KB, MB, GB and TB)</msg>
<status status="PASS" starttime="20250702 18:42:11.795" endtime="20250702 18:42:14.983"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:42:14.984" level="INFO">1.5 is invalid. The quota value should be a positive integer with byte numeration(B, KB, MB, GB and TB)</msg>
<status status="PASS" starttime="20250702 18:42:14.983" endtime="20250702 18:42:14.984"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:42:14.984" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:42:14.984" endtime="20250702 18:42:14.984"/>
</kw>
<msg timestamp="20250702 18:42:14.984" level="INFO">${result} = 1.5 is invalid. The quota value should be a positive integer with byte numeration(B, KB, MB, GB and TB)</msg>
<status status="PASS" starttime="20250702 18:42:11.794" endtime="20250702 18:42:14.984"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>1.5 is invalid</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250702 18:42:14.984" endtime="20250702 18:42:14.985"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh volume setquota ${volume} --namespace-quota 1.5</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:42:14.987" level="INFO">Running command 'ozone sh volume setquota 40406-with-errors --namespace-quota 1.5 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:42:18.050" level="INFO">${rc} = 255</msg>
<msg timestamp="20250702 18:42:18.050" level="INFO">${output} = 1.5 is invalid. The quota value should be a positive integer</msg>
<status status="PASS" starttime="20250702 18:42:14.985" endtime="20250702 18:42:18.050"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:42:18.051" level="INFO">1.5 is invalid. The quota value should be a positive integer</msg>
<status status="PASS" starttime="20250702 18:42:18.051" endtime="20250702 18:42:18.051"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:42:18.052" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:42:18.051" endtime="20250702 18:42:18.052"/>
</kw>
<msg timestamp="20250702 18:42:18.052" level="INFO">${result} = 1.5 is invalid. The quota value should be a positive integer</msg>
<status status="PASS" starttime="20250702 18:42:14.985" endtime="20250702 18:42:18.052"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>1.5 is invalid</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250702 18:42:18.052" endtime="20250702 18:42:18.052"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>ozone sh bucket setquota ${volume}/bucket1 --space-quota 2KB</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:42:18.055" level="INFO">Running command 'ozone sh bucket setquota 40406-with-errors/bucket1 --space-quota 2KB 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:42:21.122" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:42:21.122" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:42:18.053" endtime="20250702 18:42:21.122"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:42:21.123" level="INFO"/>
<status status="PASS" starttime="20250702 18:42:21.122" endtime="20250702 18:42:21.123"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:42:21.123" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:42:21.123" endtime="20250702 18:42:21.123"/>
</kw>
<status status="PASS" starttime="20250702 18:42:18.053" endtime="20250702 18:42:21.124"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh key put ${volume}/bucket1/key1 /opt/hadoop/NOTICE.txt</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:42:21.127" level="INFO">Running command 'ozone sh key put 40406-with-errors/bucket1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:42:24.093" level="INFO">${rc} = 255</msg>
<msg timestamp="20250702 18:42:24.093" level="INFO">${output} = QUOTA_EXCEEDED The DiskSpace quota of bucket:bucket1 exceeded quotaInBytes: 2048 Bytes but diskspace consumed: 805306368 Bytes.</msg>
<status status="PASS" starttime="20250702 18:42:21.124" endtime="20250702 18:42:24.093"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:42:24.094" level="INFO">QUOTA_EXCEEDED The DiskSpace quota of bucket:bucket1 exceeded quotaInBytes: 2048 Bytes but diskspace consumed: 805306368 Bytes.</msg>
<status status="PASS" starttime="20250702 18:42:24.093" endtime="20250702 18:42:24.094"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:42:24.094" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:42:24.094" endtime="20250702 18:42:24.094"/>
</kw>
<msg timestamp="20250702 18:42:24.094" level="INFO">${result} = QUOTA_EXCEEDED The DiskSpace quota of bucket:bucket1 exceeded quotaInBytes: 2048 Bytes but diskspace consumed: 805306368 Bytes.</msg>
<status status="PASS" starttime="20250702 18:42:21.124" endtime="20250702 18:42:24.094"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>QUOTA_EXCEEDED</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250702 18:42:24.095" endtime="20250702 18:42:24.095"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh volume setquota ${volume} --space-quota 1KB</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:42:24.098" level="INFO">Running command 'ozone sh volume setquota 40406-with-errors --space-quota 1KB 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:42:27.078" level="INFO">${rc} = 255</msg>
<msg timestamp="20250702 18:42:27.078" level="INFO">${output} = QUOTA_EXCEEDED Total buckets quota in this volume should not be greater than volume quota : the total space quota is:2048. But the volume space quota is:1024</msg>
<status status="PASS" starttime="20250702 18:42:24.095" endtime="20250702 18:42:27.078"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:42:27.079" level="INFO">QUOTA_EXCEEDED Total buckets quota in this volume should not be greater than volume quota : the total space quota is:2048. But the volume space quota is:1024</msg>
<status status="PASS" starttime="20250702 18:42:27.079" endtime="20250702 18:42:27.079"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:42:27.080" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:42:27.080" endtime="20250702 18:42:27.080"/>
</kw>
<msg timestamp="20250702 18:42:27.080" level="INFO">${result} = QUOTA_EXCEEDED Total buckets quota in this volume should not be greater than volume quota : the total space quota is:2048. But the volume space quota is:1024</msg>
<status status="PASS" starttime="20250702 18:42:24.095" endtime="20250702 18:42:27.080"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>QUOTA_EXCEEDED</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250702 18:42:27.080" endtime="20250702 18:42:27.080"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>ozone sh bucket clrquota ${volume}/bucket1 --space-quota</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:42:27.083" level="INFO">Running command 'ozone sh bucket clrquota 40406-with-errors/bucket1 --space-quota 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:42:30.019" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:42:30.019" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:42:27.081" endtime="20250702 18:42:30.019"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:42:30.020" level="INFO"/>
<status status="PASS" starttime="20250702 18:42:30.020" endtime="20250702 18:42:30.020"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:42:30.021" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:42:30.021" endtime="20250702 18:42:30.021"/>
</kw>
<status status="PASS" starttime="20250702 18:42:27.080" endtime="20250702 18:42:30.021"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh volume setquota ${volume} --space-quota 1GB</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:42:30.024" level="INFO">Running command 'ozone sh volume setquota 40406-with-errors --space-quota 1GB 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:42:33.149" level="INFO">${rc} = 255</msg>
<msg timestamp="20250702 18:42:33.149" level="INFO">${output} = QUOTA_ERROR Can not set volume space quota on volume as some of buckets in this volume have no quota set.</msg>
<status status="PASS" starttime="20250702 18:42:30.022" endtime="20250702 18:42:33.149"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:42:33.150" level="INFO">QUOTA_ERROR Can not set volume space quota on volume as some of buckets in this volume have no quota set.</msg>
<status status="PASS" starttime="20250702 18:42:33.149" endtime="20250702 18:42:33.150"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:42:33.150" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:42:33.150" endtime="20250702 18:42:33.150"/>
</kw>
<msg timestamp="20250702 18:42:33.150" level="INFO">${result} = QUOTA_ERROR Can not set volume space quota on volume as some of buckets in this volume have no quota set.</msg>
<status status="PASS" starttime="20250702 18:42:30.021" endtime="20250702 18:42:33.150"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>QUOTA_ERROR</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250702 18:42:33.150" endtime="20250702 18:42:33.151"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bucket1</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:42:33.153" level="INFO">Running command 'ozone sh bucket delete o3://om:9862/40406-with-errors/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:42:36.188" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:42:36.188" level="INFO">${output} = Bucket bucket1 is deleted</msg>
<status status="PASS" starttime="20250702 18:42:33.151" endtime="20250702 18:42:36.188"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:42:36.189" level="INFO">Bucket bucket1 is deleted</msg>
<status status="PASS" starttime="20250702 18:42:36.189" endtime="20250702 18:42:36.189"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:42:36.190" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:42:36.190" endtime="20250702 18:42:36.190"/>
</kw>
<status status="PASS" starttime="20250702 18:42:33.151" endtime="20250702 18:42:36.190"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>ozone sh volume setquota ${volume} --space-quota 1GB</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:42:36.193" level="INFO">Running command 'ozone sh volume setquota 40406-with-errors --space-quota 1GB 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:42:39.161" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:42:39.161" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:42:36.191" endtime="20250702 18:42:39.161"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:42:39.162" level="INFO"/>
<status status="PASS" starttime="20250702 18:42:39.161" endtime="20250702 18:42:39.162"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:42:39.162" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:42:39.162" endtime="20250702 18:42:39.162"/>
</kw>
<status status="PASS" starttime="20250702 18:42:36.190" endtime="20250702 18:42:39.162"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bucket1</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:42:39.165" level="INFO">Running command 'ozone sh bucket create o3://om:9862/40406-with-errors/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:42:42.231" level="INFO">${rc} = 255</msg>
<msg timestamp="20250702 18:42:42.231" level="INFO">${output} = QUOTA_ERROR Bucket space quota in this volume should be set as volume space quota is already set.</msg>
<status status="PASS" starttime="20250702 18:42:39.163" endtime="20250702 18:42:42.231"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:42:42.232" level="INFO">QUOTA_ERROR Bucket space quota in this volume should be set as volume space quota is already set.</msg>
<status status="PASS" starttime="20250702 18:42:42.231" endtime="20250702 18:42:42.232"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:42:42.232" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:42:42.232" endtime="20250702 18:42:42.232"/>
</kw>
<msg timestamp="20250702 18:42:42.233" level="INFO">${result} = QUOTA_ERROR Bucket space quota in this volume should be set as volume space quota is already set.</msg>
<status status="PASS" starttime="20250702 18:42:39.162" endtime="20250702 18:42:42.233"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>QUOTA_ERROR</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250702 18:42:42.233" endtime="20250702 18:42:42.233"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:42:42.236" level="INFO">Running command 'ozone sh volume delete o3://om:9862/40406-with-errors 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:42:45.190" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:42:45.190" level="INFO">${output} = Volume 40406-with-errors is deleted</msg>
<status status="PASS" starttime="20250702 18:42:42.233" endtime="20250702 18:42:45.190"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:42:45.191" level="INFO">Volume 40406-with-errors is deleted</msg>
<status status="PASS" starttime="20250702 18:42:45.191" endtime="20250702 18:42:45.191"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:42:45.192" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:42:45.191" endtime="20250702 18:42:45.192"/>
</kw>
<status status="PASS" starttime="20250702 18:42:42.233" endtime="20250702 18:42:45.192"/>
</kw>
<status status="PASS" starttime="20250702 18:41:39.043" endtime="20250702 18:42:45.192"/>
</kw>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20250702 18:41:38.984" endtime="20250702 18:42:45.192"/>
</test>
<test id="s1-s2-s5-t3" name="RpcClient volume acls" line="33">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get Security Enabled From Config" library="commonlib">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' != ''</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20250702 18:42:45.194" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:42:45.194" endtime="20250702 18:42:45.194"/>
</kw>
<kw name="Execute" library="os">
<var>${value}</var>
<arg>ozone getconf confKey ozone.security.enabled</arg>
<status status="NOT RUN" starttime="20250702 18:42:45.194" endtime="20250702 18:42:45.194"/>
</kw>
<if>
<branch type="IF" condition="'${value}' != 'true' and '${value}' != 'false'">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>false</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20250702 18:42:45.195" endtime="20250702 18:42:45.195"/>
</kw>
<status status="NOT RUN" starttime="20250702 18:42:45.194" endtime="20250702 18:42:45.195"/>
</branch>
<status status="NOT RUN" starttime="20250702 18:42:45.194" endtime="20250702 18:42:45.195"/>
</if>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${SECURITY_ENABLED}</arg>
<arg>${value}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20250702 18:42:45.195" endtime="20250702 18:42:45.195"/>
</kw>
<status status="PASS" starttime="20250702 18:42:45.194" endtime="20250702 18:42:45.195"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250702 18:42:45.195" endtime="20250702 18:42:45.195"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:42:45.198" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:42:45.202" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:42:45.202" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250702 18:42:45.196" endtime="20250702 18:42:45.202"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:42:45.203" level="INFO">scm</msg>
<status status="PASS" starttime="20250702 18:42:45.202" endtime="20250702 18:42:45.203"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:42:45.203" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:42:45.203" endtime="20250702 18:42:45.203"/>
</kw>
<status status="PASS" starttime="20250702 18:42:45.196" endtime="20250702 18:42:45.203"/>
</kw>
<msg timestamp="20250702 18:42:45.203" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:42:45.196" endtime="20250702 18:42:45.204"/>
</kw>
<msg timestamp="20250702 18:42:45.204" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250702 18:42:45.195" endtime="20250702 18:42:45.204"/>
</kw>
<msg timestamp="20250702 18:42:45.204" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250702 18:42:45.195" endtime="20250702 18:42:45.204"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250702 18:42:45.204" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250702 18:42:45.204" endtime="20250702 18:42:45.204"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:42:45.208" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:42:45.251" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:42:45.251" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:42:45.206" endtime="20250702 18:42:45.251"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:42:45.252" level="INFO"/>
<status status="PASS" starttime="20250702 18:42:45.252" endtime="20250702 18:42:45.252"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:42:45.253" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:42:45.252" endtime="20250702 18:42:45.253"/>
</kw>
<status status="PASS" starttime="20250702 18:42:45.205" endtime="20250702 18:42:45.253"/>
</kw>
<msg timestamp="20250702 18:42:45.253" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:42:45.205" endtime="20250702 18:42:45.253"/>
</kw>
<status status="PASS" starttime="20250702 18:42:45.205" endtime="20250702 18:42:45.253"/>
</kw>
<status status="PASS" starttime="20250702 18:42:45.204" endtime="20250702 18:42:45.253"/>
</kw>
<status status="PASS" starttime="20250702 18:42:45.193" endtime="20250702 18:42:45.253"/>
</kw>
<status status="PASS" starttime="20250702 18:42:45.193" endtime="20250702 18:42:45.253"/>
</kw>
<kw name="Test Volume Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-acls</arg>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:42:45.256" level="INFO">Running command 'ozone sh volume create o3://om:9862/40406-acls 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:42:48.125" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:42:48.125" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:42:45.254" endtime="20250702 18:42:48.125"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:42:48.126" level="INFO"/>
<status status="PASS" starttime="20250702 18:42:48.126" endtime="20250702 18:42:48.126"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:42:48.127" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:42:48.126" endtime="20250702 18:42:48.127"/>
</kw>
<status status="PASS" starttime="20250702 18:42:45.254" endtime="20250702 18:42:48.127"/>
</kw>
<msg timestamp="20250702 18:42:48.127" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:42:45.254" endtime="20250702 18:42:48.127"/>
</kw>
<status status="PASS" starttime="20250702 18:42:45.254" endtime="20250702 18:42:48.127"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:42:48.131" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/40406-acls 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:42:51.327" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:42:51.327" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ],
  "aclSet" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclLi...</msg>
<status status="PASS" starttime="20250702 18:42:48.128" endtime="20250702 18:42:51.327"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:42:51.328" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ],
  "aclSet" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "LIST" ],
  "aclSet" : [ "READ", "LIST" ]
} ]</msg>
<status status="PASS" starttime="20250702 18:42:51.327" endtime="20250702 18:42:51.328"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:42:51.328" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:42:51.328" endtime="20250702 18:42:51.328"/>
</kw>
<status status="PASS" starttime="20250702 18:42:48.128" endtime="20250702 18:42:51.329"/>
</kw>
<msg timestamp="20250702 18:42:51.329" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:42:48.128" endtime="20250702 18:42:51.329"/>
</kw>
<msg timestamp="20250702 18:42:51.329" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ],
  "aclSet" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclLi...</msg>
<status status="PASS" starttime="20250702 18:42:48.127" endtime="20250702 18:42:51.329"/>
</kw>
<kw name="Execute" library="os">
<var>${acl_check}</var>
<arg>echo '${result}' | jq -r '.[] | select(.type=="USER" and .aclScope=="ACCESS" and (.aclList | contains(["ALL"]))) | .name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:42:51.332" level="INFO">Running command 'echo '[ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ],
  "aclSet" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "LIST" ],
  "aclSet" : [ "READ", "LIST" ]
} ]' | jq -r '.[] | select(.type=="USER" and .aclScope=="ACCESS" and (.aclList | contains(["ALL"]))) | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:42:51.337" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:42:51.337" level="INFO">${output} = testuser</msg>
<status status="PASS" starttime="20250702 18:42:51.330" endtime="20250702 18:42:51.337"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:42:51.338" level="INFO">testuser</msg>
<status status="PASS" starttime="20250702 18:42:51.337" endtime="20250702 18:42:51.338"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:42:51.338" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:42:51.338" endtime="20250702 18:42:51.338"/>
</kw>
<status status="PASS" starttime="20250702 18:42:51.330" endtime="20250702 18:42:51.338"/>
</kw>
<msg timestamp="20250702 18:42:51.339" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:42:51.329" endtime="20250702 18:42:51.339"/>
</kw>
<msg timestamp="20250702 18:42:51.339" level="INFO">${acl_check} = testuser</msg>
<status status="PASS" starttime="20250702 18:42:51.329" endtime="20250702 18:42:51.339"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${acl_check}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20250702 18:42:51.339" level="INFO">Length is 8</msg>
<status status="PASS" starttime="20250702 18:42:51.339" endtime="20250702 18:42:51.339"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume addacl ${protocol}${server}/${volume} -a user:superuser1:rwxy[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:42:51.343" level="INFO">Running command 'ozone sh volume addacl o3://om:9862/40406-acls -a user:superuser1:rwxy[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:42:54.152" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:42:54.152" level="INFO">${output} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20250702 18:42:51.340" endtime="20250702 18:42:54.152"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:42:54.153" level="INFO">ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20250702 18:42:54.152" endtime="20250702 18:42:54.153"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:42:54.153" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:42:54.153" endtime="20250702 18:42:54.153"/>
</kw>
<status status="PASS" starttime="20250702 18:42:51.340" endtime="20250702 18:42:54.153"/>
</kw>
<msg timestamp="20250702 18:42:54.153" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:42:51.340" endtime="20250702 18:42:54.153"/>
</kw>
<msg timestamp="20250702 18:42:54.154" level="INFO">${result} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20250702 18:42:51.339" endtime="20250702 18:42:54.154"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:42:54.157" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/40406-acls 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:42:57.178" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:42:57.178" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ],
  "aclSet" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclLi...</msg>
<status status="PASS" starttime="20250702 18:42:54.155" endtime="20250702 18:42:57.178"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:42:57.179" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ],
  "aclSet" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "LIST" ],
  "aclSet" : [ "READ", "LIST" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ],
  "aclSet" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20250702 18:42:57.178" endtime="20250702 18:42:57.179"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:42:57.179" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:42:57.179" endtime="20250702 18:42:57.179"/>
</kw>
<status status="PASS" starttime="20250702 18:42:54.154" endtime="20250702 18:42:57.179"/>
</kw>
<msg timestamp="20250702 18:42:57.179" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:42:54.154" endtime="20250702 18:42:57.180"/>
</kw>
<msg timestamp="20250702 18:42:57.180" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ],
  "aclSet" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclLi...</msg>
<status status="PASS" starttime="20250702 18:42:54.154" endtime="20250702 18:42:57.180"/>
</kw>
<kw name="Execute" library="os">
<var>${acl_check}</var>
<arg>echo '${result}' | jq -r '.[] | select(.type=="USER" and .name=="superuser1" and .aclScope=="DEFAULT" and (.aclList | contains(["READ", "WRITE", "READ_ACL", "WRITE_ACL"]))) | .name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:42:57.183" level="INFO">Running command 'echo '[ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ],
  "aclSet" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "LIST" ],
  "aclSet" : [ "READ", "LIST" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ],
  "aclSet" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]' | jq -r '.[] | select(.type=="USER" and .name=="superuser1" and .aclScope=="DEFAULT" and (.aclList | contains(["READ", "WRITE", "READ_ACL", "WRITE_ACL"]))) | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:42:57.188" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:42:57.188" level="INFO">${output} = superuser1</msg>
<status status="PASS" starttime="20250702 18:42:57.181" endtime="20250702 18:42:57.188"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:42:57.189" level="INFO">superuser1</msg>
<status status="PASS" starttime="20250702 18:42:57.189" endtime="20250702 18:42:57.189"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:42:57.190" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:42:57.189" endtime="20250702 18:42:57.190"/>
</kw>
<status status="PASS" starttime="20250702 18:42:57.180" endtime="20250702 18:42:57.190"/>
</kw>
<msg timestamp="20250702 18:42:57.190" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:42:57.180" endtime="20250702 18:42:57.190"/>
</kw>
<msg timestamp="20250702 18:42:57.190" level="INFO">${acl_check} = superuser1</msg>
<status status="PASS" starttime="20250702 18:42:57.180" endtime="20250702 18:42:57.190"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acl_check}</arg>
<arg>superuser1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250702 18:42:57.190" endtime="20250702 18:42:57.190"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume removeacl ${protocol}${server}/${volume} -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:42:57.194" level="INFO">Running command 'ozone sh volume removeacl o3://om:9862/40406-acls -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:43:00.192" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:43:00.192" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20250702 18:42:57.192" endtime="20250702 18:43:00.192"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:43:00.193" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20250702 18:43:00.192" endtime="20250702 18:43:00.193"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:43:00.193" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:43:00.193" endtime="20250702 18:43:00.193"/>
</kw>
<status status="PASS" starttime="20250702 18:42:57.191" endtime="20250702 18:43:00.193"/>
</kw>
<msg timestamp="20250702 18:43:00.194" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:42:57.191" endtime="20250702 18:43:00.194"/>
</kw>
<msg timestamp="20250702 18:43:00.194" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20250702 18:42:57.191" endtime="20250702 18:43:00.194"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:43:00.197" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/40406-acls 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:43:03.453" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:43:03.453" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ],
  "aclSet" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclLi...</msg>
<status status="PASS" starttime="20250702 18:43:00.195" endtime="20250702 18:43:03.453"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:43:03.454" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ],
  "aclSet" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "LIST" ],
  "aclSet" : [ "READ", "LIST" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ],
  "aclSet" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20250702 18:43:03.454" endtime="20250702 18:43:03.455"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:43:03.455" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:43:03.455" endtime="20250702 18:43:03.455"/>
</kw>
<status status="PASS" starttime="20250702 18:43:00.195" endtime="20250702 18:43:03.455"/>
</kw>
<msg timestamp="20250702 18:43:03.455" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:43:00.194" endtime="20250702 18:43:03.456"/>
</kw>
<msg timestamp="20250702 18:43:03.456" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ],
  "aclSet" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclLi...</msg>
<status status="PASS" starttime="20250702 18:43:00.194" endtime="20250702 18:43:03.456"/>
</kw>
<kw name="Execute" library="os">
<var>${acl_check}</var>
<arg>echo '${result}' | jq -r '.[] | select(.type=="USER" and .name=="superuser1" and .aclScope=="DEFAULT" and (.aclList | contains(["READ", "WRITE"]))) | .name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:43:03.460" level="INFO">Running command 'echo '[ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ],
  "aclSet" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "LIST" ],
  "aclSet" : [ "READ", "LIST" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ],
  "aclSet" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]' | jq -r '.[] | select(.type=="USER" and .name=="superuser1" and .aclScope=="DEFAULT" and (.aclList | contains(["READ", "WRITE"]))) | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:43:03.466" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:43:03.466" level="INFO">${output} = superuser1</msg>
<status status="PASS" starttime="20250702 18:43:03.457" endtime="20250702 18:43:03.466"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:43:03.467" level="INFO">superuser1</msg>
<status status="PASS" starttime="20250702 18:43:03.466" endtime="20250702 18:43:03.467"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:43:03.467" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:43:03.467" endtime="20250702 18:43:03.467"/>
</kw>
<status status="PASS" starttime="20250702 18:43:03.457" endtime="20250702 18:43:03.467"/>
</kw>
<msg timestamp="20250702 18:43:03.467" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:43:03.456" endtime="20250702 18:43:03.467"/>
</kw>
<msg timestamp="20250702 18:43:03.467" level="INFO">${acl_check} = superuser1</msg>
<status status="PASS" starttime="20250702 18:43:03.456" endtime="20250702 18:43:03.467"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acl_check}</arg>
<arg>superuser1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250702 18:43:03.468" endtime="20250702 18:43:03.468"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume setacl ${protocol}${server}/${volume} -al user:superuser1:rwxy[DEFAULT],group:superuser1:a,user:testuser:rwxyc,group:superuser1:a[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:43:03.471" level="INFO">Running command 'ozone sh volume setacl o3://om:9862/40406-acls -al user:superuser1:rwxy[DEFAULT],group:superuser1:a,user:testuser:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:43:06.368" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:43:06.368" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20250702 18:43:03.469" endtime="20250702 18:43:06.368"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:43:06.369" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20250702 18:43:06.368" endtime="20250702 18:43:06.369"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:43:06.369" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:43:06.369" endtime="20250702 18:43:06.369"/>
</kw>
<status status="PASS" starttime="20250702 18:43:03.469" endtime="20250702 18:43:06.370"/>
</kw>
<msg timestamp="20250702 18:43:06.370" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:43:03.468" endtime="20250702 18:43:06.370"/>
</kw>
<msg timestamp="20250702 18:43:06.370" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20250702 18:43:03.468" endtime="20250702 18:43:06.370"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:43:06.373" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/40406-acls 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:43:09.360" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:43:09.360" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ],
  "aclSet" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "...</msg>
<status status="PASS" starttime="20250702 18:43:06.371" endtime="20250702 18:43:09.360"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:43:09.361" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ],
  "aclSet" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ],
  "aclSet" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ],
  "aclSet" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ],
  "aclSet" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20250702 18:43:09.360" endtime="20250702 18:43:09.361"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:43:09.361" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:43:09.361" endtime="20250702 18:43:09.361"/>
</kw>
<status status="PASS" starttime="20250702 18:43:06.371" endtime="20250702 18:43:09.362"/>
</kw>
<msg timestamp="20250702 18:43:09.362" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:43:06.370" endtime="20250702 18:43:09.362"/>
</kw>
<msg timestamp="20250702 18:43:09.362" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ],
  "aclSet" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "...</msg>
<status status="PASS" starttime="20250702 18:43:06.370" endtime="20250702 18:43:09.362"/>
</kw>
<kw name="Execute" library="os">
<var>${acl_check}</var>
<arg>echo '${result}' | jq -r '.[] | select(.type=="USER" and .name=="superuser1" and .aclScope=="DEFAULT" and (.aclList | contains(["READ", "WRITE", "READ_ACL", "WRITE_ACL"]))) | .name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:43:09.365" level="INFO">Running command 'echo '[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ],
  "aclSet" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ],
  "aclSet" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ],
  "aclSet" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ],
  "aclSet" : [ "ALL" ]
} ]' | jq -r '.[] | select(.type=="USER" and .name=="superuser1" and .aclScope=="DEFAULT" and (.aclList | contains(["READ", "WRITE", "READ_ACL", "WRITE_ACL"]))) | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:43:09.370" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:43:09.370" level="INFO">${output} = superuser1</msg>
<status status="PASS" starttime="20250702 18:43:09.363" endtime="20250702 18:43:09.370"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:43:09.371" level="INFO">superuser1</msg>
<status status="PASS" starttime="20250702 18:43:09.370" endtime="20250702 18:43:09.371"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:43:09.371" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:43:09.371" endtime="20250702 18:43:09.371"/>
</kw>
<status status="PASS" starttime="20250702 18:43:09.363" endtime="20250702 18:43:09.371"/>
</kw>
<msg timestamp="20250702 18:43:09.371" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:43:09.362" endtime="20250702 18:43:09.372"/>
</kw>
<msg timestamp="20250702 18:43:09.372" level="INFO">${acl_check} = superuser1</msg>
<status status="PASS" starttime="20250702 18:43:09.362" endtime="20250702 18:43:09.372"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acl_check}</arg>
<arg>superuser1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250702 18:43:09.372" endtime="20250702 18:43:09.372"/>
</kw>
<kw name="Execute" library="os">
<var>${acl_check}</var>
<arg>echo '${result}' | jq -r '.[] | select(.type=="GROUP" and .name=="superuser1" and .aclScope=="DEFAULT" and (.aclList | contains(["ALL"]))) | .name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:43:09.375" level="INFO">Running command 'echo '[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ],
  "aclSet" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ],
  "aclSet" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ],
  "aclSet" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ],
  "aclSet" : [ "ALL" ]
} ]' | jq -r '.[] | select(.type=="GROUP" and .name=="superuser1" and .aclScope=="DEFAULT" and (.aclList | contains(["ALL"]))) | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:43:09.380" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:43:09.380" level="INFO">${output} = superuser1</msg>
<status status="PASS" starttime="20250702 18:43:09.373" endtime="20250702 18:43:09.380"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:43:09.381" level="INFO">superuser1</msg>
<status status="PASS" starttime="20250702 18:43:09.380" endtime="20250702 18:43:09.381"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:43:09.381" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:43:09.381" endtime="20250702 18:43:09.381"/>
</kw>
<status status="PASS" starttime="20250702 18:43:09.373" endtime="20250702 18:43:09.381"/>
</kw>
<msg timestamp="20250702 18:43:09.381" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:43:09.373" endtime="20250702 18:43:09.382"/>
</kw>
<msg timestamp="20250702 18:43:09.382" level="INFO">${acl_check} = superuser1</msg>
<status status="PASS" starttime="20250702 18:43:09.372" endtime="20250702 18:43:09.382"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acl_check}</arg>
<arg>superuser1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250702 18:43:09.382" endtime="20250702 18:43:09.382"/>
</kw>
<status status="PASS" starttime="20250702 18:42:45.253" endtime="20250702 18:43:09.382"/>
</kw>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20250702 18:42:45.193" endtime="20250702 18:43:09.382"/>
</test>
<test id="s1-s2-s5-t4" name="RpcClient bucket acls" line="36">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get Security Enabled From Config" library="commonlib">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' != ''</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20250702 18:43:09.384" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:43:09.384" endtime="20250702 18:43:09.384"/>
</kw>
<kw name="Execute" library="os">
<var>${value}</var>
<arg>ozone getconf confKey ozone.security.enabled</arg>
<status status="NOT RUN" starttime="20250702 18:43:09.384" endtime="20250702 18:43:09.384"/>
</kw>
<if>
<branch type="IF" condition="'${value}' != 'true' and '${value}' != 'false'">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>false</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20250702 18:43:09.384" endtime="20250702 18:43:09.385"/>
</kw>
<status status="NOT RUN" starttime="20250702 18:43:09.384" endtime="20250702 18:43:09.385"/>
</branch>
<status status="NOT RUN" starttime="20250702 18:43:09.384" endtime="20250702 18:43:09.385"/>
</if>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${SECURITY_ENABLED}</arg>
<arg>${value}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20250702 18:43:09.385" endtime="20250702 18:43:09.385"/>
</kw>
<status status="PASS" starttime="20250702 18:43:09.384" endtime="20250702 18:43:09.385"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250702 18:43:09.385" endtime="20250702 18:43:09.385"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:43:09.388" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:43:09.391" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:43:09.391" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250702 18:43:09.386" endtime="20250702 18:43:09.391"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:43:09.392" level="INFO">scm</msg>
<status status="PASS" starttime="20250702 18:43:09.392" endtime="20250702 18:43:09.392"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:43:09.392" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:43:09.392" endtime="20250702 18:43:09.393"/>
</kw>
<status status="PASS" starttime="20250702 18:43:09.386" endtime="20250702 18:43:09.393"/>
</kw>
<msg timestamp="20250702 18:43:09.393" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:43:09.386" endtime="20250702 18:43:09.393"/>
</kw>
<msg timestamp="20250702 18:43:09.393" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250702 18:43:09.385" endtime="20250702 18:43:09.393"/>
</kw>
<msg timestamp="20250702 18:43:09.393" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250702 18:43:09.385" endtime="20250702 18:43:09.393"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250702 18:43:09.393" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250702 18:43:09.393" endtime="20250702 18:43:09.394"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:43:09.397" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:43:09.442" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:43:09.442" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:43:09.395" endtime="20250702 18:43:09.442"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:43:09.442" level="INFO"/>
<status status="PASS" starttime="20250702 18:43:09.442" endtime="20250702 18:43:09.443"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:43:09.443" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:43:09.443" endtime="20250702 18:43:09.443"/>
</kw>
<status status="PASS" starttime="20250702 18:43:09.394" endtime="20250702 18:43:09.443"/>
</kw>
<msg timestamp="20250702 18:43:09.443" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:43:09.394" endtime="20250702 18:43:09.443"/>
</kw>
<status status="PASS" starttime="20250702 18:43:09.394" endtime="20250702 18:43:09.443"/>
</kw>
<status status="PASS" starttime="20250702 18:43:09.394" endtime="20250702 18:43:09.443"/>
</kw>
<status status="PASS" starttime="20250702 18:43:09.383" endtime="20250702 18:43:09.443"/>
</kw>
<status status="PASS" starttime="20250702 18:43:09.383" endtime="20250702 18:43:09.443"/>
</kw>
<kw name="Test Bucket Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-acls</arg>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:43:09.447" level="INFO">Running command 'ozone sh bucket create o3://om:9862/40406-acls/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:43:12.415" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:43:12.415" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:43:09.445" endtime="20250702 18:43:12.415"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:43:12.416" level="INFO"/>
<status status="PASS" starttime="20250702 18:43:12.415" endtime="20250702 18:43:12.416"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:43:12.416" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:43:12.416" endtime="20250702 18:43:12.416"/>
</kw>
<status status="PASS" starttime="20250702 18:43:09.445" endtime="20250702 18:43:12.416"/>
</kw>
<msg timestamp="20250702 18:43:12.416" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:43:09.444" endtime="20250702 18:43:12.416"/>
</kw>
<status status="PASS" starttime="20250702 18:43:09.444" endtime="20250702 18:43:12.417"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:43:12.420" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/40406-acls/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:43:15.416" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:43:15.416" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ],
  "aclSet" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclLi...</msg>
<status status="PASS" starttime="20250702 18:43:12.418" endtime="20250702 18:43:15.416"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:43:15.417" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ],
  "aclSet" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "LIST" ],
  "aclSet" : [ "READ", "LIST" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ],
  "aclSet" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ],
  "aclSet" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20250702 18:43:15.417" endtime="20250702 18:43:15.417"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:43:15.418" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:43:15.417" endtime="20250702 18:43:15.418"/>
</kw>
<status status="PASS" starttime="20250702 18:43:12.417" endtime="20250702 18:43:15.418"/>
</kw>
<msg timestamp="20250702 18:43:15.418" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:43:12.417" endtime="20250702 18:43:15.418"/>
</kw>
<msg timestamp="20250702 18:43:15.418" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ],
  "aclSet" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclLi...</msg>
<status status="PASS" starttime="20250702 18:43:12.417" endtime="20250702 18:43:15.418"/>
</kw>
<kw name="Execute" library="os">
<var>${acl_check}</var>
<arg>echo '${result}' | jq -r '.[] | select(.type=="USER" and .aclScope=="ACCESS" and (.aclList | contains(["ALL"]))) | .name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:43:15.422" level="INFO">Running command 'echo '[ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ],
  "aclSet" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "LIST" ],
  "aclSet" : [ "READ", "LIST" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ],
  "aclSet" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ],
  "aclSet" : [ "ALL" ]
} ]' | jq -r '.[] | select(.type=="USER" and .aclScope=="ACCESS" and (.aclList | contains(["ALL"]))) | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:43:15.426" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:43:15.426" level="INFO">${output} = testuser</msg>
<status status="PASS" starttime="20250702 18:43:15.419" endtime="20250702 18:43:15.426"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:43:15.427" level="INFO">testuser</msg>
<status status="PASS" starttime="20250702 18:43:15.427" endtime="20250702 18:43:15.427"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:43:15.428" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:43:15.427" endtime="20250702 18:43:15.428"/>
</kw>
<status status="PASS" starttime="20250702 18:43:15.419" endtime="20250702 18:43:15.428"/>
</kw>
<msg timestamp="20250702 18:43:15.428" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:43:15.419" endtime="20250702 18:43:15.428"/>
</kw>
<msg timestamp="20250702 18:43:15.428" level="INFO">${acl_check} = testuser</msg>
<status status="PASS" starttime="20250702 18:43:15.418" endtime="20250702 18:43:15.428"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${acl_check}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20250702 18:43:15.428" level="INFO">Length is 8</msg>
<status status="PASS" starttime="20250702 18:43:15.428" endtime="20250702 18:43:15.428"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket addacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:rwxy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:43:15.431" level="INFO">Running command 'ozone sh bucket addacl o3://om:9862/40406-acls/bb1 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:43:18.278" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:43:18.278" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20250702 18:43:15.430" endtime="20250702 18:43:18.278"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:43:18.279" level="INFO">ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20250702 18:43:18.278" endtime="20250702 18:43:18.279"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:43:18.279" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:43:18.279" endtime="20250702 18:43:18.279"/>
</kw>
<status status="PASS" starttime="20250702 18:43:15.429" endtime="20250702 18:43:18.279"/>
</kw>
<msg timestamp="20250702 18:43:18.279" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:43:15.429" endtime="20250702 18:43:18.279"/>
</kw>
<msg timestamp="20250702 18:43:18.279" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20250702 18:43:15.429" endtime="20250702 18:43:18.279"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:43:18.283" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/40406-acls/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:43:21.405" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:43:21.405" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclSet" : [ "ALL" ],
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclSe...</msg>
<status status="PASS" starttime="20250702 18:43:18.281" endtime="20250702 18:43:21.405"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:43:21.406" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclSet" : [ "ALL" ],
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclSet" : [ "READ", "LIST" ],
  "aclList" : [ "READ", "LIST" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclSet" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ],
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclSet" : [ "ALL" ],
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20250702 18:43:21.405" endtime="20250702 18:43:21.406"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:43:21.406" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:43:21.406" endtime="20250702 18:43:21.406"/>
</kw>
<status status="PASS" starttime="20250702 18:43:18.280" endtime="20250702 18:43:21.406"/>
</kw>
<msg timestamp="20250702 18:43:21.406" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:43:18.280" endtime="20250702 18:43:21.407"/>
</kw>
<msg timestamp="20250702 18:43:21.407" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclSet" : [ "ALL" ],
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclSe...</msg>
<status status="PASS" starttime="20250702 18:43:18.280" endtime="20250702 18:43:21.407"/>
</kw>
<kw name="Execute" library="os">
<var>${acl_check}</var>
<arg>echo '${result}' | jq -r '.[] | select(.type=="USER" and .name=="superuser1" and .aclScope=="ACCESS" and (.aclList | contains(["READ", "WRITE", "READ_ACL", "WRITE_ACL"]))) | .name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:43:21.410" level="INFO">Running command 'echo '[ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclSet" : [ "ALL" ],
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclSet" : [ "READ", "LIST" ],
  "aclList" : [ "READ", "LIST" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclSet" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ],
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclSet" : [ "ALL" ],
  "aclList" : [ "ALL" ]
} ]' | jq -r '.[] | select(.type=="USER" and .name=="superuser1" and .aclScope=="ACCESS" and (.aclList | contains(["READ", "WRITE", "READ_ACL", "WRITE_ACL"]))) | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:43:21.415" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:43:21.415" level="INFO">${output} = superuser1</msg>
<status status="PASS" starttime="20250702 18:43:21.408" endtime="20250702 18:43:21.415"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:43:21.416" level="INFO">superuser1</msg>
<status status="PASS" starttime="20250702 18:43:21.416" endtime="20250702 18:43:21.416"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:43:21.416" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:43:21.416" endtime="20250702 18:43:21.417"/>
</kw>
<status status="PASS" starttime="20250702 18:43:21.407" endtime="20250702 18:43:21.417"/>
</kw>
<msg timestamp="20250702 18:43:21.417" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:43:21.407" endtime="20250702 18:43:21.417"/>
</kw>
<msg timestamp="20250702 18:43:21.417" level="INFO">${acl_check} = superuser1</msg>
<status status="PASS" starttime="20250702 18:43:21.407" endtime="20250702 18:43:21.417"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acl_check}</arg>
<arg>superuser1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250702 18:43:21.417" endtime="20250702 18:43:21.417"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket removeacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:43:21.420" level="INFO">Running command 'ozone sh bucket removeacl o3://om:9862/40406-acls/bb1 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:43:24.386" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:43:24.386" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20250702 18:43:21.418" endtime="20250702 18:43:24.386"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:43:24.387" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20250702 18:43:24.386" endtime="20250702 18:43:24.387"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:43:24.387" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:43:24.387" endtime="20250702 18:43:24.387"/>
</kw>
<status status="PASS" starttime="20250702 18:43:21.418" endtime="20250702 18:43:24.387"/>
</kw>
<msg timestamp="20250702 18:43:24.387" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:43:21.418" endtime="20250702 18:43:24.388"/>
</kw>
<msg timestamp="20250702 18:43:24.388" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20250702 18:43:21.417" endtime="20250702 18:43:24.388"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:43:24.391" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/40406-acls/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:43:27.527" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:43:27.527" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ],
  "aclSet" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclLi...</msg>
<status status="PASS" starttime="20250702 18:43:24.389" endtime="20250702 18:43:27.527"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:43:27.528" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ],
  "aclSet" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "LIST" ],
  "aclSet" : [ "READ", "LIST" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ],
  "aclSet" : [ "READ", "WRITE" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ],
  "aclSet" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20250702 18:43:27.528" endtime="20250702 18:43:27.528"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:43:27.529" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:43:27.528" endtime="20250702 18:43:27.529"/>
</kw>
<status status="PASS" starttime="20250702 18:43:24.388" endtime="20250702 18:43:27.529"/>
</kw>
<msg timestamp="20250702 18:43:27.529" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:43:24.388" endtime="20250702 18:43:27.529"/>
</kw>
<msg timestamp="20250702 18:43:27.529" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ],
  "aclSet" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclLi...</msg>
<status status="PASS" starttime="20250702 18:43:24.388" endtime="20250702 18:43:27.529"/>
</kw>
<kw name="Execute" library="os">
<var>${acl_check}</var>
<arg>echo '${result}' | jq -r '.[] | select(.type=="USER" and .name=="superuser1" and .aclScope=="ACCESS" and (.aclList | contains(["READ", "WRITE"]))) | .name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:43:27.533" level="INFO">Running command 'echo '[ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ],
  "aclSet" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "LIST" ],
  "aclSet" : [ "READ", "LIST" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ],
  "aclSet" : [ "READ", "WRITE" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ],
  "aclSet" : [ "ALL" ]
} ]' | jq -r '.[] | select(.type=="USER" and .name=="superuser1" and .aclScope=="ACCESS" and (.aclList | contains(["READ", "WRITE"]))) | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:43:27.538" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:43:27.538" level="INFO">${output} = superuser1</msg>
<status status="PASS" starttime="20250702 18:43:27.530" endtime="20250702 18:43:27.538"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:43:27.538" level="INFO">superuser1</msg>
<status status="PASS" starttime="20250702 18:43:27.538" endtime="20250702 18:43:27.539"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:43:27.539" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:43:27.539" endtime="20250702 18:43:27.539"/>
</kw>
<status status="PASS" starttime="20250702 18:43:27.530" endtime="20250702 18:43:27.539"/>
</kw>
<msg timestamp="20250702 18:43:27.539" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:43:27.530" endtime="20250702 18:43:27.539"/>
</kw>
<msg timestamp="20250702 18:43:27.539" level="INFO">${acl_check} = superuser1</msg>
<status status="PASS" starttime="20250702 18:43:27.529" endtime="20250702 18:43:27.539"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acl_check}</arg>
<arg>superuser1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250702 18:43:27.540" endtime="20250702 18:43:27.540"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket setacl ${protocol}${server}/${volume}/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser:rwxyc,group:superuser1:a[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:43:27.543" level="INFO">Running command 'ozone sh bucket setacl o3://om:9862/40406-acls/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:43:30.568" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:43:30.568" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20250702 18:43:27.541" endtime="20250702 18:43:30.568"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:43:30.569" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20250702 18:43:30.568" endtime="20250702 18:43:30.569"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:43:30.570" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:43:30.569" endtime="20250702 18:43:30.570"/>
</kw>
<status status="PASS" starttime="20250702 18:43:27.541" endtime="20250702 18:43:30.570"/>
</kw>
<msg timestamp="20250702 18:43:30.570" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:43:27.540" endtime="20250702 18:43:30.570"/>
</kw>
<msg timestamp="20250702 18:43:30.571" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20250702 18:43:27.540" endtime="20250702 18:43:30.571"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:43:30.575" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/40406-acls/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:43:33.662" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:43:33.662" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ],
  "aclSet" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "t...</msg>
<status status="PASS" starttime="20250702 18:43:30.572" endtime="20250702 18:43:33.662"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:43:33.663" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ],
  "aclSet" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ],
  "aclSet" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ],
  "aclSet" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ],
  "aclSet" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20250702 18:43:33.663" endtime="20250702 18:43:33.663"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:43:33.664" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:43:33.663" endtime="20250702 18:43:33.664"/>
</kw>
<status status="PASS" starttime="20250702 18:43:30.572" endtime="20250702 18:43:33.664"/>
</kw>
<msg timestamp="20250702 18:43:33.664" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:43:30.571" endtime="20250702 18:43:33.664"/>
</kw>
<msg timestamp="20250702 18:43:33.664" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ],
  "aclSet" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "t...</msg>
<status status="PASS" starttime="20250702 18:43:30.571" endtime="20250702 18:43:33.664"/>
</kw>
<kw name="Execute" library="os">
<var>${acl_check}</var>
<arg>echo '${result}' | jq -r '.[] | select(.type=="USER" and .name=="superuser1" and .aclScope=="ACCESS" and (.aclList | contains(["READ", "WRITE", "READ_ACL", "WRITE_ACL"]))) | .name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:43:33.668" level="INFO">Running command 'echo '[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ],
  "aclSet" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ],
  "aclSet" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ],
  "aclSet" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ],
  "aclSet" : [ "ALL" ]
} ]' | jq -r '.[] | select(.type=="USER" and .name=="superuser1" and .aclScope=="ACCESS" and (.aclList | contains(["READ", "WRITE", "READ_ACL", "WRITE_ACL"]))) | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:43:33.674" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:43:33.674" level="INFO">${output} = superuser1</msg>
<status status="PASS" starttime="20250702 18:43:33.665" endtime="20250702 18:43:33.674"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:43:33.675" level="INFO">superuser1</msg>
<status status="PASS" starttime="20250702 18:43:33.674" endtime="20250702 18:43:33.675"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:43:33.675" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:43:33.675" endtime="20250702 18:43:33.675"/>
</kw>
<status status="PASS" starttime="20250702 18:43:33.665" endtime="20250702 18:43:33.675"/>
</kw>
<msg timestamp="20250702 18:43:33.675" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:43:33.665" endtime="20250702 18:43:33.675"/>
</kw>
<msg timestamp="20250702 18:43:33.676" level="INFO">${acl_check} = superuser1</msg>
<status status="PASS" starttime="20250702 18:43:33.664" endtime="20250702 18:43:33.676"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acl_check}</arg>
<arg>superuser1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250702 18:43:33.676" endtime="20250702 18:43:33.676"/>
</kw>
<kw name="Execute" library="os">
<var>${acl_check}</var>
<arg>echo '${result}' | jq -r '.[] | select(.type=="GROUP" and .name=="superuser1" and .aclScope=="DEFAULT" and (.aclList | contains(["ALL"]))) | .name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:43:33.679" level="INFO">Running command 'echo '[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ],
  "aclSet" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ],
  "aclSet" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ],
  "aclSet" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ],
  "aclSet" : [ "ALL" ]
} ]' | jq -r '.[] | select(.type=="GROUP" and .name=="superuser1" and .aclScope=="DEFAULT" and (.aclList | contains(["ALL"]))) | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:43:33.685" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:43:33.685" level="INFO">${output} = superuser1</msg>
<status status="PASS" starttime="20250702 18:43:33.677" endtime="20250702 18:43:33.685"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:43:33.686" level="INFO">superuser1</msg>
<status status="PASS" starttime="20250702 18:43:33.685" endtime="20250702 18:43:33.686"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:43:33.686" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:43:33.686" endtime="20250702 18:43:33.686"/>
</kw>
<status status="PASS" starttime="20250702 18:43:33.677" endtime="20250702 18:43:33.686"/>
</kw>
<msg timestamp="20250702 18:43:33.686" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:43:33.677" endtime="20250702 18:43:33.686"/>
</kw>
<msg timestamp="20250702 18:43:33.687" level="INFO">${acl_check} = superuser1</msg>
<status status="PASS" starttime="20250702 18:43:33.676" endtime="20250702 18:43:33.687"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acl_check}</arg>
<arg>superuser1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250702 18:43:33.687" endtime="20250702 18:43:33.687"/>
</kw>
<status status="PASS" starttime="20250702 18:43:09.444" endtime="20250702 18:43:33.687"/>
</kw>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20250702 18:43:09.383" endtime="20250702 18:43:33.687"/>
</test>
<test id="s1-s2-s5-t5" name="RpcClient key acls" line="39">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get Security Enabled From Config" library="commonlib">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' != ''</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20250702 18:43:33.689" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:43:33.689" endtime="20250702 18:43:33.689"/>
</kw>
<kw name="Execute" library="os">
<var>${value}</var>
<arg>ozone getconf confKey ozone.security.enabled</arg>
<status status="NOT RUN" starttime="20250702 18:43:33.689" endtime="20250702 18:43:33.690"/>
</kw>
<if>
<branch type="IF" condition="'${value}' != 'true' and '${value}' != 'false'">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>false</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20250702 18:43:33.690" endtime="20250702 18:43:33.690"/>
</kw>
<status status="NOT RUN" starttime="20250702 18:43:33.690" endtime="20250702 18:43:33.690"/>
</branch>
<status status="NOT RUN" starttime="20250702 18:43:33.690" endtime="20250702 18:43:33.690"/>
</if>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${SECURITY_ENABLED}</arg>
<arg>${value}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20250702 18:43:33.690" endtime="20250702 18:43:33.690"/>
</kw>
<status status="PASS" starttime="20250702 18:43:33.689" endtime="20250702 18:43:33.690"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250702 18:43:33.690" endtime="20250702 18:43:33.690"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:43:33.694" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:43:33.697" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:43:33.697" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250702 18:43:33.691" endtime="20250702 18:43:33.698"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:43:33.698" level="INFO">scm</msg>
<status status="PASS" starttime="20250702 18:43:33.698" endtime="20250702 18:43:33.698"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:43:33.699" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:43:33.698" endtime="20250702 18:43:33.699"/>
</kw>
<status status="PASS" starttime="20250702 18:43:33.691" endtime="20250702 18:43:33.699"/>
</kw>
<msg timestamp="20250702 18:43:33.699" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:43:33.691" endtime="20250702 18:43:33.699"/>
</kw>
<msg timestamp="20250702 18:43:33.699" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250702 18:43:33.691" endtime="20250702 18:43:33.699"/>
</kw>
<msg timestamp="20250702 18:43:33.699" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250702 18:43:33.690" endtime="20250702 18:43:33.699"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250702 18:43:33.700" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250702 18:43:33.699" endtime="20250702 18:43:33.700"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:43:33.703" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:43:33.757" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:43:33.757" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:43:33.701" endtime="20250702 18:43:33.757"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:43:33.758" level="INFO"/>
<status status="PASS" starttime="20250702 18:43:33.758" endtime="20250702 18:43:33.758"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:43:33.758" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:43:33.758" endtime="20250702 18:43:33.759"/>
</kw>
<status status="PASS" starttime="20250702 18:43:33.701" endtime="20250702 18:43:33.759"/>
</kw>
<msg timestamp="20250702 18:43:33.759" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:43:33.701" endtime="20250702 18:43:33.759"/>
</kw>
<status status="PASS" starttime="20250702 18:43:33.700" endtime="20250702 18:43:33.759"/>
</kw>
<status status="PASS" starttime="20250702 18:43:33.700" endtime="20250702 18:43:33.759"/>
</kw>
<status status="PASS" starttime="20250702 18:43:33.688" endtime="20250702 18:43:33.759"/>
</kw>
<status status="PASS" starttime="20250702 18:43:33.688" endtime="20250702 18:43:33.759"/>
</kw>
<kw name="Test key Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-acls</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key2 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:43:33.763" level="INFO">Running command 'ozone sh key put o3://om:9862/40406-acls/bb1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:43:38.538" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:43:38.538" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:43:33.760" endtime="20250702 18:43:38.538"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:43:38.539" level="INFO"/>
<status status="PASS" starttime="20250702 18:43:38.539" endtime="20250702 18:43:38.539"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:43:38.540" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:43:38.540" endtime="20250702 18:43:38.540"/>
</kw>
<status status="PASS" starttime="20250702 18:43:33.760" endtime="20250702 18:43:38.540"/>
</kw>
<msg timestamp="20250702 18:43:38.540" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:43:33.760" endtime="20250702 18:43:38.540"/>
</kw>
<status status="PASS" starttime="20250702 18:43:33.760" endtime="20250702 18:43:38.540"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:43:38.544" level="INFO">Running command 'ozone sh key getacl o3://om:9862/40406-acls/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:43:41.681" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:43:41.681" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclSet" : [ "ALL" ],
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclSe...</msg>
<status status="PASS" starttime="20250702 18:43:38.542" endtime="20250702 18:43:41.681"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:43:41.682" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclSet" : [ "ALL" ],
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclSet" : [ "READ", "LIST" ],
  "aclList" : [ "READ", "LIST" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclSet" : [ "ALL" ],
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20250702 18:43:41.681" endtime="20250702 18:43:41.682"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:43:41.683" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:43:41.682" endtime="20250702 18:43:41.683"/>
</kw>
<status status="PASS" starttime="20250702 18:43:38.541" endtime="20250702 18:43:41.683"/>
</kw>
<msg timestamp="20250702 18:43:41.683" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:43:38.541" endtime="20250702 18:43:41.683"/>
</kw>
<msg timestamp="20250702 18:43:41.683" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclSet" : [ "ALL" ],
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclSe...</msg>
<status status="PASS" starttime="20250702 18:43:38.540" endtime="20250702 18:43:41.683"/>
</kw>
<kw name="Execute" library="os">
<var>${acl_check}</var>
<arg>echo '${result}' | jq -r '.[] | select(.type=="USER" and .aclScope=="ACCESS" and (.aclList | contains(["ALL"]))) | .name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:43:41.687" level="INFO">Running command 'echo '[ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclSet" : [ "ALL" ],
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclSet" : [ "READ", "LIST" ],
  "aclList" : [ "READ", "LIST" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclSet" : [ "ALL" ],
  "aclList" : [ "ALL" ]
} ]' | jq -r '.[] | select(.type=="USER" and .aclScope=="ACCESS" and (.aclList | contains(["ALL"]))) | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:43:41.692" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:43:41.692" level="INFO">${output} = testuser</msg>
<status status="PASS" starttime="20250702 18:43:41.684" endtime="20250702 18:43:41.692"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:43:41.693" level="INFO">testuser</msg>
<status status="PASS" starttime="20250702 18:43:41.692" endtime="20250702 18:43:41.693"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:43:41.693" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:43:41.693" endtime="20250702 18:43:41.693"/>
</kw>
<status status="PASS" starttime="20250702 18:43:41.684" endtime="20250702 18:43:41.693"/>
</kw>
<msg timestamp="20250702 18:43:41.693" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:43:41.684" endtime="20250702 18:43:41.694"/>
</kw>
<msg timestamp="20250702 18:43:41.694" level="INFO">${acl_check} = testuser</msg>
<status status="PASS" starttime="20250702 18:43:41.683" endtime="20250702 18:43:41.694"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${acl_check}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20250702 18:43:41.694" level="INFO">Length is 8</msg>
<status status="PASS" starttime="20250702 18:43:41.694" endtime="20250702 18:43:41.694"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key addacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:rwxy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:43:41.697" level="INFO">Running command 'ozone sh key addacl o3://om:9862/40406-acls/bb1/key2 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:43:44.661" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:43:44.661" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20250702 18:43:41.695" endtime="20250702 18:43:44.661"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:43:44.662" level="INFO">ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20250702 18:43:44.661" endtime="20250702 18:43:44.662"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:43:44.662" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:43:44.662" endtime="20250702 18:43:44.662"/>
</kw>
<status status="PASS" starttime="20250702 18:43:41.695" endtime="20250702 18:43:44.662"/>
</kw>
<msg timestamp="20250702 18:43:44.662" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:43:41.695" endtime="20250702 18:43:44.663"/>
</kw>
<msg timestamp="20250702 18:43:44.663" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20250702 18:43:41.694" endtime="20250702 18:43:44.663"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:43:44.666" level="INFO">Running command 'ozone sh key getacl o3://om:9862/40406-acls/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:43:47.719" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:43:47.719" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ],
  "aclSet" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclLi...</msg>
<status status="PASS" starttime="20250702 18:43:44.664" endtime="20250702 18:43:47.719"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:43:47.720" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ],
  "aclSet" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "LIST" ],
  "aclSet" : [ "READ", "LIST" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ],
  "aclSet" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ],
  "aclSet" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20250702 18:43:47.720" endtime="20250702 18:43:47.720"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:43:47.721" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:43:47.721" endtime="20250702 18:43:47.721"/>
</kw>
<status status="PASS" starttime="20250702 18:43:44.663" endtime="20250702 18:43:47.721"/>
</kw>
<msg timestamp="20250702 18:43:47.721" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:43:44.663" endtime="20250702 18:43:47.721"/>
</kw>
<msg timestamp="20250702 18:43:47.721" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ],
  "aclSet" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclLi...</msg>
<status status="PASS" starttime="20250702 18:43:44.663" endtime="20250702 18:43:47.721"/>
</kw>
<kw name="Execute" library="os">
<var>${acl_check}</var>
<arg>echo '${result}' | jq -r '.[] | select(.type=="USER" and .name=="superuser1" and .aclScope=="ACCESS" and (.aclList | contains(["READ", "WRITE", "READ_ACL", "WRITE_ACL"]))) | .name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:43:47.725" level="INFO">Running command 'echo '[ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ],
  "aclSet" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "LIST" ],
  "aclSet" : [ "READ", "LIST" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ],
  "aclSet" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ],
  "aclSet" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]' | jq -r '.[] | select(.type=="USER" and .name=="superuser1" and .aclScope=="ACCESS" and (.aclList | contains(["READ", "WRITE", "READ_ACL", "WRITE_ACL"]))) | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:43:47.730" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:43:47.730" level="INFO">${output} = superuser1</msg>
<status status="PASS" starttime="20250702 18:43:47.723" endtime="20250702 18:43:47.730"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:43:47.731" level="INFO">superuser1</msg>
<status status="PASS" starttime="20250702 18:43:47.731" endtime="20250702 18:43:47.731"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:43:47.732" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:43:47.731" endtime="20250702 18:43:47.732"/>
</kw>
<status status="PASS" starttime="20250702 18:43:47.722" endtime="20250702 18:43:47.732"/>
</kw>
<msg timestamp="20250702 18:43:47.732" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:43:47.722" endtime="20250702 18:43:47.732"/>
</kw>
<msg timestamp="20250702 18:43:47.732" level="INFO">${acl_check} = superuser1</msg>
<status status="PASS" starttime="20250702 18:43:47.721" endtime="20250702 18:43:47.732"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acl_check}</arg>
<arg>superuser1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250702 18:43:47.732" endtime="20250702 18:43:47.733"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key removeacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:43:47.736" level="INFO">Running command 'ozone sh key removeacl o3://om:9862/40406-acls/bb1/key2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:43:50.960" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:43:50.960" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20250702 18:43:47.734" endtime="20250702 18:43:50.960"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:43:50.961" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20250702 18:43:50.960" endtime="20250702 18:43:50.961"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:43:50.961" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:43:50.961" endtime="20250702 18:43:50.961"/>
</kw>
<status status="PASS" starttime="20250702 18:43:47.733" endtime="20250702 18:43:50.961"/>
</kw>
<msg timestamp="20250702 18:43:50.961" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:43:47.733" endtime="20250702 18:43:50.961"/>
</kw>
<msg timestamp="20250702 18:43:50.962" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20250702 18:43:47.733" endtime="20250702 18:43:50.962"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:43:50.965" level="INFO">Running command 'ozone sh key getacl o3://om:9862/40406-acls/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:43:54.095" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:43:54.095" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ],
  "aclSet" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclLi...</msg>
<status status="PASS" starttime="20250702 18:43:50.963" endtime="20250702 18:43:54.095"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:43:54.096" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ],
  "aclSet" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "LIST" ],
  "aclSet" : [ "READ", "LIST" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ],
  "aclSet" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ],
  "aclSet" : [ "READ", "WRITE" ]
} ]</msg>
<status status="PASS" starttime="20250702 18:43:54.095" endtime="20250702 18:43:54.096"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:43:54.096" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:43:54.096" endtime="20250702 18:43:54.096"/>
</kw>
<status status="PASS" starttime="20250702 18:43:50.962" endtime="20250702 18:43:54.096"/>
</kw>
<msg timestamp="20250702 18:43:54.096" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:43:50.962" endtime="20250702 18:43:54.096"/>
</kw>
<msg timestamp="20250702 18:43:54.096" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ],
  "aclSet" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclLi...</msg>
<status status="PASS" starttime="20250702 18:43:50.962" endtime="20250702 18:43:54.097"/>
</kw>
<kw name="Execute" library="os">
<var>${acl_check}</var>
<arg>echo '${result}' | jq -r '.[] | select(.type=="USER" and .name=="superuser1" and .aclScope=="ACCESS" and (.aclList | contains(["READ", "WRITE"]))) | .name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:43:54.100" level="INFO">Running command 'echo '[ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ],
  "aclSet" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "LIST" ],
  "aclSet" : [ "READ", "LIST" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ],
  "aclSet" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ],
  "aclSet" : [ "READ", "WRITE" ]
} ]' | jq -r '.[] | select(.type=="USER" and .name=="superuser1" and .aclScope=="ACCESS" and (.aclList | contains(["READ", "WRITE"]))) | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:43:54.105" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:43:54.105" level="INFO">${output} = superuser1</msg>
<status status="PASS" starttime="20250702 18:43:54.097" endtime="20250702 18:43:54.105"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:43:54.106" level="INFO">superuser1</msg>
<status status="PASS" starttime="20250702 18:43:54.105" endtime="20250702 18:43:54.106"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:43:54.106" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:43:54.106" endtime="20250702 18:43:54.106"/>
</kw>
<status status="PASS" starttime="20250702 18:43:54.097" endtime="20250702 18:43:54.106"/>
</kw>
<msg timestamp="20250702 18:43:54.106" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:43:54.097" endtime="20250702 18:43:54.106"/>
</kw>
<msg timestamp="20250702 18:43:54.107" level="INFO">${acl_check} = superuser1</msg>
<status status="PASS" starttime="20250702 18:43:54.097" endtime="20250702 18:43:54.107"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acl_check}</arg>
<arg>superuser1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250702 18:43:54.107" endtime="20250702 18:43:54.107"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key setacl ${protocol}${server}/${volume}/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser:rwxyc</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:43:54.110" level="INFO">Running command 'ozone sh key setacl o3://om:9862/40406-acls/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser:rwxyc 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:43:57.046" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:43:57.046" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20250702 18:43:54.108" endtime="20250702 18:43:57.046"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:43:57.047" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20250702 18:43:57.047" endtime="20250702 18:43:57.047"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:43:57.048" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:43:57.047" endtime="20250702 18:43:57.048"/>
</kw>
<status status="PASS" starttime="20250702 18:43:54.108" endtime="20250702 18:43:57.048"/>
</kw>
<msg timestamp="20250702 18:43:57.048" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:43:54.107" endtime="20250702 18:43:57.048"/>
</kw>
<msg timestamp="20250702 18:43:57.049" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20250702 18:43:54.107" endtime="20250702 18:43:57.049"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:43:57.052" level="INFO">Running command 'ozone sh key getacl o3://om:9862/40406-acls/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:44:00.270" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:44:00.270" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ],
  "aclSet" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "t...</msg>
<status status="PASS" starttime="20250702 18:43:57.050" endtime="20250702 18:44:00.270"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:44:00.272" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ],
  "aclSet" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ],
  "aclSet" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ],
  "aclSet" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20250702 18:44:00.271" endtime="20250702 18:44:00.272"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:44:00.272" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:44:00.272" endtime="20250702 18:44:00.272"/>
</kw>
<status status="PASS" starttime="20250702 18:43:57.049" endtime="20250702 18:44:00.273"/>
</kw>
<msg timestamp="20250702 18:44:00.273" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:43:57.049" endtime="20250702 18:44:00.273"/>
</kw>
<msg timestamp="20250702 18:44:00.273" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ],
  "aclSet" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "t...</msg>
<status status="PASS" starttime="20250702 18:43:57.049" endtime="20250702 18:44:00.273"/>
</kw>
<kw name="Execute" library="os">
<var>${acl_check}</var>
<arg>echo '${result}' | jq -r '.[] | select(.type=="USER" and .name=="superuser1" and .aclScope=="ACCESS" and (.aclList | contains(["READ", "WRITE", "READ_ACL", "WRITE_ACL"]))) | .name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:44:00.277" level="INFO">Running command 'echo '[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ],
  "aclSet" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ],
  "aclSet" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ],
  "aclSet" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
} ]' | jq -r '.[] | select(.type=="USER" and .name=="superuser1" and .aclScope=="ACCESS" and (.aclList | contains(["READ", "WRITE", "READ_ACL", "WRITE_ACL"]))) | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:44:00.282" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:44:00.282" level="INFO">${output} = superuser1</msg>
<status status="PASS" starttime="20250702 18:44:00.274" endtime="20250702 18:44:00.282"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:44:00.283" level="INFO">superuser1</msg>
<status status="PASS" starttime="20250702 18:44:00.283" endtime="20250702 18:44:00.283"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:44:00.284" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:44:00.283" endtime="20250702 18:44:00.284"/>
</kw>
<status status="PASS" starttime="20250702 18:44:00.274" endtime="20250702 18:44:00.284"/>
</kw>
<msg timestamp="20250702 18:44:00.284" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:44:00.274" endtime="20250702 18:44:00.284"/>
</kw>
<msg timestamp="20250702 18:44:00.284" level="INFO">${acl_check} = superuser1</msg>
<status status="PASS" starttime="20250702 18:44:00.273" endtime="20250702 18:44:00.284"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acl_check}</arg>
<arg>superuser1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250702 18:44:00.284" endtime="20250702 18:44:00.284"/>
</kw>
<kw name="Execute" library="os">
<var>${acl_check}</var>
<arg>echo '${result}' | jq -r '.[] | select(.type=="GROUP" and .name=="superuser1" and .aclScope=="ACCESS" and (.aclList | contains(["ALL"]))) | .name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:44:00.288" level="INFO">Running command 'echo '[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ],
  "aclSet" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ],
  "aclSet" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ],
  "aclSet" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
} ]' | jq -r '.[] | select(.type=="GROUP" and .name=="superuser1" and .aclScope=="ACCESS" and (.aclList | contains(["ALL"]))) | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:44:00.293" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:44:00.293" level="INFO">${output} = superuser1</msg>
<status status="PASS" starttime="20250702 18:44:00.285" endtime="20250702 18:44:00.293"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:44:00.294" level="INFO">superuser1</msg>
<status status="PASS" starttime="20250702 18:44:00.294" endtime="20250702 18:44:00.294"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:44:00.295" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:44:00.294" endtime="20250702 18:44:00.295"/>
</kw>
<status status="PASS" starttime="20250702 18:44:00.285" endtime="20250702 18:44:00.295"/>
</kw>
<msg timestamp="20250702 18:44:00.295" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:44:00.285" endtime="20250702 18:44:00.295"/>
</kw>
<msg timestamp="20250702 18:44:00.295" level="INFO">${acl_check} = superuser1</msg>
<status status="PASS" starttime="20250702 18:44:00.285" endtime="20250702 18:44:00.295"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acl_check}</arg>
<arg>superuser1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250702 18:44:00.295" endtime="20250702 18:44:00.296"/>
</kw>
<status status="PASS" starttime="20250702 18:43:33.759" endtime="20250702 18:44:00.296"/>
</kw>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20250702 18:43:33.688" endtime="20250702 18:44:00.296"/>
</test>
<test id="s1-s2-s5-t6" name="Test native authorizer" line="43">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get Security Enabled From Config" library="commonlib">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' != ''</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20250702 18:44:00.298" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:44:00.298" endtime="20250702 18:44:00.298"/>
</kw>
<kw name="Execute" library="os">
<var>${value}</var>
<arg>ozone getconf confKey ozone.security.enabled</arg>
<status status="NOT RUN" starttime="20250702 18:44:00.298" endtime="20250702 18:44:00.298"/>
</kw>
<if>
<branch type="IF" condition="'${value}' != 'true' and '${value}' != 'false'">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>false</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20250702 18:44:00.298" endtime="20250702 18:44:00.298"/>
</kw>
<status status="NOT RUN" starttime="20250702 18:44:00.298" endtime="20250702 18:44:00.298"/>
</branch>
<status status="NOT RUN" starttime="20250702 18:44:00.298" endtime="20250702 18:44:00.299"/>
</if>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${SECURITY_ENABLED}</arg>
<arg>${value}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20250702 18:44:00.299" endtime="20250702 18:44:00.299"/>
</kw>
<status status="PASS" starttime="20250702 18:44:00.297" endtime="20250702 18:44:00.299"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250702 18:44:00.299" endtime="20250702 18:44:00.299"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:44:00.302" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:44:00.306" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:44:00.306" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250702 18:44:00.300" endtime="20250702 18:44:00.306"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:44:00.307" level="INFO">scm</msg>
<status status="PASS" starttime="20250702 18:44:00.306" endtime="20250702 18:44:00.307"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:44:00.307" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:44:00.307" endtime="20250702 18:44:00.307"/>
</kw>
<status status="PASS" starttime="20250702 18:44:00.300" endtime="20250702 18:44:00.307"/>
</kw>
<msg timestamp="20250702 18:44:00.308" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:44:00.300" endtime="20250702 18:44:00.308"/>
</kw>
<msg timestamp="20250702 18:44:00.308" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250702 18:44:00.299" endtime="20250702 18:44:00.308"/>
</kw>
<msg timestamp="20250702 18:44:00.308" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250702 18:44:00.299" endtime="20250702 18:44:00.308"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250702 18:44:00.308" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250702 18:44:00.308" endtime="20250702 18:44:00.308"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:44:00.312" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:44:00.348" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:44:00.348" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:44:00.310" endtime="20250702 18:44:00.348"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:44:00.349" level="INFO"/>
<status status="PASS" starttime="20250702 18:44:00.348" endtime="20250702 18:44:00.349"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:44:00.349" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:44:00.349" endtime="20250702 18:44:00.349"/>
</kw>
<status status="PASS" starttime="20250702 18:44:00.309" endtime="20250702 18:44:00.349"/>
</kw>
<msg timestamp="20250702 18:44:00.349" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:44:00.309" endtime="20250702 18:44:00.349"/>
</kw>
<status status="PASS" starttime="20250702 18:44:00.309" endtime="20250702 18:44:00.349"/>
</kw>
<status status="PASS" starttime="20250702 18:44:00.308" endtime="20250702 18:44:00.349"/>
</kw>
<status status="PASS" starttime="20250702 18:44:00.297" endtime="20250702 18:44:00.350"/>
</kw>
<status status="PASS" starttime="20250702 18:44:00.297" endtime="20250702 18:44:00.350"/>
</kw>
<kw name="Test native authorizer" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-acls</arg>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20250702 18:44:00.350" endtime="20250702 18:44:00.350"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume removeacl ${protocol}${server}/${volume} -a group:root:a</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:44:00.354" level="INFO">Running command 'ozone sh volume removeacl o3://om:9862/40406-acls -a group:root:a 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:44:03.549" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:44:03.549" level="INFO">${output} = ACL group:root:a[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20250702 18:44:00.351" endtime="20250702 18:44:03.549"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:44:03.550" level="INFO">ACL group:root:a[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20250702 18:44:03.550" endtime="20250702 18:44:03.550"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:44:03.551" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:44:03.550" endtime="20250702 18:44:03.551"/>
</kw>
<status status="PASS" starttime="20250702 18:44:00.351" endtime="20250702 18:44:03.551"/>
</kw>
<msg timestamp="20250702 18:44:03.551" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:44:00.351" endtime="20250702 18:44:03.551"/>
</kw>
<status status="PASS" starttime="20250702 18:44:00.351" endtime="20250702 18:44:03.551"/>
</kw>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:44:03.555" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:44:03.559" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:44:03.559" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:44:03.552" endtime="20250702 18:44:03.559"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:44:03.560" level="INFO"/>
<status status="PASS" starttime="20250702 18:44:03.559" endtime="20250702 18:44:03.560"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:44:03.560" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:44:03.560" endtime="20250702 18:44:03.560"/>
</kw>
<status status="PASS" starttime="20250702 18:44:03.552" endtime="20250702 18:44:03.560"/>
</kw>
<msg timestamp="20250702 18:44:03.561" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:44:03.551" endtime="20250702 18:44:03.561"/>
</kw>
<status status="PASS" starttime="20250702 18:44:03.551" endtime="20250702 18:44:03.561"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Get Security Enabled From Config" library="commonlib">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' != ''</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20250702 18:44:03.562" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:44:03.562" endtime="20250702 18:44:03.562"/>
</kw>
<kw name="Execute" library="os">
<var>${value}</var>
<arg>ozone getconf confKey ozone.security.enabled</arg>
<status status="NOT RUN" starttime="20250702 18:44:03.562" endtime="20250702 18:44:03.562"/>
</kw>
<if>
<branch type="IF" condition="'${value}' != 'true' and '${value}' != 'false'">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>false</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20250702 18:44:03.562" endtime="20250702 18:44:03.562"/>
</kw>
<status status="NOT RUN" starttime="20250702 18:44:03.562" endtime="20250702 18:44:03.562"/>
</branch>
<status status="NOT RUN" starttime="20250702 18:44:03.562" endtime="20250702 18:44:03.562"/>
</if>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${SECURITY_ENABLED}</arg>
<arg>${value}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20250702 18:44:03.562" endtime="20250702 18:44:03.562"/>
</kw>
<status status="PASS" starttime="20250702 18:44:03.561" endtime="20250702 18:44:03.562"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250702 18:44:03.563" endtime="20250702 18:44:03.563"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:44:03.566" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:44:03.569" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:44:03.569" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250702 18:44:03.564" endtime="20250702 18:44:03.570"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:44:03.570" level="INFO">scm</msg>
<status status="PASS" starttime="20250702 18:44:03.570" endtime="20250702 18:44:03.570"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:44:03.571" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:44:03.570" endtime="20250702 18:44:03.571"/>
</kw>
<status status="PASS" starttime="20250702 18:44:03.563" endtime="20250702 18:44:03.571"/>
</kw>
<msg timestamp="20250702 18:44:03.571" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:44:03.563" endtime="20250702 18:44:03.571"/>
</kw>
<msg timestamp="20250702 18:44:03.571" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250702 18:44:03.563" endtime="20250702 18:44:03.571"/>
</kw>
<msg timestamp="20250702 18:44:03.571" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250702 18:44:03.563" endtime="20250702 18:44:03.571"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250702 18:44:03.572" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250702 18:44:03.571" endtime="20250702 18:44:03.572"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:44:03.575" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser2.keytab testuser2/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:44:03.612" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:44:03.612" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:44:03.573" endtime="20250702 18:44:03.612"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:44:03.613" level="INFO"/>
<status status="PASS" starttime="20250702 18:44:03.612" endtime="20250702 18:44:03.613"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:44:03.613" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:44:03.613" endtime="20250702 18:44:03.613"/>
</kw>
<status status="PASS" starttime="20250702 18:44:03.573" endtime="20250702 18:44:03.614"/>
</kw>
<msg timestamp="20250702 18:44:03.614" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:44:03.573" endtime="20250702 18:44:03.614"/>
</kw>
<status status="PASS" starttime="20250702 18:44:03.572" endtime="20250702 18:44:03.614"/>
</kw>
<status status="PASS" starttime="20250702 18:44:03.572" endtime="20250702 18:44:03.614"/>
</kw>
<status status="PASS" starttime="20250702 18:44:03.561" endtime="20250702 18:44:03.614"/>
</kw>
<status status="PASS" starttime="20250702 18:44:03.561" endtime="20250702 18:44:03.614"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:44:03.617" level="INFO">Running command 'ozone sh bucket list o3://om:9862/40406-acls 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:44:06.691" level="INFO">${rc} = 255</msg>
<msg timestamp="20250702 18:44:06.691" level="INFO">${output} = PERMISSION_DENIED User testuser2 doesn't have READ permission to access volume Volume:40406-acls </msg>
<status status="PASS" starttime="20250702 18:44:03.615" endtime="20250702 18:44:06.691"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:44:06.692" level="INFO">PERMISSION_DENIED User testuser2 doesn't have READ permission to access volume Volume:40406-acls </msg>
<status status="PASS" starttime="20250702 18:44:06.691" endtime="20250702 18:44:06.692"/>
</kw>
<msg timestamp="20250702 18:44:06.692" level="INFO">${result} = PERMISSION_DENIED User testuser2 doesn't have READ permission to access volume Volume:40406-acls </msg>
<status status="PASS" starttime="20250702 18:44:03.614" endtime="20250702 18:44:06.692"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250702 18:44:06.692" endtime="20250702 18:44:06.692"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:44:06.696" level="INFO">Running command 'ozone sh key list o3://om:9862/40406-acls/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:44:09.791" level="INFO">${rc} = 255</msg>
<msg timestamp="20250702 18:44:09.791" level="INFO">${output} = PERMISSION_DENIED User testuser2 doesn't have READ permission to access volume Volume:40406-acls </msg>
<status status="PASS" starttime="20250702 18:44:06.693" endtime="20250702 18:44:09.791"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:44:09.792" level="INFO">PERMISSION_DENIED User testuser2 doesn't have READ permission to access volume Volume:40406-acls </msg>
<status status="PASS" starttime="20250702 18:44:09.792" endtime="20250702 18:44:09.792"/>
</kw>
<msg timestamp="20250702 18:44:09.793" level="INFO">${result} = PERMISSION_DENIED User testuser2 doesn't have READ permission to access volume Volume:40406-acls </msg>
<status status="PASS" starttime="20250702 18:44:06.693" endtime="20250702 18:44:09.793"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250702 18:44:09.793" endtime="20250702 18:44:09.793"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume addacl ${protocol}${server}/${volume} -a user:testuser2:xy</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:44:09.796" level="INFO">Running command 'ozone sh volume addacl o3://om:9862/40406-acls -a user:testuser2:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:44:12.759" level="INFO">${rc} = 255</msg>
<msg timestamp="20250702 18:44:12.759" level="INFO">${output} = PERMISSION_DENIED User testuser2 doesn't have WRITE_ACL permission to access volume Volume:40406-acls </msg>
<status status="PASS" starttime="20250702 18:44:09.794" endtime="20250702 18:44:12.759"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:44:12.760" level="INFO">PERMISSION_DENIED User testuser2 doesn't have WRITE_ACL permission to access volume Volume:40406-acls </msg>
<status status="PASS" starttime="20250702 18:44:12.759" endtime="20250702 18:44:12.760"/>
</kw>
<msg timestamp="20250702 18:44:12.760" level="INFO">${result} = PERMISSION_DENIED User testuser2 doesn't have WRITE_ACL permission to access volume Volume:40406-acls </msg>
<status status="PASS" starttime="20250702 18:44:09.793" endtime="20250702 18:44:12.760"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED User testuser2 doesn't have WRITE_ACL permission to access volume</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250702 18:44:12.760" endtime="20250702 18:44:12.760"/>
</kw>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:44:12.764" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:44:12.768" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:44:12.768" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:44:12.761" endtime="20250702 18:44:12.768"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:44:12.769" level="INFO"/>
<status status="PASS" starttime="20250702 18:44:12.768" endtime="20250702 18:44:12.769"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:44:12.769" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:44:12.769" endtime="20250702 18:44:12.769"/>
</kw>
<status status="PASS" starttime="20250702 18:44:12.761" endtime="20250702 18:44:12.770"/>
</kw>
<msg timestamp="20250702 18:44:12.770" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:44:12.761" endtime="20250702 18:44:12.770"/>
</kw>
<status status="PASS" starttime="20250702 18:44:12.760" endtime="20250702 18:44:12.770"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get Security Enabled From Config" library="commonlib">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' != ''</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20250702 18:44:12.771" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:44:12.771" endtime="20250702 18:44:12.771"/>
</kw>
<kw name="Execute" library="os">
<var>${value}</var>
<arg>ozone getconf confKey ozone.security.enabled</arg>
<status status="NOT RUN" starttime="20250702 18:44:12.771" endtime="20250702 18:44:12.771"/>
</kw>
<if>
<branch type="IF" condition="'${value}' != 'true' and '${value}' != 'false'">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>false</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20250702 18:44:12.771" endtime="20250702 18:44:12.771"/>
</kw>
<status status="NOT RUN" starttime="20250702 18:44:12.771" endtime="20250702 18:44:12.771"/>
</branch>
<status status="NOT RUN" starttime="20250702 18:44:12.771" endtime="20250702 18:44:12.771"/>
</if>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${SECURITY_ENABLED}</arg>
<arg>${value}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20250702 18:44:12.771" endtime="20250702 18:44:12.771"/>
</kw>
<status status="PASS" starttime="20250702 18:44:12.770" endtime="20250702 18:44:12.771"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250702 18:44:12.772" endtime="20250702 18:44:12.772"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:44:12.775" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:44:12.778" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:44:12.778" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250702 18:44:12.773" endtime="20250702 18:44:12.778"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:44:12.779" level="INFO">scm</msg>
<status status="PASS" starttime="20250702 18:44:12.779" endtime="20250702 18:44:12.779"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:44:12.780" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:44:12.779" endtime="20250702 18:44:12.780"/>
</kw>
<status status="PASS" starttime="20250702 18:44:12.772" endtime="20250702 18:44:12.780"/>
</kw>
<msg timestamp="20250702 18:44:12.780" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:44:12.772" endtime="20250702 18:44:12.780"/>
</kw>
<msg timestamp="20250702 18:44:12.780" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250702 18:44:12.772" endtime="20250702 18:44:12.780"/>
</kw>
<msg timestamp="20250702 18:44:12.780" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250702 18:44:12.772" endtime="20250702 18:44:12.781"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250702 18:44:12.781" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250702 18:44:12.781" endtime="20250702 18:44:12.781"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:44:12.784" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:44:12.813" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:44:12.813" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:44:12.782" endtime="20250702 18:44:12.813"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:44:12.814" level="INFO"/>
<status status="PASS" starttime="20250702 18:44:12.814" endtime="20250702 18:44:12.814"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:44:12.815" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:44:12.814" endtime="20250702 18:44:12.815"/>
</kw>
<status status="PASS" starttime="20250702 18:44:12.782" endtime="20250702 18:44:12.815"/>
</kw>
<msg timestamp="20250702 18:44:12.815" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:44:12.782" endtime="20250702 18:44:12.815"/>
</kw>
<status status="PASS" starttime="20250702 18:44:12.781" endtime="20250702 18:44:12.815"/>
</kw>
<status status="PASS" starttime="20250702 18:44:12.781" endtime="20250702 18:44:12.815"/>
</kw>
<status status="PASS" starttime="20250702 18:44:12.770" endtime="20250702 18:44:12.815"/>
</kw>
<status status="PASS" starttime="20250702 18:44:12.770" endtime="20250702 18:44:12.815"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume addacl ${protocol}${server}/${volume} -a user:testuser2:xyrw</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:44:12.818" level="INFO">Running command 'ozone sh volume addacl o3://om:9862/40406-acls -a user:testuser2:xyrw 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:44:15.844" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:44:15.844" level="INFO">${output} = ACL user:testuser2:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20250702 18:44:12.816" endtime="20250702 18:44:15.844"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:44:15.845" level="INFO">ACL user:testuser2:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20250702 18:44:15.845" endtime="20250702 18:44:15.845"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:44:15.846" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:44:15.846" endtime="20250702 18:44:15.846"/>
</kw>
<status status="PASS" starttime="20250702 18:44:12.816" endtime="20250702 18:44:15.846"/>
</kw>
<msg timestamp="20250702 18:44:15.846" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:44:12.816" endtime="20250702 18:44:15.846"/>
</kw>
<status status="PASS" starttime="20250702 18:44:12.815" endtime="20250702 18:44:15.846"/>
</kw>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:44:15.850" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:44:15.854" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:44:15.854" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:44:15.847" endtime="20250702 18:44:15.854"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:44:15.855" level="INFO"/>
<status status="PASS" starttime="20250702 18:44:15.855" endtime="20250702 18:44:15.855"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:44:15.855" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:44:15.855" endtime="20250702 18:44:15.856"/>
</kw>
<status status="PASS" starttime="20250702 18:44:15.847" endtime="20250702 18:44:15.856"/>
</kw>
<msg timestamp="20250702 18:44:15.856" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:44:15.847" endtime="20250702 18:44:15.856"/>
</kw>
<status status="PASS" starttime="20250702 18:44:15.846" endtime="20250702 18:44:15.856"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Get Security Enabled From Config" library="commonlib">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' != ''</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20250702 18:44:15.857" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:44:15.857" endtime="20250702 18:44:15.857"/>
</kw>
<kw name="Execute" library="os">
<var>${value}</var>
<arg>ozone getconf confKey ozone.security.enabled</arg>
<status status="NOT RUN" starttime="20250702 18:44:15.857" endtime="20250702 18:44:15.857"/>
</kw>
<if>
<branch type="IF" condition="'${value}' != 'true' and '${value}' != 'false'">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>false</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20250702 18:44:15.857" endtime="20250702 18:44:15.857"/>
</kw>
<status status="NOT RUN" starttime="20250702 18:44:15.857" endtime="20250702 18:44:15.858"/>
</branch>
<status status="NOT RUN" starttime="20250702 18:44:15.857" endtime="20250702 18:44:15.858"/>
</if>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${SECURITY_ENABLED}</arg>
<arg>${value}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20250702 18:44:15.858" endtime="20250702 18:44:15.858"/>
</kw>
<status status="PASS" starttime="20250702 18:44:15.856" endtime="20250702 18:44:15.858"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250702 18:44:15.858" endtime="20250702 18:44:15.858"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:44:15.862" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:44:15.865" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:44:15.865" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250702 18:44:15.859" endtime="20250702 18:44:15.865"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:44:15.866" level="INFO">scm</msg>
<status status="PASS" starttime="20250702 18:44:15.866" endtime="20250702 18:44:15.866"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:44:15.867" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:44:15.866" endtime="20250702 18:44:15.867"/>
</kw>
<status status="PASS" starttime="20250702 18:44:15.859" endtime="20250702 18:44:15.867"/>
</kw>
<msg timestamp="20250702 18:44:15.867" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:44:15.859" endtime="20250702 18:44:15.867"/>
</kw>
<msg timestamp="20250702 18:44:15.867" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250702 18:44:15.859" endtime="20250702 18:44:15.867"/>
</kw>
<msg timestamp="20250702 18:44:15.867" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250702 18:44:15.858" endtime="20250702 18:44:15.867"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250702 18:44:15.868" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250702 18:44:15.867" endtime="20250702 18:44:15.868"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:44:15.871" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser2.keytab testuser2/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:44:15.937" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:44:15.937" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:44:15.869" endtime="20250702 18:44:15.937"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:44:15.938" level="INFO"/>
<status status="PASS" starttime="20250702 18:44:15.937" endtime="20250702 18:44:15.938"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:44:15.938" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:44:15.938" endtime="20250702 18:44:15.938"/>
</kw>
<status status="PASS" starttime="20250702 18:44:15.869" endtime="20250702 18:44:15.938"/>
</kw>
<msg timestamp="20250702 18:44:15.938" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:44:15.869" endtime="20250702 18:44:15.939"/>
</kw>
<status status="PASS" starttime="20250702 18:44:15.868" endtime="20250702 18:44:15.939"/>
</kw>
<status status="PASS" starttime="20250702 18:44:15.868" endtime="20250702 18:44:15.939"/>
</kw>
<status status="PASS" starttime="20250702 18:44:15.856" endtime="20250702 18:44:15.939"/>
</kw>
<status status="PASS" starttime="20250702 18:44:15.856" endtime="20250702 18:44:15.939"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:44:15.942" level="INFO">Running command 'ozone sh bucket list o3://om:9862/40406-acls 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:44:18.948" level="INFO">${rc} = 255</msg>
<msg timestamp="20250702 18:44:18.949" level="INFO">${output} = PERMISSION_DENIED User testuser2 doesn't have LIST permission to access volume Volume:40406-acls </msg>
<status status="PASS" starttime="20250702 18:44:15.939" endtime="20250702 18:44:18.949"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:44:18.950" level="INFO">PERMISSION_DENIED User testuser2 doesn't have LIST permission to access volume Volume:40406-acls </msg>
<status status="PASS" starttime="20250702 18:44:18.949" endtime="20250702 18:44:18.950"/>
</kw>
<msg timestamp="20250702 18:44:18.950" level="INFO">${result} = PERMISSION_DENIED User testuser2 doesn't have LIST permission to access volume Volume:40406-acls </msg>
<status status="PASS" starttime="20250702 18:44:15.939" endtime="20250702 18:44:18.950"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED User testuser2 doesn't have LIST permission to access volume</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250702 18:44:18.950" endtime="20250702 18:44:18.950"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume addacl ${protocol}${server}/${volume} -a user:testuser2:l</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:44:18.954" level="INFO">Running command 'ozone sh volume addacl o3://om:9862/40406-acls -a user:testuser2:l 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:44:21.982" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:44:21.982" level="INFO">${output} = ACL user:testuser2:l[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20250702 18:44:18.951" endtime="20250702 18:44:21.982"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:44:21.983" level="INFO">ACL user:testuser2:l[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20250702 18:44:21.982" endtime="20250702 18:44:21.983"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:44:21.983" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:44:21.983" endtime="20250702 18:44:21.984"/>
</kw>
<status status="PASS" starttime="20250702 18:44:18.951" endtime="20250702 18:44:21.984"/>
</kw>
<msg timestamp="20250702 18:44:21.984" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:44:18.951" endtime="20250702 18:44:21.984"/>
</kw>
<status status="PASS" starttime="20250702 18:44:18.950" endtime="20250702 18:44:21.984"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket list ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:44:21.987" level="INFO">Running command 'ozone sh bucket list o3://om:9862/40406-acls 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:44:25.236" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:44:25.236" level="INFO">${output} = [ {
  "metadata" : { },
  "volumeName" : "40406-acls",
  "name" : "bb1",
  "storageType" : "DISK",
  "versioning" : false,
  "listCacheSize" : 1000,
  "usedBytes" : 47676,
  "usedNamespace" : 1,
  "cr...</msg>
<status status="PASS" starttime="20250702 18:44:21.985" endtime="20250702 18:44:25.236"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:44:25.237" level="INFO">[ {
  "metadata" : { },
  "volumeName" : "40406-acls",
  "name" : "bb1",
  "storageType" : "DISK",
  "versioning" : false,
  "listCacheSize" : 1000,
  "usedBytes" : 47676,
  "usedNamespace" : 1,
  "creationTime" : "2025-07-02T18:43:12.300Z",
  "modificationTime" : "2025-07-02T18:43:30.440Z",
  "sourcePathExist" : true,
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "FILE_SYSTEM_OPTIMIZED",
  "owner" : "testuser",
  "link" : false
} ]</msg>
<status status="PASS" starttime="20250702 18:44:25.236" endtime="20250702 18:44:25.237"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:44:25.237" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:44:25.237" endtime="20250702 18:44:25.237"/>
</kw>
<status status="PASS" starttime="20250702 18:44:21.985" endtime="20250702 18:44:25.238"/>
</kw>
<msg timestamp="20250702 18:44:25.238" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:44:21.984" endtime="20250702 18:44:25.238"/>
</kw>
<status status="PASS" starttime="20250702 18:44:21.984" endtime="20250702 18:44:25.238"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:44:25.241" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/40406-acls 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:44:28.409" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:44:28.409" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ],
  "aclSet" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "...</msg>
<status status="PASS" starttime="20250702 18:44:25.239" endtime="20250702 18:44:28.409"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:44:28.410" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ],
  "aclSet" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ],
  "aclSet" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ],
  "aclSet" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ],
  "aclSet" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser2",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "LIST", "READ_ACL", "WRITE_ACL" ],
  "aclSet" : [ "READ", "WRITE", "LIST", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20250702 18:44:28.410" endtime="20250702 18:44:28.410"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:44:28.411" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:44:28.411" endtime="20250702 18:44:28.411"/>
</kw>
<status status="PASS" starttime="20250702 18:44:25.239" endtime="20250702 18:44:28.411"/>
</kw>
<msg timestamp="20250702 18:44:28.411" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:44:25.238" endtime="20250702 18:44:28.411"/>
</kw>
<status status="PASS" starttime="20250702 18:44:25.238" endtime="20250702 18:44:28.411"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:44:28.414" level="INFO">Running command 'ozone sh key list o3://om:9862/40406-acls/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:44:31.466" level="INFO">${rc} = 255</msg>
<msg timestamp="20250702 18:44:31.466" level="INFO">${output} = PERMISSION_DENIED User testuser2 doesn't have READ permission to access bucket Volume:40406-acls Bucket:bb1 </msg>
<status status="PASS" starttime="20250702 18:44:28.412" endtime="20250702 18:44:31.466"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:44:31.467" level="INFO">PERMISSION_DENIED User testuser2 doesn't have READ permission to access bucket Volume:40406-acls Bucket:bb1 </msg>
<status status="PASS" starttime="20250702 18:44:31.466" endtime="20250702 18:44:31.467"/>
</kw>
<msg timestamp="20250702 18:44:31.467" level="INFO">${result} = PERMISSION_DENIED User testuser2 doesn't have READ permission to access bucket Volume:40406-acls Bucket:bb1 </msg>
<status status="PASS" starttime="20250702 18:44:28.411" endtime="20250702 18:44:31.467"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250702 18:44:31.467" endtime="20250702 18:44:31.468"/>
</kw>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:44:31.471" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:44:31.475" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:44:31.475" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:44:31.469" endtime="20250702 18:44:31.475"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:44:31.476" level="INFO"/>
<status status="PASS" starttime="20250702 18:44:31.475" endtime="20250702 18:44:31.476"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:44:31.476" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:44:31.476" endtime="20250702 18:44:31.476"/>
</kw>
<status status="PASS" starttime="20250702 18:44:31.468" endtime="20250702 18:44:31.477"/>
</kw>
<msg timestamp="20250702 18:44:31.477" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:44:31.468" endtime="20250702 18:44:31.477"/>
</kw>
<status status="PASS" starttime="20250702 18:44:31.468" endtime="20250702 18:44:31.477"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get Security Enabled From Config" library="commonlib">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' != ''</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20250702 18:44:31.478" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:44:31.478" endtime="20250702 18:44:31.478"/>
</kw>
<kw name="Execute" library="os">
<var>${value}</var>
<arg>ozone getconf confKey ozone.security.enabled</arg>
<status status="NOT RUN" starttime="20250702 18:44:31.478" endtime="20250702 18:44:31.478"/>
</kw>
<if>
<branch type="IF" condition="'${value}' != 'true' and '${value}' != 'false'">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>false</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20250702 18:44:31.478" endtime="20250702 18:44:31.478"/>
</kw>
<status status="NOT RUN" starttime="20250702 18:44:31.478" endtime="20250702 18:44:31.478"/>
</branch>
<status status="NOT RUN" starttime="20250702 18:44:31.478" endtime="20250702 18:44:31.478"/>
</if>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${SECURITY_ENABLED}</arg>
<arg>${value}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20250702 18:44:31.478" endtime="20250702 18:44:31.478"/>
</kw>
<status status="PASS" starttime="20250702 18:44:31.477" endtime="20250702 18:44:31.478"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250702 18:44:31.479" endtime="20250702 18:44:31.479"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:44:31.482" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:44:31.485" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:44:31.485" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250702 18:44:31.480" endtime="20250702 18:44:31.485"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:44:31.486" level="INFO">scm</msg>
<status status="PASS" starttime="20250702 18:44:31.485" endtime="20250702 18:44:31.486"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:44:31.486" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:44:31.486" endtime="20250702 18:44:31.486"/>
</kw>
<status status="PASS" starttime="20250702 18:44:31.479" endtime="20250702 18:44:31.486"/>
</kw>
<msg timestamp="20250702 18:44:31.486" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:44:31.479" endtime="20250702 18:44:31.487"/>
</kw>
<msg timestamp="20250702 18:44:31.487" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250702 18:44:31.479" endtime="20250702 18:44:31.487"/>
</kw>
<msg timestamp="20250702 18:44:31.487" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250702 18:44:31.479" endtime="20250702 18:44:31.487"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250702 18:44:31.487" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250702 18:44:31.487" endtime="20250702 18:44:31.487"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:44:31.490" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:44:31.511" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:44:31.511" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:44:31.488" endtime="20250702 18:44:31.511"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:44:31.512" level="INFO"/>
<status status="PASS" starttime="20250702 18:44:31.511" endtime="20250702 18:44:31.512"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:44:31.512" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:44:31.512" endtime="20250702 18:44:31.512"/>
</kw>
<status status="PASS" starttime="20250702 18:44:31.488" endtime="20250702 18:44:31.512"/>
</kw>
<msg timestamp="20250702 18:44:31.512" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:44:31.488" endtime="20250702 18:44:31.512"/>
</kw>
<status status="PASS" starttime="20250702 18:44:31.488" endtime="20250702 18:44:31.513"/>
</kw>
<status status="PASS" starttime="20250702 18:44:31.487" endtime="20250702 18:44:31.513"/>
</kw>
<status status="PASS" starttime="20250702 18:44:31.477" endtime="20250702 18:44:31.513"/>
</kw>
<status status="PASS" starttime="20250702 18:44:31.477" endtime="20250702 18:44:31.513"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl ${protocol}${server}/${volume}/bb1 -a user:testuser2:a</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:44:31.516" level="INFO">Running command 'ozone sh bucket addacl o3://om:9862/40406-acls/bb1 -a user:testuser2:a 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:44:34.503" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:44:34.503" level="INFO">${output} = ACL user:testuser2:a[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20250702 18:44:31.514" endtime="20250702 18:44:34.503"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:44:34.504" level="INFO">ACL user:testuser2:a[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20250702 18:44:34.503" endtime="20250702 18:44:34.504"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:44:34.504" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:44:34.504" endtime="20250702 18:44:34.504"/>
</kw>
<status status="PASS" starttime="20250702 18:44:31.513" endtime="20250702 18:44:34.504"/>
</kw>
<msg timestamp="20250702 18:44:34.504" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:44:31.513" endtime="20250702 18:44:34.504"/>
</kw>
<status status="PASS" starttime="20250702 18:44:31.513" endtime="20250702 18:44:34.505"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:44:34.508" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/40406-acls/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:44:37.678" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:44:37.678" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ],
  "aclSet" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "t...</msg>
<status status="PASS" starttime="20250702 18:44:34.506" endtime="20250702 18:44:37.678"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:44:37.679" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ],
  "aclSet" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ],
  "aclSet" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ],
  "aclSet" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ],
  "aclSet" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser2",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ],
  "aclSet" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20250702 18:44:37.678" endtime="20250702 18:44:37.679"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:44:37.679" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:44:37.679" endtime="20250702 18:44:37.679"/>
</kw>
<status status="PASS" starttime="20250702 18:44:34.505" endtime="20250702 18:44:37.679"/>
</kw>
<msg timestamp="20250702 18:44:37.679" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:44:34.505" endtime="20250702 18:44:37.679"/>
</kw>
<status status="PASS" starttime="20250702 18:44:34.505" endtime="20250702 18:44:37.680"/>
</kw>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:44:37.683" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:44:37.687" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:44:37.687" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:44:37.680" endtime="20250702 18:44:37.687"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:44:37.688" level="INFO"/>
<status status="PASS" starttime="20250702 18:44:37.687" endtime="20250702 18:44:37.688"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:44:37.689" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:44:37.688" endtime="20250702 18:44:37.689"/>
</kw>
<status status="PASS" starttime="20250702 18:44:37.680" endtime="20250702 18:44:37.689"/>
</kw>
<msg timestamp="20250702 18:44:37.689" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:44:37.680" endtime="20250702 18:44:37.689"/>
</kw>
<status status="PASS" starttime="20250702 18:44:37.680" endtime="20250702 18:44:37.689"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Get Security Enabled From Config" library="commonlib">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' != ''</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20250702 18:44:37.690" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:44:37.690" endtime="20250702 18:44:37.690"/>
</kw>
<kw name="Execute" library="os">
<var>${value}</var>
<arg>ozone getconf confKey ozone.security.enabled</arg>
<status status="NOT RUN" starttime="20250702 18:44:37.690" endtime="20250702 18:44:37.690"/>
</kw>
<if>
<branch type="IF" condition="'${value}' != 'true' and '${value}' != 'false'">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>false</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20250702 18:44:37.690" endtime="20250702 18:44:37.690"/>
</kw>
<status status="NOT RUN" starttime="20250702 18:44:37.690" endtime="20250702 18:44:37.690"/>
</branch>
<status status="NOT RUN" starttime="20250702 18:44:37.690" endtime="20250702 18:44:37.690"/>
</if>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${SECURITY_ENABLED}</arg>
<arg>${value}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20250702 18:44:37.690" endtime="20250702 18:44:37.691"/>
</kw>
<status status="PASS" starttime="20250702 18:44:37.690" endtime="20250702 18:44:37.691"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250702 18:44:37.691" endtime="20250702 18:44:37.691"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:44:37.694" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:44:37.697" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:44:37.697" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250702 18:44:37.692" endtime="20250702 18:44:37.697"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:44:37.698" level="INFO">scm</msg>
<status status="PASS" starttime="20250702 18:44:37.697" endtime="20250702 18:44:37.698"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:44:37.698" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:44:37.698" endtime="20250702 18:44:37.698"/>
</kw>
<status status="PASS" starttime="20250702 18:44:37.692" endtime="20250702 18:44:37.698"/>
</kw>
<msg timestamp="20250702 18:44:37.698" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:44:37.691" endtime="20250702 18:44:37.698"/>
</kw>
<msg timestamp="20250702 18:44:37.699" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250702 18:44:37.691" endtime="20250702 18:44:37.699"/>
</kw>
<msg timestamp="20250702 18:44:37.699" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250702 18:44:37.691" endtime="20250702 18:44:37.699"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250702 18:44:37.699" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250702 18:44:37.699" endtime="20250702 18:44:37.699"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:44:37.702" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser2.keytab testuser2/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:44:37.716" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:44:37.716" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:44:37.700" endtime="20250702 18:44:37.716"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:44:37.717" level="INFO"/>
<status status="PASS" starttime="20250702 18:44:37.717" endtime="20250702 18:44:37.717"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:44:37.717" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:44:37.717" endtime="20250702 18:44:37.718"/>
</kw>
<status status="PASS" starttime="20250702 18:44:37.700" endtime="20250702 18:44:37.718"/>
</kw>
<msg timestamp="20250702 18:44:37.718" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:44:37.700" endtime="20250702 18:44:37.718"/>
</kw>
<status status="PASS" starttime="20250702 18:44:37.700" endtime="20250702 18:44:37.718"/>
</kw>
<status status="PASS" starttime="20250702 18:44:37.699" endtime="20250702 18:44:37.718"/>
</kw>
<status status="PASS" starttime="20250702 18:44:37.689" endtime="20250702 18:44:37.718"/>
</kw>
<status status="PASS" starttime="20250702 18:44:37.689" endtime="20250702 18:44:37.718"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:44:37.721" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/40406-acls/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:44:40.966" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:44:40.967" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ],
  "aclSet" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "t...</msg>
<status status="PASS" starttime="20250702 18:44:37.719" endtime="20250702 18:44:40.967"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:44:40.968" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ],
  "aclSet" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ],
  "aclSet" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ],
  "aclSet" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ],
  "aclSet" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser2",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ],
  "aclSet" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20250702 18:44:40.967" endtime="20250702 18:44:40.968"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:44:40.968" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:44:40.968" endtime="20250702 18:44:40.968"/>
</kw>
<status status="PASS" starttime="20250702 18:44:37.719" endtime="20250702 18:44:40.968"/>
</kw>
<msg timestamp="20250702 18:44:40.968" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:44:37.719" endtime="20250702 18:44:40.968"/>
</kw>
<status status="PASS" starttime="20250702 18:44:37.718" endtime="20250702 18:44:40.968"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:44:40.972" level="INFO">Running command 'ozone sh key list o3://om:9862/40406-acls/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:44:44.447" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:44:44.447" level="INFO">${output} = [ {
  "volumeName" : "40406-acls",
  "bucketName" : "bb1",
  "name" : "key2",
  "owner" : "testuser",
  "dataSize" : 15892,
  "creationTime" : "2025-07-02T18:43:36.608Z",
  "modificationTime" : "2025-...</msg>
<status status="PASS" starttime="20250702 18:44:40.969" endtime="20250702 18:44:44.447"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:44:44.448" level="INFO">[ {
  "volumeName" : "40406-acls",
  "bucketName" : "bb1",
  "name" : "key2",
  "owner" : "testuser",
  "dataSize" : 15892,
  "creationTime" : "2025-07-02T18:43:36.608Z",
  "modificationTime" : "2025-07-02T18:43:56.975Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "minimumNodes" : 1,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "tags" : { },
  "file" : true
} ]</msg>
<status status="PASS" starttime="20250702 18:44:44.448" endtime="20250702 18:44:44.449"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:44:44.449" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:44:44.449" endtime="20250702 18:44:44.449"/>
</kw>
<status status="PASS" starttime="20250702 18:44:40.969" endtime="20250702 18:44:44.449"/>
</kw>
<msg timestamp="20250702 18:44:44.449" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:44:40.969" endtime="20250702 18:44:44.449"/>
</kw>
<status status="PASS" starttime="20250702 18:44:40.969" endtime="20250702 18:44:44.450"/>
</kw>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:44:44.453" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:44:44.457" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:44:44.458" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:44:44.451" endtime="20250702 18:44:44.458"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:44:44.458" level="INFO"/>
<status status="PASS" starttime="20250702 18:44:44.458" endtime="20250702 18:44:44.458"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:44:44.459" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:44:44.459" endtime="20250702 18:44:44.459"/>
</kw>
<status status="PASS" starttime="20250702 18:44:44.450" endtime="20250702 18:44:44.459"/>
</kw>
<msg timestamp="20250702 18:44:44.459" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:44:44.450" endtime="20250702 18:44:44.459"/>
</kw>
<status status="PASS" starttime="20250702 18:44:44.450" endtime="20250702 18:44:44.459"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get Security Enabled From Config" library="commonlib">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' != ''</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20250702 18:44:44.460" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:44:44.460" endtime="20250702 18:44:44.460"/>
</kw>
<kw name="Execute" library="os">
<var>${value}</var>
<arg>ozone getconf confKey ozone.security.enabled</arg>
<status status="NOT RUN" starttime="20250702 18:44:44.461" endtime="20250702 18:44:44.461"/>
</kw>
<if>
<branch type="IF" condition="'${value}' != 'true' and '${value}' != 'false'">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>false</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20250702 18:44:44.461" endtime="20250702 18:44:44.461"/>
</kw>
<status status="NOT RUN" starttime="20250702 18:44:44.461" endtime="20250702 18:44:44.461"/>
</branch>
<status status="NOT RUN" starttime="20250702 18:44:44.461" endtime="20250702 18:44:44.461"/>
</if>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${SECURITY_ENABLED}</arg>
<arg>${value}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20250702 18:44:44.461" endtime="20250702 18:44:44.461"/>
</kw>
<status status="PASS" starttime="20250702 18:44:44.460" endtime="20250702 18:44:44.461"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250702 18:44:44.461" endtime="20250702 18:44:44.461"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:44:44.465" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:44:44.469" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:44:44.469" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250702 18:44:44.463" endtime="20250702 18:44:44.469"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:44:44.470" level="INFO">scm</msg>
<status status="PASS" starttime="20250702 18:44:44.469" endtime="20250702 18:44:44.470"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:44:44.470" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:44:44.470" endtime="20250702 18:44:44.470"/>
</kw>
<status status="PASS" starttime="20250702 18:44:44.462" endtime="20250702 18:44:44.470"/>
</kw>
<msg timestamp="20250702 18:44:44.470" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:44:44.462" endtime="20250702 18:44:44.470"/>
</kw>
<msg timestamp="20250702 18:44:44.470" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250702 18:44:44.462" endtime="20250702 18:44:44.471"/>
</kw>
<msg timestamp="20250702 18:44:44.471" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250702 18:44:44.462" endtime="20250702 18:44:44.471"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250702 18:44:44.471" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250702 18:44:44.471" endtime="20250702 18:44:44.471"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:44:44.474" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:44:44.542" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:44:44.542" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:44:44.472" endtime="20250702 18:44:44.542"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:44:44.543" level="INFO"/>
<status status="PASS" starttime="20250702 18:44:44.542" endtime="20250702 18:44:44.543"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:44:44.543" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:44:44.543" endtime="20250702 18:44:44.544"/>
</kw>
<status status="PASS" starttime="20250702 18:44:44.472" endtime="20250702 18:44:44.544"/>
</kw>
<msg timestamp="20250702 18:44:44.544" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:44:44.472" endtime="20250702 18:44:44.544"/>
</kw>
<status status="PASS" starttime="20250702 18:44:44.471" endtime="20250702 18:44:44.544"/>
</kw>
<status status="PASS" starttime="20250702 18:44:44.471" endtime="20250702 18:44:44.544"/>
</kw>
<status status="PASS" starttime="20250702 18:44:44.460" endtime="20250702 18:44:44.544"/>
</kw>
<status status="PASS" starttime="20250702 18:44:44.459" endtime="20250702 18:44:44.544"/>
</kw>
<status status="PASS" starttime="20250702 18:44:00.350" endtime="20250702 18:44:44.544"/>
</kw>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20250702 18:44:00.296" endtime="20250702 18:44:44.544"/>
</test>
<test id="s1-s2-s5-t7" name="RpcClient prefix acls" line="46">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get Security Enabled From Config" library="commonlib">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' != ''</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20250702 18:44:44.546" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:44:44.546" endtime="20250702 18:44:44.546"/>
</kw>
<kw name="Execute" library="os">
<var>${value}</var>
<arg>ozone getconf confKey ozone.security.enabled</arg>
<status status="NOT RUN" starttime="20250702 18:44:44.546" endtime="20250702 18:44:44.546"/>
</kw>
<if>
<branch type="IF" condition="'${value}' != 'true' and '${value}' != 'false'">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>false</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20250702 18:44:44.547" endtime="20250702 18:44:44.547"/>
</kw>
<status status="NOT RUN" starttime="20250702 18:44:44.547" endtime="20250702 18:44:44.547"/>
</branch>
<status status="NOT RUN" starttime="20250702 18:44:44.547" endtime="20250702 18:44:44.547"/>
</if>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${SECURITY_ENABLED}</arg>
<arg>${value}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20250702 18:44:44.547" endtime="20250702 18:44:44.547"/>
</kw>
<status status="PASS" starttime="20250702 18:44:44.546" endtime="20250702 18:44:44.547"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250702 18:44:44.547" endtime="20250702 18:44:44.547"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:44:44.550" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:44:44.554" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:44:44.554" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250702 18:44:44.548" endtime="20250702 18:44:44.554"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:44:44.555" level="INFO">scm</msg>
<status status="PASS" starttime="20250702 18:44:44.554" endtime="20250702 18:44:44.555"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:44:44.555" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:44:44.555" endtime="20250702 18:44:44.555"/>
</kw>
<status status="PASS" starttime="20250702 18:44:44.548" endtime="20250702 18:44:44.555"/>
</kw>
<msg timestamp="20250702 18:44:44.556" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:44:44.548" endtime="20250702 18:44:44.556"/>
</kw>
<msg timestamp="20250702 18:44:44.556" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250702 18:44:44.547" endtime="20250702 18:44:44.556"/>
</kw>
<msg timestamp="20250702 18:44:44.556" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250702 18:44:44.547" endtime="20250702 18:44:44.556"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250702 18:44:44.556" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250702 18:44:44.556" endtime="20250702 18:44:44.556"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:44:44.560" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:44:44.585" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:44:44.585" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:44:44.558" endtime="20250702 18:44:44.585"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:44:44.586" level="INFO"/>
<status status="PASS" starttime="20250702 18:44:44.585" endtime="20250702 18:44:44.586"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:44:44.586" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:44:44.586" endtime="20250702 18:44:44.586"/>
</kw>
<status status="PASS" starttime="20250702 18:44:44.557" endtime="20250702 18:44:44.586"/>
</kw>
<msg timestamp="20250702 18:44:44.586" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:44:44.557" endtime="20250702 18:44:44.586"/>
</kw>
<status status="PASS" starttime="20250702 18:44:44.557" endtime="20250702 18:44:44.586"/>
</kw>
<status status="PASS" starttime="20250702 18:44:44.556" endtime="20250702 18:44:44.587"/>
</kw>
<status status="PASS" starttime="20250702 18:44:44.546" endtime="20250702 18:44:44.587"/>
</kw>
<status status="PASS" starttime="20250702 18:44:44.545" endtime="20250702 18:44:44.587"/>
</kw>
<kw name="Test prefix Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-acls</arg>
<kw name="Execute" library="os">
<arg>ozone sh prefix addacl ${protocol}${server}/${volume}/bb1/prefix1/ -a user:superuser1:rwxy[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:44:44.590" level="INFO">Running command 'ozone sh prefix addacl o3://om:9862/40406-acls/bb1/prefix1/ -a user:superuser1:rwxy[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:44:47.700" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:44:47.700" level="INFO">${output} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20250702 18:44:44.588" endtime="20250702 18:44:47.700"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:44:47.701" level="INFO">ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20250702 18:44:47.700" endtime="20250702 18:44:47.701"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:44:47.701" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:44:47.701" endtime="20250702 18:44:47.701"/>
</kw>
<status status="PASS" starttime="20250702 18:44:44.588" endtime="20250702 18:44:47.701"/>
</kw>
<msg timestamp="20250702 18:44:47.701" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:44:44.588" endtime="20250702 18:44:47.701"/>
</kw>
<status status="PASS" starttime="20250702 18:44:44.587" endtime="20250702 18:44:47.702"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix getacl ${protocol}${server}/${volume}/bb1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:44:47.705" level="INFO">Running command 'ozone sh prefix getacl o3://om:9862/40406-acls/bb1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:44:50.996" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:44:50.996" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ],
  "aclSet" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "...</msg>
<status status="PASS" starttime="20250702 18:44:47.703" endtime="20250702 18:44:50.996"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:44:50.997" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ],
  "aclSet" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ],
  "aclSet" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20250702 18:44:50.996" endtime="20250702 18:44:50.997"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:44:50.997" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:44:50.997" endtime="20250702 18:44:50.997"/>
</kw>
<status status="PASS" starttime="20250702 18:44:47.702" endtime="20250702 18:44:50.997"/>
</kw>
<msg timestamp="20250702 18:44:50.997" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:44:47.702" endtime="20250702 18:44:50.997"/>
</kw>
<msg timestamp="20250702 18:44:50.998" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ],
  "aclSet" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "...</msg>
<status status="PASS" starttime="20250702 18:44:47.702" endtime="20250702 18:44:50.998"/>
</kw>
<kw name="Execute" library="os">
<var>${acl_check}</var>
<arg>echo '${result}' | jq -r '.[] | select(.type=="USER" and .name=="superuser1" and .aclScope=="DEFAULT" and (.aclList | contains(["READ", "WRITE", "READ_ACL", "WRITE_ACL"]))) | .name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:44:51.001" level="INFO">Running command 'echo '[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ],
  "aclSet" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ],
  "aclSet" : [ "ALL" ]
} ]' | jq -r '.[] | select(.type=="USER" and .name=="superuser1" and .aclScope=="DEFAULT" and (.aclList | contains(["READ", "WRITE", "READ_ACL", "WRITE_ACL"]))) | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:44:51.006" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:44:51.006" level="INFO">${output} = superuser1</msg>
<status status="PASS" starttime="20250702 18:44:50.999" endtime="20250702 18:44:51.006"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:44:51.007" level="INFO">superuser1</msg>
<status status="PASS" starttime="20250702 18:44:51.006" endtime="20250702 18:44:51.007"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:44:51.007" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:44:51.007" endtime="20250702 18:44:51.007"/>
</kw>
<status status="PASS" starttime="20250702 18:44:50.998" endtime="20250702 18:44:51.007"/>
</kw>
<msg timestamp="20250702 18:44:51.008" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:44:50.998" endtime="20250702 18:44:51.008"/>
</kw>
<msg timestamp="20250702 18:44:51.008" level="INFO">${acl_check} = superuser1</msg>
<status status="PASS" starttime="20250702 18:44:50.998" endtime="20250702 18:44:51.008"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acl_check}</arg>
<arg>superuser1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250702 18:44:51.008" endtime="20250702 18:44:51.008"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix removeacl ${protocol}${server}/${volume}/bb1/prefix1/ -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:44:51.011" level="INFO">Running command 'ozone sh prefix removeacl o3://om:9862/40406-acls/bb1/prefix1/ -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:44:53.972" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:44:53.972" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20250702 18:44:51.009" endtime="20250702 18:44:53.972"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:44:53.973" level="INFO">ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20250702 18:44:53.973" endtime="20250702 18:44:53.973"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:44:53.974" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:44:53.973" endtime="20250702 18:44:53.974"/>
</kw>
<status status="PASS" starttime="20250702 18:44:51.009" endtime="20250702 18:44:53.974"/>
</kw>
<msg timestamp="20250702 18:44:53.974" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:44:51.009" endtime="20250702 18:44:53.974"/>
</kw>
<msg timestamp="20250702 18:44:53.974" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20250702 18:44:51.008" endtime="20250702 18:44:53.974"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix getacl ${protocol}${server}/${volume}/bb1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:44:53.978" level="INFO">Running command 'ozone sh prefix getacl o3://om:9862/40406-acls/bb1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:44:57.399" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:44:57.399" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ],
  "aclSet" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "...</msg>
<status status="PASS" starttime="20250702 18:44:53.976" endtime="20250702 18:44:57.399"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:44:57.400" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ],
  "aclSet" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ],
  "aclSet" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20250702 18:44:57.399" endtime="20250702 18:44:57.400"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:44:57.400" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:44:57.400" endtime="20250702 18:44:57.400"/>
</kw>
<status status="PASS" starttime="20250702 18:44:53.975" endtime="20250702 18:44:57.400"/>
</kw>
<msg timestamp="20250702 18:44:57.401" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:44:53.975" endtime="20250702 18:44:57.401"/>
</kw>
<msg timestamp="20250702 18:44:57.401" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ],
  "aclSet" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "...</msg>
<status status="PASS" starttime="20250702 18:44:53.975" endtime="20250702 18:44:57.401"/>
</kw>
<kw name="Execute" library="os">
<var>${acl_check}</var>
<arg>echo '${result}' | jq -r '.[] | select(.type=="USER" and .name=="superuser1" and .aclScope=="DEFAULT" and (.aclList | contains(["READ", "WRITE"]))) | .name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:44:57.404" level="INFO">Running command 'echo '[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ],
  "aclSet" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ],
  "aclSet" : [ "ALL" ]
} ]' | jq -r '.[] | select(.type=="USER" and .name=="superuser1" and .aclScope=="DEFAULT" and (.aclList | contains(["READ", "WRITE"]))) | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:44:57.409" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:44:57.409" level="INFO">${output} = superuser1</msg>
<status status="PASS" starttime="20250702 18:44:57.402" endtime="20250702 18:44:57.410"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:44:57.410" level="INFO">superuser1</msg>
<status status="PASS" starttime="20250702 18:44:57.410" endtime="20250702 18:44:57.410"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:44:57.411" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:44:57.410" endtime="20250702 18:44:57.411"/>
</kw>
<status status="PASS" starttime="20250702 18:44:57.402" endtime="20250702 18:44:57.411"/>
</kw>
<msg timestamp="20250702 18:44:57.411" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:44:57.401" endtime="20250702 18:44:57.411"/>
</kw>
<msg timestamp="20250702 18:44:57.411" level="INFO">${acl_check} = superuser1</msg>
<status status="PASS" starttime="20250702 18:44:57.401" endtime="20250702 18:44:57.411"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acl_check}</arg>
<arg>superuser1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250702 18:44:57.411" endtime="20250702 18:44:57.411"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix setacl ${protocol}${server}/${volume}/bb1/prefix1/ -al user:superuser1:rwxy[DEFAULT],group:superuser1:a[DEFAULT],user:testuser:rwxyc</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:44:57.414" level="INFO">Running command 'ozone sh prefix setacl o3://om:9862/40406-acls/bb1/prefix1/ -al user:superuser1:rwxy[DEFAULT],group:superuser1:a[DEFAULT],user:testuser:rwxyc 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:45:00.542" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:45:00.542" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20250702 18:44:57.412" endtime="20250702 18:45:00.542"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:45:00.547" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20250702 18:45:00.544" endtime="20250702 18:45:00.547"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:45:00.548" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:45:00.547" endtime="20250702 18:45:00.548"/>
</kw>
<status status="PASS" starttime="20250702 18:44:57.412" endtime="20250702 18:45:00.548"/>
</kw>
<msg timestamp="20250702 18:45:00.548" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:44:57.412" endtime="20250702 18:45:00.548"/>
</kw>
<msg timestamp="20250702 18:45:00.549" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20250702 18:44:57.412" endtime="20250702 18:45:00.549"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix getacl ${protocol}${server}/${volume}/bb1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:45:00.554" level="INFO">Running command 'ozone sh prefix getacl o3://om:9862/40406-acls/bb1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:45:03.751" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:45:03.751" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ],
  "aclSet" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "...</msg>
<status status="PASS" starttime="20250702 18:45:00.551" endtime="20250702 18:45:03.751"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:45:03.752" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ],
  "aclSet" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ],
  "aclSet" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ],
  "aclSet" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20250702 18:45:03.751" endtime="20250702 18:45:03.752"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:45:03.752" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:45:03.752" endtime="20250702 18:45:03.752"/>
</kw>
<status status="PASS" starttime="20250702 18:45:00.551" endtime="20250702 18:45:03.752"/>
</kw>
<msg timestamp="20250702 18:45:03.752" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:45:00.550" endtime="20250702 18:45:03.752"/>
</kw>
<msg timestamp="20250702 18:45:03.753" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ],
  "aclSet" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "...</msg>
<status status="PASS" starttime="20250702 18:45:00.549" endtime="20250702 18:45:03.753"/>
</kw>
<kw name="Execute" library="os">
<var>${acl_check}</var>
<arg>echo '${result}' | jq -r '.[] | select(.type=="USER" and .name=="superuser1" and .aclScope=="DEFAULT" and (.aclList | contains(["READ", "WRITE", "READ_ACL", "WRITE_ACL"]))) | .name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:45:03.756" level="INFO">Running command 'echo '[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ],
  "aclSet" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ],
  "aclSet" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ],
  "aclSet" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
} ]' | jq -r '.[] | select(.type=="USER" and .name=="superuser1" and .aclScope=="DEFAULT" and (.aclList | contains(["READ", "WRITE", "READ_ACL", "WRITE_ACL"]))) | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:45:03.761" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:45:03.761" level="INFO">${output} = superuser1</msg>
<status status="PASS" starttime="20250702 18:45:03.754" endtime="20250702 18:45:03.761"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:45:03.762" level="INFO">superuser1</msg>
<status status="PASS" starttime="20250702 18:45:03.762" endtime="20250702 18:45:03.762"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:45:03.763" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:45:03.762" endtime="20250702 18:45:03.763"/>
</kw>
<status status="PASS" starttime="20250702 18:45:03.754" endtime="20250702 18:45:03.763"/>
</kw>
<msg timestamp="20250702 18:45:03.763" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:45:03.753" endtime="20250702 18:45:03.763"/>
</kw>
<msg timestamp="20250702 18:45:03.763" level="INFO">${acl_check} = superuser1</msg>
<status status="PASS" starttime="20250702 18:45:03.753" endtime="20250702 18:45:03.763"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acl_check}</arg>
<arg>superuser1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250702 18:45:03.763" endtime="20250702 18:45:03.763"/>
</kw>
<kw name="Execute" library="os">
<var>${acl_check}</var>
<arg>echo '${result}' | jq -r '.[] | select(.type=="GROUP" and .name=="superuser1" and .aclScope=="DEFAULT" and (.aclList | contains(["ALL"]))) | .name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:45:03.766" level="INFO">Running command 'echo '[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ],
  "aclSet" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ],
  "aclSet" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ],
  "aclSet" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
} ]' | jq -r '.[] | select(.type=="GROUP" and .name=="superuser1" and .aclScope=="DEFAULT" and (.aclList | contains(["ALL"]))) | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:45:03.771" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:45:03.771" level="INFO">${output} = superuser1</msg>
<status status="PASS" starttime="20250702 18:45:03.764" endtime="20250702 18:45:03.771"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:45:03.772" level="INFO">superuser1</msg>
<status status="PASS" starttime="20250702 18:45:03.772" endtime="20250702 18:45:03.772"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:45:03.772" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:45:03.772" endtime="20250702 18:45:03.773"/>
</kw>
<status status="PASS" starttime="20250702 18:45:03.764" endtime="20250702 18:45:03.773"/>
</kw>
<msg timestamp="20250702 18:45:03.773" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:45:03.764" endtime="20250702 18:45:03.773"/>
</kw>
<msg timestamp="20250702 18:45:03.773" level="INFO">${acl_check} = superuser1</msg>
<status status="PASS" starttime="20250702 18:45:03.763" endtime="20250702 18:45:03.773"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acl_check}</arg>
<arg>superuser1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250702 18:45:03.773" endtime="20250702 18:45:03.773"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/prefix1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:45:03.776" level="INFO">Running command 'ozone sh key put o3://om:9862/40406-acls/bb1/prefix1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:45:08.474" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:45:08.475" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:45:03.774" endtime="20250702 18:45:08.475"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:45:08.475" level="INFO"/>
<status status="PASS" starttime="20250702 18:45:08.475" endtime="20250702 18:45:08.476"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:45:08.476" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:45:08.476" endtime="20250702 18:45:08.476"/>
</kw>
<status status="PASS" starttime="20250702 18:45:03.774" endtime="20250702 18:45:08.476"/>
</kw>
<msg timestamp="20250702 18:45:08.476" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:45:03.774" endtime="20250702 18:45:08.476"/>
</kw>
<status status="PASS" starttime="20250702 18:45:03.773" endtime="20250702 18:45:08.476"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/prefix1/key1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:45:08.480" level="INFO">Running command 'ozone sh key getacl o3://om:9862/40406-acls/bb1/prefix1/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:45:11.764" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:45:11.764" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ],
  "aclSet" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclLi...</msg>
<status status="PASS" starttime="20250702 18:45:08.477" endtime="20250702 18:45:11.764"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:45:11.765" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ],
  "aclSet" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "LIST" ],
  "aclSet" : [ "READ", "LIST" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ],
  "aclSet" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ],
  "aclSet" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20250702 18:45:11.765" endtime="20250702 18:45:11.766"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:45:11.766" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:45:11.766" endtime="20250702 18:45:11.766"/>
</kw>
<status status="PASS" starttime="20250702 18:45:08.477" endtime="20250702 18:45:11.766"/>
</kw>
<msg timestamp="20250702 18:45:11.766" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:45:08.477" endtime="20250702 18:45:11.766"/>
</kw>
<msg timestamp="20250702 18:45:11.767" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ],
  "aclSet" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclLi...</msg>
<status status="PASS" starttime="20250702 18:45:08.477" endtime="20250702 18:45:11.767"/>
</kw>
<kw name="Execute" library="os">
<var>${acl_check}</var>
<arg>echo '${result}' | jq -r '.[] | select(.type=="USER" and .name=="superuser1" and .aclScope=="ACCESS" and (.aclList | contains(["READ", "WRITE", "READ_ACL", "WRITE_ACL"]))) | .name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:45:11.770" level="INFO">Running command 'echo '[ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ],
  "aclSet" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "LIST" ],
  "aclSet" : [ "READ", "LIST" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ],
  "aclSet" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ],
  "aclSet" : [ "ALL" ]
} ]' | jq -r '.[] | select(.type=="USER" and .name=="superuser1" and .aclScope=="ACCESS" and (.aclList | contains(["READ", "WRITE", "READ_ACL", "WRITE_ACL"]))) | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:45:11.776" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:45:11.776" level="INFO">${output} = superuser1</msg>
<status status="PASS" starttime="20250702 18:45:11.768" endtime="20250702 18:45:11.776"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:45:11.777" level="INFO">superuser1</msg>
<status status="PASS" starttime="20250702 18:45:11.776" endtime="20250702 18:45:11.777"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:45:11.777" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:45:11.777" endtime="20250702 18:45:11.777"/>
</kw>
<status status="PASS" starttime="20250702 18:45:11.767" endtime="20250702 18:45:11.777"/>
</kw>
<msg timestamp="20250702 18:45:11.777" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:45:11.767" endtime="20250702 18:45:11.777"/>
</kw>
<msg timestamp="20250702 18:45:11.778" level="INFO">${acl_check} = superuser1</msg>
<status status="PASS" starttime="20250702 18:45:11.767" endtime="20250702 18:45:11.778"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acl_check}</arg>
<arg>superuser1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250702 18:45:11.778" endtime="20250702 18:45:11.778"/>
</kw>
<kw name="Execute" library="os">
<var>${acl_check}</var>
<arg>echo '${result}' | jq -r '.[] | select(.type=="GROUP" and .name=="superuser1" and .aclScope=="ACCESS" and (.aclList | contains(["ALL"]))) | .name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:45:11.781" level="INFO">Running command 'echo '[ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ],
  "aclSet" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "LIST" ],
  "aclSet" : [ "READ", "LIST" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ],
  "aclSet" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ],
  "aclSet" : [ "ALL" ]
} ]' | jq -r '.[] | select(.type=="GROUP" and .name=="superuser1" and .aclScope=="ACCESS" and (.aclList | contains(["ALL"]))) | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:45:11.786" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:45:11.786" level="INFO">${output} = superuser1</msg>
<status status="PASS" starttime="20250702 18:45:11.779" endtime="20250702 18:45:11.787"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:45:11.787" level="INFO">superuser1</msg>
<status status="PASS" starttime="20250702 18:45:11.787" endtime="20250702 18:45:11.787"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:45:11.788" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:45:11.788" endtime="20250702 18:45:11.788"/>
</kw>
<status status="PASS" starttime="20250702 18:45:11.779" endtime="20250702 18:45:11.788"/>
</kw>
<msg timestamp="20250702 18:45:11.788" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:45:11.778" endtime="20250702 18:45:11.788"/>
</kw>
<msg timestamp="20250702 18:45:11.788" level="INFO">${acl_check} = superuser1</msg>
<status status="PASS" starttime="20250702 18:45:11.778" endtime="20250702 18:45:11.788"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acl_check}</arg>
<arg>superuser1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250702 18:45:11.788" endtime="20250702 18:45:11.789"/>
</kw>
<status status="PASS" starttime="20250702 18:44:44.587" endtime="20250702 18:45:11.789"/>
</kw>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20250702 18:44:44.545" endtime="20250702 18:45:11.789"/>
</test>
<test id="s1-s2-s5-t8" name="RpcClient without host" line="49">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get Security Enabled From Config" library="commonlib">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' != ''</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20250702 18:45:11.791" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:45:11.790" endtime="20250702 18:45:11.791"/>
</kw>
<kw name="Execute" library="os">
<var>${value}</var>
<arg>ozone getconf confKey ozone.security.enabled</arg>
<status status="NOT RUN" starttime="20250702 18:45:11.791" endtime="20250702 18:45:11.791"/>
</kw>
<if>
<branch type="IF" condition="'${value}' != 'true' and '${value}' != 'false'">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>false</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20250702 18:45:11.791" endtime="20250702 18:45:11.791"/>
</kw>
<status status="NOT RUN" starttime="20250702 18:45:11.791" endtime="20250702 18:45:11.791"/>
</branch>
<status status="NOT RUN" starttime="20250702 18:45:11.791" endtime="20250702 18:45:11.791"/>
</if>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${SECURITY_ENABLED}</arg>
<arg>${value}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20250702 18:45:11.791" endtime="20250702 18:45:11.791"/>
</kw>
<status status="PASS" starttime="20250702 18:45:11.790" endtime="20250702 18:45:11.791"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250702 18:45:11.791" endtime="20250702 18:45:11.792"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:45:11.795" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:45:11.798" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:45:11.798" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250702 18:45:11.793" endtime="20250702 18:45:11.799"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:45:11.799" level="INFO">scm</msg>
<status status="PASS" starttime="20250702 18:45:11.799" endtime="20250702 18:45:11.799"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:45:11.800" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:45:11.799" endtime="20250702 18:45:11.800"/>
</kw>
<status status="PASS" starttime="20250702 18:45:11.792" endtime="20250702 18:45:11.800"/>
</kw>
<msg timestamp="20250702 18:45:11.800" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:45:11.792" endtime="20250702 18:45:11.800"/>
</kw>
<msg timestamp="20250702 18:45:11.800" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250702 18:45:11.792" endtime="20250702 18:45:11.800"/>
</kw>
<msg timestamp="20250702 18:45:11.800" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250702 18:45:11.792" endtime="20250702 18:45:11.800"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250702 18:45:11.801" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250702 18:45:11.801" endtime="20250702 18:45:11.801"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:45:11.805" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:45:11.831" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:45:11.831" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:45:11.803" endtime="20250702 18:45:11.831"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:45:11.832" level="INFO"/>
<status status="PASS" starttime="20250702 18:45:11.831" endtime="20250702 18:45:11.832"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:45:11.832" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:45:11.832" endtime="20250702 18:45:11.832"/>
</kw>
<status status="PASS" starttime="20250702 18:45:11.802" endtime="20250702 18:45:11.832"/>
</kw>
<msg timestamp="20250702 18:45:11.832" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:45:11.802" endtime="20250702 18:45:11.833"/>
</kw>
<status status="PASS" starttime="20250702 18:45:11.801" endtime="20250702 18:45:11.833"/>
</kw>
<status status="PASS" starttime="20250702 18:45:11.801" endtime="20250702 18:45:11.833"/>
</kw>
<status status="PASS" starttime="20250702 18:45:11.790" endtime="20250702 18:45:11.833"/>
</kw>
<status status="PASS" starttime="20250702 18:45:11.790" endtime="20250702 18:45:11.833"/>
</kw>
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-without-host</arg>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:45:11.836" level="INFO">Running command 'ozone sh volume info o3:///40406-without-host 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:45:14.802" level="INFO">${rc} = 255</msg>
<msg timestamp="20250702 18:45:14.802" level="INFO">${output} = VOLUME_NOT_FOUND Volume 40406-without-host is not found</msg>
<status status="PASS" starttime="20250702 18:45:11.834" endtime="20250702 18:45:14.802"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:45:14.803" level="INFO">VOLUME_NOT_FOUND Volume 40406-without-host is not found</msg>
<status status="PASS" starttime="20250702 18:45:14.802" endtime="20250702 18:45:14.803"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:45:14.803" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:45:14.803" endtime="20250702 18:45:14.803"/>
</kw>
<msg timestamp="20250702 18:45:14.804" level="INFO">${result} = VOLUME_NOT_FOUND Volume 40406-without-host is not found</msg>
<status status="PASS" starttime="20250702 18:45:11.834" endtime="20250702 18:45:14.804"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250702 18:45:14.804" endtime="20250702 18:45:14.804"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:45:14.808" level="INFO">Running command 'ozone sh volume create o3:///40406-without-host --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:45:17.872" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:45:17.872" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:45:14.805" endtime="20250702 18:45:17.872"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:45:17.873" level="INFO"/>
<status status="PASS" starttime="20250702 18:45:17.872" endtime="20250702 18:45:17.873"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:45:17.873" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:45:17.873" endtime="20250702 18:45:17.873"/>
</kw>
<status status="PASS" starttime="20250702 18:45:14.805" endtime="20250702 18:45:17.873"/>
</kw>
<msg timestamp="20250702 18:45:17.873" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:45:14.805" endtime="20250702 18:45:17.873"/>
</kw>
<msg timestamp="20250702 18:45:17.874" level="INFO">${result} = </msg>
<status status="PASS" starttime="20250702 18:45:14.804" endtime="20250702 18:45:17.874"/>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${result}</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20250702 18:45:17.874" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20250702 18:45:17.874" endtime="20250702 18:45:17.874"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '.[] | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:45:17.877" level="INFO">Running command 'ozone sh volume list o3:/// | jq -r '.[] | select(.name=="40406-without-host")' 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:45:21.110" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:45:21.110" level="INFO">${output} = {
  "metadata": {},
  "name": "40406-without-host",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": ...</msg>
<status status="PASS" starttime="20250702 18:45:17.875" endtime="20250702 18:45:21.110"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:45:21.111" level="INFO">{
  "metadata": {},
  "name": "40406-without-host",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2025-07-02T18:45:17.785Z",
  "modificationTime": "2025-07-02T18:45:17.785Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ],
      "aclSet": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "READ",
        "LIST"
      ],
      "aclSet": [
        "READ",
        "LIST"
      ]
    }
  ],
  "refCount": 0
}</msg>
<status status="PASS" starttime="20250702 18:45:21.110" endtime="20250702 18:45:21.111"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:45:21.112" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:45:21.111" endtime="20250702 18:45:21.112"/>
</kw>
<status status="PASS" starttime="20250702 18:45:17.875" endtime="20250702 18:45:21.112"/>
</kw>
<msg timestamp="20250702 18:45:21.112" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:45:17.875" endtime="20250702 18:45:21.112"/>
</kw>
<msg timestamp="20250702 18:45:21.112" level="INFO">${result} = {
  "metadata": {},
  "name": "40406-without-host",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": ...</msg>
<status status="PASS" starttime="20250702 18:45:17.874" endtime="20250702 18:45:21.112"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250702 18:45:21.112" endtime="20250702 18:45:21.113"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:45:21.116" level="INFO">Running command 'ozone sh volume setquota o3:///40406-without-host --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:45:24.107" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:45:24.107" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:45:21.114" endtime="20250702 18:45:24.107"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:45:24.108" level="INFO"/>
<status status="PASS" starttime="20250702 18:45:24.108" endtime="20250702 18:45:24.108"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:45:24.109" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:45:24.108" endtime="20250702 18:45:24.109"/>
</kw>
<status status="PASS" starttime="20250702 18:45:21.113" endtime="20250702 18:45:24.109"/>
</kw>
<msg timestamp="20250702 18:45:24.109" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:45:21.113" endtime="20250702 18:45:24.109"/>
</kw>
<status status="PASS" starttime="20250702 18:45:21.113" endtime="20250702 18:45:24.109"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:45:24.113" level="INFO">Running command 'ozone sh volume info o3:///40406-without-host | jq -r '. | select(.name=="40406-without-host") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:45:27.350" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:45:27.350" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20250702 18:45:24.110" endtime="20250702 18:45:27.351"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:45:27.351" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20250702 18:45:27.351" endtime="20250702 18:45:27.351"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:45:27.352" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:45:27.352" endtime="20250702 18:45:27.352"/>
</kw>
<status status="PASS" starttime="20250702 18:45:24.110" endtime="20250702 18:45:27.352"/>
</kw>
<msg timestamp="20250702 18:45:27.352" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:45:24.110" endtime="20250702 18:45:27.352"/>
</kw>
<msg timestamp="20250702 18:45:27.352" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20250702 18:45:24.109" endtime="20250702 18:45:27.352"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250702 18:45:27.353" endtime="20250702 18:45:27.353"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:45:27.356" level="INFO">Running command 'ozone sh bucket create o3:///40406-without-host/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:45:30.330" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:45:30.330" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:45:27.354" endtime="20250702 18:45:30.330"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:45:30.331" level="INFO"/>
<status status="PASS" starttime="20250702 18:45:30.331" endtime="20250702 18:45:30.331"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:45:30.332" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:45:30.331" endtime="20250702 18:45:30.332"/>
</kw>
<status status="PASS" starttime="20250702 18:45:27.353" endtime="20250702 18:45:30.332"/>
</kw>
<msg timestamp="20250702 18:45:30.332" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:45:27.353" endtime="20250702 18:45:30.332"/>
</kw>
<msg timestamp="20250702 18:45:30.332" level="INFO">${result} = </msg>
<status status="PASS" starttime="20250702 18:45:27.353" endtime="20250702 18:45:30.332"/>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${result}</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20250702 18:45:30.333" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20250702 18:45:30.332" endtime="20250702 18:45:30.333"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 &gt; ${TMP_JSON}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:45:30.336" level="INFO">Running command 'ozone sh bucket info o3:///40406-without-host/bb1 &gt; /tmp/bb1.json'.</msg>
<msg timestamp="20250702 18:45:33.572" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:45:33.572" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:45:30.334" endtime="20250702 18:45:33.572"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:45:33.573" level="INFO"/>
<status status="PASS" starttime="20250702 18:45:33.572" endtime="20250702 18:45:33.573"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:45:33.573" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:45:33.573" endtime="20250702 18:45:33.573"/>
</kw>
<status status="PASS" starttime="20250702 18:45:30.333" endtime="20250702 18:45:33.573"/>
</kw>
<msg timestamp="20250702 18:45:33.573" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:45:30.333" endtime="20250702 18:45:33.573"/>
</kw>
<status status="PASS" starttime="20250702 18:45:30.333" endtime="20250702 18:45:33.573"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>jq -r '. | select(.name=="bb1") | .storageType' ${TMP_JSON}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:45:33.577" level="INFO">Running command 'jq -r '. | select(.name=="bb1") | .storageType' /tmp/bb1.json 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:45:33.581" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:45:33.581" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20250702 18:45:33.574" endtime="20250702 18:45:33.581"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:45:33.582" level="INFO">DISK</msg>
<status status="PASS" starttime="20250702 18:45:33.582" endtime="20250702 18:45:33.582"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:45:33.583" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:45:33.582" endtime="20250702 18:45:33.583"/>
</kw>
<status status="PASS" starttime="20250702 18:45:33.574" endtime="20250702 18:45:33.583"/>
</kw>
<msg timestamp="20250702 18:45:33.583" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:45:33.574" endtime="20250702 18:45:33.583"/>
</kw>
<msg timestamp="20250702 18:45:33.583" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20250702 18:45:33.574" endtime="20250702 18:45:33.583"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250702 18:45:33.583" endtime="20250702 18:45:33.584"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>jq -r '. | select(.name=="bb1") | .quotaInBytes' ${TMP_JSON}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:45:33.586" level="INFO">Running command 'jq -r '. | select(.name=="bb1") | .quotaInBytes' /tmp/bb1.json 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:45:33.591" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:45:33.591" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20250702 18:45:33.585" endtime="20250702 18:45:33.591"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:45:33.592" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20250702 18:45:33.591" endtime="20250702 18:45:33.592"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:45:33.592" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:45:33.592" endtime="20250702 18:45:33.592"/>
</kw>
<status status="PASS" starttime="20250702 18:45:33.584" endtime="20250702 18:45:33.592"/>
</kw>
<msg timestamp="20250702 18:45:33.592" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:45:33.584" endtime="20250702 18:45:33.592"/>
</kw>
<msg timestamp="20250702 18:45:33.592" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20250702 18:45:33.584" endtime="20250702 18:45:33.593"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250702 18:45:33.593" endtime="20250702 18:45:33.593"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>jq -r '. | select(.name=="bb1") | .quotaInNamespace' ${TMP_JSON}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:45:33.596" level="INFO">Running command 'jq -r '. | select(.name=="bb1") | .quotaInNamespace' /tmp/bb1.json 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:45:33.600" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:45:33.600" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20250702 18:45:33.594" endtime="20250702 18:45:33.600"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:45:33.601" level="INFO">100</msg>
<status status="PASS" starttime="20250702 18:45:33.601" endtime="20250702 18:45:33.601"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:45:33.601" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:45:33.601" endtime="20250702 18:45:33.601"/>
</kw>
<status status="PASS" starttime="20250702 18:45:33.593" endtime="20250702 18:45:33.602"/>
</kw>
<msg timestamp="20250702 18:45:33.602" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:45:33.593" endtime="20250702 18:45:33.602"/>
</kw>
<msg timestamp="20250702 18:45:33.602" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20250702 18:45:33.593" endtime="20250702 18:45:33.602"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250702 18:45:33.602" endtime="20250702 18:45:33.602"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:45:33.605" level="INFO">Running command 'ozone sh bucket setquota o3:///40406-without-host/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:45:36.705" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:45:36.705" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:45:33.603" endtime="20250702 18:45:36.705"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:45:36.706" level="INFO"/>
<status status="PASS" starttime="20250702 18:45:36.706" endtime="20250702 18:45:36.706"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:45:36.707" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:45:36.707" endtime="20250702 18:45:36.707"/>
</kw>
<status status="PASS" starttime="20250702 18:45:33.603" endtime="20250702 18:45:36.707"/>
</kw>
<msg timestamp="20250702 18:45:36.707" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:45:33.603" endtime="20250702 18:45:36.707"/>
</kw>
<status status="PASS" starttime="20250702 18:45:33.602" endtime="20250702 18:45:36.707"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 &gt; ${TMP_JSON}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:45:36.711" level="INFO">Running command 'ozone sh bucket info o3:///40406-without-host/bb1 &gt; /tmp/bb1.json'.</msg>
<msg timestamp="20250702 18:45:39.961" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:45:39.961" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:45:36.709" endtime="20250702 18:45:39.961"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:45:39.962" level="INFO"/>
<status status="PASS" starttime="20250702 18:45:39.961" endtime="20250702 18:45:39.962"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:45:39.963" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:45:39.963" endtime="20250702 18:45:39.963"/>
</kw>
<status status="PASS" starttime="20250702 18:45:36.708" endtime="20250702 18:45:39.963"/>
</kw>
<msg timestamp="20250702 18:45:39.963" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:45:36.708" endtime="20250702 18:45:39.963"/>
</kw>
<status status="PASS" starttime="20250702 18:45:36.707" endtime="20250702 18:45:39.963"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>jq -r '. | select(.name=="bb1") | .quotaInBytes' ${TMP_JSON}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:45:39.967" level="INFO">Running command 'jq -r '. | select(.name=="bb1") | .quotaInBytes' /tmp/bb1.json 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:45:39.972" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:45:39.972" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20250702 18:45:39.964" endtime="20250702 18:45:39.972"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:45:39.972" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20250702 18:45:39.972" endtime="20250702 18:45:39.972"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:45:39.973" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:45:39.973" endtime="20250702 18:45:39.973"/>
</kw>
<status status="PASS" starttime="20250702 18:45:39.964" endtime="20250702 18:45:39.973"/>
</kw>
<msg timestamp="20250702 18:45:39.973" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:45:39.964" endtime="20250702 18:45:39.973"/>
</kw>
<msg timestamp="20250702 18:45:39.973" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20250702 18:45:39.963" endtime="20250702 18:45:39.973"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250702 18:45:39.973" endtime="20250702 18:45:39.974"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>jq -r '. | select(.name=="bb1") | .quotaInNamespace' ${TMP_JSON}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:45:39.976" level="INFO">Running command 'jq -r '. | select(.name=="bb1") | .quotaInNamespace' /tmp/bb1.json 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:45:39.981" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:45:39.981" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20250702 18:45:39.974" endtime="20250702 18:45:39.981"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:45:39.982" level="INFO">1000</msg>
<status status="PASS" starttime="20250702 18:45:39.981" endtime="20250702 18:45:39.982"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:45:39.982" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:45:39.982" endtime="20250702 18:45:39.982"/>
</kw>
<status status="PASS" starttime="20250702 18:45:39.974" endtime="20250702 18:45:39.983"/>
</kw>
<msg timestamp="20250702 18:45:39.983" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:45:39.974" endtime="20250702 18:45:39.983"/>
</kw>
<msg timestamp="20250702 18:45:39.983" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20250702 18:45:39.974" endtime="20250702 18:45:39.983"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250702 18:45:39.983" endtime="20250702 18:45:39.983"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '.[] | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:45:39.986" level="INFO">Running command 'ozone sh bucket list o3:///40406-without-host/ | jq -r '.[] | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:45:43.320" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:45:43.320" level="INFO">${output} = 40406-without-host</msg>
<status status="PASS" starttime="20250702 18:45:39.984" endtime="20250702 18:45:43.320"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:45:43.321" level="INFO">40406-without-host</msg>
<status status="PASS" starttime="20250702 18:45:43.321" endtime="20250702 18:45:43.321"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:45:43.322" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:45:43.321" endtime="20250702 18:45:43.322"/>
</kw>
<status status="PASS" starttime="20250702 18:45:39.984" endtime="20250702 18:45:43.322"/>
</kw>
<msg timestamp="20250702 18:45:43.322" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:45:39.984" endtime="20250702 18:45:43.322"/>
</kw>
<msg timestamp="20250702 18:45:43.322" level="INFO">${result} = 40406-without-host</msg>
<status status="PASS" starttime="20250702 18:45:39.983" endtime="20250702 18:45:43.322"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250702 18:45:43.322" endtime="20250702 18:45:43.323"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1 /tmp/key1_RATIS /tmp/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:45:43.327" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 /tmp/key1_RATIS /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:45:43.331" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:45:43.331" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:45:43.325" endtime="20250702 18:45:43.331"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:45:43.331" level="INFO"/>
<status status="PASS" starttime="20250702 18:45:43.331" endtime="20250702 18:45:43.332"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:45:43.332" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:45:43.332" endtime="20250702 18:45:43.332"/>
</kw>
<status status="PASS" starttime="20250702 18:45:43.324" endtime="20250702 18:45:43.332"/>
</kw>
<msg timestamp="20250702 18:45:43.332" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:45:43.324" endtime="20250702 18:45:43.332"/>
</kw>
<status status="PASS" starttime="20250702 18:45:43.324" endtime="20250702 18:45:43.332"/>
</kw>
<kw name="Ozone Shell Batch" library="shell">
<arg>key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<arg>key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<arg>key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<arg>key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<arg>key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<arg>key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<kw name="Catenate" library="BuiltIn">
<var>${cmd}</var>
<arg>SEPARATOR=' --execute '</arg>
<arg>@{commands}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20250702 18:45:43.333" level="INFO">${cmd} = key put o3:///40406-without-host/bb1/key1 /opt/hadoop/NOTICE.txt' --execute 'key get o3:///40406-without-host/bb1/key1 /tmp/NOTICE.txt.1' --execute 'key put -t RATIS o3:///40406-without-host/bb1/key1_...</msg>
<status status="PASS" starttime="20250702 18:45:43.333" endtime="20250702 18:45:43.333"/>
</kw>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>ozone sh --execute '${cmd}'</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>ozone sh --execute '${cmd}'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:45:43.336" level="INFO">Running command 'ozone sh --execute 'key put o3:///40406-without-host/bb1/key1 /opt/hadoop/NOTICE.txt' --execute 'key get o3:///40406-without-host/bb1/key1 /tmp/NOTICE.txt.1' --execute 'key put -t RATIS o3:///40406-without-host/bb1/key1_RATIS /opt/hadoop/NOTICE.txt' --execute 'key get o3:///40406-without-host/bb1/key1_RATIS /tmp/key1_RATIS' --execute 'key cp o3:///40406-without-host/bb1 key1 key1-copy' --execute 'key get o3:///40406-without-host/bb1/key1-copy /tmp/key1-copy' 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:45:48.876" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:45:48.876" level="INFO">${output} = key put o3:///40406-without-host/bb1/key1 /opt/hadoop/NOTICE.txt
key get o3:///40406-without-host/bb1/key1 /tmp/NOTICE.txt.1
key put -t RATIS o3:///40406-without-host/bb1/key1_RATIS /opt/hadoop/NOTICE...</msg>
<status status="PASS" starttime="20250702 18:45:43.334" endtime="20250702 18:45:48.876"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:45:48.877" level="INFO">key put o3:///40406-without-host/bb1/key1 /opt/hadoop/NOTICE.txt
key get o3:///40406-without-host/bb1/key1 /tmp/NOTICE.txt.1
key put -t RATIS o3:///40406-without-host/bb1/key1_RATIS /opt/hadoop/NOTICE.txt
key get o3:///40406-without-host/bb1/key1_RATIS /tmp/key1_RATIS
key cp o3:///40406-without-host/bb1 key1 key1-copy
key get o3:///40406-without-host/bb1/key1-copy /tmp/key1-copy</msg>
<status status="PASS" starttime="20250702 18:45:48.876" endtime="20250702 18:45:48.877"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:45:48.877" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:45:48.877" endtime="20250702 18:45:48.877"/>
</kw>
<status status="PASS" starttime="20250702 18:45:43.334" endtime="20250702 18:45:48.878"/>
</kw>
<msg timestamp="20250702 18:45:48.878" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:45:43.334" endtime="20250702 18:45:48.878"/>
</kw>
<status status="PASS" starttime="20250702 18:45:43.332" endtime="20250702 18:45:48.878"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:45:48.881" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:45:48.884" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:45:48.884" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:45:48.879" endtime="20250702 18:45:48.884"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:45:48.885" level="INFO"/>
<status status="PASS" starttime="20250702 18:45:48.884" endtime="20250702 18:45:48.885"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:45:48.885" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:45:48.885" endtime="20250702 18:45:48.885"/>
</kw>
<status status="PASS" starttime="20250702 18:45:48.879" endtime="20250702 18:45:48.885"/>
</kw>
<msg timestamp="20250702 18:45:48.886" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:45:48.878" endtime="20250702 18:45:48.886"/>
</kw>
<status status="PASS" starttime="20250702 18:45:48.878" endtime="20250702 18:45:48.886"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:45:48.889" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:45:48.891" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:45:48.891" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:45:48.887" endtime="20250702 18:45:48.891"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:45:48.892" level="INFO"/>
<status status="PASS" starttime="20250702 18:45:48.892" endtime="20250702 18:45:48.892"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:45:48.892" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:45:48.892" endtime="20250702 18:45:48.892"/>
</kw>
<status status="PASS" starttime="20250702 18:45:48.886" endtime="20250702 18:45:48.893"/>
</kw>
<msg timestamp="20250702 18:45:48.893" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:45:48.886" endtime="20250702 18:45:48.893"/>
</kw>
<status status="PASS" starttime="20250702 18:45:48.886" endtime="20250702 18:45:48.893"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:45:48.896" level="INFO">Running command 'ozone sh key info o3:///40406-without-host/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")' 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:45:52.098" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:45:52.098" level="INFO">${output} = {
  "volumeName": "40406-without-host",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "owner": "testuser",
  "dataSize": 15892,
  "creationTime": "2025-07-02T18:45:48.152Z",
  "modificationTime": "...</msg>
<status status="PASS" starttime="20250702 18:45:48.894" endtime="20250702 18:45:52.098"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:45:52.100" level="INFO">{
  "volumeName": "40406-without-host",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "owner": "testuser",
  "dataSize": 15892,
  "creationTime": "2025-07-02T18:45:48.152Z",
  "modificationTime": "2025-07-02T18:45:48.208Z",
  "replicationConfig": {
    "replicationFactor": "THREE",
    "requiredNodes": 3,
    "minimumNodes": 1,
    "replicationType": "RATIS"
  },
  "metadata": {},
  "tags": {},
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 115816896921600016,
      "length": 15892,
      "offset": 0,
      "keyOffset": 0
    }
  ],
  "generation": 158,
  "file": true
}</msg>
<status status="PASS" starttime="20250702 18:45:52.099" endtime="20250702 18:45:52.100"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:45:52.100" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:45:52.100" endtime="20250702 18:45:52.101"/>
</kw>
<status status="PASS" starttime="20250702 18:45:48.894" endtime="20250702 18:45:52.101"/>
</kw>
<msg timestamp="20250702 18:45:52.101" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:45:48.893" endtime="20250702 18:45:52.101"/>
</kw>
<msg timestamp="20250702 18:45:52.101" level="INFO">${result} = {
  "volumeName": "40406-without-host",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "owner": "testuser",
  "dataSize": 15892,
  "creationTime": "2025-07-02T18:45:48.152Z",
  "modificationTime": "...</msg>
<status status="PASS" starttime="20250702 18:45:48.893" endtime="20250702 18:45:52.101"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250702 18:45:52.101" endtime="20250702 18:45:52.101"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:45:52.104" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:45:52.107" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:45:52.107" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:45:52.102" endtime="20250702 18:45:52.107"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:45:52.108" level="INFO"/>
<status status="PASS" starttime="20250702 18:45:52.108" endtime="20250702 18:45:52.108"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:45:52.108" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:45:52.108" endtime="20250702 18:45:52.109"/>
</kw>
<status status="PASS" starttime="20250702 18:45:52.102" endtime="20250702 18:45:52.109"/>
</kw>
<msg timestamp="20250702 18:45:52.109" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:45:52.102" endtime="20250702 18:45:52.109"/>
</kw>
<status status="PASS" starttime="20250702 18:45:52.101" endtime="20250702 18:45:52.109"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:45:52.112" level="INFO">Running command 'ozone sh key get o3:///40406-without-host/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:45:55.090" level="INFO">${rc} = 255</msg>
<msg timestamp="20250702 18:45:55.090" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20250702 18:45:52.109" endtime="20250702 18:45:55.090"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:45:55.091" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20250702 18:45:55.091" endtime="20250702 18:45:55.091"/>
</kw>
<msg timestamp="20250702 18:45:55.092" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20250702 18:45:52.109" endtime="20250702 18:45:55.092"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250702 18:45:55.092" endtime="20250702 18:45:55.092"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:45:55.096" level="INFO">Running command 'ozone sh key get --force o3:///40406-without-host/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:45:59.617" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:45:59.617" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:45:55.093" endtime="20250702 18:45:59.617"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:45:59.618" level="INFO"/>
<status status="PASS" starttime="20250702 18:45:59.617" endtime="20250702 18:45:59.618"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:45:59.618" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:45:59.618" endtime="20250702 18:45:59.618"/>
</kw>
<status status="PASS" starttime="20250702 18:45:55.093" endtime="20250702 18:45:59.619"/>
</kw>
<msg timestamp="20250702 18:45:59.619" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:45:55.093" endtime="20250702 18:45:59.619"/>
</kw>
<msg timestamp="20250702 18:45:59.619" level="INFO">${result} = </msg>
<status status="PASS" starttime="20250702 18:45:55.092" endtime="20250702 18:45:59.619"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250702 18:45:59.619" endtime="20250702 18:45:59.619"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 sample.txt</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:45:59.622" level="INFO">Running command 'ozone sh key put o3:///40406-without-host/bb1/key1 sample.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:46:02.655" level="INFO">${rc} = 255</msg>
<msg timestamp="20250702 18:46:02.655" level="INFO">${output} = Error: File not found: sample.txt</msg>
<status status="PASS" starttime="20250702 18:45:59.620" endtime="20250702 18:46:02.655"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:46:02.656" level="INFO">Error: File not found: sample.txt</msg>
<status status="PASS" starttime="20250702 18:46:02.655" endtime="20250702 18:46:02.656"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:46:02.656" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:46:02.656" endtime="20250702 18:46:02.656"/>
</kw>
<msg timestamp="20250702 18:46:02.657" level="INFO">${result} = Error: File not found: sample.txt</msg>
<status status="PASS" starttime="20250702 18:45:59.619" endtime="20250702 18:46:02.657"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>File not found: sample.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250702 18:46:02.657" endtime="20250702 18:46:02.657"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:46:02.661" level="INFO">Running command 'ozone sh key info o3:///40406-without-host/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:46:05.892" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:46:05.892" level="INFO">${output} = {
  "volumeName": "40406-without-host",
  "bucketName": "bb1",
  "name": "key1",
  "owner": "testuser",
  "dataSize": 15892,
  "creationTime": "2025-07-02T18:45:46.528Z",
  "modificationTime": "2025-0...</msg>
<status status="PASS" starttime="20250702 18:46:02.658" endtime="20250702 18:46:05.892"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:46:05.893" level="INFO">{
  "volumeName": "40406-without-host",
  "bucketName": "bb1",
  "name": "key1",
  "owner": "testuser",
  "dataSize": 15892,
  "creationTime": "2025-07-02T18:45:46.528Z",
  "modificationTime": "2025-07-02T18:45:47.874Z",
  "replicationConfig": {
    "replicationFactor": "THREE",
    "requiredNodes": 3,
    "minimumNodes": 1,
    "replicationType": "RATIS"
  },
  "metadata": {},
  "tags": {},
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 115816896921600015,
      "length": 15892,
      "offset": 0,
      "keyOffset": 0
    }
  ],
  "generation": 156,
  "file": true
}</msg>
<status status="PASS" starttime="20250702 18:46:05.892" endtime="20250702 18:46:05.893"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:46:05.893" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:46:05.893" endtime="20250702 18:46:05.893"/>
</kw>
<status status="PASS" starttime="20250702 18:46:02.658" endtime="20250702 18:46:05.893"/>
</kw>
<msg timestamp="20250702 18:46:05.893" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:46:02.658" endtime="20250702 18:46:05.894"/>
</kw>
<msg timestamp="20250702 18:46:05.894" level="INFO">${result} = {
  "volumeName": "40406-without-host",
  "bucketName": "bb1",
  "name": "key1",
  "owner": "testuser",
  "dataSize": 15892,
  "creationTime": "2025-07-02T18:45:46.528Z",
  "modificationTime": "2025-0...</msg>
<status status="PASS" starttime="20250702 18:46:02.657" endtime="20250702 18:46:05.894"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250702 18:46:05.894" endtime="20250702 18:46:05.894"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250702 18:46:05.894" endtime="20250702 18:46:05.894"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[] | select(.name=="key1") | .name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:46:05.898" level="INFO">Running command 'ozone sh key list o3:///40406-without-host/bb1 | jq -r '.[] | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:46:09.203" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:46:09.203" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20250702 18:46:05.895" endtime="20250702 18:46:09.203"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:46:09.204" level="INFO">key1</msg>
<status status="PASS" starttime="20250702 18:46:09.203" endtime="20250702 18:46:09.204"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:46:09.204" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:46:09.204" endtime="20250702 18:46:09.204"/>
</kw>
<status status="PASS" starttime="20250702 18:46:05.895" endtime="20250702 18:46:09.205"/>
</kw>
<msg timestamp="20250702 18:46:09.205" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:46:05.895" endtime="20250702 18:46:09.205"/>
</kw>
<msg timestamp="20250702 18:46:09.205" level="INFO">${result} = key1</msg>
<status status="PASS" starttime="20250702 18:46:05.894" endtime="20250702 18:46:09.205"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250702 18:46:09.205" endtime="20250702 18:46:09.205"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:46:09.209" level="INFO">Running command 'ozone sh key rename o3:///40406-without-host/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:46:12.309" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:46:12.310" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:46:09.206" endtime="20250702 18:46:12.310"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:46:12.311" level="INFO"/>
<status status="PASS" starttime="20250702 18:46:12.310" endtime="20250702 18:46:12.311"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:46:12.311" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:46:12.311" endtime="20250702 18:46:12.311"/>
</kw>
<status status="PASS" starttime="20250702 18:46:09.206" endtime="20250702 18:46:12.311"/>
</kw>
<msg timestamp="20250702 18:46:12.311" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:46:09.206" endtime="20250702 18:46:12.312"/>
</kw>
<status status="PASS" starttime="20250702 18:46:09.205" endtime="20250702 18:46:12.312"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[] | select(.name=="key2") | .name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:46:12.316" level="INFO">Running command 'ozone sh key list o3:///40406-without-host/bb1 | jq -r '.[] | select(.name=="key2") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:46:15.499" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:46:15.499" level="INFO">${output} = key2</msg>
<status status="PASS" starttime="20250702 18:46:12.313" endtime="20250702 18:46:15.499"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:46:15.500" level="INFO">key2</msg>
<status status="PASS" starttime="20250702 18:46:15.499" endtime="20250702 18:46:15.500"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:46:15.501" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:46:15.500" endtime="20250702 18:46:15.501"/>
</kw>
<status status="PASS" starttime="20250702 18:46:12.313" endtime="20250702 18:46:15.501"/>
</kw>
<msg timestamp="20250702 18:46:15.501" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:46:12.312" endtime="20250702 18:46:15.501"/>
</kw>
<msg timestamp="20250702 18:46:15.501" level="INFO">${result} = key2</msg>
<status status="PASS" starttime="20250702 18:46:12.312" endtime="20250702 18:46:15.501"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250702 18:46:15.501" endtime="20250702 18:46:15.501"/>
</kw>
<kw name="Ozone Shell Batch" library="shell">
<arg>key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<arg>key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<arg>key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<kw name="Catenate" library="BuiltIn">
<var>${cmd}</var>
<arg>SEPARATOR=' --execute '</arg>
<arg>@{commands}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20250702 18:46:15.502" level="INFO">${cmd} = key delete o3:///40406-without-host/bb1/key2' --execute 'key delete o3:///40406-without-host/bb1/key1_RATIS' --execute 'key delete o3:///40406-without-host/bb1/key1-copy</msg>
<status status="PASS" starttime="20250702 18:46:15.502" endtime="20250702 18:46:15.502"/>
</kw>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>ozone sh --execute '${cmd}'</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>ozone sh --execute '${cmd}'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:46:15.506" level="INFO">Running command 'ozone sh --execute 'key delete o3:///40406-without-host/bb1/key2' --execute 'key delete o3:///40406-without-host/bb1/key1_RATIS' --execute 'key delete o3:///40406-without-host/bb1/key1-copy' 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:46:18.984" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:46:18.984" level="INFO">${output} = key delete o3:///40406-without-host/bb1/key2
Key moved inside Trash: /.Trash/testuser/Current/key2 
key delete o3:///40406-without-host/bb1/key1_RATIS
Key moved inside Trash: /.Trash/testuser/Current/...</msg>
<status status="PASS" starttime="20250702 18:46:15.503" endtime="20250702 18:46:18.984"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:46:18.985" level="INFO">key delete o3:///40406-without-host/bb1/key2
Key moved inside Trash: /.Trash/testuser/Current/key2 
key delete o3:///40406-without-host/bb1/key1_RATIS
Key moved inside Trash: /.Trash/testuser/Current/key1_RATIS 
key delete o3:///40406-without-host/bb1/key1-copy
Key moved inside Trash: /.Trash/testuser/Current/key1-copy </msg>
<status status="PASS" starttime="20250702 18:46:18.984" endtime="20250702 18:46:18.985"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:46:18.986" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:46:18.985" endtime="20250702 18:46:18.986"/>
</kw>
<status status="PASS" starttime="20250702 18:46:15.503" endtime="20250702 18:46:18.986"/>
</kw>
<msg timestamp="20250702 18:46:18.986" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:46:15.503" endtime="20250702 18:46:18.986"/>
</kw>
<status status="PASS" starttime="20250702 18:46:15.502" endtime="20250702 18:46:18.986"/>
</kw>
<status status="PASS" starttime="20250702 18:45:43.323" endtime="20250702 18:46:18.986"/>
</kw>
<status status="PASS" starttime="20250702 18:45:43.323" endtime="20250702 18:46:18.986"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:46:18.991" level="INFO">Running command 'ozone sh volume clrquota --space-quota o3:///40406-without-host 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:46:22.010" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:46:22.011" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:46:18.988" endtime="20250702 18:46:22.011"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:46:22.012" level="INFO"/>
<status status="PASS" starttime="20250702 18:46:22.011" endtime="20250702 18:46:22.012"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:46:22.012" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:46:22.012" endtime="20250702 18:46:22.012"/>
</kw>
<status status="PASS" starttime="20250702 18:46:18.987" endtime="20250702 18:46:22.012"/>
</kw>
<msg timestamp="20250702 18:46:22.012" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:46:18.987" endtime="20250702 18:46:22.012"/>
</kw>
<status status="PASS" starttime="20250702 18:46:18.986" endtime="20250702 18:46:22.012"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:46:22.016" level="INFO">Running command 'ozone sh volume info o3:///40406-without-host | jq -r '. | select(.name=="40406-without-host") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:46:25.254" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:46:25.254" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20250702 18:46:22.014" endtime="20250702 18:46:25.254"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:46:25.255" level="INFO">-1</msg>
<status status="PASS" starttime="20250702 18:46:25.254" endtime="20250702 18:46:25.255"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:46:25.255" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:46:25.255" endtime="20250702 18:46:25.255"/>
</kw>
<status status="PASS" starttime="20250702 18:46:22.013" endtime="20250702 18:46:25.255"/>
</kw>
<msg timestamp="20250702 18:46:25.256" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:46:22.013" endtime="20250702 18:46:25.256"/>
</kw>
<msg timestamp="20250702 18:46:25.256" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20250702 18:46:22.013" endtime="20250702 18:46:25.256"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250702 18:46:25.256" endtime="20250702 18:46:25.256"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:46:25.260" level="INFO">Running command 'ozone sh volume clrquota --namespace-quota o3:///40406-without-host 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:46:28.357" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:46:28.357" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:46:25.257" endtime="20250702 18:46:28.357"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:46:28.358" level="INFO"/>
<status status="PASS" starttime="20250702 18:46:28.357" endtime="20250702 18:46:28.358"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:46:28.358" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:46:28.358" endtime="20250702 18:46:28.358"/>
</kw>
<status status="PASS" starttime="20250702 18:46:25.257" endtime="20250702 18:46:28.358"/>
</kw>
<msg timestamp="20250702 18:46:28.358" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:46:25.257" endtime="20250702 18:46:28.359"/>
</kw>
<status status="PASS" starttime="20250702 18:46:25.256" endtime="20250702 18:46:28.359"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:46:28.362" level="INFO">Running command 'ozone sh volume info o3:///40406-without-host | jq -r '. | select(.name=="40406-without-host") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:46:31.675" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:46:31.675" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20250702 18:46:28.360" endtime="20250702 18:46:31.675"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:46:31.676" level="INFO">-1</msg>
<status status="PASS" starttime="20250702 18:46:31.676" endtime="20250702 18:46:31.676"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:46:31.677" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:46:31.676" endtime="20250702 18:46:31.677"/>
</kw>
<status status="PASS" starttime="20250702 18:46:28.359" endtime="20250702 18:46:31.677"/>
</kw>
<msg timestamp="20250702 18:46:31.677" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:46:28.359" endtime="20250702 18:46:31.677"/>
</kw>
<msg timestamp="20250702 18:46:31.677" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20250702 18:46:28.359" endtime="20250702 18:46:31.677"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250702 18:46:31.677" endtime="20250702 18:46:31.678"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:46:31.681" level="INFO">Running command 'ozone sh bucket clrquota --space-quota o3:///40406-without-host/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:46:34.847" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:46:34.848" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:46:31.679" endtime="20250702 18:46:34.848"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:46:34.848" level="INFO"/>
<status status="PASS" starttime="20250702 18:46:34.848" endtime="20250702 18:46:34.849"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:46:34.849" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:46:34.849" endtime="20250702 18:46:34.849"/>
</kw>
<status status="PASS" starttime="20250702 18:46:31.679" endtime="20250702 18:46:34.849"/>
</kw>
<msg timestamp="20250702 18:46:34.849" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:46:31.678" endtime="20250702 18:46:34.849"/>
</kw>
<status status="PASS" starttime="20250702 18:46:31.678" endtime="20250702 18:46:34.849"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:46:34.853" level="INFO">Running command 'ozone sh bucket info o3:///40406-without-host/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:46:38.192" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:46:38.192" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20250702 18:46:34.851" endtime="20250702 18:46:38.192"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:46:38.193" level="INFO">-1</msg>
<status status="PASS" starttime="20250702 18:46:38.192" endtime="20250702 18:46:38.193"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:46:38.193" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:46:38.193" endtime="20250702 18:46:38.193"/>
</kw>
<status status="PASS" starttime="20250702 18:46:34.850" endtime="20250702 18:46:38.193"/>
</kw>
<msg timestamp="20250702 18:46:38.193" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:46:34.850" endtime="20250702 18:46:38.194"/>
</kw>
<msg timestamp="20250702 18:46:38.194" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20250702 18:46:34.849" endtime="20250702 18:46:38.194"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250702 18:46:38.194" endtime="20250702 18:46:38.194"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:46:38.197" level="INFO">Running command 'ozone sh bucket clrquota --namespace-quota o3:///40406-without-host/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:46:41.350" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:46:41.350" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:46:38.195" endtime="20250702 18:46:41.350"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:46:41.351" level="INFO"/>
<status status="PASS" starttime="20250702 18:46:41.350" endtime="20250702 18:46:41.351"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:46:41.352" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:46:41.351" endtime="20250702 18:46:41.352"/>
</kw>
<status status="PASS" starttime="20250702 18:46:38.195" endtime="20250702 18:46:41.352"/>
</kw>
<msg timestamp="20250702 18:46:41.352" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:46:38.195" endtime="20250702 18:46:41.352"/>
</kw>
<status status="PASS" starttime="20250702 18:46:38.194" endtime="20250702 18:46:41.352"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:46:41.356" level="INFO">Running command 'ozone sh bucket info o3:///40406-without-host/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:46:44.563" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:46:44.563" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20250702 18:46:41.353" endtime="20250702 18:46:44.563"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:46:44.564" level="INFO">-1</msg>
<status status="PASS" starttime="20250702 18:46:44.563" endtime="20250702 18:46:44.564"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:46:44.564" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:46:44.564" endtime="20250702 18:46:44.565"/>
</kw>
<status status="PASS" starttime="20250702 18:46:41.353" endtime="20250702 18:46:44.565"/>
</kw>
<msg timestamp="20250702 18:46:44.565" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:46:41.353" endtime="20250702 18:46:44.565"/>
</kw>
<msg timestamp="20250702 18:46:44.565" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20250702 18:46:41.352" endtime="20250702 18:46:44.565"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250702 18:46:44.565" endtime="20250702 18:46:44.565"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete -r --yes ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:46:44.569" level="INFO">Running command 'ozone sh bucket delete -r --yes o3:///40406-without-host/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:46:48.020" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:46:48.020" level="INFO">${output} = Bucket bb1 is deleted</msg>
<status status="PASS" starttime="20250702 18:46:44.566" endtime="20250702 18:46:48.020"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:46:48.021" level="INFO">Bucket bb1 is deleted</msg>
<status status="PASS" starttime="20250702 18:46:48.020" endtime="20250702 18:46:48.021"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:46:48.021" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:46:48.021" endtime="20250702 18:46:48.021"/>
</kw>
<status status="PASS" starttime="20250702 18:46:44.566" endtime="20250702 18:46:48.022"/>
</kw>
<msg timestamp="20250702 18:46:48.022" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:46:44.566" endtime="20250702 18:46:48.022"/>
</kw>
<status status="PASS" starttime="20250702 18:46:44.566" endtime="20250702 18:46:48.022"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:46:48.025" level="INFO">Running command 'ozone sh volume delete o3:///40406-without-host 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:46:51.071" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:46:51.071" level="INFO">${output} = Volume 40406-without-host is deleted</msg>
<status status="PASS" starttime="20250702 18:46:48.023" endtime="20250702 18:46:51.071"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:46:51.072" level="INFO">Volume 40406-without-host is deleted</msg>
<status status="PASS" starttime="20250702 18:46:51.072" endtime="20250702 18:46:51.072"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:46:51.073" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:46:51.072" endtime="20250702 18:46:51.073"/>
</kw>
<status status="PASS" starttime="20250702 18:46:48.023" endtime="20250702 18:46:51.073"/>
</kw>
<msg timestamp="20250702 18:46:51.073" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:46:48.022" endtime="20250702 18:46:51.073"/>
</kw>
<status status="PASS" starttime="20250702 18:46:48.022" endtime="20250702 18:46:51.073"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:46:51.077" level="INFO">Running command 'ozone sh volume create o3:///40406-without-host 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:46:54.257" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:46:54.257" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:46:51.074" endtime="20250702 18:46:54.257"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:46:54.258" level="INFO"/>
<status status="PASS" starttime="20250702 18:46:54.258" endtime="20250702 18:46:54.258"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:46:54.259" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:46:54.259" endtime="20250702 18:46:54.259"/>
</kw>
<status status="PASS" starttime="20250702 18:46:51.074" endtime="20250702 18:46:54.259"/>
</kw>
<msg timestamp="20250702 18:46:54.259" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:46:51.074" endtime="20250702 18:46:54.259"/>
</kw>
<status status="PASS" starttime="20250702 18:46:51.073" endtime="20250702 18:46:54.259"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume info ${protocol}${server}/${volume} &gt; ${TMP_JSON}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:46:54.263" level="INFO">Running command 'ozone sh volume info o3:///40406-without-host &gt; /tmp/bb1.json'.</msg>
<msg timestamp="20250702 18:46:57.645" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:46:57.645" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:46:54.260" endtime="20250702 18:46:57.645"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:46:57.646" level="INFO"/>
<status status="PASS" starttime="20250702 18:46:57.645" endtime="20250702 18:46:57.646"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:46:57.646" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:46:57.646" endtime="20250702 18:46:57.646"/>
</kw>
<status status="PASS" starttime="20250702 18:46:54.260" endtime="20250702 18:46:57.646"/>
</kw>
<msg timestamp="20250702 18:46:57.646" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:46:54.260" endtime="20250702 18:46:57.647"/>
</kw>
<status status="PASS" starttime="20250702 18:46:54.259" endtime="20250702 18:46:57.647"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>jq -r '. | select(.name=="${volume}") | .quotaInBytes' ${TMP_JSON}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:46:57.650" level="INFO">Running command 'jq -r '. | select(.name=="40406-without-host") | .quotaInBytes' /tmp/bb1.json 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:46:57.655" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:46:57.655" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20250702 18:46:57.648" endtime="20250702 18:46:57.655"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:46:57.656" level="INFO">-1</msg>
<status status="PASS" starttime="20250702 18:46:57.655" endtime="20250702 18:46:57.656"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:46:57.656" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:46:57.656" endtime="20250702 18:46:57.656"/>
</kw>
<status status="PASS" starttime="20250702 18:46:57.647" endtime="20250702 18:46:57.656"/>
</kw>
<msg timestamp="20250702 18:46:57.656" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:46:57.647" endtime="20250702 18:46:57.657"/>
</kw>
<msg timestamp="20250702 18:46:57.657" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20250702 18:46:57.647" endtime="20250702 18:46:57.657"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250702 18:46:57.657" endtime="20250702 18:46:57.657"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>jq -r '. | select(.name=="${volume}") | .quotaInNamespace' ${TMP_JSON}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:46:57.661" level="INFO">Running command 'jq -r '. | select(.name=="40406-without-host") | .quotaInNamespace' /tmp/bb1.json 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:46:57.665" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:46:57.665" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20250702 18:46:57.658" endtime="20250702 18:46:57.665"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:46:57.666" level="INFO">-1</msg>
<status status="PASS" starttime="20250702 18:46:57.666" endtime="20250702 18:46:57.666"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:46:57.667" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:46:57.666" endtime="20250702 18:46:57.667"/>
</kw>
<status status="PASS" starttime="20250702 18:46:57.658" endtime="20250702 18:46:57.667"/>
</kw>
<msg timestamp="20250702 18:46:57.667" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:46:57.658" endtime="20250702 18:46:57.667"/>
</kw>
<msg timestamp="20250702 18:46:57.667" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20250702 18:46:57.657" endtime="20250702 18:46:57.667"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250702 18:46:57.667" endtime="20250702 18:46:57.667"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:46:57.670" level="INFO">Running command 'ozone sh bucket create o3:///40406-without-host/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:47:00.924" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:47:00.924" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:46:57.668" endtime="20250702 18:47:00.924"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:47:00.925" level="INFO"/>
<status status="PASS" starttime="20250702 18:47:00.924" endtime="20250702 18:47:00.925"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:47:00.925" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:47:00.925" endtime="20250702 18:47:00.925"/>
</kw>
<status status="PASS" starttime="20250702 18:46:57.668" endtime="20250702 18:47:00.925"/>
</kw>
<msg timestamp="20250702 18:47:00.925" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:46:57.668" endtime="20250702 18:47:00.926"/>
</kw>
<status status="PASS" starttime="20250702 18:46:57.667" endtime="20250702 18:47:00.926"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 &gt; ${TMP_JSON}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:47:00.930" level="INFO">Running command 'ozone sh bucket info o3:///40406-without-host/bb1 &gt; /tmp/bb1.json'.</msg>
<msg timestamp="20250702 18:47:04.105" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:47:04.106" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:47:00.927" endtime="20250702 18:47:04.106"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:47:04.106" level="INFO"/>
<status status="PASS" starttime="20250702 18:47:04.106" endtime="20250702 18:47:04.107"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:47:04.107" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:47:04.107" endtime="20250702 18:47:04.107"/>
</kw>
<status status="PASS" starttime="20250702 18:47:00.927" endtime="20250702 18:47:04.107"/>
</kw>
<msg timestamp="20250702 18:47:04.107" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:47:00.926" endtime="20250702 18:47:04.107"/>
</kw>
<status status="PASS" starttime="20250702 18:47:00.926" endtime="20250702 18:47:04.107"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>jq -r '. | select(.name=="bb1") | .quotaInBytes' ${TMP_JSON}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:47:04.111" level="INFO">Running command 'jq -r '. | select(.name=="bb1") | .quotaInBytes' /tmp/bb1.json 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:47:04.115" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:47:04.115" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20250702 18:47:04.108" endtime="20250702 18:47:04.115"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:47:04.116" level="INFO">-1</msg>
<status status="PASS" starttime="20250702 18:47:04.116" endtime="20250702 18:47:04.116"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:47:04.116" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:47:04.116" endtime="20250702 18:47:04.117"/>
</kw>
<status status="PASS" starttime="20250702 18:47:04.108" endtime="20250702 18:47:04.117"/>
</kw>
<msg timestamp="20250702 18:47:04.117" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:47:04.108" endtime="20250702 18:47:04.117"/>
</kw>
<msg timestamp="20250702 18:47:04.117" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20250702 18:47:04.107" endtime="20250702 18:47:04.117"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250702 18:47:04.117" endtime="20250702 18:47:04.117"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>jq -r '. | select(.name=="bb1") | .quotaInNamespace' ${TMP_JSON}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:47:04.121" level="INFO">Running command 'jq -r '. | select(.name=="bb1") | .quotaInNamespace' /tmp/bb1.json 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:47:04.126" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:47:04.126" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20250702 18:47:04.118" endtime="20250702 18:47:04.126"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:47:04.126" level="INFO">-1</msg>
<status status="PASS" starttime="20250702 18:47:04.126" endtime="20250702 18:47:04.126"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:47:04.127" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:47:04.127" endtime="20250702 18:47:04.127"/>
</kw>
<status status="PASS" starttime="20250702 18:47:04.118" endtime="20250702 18:47:04.127"/>
</kw>
<msg timestamp="20250702 18:47:04.127" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:47:04.118" endtime="20250702 18:47:04.127"/>
</kw>
<msg timestamp="20250702 18:47:04.127" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20250702 18:47:04.117" endtime="20250702 18:47:04.127"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250702 18:47:04.127" endtime="20250702 18:47:04.128"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:47:04.131" level="INFO">Running command 'ozone sh bucket delete o3:///40406-without-host/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:47:07.248" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:47:07.248" level="INFO">${output} = Bucket bb1 is deleted</msg>
<status status="PASS" starttime="20250702 18:47:04.129" endtime="20250702 18:47:07.248"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:47:07.249" level="INFO">Bucket bb1 is deleted</msg>
<status status="PASS" starttime="20250702 18:47:07.248" endtime="20250702 18:47:07.249"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:47:07.250" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:47:07.249" endtime="20250702 18:47:07.250"/>
</kw>
<status status="PASS" starttime="20250702 18:47:04.128" endtime="20250702 18:47:07.250"/>
</kw>
<msg timestamp="20250702 18:47:07.250" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:47:04.128" endtime="20250702 18:47:07.250"/>
</kw>
<status status="PASS" starttime="20250702 18:47:04.128" endtime="20250702 18:47:07.250"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:47:07.254" level="INFO">Running command 'ozone sh volume delete o3:///40406-without-host 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:47:10.247" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:47:10.247" level="INFO">${output} = Volume 40406-without-host is deleted</msg>
<status status="PASS" starttime="20250702 18:47:07.251" endtime="20250702 18:47:10.247"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:47:10.248" level="INFO">Volume 40406-without-host is deleted</msg>
<status status="PASS" starttime="20250702 18:47:10.248" endtime="20250702 18:47:10.248"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:47:10.249" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:47:10.248" endtime="20250702 18:47:10.249"/>
</kw>
<status status="PASS" starttime="20250702 18:47:07.251" endtime="20250702 18:47:10.249"/>
</kw>
<msg timestamp="20250702 18:47:10.249" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:47:07.251" endtime="20250702 18:47:10.249"/>
</kw>
<status status="PASS" starttime="20250702 18:47:07.250" endtime="20250702 18:47:10.249"/>
</kw>
<status status="PASS" starttime="20250702 18:45:11.833" endtime="20250702 18:47:10.249"/>
</kw>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20250702 18:45:11.789" endtime="20250702 18:47:10.249"/>
</test>
<test id="s1-s2-s5-t9" name="RpcClient Delete key" line="52">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get Security Enabled From Config" library="commonlib">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' != ''</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20250702 18:47:10.251" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:47:10.251" endtime="20250702 18:47:10.252"/>
</kw>
<kw name="Execute" library="os">
<var>${value}</var>
<arg>ozone getconf confKey ozone.security.enabled</arg>
<status status="NOT RUN" starttime="20250702 18:47:10.252" endtime="20250702 18:47:10.252"/>
</kw>
<if>
<branch type="IF" condition="'${value}' != 'true' and '${value}' != 'false'">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>false</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20250702 18:47:10.252" endtime="20250702 18:47:10.252"/>
</kw>
<status status="NOT RUN" starttime="20250702 18:47:10.252" endtime="20250702 18:47:10.252"/>
</branch>
<status status="NOT RUN" starttime="20250702 18:47:10.252" endtime="20250702 18:47:10.252"/>
</if>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${SECURITY_ENABLED}</arg>
<arg>${value}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20250702 18:47:10.252" endtime="20250702 18:47:10.252"/>
</kw>
<status status="PASS" starttime="20250702 18:47:10.251" endtime="20250702 18:47:10.252"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250702 18:47:10.252" endtime="20250702 18:47:10.253"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:47:10.256" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:47:10.260" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:47:10.260" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250702 18:47:10.254" endtime="20250702 18:47:10.260"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:47:10.261" level="INFO">scm</msg>
<status status="PASS" starttime="20250702 18:47:10.260" endtime="20250702 18:47:10.261"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:47:10.261" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:47:10.261" endtime="20250702 18:47:10.261"/>
</kw>
<status status="PASS" starttime="20250702 18:47:10.253" endtime="20250702 18:47:10.261"/>
</kw>
<msg timestamp="20250702 18:47:10.261" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:47:10.253" endtime="20250702 18:47:10.261"/>
</kw>
<msg timestamp="20250702 18:47:10.261" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250702 18:47:10.253" endtime="20250702 18:47:10.261"/>
</kw>
<msg timestamp="20250702 18:47:10.262" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250702 18:47:10.253" endtime="20250702 18:47:10.262"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250702 18:47:10.262" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250702 18:47:10.262" endtime="20250702 18:47:10.262"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:47:10.265" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:47:10.291" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:47:10.292" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:47:10.263" endtime="20250702 18:47:10.292"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:47:10.292" level="INFO"/>
<status status="PASS" starttime="20250702 18:47:10.292" endtime="20250702 18:47:10.292"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:47:10.293" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:47:10.293" endtime="20250702 18:47:10.293"/>
</kw>
<status status="PASS" starttime="20250702 18:47:10.263" endtime="20250702 18:47:10.293"/>
</kw>
<msg timestamp="20250702 18:47:10.293" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:47:10.263" endtime="20250702 18:47:10.293"/>
</kw>
<status status="PASS" starttime="20250702 18:47:10.262" endtime="20250702 18:47:10.293"/>
</kw>
<status status="PASS" starttime="20250702 18:47:10.262" endtime="20250702 18:47:10.293"/>
</kw>
<status status="PASS" starttime="20250702 18:47:10.251" endtime="20250702 18:47:10.293"/>
</kw>
<status status="PASS" starttime="20250702 18:47:10.250" endtime="20250702 18:47:10.293"/>
</kw>
<kw name="Test Delete key with Trash" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-with-del</arg>
<kw name="Ozone Shell Batch" library="shell">
<arg>volume create ${protocol}${server}/${volume}</arg>
<arg>bucket create ${protocol}${server}/${volume}/bfso --layout FILE_SYSTEM_OPTIMIZED</arg>
<arg>key put -t RATIS ${protocol}${server}/${volume}/bfso/key3 /opt/hadoop/NOTICE.txt</arg>
<arg>key delete ${protocol}${server}/${volume}/bfso/key3</arg>
<kw name="Catenate" library="BuiltIn">
<var>${cmd}</var>
<arg>SEPARATOR=' --execute '</arg>
<arg>@{commands}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20250702 18:47:10.295" level="INFO">${cmd} = volume create o3://om:9862/40406-with-del' --execute 'bucket create o3://om:9862/40406-with-del/bfso --layout FILE_SYSTEM_OPTIMIZED' --execute 'key put -t RATIS o3://om:9862/40406-with-del/bfso/key3 /...</msg>
<status status="PASS" starttime="20250702 18:47:10.295" endtime="20250702 18:47:10.295"/>
</kw>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>ozone sh --execute '${cmd}'</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>ozone sh --execute '${cmd}'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:47:10.298" level="INFO">Running command 'ozone sh --execute 'volume create o3://om:9862/40406-with-del' --execute 'bucket create o3://om:9862/40406-with-del/bfso --layout FILE_SYSTEM_OPTIMIZED' --execute 'key put -t RATIS o3://om:9862/40406-with-del/bfso/key3 /opt/hadoop/NOTICE.txt' --execute 'key delete o3://om:9862/40406-with-del/bfso/key3' 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:47:15.200" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:47:15.201" level="INFO">${output} = volume create o3://om:9862/40406-with-del
bucket create o3://om:9862/40406-with-del/bfso --layout FILE_SYSTEM_OPTIMIZED
key put -t RATIS o3://om:9862/40406-with-del/bfso/key3 /opt/hadoop/NOTICE.txt
ke...</msg>
<status status="PASS" starttime="20250702 18:47:10.295" endtime="20250702 18:47:15.201"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:47:15.201" level="INFO">volume create o3://om:9862/40406-with-del
bucket create o3://om:9862/40406-with-del/bfso --layout FILE_SYSTEM_OPTIMIZED
key put -t RATIS o3://om:9862/40406-with-del/bfso/key3 /opt/hadoop/NOTICE.txt
key delete o3://om:9862/40406-with-del/bfso/key3
Key moved inside Trash: /.Trash/testuser/Current/key3 </msg>
<status status="PASS" starttime="20250702 18:47:15.201" endtime="20250702 18:47:15.202"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:47:15.202" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:47:15.202" endtime="20250702 18:47:15.202"/>
</kw>
<status status="PASS" starttime="20250702 18:47:10.295" endtime="20250702 18:47:15.202"/>
</kw>
<msg timestamp="20250702 18:47:15.202" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:47:10.295" endtime="20250702 18:47:15.202"/>
</kw>
<status status="PASS" starttime="20250702 18:47:10.294" endtime="20250702 18:47:15.202"/>
</kw>
<kw name="Execute" library="os">
<var>${fsokey}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bfso</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:47:15.206" level="INFO">Running command 'ozone sh key list o3://om:9862/40406-with-del/bfso 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:47:18.457" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:47:18.457" level="INFO">${output} = [ {
  "volumeName" : "40406-with-del",
  "bucketName" : "bfso",
  "name" : ".Trash/",
  "owner" : "testuser",
  "dataSize" : 0,
  "creationTime" : "2025-07-02T18:47:14.807Z",
  "modificationTime" : "2...</msg>
<status status="PASS" starttime="20250702 18:47:15.204" endtime="20250702 18:47:18.458"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:47:18.458" level="INFO">[ {
  "volumeName" : "40406-with-del",
  "bucketName" : "bfso",
  "name" : ".Trash/",
  "owner" : "testuser",
  "dataSize" : 0,
  "creationTime" : "2025-07-02T18:47:14.807Z",
  "modificationTime" : "2025-07-02T18:47:14.807Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "minimumNodes" : 1,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "tags" : { },
  "file" : false
}, {
  "volumeName" : "40406-with-del",
  "bucketName" : "bfso",
  "name" : ".Trash/testuser/",
  "owner" : "testuser",
  "dataSize" : 0,
  "creationTime" : "2025-07-02T18:47:14.807Z",
  "modificationTime" : "2025-07-02T18:47:14.807Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "minimumNodes" : 1,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "tags" : { },
  "file" : false
}, {
  "volumeName" : "40406-with-del",
  "bucketName" : "bfso",
  "name" : ".Trash/testuser/Current/",
  "owner" : "",
  "dataSize" : 0,
  "creationTime" : "2025-07-02T18:47:14.807Z",
  "modificationTime" : "2025-07-02T18:47:14.813Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "minimumNodes" : 1,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "tags" : { },
  "file" : false
}, {
  "volumeName" : "40406-with-del",
  "bucketName" : "bfso",
  "name" : ".Trash/testuser/Current/key3",
  "owner" : "testuser",
  "dataSize" : 15892,
  "creationTime" : "2025-07-02T18:47:13.409Z",
  "modificationTime" : "2025-07-02T18:47:14.714Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "minimumNodes" : 1,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "tags" : { },
  "file" : true
} ]</msg>
<status status="PASS" starttime="20250702 18:47:18.458" endtime="20250702 18:47:18.459"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:47:18.459" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:47:18.459" endtime="20250702 18:47:18.459"/>
</kw>
<status status="PASS" starttime="20250702 18:47:15.203" endtime="20250702 18:47:18.459"/>
</kw>
<msg timestamp="20250702 18:47:18.459" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:47:15.203" endtime="20250702 18:47:18.459"/>
</kw>
<msg timestamp="20250702 18:47:18.459" level="INFO">${fsokey} = [ {
  "volumeName" : "40406-with-del",
  "bucketName" : "bfso",
  "name" : ".Trash/",
  "owner" : "testuser",
  "dataSize" : 0,
  "creationTime" : "2025-07-02T18:47:14.807Z",
  "modificationTime" : "2...</msg>
<status status="PASS" starttime="20250702 18:47:15.202" endtime="20250702 18:47:18.459"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>echo '${fsokey}' | jq -r '.[] | select(.name | startswith(".Trash")) | .name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:47:18.463" level="INFO">Running command 'echo '[ {
  "volumeName" : "40406-with-del",
  "bucketName" : "bfso",
  "name" : ".Trash/",
  "owner" : "testuser",
  "dataSize" : 0,
  "creationTime" : "2025-07-02T18:47:14.807Z",
  "modificationTime" : "2025-07-02T18:47:14.807Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "minimumNodes" : 1,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "tags" : { },
  "file" : false
}, {
  "volumeName" : "40406-with-del",
  "bucketName" : "bfso",
  "name" : ".Trash/testuser/",
  "owner" : "testuser",
  "dataSize" : 0,
  "creationTime" : "2025-07-02T18:47:14.807Z",
  "modificationTime" : "2025-07-02T18:47:14.807Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "minimumNodes" : 1,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "tags" : { },
  "file" : false
}, {
  "volumeName" : "40406-with-del",
  "bucketName" : "bfso",
  "name" : ".Trash/testuser/Current/",
  "owner" : "",
  "dataSize" : 0,
  "creationTime" : "2025-07-02T18:47:14.807Z",
  "modificationTime" : "2025-07-02T18:47:14.813Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "minimumNodes" : 1,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "tags" : { },
  "file" : false
}, {
  "volumeName" : "40406-with-del",
  "bucketName" : "bfso",
  "name" : ".Trash/testuser/Current/key3",
  "owner" : "testuser",
  "dataSize" : 15892,
  "creationTime" : "2025-07-02T18:47:13.409Z",
  "modificationTime" : "2025-07-02T18:47:14.714Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "minimumNodes" : 1,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "tags" : { },
  "file" : true
} ]' | jq -r '.[] | select(.name | startswith(".Trash")) | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:47:18.468" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:47:18.468" level="INFO">${output} = .Trash/
.Trash/testuser/
.Trash/testuser/Current/
.Trash/testuser/Current/key3</msg>
<status status="PASS" starttime="20250702 18:47:18.460" endtime="20250702 18:47:18.468"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:47:18.469" level="INFO">.Trash/
.Trash/testuser/
.Trash/testuser/Current/
.Trash/testuser/Current/key3</msg>
<status status="PASS" starttime="20250702 18:47:18.468" endtime="20250702 18:47:18.469"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:47:18.469" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:47:18.469" endtime="20250702 18:47:18.469"/>
</kw>
<status status="PASS" starttime="20250702 18:47:18.460" endtime="20250702 18:47:18.469"/>
</kw>
<msg timestamp="20250702 18:47:18.469" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:47:18.460" endtime="20250702 18:47:18.469"/>
</kw>
<msg timestamp="20250702 18:47:18.470" level="INFO">${result} = .Trash/
.Trash/testuser/
.Trash/testuser/Current/
.Trash/testuser/Current/key3</msg>
<status status="PASS" starttime="20250702 18:47:18.459" endtime="20250702 18:47:18.470"/>
</kw>
<kw name="Should Contain Any" library="BuiltIn">
<arg>${result}</arg>
<arg>.Trash/hadoop</arg>
<arg>.Trash/testuser</arg>
<arg>.Trash/root</arg>
<doc>Fails if ``container`` does not contain any of the ``*items``.</doc>
<status status="PASS" starttime="20250702 18:47:18.470" endtime="20250702 18:47:18.470"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>key3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250702 18:47:18.470" endtime="20250702 18:47:18.470"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>echo '${fsokey}' | jq -r '.[] | select(.name | startswith(".Trash") | not) | .name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:47:18.473" level="INFO">Running command 'echo '[ {
  "volumeName" : "40406-with-del",
  "bucketName" : "bfso",
  "name" : ".Trash/",
  "owner" : "testuser",
  "dataSize" : 0,
  "creationTime" : "2025-07-02T18:47:14.807Z",
  "modificationTime" : "2025-07-02T18:47:14.807Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "minimumNodes" : 1,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "tags" : { },
  "file" : false
}, {
  "volumeName" : "40406-with-del",
  "bucketName" : "bfso",
  "name" : ".Trash/testuser/",
  "owner" : "testuser",
  "dataSize" : 0,
  "creationTime" : "2025-07-02T18:47:14.807Z",
  "modificationTime" : "2025-07-02T18:47:14.807Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "minimumNodes" : 1,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "tags" : { },
  "file" : false
}, {
  "volumeName" : "40406-with-del",
  "bucketName" : "bfso",
  "name" : ".Trash/testuser/Current/",
  "owner" : "",
  "dataSize" : 0,
  "creationTime" : "2025-07-02T18:47:14.807Z",
  "modificationTime" : "2025-07-02T18:47:14.813Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "minimumNodes" : 1,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "tags" : { },
  "file" : false
}, {
  "volumeName" : "40406-with-del",
  "bucketName" : "bfso",
  "name" : ".Trash/testuser/Current/key3",
  "owner" : "testuser",
  "dataSize" : 15892,
  "creationTime" : "2025-07-02T18:47:13.409Z",
  "modificationTime" : "2025-07-02T18:47:14.714Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "minimumNodes" : 1,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "tags" : { },
  "file" : true
} ]' | jq -r '.[] | select(.name | startswith(".Trash") | not) | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:47:18.478" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:47:18.478" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:47:18.471" endtime="20250702 18:47:18.478"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:47:18.478" level="INFO"/>
<status status="PASS" starttime="20250702 18:47:18.478" endtime="20250702 18:47:18.478"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:47:18.479" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:47:18.479" endtime="20250702 18:47:18.479"/>
</kw>
<status status="PASS" starttime="20250702 18:47:18.471" endtime="20250702 18:47:18.479"/>
</kw>
<msg timestamp="20250702 18:47:18.479" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:47:18.471" endtime="20250702 18:47:18.479"/>
</kw>
<msg timestamp="20250702 18:47:18.479" level="INFO">${result} = </msg>
<status status="PASS" starttime="20250702 18:47:18.470" endtime="20250702 18:47:18.479"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>key3</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250702 18:47:18.479" endtime="20250702 18:47:18.480"/>
</kw>
<kw name="Ozone Shell Batch" library="shell">
<arg>bucket create ${protocol}${server}/${volume}/obsbkt --layout OBJECT_STORE</arg>
<arg>key put -t RATIS ${protocol}${server}/${volume}/obsbkt/key2 /opt/hadoop/NOTICE.txt</arg>
<arg>key delete ${protocol}${server}/${volume}/obsbkt/key2</arg>
<kw name="Catenate" library="BuiltIn">
<var>${cmd}</var>
<arg>SEPARATOR=' --execute '</arg>
<arg>@{commands}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20250702 18:47:18.481" level="INFO">${cmd} = bucket create o3://om:9862/40406-with-del/obsbkt --layout OBJECT_STORE' --execute 'key put -t RATIS o3://om:9862/40406-with-del/obsbkt/key2 /opt/hadoop/NOTICE.txt' --execute 'key delete o3://om:9862/4...</msg>
<status status="PASS" starttime="20250702 18:47:18.480" endtime="20250702 18:47:18.481"/>
</kw>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>ozone sh --execute '${cmd}'</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>ozone sh --execute '${cmd}'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:47:18.483" level="INFO">Running command 'ozone sh --execute 'bucket create o3://om:9862/40406-with-del/obsbkt --layout OBJECT_STORE' --execute 'key put -t RATIS o3://om:9862/40406-with-del/obsbkt/key2 /opt/hadoop/NOTICE.txt' --execute 'key delete o3://om:9862/40406-with-del/obsbkt/key2' 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:47:23.498" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:47:23.498" level="INFO">${output} = bucket create o3://om:9862/40406-with-del/obsbkt --layout OBJECT_STORE
key put -t RATIS o3://om:9862/40406-with-del/obsbkt/key2 /opt/hadoop/NOTICE.txt
key delete o3://om:9862/40406-with-del/obsbkt/key...</msg>
<status status="PASS" starttime="20250702 18:47:18.481" endtime="20250702 18:47:23.498"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:47:23.499" level="INFO">bucket create o3://om:9862/40406-with-del/obsbkt --layout OBJECT_STORE
key put -t RATIS o3://om:9862/40406-with-del/obsbkt/key2 /opt/hadoop/NOTICE.txt
key delete o3://om:9862/40406-with-del/obsbkt/key2</msg>
<status status="PASS" starttime="20250702 18:47:23.498" endtime="20250702 18:47:23.499"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:47:23.499" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:47:23.499" endtime="20250702 18:47:23.499"/>
</kw>
<status status="PASS" starttime="20250702 18:47:18.481" endtime="20250702 18:47:23.500"/>
</kw>
<msg timestamp="20250702 18:47:23.500" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:47:18.481" endtime="20250702 18:47:23.500"/>
</kw>
<status status="PASS" starttime="20250702 18:47:18.480" endtime="20250702 18:47:23.500"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/obsbkt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:47:23.503" level="INFO">Running command 'ozone sh key list o3://om:9862/40406-with-del/obsbkt 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:47:26.689" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:47:26.689" level="INFO">${output} = [ ]</msg>
<status status="PASS" starttime="20250702 18:47:23.501" endtime="20250702 18:47:26.689"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:47:26.690" level="INFO">[ ]</msg>
<status status="PASS" starttime="20250702 18:47:26.689" endtime="20250702 18:47:26.690"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:47:26.691" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:47:26.690" endtime="20250702 18:47:26.691"/>
</kw>
<status status="PASS" starttime="20250702 18:47:23.501" endtime="20250702 18:47:26.691"/>
</kw>
<msg timestamp="20250702 18:47:26.691" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:47:23.500" endtime="20250702 18:47:26.691"/>
</kw>
<msg timestamp="20250702 18:47:26.691" level="INFO">${result} = [ ]</msg>
<status status="PASS" starttime="20250702 18:47:23.500" endtime="20250702 18:47:26.691"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250702 18:47:26.691" endtime="20250702 18:47:26.691"/>
</kw>
<status status="PASS" starttime="20250702 18:47:10.294" endtime="20250702 18:47:26.691"/>
</kw>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20250702 18:47:10.250" endtime="20250702 18:47:26.692"/>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="PASS" starttime="20250702 18:39:39.379" endtime="20250702 18:47:26.693"/>
</suite>
<suite id="s1-s2-s6" name="Single Node" source="/opt/hadoop/smoketest/basic/single_node.robot">
<kw name="Get Security Enabled From Config" library="commonlib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' != ''</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20250702 18:47:26.701" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:47:26.701" endtime="20250702 18:47:26.701"/>
</kw>
<kw name="Execute" library="os">
<var>${value}</var>
<arg>ozone getconf confKey ozone.security.enabled</arg>
<status status="NOT RUN" starttime="20250702 18:47:26.701" endtime="20250702 18:47:26.701"/>
</kw>
<if>
<branch type="IF" condition="'${value}' != 'true' and '${value}' != 'false'">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>false</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20250702 18:47:26.701" endtime="20250702 18:47:26.701"/>
</kw>
<status status="NOT RUN" starttime="20250702 18:47:26.701" endtime="20250702 18:47:26.701"/>
</branch>
<status status="NOT RUN" starttime="20250702 18:47:26.701" endtime="20250702 18:47:26.701"/>
</if>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${SECURITY_ENABLED}</arg>
<arg>${value}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20250702 18:47:26.701" endtime="20250702 18:47:26.701"/>
</kw>
<status status="PASS" starttime="20250702 18:47:26.700" endtime="20250702 18:47:26.702"/>
</kw>
<test id="s1-s2-s6-t1" name="Basic Freon smoketest for one datanode" line="26">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get Security Enabled From Config" library="commonlib">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' != ''</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20250702 18:47:26.703" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:47:26.703" endtime="20250702 18:47:26.703"/>
</kw>
<kw name="Execute" library="os">
<var>${value}</var>
<arg>ozone getconf confKey ozone.security.enabled</arg>
<status status="NOT RUN" starttime="20250702 18:47:26.703" endtime="20250702 18:47:26.703"/>
</kw>
<if>
<branch type="IF" condition="'${value}' != 'true' and '${value}' != 'false'">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>false</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20250702 18:47:26.704" endtime="20250702 18:47:26.704"/>
</kw>
<status status="NOT RUN" starttime="20250702 18:47:26.703" endtime="20250702 18:47:26.704"/>
</branch>
<status status="NOT RUN" starttime="20250702 18:47:26.703" endtime="20250702 18:47:26.704"/>
</if>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${SECURITY_ENABLED}</arg>
<arg>${value}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20250702 18:47:26.704" endtime="20250702 18:47:26.704"/>
</kw>
<status status="PASS" starttime="20250702 18:47:26.703" endtime="20250702 18:47:26.704"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250702 18:47:26.704" endtime="20250702 18:47:26.704"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:47:26.707" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:47:26.711" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:47:26.711" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250702 18:47:26.705" endtime="20250702 18:47:26.711"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:47:26.711" level="INFO">scm</msg>
<status status="PASS" starttime="20250702 18:47:26.711" endtime="20250702 18:47:26.712"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:47:26.712" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:47:26.712" endtime="20250702 18:47:26.712"/>
</kw>
<status status="PASS" starttime="20250702 18:47:26.705" endtime="20250702 18:47:26.712"/>
</kw>
<msg timestamp="20250702 18:47:26.712" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:47:26.705" endtime="20250702 18:47:26.712"/>
</kw>
<msg timestamp="20250702 18:47:26.712" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250702 18:47:26.704" endtime="20250702 18:47:26.712"/>
</kw>
<msg timestamp="20250702 18:47:26.713" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250702 18:47:26.704" endtime="20250702 18:47:26.713"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250702 18:47:26.713" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250702 18:47:26.713" endtime="20250702 18:47:26.713"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:47:26.716" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:47:26.742" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:47:26.742" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:47:26.714" endtime="20250702 18:47:26.742"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:47:26.743" level="INFO"/>
<status status="PASS" starttime="20250702 18:47:26.743" endtime="20250702 18:47:26.743"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:47:26.744" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:47:26.743" endtime="20250702 18:47:26.744"/>
</kw>
<status status="PASS" starttime="20250702 18:47:26.714" endtime="20250702 18:47:26.744"/>
</kw>
<msg timestamp="20250702 18:47:26.744" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:47:26.714" endtime="20250702 18:47:26.744"/>
</kw>
<status status="PASS" starttime="20250702 18:47:26.713" endtime="20250702 18:47:26.744"/>
</kw>
<status status="PASS" starttime="20250702 18:47:26.713" endtime="20250702 18:47:26.744"/>
</kw>
<status status="PASS" starttime="20250702 18:47:26.702" endtime="20250702 18:47:26.744"/>
</kw>
<status status="PASS" starttime="20250702 18:47:26.702" endtime="20250702 18:47:26.744"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>10</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250702 18:47:26.745" level="INFO">${random} = bsS5ibhePm</msg>
<status status="PASS" starttime="20250702 18:47:26.744" endtime="20250702 18:47:26.745"/>
</kw>
<kw name="Freon OCKG" library="freon">
<arg>prefix=${random}</arg>
<arg>args=--replication ONE --replication-type RATIS</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:47:26.748" level="INFO">Running command 'ozone freon ockg  -t 1 -n1 -p bsS5ibhePm --replication ONE --replication-type RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:47:31.948" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:47:31.949" level="INFO">${output} = 2025-07-02 18:47:28,097 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-07-02 18:47:28,256 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250702 18:47:26.746" endtime="20250702 18:47:31.949"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:47:31.950" level="INFO">2025-07-02 18:47:28,097 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-07-02 18:47:28,256 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2025-07-02 18:47:28,256 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2025-07-02 18:47:28,431 [main] INFO freon.BaseFreonGenerator: Executing test with prefix bsS5ibhePm and number-of-tests 1
2025-07-02 18:47:28,496 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2025-07-02 18:47:29,496 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2025-07-02 18:47:30,408 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2025-07-02 18:47:30,476 [pool-2-thread-1] INFO netty.NettyConfigKeys$DataStream: setTlsConf GrpcTlsConfig0-
2025-07-02 18:47:30,497 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2025-07-02 18:47:31,497 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2025-07-02 18:47:31,558 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1, min=1245.638546, max=1245.638546, mean=1245.638546, stddev=0.0, median=1245.638546, p75=1245.638546, p95=1245.638546, p98=1245.638546, p99=1245.638546, p999=1245.638546, mean_rate=0.7470363876845109, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2025-07-02 18:47:31,558 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2025-07-02 18:47:31,558 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2025-07-02 18:47:31,558 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20250702 18:47:31.949" endtime="20250702 18:47:31.950"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:47:31.950" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:47:31.950" endtime="20250702 18:47:31.950"/>
</kw>
<status status="PASS" starttime="20250702 18:47:26.746" endtime="20250702 18:47:31.950"/>
</kw>
<msg timestamp="20250702 18:47:31.950" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:47:26.746" endtime="20250702 18:47:31.950"/>
</kw>
<msg timestamp="20250702 18:47:31.951" level="INFO">${result} = 2025-07-02 18:47:28,097 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-07-02 18:47:28,256 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250702 18:47:26.745" endtime="20250702 18:47:31.951"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250702 18:47:31.951" endtime="20250702 18:47:31.951"/>
</kw>
<status status="PASS" starttime="20250702 18:47:26.745" endtime="20250702 18:47:31.951"/>
</kw>
<kw name="Freon OCKV" library="freon">
<arg>prefix=${random}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockv ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:47:31.956" level="INFO">Running command 'ozone freon ockv  -t 1 -n1 -p bsS5ibhePm  2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:47:37.139" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:47:37.139" level="INFO">${output} = 2025-07-02 18:47:33,301 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-07-02 18:47:33,460 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250702 18:47:31.953" endtime="20250702 18:47:37.139"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:47:37.140" level="INFO">2025-07-02 18:47:33,301 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-07-02 18:47:33,460 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2025-07-02 18:47:33,460 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2025-07-02 18:47:33,654 [main] INFO freon.BaseFreonGenerator: Executing test with prefix bsS5ibhePm and number-of-tests 1
2025-07-02 18:47:33,718 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2025-07-02 18:47:34,718 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2025-07-02 18:47:35,524 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2025-07-02 18:47:35,719 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2025-07-02 18:47:36,720 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2025-07-02 18:47:36,739 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-validate, count=1, min=19.357322, max=19.357322, mean=19.357322, stddev=0.0, median=19.357322, p75=19.357322, p95=19.357322, p98=19.357322, p99=19.357322, p999=19.357322, mean_rate=4.776801467494554, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2025-07-02 18:47:36,740 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2025-07-02 18:47:36,740 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2025-07-02 18:47:36,740 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20250702 18:47:37.140" endtime="20250702 18:47:37.140"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:47:37.141" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:47:37.140" endtime="20250702 18:47:37.141"/>
</kw>
<status status="PASS" starttime="20250702 18:47:31.953" endtime="20250702 18:47:37.141"/>
</kw>
<msg timestamp="20250702 18:47:37.141" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:47:31.953" endtime="20250702 18:47:37.141"/>
</kw>
<msg timestamp="20250702 18:47:37.141" level="INFO">${result} = 2025-07-02 18:47:33,301 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-07-02 18:47:33,460 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250702 18:47:31.952" endtime="20250702 18:47:37.141"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250702 18:47:37.141" endtime="20250702 18:47:37.142"/>
</kw>
<status status="PASS" starttime="20250702 18:47:31.951" endtime="20250702 18:47:37.142"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250702 18:47:26.702" endtime="20250702 18:47:37.142"/>
</test>
<doc>Smoketest for one datanode</doc>
<status status="PASS" starttime="20250702 18:47:26.694" endtime="20250702 18:47:37.142"/>
</suite>
<status status="PASS" starttime="20250702 18:33:24.431" endtime="20250702 18:47:37.145"/>
</suite>
<suite id="s1-s3" name="Security" source="/opt/hadoop/smoketest/security">
<suite id="s1-s3-s1" name="Admin-Cert" source="/opt/hadoop/smoketest/security/admin-cert.robot">
<kw name="Setup Test" type="SETUP">
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get Security Enabled From Config" library="commonlib">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' != ''</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20250702 18:47:37.735" endtime="20250702 18:47:37.735"/>
</kw>
<kw name="Execute" library="os">
<var>${value}</var>
<arg>ozone getconf confKey ozone.security.enabled</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:47:37.739" level="INFO">Running command 'ozone getconf confKey ozone.security.enabled 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:47:38.658" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:47:38.658" level="INFO">${output} = true</msg>
<status status="PASS" starttime="20250702 18:47:37.736" endtime="20250702 18:47:38.658"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:47:38.659" level="INFO">true</msg>
<status status="PASS" starttime="20250702 18:47:38.659" endtime="20250702 18:47:38.659"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:47:38.660" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:47:38.659" endtime="20250702 18:47:38.660"/>
</kw>
<status status="PASS" starttime="20250702 18:47:37.736" endtime="20250702 18:47:38.660"/>
</kw>
<msg timestamp="20250702 18:47:38.660" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:47:37.736" endtime="20250702 18:47:38.660"/>
</kw>
<msg timestamp="20250702 18:47:38.660" level="INFO">${value} = true</msg>
<status status="PASS" starttime="20250702 18:47:37.735" endtime="20250702 18:47:38.660"/>
</kw>
<if>
<branch type="IF" condition="'${value}' != 'true' and '${value}' != 'false'">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>false</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20250702 18:47:38.660" endtime="20250702 18:47:38.660"/>
</kw>
<status status="NOT RUN" starttime="20250702 18:47:38.660" endtime="20250702 18:47:38.661"/>
</branch>
<status status="PASS" starttime="20250702 18:47:38.660" endtime="20250702 18:47:38.661"/>
</if>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${SECURITY_ENABLED}</arg>
<arg>${value}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250702 18:47:38.661" level="INFO">${SECURITY_ENABLED} = true</msg>
<status status="PASS" starttime="20250702 18:47:38.661" endtime="20250702 18:47:38.661"/>
</kw>
<status status="PASS" starttime="20250702 18:47:37.735" endtime="20250702 18:47:38.661"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250702 18:47:38.661" endtime="20250702 18:47:38.661"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:47:38.665" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:47:38.668" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:47:38.668" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250702 18:47:38.662" endtime="20250702 18:47:38.668"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:47:38.669" level="INFO">scm</msg>
<status status="PASS" starttime="20250702 18:47:38.668" endtime="20250702 18:47:38.669"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:47:38.669" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:47:38.669" endtime="20250702 18:47:38.669"/>
</kw>
<status status="PASS" starttime="20250702 18:47:38.662" endtime="20250702 18:47:38.669"/>
</kw>
<msg timestamp="20250702 18:47:38.669" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:47:38.662" endtime="20250702 18:47:38.669"/>
</kw>
<msg timestamp="20250702 18:47:38.670" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250702 18:47:38.662" endtime="20250702 18:47:38.670"/>
</kw>
<msg timestamp="20250702 18:47:38.670" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250702 18:47:38.661" endtime="20250702 18:47:38.670"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250702 18:47:38.670" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250702 18:47:38.670" endtime="20250702 18:47:38.670"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:47:38.673" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:47:38.715" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:47:38.716" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:47:38.671" endtime="20250702 18:47:38.716"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:47:38.716" level="INFO"/>
<status status="PASS" starttime="20250702 18:47:38.716" endtime="20250702 18:47:38.716"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:47:38.717" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:47:38.716" endtime="20250702 18:47:38.717"/>
</kw>
<status status="PASS" starttime="20250702 18:47:38.671" endtime="20250702 18:47:38.717"/>
</kw>
<msg timestamp="20250702 18:47:38.717" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:47:38.671" endtime="20250702 18:47:38.717"/>
</kw>
<status status="PASS" starttime="20250702 18:47:38.671" endtime="20250702 18:47:38.717"/>
</kw>
<status status="PASS" starttime="20250702 18:47:38.670" endtime="20250702 18:47:38.717"/>
</kw>
<status status="PASS" starttime="20250702 18:47:37.735" endtime="20250702 18:47:38.717"/>
</kw>
<status status="PASS" starttime="20250702 18:47:37.735" endtime="20250702 18:47:38.717"/>
</kw>
<status status="PASS" starttime="20250702 18:47:37.734" endtime="20250702 18:47:38.717"/>
</kw>
<test id="s1-s3-s1-t1" name="List valid certificates" line="33">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin cert list</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:47:38.721" level="INFO">Running command 'ozone admin cert list 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:47:41.124" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:47:41.124" level="INFO">${output} = Certificate list:(BatchSize=20, CertCount=7)
SerialNumber      Valid From                     Expiry                         Subject                                                                    ...</msg>
<status status="PASS" starttime="20250702 18:47:38.719" endtime="20250702 18:47:41.124"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:47:41.125" level="INFO">Certificate list:(BatchSize=20, CertCount=7)
SerialNumber      Valid From                     Expiry                         Subject                                                                                                        Issuer                                                                                                        
1                 Wed Jul 02 18:32:37 UTC 2025   Sat Aug 10 18:32:37 UTC 2030   CN=scm@scm,OU=630a2ab3-bd05-4d0c-bec6-7d5ef06a060b,O=CID-f10f35cc-8692-43d7-bd6c-efce227bb505,SERIALNUMBER=1   CN=scm@scm,OU=630a2ab3-bd05-4d0c-bec6-7d5ef06a060b,O=CID-f10f35cc-8692-43d7-bd6c-efce227bb505,SERIALNUMBER=1  
2                 Wed Jul 02 18:32:37 UTC 2025   Sat Aug 10 18:32:37 UTC 2030   CN=scm-sub@scm,OU=630a2ab3-bd05-4d0c-bec6-7d5ef06a060b,O=CID-f10f35cc-8692-43d7-bd6c-efce227bb505,SERIALNUMBER=2 CN=scm@scm,OU=630a2ab3-bd05-4d0c-bec6-7d5ef06a060b,O=CID-f10f35cc-8692-43d7-bd6c-efce227bb505,SERIALNUMBER=1  
3                 Wed Jul 02 18:32:56 UTC 2025   Thu Jul 02 18:32:56 UTC 2026   CN=om,OU=630a2ab3-bd05-4d0c-bec6-7d5ef06a060b,O=CID-f10f35cc-8692-43d7-bd6c-efce227bb505,SERIALNUMBER=3        CN=scm-sub@scm,OU=630a2ab3-bd05-4d0c-bec6-7d5ef06a060b,O=CID-f10f35cc-8692-43d7-bd6c-efce227bb505,SERIALNUMBER=2
4                 Wed Jul 02 18:32:56 UTC 2025   Thu Jul 02 18:32:56 UTC 2026   CN=dn@dn,OU=630a2ab3-bd05-4d0c-bec6-7d5ef06a060b,O=CID-f10f35cc-8692-43d7-bd6c-efce227bb505,SERIALNUMBER=4     CN=scm-sub@scm,OU=630a2ab3-bd05-4d0c-bec6-7d5ef06a060b,O=CID-f10f35cc-8692-43d7-bd6c-efce227bb505,SERIALNUMBER=2
5                 Wed Jul 02 18:32:57 UTC 2025   Thu Jul 02 18:32:57 UTC 2026   CN=dn@dn,OU=630a2ab3-bd05-4d0c-bec6-7d5ef06a060b,O=CID-f10f35cc-8692-43d7-bd6c-efce227bb505,SERIALNUMBER=5     CN=scm-sub@scm,OU=630a2ab3-bd05-4d0c-bec6-7d5ef06a060b,O=CID-f10f35cc-8692-43d7-bd6c-efce227bb505,SERIALNUMBER=2
6                 Wed Jul 02 18:32:57 UTC 2025   Thu Jul 02 18:32:57 UTC 2026   CN=recon@recon,OU=630a2ab3-bd05-4d0c-bec6-7d5ef06a060b,O=CID-f10f35cc-8692-43d7-bd6c-efce227bb505,SERIALNUMBER=6 CN=scm-sub@scm,OU=630a2ab3-bd05-4d0c-bec6-7d5ef06a060b,O=CID-f10f35cc-8692-43d7-bd6c-efce227bb505,SERIALNUMBER=2
7                 Wed Jul 02 18:32:57 UTC 2025   Thu Jul 02 18:32:57 UTC 2026   CN=dn@dn,OU=630a2ab3-bd05-4d0c-bec6-7d5ef06a060b,O=CID-f10f35cc-8692-43d7-bd6c-efce227bb505,SERIALNUMBER=7     CN=scm-sub@scm,OU=630a2ab3-bd05-4d0c-bec6-7d5ef06a060b,O=CID-f10f35cc-8692-43d7-bd6c-efce227bb505,SERIALNUMBER=2</msg>
<status status="PASS" starttime="20250702 18:47:41.125" endtime="20250702 18:47:41.126"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:47:41.126" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:47:41.126" endtime="20250702 18:47:41.126"/>
</kw>
<status status="PASS" starttime="20250702 18:47:38.718" endtime="20250702 18:47:41.126"/>
</kw>
<msg timestamp="20250702 18:47:41.126" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:47:38.718" endtime="20250702 18:47:41.126"/>
</kw>
<msg timestamp="20250702 18:47:41.127" level="INFO">${output} = Certificate list:(BatchSize=20, CertCount=7)
SerialNumber      Valid From                     Expiry                         Subject                                                                    ...</msg>
<status status="PASS" starttime="20250702 18:47:38.718" endtime="20250702 18:47:41.127"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Certificate list:(BatchSize=20,</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250702 18:47:41.127" endtime="20250702 18:47:41.127"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250702 18:47:38.717" endtime="20250702 18:47:41.127"/>
</test>
<test id="s1-s3-s1-t2" name="List revoked certificates" line="38">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin cert list -t revoked</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:47:41.132" level="INFO">Running command 'ozone admin cert list -t revoked 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:47:43.500" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:47:43.500" level="INFO">${output} = Certificate list:(BatchSize=20, CertCount=7)
SerialNumber      Valid From                     Expiry                         Subject                                                                    ...</msg>
<status status="PASS" starttime="20250702 18:47:41.129" endtime="20250702 18:47:43.500"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:47:43.501" level="INFO">Certificate list:(BatchSize=20, CertCount=7)
SerialNumber      Valid From                     Expiry                         Subject                                                                                                        Issuer                                                                                                        
1                 Wed Jul 02 18:32:37 UTC 2025   Sat Aug 10 18:32:37 UTC 2030   CN=scm@scm,OU=630a2ab3-bd05-4d0c-bec6-7d5ef06a060b,O=CID-f10f35cc-8692-43d7-bd6c-efce227bb505,SERIALNUMBER=1   CN=scm@scm,OU=630a2ab3-bd05-4d0c-bec6-7d5ef06a060b,O=CID-f10f35cc-8692-43d7-bd6c-efce227bb505,SERIALNUMBER=1  
2                 Wed Jul 02 18:32:37 UTC 2025   Sat Aug 10 18:32:37 UTC 2030   CN=scm-sub@scm,OU=630a2ab3-bd05-4d0c-bec6-7d5ef06a060b,O=CID-f10f35cc-8692-43d7-bd6c-efce227bb505,SERIALNUMBER=2 CN=scm@scm,OU=630a2ab3-bd05-4d0c-bec6-7d5ef06a060b,O=CID-f10f35cc-8692-43d7-bd6c-efce227bb505,SERIALNUMBER=1  
3                 Wed Jul 02 18:32:56 UTC 2025   Thu Jul 02 18:32:56 UTC 2026   CN=om,OU=630a2ab3-bd05-4d0c-bec6-7d5ef06a060b,O=CID-f10f35cc-8692-43d7-bd6c-efce227bb505,SERIALNUMBER=3        CN=scm-sub@scm,OU=630a2ab3-bd05-4d0c-bec6-7d5ef06a060b,O=CID-f10f35cc-8692-43d7-bd6c-efce227bb505,SERIALNUMBER=2
4                 Wed Jul 02 18:32:56 UTC 2025   Thu Jul 02 18:32:56 UTC 2026   CN=dn@dn,OU=630a2ab3-bd05-4d0c-bec6-7d5ef06a060b,O=CID-f10f35cc-8692-43d7-bd6c-efce227bb505,SERIALNUMBER=4     CN=scm-sub@scm,OU=630a2ab3-bd05-4d0c-bec6-7d5ef06a060b,O=CID-f10f35cc-8692-43d7-bd6c-efce227bb505,SERIALNUMBER=2
5                 Wed Jul 02 18:32:57 UTC 2025   Thu Jul 02 18:32:57 UTC 2026   CN=dn@dn,OU=630a2ab3-bd05-4d0c-bec6-7d5ef06a060b,O=CID-f10f35cc-8692-43d7-bd6c-efce227bb505,SERIALNUMBER=5     CN=scm-sub@scm,OU=630a2ab3-bd05-4d0c-bec6-7d5ef06a060b,O=CID-f10f35cc-8692-43d7-bd6c-efce227bb505,SERIALNUMBER=2
6                 Wed Jul 02 18:32:57 UTC 2025   Thu Jul 02 18:32:57 UTC 2026   CN=recon@recon,OU=630a2ab3-bd05-4d0c-bec6-7d5ef06a060b,O=CID-f10f35cc-8692-43d7-bd6c-efce227bb505,SERIALNUMBER=6 CN=scm-sub@scm,OU=630a2ab3-bd05-4d0c-bec6-7d5ef06a060b,O=CID-f10f35cc-8692-43d7-bd6c-efce227bb505,SERIALNUMBER=2
7                 Wed Jul 02 18:32:57 UTC 2025   Thu Jul 02 18:32:57 UTC 2026   CN=dn@dn,OU=630a2ab3-bd05-4d0c-bec6-7d5ef06a060b,O=CID-f10f35cc-8692-43d7-bd6c-efce227bb505,SERIALNUMBER=7     CN=scm-sub@scm,OU=630a2ab3-bd05-4d0c-bec6-7d5ef06a060b,O=CID-f10f35cc-8692-43d7-bd6c-efce227bb505,SERIALNUMBER=2</msg>
<status status="PASS" starttime="20250702 18:47:43.500" endtime="20250702 18:47:43.501"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:47:43.501" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:47:43.501" endtime="20250702 18:47:43.501"/>
</kw>
<status status="PASS" starttime="20250702 18:47:41.129" endtime="20250702 18:47:43.501"/>
</kw>
<msg timestamp="20250702 18:47:43.501" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:47:41.129" endtime="20250702 18:47:43.502"/>
</kw>
<msg timestamp="20250702 18:47:43.502" level="INFO">${output} = Certificate list:(BatchSize=20, CertCount=7)
SerialNumber      Valid From                     Expiry                         Subject                                                                    ...</msg>
<status status="PASS" starttime="20250702 18:47:41.128" endtime="20250702 18:47:43.502"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Certificate list:(BatchSize=20,</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250702 18:47:43.502" endtime="20250702 18:47:43.502"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250702 18:47:41.128" endtime="20250702 18:47:43.502"/>
</test>
<test id="s1-s3-s1-t3" name="Info of the cert" line="42">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>for id in $(ozone admin cert list -c 1|grep UTC|awk '{print $1}'); do ozone admin cert info $id; done</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:47:43.507" level="INFO">Running command 'for id in $(ozone admin cert list -c 1|grep UTC|awk '{print $1}'); do ozone admin cert info $id; done 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:47:48.165" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:47:48.166" level="INFO">${output} = The certificate list could be longer than the batch size: 1. Please use the "-c" option to see more certificates.
Certificate id: 1
  [0]         Version: 3
         SerialNumber: 1
             Issue...</msg>
<status status="PASS" starttime="20250702 18:47:43.504" endtime="20250702 18:47:48.166"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:47:48.166" level="INFO">The certificate list could be longer than the batch size: 1. Please use the "-c" option to see more certificates.
Certificate id: 1
  [0]         Version: 3
         SerialNumber: 1
             IssuerDN: CN=scm@scm,OU=630a2ab3-bd05-4d0c-bec6-7d5ef06a060b,O=CID-f10f35cc-8692-43d7-bd6c-efce227bb505,SERIALNUMBER=1
           Start Date: Wed Jul 02 18:32:37 UTC 2025
           Final Date: Sat Aug 10 18:32:37 UTC 2030
            SubjectDN: CN=scm@scm,OU=630a2ab3-bd05-4d0c-bec6-7d5ef06a060b,O=CID-f10f35cc-8692-43d7-bd6c-efce227bb505,SERIALNUMBER=1
           Public Key: RSA Public Key [33:ab:ab:40:3c:20:10:f2:c6:91:01:ab:78:2e:3a:80:79:58:46:52],[56:66:d1:a4]
        modulus: e3f352ea197557bb868cc0ccbe1b15169589e26a03291709b897b6fc9dfd908e69fd6ebb25a6f0ac50c729e89a115ed1d063f51e81a47b996747f8aed7a5a8199a58321266be6544870a5b4e71a5ee69df4c6e85bd858b96dac9424b21cb1ec20e92dcee5f80597a2b874e18afbeb2c02e233e549c8e7b67c9bf109bc2393e497d6e3f15866a117b1e567eb0ad79cc6698221d33abbef2849e2729197f7ae80f3f78163849adf094171c1955cdf45a3fc1e67ea07f0b613429060e0af544786bca259a8bd1051b977de2707378c3f0af3daa10774f5430163764253dec91cb6aa486135a6f7073ed546c82a4fdb8796a7e5d1a643d130eb7abde6983703e4607
public exponent: 10001

  Signature Algorithm: SHA256WITHRSA
            Signature: 7119a64c309701dfad8a3458487ff5137c0fd0a5
                       ad179445e854d355e1ff5c55c521675f19cd130e
                       d776a47ac794f39ace7abfdfcc2bc3d032fe4242
                       67cc62aaee13c2c70066c261d57212a0f5553ea9
                       8977f6d8b7d3f2f0c6a8c7f764eeb532cb8477f8
                       ba633c919ca2e3ac3c8edf35de2c6e37e080fe45
                       2560420e37855195fe52861bb358fc0eddac6afc
                       52dee61ef799e91525a64174368fc95d910281fd
                       8899d30ea984c96e1371bc17225b2798e8a47df7
                       7d562aaa6911e2781a9d7adc1ba1606cddc88cd2
                       2d3c5acdcac2deafaa03dd08e4c08c20af173d91
                       4885bd0161f7089e9d7217718ec7b4f93e29d603
                       0d730ceb711e7df0ad72c27f695c7f2c
       Extensions: 
                       critical(true) BasicConstraints: isCa(true)
                       critical(true) KeyUsage: 0x6
                       critical(false) 2.5.29.17 value = Sequence
    Tagged [CONTEXT 7] IMPLICIT
        DER Octet String[4]

</msg>
<status status="PASS" starttime="20250702 18:47:48.166" endtime="20250702 18:47:48.167"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:47:48.167" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:47:48.167" endtime="20250702 18:47:48.167"/>
</kw>
<status status="PASS" starttime="20250702 18:47:43.504" endtime="20250702 18:47:48.167"/>
</kw>
<msg timestamp="20250702 18:47:48.167" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:47:43.504" endtime="20250702 18:47:48.167"/>
</kw>
<msg timestamp="20250702 18:47:48.168" level="INFO">${output} = The certificate list could be longer than the batch size: 1. Please use the "-c" option to see more certificates.
Certificate id: 1
  [0]         Version: 3
         SerialNumber: 1
             Issue...</msg>
<status status="PASS" starttime="20250702 18:47:43.503" endtime="20250702 18:47:48.168"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Certificate not found</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250702 18:47:48.168" endtime="20250702 18:47:48.168"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250702 18:47:43.503" endtime="20250702 18:47:48.168"/>
</test>
<doc>Test for ozone admin cert command</doc>
<status status="PASS" starttime="20250702 18:47:37.709" endtime="20250702 18:47:48.169"/>
</suite>
<suite id="s1-s3-s2" name="Ozone-Secure-Fs" source="/opt/hadoop/smoketest/security/ozone-secure-fs.robot">
<test id="s1-s3-s2-t1" name="Create volume bucket with wrong credentials" line="52">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:47:48.183" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:47:48.188" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:47:48.188" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:47:48.181" endtime="20250702 18:47:48.188"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:47:48.188" level="INFO"/>
<status status="PASS" starttime="20250702 18:47:48.188" endtime="20250702 18:47:48.189"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:47:48.189" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:47:48.189" endtime="20250702 18:47:48.189"/>
</kw>
<status status="PASS" starttime="20250702 18:47:48.180" endtime="20250702 18:47:48.189"/>
</kw>
<msg timestamp="20250702 18:47:48.189" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:47:48.180" endtime="20250702 18:47:48.189"/>
</kw>
<status status="PASS" starttime="20250702 18:47:48.180" endtime="20250702 18:47:48.189"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>ozone sh volume create o3://om/fstest</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:47:48.191" level="INFO">Running command 'ozone sh volume create o3://om/fstest 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:47:50.331" level="INFO">${rc} = 255</msg>
<msg timestamp="20250702 18:47:50.331" level="INFO">${output} = org.apache.hadoop.security.AccessControlException: Client cannot authenticate via:[TOKEN, KERBEROS]</msg>
<status status="PASS" starttime="20250702 18:47:48.189" endtime="20250702 18:47:50.331"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Client cannot authenticate via</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250702 18:47:50.331" endtime="20250702 18:47:50.332"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250702 18:47:48.179" endtime="20250702 18:47:50.332"/>
</test>
<test id="s1-s3-s2-t2" name="Create volume with non-admin user" line="57">
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Get Security Enabled From Config" library="commonlib">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' != ''</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20250702 18:47:50.334" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:47:50.334" endtime="20250702 18:47:50.334"/>
</kw>
<kw name="Execute" library="os">
<var>${value}</var>
<arg>ozone getconf confKey ozone.security.enabled</arg>
<status status="NOT RUN" starttime="20250702 18:47:50.334" endtime="20250702 18:47:50.334"/>
</kw>
<if>
<branch type="IF" condition="'${value}' != 'true' and '${value}' != 'false'">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>false</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20250702 18:47:50.335" endtime="20250702 18:47:50.335"/>
</kw>
<status status="NOT RUN" starttime="20250702 18:47:50.335" endtime="20250702 18:47:50.335"/>
</branch>
<status status="NOT RUN" starttime="20250702 18:47:50.334" endtime="20250702 18:47:50.335"/>
</if>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${SECURITY_ENABLED}</arg>
<arg>${value}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20250702 18:47:50.335" endtime="20250702 18:47:50.335"/>
</kw>
<status status="PASS" starttime="20250702 18:47:50.334" endtime="20250702 18:47:50.335"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250702 18:47:50.335" endtime="20250702 18:47:50.335"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:47:50.339" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:47:50.343" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:47:50.343" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250702 18:47:50.336" endtime="20250702 18:47:50.343"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:47:50.343" level="INFO">scm</msg>
<status status="PASS" starttime="20250702 18:47:50.343" endtime="20250702 18:47:50.344"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:47:50.344" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:47:50.344" endtime="20250702 18:47:50.344"/>
</kw>
<status status="PASS" starttime="20250702 18:47:50.336" endtime="20250702 18:47:50.344"/>
</kw>
<msg timestamp="20250702 18:47:50.344" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:47:50.336" endtime="20250702 18:47:50.344"/>
</kw>
<msg timestamp="20250702 18:47:50.344" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250702 18:47:50.336" endtime="20250702 18:47:50.344"/>
</kw>
<msg timestamp="20250702 18:47:50.344" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250702 18:47:50.335" endtime="20250702 18:47:50.344"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250702 18:47:50.345" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250702 18:47:50.345" endtime="20250702 18:47:50.345"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:47:50.348" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser2.keytab testuser2/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:47:50.373" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:47:50.373" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:47:50.346" endtime="20250702 18:47:50.373"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:47:50.374" level="INFO"/>
<status status="PASS" starttime="20250702 18:47:50.373" endtime="20250702 18:47:50.374"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:47:50.374" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:47:50.374" endtime="20250702 18:47:50.374"/>
</kw>
<status status="PASS" starttime="20250702 18:47:50.346" endtime="20250702 18:47:50.374"/>
</kw>
<msg timestamp="20250702 18:47:50.374" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:47:50.346" endtime="20250702 18:47:50.374"/>
</kw>
<status status="PASS" starttime="20250702 18:47:50.345" endtime="20250702 18:47:50.374"/>
</kw>
<status status="PASS" starttime="20250702 18:47:50.345" endtime="20250702 18:47:50.375"/>
</kw>
<status status="PASS" starttime="20250702 18:47:50.333" endtime="20250702 18:47:50.375"/>
</kw>
<status status="PASS" starttime="20250702 18:47:50.333" endtime="20250702 18:47:50.375"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>ozone sh volume create o3://om/fstest</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:47:50.377" level="INFO">Running command 'ozone sh volume create o3://om/fstest 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:47:53.414" level="INFO">${rc} = 255</msg>
<msg timestamp="20250702 18:47:53.414" level="INFO">${output} = PERMISSION_DENIED User testuser2 doesn't have CREATE permission to access volume Volume:fstest </msg>
<status status="PASS" starttime="20250702 18:47:50.375" endtime="20250702 18:47:53.414"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>doesn't have CREATE permission to access volume</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250702 18:47:53.414" endtime="20250702 18:47:53.415"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250702 18:47:50.333" endtime="20250702 18:47:53.415"/>
</test>
<test id="s1-s3-s2-t3" name="Create bucket with non-admin owner(testuser2)" line="62">
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get Security Enabled From Config" library="commonlib">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' != ''</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20250702 18:47:53.417" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:47:53.417" endtime="20250702 18:47:53.417"/>
</kw>
<kw name="Execute" library="os">
<var>${value}</var>
<arg>ozone getconf confKey ozone.security.enabled</arg>
<status status="NOT RUN" starttime="20250702 18:47:53.417" endtime="20250702 18:47:53.417"/>
</kw>
<if>
<branch type="IF" condition="'${value}' != 'true' and '${value}' != 'false'">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>false</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20250702 18:47:53.417" endtime="20250702 18:47:53.417"/>
</kw>
<status status="NOT RUN" starttime="20250702 18:47:53.417" endtime="20250702 18:47:53.417"/>
</branch>
<status status="NOT RUN" starttime="20250702 18:47:53.417" endtime="20250702 18:47:53.417"/>
</if>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${SECURITY_ENABLED}</arg>
<arg>${value}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20250702 18:47:53.417" endtime="20250702 18:47:53.418"/>
</kw>
<status status="PASS" starttime="20250702 18:47:53.416" endtime="20250702 18:47:53.418"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250702 18:47:53.418" endtime="20250702 18:47:53.418"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:47:53.422" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:47:53.425" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:47:53.425" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250702 18:47:53.419" endtime="20250702 18:47:53.425"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:47:53.426" level="INFO">scm</msg>
<status status="PASS" starttime="20250702 18:47:53.426" endtime="20250702 18:47:53.426"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:47:53.427" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:47:53.426" endtime="20250702 18:47:53.427"/>
</kw>
<status status="PASS" starttime="20250702 18:47:53.419" endtime="20250702 18:47:53.427"/>
</kw>
<msg timestamp="20250702 18:47:53.427" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:47:53.418" endtime="20250702 18:47:53.427"/>
</kw>
<msg timestamp="20250702 18:47:53.427" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250702 18:47:53.418" endtime="20250702 18:47:53.427"/>
</kw>
<msg timestamp="20250702 18:47:53.427" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250702 18:47:53.418" endtime="20250702 18:47:53.427"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250702 18:47:53.427" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250702 18:47:53.427" endtime="20250702 18:47:53.428"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:47:53.431" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:47:53.469" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:47:53.469" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:47:53.429" endtime="20250702 18:47:53.469"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:47:53.470" level="INFO"/>
<status status="PASS" starttime="20250702 18:47:53.469" endtime="20250702 18:47:53.470"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:47:53.470" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:47:53.470" endtime="20250702 18:47:53.470"/>
</kw>
<status status="PASS" starttime="20250702 18:47:53.428" endtime="20250702 18:47:53.471"/>
</kw>
<msg timestamp="20250702 18:47:53.471" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:47:53.428" endtime="20250702 18:47:53.471"/>
</kw>
<status status="PASS" starttime="20250702 18:47:53.428" endtime="20250702 18:47:53.471"/>
</kw>
<status status="PASS" starttime="20250702 18:47:53.428" endtime="20250702 18:47:53.471"/>
</kw>
<status status="PASS" starttime="20250702 18:47:53.416" endtime="20250702 18:47:53.471"/>
</kw>
<status status="PASS" starttime="20250702 18:47:53.416" endtime="20250702 18:47:53.471"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Setup volume names</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Setup volume names">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>2</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250702 18:47:53.472" level="INFO">${random} = 80</msg>
<status status="PASS" starttime="20250702 18:47:53.472" endtime="20250702 18:47:53.472"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume1}</arg>
<arg>fstest${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250702 18:47:53.473" level="INFO">${volume1} = fstest80</msg>
<status status="PASS" starttime="20250702 18:47:53.472" endtime="20250702 18:47:53.473"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume2}</arg>
<arg>fstest2${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250702 18:47:53.474" level="INFO">${volume2} = fstest280</msg>
<status status="PASS" starttime="20250702 18:47:53.473" endtime="20250702 18:47:53.474"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume3}</arg>
<arg>fstest3${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250702 18:47:53.475" level="INFO">${volume3} = fstest380</msg>
<status status="PASS" starttime="20250702 18:47:53.474" endtime="20250702 18:47:53.475"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume4}</arg>
<arg>fstest4${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250702 18:47:53.476" level="INFO">${volume4} = fstest480</msg>
<status status="PASS" starttime="20250702 18:47:53.475" endtime="20250702 18:47:53.476"/>
</kw>
<status status="PASS" starttime="20250702 18:47:53.471" endtime="20250702 18:47:53.476"/>
</kw>
<status status="PASS" starttime="20250702 18:47:53.471" endtime="20250702 18:47:53.476"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create o3://om/${volume4} -u testuser2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:47:53.479" level="INFO">Running command 'ozone sh volume create o3://om/fstest480 -u testuser2 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:47:56.610" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:47:56.610" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:47:53.477" endtime="20250702 18:47:56.611"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:47:56.611" level="INFO"/>
<status status="PASS" starttime="20250702 18:47:56.611" endtime="20250702 18:47:56.611"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:47:56.612" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:47:56.612" endtime="20250702 18:47:56.612"/>
</kw>
<status status="PASS" starttime="20250702 18:47:53.477" endtime="20250702 18:47:56.612"/>
</kw>
<msg timestamp="20250702 18:47:56.612" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:47:53.476" endtime="20250702 18:47:56.612"/>
</kw>
<status status="PASS" starttime="20250702 18:47:53.476" endtime="20250702 18:47:56.612"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Get Security Enabled From Config" library="commonlib">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' != ''</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20250702 18:47:56.613" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:47:56.613" endtime="20250702 18:47:56.613"/>
</kw>
<kw name="Execute" library="os">
<var>${value}</var>
<arg>ozone getconf confKey ozone.security.enabled</arg>
<status status="NOT RUN" starttime="20250702 18:47:56.614" endtime="20250702 18:47:56.614"/>
</kw>
<if>
<branch type="IF" condition="'${value}' != 'true' and '${value}' != 'false'">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>false</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20250702 18:47:56.614" endtime="20250702 18:47:56.614"/>
</kw>
<status status="NOT RUN" starttime="20250702 18:47:56.614" endtime="20250702 18:47:56.614"/>
</branch>
<status status="NOT RUN" starttime="20250702 18:47:56.614" endtime="20250702 18:47:56.614"/>
</if>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${SECURITY_ENABLED}</arg>
<arg>${value}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20250702 18:47:56.614" endtime="20250702 18:47:56.614"/>
</kw>
<status status="PASS" starttime="20250702 18:47:56.613" endtime="20250702 18:47:56.614"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250702 18:47:56.614" endtime="20250702 18:47:56.614"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:47:56.618" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:47:56.622" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:47:56.622" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250702 18:47:56.616" endtime="20250702 18:47:56.622"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:47:56.623" level="INFO">scm</msg>
<status status="PASS" starttime="20250702 18:47:56.622" endtime="20250702 18:47:56.623"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:47:56.623" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:47:56.623" endtime="20250702 18:47:56.623"/>
</kw>
<status status="PASS" starttime="20250702 18:47:56.616" endtime="20250702 18:47:56.623"/>
</kw>
<msg timestamp="20250702 18:47:56.623" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:47:56.615" endtime="20250702 18:47:56.623"/>
</kw>
<msg timestamp="20250702 18:47:56.623" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250702 18:47:56.615" endtime="20250702 18:47:56.623"/>
</kw>
<msg timestamp="20250702 18:47:56.624" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250702 18:47:56.614" endtime="20250702 18:47:56.624"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250702 18:47:56.624" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250702 18:47:56.624" endtime="20250702 18:47:56.624"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:47:56.627" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser2.keytab testuser2/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:47:56.641" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:47:56.641" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:47:56.625" endtime="20250702 18:47:56.641"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:47:56.642" level="INFO"/>
<status status="PASS" starttime="20250702 18:47:56.642" endtime="20250702 18:47:56.642"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:47:56.643" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:47:56.642" endtime="20250702 18:47:56.643"/>
</kw>
<status status="PASS" starttime="20250702 18:47:56.625" endtime="20250702 18:47:56.643"/>
</kw>
<msg timestamp="20250702 18:47:56.643" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:47:56.625" endtime="20250702 18:47:56.643"/>
</kw>
<status status="PASS" starttime="20250702 18:47:56.624" endtime="20250702 18:47:56.643"/>
</kw>
<status status="PASS" starttime="20250702 18:47:56.624" endtime="20250702 18:47:56.643"/>
</kw>
<status status="PASS" starttime="20250702 18:47:56.613" endtime="20250702 18:47:56.643"/>
</kw>
<status status="PASS" starttime="20250702 18:47:56.612" endtime="20250702 18:47:56.643"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket create o3://om/${volume4}/bucket1 --layout FILE_SYSTEM_OPTIMIZED</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:47:56.646" level="INFO">Running command 'ozone sh bucket create o3://om/fstest480/bucket1 --layout FILE_SYSTEM_OPTIMIZED 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:47:59.740" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:47:59.740" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:47:56.644" endtime="20250702 18:47:59.740"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:47:59.741" level="INFO"/>
<status status="PASS" starttime="20250702 18:47:59.740" endtime="20250702 18:47:59.741"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:47:59.741" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:47:59.741" endtime="20250702 18:47:59.741"/>
</kw>
<status status="PASS" starttime="20250702 18:47:56.644" endtime="20250702 18:47:59.741"/>
</kw>
<msg timestamp="20250702 18:47:59.741" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:47:56.644" endtime="20250702 18:47:59.741"/>
</kw>
<msg timestamp="20250702 18:47:59.742" level="INFO">${result} = </msg>
<status status="PASS" starttime="20250702 18:47:56.643" endtime="20250702 18:47:59.742"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250702 18:47:59.742" endtime="20250702 18:47:59.742"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key put ${volume4}/bucket1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:47:59.745" level="INFO">Running command 'ozone sh key put fstest480/bucket1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:48:04.575" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:48:04.576" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:47:59.743" endtime="20250702 18:48:04.576"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:48:04.576" level="INFO"/>
<status status="PASS" starttime="20250702 18:48:04.576" endtime="20250702 18:48:04.577"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:48:04.577" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:48:04.577" endtime="20250702 18:48:04.577"/>
</kw>
<status status="PASS" starttime="20250702 18:47:59.743" endtime="20250702 18:48:04.577"/>
</kw>
<msg timestamp="20250702 18:48:04.577" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:47:59.742" endtime="20250702 18:48:04.577"/>
</kw>
<msg timestamp="20250702 18:48:04.577" level="INFO">${result} = </msg>
<status status="PASS" starttime="20250702 18:47:59.742" endtime="20250702 18:48:04.577"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250702 18:48:04.578" endtime="20250702 18:48:04.578"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${volume4}/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:48:04.582" level="INFO">Running command 'ozone sh key list fstest480/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:48:07.865" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:48:07.865" level="INFO">${output} = [ {
  "volumeName" : "fstest480",
  "bucketName" : "bucket1",
  "name" : "key1",
  "owner" : "testuser2",
  "dataSize" : 15892,
  "creationTime" : "2025-07-02T18:48:02.776Z",
  "modificationTime" : "2...</msg>
<status status="PASS" starttime="20250702 18:48:04.579" endtime="20250702 18:48:07.865"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:48:07.866" level="INFO">[ {
  "volumeName" : "fstest480",
  "bucketName" : "bucket1",
  "name" : "key1",
  "owner" : "testuser2",
  "dataSize" : 15892,
  "creationTime" : "2025-07-02T18:48:02.776Z",
  "modificationTime" : "2025-07-02T18:48:04.151Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "minimumNodes" : 1,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "tags" : { },
  "file" : true
} ]</msg>
<status status="PASS" starttime="20250702 18:48:07.865" endtime="20250702 18:48:07.866"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:48:07.866" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:48:07.866" endtime="20250702 18:48:07.866"/>
</kw>
<status status="PASS" starttime="20250702 18:48:04.578" endtime="20250702 18:48:07.866"/>
</kw>
<msg timestamp="20250702 18:48:07.866" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:48:04.578" endtime="20250702 18:48:07.866"/>
</kw>
<msg timestamp="20250702 18:48:07.866" level="INFO">${result} = [ {
  "volumeName" : "fstest480",
  "bucketName" : "bucket1",
  "name" : "key1",
  "owner" : "testuser2",
  "dataSize" : 15892,
  "creationTime" : "2025-07-02T18:48:02.776Z",
  "modificationTime" : "2...</msg>
<status status="PASS" starttime="20250702 18:48:04.578" endtime="20250702 18:48:07.866"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250702 18:48:07.867" endtime="20250702 18:48:07.867"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key delete ${volume4}/bucket1/key1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:48:07.870" level="INFO">Running command 'ozone sh key delete fstest480/bucket1/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:48:11.155" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:48:11.155" level="INFO">${output} = Key moved inside Trash: /.Trash/testuser2/Current/key1 </msg>
<status status="PASS" starttime="20250702 18:48:07.868" endtime="20250702 18:48:11.155"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:48:11.156" level="INFO">Key moved inside Trash: /.Trash/testuser2/Current/key1 </msg>
<status status="PASS" starttime="20250702 18:48:11.155" endtime="20250702 18:48:11.156"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:48:11.157" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:48:11.156" endtime="20250702 18:48:11.157"/>
</kw>
<status status="PASS" starttime="20250702 18:48:07.868" endtime="20250702 18:48:11.157"/>
</kw>
<msg timestamp="20250702 18:48:11.157" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:48:07.867" endtime="20250702 18:48:11.157"/>
</kw>
<msg timestamp="20250702 18:48:11.157" level="INFO">${result} = Key moved inside Trash: /.Trash/testuser2/Current/key1 </msg>
<status status="PASS" starttime="20250702 18:48:07.867" endtime="20250702 18:48:11.157"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250702 18:48:11.157" endtime="20250702 18:48:11.158"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket delete -r --yes ${volume4}/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:48:11.161" level="INFO">Running command 'ozone sh bucket delete -r --yes fstest480/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:48:14.402" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:48:14.402" level="INFO">${output} = Bucket bucket1 is deleted</msg>
<status status="PASS" starttime="20250702 18:48:11.159" endtime="20250702 18:48:14.402"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:48:14.403" level="INFO">Bucket bucket1 is deleted</msg>
<status status="PASS" starttime="20250702 18:48:14.403" endtime="20250702 18:48:14.403"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:48:14.404" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:48:14.404" endtime="20250702 18:48:14.404"/>
</kw>
<status status="PASS" starttime="20250702 18:48:11.158" endtime="20250702 18:48:14.404"/>
</kw>
<msg timestamp="20250702 18:48:14.404" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:48:11.158" endtime="20250702 18:48:14.404"/>
</kw>
<msg timestamp="20250702 18:48:14.404" level="INFO">${result} = Bucket bucket1 is deleted</msg>
<status status="PASS" starttime="20250702 18:48:11.158" endtime="20250702 18:48:14.405"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250702 18:48:14.405" endtime="20250702 18:48:14.405"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250702 18:47:53.415" endtime="20250702 18:48:14.405"/>
</test>
<test id="s1-s3-s2-t4" name="Create volume bucket with credentials" line="78">
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get Security Enabled From Config" library="commonlib">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' != ''</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20250702 18:48:14.407" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:48:14.407" endtime="20250702 18:48:14.407"/>
</kw>
<kw name="Execute" library="os">
<var>${value}</var>
<arg>ozone getconf confKey ozone.security.enabled</arg>
<status status="NOT RUN" starttime="20250702 18:48:14.407" endtime="20250702 18:48:14.407"/>
</kw>
<if>
<branch type="IF" condition="'${value}' != 'true' and '${value}' != 'false'">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>false</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20250702 18:48:14.408" endtime="20250702 18:48:14.408"/>
</kw>
<status status="NOT RUN" starttime="20250702 18:48:14.407" endtime="20250702 18:48:14.408"/>
</branch>
<status status="NOT RUN" starttime="20250702 18:48:14.407" endtime="20250702 18:48:14.408"/>
</if>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${SECURITY_ENABLED}</arg>
<arg>${value}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20250702 18:48:14.408" endtime="20250702 18:48:14.408"/>
</kw>
<status status="PASS" starttime="20250702 18:48:14.407" endtime="20250702 18:48:14.408"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250702 18:48:14.408" endtime="20250702 18:48:14.408"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:48:14.412" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:48:14.416" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:48:14.416" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250702 18:48:14.410" endtime="20250702 18:48:14.416"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:48:14.417" level="INFO">scm</msg>
<status status="PASS" starttime="20250702 18:48:14.416" endtime="20250702 18:48:14.417"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:48:14.417" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:48:14.417" endtime="20250702 18:48:14.417"/>
</kw>
<status status="PASS" starttime="20250702 18:48:14.409" endtime="20250702 18:48:14.417"/>
</kw>
<msg timestamp="20250702 18:48:14.418" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:48:14.409" endtime="20250702 18:48:14.418"/>
</kw>
<msg timestamp="20250702 18:48:14.418" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250702 18:48:14.409" endtime="20250702 18:48:14.418"/>
</kw>
<msg timestamp="20250702 18:48:14.418" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250702 18:48:14.408" endtime="20250702 18:48:14.418"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250702 18:48:14.418" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250702 18:48:14.418" endtime="20250702 18:48:14.418"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:48:14.422" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:48:14.470" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:48:14.470" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:48:14.420" endtime="20250702 18:48:14.470"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:48:14.471" level="INFO"/>
<status status="PASS" starttime="20250702 18:48:14.471" endtime="20250702 18:48:14.471"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:48:14.472" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:48:14.472" endtime="20250702 18:48:14.472"/>
</kw>
<status status="PASS" starttime="20250702 18:48:14.419" endtime="20250702 18:48:14.472"/>
</kw>
<msg timestamp="20250702 18:48:14.472" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:48:14.419" endtime="20250702 18:48:14.472"/>
</kw>
<status status="PASS" starttime="20250702 18:48:14.419" endtime="20250702 18:48:14.472"/>
</kw>
<status status="PASS" starttime="20250702 18:48:14.418" endtime="20250702 18:48:14.472"/>
</kw>
<status status="PASS" starttime="20250702 18:48:14.406" endtime="20250702 18:48:14.472"/>
</kw>
<status status="PASS" starttime="20250702 18:48:14.406" endtime="20250702 18:48:14.472"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Setup volume names</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Setup volume names">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>2</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250702 18:48:14.473" level="INFO">${random} = 50</msg>
<status status="PASS" starttime="20250702 18:48:14.473" endtime="20250702 18:48:14.473"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume1}</arg>
<arg>fstest${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250702 18:48:14.474" level="INFO">${volume1} = fstest50</msg>
<status status="PASS" starttime="20250702 18:48:14.474" endtime="20250702 18:48:14.474"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume2}</arg>
<arg>fstest2${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250702 18:48:14.474" level="INFO">${volume2} = fstest250</msg>
<status status="PASS" starttime="20250702 18:48:14.474" endtime="20250702 18:48:14.474"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume3}</arg>
<arg>fstest3${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250702 18:48:14.475" level="INFO">${volume3} = fstest350</msg>
<status status="PASS" starttime="20250702 18:48:14.474" endtime="20250702 18:48:14.475"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume4}</arg>
<arg>fstest4${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250702 18:48:14.475" level="INFO">${volume4} = fstest450</msg>
<status status="PASS" starttime="20250702 18:48:14.475" endtime="20250702 18:48:14.475"/>
</kw>
<status status="PASS" starttime="20250702 18:48:14.473" endtime="20250702 18:48:14.475"/>
</kw>
<status status="PASS" starttime="20250702 18:48:14.473" endtime="20250702 18:48:14.475"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create o3://om/${volume1}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:48:14.478" level="INFO">Running command 'ozone sh volume create o3://om/fstest50 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:48:17.653" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:48:17.653" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:48:14.476" endtime="20250702 18:48:17.653"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:48:17.654" level="INFO"/>
<status status="PASS" starttime="20250702 18:48:17.654" endtime="20250702 18:48:17.654"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:48:17.655" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:48:17.655" endtime="20250702 18:48:17.655"/>
</kw>
<status status="PASS" starttime="20250702 18:48:14.476" endtime="20250702 18:48:17.655"/>
</kw>
<msg timestamp="20250702 18:48:17.655" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:48:14.475" endtime="20250702 18:48:17.655"/>
</kw>
<status status="PASS" starttime="20250702 18:48:14.475" endtime="20250702 18:48:17.655"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create o3://om/${volume2}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:48:17.659" level="INFO">Running command 'ozone sh volume create o3://om/fstest250 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:48:20.586" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:48:20.586" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:48:17.656" endtime="20250702 18:48:20.586"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:48:20.587" level="INFO"/>
<status status="PASS" starttime="20250702 18:48:20.587" endtime="20250702 18:48:20.587"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:48:20.588" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:48:20.588" endtime="20250702 18:48:20.588"/>
</kw>
<status status="PASS" starttime="20250702 18:48:17.656" endtime="20250702 18:48:20.588"/>
</kw>
<msg timestamp="20250702 18:48:20.588" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:48:17.656" endtime="20250702 18:48:20.588"/>
</kw>
<status status="PASS" starttime="20250702 18:48:17.655" endtime="20250702 18:48:20.588"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create o3://om/${volume1}/bucket1 --layout FILE_SYSTEM_OPTIMIZED</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:48:20.592" level="INFO">Running command 'ozone sh bucket create o3://om/fstest50/bucket1 --layout FILE_SYSTEM_OPTIMIZED 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:48:23.646" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:48:23.646" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:48:20.590" endtime="20250702 18:48:23.646"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:48:23.647" level="INFO"/>
<status status="PASS" starttime="20250702 18:48:23.646" endtime="20250702 18:48:23.647"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:48:23.647" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:48:23.647" endtime="20250702 18:48:23.647"/>
</kw>
<status status="PASS" starttime="20250702 18:48:20.589" endtime="20250702 18:48:23.647"/>
</kw>
<msg timestamp="20250702 18:48:23.648" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:48:20.589" endtime="20250702 18:48:23.648"/>
</kw>
<status status="PASS" starttime="20250702 18:48:20.589" endtime="20250702 18:48:23.648"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create o3://om/${volume1}/bucket2 --layout FILE_SYSTEM_OPTIMIZED</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:48:23.651" level="INFO">Running command 'ozone sh bucket create o3://om/fstest50/bucket2 --layout FILE_SYSTEM_OPTIMIZED 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:48:26.828" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:48:26.828" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:48:23.649" endtime="20250702 18:48:26.828"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:48:26.829" level="INFO"/>
<status status="PASS" starttime="20250702 18:48:26.828" endtime="20250702 18:48:26.829"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:48:26.829" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:48:26.829" endtime="20250702 18:48:26.829"/>
</kw>
<status status="PASS" starttime="20250702 18:48:23.648" endtime="20250702 18:48:26.829"/>
</kw>
<msg timestamp="20250702 18:48:26.829" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:48:23.648" endtime="20250702 18:48:26.830"/>
</kw>
<status status="PASS" starttime="20250702 18:48:23.648" endtime="20250702 18:48:26.830"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create o3://om/${volume2}/bucket3 --layout FILE_SYSTEM_OPTIMIZED</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:48:26.833" level="INFO">Running command 'ozone sh bucket create o3://om/fstest250/bucket3 --layout FILE_SYSTEM_OPTIMIZED 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:48:29.903" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:48:29.903" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:48:26.831" endtime="20250702 18:48:29.903"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:48:29.904" level="INFO"/>
<status status="PASS" starttime="20250702 18:48:29.903" endtime="20250702 18:48:29.904"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:48:29.904" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:48:29.904" endtime="20250702 18:48:29.904"/>
</kw>
<status status="PASS" starttime="20250702 18:48:26.830" endtime="20250702 18:48:29.904"/>
</kw>
<msg timestamp="20250702 18:48:29.905" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:48:26.830" endtime="20250702 18:48:29.905"/>
</kw>
<status status="PASS" starttime="20250702 18:48:26.830" endtime="20250702 18:48:29.905"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250702 18:48:14.406" endtime="20250702 18:48:29.905"/>
</test>
<test id="s1-s3-s2-t5" name="Check volume from ozonefs" line="88">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone fs -ls o3fs://bucket1.${volume1}/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:48:29.909" level="INFO">Running command 'ozone fs -ls o3fs://bucket1.fstest50/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:48:32.964" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:48:32.964" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:48:29.907" endtime="20250702 18:48:32.964"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:48:32.965" level="INFO"/>
<status status="PASS" starttime="20250702 18:48:32.964" endtime="20250702 18:48:32.965"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:48:32.965" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:48:32.965" endtime="20250702 18:48:32.965"/>
</kw>
<status status="PASS" starttime="20250702 18:48:29.906" endtime="20250702 18:48:32.965"/>
</kw>
<msg timestamp="20250702 18:48:32.966" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:48:29.906" endtime="20250702 18:48:32.966"/>
</kw>
<msg timestamp="20250702 18:48:32.966" level="INFO">${result} = </msg>
<status status="PASS" starttime="20250702 18:48:29.906" endtime="20250702 18:48:32.966"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250702 18:48:29.905" endtime="20250702 18:48:32.966"/>
</test>
<test id="s1-s3-s2-t6" name="Test tmp mount for shared ofs tmp dir" line="91">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone getconf confKey ozone.om.enable.ofs.shared.tmp.dir</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:48:32.970" level="INFO">Running command 'ozone getconf confKey ozone.om.enable.ofs.shared.tmp.dir 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:48:33.893" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:48:33.893" level="INFO">${output} = false</msg>
<status status="PASS" starttime="20250702 18:48:32.967" endtime="20250702 18:48:33.893"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:48:33.894" level="INFO">false</msg>
<status status="PASS" starttime="20250702 18:48:33.893" endtime="20250702 18:48:33.894"/>
</kw>
<msg timestamp="20250702 18:48:33.894" level="INFO">${result} = false</msg>
<status status="PASS" starttime="20250702 18:48:32.967" endtime="20250702 18:48:33.894"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${contains}</var>
<arg>"true" in """${result}"""</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20250702 18:48:33.895" level="INFO">${contains} = False</msg>
<status status="PASS" starttime="20250702 18:48:33.894" endtime="20250702 18:48:33.895"/>
</kw>
<if>
<branch type="IF" condition="${contains} == ${True}">
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20250702 18:48:33.895" endtime="20250702 18:48:33.895"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create /${TMP_MOUNT} -u testuser</arg>
<status status="NOT RUN" starttime="20250702 18:48:33.895" endtime="20250702 18:48:33.895"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create /${TMP_MOUNT}/${TMP_DIR} -u testuser</arg>
<status status="NOT RUN" starttime="20250702 18:48:33.895" endtime="20250702 18:48:33.895"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume addacl /${TMP_MOUNT} -a user:testuser:a,user:testuser2:rw</arg>
<status status="NOT RUN" starttime="20250702 18:48:33.895" endtime="20250702 18:48:33.895"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl /${TMP_MOUNT}/${TMP_DIR} -a user:testuser:a,user:testuser2:rwlc</arg>
<status status="NOT RUN" starttime="20250702 18:48:33.896" endtime="20250702 18:48:33.896"/>
</kw>
<kw name="Format ofs TMPMOUNT">
<var>${tmpdirmount}</var>
<arg>${TMP_MOUNT}</arg>
<status status="NOT RUN" starttime="20250702 18:48:33.896" endtime="20250702 18:48:33.896"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone fs -put ./NOTICE.txt ${tmpdirmount}</arg>
<status status="NOT RUN" starttime="20250702 18:48:33.896" endtime="20250702 18:48:33.896"/>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${result}</arg>
<doc>Verifies that the given item is empty.</doc>
<status status="NOT RUN" starttime="20250702 18:48:33.896" endtime="20250702 18:48:33.896"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20250702 18:48:33.896" endtime="20250702 18:48:33.896"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone fs -put ./LICENSE.txt ${tmpdirmount}</arg>
<status status="NOT RUN" starttime="20250702 18:48:33.896" endtime="20250702 18:48:33.896"/>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${result}</arg>
<doc>Verifies that the given item is empty.</doc>
<status status="NOT RUN" starttime="20250702 18:48:33.896" endtime="20250702 18:48:33.896"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone fs -ls ${tmpdirmount}</arg>
<status status="NOT RUN" starttime="20250702 18:48:33.896" endtime="20250702 18:48:33.896"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250702 18:48:33.897" endtime="20250702 18:48:33.897"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>LICENSE.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250702 18:48:33.897" endtime="20250702 18:48:33.897"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone fs -rm -skipTrash ${tmpdirmount}/NOTICE.txt</arg>
<status status="NOT RUN" starttime="20250702 18:48:33.897" endtime="20250702 18:48:33.897"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>error</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250702 18:48:33.897" endtime="20250702 18:48:33.897"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone fs -rm -skipTrash ${tmpdirmount}/LICENSE.txt</arg>
<status status="NOT RUN" starttime="20250702 18:48:33.897" endtime="20250702 18:48:33.897"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Deleted</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250702 18:48:33.897" endtime="20250702 18:48:33.897"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20250702 18:48:33.897" endtime="20250702 18:48:33.898"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone fs -rm -skipTrash ${tmpdirmount}/NOTICE.txt</arg>
<status status="NOT RUN" starttime="20250702 18:48:33.898" endtime="20250702 18:48:33.898"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Deleted</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250702 18:48:33.898" endtime="20250702 18:48:33.898"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -rm -r -skipTrash ${tmpdirmount}</arg>
<status status="NOT RUN" starttime="20250702 18:48:33.898" endtime="20250702 18:48:33.898"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete /${TMP_MOUNT}</arg>
<status status="NOT RUN" starttime="20250702 18:48:33.898" endtime="20250702 18:48:33.898"/>
</kw>
<status status="NOT RUN" starttime="20250702 18:48:33.895" endtime="20250702 18:48:33.898"/>
</branch>
<status status="PASS" starttime="20250702 18:48:33.895" endtime="20250702 18:48:33.898"/>
</if>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250702 18:48:32.966" endtime="20250702 18:48:33.898"/>
</test>
<doc>Smoke test to start cluster with docker-compose environments.</doc>
<status status="PASS" starttime="20250702 18:47:48.170" endtime="20250702 18:48:33.899"/>
</suite>
<suite id="s1-s3-s3" name="Ozone-Secure-Owner-S3" source="/opt/hadoop/smoketest/security/ozone-secure-owner-s3.robot">
<test id="s1-s3-s3-t1" name="Initialize testuser Credentials" line="51">
<kw name="Initialize User Credentials">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>${username}</arg>
<arg>${keytab}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>${username}</arg>
<arg>${keytab}</arg>
<kw name="Get Security Enabled From Config" library="commonlib">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' != ''</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20250702 18:48:33.923" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:48:33.923" endtime="20250702 18:48:33.923"/>
</kw>
<kw name="Execute" library="os">
<var>${value}</var>
<arg>ozone getconf confKey ozone.security.enabled</arg>
<status status="NOT RUN" starttime="20250702 18:48:33.923" endtime="20250702 18:48:33.923"/>
</kw>
<if>
<branch type="IF" condition="'${value}' != 'true' and '${value}' != 'false'">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>false</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20250702 18:48:33.924" endtime="20250702 18:48:33.924"/>
</kw>
<status status="NOT RUN" starttime="20250702 18:48:33.923" endtime="20250702 18:48:33.924"/>
</branch>
<status status="NOT RUN" starttime="20250702 18:48:33.923" endtime="20250702 18:48:33.924"/>
</if>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${SECURITY_ENABLED}</arg>
<arg>${value}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20250702 18:48:33.924" endtime="20250702 18:48:33.924"/>
</kw>
<status status="PASS" starttime="20250702 18:48:33.923" endtime="20250702 18:48:33.924"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250702 18:48:33.924" endtime="20250702 18:48:33.924"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:48:33.928" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:48:33.931" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:48:33.931" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250702 18:48:33.925" endtime="20250702 18:48:33.931"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:48:33.932" level="INFO">scm</msg>
<status status="PASS" starttime="20250702 18:48:33.932" endtime="20250702 18:48:33.932"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:48:33.932" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:48:33.932" endtime="20250702 18:48:33.933"/>
</kw>
<status status="PASS" starttime="20250702 18:48:33.925" endtime="20250702 18:48:33.933"/>
</kw>
<msg timestamp="20250702 18:48:33.933" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:48:33.925" endtime="20250702 18:48:33.933"/>
</kw>
<msg timestamp="20250702 18:48:33.933" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250702 18:48:33.924" endtime="20250702 18:48:33.933"/>
</kw>
<msg timestamp="20250702 18:48:33.933" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250702 18:48:33.924" endtime="20250702 18:48:33.933"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250702 18:48:33.933" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250702 18:48:33.933" endtime="20250702 18:48:33.933"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:48:33.937" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:48:33.963" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:48:33.963" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:48:33.935" endtime="20250702 18:48:33.963"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:48:33.964" level="INFO"/>
<status status="PASS" starttime="20250702 18:48:33.963" endtime="20250702 18:48:33.964"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:48:33.964" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:48:33.964" endtime="20250702 18:48:33.964"/>
</kw>
<status status="PASS" starttime="20250702 18:48:33.934" endtime="20250702 18:48:33.965"/>
</kw>
<msg timestamp="20250702 18:48:33.965" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:48:33.934" endtime="20250702 18:48:33.965"/>
</kw>
<status status="PASS" starttime="20250702 18:48:33.934" endtime="20250702 18:48:33.965"/>
</kw>
<status status="PASS" starttime="20250702 18:48:33.934" endtime="20250702 18:48:33.965"/>
</kw>
<status status="PASS" starttime="20250702 18:48:33.922" endtime="20250702 18:48:33.965"/>
</kw>
<status status="PASS" starttime="20250702 18:48:33.922" endtime="20250702 18:48:33.965"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y -u ${username}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:48:33.968" level="INFO">Running command 'ozone s3 revokesecret -y -u testuser 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:48:36.743" level="INFO">${rc} = 255</msg>
<msg timestamp="20250702 18:48:36.743" level="INFO">${output} = S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250702 18:48:33.965" endtime="20250702 18:48:36.743"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:48:36.744" level="INFO">S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250702 18:48:36.744" endtime="20250702 18:48:36.744"/>
</kw>
<status status="PASS" starttime="20250702 18:48:33.965" endtime="20250702 18:48:36.745"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone s3 getsecret -u ${username}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:48:36.749" level="INFO">Running command 'ozone s3 getsecret -u testuser 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:48:39.568" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:48:39.568" level="INFO">${output} = awsAccessKey=testuser
awsSecret=147985b6fd40f771c8c46a83221ca65a1721bf993bfb6060f049659b37e0b1e6</msg>
<status status="PASS" starttime="20250702 18:48:36.746" endtime="20250702 18:48:39.568"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:48:39.569" level="INFO">awsAccessKey=testuser
awsSecret=147985b6fd40f771c8c46a83221ca65a1721bf993bfb6060f049659b37e0b1e6</msg>
<status status="PASS" starttime="20250702 18:48:39.568" endtime="20250702 18:48:39.569"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:48:39.569" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:48:39.569" endtime="20250702 18:48:39.569"/>
</kw>
<status status="PASS" starttime="20250702 18:48:36.745" endtime="20250702 18:48:39.569"/>
</kw>
<msg timestamp="20250702 18:48:39.569" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:48:36.745" endtime="20250702 18:48:39.569"/>
</kw>
<msg timestamp="20250702 18:48:39.570" level="INFO">${output} = awsAccessKey=testuser
awsSecret=147985b6fd40f771c8c46a83221ca65a1721bf993bfb6060f049659b37e0b1e6</msg>
<status status="PASS" starttime="20250702 18:48:36.745" endtime="20250702 18:48:39.570"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${accessId}</var>
<arg>${output}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20250702 18:48:39.570" level="INFO">${accessId} = ['testuser']</msg>
<status status="PASS" starttime="20250702 18:48:39.570" endtime="20250702 18:48:39.570"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secretKey}</var>
<arg>${output}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20250702 18:48:39.571" level="INFO">${secretKey} = ['147985b6fd40f771c8c46a83221ca65a1721bf993bfb6060f049659b37e0b1e6']</msg>
<status status="PASS" starttime="20250702 18:48:39.570" endtime="20250702 18:48:39.571"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessId}</var>
<arg>${accessId[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250702 18:48:39.572" level="INFO">${accessId} = testuser</msg>
<status status="PASS" starttime="20250702 18:48:39.571" endtime="20250702 18:48:39.572"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secretKey}</var>
<arg>${secretKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250702 18:48:39.572" level="INFO">${secretKey} = 147985b6fd40f771c8c46a83221ca65a1721bf993bfb6060f049659b37e0b1e6</msg>
<status status="PASS" starttime="20250702 18:48:39.572" endtime="20250702 18:48:39.572"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${ACCESS_ID_${username}}</arg>
<arg>${accessId}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250702 18:48:39.573" level="INFO">${ACCESS_ID_testuser} = testuser</msg>
<status status="PASS" starttime="20250702 18:48:39.573" endtime="20250702 18:48:39.574"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${SECRET_KEY_${username}}</arg>
<arg>${secretKey}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250702 18:48:39.575" level="INFO">${SECRET_KEY_testuser} = 147985b6fd40f771c8c46a83221ca65a1721bf993bfb6060f049659b37e0b1e6</msg>
<status status="PASS" starttime="20250702 18:48:39.574" endtime="20250702 18:48:39.575"/>
</kw>
<status status="PASS" starttime="20250702 18:48:33.922" endtime="20250702 18:48:39.575"/>
</kw>
<kw name="Initialize AWS S3">
<arg>${ACCESS_ID_testuser}</arg>
<arg>${SECRET_KEY_testuser}</arg>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${acess_id}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:48:39.579" level="INFO">Running command 'aws configure set aws_access_key_id testuser 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:48:39.944" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:48:39.944" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:48:39.576" endtime="20250702 18:48:39.944"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:48:39.945" level="INFO"/>
<status status="PASS" starttime="20250702 18:48:39.945" endtime="20250702 18:48:39.945"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:48:39.945" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:48:39.945" endtime="20250702 18:48:39.946"/>
</kw>
<status status="PASS" starttime="20250702 18:48:39.576" endtime="20250702 18:48:39.946"/>
</kw>
<msg timestamp="20250702 18:48:39.946" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:48:39.575" endtime="20250702 18:48:39.946"/>
</kw>
<status status="PASS" starttime="20250702 18:48:39.575" endtime="20250702 18:48:39.946"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret_key}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:48:39.949" level="INFO">Running command 'aws configure set aws_secret_access_key 147985b6fd40f771c8c46a83221ca65a1721bf993bfb6060f049659b37e0b1e6 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:48:40.296" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:48:40.296" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:48:39.947" endtime="20250702 18:48:40.296"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:48:40.297" level="INFO"/>
<status status="PASS" starttime="20250702 18:48:40.297" endtime="20250702 18:48:40.297"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:48:40.298" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:48:40.297" endtime="20250702 18:48:40.298"/>
</kw>
<status status="PASS" starttime="20250702 18:48:39.947" endtime="20250702 18:48:40.298"/>
</kw>
<msg timestamp="20250702 18:48:40.298" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:48:39.946" endtime="20250702 18:48:40.298"/>
</kw>
<status status="PASS" starttime="20250702 18:48:39.946" endtime="20250702 18:48:40.298"/>
</kw>
<status status="PASS" starttime="20250702 18:48:39.575" endtime="20250702 18:48:40.298"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250702 18:48:33.921" endtime="20250702 18:48:40.298"/>
</test>
<test id="s1-s3-s3-t2" name="Create Bucket" line="55">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} create-bucket --bucket bucket-test-owner1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:48:40.303" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-test-owner1 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:48:42.798" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:48:42.798" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-test-owner1"
}</msg>
<status status="PASS" starttime="20250702 18:48:40.300" endtime="20250702 18:48:42.798"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:48:42.799" level="INFO">{
    "Location": "http://s3g:9878/bucket-test-owner1"
}</msg>
<status status="PASS" starttime="20250702 18:48:42.798" endtime="20250702 18:48:42.799"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:48:42.799" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:48:42.799" endtime="20250702 18:48:42.799"/>
</kw>
<status status="PASS" starttime="20250702 18:48:40.300" endtime="20250702 18:48:42.799"/>
</kw>
<msg timestamp="20250702 18:48:42.800" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:48:40.300" endtime="20250702 18:48:42.800"/>
</kw>
<msg timestamp="20250702 18:48:42.800" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-test-owner1"
}</msg>
<status status="PASS" starttime="20250702 18:48:40.299" endtime="20250702 18:48:42.800"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>bucket-test-owner1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250702 18:48:42.800" endtime="20250702 18:48:42.800"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250702 18:48:40.299" endtime="20250702 18:48:42.800"/>
</test>
<test id="s1-s3-s3-t3" name="Verify Owner of Uploaded S3 Object By testuser" line="59">
<kw name="Execute" library="os">
<arg>echo "Randomtext" &gt; /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:48:42.805" level="INFO">Running command 'echo "Randomtext" &gt; /tmp/testfile'.</msg>
<msg timestamp="20250702 18:48:42.807" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:48:42.807" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:48:42.802" endtime="20250702 18:48:42.807"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:48:42.807" level="INFO"/>
<status status="PASS" starttime="20250702 18:48:42.807" endtime="20250702 18:48:42.807"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:48:42.808" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:48:42.807" endtime="20250702 18:48:42.808"/>
</kw>
<status status="PASS" starttime="20250702 18:48:42.802" endtime="20250702 18:48:42.808"/>
</kw>
<msg timestamp="20250702 18:48:42.808" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:48:42.802" endtime="20250702 18:48:42.808"/>
</kw>
<status status="PASS" starttime="20250702 18:48:42.801" endtime="20250702 18:48:42.808"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} put-object --bucket bucket-test-owner1 --key mykey --body /tmp/testfile</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:48:42.811" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket bucket-test-owner1 --key mykey --body /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:48:44.202" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:48:44.202" level="INFO">${output} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20250702 18:48:42.809" endtime="20250702 18:48:44.202"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:48:44.203" level="INFO">{
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20250702 18:48:44.203" endtime="20250702 18:48:44.203"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:48:44.204" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:48:44.204" endtime="20250702 18:48:44.204"/>
</kw>
<status status="PASS" starttime="20250702 18:48:42.808" endtime="20250702 18:48:44.204"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info /s3v/bucket-test-owner1/mykey | jq -r '.owner'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:48:44.208" level="INFO">Running command 'ozone sh key info /s3v/bucket-test-owner1/mykey | jq -r '.owner' 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:48:47.483" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:48:47.483" level="INFO">${output} = testuser</msg>
<status status="PASS" starttime="20250702 18:48:44.205" endtime="20250702 18:48:47.483"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:48:47.484" level="INFO">testuser</msg>
<status status="PASS" starttime="20250702 18:48:47.484" endtime="20250702 18:48:47.484"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:48:47.485" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:48:47.484" endtime="20250702 18:48:47.485"/>
</kw>
<status status="PASS" starttime="20250702 18:48:44.205" endtime="20250702 18:48:47.485"/>
</kw>
<msg timestamp="20250702 18:48:47.485" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:48:44.205" endtime="20250702 18:48:47.485"/>
</kw>
<msg timestamp="20250702 18:48:47.485" level="INFO">${result} = testuser</msg>
<status status="PASS" starttime="20250702 18:48:44.204" endtime="20250702 18:48:47.485"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>testuser</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250702 18:48:47.486" endtime="20250702 18:48:47.486"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250702 18:48:42.801" endtime="20250702 18:48:47.486"/>
</test>
<doc>This test suite verifies the functionality of S3 secure mode in a Ceph cluster environment using docker-compose.</doc>
<status status="PASS" starttime="20250702 18:48:33.901" endtime="20250702 18:48:47.487"/>
</suite>
<suite id="s1-s3-s4" name="Ozone-Secure-S3" source="/opt/hadoop/smoketest/security/ozone-secure-s3.robot">
<test id="s1-s3-s4-t1" name="Secure S3 test Success" line="37">
<kw name="Run Keyword" library="BuiltIn">
<arg>Setup s3 tests</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Setup s3 tests" library="commonawslib">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20250702 18:48:47.498" endtime="20250702 18:48:47.498"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Generate random prefix" library="commonawslib">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250702 18:48:47.499" level="INFO">${randStr} = 1268660490</msg>
<status status="PASS" starttime="20250702 18:48:47.498" endtime="20250702 18:48:47.499"/>
</kw>
<msg timestamp="20250702 18:48:47.499" level="INFO">${random} = ozone-test-1268660490</msg>
<status status="PASS" starttime="20250702 18:48:47.498" endtime="20250702 18:48:47.499"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250702 18:48:47.500" level="INFO">${PREFIX} = ozone-test-1268660490</msg>
<status status="PASS" starttime="20250702 18:48:47.499" endtime="20250702 18:48:47.500"/>
</kw>
<status status="PASS" starttime="20250702 18:48:47.498" endtime="20250702 18:48:47.500"/>
</kw>
<status status="PASS" starttime="20250702 18:48:47.498" endtime="20250702 18:48:47.500"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Install aws cli" library="commonawslib">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>which aws</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:48:47.503" level="INFO">Running command 'which aws 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:48:47.506" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:48:47.506" level="INFO">${output} = /usr/local/bin/aws</msg>
<status status="PASS" starttime="20250702 18:48:47.501" endtime="20250702 18:48:47.506"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20250702 18:48:47.507" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:48:47.507" endtime="20250702 18:48:47.507"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>which apt-get</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="NOT RUN" starttime="20250702 18:48:47.507" endtime="20250702 18:48:47.507"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 debian</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250702 18:48:47.508" endtime="20250702 18:48:47.508"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>yum --help</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="NOT RUN" starttime="20250702 18:48:47.508" endtime="20250702 18:48:47.508"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 centos</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250702 18:48:47.508" endtime="20250702 18:48:47.508"/>
</kw>
<status status="PASS" starttime="20250702 18:48:47.500" endtime="20250702 18:48:47.508"/>
</kw>
<status status="PASS" starttime="20250702 18:48:47.500" endtime="20250702 18:48:47.508"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Get Security Enabled From Config</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Get Security Enabled From Config" library="commonlib">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' != ''</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20250702 18:48:47.509" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:48:47.509" endtime="20250702 18:48:47.509"/>
</kw>
<kw name="Execute" library="os">
<var>${value}</var>
<arg>ozone getconf confKey ozone.security.enabled</arg>
<status status="NOT RUN" starttime="20250702 18:48:47.509" endtime="20250702 18:48:47.509"/>
</kw>
<if>
<branch type="IF" condition="'${value}' != 'true' and '${value}' != 'false'">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>false</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20250702 18:48:47.509" endtime="20250702 18:48:47.509"/>
</kw>
<status status="NOT RUN" starttime="20250702 18:48:47.509" endtime="20250702 18:48:47.509"/>
</branch>
<status status="NOT RUN" starttime="20250702 18:48:47.509" endtime="20250702 18:48:47.509"/>
</if>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${SECURITY_ENABLED}</arg>
<arg>${value}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20250702 18:48:47.509" endtime="20250702 18:48:47.509"/>
</kw>
<status status="PASS" starttime="20250702 18:48:47.508" endtime="20250702 18:48:47.509"/>
</kw>
<status status="PASS" starttime="20250702 18:48:47.508" endtime="20250702 18:48:47.510"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup v4 headers" library="commonawslib">
<kw name="Get Security Enabled From Config" library="commonlib">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' != ''</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20250702 18:48:47.510" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:48:47.510" endtime="20250702 18:48:47.511"/>
</kw>
<kw name="Execute" library="os">
<var>${value}</var>
<arg>ozone getconf confKey ozone.security.enabled</arg>
<status status="NOT RUN" starttime="20250702 18:48:47.511" endtime="20250702 18:48:47.511"/>
</kw>
<if>
<branch type="IF" condition="'${value}' != 'true' and '${value}' != 'false'">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>false</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20250702 18:48:47.511" endtime="20250702 18:48:47.511"/>
</kw>
<status status="NOT RUN" starttime="20250702 18:48:47.511" endtime="20250702 18:48:47.511"/>
</branch>
<status status="NOT RUN" starttime="20250702 18:48:47.511" endtime="20250702 18:48:47.511"/>
</if>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${SECURITY_ENABLED}</arg>
<arg>${value}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20250702 18:48:47.511" endtime="20250702 18:48:47.511"/>
</kw>
<status status="PASS" starttime="20250702 18:48:47.510" endtime="20250702 18:48:47.511"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get Security Enabled From Config" library="commonlib">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' != ''</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20250702 18:48:47.512" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:48:47.512" endtime="20250702 18:48:47.512"/>
</kw>
<kw name="Execute" library="os">
<var>${value}</var>
<arg>ozone getconf confKey ozone.security.enabled</arg>
<status status="NOT RUN" starttime="20250702 18:48:47.512" endtime="20250702 18:48:47.512"/>
</kw>
<if>
<branch type="IF" condition="'${value}' != 'true' and '${value}' != 'false'">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>false</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20250702 18:48:47.513" endtime="20250702 18:48:47.513"/>
</kw>
<status status="NOT RUN" starttime="20250702 18:48:47.513" endtime="20250702 18:48:47.513"/>
</branch>
<status status="NOT RUN" starttime="20250702 18:48:47.513" endtime="20250702 18:48:47.513"/>
</if>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${SECURITY_ENABLED}</arg>
<arg>${value}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20250702 18:48:47.513" endtime="20250702 18:48:47.513"/>
</kw>
<status status="PASS" starttime="20250702 18:48:47.512" endtime="20250702 18:48:47.513"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250702 18:48:47.513" endtime="20250702 18:48:47.513"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:48:47.517" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:48:47.521" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:48:47.521" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250702 18:48:47.514" endtime="20250702 18:48:47.521"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:48:47.522" level="INFO">scm</msg>
<status status="PASS" starttime="20250702 18:48:47.521" endtime="20250702 18:48:47.522"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:48:47.522" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:48:47.522" endtime="20250702 18:48:47.522"/>
</kw>
<status status="PASS" starttime="20250702 18:48:47.514" endtime="20250702 18:48:47.523"/>
</kw>
<msg timestamp="20250702 18:48:47.523" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:48:47.514" endtime="20250702 18:48:47.523"/>
</kw>
<msg timestamp="20250702 18:48:47.523" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250702 18:48:47.514" endtime="20250702 18:48:47.523"/>
</kw>
<msg timestamp="20250702 18:48:47.523" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250702 18:48:47.513" endtime="20250702 18:48:47.523"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250702 18:48:47.524" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250702 18:48:47.523" endtime="20250702 18:48:47.524"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:48:47.527" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:48:47.579" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:48:47.579" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:48:47.525" endtime="20250702 18:48:47.579"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:48:47.580" level="INFO"/>
<status status="PASS" starttime="20250702 18:48:47.580" endtime="20250702 18:48:47.580"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:48:47.581" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:48:47.581" endtime="20250702 18:48:47.581"/>
</kw>
<status status="PASS" starttime="20250702 18:48:47.525" endtime="20250702 18:48:47.581"/>
</kw>
<msg timestamp="20250702 18:48:47.581" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:48:47.524" endtime="20250702 18:48:47.581"/>
</kw>
<status status="PASS" starttime="20250702 18:48:47.524" endtime="20250702 18:48:47.581"/>
</kw>
<status status="PASS" starttime="20250702 18:48:47.524" endtime="20250702 18:48:47.582"/>
</kw>
<status status="PASS" starttime="20250702 18:48:47.511" endtime="20250702 18:48:47.582"/>
</kw>
<status status="PASS" starttime="20250702 18:48:47.511" endtime="20250702 18:48:47.582"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:48:47.586" level="INFO">Running command 'ozone s3 getsecret  2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:48:50.315" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:48:50.315" level="INFO">${output} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=fa60cf58645807af972362647841026e7c1b919820ec70ad28312b5fd32c2a26</msg>
<status status="PASS" starttime="20250702 18:48:47.583" endtime="20250702 18:48:50.315"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:48:50.316" level="INFO">awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=fa60cf58645807af972362647841026e7c1b919820ec70ad28312b5fd32c2a26</msg>
<status status="PASS" starttime="20250702 18:48:50.316" endtime="20250702 18:48:50.316"/>
</kw>
<msg timestamp="20250702 18:48:50.317" level="INFO">${result} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=fa60cf58645807af972362647841026e7c1b919820ec70ad28312b5fd32c2a26</msg>
<status status="PASS" starttime="20250702 18:48:47.582" endtime="20250702 18:48:50.317"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${exists}</var>
<arg>Should Contain</arg>
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20250702 18:48:50.318" level="FAIL">'awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=fa60cf58645807af972362647841026e7c1b919820ec70ad28312b5fd32c2a26' does not contain 'S3_SECRET_ALREADY_EXISTS'</msg>
<status status="FAIL" starttime="20250702 18:48:50.317" endtime="20250702 18:48:50.318"/>
</kw>
<msg timestamp="20250702 18:48:50.318" level="INFO">${exists} = False</msg>
<status status="PASS" starttime="20250702 18:48:50.317" endtime="20250702 18:48:50.318"/>
</kw>
<if>
<branch type="IF" condition="${exists}">
<kw name="Execute" library="os">
<arg>ozone s3 revokesecret -y ${OM_HA_PARAM}</arg>
<status status="NOT RUN" starttime="20250702 18:48:50.319" endtime="20250702 18:48:50.319"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<status status="NOT RUN" starttime="20250702 18:48:50.319" endtime="20250702 18:48:50.319"/>
</kw>
<status status="NOT RUN" starttime="20250702 18:48:50.318" endtime="20250702 18:48:50.319"/>
</branch>
<status status="PASS" starttime="20250702 18:48:50.318" endtime="20250702 18:48:50.319"/>
</if>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20250702 18:48:50.320" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20250702 18:48:50.319" endtime="20250702 18:48:50.320"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20250702 18:48:50.320" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20250702 18:48:50.320" endtime="20250702 18:48:50.320"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20250702 18:48:50.321" level="INFO">${secret} = ['fa60cf58645807af972362647841026e7c1b919820ec70ad28312b5fd32c2a26']</msg>
<status status="PASS" starttime="20250702 18:48:50.320" endtime="20250702 18:48:50.321"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250702 18:48:50.322" level="INFO">${accessKey} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250702 18:48:50.321" endtime="20250702 18:48:50.322"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250702 18:48:50.322" level="INFO">${secret} = fa60cf58645807af972362647841026e7c1b919820ec70ad28312b5fd32c2a26</msg>
<status status="PASS" starttime="20250702 18:48:50.322" endtime="20250702 18:48:50.323"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:48:50.326" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:48:50.675" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:48:50.675" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:48:50.323" endtime="20250702 18:48:50.675"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:48:50.675" level="INFO"/>
<status status="PASS" starttime="20250702 18:48:50.675" endtime="20250702 18:48:50.676"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:48:50.676" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:48:50.676" endtime="20250702 18:48:50.676"/>
</kw>
<status status="PASS" starttime="20250702 18:48:50.323" endtime="20250702 18:48:50.676"/>
</kw>
<msg timestamp="20250702 18:48:50.676" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:48:50.323" endtime="20250702 18:48:50.676"/>
</kw>
<status status="PASS" starttime="20250702 18:48:50.323" endtime="20250702 18:48:50.676"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:48:50.680" level="INFO">Running command 'aws configure set aws_access_key_id testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:48:51.030" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:48:51.030" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:48:50.677" endtime="20250702 18:48:51.030"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:48:51.031" level="INFO"/>
<status status="PASS" starttime="20250702 18:48:51.031" endtime="20250702 18:48:51.031"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:48:51.032" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:48:51.031" endtime="20250702 18:48:51.032"/>
</kw>
<status status="PASS" starttime="20250702 18:48:50.677" endtime="20250702 18:48:51.032"/>
</kw>
<msg timestamp="20250702 18:48:51.032" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:48:50.677" endtime="20250702 18:48:51.032"/>
</kw>
<status status="PASS" starttime="20250702 18:48:50.676" endtime="20250702 18:48:51.032"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:48:51.035" level="INFO">Running command 'aws configure set aws_secret_access_key fa60cf58645807af972362647841026e7c1b919820ec70ad28312b5fd32c2a26 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:48:51.397" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:48:51.397" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:48:51.033" endtime="20250702 18:48:51.397"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:48:51.398" level="INFO"/>
<status status="PASS" starttime="20250702 18:48:51.397" endtime="20250702 18:48:51.398"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:48:51.398" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:48:51.398" endtime="20250702 18:48:51.398"/>
</kw>
<status status="PASS" starttime="20250702 18:48:51.033" endtime="20250702 18:48:51.398"/>
</kw>
<msg timestamp="20250702 18:48:51.398" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:48:51.033" endtime="20250702 18:48:51.398"/>
</kw>
<status status="PASS" starttime="20250702 18:48:51.032" endtime="20250702 18:48:51.398"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:48:51.402" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:48:51.765" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:48:51.765" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:48:51.399" endtime="20250702 18:48:51.765"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:48:51.766" level="INFO"/>
<status status="PASS" starttime="20250702 18:48:51.766" endtime="20250702 18:48:51.766"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:48:51.766" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:48:51.766" endtime="20250702 18:48:51.767"/>
</kw>
<status status="PASS" starttime="20250702 18:48:51.399" endtime="20250702 18:48:51.767"/>
</kw>
<msg timestamp="20250702 18:48:51.767" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:48:51.399" endtime="20250702 18:48:51.767"/>
</kw>
<status status="PASS" starttime="20250702 18:48:51.399" endtime="20250702 18:48:51.767"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.addressing_style ${OZONE_S3_ADDRESS_STYLE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:48:51.770" level="INFO">Running command 'aws configure set default.s3.addressing_style path 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:48:52.120" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:48:52.120" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:48:51.768" endtime="20250702 18:48:52.120"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:48:52.120" level="INFO"/>
<status status="PASS" starttime="20250702 18:48:52.120" endtime="20250702 18:48:52.121"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:48:52.121" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:48:52.121" endtime="20250702 18:48:52.121"/>
</kw>
<status status="PASS" starttime="20250702 18:48:51.768" endtime="20250702 18:48:52.121"/>
</kw>
<msg timestamp="20250702 18:48:52.121" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:48:51.767" endtime="20250702 18:48:52.121"/>
</kw>
<status status="PASS" starttime="20250702 18:48:51.767" endtime="20250702 18:48:52.121"/>
</kw>
<status status="PASS" starttime="20250702 18:48:47.582" endtime="20250702 18:48:52.121"/>
</kw>
<status status="PASS" starttime="20250702 18:48:47.582" endtime="20250702 18:48:52.121"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250702 18:48:52.122" endtime="20250702 18:48:52.122"/>
</kw>
<status status="PASS" starttime="20250702 18:48:47.510" endtime="20250702 18:48:52.122"/>
</kw>
<status status="PASS" starttime="20250702 18:48:47.510" endtime="20250702 18:48:52.122"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<arg>${BUCKET_LAYOUT}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create generated bucket" library="commonawslib">
<arg>${BUCKET_LAYOUT}</arg>
<kw name="Create bucket with layout" library="shell">
<var>${BUCKET}</var>
<arg>s3v</arg>
<arg>${layout}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>10</arg>
<arg>[LOWER]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250702 18:48:52.123" level="INFO">${postfix} = mskknypisz</msg>
<status status="PASS" starttime="20250702 18:48:52.123" endtime="20250702 18:48:52.123"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${bucket}</var>
<arg>bucket-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250702 18:48:52.123" level="INFO">${bucket} = bucket-mskknypisz</msg>
<status status="PASS" starttime="20250702 18:48:52.123" endtime="20250702 18:48:52.124"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket create --layout ${layout} ${volume}/${bucket}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:48:52.127" level="INFO">Running command 'ozone sh bucket create --layout OBJECT_STORE s3v/bucket-mskknypisz 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:48:55.197" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:48:55.197" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:48:52.124" endtime="20250702 18:48:55.197"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:48:55.198" level="INFO"/>
<status status="PASS" starttime="20250702 18:48:55.198" endtime="20250702 18:48:55.198"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:48:55.199" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:48:55.199" endtime="20250702 18:48:55.199"/>
</kw>
<status status="PASS" starttime="20250702 18:48:52.124" endtime="20250702 18:48:55.199"/>
</kw>
<msg timestamp="20250702 18:48:55.199" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:48:52.124" endtime="20250702 18:48:55.199"/>
</kw>
<msg timestamp="20250702 18:48:55.199" level="INFO">${result} = </msg>
<status status="PASS" starttime="20250702 18:48:52.124" endtime="20250702 18:48:55.199"/>
</kw>
<msg timestamp="20250702 18:48:55.199" level="INFO">${BUCKET} = bucket-mskknypisz</msg>
<status status="PASS" starttime="20250702 18:48:52.123" endtime="20250702 18:48:55.199"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250702 18:48:55.200" level="INFO">${BUCKET} = bucket-mskknypisz</msg>
<status status="PASS" starttime="20250702 18:48:55.199" endtime="20250702 18:48:55.200"/>
</kw>
<status status="PASS" starttime="20250702 18:48:52.122" endtime="20250702 18:48:55.200"/>
</kw>
<status status="PASS" starttime="20250702 18:48:52.122" endtime="20250702 18:48:55.200"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250702 18:48:55.200" endtime="20250702 18:48:55.200"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250702 18:48:55.200" endtime="20250702 18:48:55.201"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250702 18:48:55.201" endtime="20250702 18:48:55.201"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250702 18:48:55.201" level="INFO">${OZONE_S3_TESTS_SET_UP} = True</msg>
<status status="PASS" starttime="20250702 18:48:55.201" endtime="20250702 18:48:55.201"/>
</kw>
<status status="PASS" starttime="20250702 18:48:47.497" endtime="20250702 18:48:55.201"/>
</kw>
<status status="PASS" starttime="20250702 18:48:47.496" endtime="20250702 18:48:55.201"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} create-bucket --bucket bucket-test123</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:48:55.205" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-test123 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:48:55.717" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:48:55.717" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-test123"
}</msg>
<status status="PASS" starttime="20250702 18:48:55.202" endtime="20250702 18:48:55.717"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:48:55.718" level="INFO">{
    "Location": "http://s3g:9878/bucket-test123"
}</msg>
<status status="PASS" starttime="20250702 18:48:55.718" endtime="20250702 18:48:55.718"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:48:55.719" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:48:55.718" endtime="20250702 18:48:55.719"/>
</kw>
<status status="PASS" starttime="20250702 18:48:55.202" endtime="20250702 18:48:55.719"/>
</kw>
<msg timestamp="20250702 18:48:55.719" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:48:55.202" endtime="20250702 18:48:55.719"/>
</kw>
<msg timestamp="20250702 18:48:55.719" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-test123"
}</msg>
<status status="PASS" starttime="20250702 18:48:55.201" endtime="20250702 18:48:55.719"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} list-buckets</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:48:55.723" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-buckets 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:48:56.276" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:48:56.276" level="INFO">${output} = {
    "Buckets": [
        {
            "Name": "bucket-mskknypisz",
            "CreationDate": "2025-07-02T18:48:55.107Z"
        },
        {
            "Name": "bucket-test-owner1",
            ...</msg>
<status status="PASS" starttime="20250702 18:48:55.720" endtime="20250702 18:48:56.276"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:48:56.277" level="INFO">{
    "Buckets": [
        {
            "Name": "bucket-mskknypisz",
            "CreationDate": "2025-07-02T18:48:55.107Z"
        },
        {
            "Name": "bucket-test-owner1",
            "CreationDate": "2025-07-02T18:48:42.687Z"
        },
        {
            "Name": "bucket-test123",
            "CreationDate": "2025-07-02T18:48:55.649Z"
        }
    ],
    "Owner": {
        "DisplayName": "om",
        "ID": "bb2bd7ca4a327f84e6cd3979f8fa3828a50a08893c1b68f9d6715352c8d07b93"
    },
    "Prefix": null
}</msg>
<status status="PASS" starttime="20250702 18:48:56.276" endtime="20250702 18:48:56.277"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:48:56.277" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:48:56.277" endtime="20250702 18:48:56.277"/>
</kw>
<status status="PASS" starttime="20250702 18:48:55.720" endtime="20250702 18:48:56.277"/>
</kw>
<msg timestamp="20250702 18:48:56.277" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:48:55.720" endtime="20250702 18:48:56.278"/>
</kw>
<msg timestamp="20250702 18:48:56.278" level="INFO">${output} = {
    "Buckets": [
        {
            "Name": "bucket-mskknypisz",
            "CreationDate": "2025-07-02T18:48:55.107Z"
        },
        {
            "Name": "bucket-test-owner1",
            ...</msg>
<status status="PASS" starttime="20250702 18:48:55.719" endtime="20250702 18:48:56.278"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>bucket-test123</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250702 18:48:56.278" endtime="20250702 18:48:56.278"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250702 18:48:47.496" endtime="20250702 18:48:56.278"/>
</test>
<test id="s1-s3-s4-t2" name="Secure S3 put-object test" line="43">
<kw name="Set Variable" library="BuiltIn">
<var>${testFilePath}</var>
<arg>${TEMPDIR}/${TEST_FILE}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250702 18:48:56.279" level="INFO">${testFilePath} = /tmp/NOTICE.txt</msg>
<status status="PASS" starttime="20250702 18:48:56.279" endtime="20250702 18:48:56.280"/>
</kw>
<kw name="Copy File" library="OperatingSystem">
<arg>${TEST_FILE}</arg>
<arg>${testFilePath}</arg>
<doc>Copies the source file into the destination.</doc>
<msg timestamp="20250702 18:48:56.281" level="INFO" html="true">Copied file from '&lt;a href="file:///opt/hadoop/NOTICE.txt"&gt;/opt/hadoop/NOTICE.txt&lt;/a&gt;' to '&lt;a href="file:///tmp/NOTICE.txt"&gt;/tmp/NOTICE.txt&lt;/a&gt;'.</msg>
<status status="PASS" starttime="20250702 18:48:56.280" endtime="20250702 18:48:56.281"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint ${ENDPOINT_URL} put-object --bucket=bucket-test123 --key=tmp1/tmp2/NOTICE.txt --body=${testFilePath}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:48:56.284" level="INFO">Running command 'aws s3api --endpoint http://s3g:9878 put-object --bucket=bucket-test123 --key=tmp1/tmp2/NOTICE.txt --body=/tmp/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:48:56.878" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:48:56.878" level="INFO">${output} = {
    "ETag": "\"3f8266690dc050a6cf956c2e4c938d17\""
}</msg>
<status status="PASS" starttime="20250702 18:48:56.282" endtime="20250702 18:48:56.878"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:48:56.879" level="INFO">{
    "ETag": "\"3f8266690dc050a6cf956c2e4c938d17\""
}</msg>
<status status="PASS" starttime="20250702 18:48:56.878" endtime="20250702 18:48:56.879"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:48:56.879" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:48:56.879" endtime="20250702 18:48:56.879"/>
</kw>
<status status="PASS" starttime="20250702 18:48:56.281" endtime="20250702 18:48:56.879"/>
</kw>
<msg timestamp="20250702 18:48:56.879" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:48:56.281" endtime="20250702 18:48:56.879"/>
</kw>
<msg timestamp="20250702 18:48:56.879" level="INFO">${output} = {
    "ETag": "\"3f8266690dc050a6cf956c2e4c938d17\""
}</msg>
<status status="PASS" starttime="20250702 18:48:56.281" endtime="20250702 18:48:56.879"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint ${ENDPOINT_URL} list-objects --bucket=bucket-test123</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:48:56.883" level="INFO">Running command 'aws s3api --endpoint http://s3g:9878 list-objects --bucket=bucket-test123 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:48:57.414" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:48:57.414" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "tmp1/tmp2/NOTICE.txt",
            "LastModified": "2025-07-02T18:48:56.816Z",
            "ETag": "\"3f8266690dc050a6cf956c2e4c938d17\"",
           ...</msg>
<status status="PASS" starttime="20250702 18:48:56.881" endtime="20250702 18:48:57.415"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:48:57.415" level="INFO">{
    "Contents": [
        {
            "Key": "tmp1/tmp2/NOTICE.txt",
            "LastModified": "2025-07-02T18:48:56.816Z",
            "ETag": "\"3f8266690dc050a6cf956c2e4c938d17\"",
            "Size": 15892,
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "testuser",
                "ID": "bb2bd7ca4a327f84e6cd3979f8fa3828a50a08893c1b68f9d6715352c8d07b93"
            }
        }
    ],
    "RequestCharged": null,
    "Prefix": null
}</msg>
<status status="PASS" starttime="20250702 18:48:57.415" endtime="20250702 18:48:57.415"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:48:57.416" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:48:57.416" endtime="20250702 18:48:57.416"/>
</kw>
<status status="PASS" starttime="20250702 18:48:56.880" endtime="20250702 18:48:57.416"/>
</kw>
<msg timestamp="20250702 18:48:57.416" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:48:56.880" endtime="20250702 18:48:57.416"/>
</kw>
<msg timestamp="20250702 18:48:57.416" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "tmp1/tmp2/NOTICE.txt",
            "LastModified": "2025-07-02T18:48:56.816Z",
            "ETag": "\"3f8266690dc050a6cf956c2e4c938d17\"",
           ...</msg>
<status status="PASS" starttime="20250702 18:48:56.880" endtime="20250702 18:48:57.416"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>tmp1/tmp2/NOTICE.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250702 18:48:57.417" endtime="20250702 18:48:57.417"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint ${ENDPOINT_URL} put-object --bucket=bucket-test123 --key=tmp3//tmp4/NOTICE.txt --body=${testFilePath}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:48:57.420" level="INFO">Running command 'aws s3api --endpoint http://s3g:9878 put-object --bucket=bucket-test123 --key=tmp3//tmp4/NOTICE.txt --body=/tmp/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:48:57.972" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:48:57.972" level="INFO">${output} = {
    "ETag": "\"3f8266690dc050a6cf956c2e4c938d17\""
}</msg>
<status status="PASS" starttime="20250702 18:48:57.418" endtime="20250702 18:48:57.972"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:48:57.973" level="INFO">{
    "ETag": "\"3f8266690dc050a6cf956c2e4c938d17\""
}</msg>
<status status="PASS" starttime="20250702 18:48:57.972" endtime="20250702 18:48:57.973"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:48:57.973" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:48:57.973" endtime="20250702 18:48:57.973"/>
</kw>
<status status="PASS" starttime="20250702 18:48:57.418" endtime="20250702 18:48:57.973"/>
</kw>
<msg timestamp="20250702 18:48:57.973" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:48:57.417" endtime="20250702 18:48:57.974"/>
</kw>
<msg timestamp="20250702 18:48:57.974" level="INFO">${output} = {
    "ETag": "\"3f8266690dc050a6cf956c2e4c938d17\""
}</msg>
<status status="PASS" starttime="20250702 18:48:57.417" endtime="20250702 18:48:57.974"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint ${ENDPOINT_URL} list-objects --bucket=bucket-test123</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:48:57.977" level="INFO">Running command 'aws s3api --endpoint http://s3g:9878 list-objects --bucket=bucket-test123 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:48:58.488" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:48:58.488" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "tmp1/tmp2/NOTICE.txt",
            "LastModified": "2025-07-02T18:48:56.816Z",
            "ETag": "\"3f8266690dc050a6cf956c2e4c938d17\"",
           ...</msg>
<status status="PASS" starttime="20250702 18:48:57.975" endtime="20250702 18:48:58.488"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:48:58.489" level="INFO">{
    "Contents": [
        {
            "Key": "tmp1/tmp2/NOTICE.txt",
            "LastModified": "2025-07-02T18:48:56.816Z",
            "ETag": "\"3f8266690dc050a6cf956c2e4c938d17\"",
            "Size": 15892,
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "testuser",
                "ID": "bb2bd7ca4a327f84e6cd3979f8fa3828a50a08893c1b68f9d6715352c8d07b93"
            }
        },
        {
            "Key": "tmp3//tmp4/NOTICE.txt",
            "LastModified": "2025-07-02T18:48:57.910Z",
            "ETag": "\"3f8266690dc050a6cf956c2e4c938d17\"",
            "Size": 15892,
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "testuser",
                "ID": "bb2bd7ca4a327f84e6cd3979f8fa3828a50a08893c1b68f9d6715352c8d07b93"
            }
        }
    ],
    "RequestCharged": null,
    "Prefix": null
}</msg>
<status status="PASS" starttime="20250702 18:48:58.488" endtime="20250702 18:48:58.489"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:48:58.489" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:48:58.489" endtime="20250702 18:48:58.489"/>
</kw>
<status status="PASS" starttime="20250702 18:48:57.975" endtime="20250702 18:48:58.490"/>
</kw>
<msg timestamp="20250702 18:48:58.490" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:48:57.974" endtime="20250702 18:48:58.490"/>
</kw>
<msg timestamp="20250702 18:48:58.490" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "tmp1/tmp2/NOTICE.txt",
            "LastModified": "2025-07-02T18:48:56.816Z",
            "ETag": "\"3f8266690dc050a6cf956c2e4c938d17\"",
           ...</msg>
<status status="PASS" starttime="20250702 18:48:57.974" endtime="20250702 18:48:58.490"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>tmp3//tmp4/NOTICE.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250702 18:48:58.490" endtime="20250702 18:48:58.490"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint ${ENDPOINT_URL} put-object --bucket=bucket-test123 --key=//tmp5/tmp6/NOTICE.txt --body=${testFilePath}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:48:58.494" level="INFO">Running command 'aws s3api --endpoint http://s3g:9878 put-object --bucket=bucket-test123 --key=//tmp5/tmp6/NOTICE.txt --body=/tmp/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:48:59.045" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:48:59.045" level="INFO">${output} = {
    "ETag": "\"3f8266690dc050a6cf956c2e4c938d17\""
}</msg>
<status status="PASS" starttime="20250702 18:48:58.491" endtime="20250702 18:48:59.045"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:48:59.046" level="INFO">{
    "ETag": "\"3f8266690dc050a6cf956c2e4c938d17\""
}</msg>
<status status="PASS" starttime="20250702 18:48:59.046" endtime="20250702 18:48:59.046"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:48:59.047" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:48:59.046" endtime="20250702 18:48:59.047"/>
</kw>
<status status="PASS" starttime="20250702 18:48:58.491" endtime="20250702 18:48:59.047"/>
</kw>
<msg timestamp="20250702 18:48:59.047" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:48:58.491" endtime="20250702 18:48:59.047"/>
</kw>
<msg timestamp="20250702 18:48:59.047" level="INFO">${output} = {
    "ETag": "\"3f8266690dc050a6cf956c2e4c938d17\""
}</msg>
<status status="PASS" starttime="20250702 18:48:58.490" endtime="20250702 18:48:59.047"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint ${ENDPOINT_URL} list-objects --bucket=bucket-test123</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:48:59.050" level="INFO">Running command 'aws s3api --endpoint http://s3g:9878 list-objects --bucket=bucket-test123 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:48:59.563" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:48:59.563" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "//tmp5/tmp6/NOTICE.txt",
            "LastModified": "2025-07-02T18:48:58.976Z",
            "ETag": "\"3f8266690dc050a6cf956c2e4c938d17\"",
         ...</msg>
<status status="PASS" starttime="20250702 18:48:59.048" endtime="20250702 18:48:59.563"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:48:59.564" level="INFO">{
    "Contents": [
        {
            "Key": "//tmp5/tmp6/NOTICE.txt",
            "LastModified": "2025-07-02T18:48:58.976Z",
            "ETag": "\"3f8266690dc050a6cf956c2e4c938d17\"",
            "Size": 15892,
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "testuser",
                "ID": "bb2bd7ca4a327f84e6cd3979f8fa3828a50a08893c1b68f9d6715352c8d07b93"
            }
        },
        {
            "Key": "tmp1/tmp2/NOTICE.txt",
            "LastModified": "2025-07-02T18:48:56.816Z",
            "ETag": "\"3f8266690dc050a6cf956c2e4c938d17\"",
            "Size": 15892,
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "testuser",
                "ID": "bb2bd7ca4a327f84e6cd3979f8fa3828a50a08893c1b68f9d6715352c8d07b93"
            }
        },
        {
            "Key": "tmp3//tmp4/NOTICE.txt",
            "LastModified": "2025-07-02T18:48:57.910Z",
            "ETag": "\"3f8266690dc050a6cf956c2e4c938d17\"",
            "Size": 15892,
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "testuser",
                "ID": "bb2bd7ca4a327f84e6cd3979f8fa3828a50a08893c1b68f9d6715352c8d07b93"
            }
        }
    ],
    "RequestCharged": null,
    "Prefix": null
}</msg>
<status status="PASS" starttime="20250702 18:48:59.564" endtime="20250702 18:48:59.564"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:48:59.565" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:48:59.565" endtime="20250702 18:48:59.565"/>
</kw>
<status status="PASS" starttime="20250702 18:48:59.048" endtime="20250702 18:48:59.565"/>
</kw>
<msg timestamp="20250702 18:48:59.565" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:48:59.048" endtime="20250702 18:48:59.565"/>
</kw>
<msg timestamp="20250702 18:48:59.565" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "//tmp5/tmp6/NOTICE.txt",
            "LastModified": "2025-07-02T18:48:58.976Z",
            "ETag": "\"3f8266690dc050a6cf956c2e4c938d17\"",
         ...</msg>
<status status="PASS" starttime="20250702 18:48:59.047" endtime="20250702 18:48:59.566"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>//tmp5/tmp6/NOTICE.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250702 18:48:59.566" endtime="20250702 18:48:59.566"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250702 18:48:56.279" endtime="20250702 18:48:59.566"/>
</test>
<test id="s1-s3-s4-t3" name="Secure S3 test Failure" line="56">
<kw name="Run Keyword" library="BuiltIn">
<arg>Setup dummy credentials for S3</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Setup dummy credentials for S3" library="commonawslib">
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:48:59.571" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:48:59.926" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:48:59.926" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:48:59.568" endtime="20250702 18:48:59.927"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:48:59.927" level="INFO"/>
<status status="PASS" starttime="20250702 18:48:59.927" endtime="20250702 18:48:59.927"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:48:59.928" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:48:59.928" endtime="20250702 18:48:59.928"/>
</kw>
<status status="PASS" starttime="20250702 18:48:59.568" endtime="20250702 18:48:59.928"/>
</kw>
<msg timestamp="20250702 18:48:59.928" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:48:59.568" endtime="20250702 18:48:59.928"/>
</kw>
<status status="PASS" starttime="20250702 18:48:59.568" endtime="20250702 18:48:59.928"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:48:59.932" level="INFO">Running command 'aws configure set aws_access_key_id dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:49:00.306" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:49:00.306" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:48:59.930" endtime="20250702 18:49:00.306"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:49:00.307" level="INFO"/>
<status status="PASS" starttime="20250702 18:49:00.306" endtime="20250702 18:49:00.307"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:49:00.307" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:49:00.307" endtime="20250702 18:49:00.307"/>
</kw>
<status status="PASS" starttime="20250702 18:48:59.929" endtime="20250702 18:49:00.307"/>
</kw>
<msg timestamp="20250702 18:49:00.308" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:48:59.929" endtime="20250702 18:49:00.308"/>
</kw>
<status status="PASS" starttime="20250702 18:48:59.928" endtime="20250702 18:49:00.308"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:49:00.311" level="INFO">Running command 'aws configure set aws_secret_access_key dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:49:00.680" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:49:00.680" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:49:00.309" endtime="20250702 18:49:00.680"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:49:00.681" level="INFO"/>
<status status="PASS" starttime="20250702 18:49:00.681" endtime="20250702 18:49:00.682"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:49:00.682" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:49:00.682" endtime="20250702 18:49:00.682"/>
</kw>
<status status="PASS" starttime="20250702 18:49:00.308" endtime="20250702 18:49:00.682"/>
</kw>
<msg timestamp="20250702 18:49:00.682" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:49:00.308" endtime="20250702 18:49:00.682"/>
</kw>
<status status="PASS" starttime="20250702 18:49:00.308" endtime="20250702 18:49:00.682"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:49:00.686" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:49:01.058" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:49:01.058" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:49:00.683" endtime="20250702 18:49:01.058"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:49:01.059" level="INFO"/>
<status status="PASS" starttime="20250702 18:49:01.059" endtime="20250702 18:49:01.059"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:49:01.060" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:49:01.059" endtime="20250702 18:49:01.060"/>
</kw>
<status status="PASS" starttime="20250702 18:49:00.683" endtime="20250702 18:49:01.060"/>
</kw>
<msg timestamp="20250702 18:49:01.060" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:49:00.683" endtime="20250702 18:49:01.060"/>
</kw>
<status status="PASS" starttime="20250702 18:49:00.682" endtime="20250702 18:49:01.060"/>
</kw>
<status status="PASS" starttime="20250702 18:48:59.567" endtime="20250702 18:49:01.060"/>
</kw>
<status status="PASS" starttime="20250702 18:48:59.567" endtime="20250702 18:49:01.060"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${result}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} create-bucket --bucket bucket-test123</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:49:01.063" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-test123 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:49:01.687" level="INFO">${rc} = 255</msg>
<msg timestamp="20250702 18:49:01.687" level="INFO">${result} = 
An error occurred (AccessDenied) when calling the CreateBucket operation: User doesn't have the right to access this resource.</msg>
<status status="PASS" starttime="20250702 18:49:01.060" endtime="20250702 18:49:01.687"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${rc} &gt; 0</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20250702 18:49:01.688" endtime="20250702 18:49:01.689"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250702 18:48:59.567" endtime="20250702 18:49:01.689"/>
</test>
<doc>Smoke test to start cluster with docker-compose environments.</doc>
<status status="PASS" starttime="20250702 18:48:47.488" endtime="20250702 18:49:01.690"/>
</suite>
<suite id="s1-s3-s5" name="Ozone-Secure-Tenant" source="/opt/hadoop/smoketest/security/ozone-secure-tenant.robot">
<test id="s1-s3-s5-t1" name="Create Tenant Success with Cluster Admin" line="30">
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get Security Enabled From Config" library="commonlib">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' != ''</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20250702 18:49:01.702" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:49:01.702" endtime="20250702 18:49:01.703"/>
</kw>
<kw name="Execute" library="os">
<var>${value}</var>
<arg>ozone getconf confKey ozone.security.enabled</arg>
<status status="NOT RUN" starttime="20250702 18:49:01.703" endtime="20250702 18:49:01.703"/>
</kw>
<if>
<branch type="IF" condition="'${value}' != 'true' and '${value}' != 'false'">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>false</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20250702 18:49:01.703" endtime="20250702 18:49:01.703"/>
</kw>
<status status="NOT RUN" starttime="20250702 18:49:01.703" endtime="20250702 18:49:01.703"/>
</branch>
<status status="NOT RUN" starttime="20250702 18:49:01.703" endtime="20250702 18:49:01.703"/>
</if>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${SECURITY_ENABLED}</arg>
<arg>${value}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20250702 18:49:01.703" endtime="20250702 18:49:01.703"/>
</kw>
<status status="PASS" starttime="20250702 18:49:01.702" endtime="20250702 18:49:01.703"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250702 18:49:01.703" endtime="20250702 18:49:01.704"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:49:01.707" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:49:01.711" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:49:01.711" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250702 18:49:01.705" endtime="20250702 18:49:01.711"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:49:01.711" level="INFO">scm</msg>
<status status="PASS" starttime="20250702 18:49:01.711" endtime="20250702 18:49:01.712"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:49:01.712" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:49:01.712" endtime="20250702 18:49:01.712"/>
</kw>
<status status="PASS" starttime="20250702 18:49:01.704" endtime="20250702 18:49:01.712"/>
</kw>
<msg timestamp="20250702 18:49:01.712" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:49:01.704" endtime="20250702 18:49:01.712"/>
</kw>
<msg timestamp="20250702 18:49:01.713" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250702 18:49:01.704" endtime="20250702 18:49:01.713"/>
</kw>
<msg timestamp="20250702 18:49:01.713" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250702 18:49:01.704" endtime="20250702 18:49:01.713"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250702 18:49:01.713" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250702 18:49:01.713" endtime="20250702 18:49:01.713"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:49:01.716" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:49:01.742" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:49:01.742" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:49:01.714" endtime="20250702 18:49:01.742"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:49:01.743" level="INFO"/>
<status status="PASS" starttime="20250702 18:49:01.742" endtime="20250702 18:49:01.743"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:49:01.743" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:49:01.743" endtime="20250702 18:49:01.743"/>
</kw>
<status status="PASS" starttime="20250702 18:49:01.714" endtime="20250702 18:49:01.743"/>
</kw>
<msg timestamp="20250702 18:49:01.744" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:49:01.714" endtime="20250702 18:49:01.744"/>
</kw>
<status status="PASS" starttime="20250702 18:49:01.713" endtime="20250702 18:49:01.744"/>
</kw>
<status status="PASS" starttime="20250702 18:49:01.713" endtime="20250702 18:49:01.744"/>
</kw>
<status status="PASS" starttime="20250702 18:49:01.702" endtime="20250702 18:49:01.744"/>
</kw>
<status status="PASS" starttime="20250702 18:49:01.701" endtime="20250702 18:49:01.744"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone tenant --verbose create tenantone</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:49:01.748" level="INFO">Running command 'ozone tenant --verbose create tenantone 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:49:04.737" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:49:04.737" level="INFO">${output} = {
  "tenantId" : "tenantone"
}</msg>
<status status="PASS" starttime="20250702 18:49:01.745" endtime="20250702 18:49:04.737"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:49:04.738" level="INFO">{
  "tenantId" : "tenantone"
}</msg>
<status status="PASS" starttime="20250702 18:49:04.737" endtime="20250702 18:49:04.738"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:49:04.738" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:49:04.738" endtime="20250702 18:49:04.738"/>
</kw>
<status status="PASS" starttime="20250702 18:49:01.745" endtime="20250702 18:49:04.738"/>
</kw>
<msg timestamp="20250702 18:49:04.738" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:49:01.744" endtime="20250702 18:49:04.738"/>
</kw>
<msg timestamp="20250702 18:49:04.739" level="INFO">${output} = {
  "tenantId" : "tenantone"
}</msg>
<status status="PASS" starttime="20250702 18:49:01.744" endtime="20250702 18:49:04.739"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"tenantId" : "tenantone"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250702 18:49:04.739" endtime="20250702 18:49:04.739"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250702 18:49:01.701" endtime="20250702 18:49:04.739"/>
</test>
<test id="s1-s3-s5-t2" name="Assign User Success with Cluster Admin" line="35">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone tenant --verbose user assign testuser --tenant=tenantone</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:49:04.743" level="INFO">Running command 'ozone tenant --verbose user assign testuser --tenant=tenantone 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:49:07.684" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:49:07.684" level="INFO">${output} = export AWS_ACCESS_KEY_ID='tenantone$testuser'
export AWS_SECRET_ACCESS_KEY='ef946e1e63eae56f83e8be968c51741cb2443a2ee49c6e3ab1e6c30894034bce'
Assigned 'testuser' to 'tenantone' with accessId 'tenanton...</msg>
<status status="PASS" starttime="20250702 18:49:04.741" endtime="20250702 18:49:07.684"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:49:07.685" level="INFO">export AWS_ACCESS_KEY_ID='tenantone$testuser'
export AWS_SECRET_ACCESS_KEY='ef946e1e63eae56f83e8be968c51741cb2443a2ee49c6e3ab1e6c30894034bce'
Assigned 'testuser' to 'tenantone' with accessId 'tenantone$testuser'.</msg>
<status status="PASS" starttime="20250702 18:49:07.684" endtime="20250702 18:49:07.685"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:49:07.685" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:49:07.685" endtime="20250702 18:49:07.685"/>
</kw>
<status status="PASS" starttime="20250702 18:49:04.741" endtime="20250702 18:49:07.686"/>
</kw>
<msg timestamp="20250702 18:49:07.686" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:49:04.740" endtime="20250702 18:49:07.686"/>
</kw>
<msg timestamp="20250702 18:49:07.686" level="INFO">${output} = export AWS_ACCESS_KEY_ID='tenantone$testuser'
export AWS_SECRET_ACCESS_KEY='ef946e1e63eae56f83e8be968c51741cb2443a2ee49c6e3ab1e6c30894034bce'
Assigned 'testuser' to 'tenantone' with accessId 'tenanton...</msg>
<status status="PASS" starttime="20250702 18:49:04.740" endtime="20250702 18:49:07.686"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Assigned 'testuser' to 'tenantone'</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250702 18:49:07.686" endtime="20250702 18:49:07.686"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${accessId}</var>
<arg>${output}</arg>
<arg>(?&lt;=export AWS_ACCESS_KEY_ID=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20250702 18:49:07.687" level="INFO">${accessId} = ["'tenantone$testuser'"]</msg>
<status status="PASS" starttime="20250702 18:49:07.686" endtime="20250702 18:49:07.687"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secretKey}</var>
<arg>${output}</arg>
<arg>(?&lt;=export AWS_SECRET_ACCESS_KEY=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20250702 18:49:07.687" level="INFO">${secretKey} = ["'ef946e1e63eae56f83e8be968c51741cb2443a2ee49c6e3ab1e6c30894034bce'"]</msg>
<status status="PASS" starttime="20250702 18:49:07.687" endtime="20250702 18:49:07.687"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessId}</var>
<arg>${accessId[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250702 18:49:07.688" level="INFO">${accessId} = 'tenantone$testuser'</msg>
<status status="PASS" starttime="20250702 18:49:07.687" endtime="20250702 18:49:07.688"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secretKey}</var>
<arg>${secretKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250702 18:49:07.689" level="INFO">${secretKey} = 'ef946e1e63eae56f83e8be968c51741cb2443a2ee49c6e3ab1e6c30894034bce'</msg>
<status status="PASS" starttime="20250702 18:49:07.688" endtime="20250702 18:49:07.689"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${ACCESS_ID}</arg>
<arg>${accessId}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250702 18:49:07.689" level="INFO">${ACCESS_ID} = 'tenantone$testuser'</msg>
<status status="PASS" starttime="20250702 18:49:07.689" endtime="20250702 18:49:07.689"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${SECRET_KEY}</arg>
<arg>${secretKey}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250702 18:49:07.690" level="INFO">${SECRET_KEY} = 'ef946e1e63eae56f83e8be968c51741cb2443a2ee49c6e3ab1e6c30894034bce'</msg>
<status status="PASS" starttime="20250702 18:49:07.689" endtime="20250702 18:49:07.690"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250702 18:49:04.740" endtime="20250702 18:49:07.690"/>
</test>
<test id="s1-s3-s5-t3" name="Assign User Failure to Non-existent Tenant" line="45">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>ozone tenant user assign testuser --tenant=thistenantdoesnotexist</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:49:07.693" level="INFO">Running command 'ozone tenant user assign testuser --tenant=thistenantdoesnotexist 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:49:10.551" level="INFO">${rc} = 255</msg>
<msg timestamp="20250702 18:49:10.551" level="INFO">${output} = TENANT_NOT_FOUND Tenant 'thistenantdoesnotexist' doesn't exist.</msg>
<status status="PASS" starttime="20250702 18:49:07.691" endtime="20250702 18:49:10.551"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Tenant 'thistenantdoesnotexist' doesn't exist</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250702 18:49:10.551" endtime="20250702 18:49:10.552"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250702 18:49:07.690" endtime="20250702 18:49:10.552"/>
</test>
<test id="s1-s3-s5-t4" name="GetUserInfo Success" line="49">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone tenant user info testuser</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:49:10.556" level="INFO">Running command 'ozone tenant user info testuser 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:49:13.460" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:49:13.460" level="INFO">${output} = User 'testuser' is assigned to:
- Tenant 'tenantone' with accessId 'tenantone$testuser'</msg>
<status status="PASS" starttime="20250702 18:49:10.554" endtime="20250702 18:49:13.460"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:49:13.461" level="INFO">User 'testuser' is assigned to:
- Tenant 'tenantone' with accessId 'tenantone$testuser'</msg>
<status status="PASS" starttime="20250702 18:49:13.461" endtime="20250702 18:49:13.461"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:49:13.462" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:49:13.461" endtime="20250702 18:49:13.462"/>
</kw>
<status status="PASS" starttime="20250702 18:49:10.554" endtime="20250702 18:49:13.462"/>
</kw>
<msg timestamp="20250702 18:49:13.462" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:49:10.553" endtime="20250702 18:49:13.462"/>
</kw>
<msg timestamp="20250702 18:49:13.462" level="INFO">${output} = User 'testuser' is assigned to:
- Tenant 'tenantone' with accessId 'tenantone$testuser'</msg>
<status status="PASS" starttime="20250702 18:49:10.553" endtime="20250702 18:49:13.462"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Tenant 'tenantone' with accessId 'tenantone$testuser'</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250702 18:49:13.462" endtime="20250702 18:49:13.463"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250702 18:49:10.552" endtime="20250702 18:49:13.463"/>
</test>
<test id="s1-s3-s5-t5" name="GetUserInfo as JSON Success" line="53">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone tenant user info --json testuser | jq '.tenants | .[].accessId'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:49:13.468" level="INFO">Running command 'ozone tenant user info --json testuser | jq '.tenants | .[].accessId' 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:49:16.581" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:49:16.581" level="INFO">${output} = "tenantone$testuser"</msg>
<status status="PASS" starttime="20250702 18:49:13.465" endtime="20250702 18:49:16.581"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:49:16.582" level="INFO">"tenantone$testuser"</msg>
<status status="PASS" starttime="20250702 18:49:16.581" endtime="20250702 18:49:16.582"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:49:16.582" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:49:16.582" endtime="20250702 18:49:16.582"/>
</kw>
<status status="PASS" starttime="20250702 18:49:13.465" endtime="20250702 18:49:16.583"/>
</kw>
<msg timestamp="20250702 18:49:16.583" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:49:13.464" endtime="20250702 18:49:16.583"/>
</kw>
<msg timestamp="20250702 18:49:16.583" level="INFO">${output} = "tenantone$testuser"</msg>
<status status="PASS" starttime="20250702 18:49:13.464" endtime="20250702 18:49:16.583"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"tenantone$testuser"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250702 18:49:16.583" endtime="20250702 18:49:16.583"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250702 18:49:13.463" endtime="20250702 18:49:16.583"/>
</test>
<test id="s1-s3-s5-t6" name="Create Bucket 1 Success via S3 API" line="57">
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${ACCESS_ID}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:49:16.588" level="INFO">Running command 'aws configure set aws_access_key_id 'tenantone$testuser' 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:49:16.927" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:49:16.927" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:49:16.585" endtime="20250702 18:49:16.927"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:49:16.928" level="INFO"/>
<status status="PASS" starttime="20250702 18:49:16.927" endtime="20250702 18:49:16.928"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:49:16.928" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:49:16.928" endtime="20250702 18:49:16.928"/>
</kw>
<status status="PASS" starttime="20250702 18:49:16.585" endtime="20250702 18:49:16.928"/>
</kw>
<msg timestamp="20250702 18:49:16.928" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:49:16.585" endtime="20250702 18:49:16.929"/>
</kw>
<status status="PASS" starttime="20250702 18:49:16.584" endtime="20250702 18:49:16.929"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${SECRET_KEY}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:49:16.932" level="INFO">Running command 'aws configure set aws_secret_access_key 'ef946e1e63eae56f83e8be968c51741cb2443a2ee49c6e3ab1e6c30894034bce' 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:49:17.275" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:49:17.275" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:49:16.930" endtime="20250702 18:49:17.275"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:49:17.276" level="INFO"/>
<status status="PASS" starttime="20250702 18:49:17.275" endtime="20250702 18:49:17.276"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:49:17.276" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:49:17.276" endtime="20250702 18:49:17.277"/>
</kw>
<status status="PASS" starttime="20250702 18:49:16.929" endtime="20250702 18:49:17.277"/>
</kw>
<msg timestamp="20250702 18:49:17.277" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:49:16.929" endtime="20250702 18:49:17.277"/>
</kw>
<status status="PASS" starttime="20250702 18:49:16.929" endtime="20250702 18:49:17.277"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${S3G_ENDPOINT_URL} create-bucket --bucket bucket-test1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:49:17.280" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-test1 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:49:17.770" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:49:17.770" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-test1"
}</msg>
<status status="PASS" starttime="20250702 18:49:17.278" endtime="20250702 18:49:17.770"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:49:17.771" level="INFO">{
    "Location": "http://s3g:9878/bucket-test1"
}</msg>
<status status="PASS" starttime="20250702 18:49:17.771" endtime="20250702 18:49:17.771"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:49:17.772" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:49:17.772" endtime="20250702 18:49:17.772"/>
</kw>
<status status="PASS" starttime="20250702 18:49:17.278" endtime="20250702 18:49:17.772"/>
</kw>
<msg timestamp="20250702 18:49:17.772" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:49:17.277" endtime="20250702 18:49:17.772"/>
</kw>
<msg timestamp="20250702 18:49:17.772" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-test1"
}</msg>
<status status="PASS" starttime="20250702 18:49:17.277" endtime="20250702 18:49:17.772"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>bucket-test1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250702 18:49:17.772" endtime="20250702 18:49:17.773"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${S3G_ENDPOINT_URL} list-buckets</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:49:17.776" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-buckets 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:49:18.256" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:49:18.256" level="INFO">${output} = {
    "Buckets": [
        {
            "Name": "bucket-test1",
            "CreationDate": "2025-07-02T18:49:17.709Z"
        }
    ],
    "Owner": {
        "DisplayName": "testuser",
        "ID":...</msg>
<status status="PASS" starttime="20250702 18:49:17.774" endtime="20250702 18:49:18.256"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:49:18.257" level="INFO">{
    "Buckets": [
        {
            "Name": "bucket-test1",
            "CreationDate": "2025-07-02T18:49:17.709Z"
        }
    ],
    "Owner": {
        "DisplayName": "testuser",
        "ID": "bb2bd7ca4a327f84e6cd3979f8fa3828a50a08893c1b68f9d6715352c8d07b93"
    },
    "Prefix": null
}</msg>
<status status="PASS" starttime="20250702 18:49:18.257" endtime="20250702 18:49:18.257"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:49:18.257" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:49:18.257" endtime="20250702 18:49:18.258"/>
</kw>
<status status="PASS" starttime="20250702 18:49:17.773" endtime="20250702 18:49:18.258"/>
</kw>
<msg timestamp="20250702 18:49:18.258" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:49:17.773" endtime="20250702 18:49:18.258"/>
</kw>
<msg timestamp="20250702 18:49:18.258" level="INFO">${output} = {
    "Buckets": [
        {
            "Name": "bucket-test1",
            "CreationDate": "2025-07-02T18:49:17.709Z"
        }
    ],
    "Owner": {
        "DisplayName": "testuser",
        "ID":...</msg>
<status status="PASS" starttime="20250702 18:49:17.773" endtime="20250702 18:49:18.258"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>bucket-test1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250702 18:49:18.258" endtime="20250702 18:49:18.258"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250702 18:49:16.584" endtime="20250702 18:49:18.258"/>
</test>
<test id="s1-s3-s5-t7" name="Verify Bucket 1 Owner" line="65">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info /tenantone/bucket-test1 | jq -r '.owner'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:49:18.262" level="INFO">Running command 'ozone sh bucket info /tenantone/bucket-test1 | jq -r '.owner' 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:49:21.416" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:49:21.416" level="INFO">${output} = testuser</msg>
<status status="PASS" starttime="20250702 18:49:18.260" endtime="20250702 18:49:21.416"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:49:21.417" level="INFO">testuser</msg>
<status status="PASS" starttime="20250702 18:49:21.417" endtime="20250702 18:49:21.418"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:49:21.418" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:49:21.418" endtime="20250702 18:49:21.418"/>
</kw>
<status status="PASS" starttime="20250702 18:49:18.260" endtime="20250702 18:49:21.418"/>
</kw>
<msg timestamp="20250702 18:49:21.418" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:49:18.260" endtime="20250702 18:49:21.418"/>
</kw>
<msg timestamp="20250702 18:49:21.418" level="INFO">${result} = testuser</msg>
<status status="PASS" starttime="20250702 18:49:18.259" endtime="20250702 18:49:21.418"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>testuser</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250702 18:49:21.419" endtime="20250702 18:49:21.419"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250702 18:49:18.259" endtime="20250702 18:49:21.419"/>
</test>
<test id="s1-s3-s5-t8" name="Put a key in the tenant bucket" line="69">
<kw name="Execute" library="os">
<arg>echo "Randomtext" &gt; /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:49:21.423" level="INFO">Running command 'echo "Randomtext" &gt; /tmp/testfile'.</msg>
<msg timestamp="20250702 18:49:21.425" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:49:21.425" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:49:21.421" endtime="20250702 18:49:21.425"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:49:21.426" level="INFO"/>
<status status="PASS" starttime="20250702 18:49:21.425" endtime="20250702 18:49:21.426"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:49:21.426" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:49:21.426" endtime="20250702 18:49:21.426"/>
</kw>
<status status="PASS" starttime="20250702 18:49:21.420" endtime="20250702 18:49:21.426"/>
</kw>
<msg timestamp="20250702 18:49:21.427" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:49:21.420" endtime="20250702 18:49:21.427"/>
</kw>
<status status="PASS" starttime="20250702 18:49:21.420" endtime="20250702 18:49:21.427"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>aws s3api --endpoint-url ${S3G_ENDPOINT_URL} put-object --bucket bucket-test1 --key mykey --body /tmp/testfile</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:49:21.429" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket bucket-test1 --key mykey --body /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:49:21.986" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:49:21.986" level="INFO">${output} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20250702 18:49:21.427" endtime="20250702 18:49:21.986"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:49:21.987" level="INFO">{
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20250702 18:49:21.987" endtime="20250702 18:49:21.987"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:49:21.988" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:49:21.987" endtime="20250702 18:49:21.988"/>
</kw>
<status status="PASS" starttime="20250702 18:49:21.427" endtime="20250702 18:49:21.988"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250702 18:49:21.419" endtime="20250702 18:49:21.988"/>
</test>
<test id="s1-s3-s5-t9" name="Verify Object Owner" line="73">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info /tenantone/bucket-test1/mykey | jq -r '.owner'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:49:21.993" level="INFO">Running command 'ozone sh key info /tenantone/bucket-test1/mykey | jq -r '.owner' 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:49:25.325" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:49:25.325" level="INFO">${output} = testuser</msg>
<status status="PASS" starttime="20250702 18:49:21.990" endtime="20250702 18:49:25.325"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:49:25.326" level="INFO">testuser</msg>
<status status="PASS" starttime="20250702 18:49:25.325" endtime="20250702 18:49:25.326"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:49:25.326" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:49:25.326" endtime="20250702 18:49:25.326"/>
</kw>
<status status="PASS" starttime="20250702 18:49:21.990" endtime="20250702 18:49:25.326"/>
</kw>
<msg timestamp="20250702 18:49:25.326" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:49:21.989" endtime="20250702 18:49:25.327"/>
</kw>
<msg timestamp="20250702 18:49:25.327" level="INFO">${result} = testuser</msg>
<status status="PASS" starttime="20250702 18:49:21.989" endtime="20250702 18:49:25.327"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>testuser</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250702 18:49:25.327" endtime="20250702 18:49:25.327"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250702 18:49:21.989" endtime="20250702 18:49:25.327"/>
</test>
<test id="s1-s3-s5-t10" name="Get and delete a key in the tenant bucket" line="77">
<kw name="Execute and checkrc" library="os">
<arg>aws s3api --endpoint-url ${S3G_ENDPOINT_URL} head-object --bucket bucket-test1 --key mykey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:49:25.331" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket bucket-test1 --key mykey 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:49:25.830" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:49:25.830" level="INFO">${output} = {
    "LastModified": "Wed, 02 Jul 2025 18:49:21 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20250702 18:49:25.328" endtime="20250702 18:49:25.830"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:49:25.831" level="INFO">{
    "LastModified": "Wed, 02 Jul 2025 18:49:21 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-stream",
    "Expires": "Wed, 02 Jul 2025 18:49:25 GMT",
    "Metadata": {},
    "StorageClass": "STANDARD",
    "ExpiresString": "Wed, 02 Jul 2025 18:49:25 GMT"
}</msg>
<status status="PASS" starttime="20250702 18:49:25.830" endtime="20250702 18:49:25.831"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:49:25.831" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:49:25.831" endtime="20250702 18:49:25.831"/>
</kw>
<status status="PASS" starttime="20250702 18:49:25.328" endtime="20250702 18:49:25.831"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>aws s3api --endpoint-url ${S3G_ENDPOINT_URL} delete-object --bucket bucket-test1 --key mykey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:49:25.834" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-object --bucket bucket-test1 --key mykey 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:49:26.327" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:49:26.327" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:49:25.832" endtime="20250702 18:49:26.327"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:49:26.328" level="INFO"/>
<status status="PASS" starttime="20250702 18:49:26.328" endtime="20250702 18:49:26.328"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:49:26.329" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:49:26.328" endtime="20250702 18:49:26.329"/>
</kw>
<status status="PASS" starttime="20250702 18:49:25.832" endtime="20250702 18:49:26.329"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250702 18:49:25.328" endtime="20250702 18:49:26.329"/>
</test>
<test id="s1-s3-s5-t11" name="SetSecret Success with Cluster Admin" line="81">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone tenant user setsecret 'tenantone$testuser' --secret=somesecret1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:49:26.333" level="INFO">Running command 'ozone tenant user setsecret 'tenantone$testuser' --secret=somesecret1 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:49:29.130" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:49:29.130" level="INFO">${output} = export AWS_ACCESS_KEY_ID='tenantone$testuser'
export AWS_SECRET_ACCESS_KEY='somesecret1'</msg>
<status status="PASS" starttime="20250702 18:49:26.331" endtime="20250702 18:49:29.131"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:49:29.131" level="INFO">export AWS_ACCESS_KEY_ID='tenantone$testuser'
export AWS_SECRET_ACCESS_KEY='somesecret1'</msg>
<status status="PASS" starttime="20250702 18:49:29.131" endtime="20250702 18:49:29.132"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:49:29.132" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:49:29.132" endtime="20250702 18:49:29.132"/>
</kw>
<status status="PASS" starttime="20250702 18:49:26.330" endtime="20250702 18:49:29.132"/>
</kw>
<msg timestamp="20250702 18:49:29.132" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:49:26.330" endtime="20250702 18:49:29.132"/>
</kw>
<msg timestamp="20250702 18:49:29.132" level="INFO">${output} = export AWS_ACCESS_KEY_ID='tenantone$testuser'
export AWS_SECRET_ACCESS_KEY='somesecret1'</msg>
<status status="PASS" starttime="20250702 18:49:26.330" endtime="20250702 18:49:29.132"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>export AWS_SECRET_ACCESS_KEY='somesecret1'</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250702 18:49:29.133" endtime="20250702 18:49:29.133"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250702 18:49:26.329" endtime="20250702 18:49:29.133"/>
</test>
<test id="s1-s3-s5-t12" name="SetSecret Failure For Invalid Secret 1" line="85">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>ozone tenant user setsecret 'tenantone$testuser' --secret=''</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:49:29.136" level="INFO">Running command 'ozone tenant user setsecret 'tenantone$testuser' --secret='' 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:49:31.990" level="INFO">${rc} = 255</msg>
<msg timestamp="20250702 18:49:31.990" level="INFO">${output} = secretKey cannot be null or empty.</msg>
<status status="PASS" starttime="20250702 18:49:29.134" endtime="20250702 18:49:31.990"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>secretKey cannot be null or empty.</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250702 18:49:31.991" endtime="20250702 18:49:31.991"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250702 18:49:29.134" endtime="20250702 18:49:31.991"/>
</test>
<test id="s1-s3-s5-t13" name="SetSecret Failure For Invalid Secret 2" line="89">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>ozone tenant user setsecret 'tenantone$testuser' --secret=short</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:49:31.995" level="INFO">Running command 'ozone tenant user setsecret 'tenantone$testuser' --secret=short 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:49:34.853" level="INFO">${rc} = 255</msg>
<msg timestamp="20250702 18:49:34.853" level="INFO">${output} = INVALID_REQUEST Secret key length should be at least 8 characters</msg>
<status status="PASS" starttime="20250702 18:49:31.992" endtime="20250702 18:49:34.853"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Secret key length should be at least 8 characters</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250702 18:49:34.853" endtime="20250702 18:49:34.854"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250702 18:49:31.992" endtime="20250702 18:49:34.854"/>
</test>
<test id="s1-s3-s5-t14" name="GetSecret Success" line="93">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone tenant user getsecret 'tenantone$testuser'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:49:34.869" level="INFO">Running command 'ozone tenant user getsecret 'tenantone$testuser' 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:49:38.092" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:49:38.092" level="INFO">${output} = export AWS_ACCESS_KEY_ID='tenantone$testuser'
export AWS_SECRET_ACCESS_KEY='somesecret1'</msg>
<status status="PASS" starttime="20250702 18:49:34.856" endtime="20250702 18:49:38.092"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:49:38.093" level="INFO">export AWS_ACCESS_KEY_ID='tenantone$testuser'
export AWS_SECRET_ACCESS_KEY='somesecret1'</msg>
<status status="PASS" starttime="20250702 18:49:38.092" endtime="20250702 18:49:38.093"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:49:38.093" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:49:38.093" endtime="20250702 18:49:38.093"/>
</kw>
<status status="PASS" starttime="20250702 18:49:34.856" endtime="20250702 18:49:38.093"/>
</kw>
<msg timestamp="20250702 18:49:38.093" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:49:34.855" endtime="20250702 18:49:38.094"/>
</kw>
<msg timestamp="20250702 18:49:38.094" level="INFO">${output} = export AWS_ACCESS_KEY_ID='tenantone$testuser'
export AWS_SECRET_ACCESS_KEY='somesecret1'</msg>
<status status="PASS" starttime="20250702 18:49:34.855" endtime="20250702 18:49:38.094"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>export AWS_SECRET_ACCESS_KEY='somesecret1'</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250702 18:49:38.094" endtime="20250702 18:49:38.094"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250702 18:49:34.854" endtime="20250702 18:49:38.094"/>
</test>
<test id="s1-s3-s5-t15" name="Delete Bucket 1 Failure With Old SecretKey via S3 API" line="97">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>aws s3api --endpoint-url ${S3G_ENDPOINT_URL} delete-bucket --bucket bucket-test1</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:49:38.098" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-bucket --bucket bucket-test1 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:49:38.594" level="INFO">${rc} = 255</msg>
<msg timestamp="20250702 18:49:38.594" level="INFO">${output} = 
An error occurred (AccessDenied) when calling the DeleteBucket operation: User doesn't have the right to access this resource.</msg>
<status status="PASS" starttime="20250702 18:49:38.095" endtime="20250702 18:49:38.594"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${rc} &gt; 0</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20250702 18:49:38.594" endtime="20250702 18:49:38.595"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250702 18:49:38.095" endtime="20250702 18:49:38.595"/>
</test>
<test id="s1-s3-s5-t16" name="Delete Bucket 1 Success With Newly Set SecretKey via S3 API" line="101">
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key 'somesecret1'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:49:38.599" level="INFO">Running command 'aws configure set aws_secret_access_key 'somesecret1' 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:49:38.952" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:49:38.952" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:49:38.597" endtime="20250702 18:49:38.952"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:49:38.953" level="INFO"/>
<status status="PASS" starttime="20250702 18:49:38.952" endtime="20250702 18:49:38.953"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:49:38.953" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:49:38.953" endtime="20250702 18:49:38.953"/>
</kw>
<status status="PASS" starttime="20250702 18:49:38.596" endtime="20250702 18:49:38.953"/>
</kw>
<msg timestamp="20250702 18:49:38.953" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:49:38.596" endtime="20250702 18:49:38.953"/>
</kw>
<status status="PASS" starttime="20250702 18:49:38.596" endtime="20250702 18:49:38.953"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${S3G_ENDPOINT_URL} delete-bucket --bucket bucket-test1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:49:38.957" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-bucket --bucket bucket-test1 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:49:39.443" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:49:39.443" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:49:38.954" endtime="20250702 18:49:39.443"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:49:39.444" level="INFO"/>
<status status="PASS" starttime="20250702 18:49:39.443" endtime="20250702 18:49:39.444"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:49:39.444" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:49:39.444" endtime="20250702 18:49:39.444"/>
</kw>
<status status="PASS" starttime="20250702 18:49:38.954" endtime="20250702 18:49:39.445"/>
</kw>
<msg timestamp="20250702 18:49:39.445" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:49:38.954" endtime="20250702 18:49:39.445"/>
</kw>
<msg timestamp="20250702 18:49:39.445" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:49:38.954" endtime="20250702 18:49:39.445"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250702 18:49:38.595" endtime="20250702 18:49:39.445"/>
</test>
<test id="s1-s3-s5-t17" name="Delete Tenant Failure Tenant Not Empty" line="105">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>ozone tenant delete tenantone</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:49:39.448" level="INFO">Running command 'ozone tenant delete tenantone 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:49:42.424" level="INFO">${rc} = 255</msg>
<msg timestamp="20250702 18:49:42.424" level="INFO">${output} = TENANT_NOT_EMPTY Tenant 'tenantone' is not empty. All accessIds associated to this tenant must be revoked before the tenant can be deleted. See `ozone tenant user revoke`</msg>
<status status="PASS" starttime="20250702 18:49:39.446" endtime="20250702 18:49:42.424"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>TENANT_NOT_EMPTY Tenant 'tenantone' is not empty. All accessIds associated to this tenant must be revoked before the tenant can be deleted. See `ozone tenant user revoke`</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250702 18:49:42.424" endtime="20250702 18:49:42.425"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250702 18:49:39.445" endtime="20250702 18:49:42.425"/>
</test>
<test id="s1-s3-s5-t18" name="Trigger and wait for background Sync to recover Policies and Roles in Authorizer" line="109">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>ozone admin om updateranger -host=om</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:49:42.429" level="INFO">Running command 'ozone admin om updateranger -host=om 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:49:45.168" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:49:45.168" level="INFO">${output} = Operation completed successfully</msg>
<status status="PASS" starttime="20250702 18:49:42.426" endtime="20250702 18:49:45.168"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Operation completed successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250702 18:49:45.169" endtime="20250702 18:49:45.169"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250702 18:49:42.426" endtime="20250702 18:49:45.170"/>
</test>
<test id="s1-s3-s5-t19" name="Create Tenant Failure with Regular User" line="113">
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Get Security Enabled From Config" library="commonlib">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' != ''</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20250702 18:49:45.172" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:49:45.171" endtime="20250702 18:49:45.172"/>
</kw>
<kw name="Execute" library="os">
<var>${value}</var>
<arg>ozone getconf confKey ozone.security.enabled</arg>
<status status="NOT RUN" starttime="20250702 18:49:45.172" endtime="20250702 18:49:45.172"/>
</kw>
<if>
<branch type="IF" condition="'${value}' != 'true' and '${value}' != 'false'">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>false</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20250702 18:49:45.172" endtime="20250702 18:49:45.172"/>
</kw>
<status status="NOT RUN" starttime="20250702 18:49:45.172" endtime="20250702 18:49:45.172"/>
</branch>
<status status="NOT RUN" starttime="20250702 18:49:45.172" endtime="20250702 18:49:45.172"/>
</if>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${SECURITY_ENABLED}</arg>
<arg>${value}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20250702 18:49:45.172" endtime="20250702 18:49:45.172"/>
</kw>
<status status="PASS" starttime="20250702 18:49:45.171" endtime="20250702 18:49:45.172"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250702 18:49:45.172" endtime="20250702 18:49:45.173"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:49:45.177" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:49:45.180" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:49:45.180" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250702 18:49:45.174" endtime="20250702 18:49:45.180"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:49:45.181" level="INFO">scm</msg>
<status status="PASS" starttime="20250702 18:49:45.180" endtime="20250702 18:49:45.181"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:49:45.181" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:49:45.181" endtime="20250702 18:49:45.181"/>
</kw>
<status status="PASS" starttime="20250702 18:49:45.173" endtime="20250702 18:49:45.181"/>
</kw>
<msg timestamp="20250702 18:49:45.181" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:49:45.173" endtime="20250702 18:49:45.182"/>
</kw>
<msg timestamp="20250702 18:49:45.182" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250702 18:49:45.173" endtime="20250702 18:49:45.182"/>
</kw>
<msg timestamp="20250702 18:49:45.182" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250702 18:49:45.173" endtime="20250702 18:49:45.182"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250702 18:49:45.182" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250702 18:49:45.182" endtime="20250702 18:49:45.182"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:49:45.186" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser2.keytab testuser2/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:49:45.204" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:49:45.204" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:49:45.184" endtime="20250702 18:49:45.204"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:49:45.205" level="INFO"/>
<status status="PASS" starttime="20250702 18:49:45.205" endtime="20250702 18:49:45.205"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:49:45.206" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:49:45.205" endtime="20250702 18:49:45.206"/>
</kw>
<status status="PASS" starttime="20250702 18:49:45.183" endtime="20250702 18:49:45.206"/>
</kw>
<msg timestamp="20250702 18:49:45.206" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:49:45.183" endtime="20250702 18:49:45.206"/>
</kw>
<status status="PASS" starttime="20250702 18:49:45.183" endtime="20250702 18:49:45.206"/>
</kw>
<status status="PASS" starttime="20250702 18:49:45.182" endtime="20250702 18:49:45.206"/>
</kw>
<status status="PASS" starttime="20250702 18:49:45.171" endtime="20250702 18:49:45.207"/>
</kw>
<status status="PASS" starttime="20250702 18:49:45.171" endtime="20250702 18:49:45.207"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>ozone tenant create tenanttwo</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:49:45.209" level="INFO">Running command 'ozone tenant create tenanttwo 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:49:48.197" level="INFO">${rc} = 255</msg>
<msg timestamp="20250702 18:49:48.197" level="INFO">${output} = PERMISSION_DENIED User 'testuser2' is not an Ozone admin</msg>
<status status="PASS" starttime="20250702 18:49:45.207" endtime="20250702 18:49:48.197"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>PERMISSION_DENIED User 'testuser2' is not an Ozone admin</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250702 18:49:48.198" endtime="20250702 18:49:48.198"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250702 18:49:45.170" endtime="20250702 18:49:48.199"/>
</test>
<test id="s1-s3-s5-t20" name="SetSecret Failure with Regular User" line="118">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>ozone tenant user set-secret 'tenantone$testuser' --secret=somesecret2</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:49:48.202" level="INFO">Running command 'ozone tenant user set-secret 'tenantone$testuser' --secret=somesecret2 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:49:51.181" level="INFO">${rc} = 255</msg>
<msg timestamp="20250702 18:49:51.181" level="INFO">${output} = USER_MISMATCH Requested accessId 'tenantone$testuser' doesn't belong to current user 'testuser2', nor does current user have Ozone or tenant administrator privilege</msg>
<status status="PASS" starttime="20250702 18:49:48.200" endtime="20250702 18:49:51.182"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>USER_MISMATCH Requested accessId 'tenantone$testuser' doesn't belong to current user 'testuser2', nor does current user have Ozone or tenant administrator privilege</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250702 18:49:51.182" endtime="20250702 18:49:51.183"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250702 18:49:48.199" endtime="20250702 18:49:51.183"/>
</test>
<test id="s1-s3-s5-t21" name="Create Bucket 2 Success with somesecret1 via S3 API" line="122">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${S3G_ENDPOINT_URL} create-bucket --bucket bucket-test2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:49:51.188" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-test2 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:49:51.678" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:49:51.678" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-test2"
}</msg>
<status status="PASS" starttime="20250702 18:49:51.185" endtime="20250702 18:49:51.678"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:49:51.679" level="INFO">{
    "Location": "http://s3g:9878/bucket-test2"
}</msg>
<status status="PASS" starttime="20250702 18:49:51.678" endtime="20250702 18:49:51.679"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:49:51.679" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:49:51.679" endtime="20250702 18:49:51.679"/>
</kw>
<status status="PASS" starttime="20250702 18:49:51.185" endtime="20250702 18:49:51.679"/>
</kw>
<msg timestamp="20250702 18:49:51.679" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:49:51.184" endtime="20250702 18:49:51.679"/>
</kw>
<msg timestamp="20250702 18:49:51.679" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-test2"
}</msg>
<status status="PASS" starttime="20250702 18:49:51.184" endtime="20250702 18:49:51.679"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>bucket-test2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250702 18:49:51.680" endtime="20250702 18:49:51.680"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250702 18:49:51.183" endtime="20250702 18:49:51.680"/>
</test>
<test id="s1-s3-s5-t22" name="Delete Bucket 2 Failure with somesecret2 via S3 API" line="126">
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key 'somesecret2'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:49:51.684" level="INFO">Running command 'aws configure set aws_secret_access_key 'somesecret2' 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:49:52.036" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:49:52.036" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:49:51.682" endtime="20250702 18:49:52.036"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:49:52.037" level="INFO"/>
<status status="PASS" starttime="20250702 18:49:52.036" endtime="20250702 18:49:52.037"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:49:52.037" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:49:52.037" endtime="20250702 18:49:52.037"/>
</kw>
<status status="PASS" starttime="20250702 18:49:51.681" endtime="20250702 18:49:52.037"/>
</kw>
<msg timestamp="20250702 18:49:52.037" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:49:51.681" endtime="20250702 18:49:52.037"/>
</kw>
<status status="PASS" starttime="20250702 18:49:51.681" endtime="20250702 18:49:52.037"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>aws s3api --endpoint-url ${S3G_ENDPOINT_URL} delete-bucket --bucket bucket-test2</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:49:52.040" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-bucket --bucket bucket-test2 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:49:52.518" level="INFO">${rc} = 255</msg>
<msg timestamp="20250702 18:49:52.518" level="INFO">${output} = 
An error occurred (AccessDenied) when calling the DeleteBucket operation: User doesn't have the right to access this resource.</msg>
<status status="PASS" starttime="20250702 18:49:52.038" endtime="20250702 18:49:52.518"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${rc} &gt; 0</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20250702 18:49:52.518" endtime="20250702 18:49:52.519"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250702 18:49:51.680" endtime="20250702 18:49:52.519"/>
</test>
<test id="s1-s3-s5-t23" name="Delete Bucket 2 Success with somesecret1 via S3 API" line="131">
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key 'somesecret1'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:49:52.524" level="INFO">Running command 'aws configure set aws_secret_access_key 'somesecret1' 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:49:52.868" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:49:52.868" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:49:52.521" endtime="20250702 18:49:52.868"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:49:52.869" level="INFO"/>
<status status="PASS" starttime="20250702 18:49:52.868" endtime="20250702 18:49:52.869"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:49:52.869" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:49:52.869" endtime="20250702 18:49:52.869"/>
</kw>
<status status="PASS" starttime="20250702 18:49:52.521" endtime="20250702 18:49:52.870"/>
</kw>
<msg timestamp="20250702 18:49:52.870" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:49:52.520" endtime="20250702 18:49:52.870"/>
</kw>
<status status="PASS" starttime="20250702 18:49:52.520" endtime="20250702 18:49:52.870"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${S3G_ENDPOINT_URL} delete-bucket --bucket bucket-test2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:49:52.873" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-bucket --bucket bucket-test2 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:49:53.361" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:49:53.361" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:49:52.871" endtime="20250702 18:49:53.361"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:49:53.362" level="INFO"/>
<status status="PASS" starttime="20250702 18:49:53.361" endtime="20250702 18:49:53.362"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:49:53.362" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:49:53.362" endtime="20250702 18:49:53.362"/>
</kw>
<status status="PASS" starttime="20250702 18:49:52.871" endtime="20250702 18:49:53.362"/>
</kw>
<msg timestamp="20250702 18:49:53.362" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:49:52.870" endtime="20250702 18:49:53.362"/>
</kw>
<msg timestamp="20250702 18:49:53.363" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:49:52.870" endtime="20250702 18:49:53.363"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250702 18:49:52.520" endtime="20250702 18:49:53.363"/>
</test>
<test id="s1-s3-s5-t24" name="Revoke User AccessId Success with Cluster Admin" line="135">
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get Security Enabled From Config" library="commonlib">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' != ''</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20250702 18:49:53.365" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:49:53.364" endtime="20250702 18:49:53.365"/>
</kw>
<kw name="Execute" library="os">
<var>${value}</var>
<arg>ozone getconf confKey ozone.security.enabled</arg>
<status status="NOT RUN" starttime="20250702 18:49:53.365" endtime="20250702 18:49:53.365"/>
</kw>
<if>
<branch type="IF" condition="'${value}' != 'true' and '${value}' != 'false'">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>false</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20250702 18:49:53.365" endtime="20250702 18:49:53.365"/>
</kw>
<status status="NOT RUN" starttime="20250702 18:49:53.365" endtime="20250702 18:49:53.365"/>
</branch>
<status status="NOT RUN" starttime="20250702 18:49:53.365" endtime="20250702 18:49:53.365"/>
</if>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${SECURITY_ENABLED}</arg>
<arg>${value}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20250702 18:49:53.365" endtime="20250702 18:49:53.365"/>
</kw>
<status status="PASS" starttime="20250702 18:49:53.364" endtime="20250702 18:49:53.365"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250702 18:49:53.365" endtime="20250702 18:49:53.366"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:49:53.369" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:49:53.372" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:49:53.372" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250702 18:49:53.367" endtime="20250702 18:49:53.373"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:49:53.373" level="INFO">scm</msg>
<status status="PASS" starttime="20250702 18:49:53.373" endtime="20250702 18:49:53.373"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:49:53.374" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:49:53.373" endtime="20250702 18:49:53.374"/>
</kw>
<status status="PASS" starttime="20250702 18:49:53.366" endtime="20250702 18:49:53.374"/>
</kw>
<msg timestamp="20250702 18:49:53.374" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:49:53.366" endtime="20250702 18:49:53.374"/>
</kw>
<msg timestamp="20250702 18:49:53.374" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250702 18:49:53.366" endtime="20250702 18:49:53.374"/>
</kw>
<msg timestamp="20250702 18:49:53.374" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250702 18:49:53.366" endtime="20250702 18:49:53.374"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250702 18:49:53.374" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250702 18:49:53.374" endtime="20250702 18:49:53.375"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:49:53.378" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:49:53.414" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:49:53.414" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:49:53.376" endtime="20250702 18:49:53.414"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:49:53.415" level="INFO"/>
<status status="PASS" starttime="20250702 18:49:53.415" endtime="20250702 18:49:53.415"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:49:53.416" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:49:53.415" endtime="20250702 18:49:53.416"/>
</kw>
<status status="PASS" starttime="20250702 18:49:53.375" endtime="20250702 18:49:53.416"/>
</kw>
<msg timestamp="20250702 18:49:53.416" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:49:53.375" endtime="20250702 18:49:53.416"/>
</kw>
<status status="PASS" starttime="20250702 18:49:53.375" endtime="20250702 18:49:53.416"/>
</kw>
<status status="PASS" starttime="20250702 18:49:53.375" endtime="20250702 18:49:53.416"/>
</kw>
<status status="PASS" starttime="20250702 18:49:53.364" endtime="20250702 18:49:53.416"/>
</kw>
<status status="PASS" starttime="20250702 18:49:53.364" endtime="20250702 18:49:53.416"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone tenant --verbose user revoke 'tenantone$testuser'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:49:53.419" level="INFO">Running command 'ozone tenant --verbose user revoke 'tenantone$testuser' 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:49:56.289" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:49:56.289" level="INFO">${output} = Revoked accessId 'tenantone$testuser'.</msg>
<status status="PASS" starttime="20250702 18:49:53.417" endtime="20250702 18:49:56.289"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:49:56.290" level="INFO">Revoked accessId 'tenantone$testuser'.</msg>
<status status="PASS" starttime="20250702 18:49:56.289" endtime="20250702 18:49:56.290"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:49:56.290" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:49:56.290" endtime="20250702 18:49:56.290"/>
</kw>
<status status="PASS" starttime="20250702 18:49:53.417" endtime="20250702 18:49:56.290"/>
</kw>
<msg timestamp="20250702 18:49:56.290" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:49:53.416" endtime="20250702 18:49:56.290"/>
</kw>
<msg timestamp="20250702 18:49:56.291" level="INFO">${output} = Revoked accessId 'tenantone$testuser'.</msg>
<status status="PASS" starttime="20250702 18:49:53.416" endtime="20250702 18:49:56.291"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Revoked accessId 'tenantone$testuser'.</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250702 18:49:56.291" endtime="20250702 18:49:56.291"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250702 18:49:53.363" endtime="20250702 18:49:56.291"/>
</test>
<test id="s1-s3-s5-t25" name="Create Bucket 3 Failure with Revoked AccessId via S3 API" line="140">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>aws s3api --endpoint-url ${S3G_ENDPOINT_URL} create-bucket --bucket bucket-test3</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:49:56.295" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-test3 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:49:56.774" level="INFO">${rc} = 255</msg>
<msg timestamp="20250702 18:49:56.774" level="INFO">${output} = 
An error occurred (AccessDenied) when calling the CreateBucket operation: User doesn't have the right to access this resource.</msg>
<status status="PASS" starttime="20250702 18:49:56.292" endtime="20250702 18:49:56.774"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${rc} &gt; 0</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20250702 18:49:56.775" endtime="20250702 18:49:56.775"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250702 18:49:56.292" endtime="20250702 18:49:56.775"/>
</test>
<test id="s1-s3-s5-t26" name="Delete Tenant Success with Cluster Admin" line="144">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone tenant delete tenantone</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:49:56.779" level="INFO">Running command 'ozone tenant delete tenantone 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:49:59.706" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:49:59.706" level="INFO">${output} = Deleted tenant 'tenantone'.
But the associated volume 'tenantone' is not removed. To delete it, run
    ozone sh volume delete tenantone
</msg>
<status status="PASS" starttime="20250702 18:49:56.777" endtime="20250702 18:49:59.706"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:49:59.707" level="INFO">Deleted tenant 'tenantone'.
But the associated volume 'tenantone' is not removed. To delete it, run
    ozone sh volume delete tenantone
</msg>
<status status="PASS" starttime="20250702 18:49:59.707" endtime="20250702 18:49:59.707"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:49:59.708" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:49:59.707" endtime="20250702 18:49:59.708"/>
</kw>
<status status="PASS" starttime="20250702 18:49:56.777" endtime="20250702 18:49:59.708"/>
</kw>
<msg timestamp="20250702 18:49:59.708" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:49:56.777" endtime="20250702 18:49:59.708"/>
</kw>
<msg timestamp="20250702 18:49:59.708" level="INFO">${output} = Deleted tenant 'tenantone'.
But the associated volume 'tenantone' is not removed. To delete it, run
    ozone sh volume delete tenantone
</msg>
<status status="PASS" starttime="20250702 18:49:56.776" endtime="20250702 18:49:59.708"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Deleted tenant 'tenantone'.</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250702 18:49:59.708" endtime="20250702 18:49:59.709"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250702 18:49:56.776" endtime="20250702 18:49:59.709"/>
</test>
<test id="s1-s3-s5-t27" name="Delete Volume Success with Cluster Admin" line="148">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume delete tenantone</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:49:59.713" level="INFO">Running command 'ozone sh volume delete tenantone 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:50:02.700" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:50:02.701" level="INFO">${output} = Volume tenantone is deleted</msg>
<status status="PASS" starttime="20250702 18:49:59.711" endtime="20250702 18:50:02.701"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:50:02.702" level="INFO">Volume tenantone is deleted</msg>
<status status="PASS" starttime="20250702 18:50:02.701" endtime="20250702 18:50:02.702"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:50:02.703" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:50:02.702" endtime="20250702 18:50:02.703"/>
</kw>
<status status="PASS" starttime="20250702 18:49:59.710" endtime="20250702 18:50:02.703"/>
</kw>
<msg timestamp="20250702 18:50:02.703" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:49:59.710" endtime="20250702 18:50:02.703"/>
</kw>
<msg timestamp="20250702 18:50:02.703" level="INFO">${output} = Volume tenantone is deleted</msg>
<status status="PASS" starttime="20250702 18:49:59.710" endtime="20250702 18:50:02.703"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Volume tenantone is deleted</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250702 18:50:02.703" endtime="20250702 18:50:02.703"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250702 18:49:59.709" endtime="20250702 18:50:02.704"/>
</test>
<test id="s1-s3-s5-t28" name="List Tenant Expect Empty Result" line="152">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone tenant list</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:50:02.708" level="INFO">Running command 'ozone tenant list 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:50:05.595" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:50:05.595" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:50:02.705" endtime="20250702 18:50:05.595"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:50:05.596" level="INFO"/>
<status status="PASS" starttime="20250702 18:50:05.595" endtime="20250702 18:50:05.596"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:50:05.596" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:50:05.596" endtime="20250702 18:50:05.596"/>
</kw>
<status status="PASS" starttime="20250702 18:50:02.705" endtime="20250702 18:50:05.596"/>
</kw>
<msg timestamp="20250702 18:50:05.596" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:50:02.705" endtime="20250702 18:50:05.596"/>
</kw>
<msg timestamp="20250702 18:50:05.597" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:50:02.704" endtime="20250702 18:50:05.597"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>tenantone</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250702 18:50:05.597" endtime="20250702 18:50:05.597"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250702 18:50:02.704" endtime="20250702 18:50:05.597"/>
</test>
<doc>Smoke test for ozone secure tenant commands</doc>
<status status="PASS" starttime="20250702 18:49:01.691" endtime="20250702 18:50:05.599"/>
</suite>
<suite id="s1-s3-s6" name="Ozone-Secure-Token" source="/opt/hadoop/smoketest/security/ozone-secure-token.robot">
<kw name="Get Security Enabled From Config" library="commonlib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' != ''</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20250702 18:50:05.608" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:50:05.608" endtime="20250702 18:50:05.608"/>
</kw>
<kw name="Execute" library="os">
<var>${value}</var>
<arg>ozone getconf confKey ozone.security.enabled</arg>
<status status="NOT RUN" starttime="20250702 18:50:05.608" endtime="20250702 18:50:05.608"/>
</kw>
<if>
<branch type="IF" condition="'${value}' != 'true' and '${value}' != 'false'">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>false</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20250702 18:50:05.608" endtime="20250702 18:50:05.608"/>
</kw>
<status status="NOT RUN" starttime="20250702 18:50:05.608" endtime="20250702 18:50:05.608"/>
</branch>
<status status="NOT RUN" starttime="20250702 18:50:05.608" endtime="20250702 18:50:05.608"/>
</if>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${SECURITY_ENABLED}</arg>
<arg>${value}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20250702 18:50:05.608" endtime="20250702 18:50:05.608"/>
</kw>
<status status="PASS" starttime="20250702 18:50:05.607" endtime="20250702 18:50:05.608"/>
</kw>
<test id="s1-s3-s6-t1" name="Token Test" line="86">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Token Test in Unsecure Cluster</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250702 18:50:05.609" endtime="20250702 18:50:05.609"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Token Test in Secure Cluster</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Token Test in Secure Cluster">
<kw name="Get and use Token in Secure Cluster">
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get Security Enabled From Config" library="commonlib">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' != ''</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20250702 18:50:05.611" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:50:05.610" endtime="20250702 18:50:05.611"/>
</kw>
<kw name="Execute" library="os">
<var>${value}</var>
<arg>ozone getconf confKey ozone.security.enabled</arg>
<status status="NOT RUN" starttime="20250702 18:50:05.611" endtime="20250702 18:50:05.611"/>
</kw>
<if>
<branch type="IF" condition="'${value}' != 'true' and '${value}' != 'false'">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>false</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20250702 18:50:05.611" endtime="20250702 18:50:05.611"/>
</kw>
<status status="NOT RUN" starttime="20250702 18:50:05.611" endtime="20250702 18:50:05.611"/>
</branch>
<status status="NOT RUN" starttime="20250702 18:50:05.611" endtime="20250702 18:50:05.611"/>
</if>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${SECURITY_ENABLED}</arg>
<arg>${value}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20250702 18:50:05.611" endtime="20250702 18:50:05.611"/>
</kw>
<status status="PASS" starttime="20250702 18:50:05.610" endtime="20250702 18:50:05.611"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250702 18:50:05.611" endtime="20250702 18:50:05.611"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:50:05.615" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:50:05.618" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:50:05.619" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250702 18:50:05.613" endtime="20250702 18:50:05.619"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:50:05.619" level="INFO">scm</msg>
<status status="PASS" starttime="20250702 18:50:05.619" endtime="20250702 18:50:05.619"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:50:05.620" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:50:05.619" endtime="20250702 18:50:05.620"/>
</kw>
<status status="PASS" starttime="20250702 18:50:05.612" endtime="20250702 18:50:05.620"/>
</kw>
<msg timestamp="20250702 18:50:05.620" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:50:05.612" endtime="20250702 18:50:05.620"/>
</kw>
<msg timestamp="20250702 18:50:05.620" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250702 18:50:05.612" endtime="20250702 18:50:05.620"/>
</kw>
<msg timestamp="20250702 18:50:05.620" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250702 18:50:05.612" endtime="20250702 18:50:05.620"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250702 18:50:05.621" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250702 18:50:05.620" endtime="20250702 18:50:05.621"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:50:05.624" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:50:05.662" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:50:05.662" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:50:05.622" endtime="20250702 18:50:05.662"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:50:05.662" level="INFO"/>
<status status="PASS" starttime="20250702 18:50:05.662" endtime="20250702 18:50:05.663"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:50:05.663" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:50:05.663" endtime="20250702 18:50:05.663"/>
</kw>
<status status="PASS" starttime="20250702 18:50:05.622" endtime="20250702 18:50:05.663"/>
</kw>
<msg timestamp="20250702 18:50:05.663" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:50:05.621" endtime="20250702 18:50:05.663"/>
</kw>
<status status="PASS" starttime="20250702 18:50:05.621" endtime="20250702 18:50:05.663"/>
</kw>
<status status="PASS" starttime="20250702 18:50:05.621" endtime="20250702 18:50:05.663"/>
</kw>
<status status="PASS" starttime="20250702 18:50:05.610" endtime="20250702 18:50:05.663"/>
</kw>
<status status="PASS" starttime="20250702 18:50:05.610" endtime="20250702 18:50:05.663"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh token get -t ${TOKEN_FILE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:50:05.667" level="INFO">Running command 'ozone sh token get -t /tmp/ozone.token 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:50:08.624" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:50:08.624" level="INFO">${output} = Successfully get token for service 172.18.0.9:9862
Kind: OzoneToken, Service: 172.18.0.9:9862, Ident: (OzoneToken owner=testuser/scm@EXAMPLE.COM, renewer=testuser, realUser=, issueDate=2025-07-02T18:5...</msg>
<status status="PASS" starttime="20250702 18:50:05.664" endtime="20250702 18:50:08.625"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:50:08.625" level="INFO">Successfully get token for service 172.18.0.9:9862
Kind: OzoneToken, Service: 172.18.0.9:9862, Ident: (OzoneToken owner=testuser/scm@EXAMPLE.COM, renewer=testuser, realUser=, issueDate=2025-07-02T18:50:08.483Z, maxDate=2025-07-09T18:50:08.483Z, sequenceNumber=1, masterKeyId=1, strToSign=null, signature=null, awsAccessKeyId=null, omServiceId=omServiceIdDefault, omCertSerialId=null, secretKeyId=a21ab7b1-4d52-4324-9b0b-82f98c86661a)
Token persisted to /tmp/ozone.token successfully!</msg>
<status status="PASS" starttime="20250702 18:50:08.625" endtime="20250702 18:50:08.625"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:50:08.626" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:50:08.626" endtime="20250702 18:50:08.626"/>
</kw>
<status status="PASS" starttime="20250702 18:50:05.664" endtime="20250702 18:50:08.626"/>
</kw>
<msg timestamp="20250702 18:50:08.626" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:50:05.664" endtime="20250702 18:50:08.626"/>
</kw>
<status status="PASS" starttime="20250702 18:50:05.664" endtime="20250702 18:50:08.626"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${TOKEN_FILE}</arg>
<doc>Fails if the specified file is empty.</doc>
<msg timestamp="20250702 18:50:08.627" level="INFO" html="true">File '&lt;a href="file:///tmp/ozone.token"&gt;/tmp/ozone.token&lt;/a&gt;' contains 201 bytes.</msg>
<status status="PASS" starttime="20250702 18:50:08.626" endtime="20250702 18:50:08.627"/>
</kw>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:50:08.630" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:50:08.634" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:50:08.634" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:50:08.628" endtime="20250702 18:50:08.634"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:50:08.635" level="INFO"/>
<status status="PASS" starttime="20250702 18:50:08.635" endtime="20250702 18:50:08.635"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:50:08.636" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:50:08.635" endtime="20250702 18:50:08.636"/>
</kw>
<status status="PASS" starttime="20250702 18:50:08.627" endtime="20250702 18:50:08.636"/>
</kw>
<msg timestamp="20250702 18:50:08.636" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:50:08.627" endtime="20250702 18:50:08.636"/>
</kw>
<status status="PASS" starttime="20250702 18:50:08.627" endtime="20250702 18:50:08.636"/>
</kw>
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>HADOOP_TOKEN_FILE_LOCATION</arg>
<arg>${TOKEN_FILE}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<msg timestamp="20250702 18:50:08.636" level="INFO">Environment variable 'HADOOP_TOKEN_FILE_LOCATION' set to value '/tmp/ozone.token'.</msg>
<status status="PASS" starttime="20250702 18:50:08.636" endtime="20250702 18:50:08.636"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume list /</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:50:08.640" level="INFO">Running command 'ozone sh volume list / 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:50:11.525" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:50:11.525" level="INFO">${output} = [ ]</msg>
<status status="PASS" starttime="20250702 18:50:08.638" endtime="20250702 18:50:11.525"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:50:11.526" level="INFO">[ ]</msg>
<status status="PASS" starttime="20250702 18:50:11.526" endtime="20250702 18:50:11.526"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:50:11.527" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:50:11.526" endtime="20250702 18:50:11.527"/>
</kw>
<status status="PASS" starttime="20250702 18:50:08.637" endtime="20250702 18:50:11.527"/>
</kw>
<msg timestamp="20250702 18:50:11.527" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:50:08.637" endtime="20250702 18:50:11.527"/>
</kw>
<msg timestamp="20250702 18:50:11.527" level="INFO">${output} = [ ]</msg>
<status status="PASS" starttime="20250702 18:50:08.636" endtime="20250702 18:50:11.527"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Client cannot authenticate</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250702 18:50:11.527" endtime="20250702 18:50:11.528"/>
</kw>
<kw name="Remove Environment Variable" library="OperatingSystem">
<arg>HADOOP_TOKEN_FILE_LOCATION</arg>
<doc>Deletes the specified environment variable.</doc>
<msg timestamp="20250702 18:50:11.528" level="INFO">Environment variable 'HADOOP_TOKEN_FILE_LOCATION' deleted.</msg>
<status status="PASS" starttime="20250702 18:50:11.528" endtime="20250702 18:50:11.528"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${output}</var>
<arg>ozone sh volume list /</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:50:11.531" level="INFO">Running command 'ozone sh volume list / 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:50:13.746" level="INFO">${rc} = 255</msg>
<msg timestamp="20250702 18:50:13.746" level="INFO">${output} = org.apache.hadoop.security.AccessControlException: Client cannot authenticate via:[TOKEN, KERBEROS]</msg>
<status status="PASS" starttime="20250702 18:50:11.528" endtime="20250702 18:50:13.746"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:50:13.747" level="INFO">org.apache.hadoop.security.AccessControlException: Client cannot authenticate via:[TOKEN, KERBEROS]</msg>
<status status="PASS" starttime="20250702 18:50:13.746" endtime="20250702 18:50:13.747"/>
</kw>
<msg timestamp="20250702 18:50:13.747" level="INFO">${output} = org.apache.hadoop.security.AccessControlException: Client cannot authenticate via:[TOKEN, KERBEROS]</msg>
<status status="PASS" starttime="20250702 18:50:11.528" endtime="20250702 18:50:13.747"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Client cannot authenticate</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250702 18:50:13.747" endtime="20250702 18:50:13.748"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get Security Enabled From Config" library="commonlib">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' != ''</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20250702 18:50:13.749" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:50:13.749" endtime="20250702 18:50:13.749"/>
</kw>
<kw name="Execute" library="os">
<var>${value}</var>
<arg>ozone getconf confKey ozone.security.enabled</arg>
<status status="NOT RUN" starttime="20250702 18:50:13.749" endtime="20250702 18:50:13.749"/>
</kw>
<if>
<branch type="IF" condition="'${value}' != 'true' and '${value}' != 'false'">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>false</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20250702 18:50:13.749" endtime="20250702 18:50:13.749"/>
</kw>
<status status="NOT RUN" starttime="20250702 18:50:13.749" endtime="20250702 18:50:13.749"/>
</branch>
<status status="NOT RUN" starttime="20250702 18:50:13.749" endtime="20250702 18:50:13.749"/>
</if>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${SECURITY_ENABLED}</arg>
<arg>${value}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20250702 18:50:13.749" endtime="20250702 18:50:13.749"/>
</kw>
<status status="PASS" starttime="20250702 18:50:13.748" endtime="20250702 18:50:13.750"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250702 18:50:13.750" endtime="20250702 18:50:13.750"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:50:13.753" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:50:13.757" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:50:13.757" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250702 18:50:13.751" endtime="20250702 18:50:13.757"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:50:13.757" level="INFO">scm</msg>
<status status="PASS" starttime="20250702 18:50:13.757" endtime="20250702 18:50:13.758"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:50:13.758" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:50:13.758" endtime="20250702 18:50:13.758"/>
</kw>
<status status="PASS" starttime="20250702 18:50:13.751" endtime="20250702 18:50:13.758"/>
</kw>
<msg timestamp="20250702 18:50:13.758" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:50:13.750" endtime="20250702 18:50:13.758"/>
</kw>
<msg timestamp="20250702 18:50:13.758" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250702 18:50:13.750" endtime="20250702 18:50:13.758"/>
</kw>
<msg timestamp="20250702 18:50:13.759" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250702 18:50:13.750" endtime="20250702 18:50:13.759"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250702 18:50:13.759" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250702 18:50:13.759" endtime="20250702 18:50:13.759"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:50:13.762" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:50:13.787" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:50:13.787" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:50:13.760" endtime="20250702 18:50:13.787"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:50:13.788" level="INFO"/>
<status status="PASS" starttime="20250702 18:50:13.788" endtime="20250702 18:50:13.788"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:50:13.788" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:50:13.788" endtime="20250702 18:50:13.789"/>
</kw>
<status status="PASS" starttime="20250702 18:50:13.760" endtime="20250702 18:50:13.789"/>
</kw>
<msg timestamp="20250702 18:50:13.789" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:50:13.760" endtime="20250702 18:50:13.789"/>
</kw>
<status status="PASS" starttime="20250702 18:50:13.759" endtime="20250702 18:50:13.789"/>
</kw>
<status status="PASS" starttime="20250702 18:50:13.759" endtime="20250702 18:50:13.789"/>
</kw>
<status status="PASS" starttime="20250702 18:50:13.748" endtime="20250702 18:50:13.789"/>
</kw>
<status status="PASS" starttime="20250702 18:50:13.748" endtime="20250702 18:50:13.789"/>
</kw>
<status status="PASS" starttime="20250702 18:50:05.610" endtime="20250702 18:50:13.789"/>
</kw>
<kw name="Print Valid Token File">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh token print -t ${TOKEN_FILE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:50:13.792" level="INFO">Running command 'ozone sh token print -t /tmp/ozone.token 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:50:15.006" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:50:15.006" level="INFO">${output} = Kind: OzoneToken, Service: 172.18.0.9:9862, Ident: (OzoneToken owner=testuser/scm@EXAMPLE.COM, renewer=testuser, realUser=, issueDate=2025-07-02T18:50:08.483Z, maxDate=2025-07-09T18:50:08.483Z, sequen...</msg>
<status status="PASS" starttime="20250702 18:50:13.790" endtime="20250702 18:50:15.007"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:50:15.007" level="INFO">Kind: OzoneToken, Service: 172.18.0.9:9862, Ident: (OzoneToken owner=testuser/scm@EXAMPLE.COM, renewer=testuser, realUser=, issueDate=2025-07-02T18:50:08.483Z, maxDate=2025-07-09T18:50:08.483Z, sequenceNumber=1, masterKeyId=1, strToSign=null, signature=null, awsAccessKeyId=null, omServiceId=omServiceIdDefault, omCertSerialId=null, secretKeyId=a21ab7b1-4d52-4324-9b0b-82f98c86661a)</msg>
<status status="PASS" starttime="20250702 18:50:15.007" endtime="20250702 18:50:15.008"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:50:15.008" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:50:15.008" endtime="20250702 18:50:15.008"/>
</kw>
<status status="PASS" starttime="20250702 18:50:13.790" endtime="20250702 18:50:15.008"/>
</kw>
<msg timestamp="20250702 18:50:15.008" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:50:13.790" endtime="20250702 18:50:15.008"/>
</kw>
<msg timestamp="20250702 18:50:15.008" level="INFO">${output} = Kind: OzoneToken, Service: 172.18.0.9:9862, Ident: (OzoneToken owner=testuser/scm@EXAMPLE.COM, renewer=testuser, realUser=, issueDate=2025-07-02T18:50:08.483Z, maxDate=2025-07-09T18:50:08.483Z, sequen...</msg>
<status status="PASS" starttime="20250702 18:50:13.789" endtime="20250702 18:50:15.008"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${output}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20250702 18:50:15.009" level="INFO">Length is 382</msg>
<status status="PASS" starttime="20250702 18:50:15.009" endtime="20250702 18:50:15.009"/>
</kw>
<status status="PASS" starttime="20250702 18:50:13.789" endtime="20250702 18:50:15.009"/>
</kw>
<kw name="Renew Token in Secure Cluster">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh token renew -t ${TOKEN_FILE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:50:15.013" level="INFO">Running command 'ozone sh token renew -t /tmp/ozone.token 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:50:17.965" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:50:17.965" level="INFO">${output} = Token renewed successfully, expiry time: 2025-07-03T18:50:17.867Z.</msg>
<status status="PASS" starttime="20250702 18:50:15.010" endtime="20250702 18:50:17.965"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:50:17.966" level="INFO">Token renewed successfully, expiry time: 2025-07-03T18:50:17.867Z.</msg>
<status status="PASS" starttime="20250702 18:50:17.965" endtime="20250702 18:50:17.966"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:50:17.966" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:50:17.966" endtime="20250702 18:50:17.966"/>
</kw>
<status status="PASS" starttime="20250702 18:50:15.010" endtime="20250702 18:50:17.967"/>
</kw>
<msg timestamp="20250702 18:50:17.967" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:50:15.010" endtime="20250702 18:50:17.967"/>
</kw>
<msg timestamp="20250702 18:50:17.967" level="INFO">${output} = Token renewed successfully, expiry time: 2025-07-03T18:50:17.867Z.</msg>
<status status="PASS" starttime="20250702 18:50:15.009" endtime="20250702 18:50:17.967"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Token renewed successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250702 18:50:17.967" endtime="20250702 18:50:17.967"/>
</kw>
<status status="PASS" starttime="20250702 18:50:15.009" endtime="20250702 18:50:17.967"/>
</kw>
<kw name="Cancel Token in Secure Cluster">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh token cancel -t ${TOKEN_FILE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:50:17.971" level="INFO">Running command 'ozone sh token cancel -t /tmp/ozone.token 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:50:20.869" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:50:20.869" level="INFO">${output} = Token canceled successfully.</msg>
<status status="PASS" starttime="20250702 18:50:17.969" endtime="20250702 18:50:20.869"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:50:20.870" level="INFO">Token canceled successfully.</msg>
<status status="PASS" starttime="20250702 18:50:20.869" endtime="20250702 18:50:20.870"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:50:20.871" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:50:20.870" endtime="20250702 18:50:20.871"/>
</kw>
<status status="PASS" starttime="20250702 18:50:17.968" endtime="20250702 18:50:20.871"/>
</kw>
<msg timestamp="20250702 18:50:20.871" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:50:17.968" endtime="20250702 18:50:20.871"/>
</kw>
<msg timestamp="20250702 18:50:20.871" level="INFO">${output} = Token canceled successfully.</msg>
<status status="PASS" starttime="20250702 18:50:17.968" endtime="20250702 18:50:20.871"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Token canceled successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250702 18:50:20.871" endtime="20250702 18:50:20.872"/>
</kw>
<status status="PASS" starttime="20250702 18:50:17.967" endtime="20250702 18:50:20.872"/>
</kw>
<status status="PASS" starttime="20250702 18:50:05.609" endtime="20250702 18:50:20.872"/>
</kw>
<status status="PASS" starttime="20250702 18:50:05.609" endtime="20250702 18:50:20.872"/>
</kw>
<kw name="Print Nonexistent Token File">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh token print -t /asdf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:50:20.875" level="INFO">Running command 'ozone sh token print -t /asdf 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:50:22.047" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:50:22.047" level="INFO">${output} = Error: token operation failed as token file: /asdf containing encoded token doesn't exist.</msg>
<status status="PASS" starttime="20250702 18:50:20.873" endtime="20250702 18:50:22.048"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:50:22.048" level="INFO">Error: token operation failed as token file: /asdf containing encoded token doesn't exist.</msg>
<status status="PASS" starttime="20250702 18:50:22.048" endtime="20250702 18:50:22.049"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:50:22.049" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:50:22.049" endtime="20250702 18:50:22.049"/>
</kw>
<status status="PASS" starttime="20250702 18:50:20.872" endtime="20250702 18:50:22.049"/>
</kw>
<msg timestamp="20250702 18:50:22.049" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:50:20.872" endtime="20250702 18:50:22.049"/>
</kw>
<msg timestamp="20250702 18:50:22.049" level="INFO">${output} = Error: token operation failed as token file: /asdf containing encoded token doesn't exist.</msg>
<status status="PASS" starttime="20250702 18:50:20.872" endtime="20250702 18:50:22.049"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>operation failed as token file: /asdf</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250702 18:50:22.050" endtime="20250702 18:50:22.050"/>
</kw>
<status status="PASS" starttime="20250702 18:50:20.872" endtime="20250702 18:50:22.050"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250702 18:50:05.609" endtime="20250702 18:50:22.050"/>
</test>
<doc>Test token operations</doc>
<status status="PASS" starttime="20250702 18:50:05.602" endtime="20250702 18:50:22.051"/>
</suite>
<suite id="s1-s3-s7" name="S3-secret" source="/opt/hadoop/smoketest/security/S3-secret.robot">
<test id="s1-s3-s7-t1" name="Get S3 secret twice" line="42">
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get Security Enabled From Config" library="commonlib">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' != ''</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20250702 18:50:22.058" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:50:22.058" endtime="20250702 18:50:22.058"/>
</kw>
<kw name="Execute" library="os">
<var>${value}</var>
<arg>ozone getconf confKey ozone.security.enabled</arg>
<status status="NOT RUN" starttime="20250702 18:50:22.058" endtime="20250702 18:50:22.058"/>
</kw>
<if>
<branch type="IF" condition="'${value}' != 'true' and '${value}' != 'false'">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>false</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20250702 18:50:22.058" endtime="20250702 18:50:22.058"/>
</kw>
<status status="NOT RUN" starttime="20250702 18:50:22.058" endtime="20250702 18:50:22.058"/>
</branch>
<status status="NOT RUN" starttime="20250702 18:50:22.058" endtime="20250702 18:50:22.059"/>
</if>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${SECURITY_ENABLED}</arg>
<arg>${value}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20250702 18:50:22.059" endtime="20250702 18:50:22.059"/>
</kw>
<status status="PASS" starttime="20250702 18:50:22.058" endtime="20250702 18:50:22.059"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250702 18:50:22.059" endtime="20250702 18:50:22.059"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:50:22.062" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:50:22.066" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:50:22.066" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250702 18:50:22.060" endtime="20250702 18:50:22.066"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:50:22.067" level="INFO">scm</msg>
<status status="PASS" starttime="20250702 18:50:22.066" endtime="20250702 18:50:22.067"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:50:22.067" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:50:22.067" endtime="20250702 18:50:22.067"/>
</kw>
<status status="PASS" starttime="20250702 18:50:22.060" endtime="20250702 18:50:22.067"/>
</kw>
<msg timestamp="20250702 18:50:22.067" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:50:22.060" endtime="20250702 18:50:22.068"/>
</kw>
<msg timestamp="20250702 18:50:22.068" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250702 18:50:22.059" endtime="20250702 18:50:22.068"/>
</kw>
<msg timestamp="20250702 18:50:22.068" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250702 18:50:22.059" endtime="20250702 18:50:22.068"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250702 18:50:22.068" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250702 18:50:22.068" endtime="20250702 18:50:22.068"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:50:22.072" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:50:22.115" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:50:22.116" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:50:22.069" endtime="20250702 18:50:22.116"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:50:22.116" level="INFO"/>
<status status="PASS" starttime="20250702 18:50:22.116" endtime="20250702 18:50:22.116"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:50:22.117" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:50:22.117" endtime="20250702 18:50:22.117"/>
</kw>
<status status="PASS" starttime="20250702 18:50:22.069" endtime="20250702 18:50:22.117"/>
</kw>
<msg timestamp="20250702 18:50:22.117" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:50:22.069" endtime="20250702 18:50:22.117"/>
</kw>
<status status="PASS" starttime="20250702 18:50:22.069" endtime="20250702 18:50:22.117"/>
</kw>
<status status="PASS" starttime="20250702 18:50:22.068" endtime="20250702 18:50:22.117"/>
</kw>
<status status="PASS" starttime="20250702 18:50:22.057" endtime="20250702 18:50:22.117"/>
</kw>
<status status="PASS" starttime="20250702 18:50:22.057" endtime="20250702 18:50:22.117"/>
</kw>
<kw name="Revoke Secrets">
<kw name="Execute And Ignore Error" library="os">
<var>${output}</var>
<arg>ozone s3 revokesecret -y -u testuser2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:50:22.121" level="INFO">Running command 'ozone s3 revokesecret -y -u testuser2 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:50:24.969" level="INFO">${rc} = 255</msg>
<msg timestamp="20250702 18:50:24.970" level="INFO">${output} = S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250702 18:50:22.118" endtime="20250702 18:50:24.970"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:50:24.971" level="INFO">S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250702 18:50:24.970" endtime="20250702 18:50:24.971"/>
</kw>
<msg timestamp="20250702 18:50:24.971" level="INFO">${output} = S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250702 18:50:22.118" endtime="20250702 18:50:24.971"/>
</kw>
<status status="PASS" starttime="20250702 18:50:22.118" endtime="20250702 18:50:24.971"/>
</kw>
<kw name="GetSecret success">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone s3 getsecret -u testuser2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:50:24.975" level="INFO">Running command 'ozone s3 getsecret -u testuser2 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:50:27.762" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:50:27.762" level="INFO">${output} = awsAccessKey=testuser2
awsSecret=cf438f2213f82ed631c0e686e61d76554b0f5a1c533494b041c0a6c94d6580e7</msg>
<status status="PASS" starttime="20250702 18:50:24.972" endtime="20250702 18:50:27.762"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:50:27.763" level="INFO">awsAccessKey=testuser2
awsSecret=cf438f2213f82ed631c0e686e61d76554b0f5a1c533494b041c0a6c94d6580e7</msg>
<status status="PASS" starttime="20250702 18:50:27.763" endtime="20250702 18:50:27.763"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:50:27.764" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:50:27.763" endtime="20250702 18:50:27.764"/>
</kw>
<status status="PASS" starttime="20250702 18:50:24.972" endtime="20250702 18:50:27.764"/>
</kw>
<msg timestamp="20250702 18:50:27.764" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:50:24.972" endtime="20250702 18:50:27.764"/>
</kw>
<msg timestamp="20250702 18:50:27.764" level="INFO">${output} = awsAccessKey=testuser2
awsSecret=cf438f2213f82ed631c0e686e61d76554b0f5a1c533494b041c0a6c94d6580e7</msg>
<status status="PASS" starttime="20250702 18:50:24.971" endtime="20250702 18:50:27.764"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>awsAccessKey</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250702 18:50:27.764" endtime="20250702 18:50:27.765"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>awsSecret</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250702 18:50:27.765" endtime="20250702 18:50:27.765"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>isDeleted</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250702 18:50:27.765" endtime="20250702 18:50:27.765"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>transactionLogIndex</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250702 18:50:27.765" endtime="20250702 18:50:27.766"/>
</kw>
<status status="PASS" starttime="20250702 18:50:24.971" endtime="20250702 18:50:27.766"/>
</kw>
<kw name="GetSecret failure">
<kw name="Execute And Ignore Error" library="os">
<var>${output2}</var>
<arg>ozone s3 getsecret -u testuser2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:50:27.769" level="INFO">Running command 'ozone s3 getsecret -u testuser2 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:50:30.597" level="INFO">${rc} = 255</msg>
<msg timestamp="20250702 18:50:30.597" level="INFO">${output} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser2' already exists</msg>
<status status="PASS" starttime="20250702 18:50:27.766" endtime="20250702 18:50:30.597"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:50:30.598" level="INFO">S3_SECRET_ALREADY_EXISTS Secret for 'testuser2' already exists</msg>
<status status="PASS" starttime="20250702 18:50:30.598" endtime="20250702 18:50:30.598"/>
</kw>
<msg timestamp="20250702 18:50:30.599" level="INFO">${output2} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser2' already exists</msg>
<status status="PASS" starttime="20250702 18:50:27.766" endtime="20250702 18:50:30.599"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output2}</arg>
<arg>awsAccessKey</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250702 18:50:30.599" endtime="20250702 18:50:30.599"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output2}</arg>
<arg>awsSecret</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250702 18:50:30.599" endtime="20250702 18:50:30.599"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output2}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250702 18:50:30.599" endtime="20250702 18:50:30.599"/>
</kw>
<status status="PASS" starttime="20250702 18:50:27.766" endtime="20250702 18:50:30.600"/>
</kw>
<kw name="Revoke Secrets">
<kw name="Execute And Ignore Error" library="os">
<var>${output}</var>
<arg>ozone s3 revokesecret -y -u testuser2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:50:30.603" level="INFO">Running command 'ozone s3 revokesecret -y -u testuser2 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:50:33.460" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:50:33.460" level="INFO">${output} = S3 secret revoked.</msg>
<status status="PASS" starttime="20250702 18:50:30.600" endtime="20250702 18:50:33.460"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:50:33.461" level="INFO">S3 secret revoked.</msg>
<status status="PASS" starttime="20250702 18:50:33.460" endtime="20250702 18:50:33.461"/>
</kw>
<msg timestamp="20250702 18:50:33.461" level="INFO">${output} = S3 secret revoked.</msg>
<status status="PASS" starttime="20250702 18:50:30.600" endtime="20250702 18:50:33.461"/>
</kw>
<status status="PASS" starttime="20250702 18:50:30.600" endtime="20250702 18:50:33.461"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20250702 18:50:22.057" endtime="20250702 18:50:33.462"/>
</test>
<doc>Smoke test to start cluster with docker-compose environments.</doc>
<status status="PASS" starttime="20250702 18:50:22.052" endtime="20250702 18:50:33.462"/>
</suite>
<status status="PASS" starttime="20250702 18:47:37.692" endtime="20250702 18:50:33.465"/>
</suite>
<suite id="s1-s4" name="Bucket-Encryption" source="/opt/hadoop/smoketest/repair/bucket-encryption.robot">
<test id="s1-s4-t1" name="Set Bucket Encryption Key" line="33">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250702 18:50:34.055" level="INFO">${random} = 4399832614</msg>
<status status="PASS" starttime="20250702 18:50:34.054" endtime="20250702 18:50:34.055"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${bucket}</var>
<arg>/vol${random}/encrypted</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250702 18:50:34.055" level="INFO">${bucket} = /vol4399832614/encrypted</msg>
<status status="PASS" starttime="20250702 18:50:34.055" endtime="20250702 18:50:34.055"/>
</kw>
<kw name="Ozone Shell Batch" library="shell">
<arg>volume create /vol${random}</arg>
<arg>bucket create ${bucket}</arg>
<kw name="Catenate" library="BuiltIn">
<var>${cmd}</var>
<arg>SEPARATOR=' --execute '</arg>
<arg>@{commands}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20250702 18:50:34.056" level="INFO">${cmd} = volume create /vol4399832614' --execute 'bucket create /vol4399832614/encrypted</msg>
<status status="PASS" starttime="20250702 18:50:34.055" endtime="20250702 18:50:34.056"/>
</kw>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>ozone sh --execute '${cmd}'</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>ozone sh --execute '${cmd}'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:50:34.059" level="INFO">Running command 'ozone sh --execute 'volume create /vol4399832614' --execute 'bucket create /vol4399832614/encrypted' 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:50:37.552" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:50:37.552" level="INFO">${output} = volume create /vol4399832614
bucket create /vol4399832614/encrypted</msg>
<status status="PASS" starttime="20250702 18:50:34.056" endtime="20250702 18:50:37.552"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:50:37.553" level="INFO">volume create /vol4399832614
bucket create /vol4399832614/encrypted</msg>
<status status="PASS" starttime="20250702 18:50:37.553" endtime="20250702 18:50:37.553"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:50:37.553" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:50:37.553" endtime="20250702 18:50:37.553"/>
</kw>
<status status="PASS" starttime="20250702 18:50:34.056" endtime="20250702 18:50:37.554"/>
</kw>
<msg timestamp="20250702 18:50:37.554" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:50:34.056" endtime="20250702 18:50:37.554"/>
</kw>
<status status="PASS" starttime="20250702 18:50:34.055" endtime="20250702 18:50:37.554"/>
</kw>
<kw name="Verify Bucket Encryption Key">
<arg>${bucket}</arg>
<arg>null</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket info ${bucket}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:50:37.558" level="INFO">Running command 'ozone sh bucket info /vol4399832614/encrypted 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:50:40.792" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:50:40.792" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "vol4399832614",
  "name" : "encrypted",
  "storageType" : "DISK",
  "versioning" : false,
  "listCacheSize" : 1000,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  ...</msg>
<status status="PASS" starttime="20250702 18:50:37.555" endtime="20250702 18:50:40.792"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:50:40.793" level="INFO">{
  "metadata" : { },
  "volumeName" : "vol4399832614",
  "name" : "encrypted",
  "storageType" : "DISK",
  "versioning" : false,
  "listCacheSize" : 1000,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2025-07-02T18:50:37.439Z",
  "modificationTime" : "2025-07-02T18:50:37.439Z",
  "sourcePathExist" : true,
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "FILE_SYSTEM_OPTIMIZED",
  "owner" : "testuser",
  "link" : false
}</msg>
<status status="PASS" starttime="20250702 18:50:40.792" endtime="20250702 18:50:40.793"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:50:40.793" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:50:40.793" endtime="20250702 18:50:40.793"/>
</kw>
<status status="PASS" starttime="20250702 18:50:37.555" endtime="20250702 18:50:40.793"/>
</kw>
<msg timestamp="20250702 18:50:40.793" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:50:37.555" endtime="20250702 18:50:40.793"/>
</kw>
<msg timestamp="20250702 18:50:40.793" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "vol4399832614",
  "name" : "encrypted",
  "storageType" : "DISK",
  "versioning" : false,
  "listCacheSize" : 1000,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  ...</msg>
<status status="PASS" starttime="20250702 18:50:37.554" endtime="20250702 18:50:40.793"/>
</kw>
<kw name="Execute" library="os">
<var>${actual}</var>
<arg>echo '${output}' | jq -r '.encryptionKeyName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:50:40.797" level="INFO">Running command 'echo '{
  "metadata" : { },
  "volumeName" : "vol4399832614",
  "name" : "encrypted",
  "storageType" : "DISK",
  "versioning" : false,
  "listCacheSize" : 1000,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2025-07-02T18:50:37.439Z",
  "modificationTime" : "2025-07-02T18:50:37.439Z",
  "sourcePathExist" : true,
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "FILE_SYSTEM_OPTIMIZED",
  "owner" : "testuser",
  "link" : false
}' | jq -r '.encryptionKeyName' 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:50:40.802" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:50:40.802" level="INFO">${output} = null</msg>
<status status="PASS" starttime="20250702 18:50:40.794" endtime="20250702 18:50:40.802"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:50:40.803" level="INFO">null</msg>
<status status="PASS" starttime="20250702 18:50:40.802" endtime="20250702 18:50:40.803"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:50:40.803" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:50:40.803" endtime="20250702 18:50:40.803"/>
</kw>
<status status="PASS" starttime="20250702 18:50:40.794" endtime="20250702 18:50:40.803"/>
</kw>
<msg timestamp="20250702 18:50:40.803" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:50:40.794" endtime="20250702 18:50:40.803"/>
</kw>
<msg timestamp="20250702 18:50:40.803" level="INFO">${actual} = null</msg>
<status status="PASS" starttime="20250702 18:50:40.794" endtime="20250702 18:50:40.803"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expected}</arg>
<arg>${actual}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250702 18:50:40.803" endtime="20250702 18:50:40.804"/>
</kw>
<status status="PASS" starttime="20250702 18:50:37.554" endtime="20250702 18:50:40.804"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket set-encryption-key -k ${ENCRYPTION_KEY} ${bucket}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:50:40.807" level="INFO">Running command 'ozone sh bucket set-encryption-key -k key1 /vol4399832614/encrypted 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:50:44.203" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:50:44.203" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:50:40.805" endtime="20250702 18:50:44.204"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:50:44.204" level="INFO"/>
<status status="PASS" starttime="20250702 18:50:44.204" endtime="20250702 18:50:44.204"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:50:44.205" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:50:44.204" endtime="20250702 18:50:44.205"/>
</kw>
<status status="PASS" starttime="20250702 18:50:40.804" endtime="20250702 18:50:44.205"/>
</kw>
<msg timestamp="20250702 18:50:44.205" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:50:40.804" endtime="20250702 18:50:44.205"/>
</kw>
<status status="PASS" starttime="20250702 18:50:40.804" endtime="20250702 18:50:44.205"/>
</kw>
<kw name="Verify Bucket Encryption Key">
<arg>${bucket}</arg>
<arg>${ENCRYPTION_KEY}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket info ${bucket}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:50:44.209" level="INFO">Running command 'ozone sh bucket info /vol4399832614/encrypted 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:50:47.529" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:50:47.529" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "vol4399832614",
  "name" : "encrypted",
  "storageType" : "DISK",
  "versioning" : false,
  "listCacheSize" : 1000,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  ...</msg>
<status status="PASS" starttime="20250702 18:50:44.207" endtime="20250702 18:50:47.529"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:50:47.530" level="INFO">{
  "metadata" : { },
  "volumeName" : "vol4399832614",
  "name" : "encrypted",
  "storageType" : "DISK",
  "versioning" : false,
  "listCacheSize" : 1000,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2025-07-02T18:50:37.439Z",
  "modificationTime" : "2025-07-02T18:50:43.806Z",
  "encryptionKeyName" : "key1",
  "sourcePathExist" : true,
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "FILE_SYSTEM_OPTIMIZED",
  "owner" : "testuser",
  "link" : false
}</msg>
<status status="PASS" starttime="20250702 18:50:47.529" endtime="20250702 18:50:47.530"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:50:47.530" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:50:47.530" endtime="20250702 18:50:47.530"/>
</kw>
<status status="PASS" starttime="20250702 18:50:44.206" endtime="20250702 18:50:47.530"/>
</kw>
<msg timestamp="20250702 18:50:47.531" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:50:44.206" endtime="20250702 18:50:47.531"/>
</kw>
<msg timestamp="20250702 18:50:47.531" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "vol4399832614",
  "name" : "encrypted",
  "storageType" : "DISK",
  "versioning" : false,
  "listCacheSize" : 1000,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  ...</msg>
<status status="PASS" starttime="20250702 18:50:44.206" endtime="20250702 18:50:47.531"/>
</kw>
<kw name="Execute" library="os">
<var>${actual}</var>
<arg>echo '${output}' | jq -r '.encryptionKeyName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:50:47.534" level="INFO">Running command 'echo '{
  "metadata" : { },
  "volumeName" : "vol4399832614",
  "name" : "encrypted",
  "storageType" : "DISK",
  "versioning" : false,
  "listCacheSize" : 1000,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2025-07-02T18:50:37.439Z",
  "modificationTime" : "2025-07-02T18:50:43.806Z",
  "encryptionKeyName" : "key1",
  "sourcePathExist" : true,
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "FILE_SYSTEM_OPTIMIZED",
  "owner" : "testuser",
  "link" : false
}' | jq -r '.encryptionKeyName' 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:50:47.539" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:50:47.539" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20250702 18:50:47.532" endtime="20250702 18:50:47.539"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:50:47.539" level="INFO">key1</msg>
<status status="PASS" starttime="20250702 18:50:47.539" endtime="20250702 18:50:47.540"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:50:47.540" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:50:47.540" endtime="20250702 18:50:47.540"/>
</kw>
<status status="PASS" starttime="20250702 18:50:47.531" endtime="20250702 18:50:47.540"/>
</kw>
<msg timestamp="20250702 18:50:47.540" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:50:47.531" endtime="20250702 18:50:47.540"/>
</kw>
<msg timestamp="20250702 18:50:47.540" level="INFO">${actual} = key1</msg>
<status status="PASS" starttime="20250702 18:50:47.531" endtime="20250702 18:50:47.540"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expected}</arg>
<arg>${actual}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250702 18:50:47.540" endtime="20250702 18:50:47.541"/>
</kw>
<status status="PASS" starttime="20250702 18:50:44.205" endtime="20250702 18:50:47.541"/>
</kw>
<status status="PASS" starttime="20250702 18:50:34.054" endtime="20250702 18:50:47.541"/>
</test>
<status status="PASS" starttime="20250702 18:50:34.017" endtime="20250702 18:50:47.542"/>
</suite>
<suite id="s1-s5" name="ozonefs-ofs-bucket" source="/opt/hadoop/smoketest/ozonefs/ozonefs.robot">
<kw name="Setup for FS test" library="setup" type="SETUP">
<kw name="Assign suite vars for FS test" library="setup">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250702 18:50:48.103" level="INFO">${random} = 17572</msg>
<status status="PASS" starttime="20250702 18:50:48.103" endtime="20250702 18:50:48.103"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<arg>${random}-${BUCKET_TYPE}1-${SCHEME}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250702 18:50:48.104" level="INFO">${BUCKET} = 17572-bucket1-ofs</msg>
<status status="PASS" starttime="20250702 18:50:48.103" endtime="20250702 18:50:48.104"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET2}</arg>
<arg>${random}-${BUCKET_TYPE}2-${SCHEME}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250702 18:50:48.104" level="INFO">${BUCKET2} = 17572-bucket2-ofs</msg>
<status status="PASS" starttime="20250702 18:50:48.104" endtime="20250702 18:50:48.104"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET_IN_VOL2}</arg>
<arg>${random}-${BUCKET_TYPE}3-${SCHEME}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250702 18:50:48.104" level="INFO">${BUCKET_IN_VOL2} = 17572-bucket3-ofs</msg>
<status status="PASS" starttime="20250702 18:50:48.104" endtime="20250702 18:50:48.104"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${BASE_URL}</var>
<arg>${SCHEME}</arg>
<arg>${VOLUME}</arg>
<arg>${BUCKET}</arg>
<arg>/</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20250702 18:50:48.106" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20250702 18:50:48.106" endtime="20250702 18:50:48.106"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20250702 18:50:48.107" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20250702 18:50:48.106" endtime="20250702 18:50:48.107"/>
</kw>
<status status="PASS" starttime="20250702 18:50:48.106" endtime="20250702 18:50:48.107"/>
</kw>
<msg timestamp="20250702 18:50:48.107" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20250702 18:50:48.105" endtime="20250702 18:50:48.107"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>/</arg>
<arg>${path}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20250702 18:50:48.108" level="INFO">${first} = /</msg>
<status status="PASS" starttime="20250702 18:50:48.108" endtime="20250702 18:50:48.108"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20250702 18:50:48.108" level="INFO">${result} = /</msg>
<status status="PASS" starttime="20250702 18:50:48.108" endtime="20250702 18:50:48.108"/>
</kw>
<status status="PASS" starttime="20250702 18:50:48.108" endtime="20250702 18:50:48.108"/>
</kw>
<msg timestamp="20250702 18:50:48.108" level="INFO">${path_with_leading} = /</msg>
<status status="PASS" starttime="20250702 18:50:48.107" endtime="20250702 18:50:48.109"/>
</kw>
<status status="PASS" starttime="20250702 18:50:48.105" endtime="20250702 18:50:48.109"/>
</kw>
<msg timestamp="20250702 18:50:48.109" level="INFO">${url} = ofs://om/fstest1/17572-bucket1-ofs/</msg>
<status status="PASS" starttime="20250702 18:50:48.105" endtime="20250702 18:50:48.109"/>
</kw>
<msg timestamp="20250702 18:50:48.109" level="INFO">${BASE_URL} = ofs://om/fstest1/17572-bucket1-ofs/</msg>
<status status="PASS" starttime="20250702 18:50:48.104" endtime="20250702 18:50:48.109"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BASE_URL}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250702 18:50:48.109" level="INFO">${BASE_URL} = ofs://om/fstest1/17572-bucket1-ofs/</msg>
<status status="PASS" starttime="20250702 18:50:48.109" endtime="20250702 18:50:48.109"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${DEEP_URL}</arg>
<arg>${BASE_URL}${DEEP_DIR}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250702 18:50:48.110" level="INFO">${DEEP_URL} = ofs://om/fstest1/17572-bucket1-ofs/test/ofs/dir</msg>
<status status="PASS" starttime="20250702 18:50:48.109" endtime="20250702 18:50:48.110"/>
</kw>
<status status="PASS" starttime="20250702 18:50:48.103" endtime="20250702 18:50:48.110"/>
</kw>
<kw name="Create volumes for FS test" library="setup">
<kw name="Execute And Ignore Error" library="os">
<arg>ozone sh volume create ${VOLUME} --space-quota 100TB</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:50:48.113" level="INFO">Running command 'ozone sh volume create fstest1 --space-quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:50:51.108" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:50:51.108" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:50:48.111" endtime="20250702 18:50:51.108"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:50:51.108" level="INFO"/>
<status status="PASS" starttime="20250702 18:50:51.108" endtime="20250702 18:50:51.108"/>
</kw>
<status status="PASS" starttime="20250702 18:50:48.110" endtime="20250702 18:50:51.109"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arg>ozone sh volume create ${VOL2} --space-quota 100TB</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:50:51.112" level="INFO">Running command 'ozone sh volume create fstest2 --space-quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:50:54.154" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:50:54.154" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:50:51.109" endtime="20250702 18:50:54.154"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:50:54.154" level="INFO"/>
<status status="PASS" starttime="20250702 18:50:54.154" endtime="20250702 18:50:54.154"/>
</kw>
<status status="PASS" starttime="20250702 18:50:51.109" endtime="20250702 18:50:54.155"/>
</kw>
<status status="PASS" starttime="20250702 18:50:48.110" endtime="20250702 18:50:54.155"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Create ${BUCKET_TYPE}s for FS test</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Create buckets for FS test" library="setup">
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${VOLUME}/${BUCKET} --space-quota 1TB --layout FILE_SYSTEM_OPTIMIZED</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:50:54.161" level="INFO">Running command 'ozone sh bucket create fstest1/17572-bucket1-ofs --space-quota 1TB --layout FILE_SYSTEM_OPTIMIZED 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:50:57.108" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:50:57.108" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:50:54.158" endtime="20250702 18:50:57.108"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:50:57.109" level="INFO"/>
<status status="PASS" starttime="20250702 18:50:57.109" endtime="20250702 18:50:57.109"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:50:57.109" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:50:57.109" endtime="20250702 18:50:57.109"/>
</kw>
<status status="PASS" starttime="20250702 18:50:54.158" endtime="20250702 18:50:57.110"/>
</kw>
<msg timestamp="20250702 18:50:57.110" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:50:54.158" endtime="20250702 18:50:57.110"/>
</kw>
<status status="PASS" starttime="20250702 18:50:54.157" endtime="20250702 18:50:57.110"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${VOLUME}/${BUCKET2} --space-quota 1TB --layout FILE_SYSTEM_OPTIMIZED</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:50:57.113" level="INFO">Running command 'ozone sh bucket create fstest1/17572-bucket2-ofs --space-quota 1TB --layout FILE_SYSTEM_OPTIMIZED 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:51:00.132" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:51:00.132" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:50:57.111" endtime="20250702 18:51:00.132"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:51:00.133" level="INFO"/>
<status status="PASS" starttime="20250702 18:51:00.133" endtime="20250702 18:51:00.133"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:51:00.133" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:51:00.133" endtime="20250702 18:51:00.134"/>
</kw>
<status status="PASS" starttime="20250702 18:50:57.110" endtime="20250702 18:51:00.134"/>
</kw>
<msg timestamp="20250702 18:51:00.134" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:50:57.110" endtime="20250702 18:51:00.134"/>
</kw>
<status status="PASS" starttime="20250702 18:50:57.110" endtime="20250702 18:51:00.134"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${VOL2}/${BUCKET_IN_VOL2} --space-quota 1TB --layout FILE_SYSTEM_OPTIMIZED</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:51:00.137" level="INFO">Running command 'ozone sh bucket create fstest2/17572-bucket3-ofs --space-quota 1TB --layout FILE_SYSTEM_OPTIMIZED 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:51:03.187" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:51:03.187" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:51:00.135" endtime="20250702 18:51:03.187"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:51:03.188" level="INFO"/>
<status status="PASS" starttime="20250702 18:51:03.187" endtime="20250702 18:51:03.188"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:51:03.188" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:51:03.188" endtime="20250702 18:51:03.188"/>
</kw>
<status status="PASS" starttime="20250702 18:51:00.135" endtime="20250702 18:51:03.188"/>
</kw>
<msg timestamp="20250702 18:51:03.188" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:51:00.134" endtime="20250702 18:51:03.188"/>
</kw>
<status status="PASS" starttime="20250702 18:51:00.134" endtime="20250702 18:51:03.188"/>
</kw>
<status status="PASS" starttime="20250702 18:50:54.157" endtime="20250702 18:51:03.188"/>
</kw>
<status status="PASS" starttime="20250702 18:50:54.155" endtime="20250702 18:51:03.189"/>
</kw>
<kw name="Sanity check for FS test" library="setup">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:51:03.192" level="INFO">Running command 'ozone sh volume list 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:51:06.258" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:51:06.258" level="INFO">${output} = [ {
  "metadata" : { },
  "name" : "40406-acls",
  "admin" : "testuser",
  "owner" : "testuser",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2025-07-02...</msg>
<status status="PASS" starttime="20250702 18:51:03.190" endtime="20250702 18:51:06.258"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:51:06.259" level="INFO">[ {
  "metadata" : { },
  "name" : "40406-acls",
  "admin" : "testuser",
  "owner" : "testuser",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2025-07-02T18:42:48.027Z",
  "modificationTime" : "2025-07-02T18:44:21.888Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "superuser1",
    "aclScope" : "DEFAULT",
    "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ],
    "aclSet" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
  }, {
    "type" : "GROUP",
    "name" : "superuser1",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ],
    "aclSet" : [ "ALL" ]
  }, {
    "type" : "USER",
    "name" : "testuser",
    "aclScope" : "ACCESS",
    "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ],
    "aclSet" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
  }, {
    "type" : "GROUP",
    "name" : "superuser1",
    "aclScope" : "DEFAULT",
    "aclList" : [ "ALL" ],
    "aclSet" : [ "ALL" ]
  }, {
    "type" : "USER",
    "name" : "testuser2",
    "aclScope" : "ACCESS",
    "aclList" : [ "READ", "WRITE", "LIST", "READ_ACL", "WRITE_ACL" ],
    "aclSet" : [ "READ", "WRITE", "LIST", "READ_ACL", "WRITE_ACL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "40406-with-del",
  "admin" : "testuser",
  "owner" : "testuser",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 2,
  "creationTime" : "2025-07-02T18:47:13.268Z",
  "modificationTime" : "2025-07-02T18:47:13.268Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ],
    "aclSet" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "testuser",
    "aclScope" : "ACCESS",
    "aclList" : [ "READ", "LIST" ],
    "aclSet" : [ "READ", "LIST" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "56851-source",
  "admin" : "testuser",
  "owner" : "testuser",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 3,
  "creationTime" : "2025-07-02T18:33:47.945Z",
  "modificationTime" : "2025-07-02T18:33:52.756Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ],
    "aclSet" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "testuser",
    "aclScope" : "ACCESS",
    "aclList" : [ "READ", "LIST" ],
    "aclSet" : [ "READ", "LIST" ]
  }, {
    "type" : "USER",
    "name" : "testuser2",
    "aclScope" : "ACCESS",
    "aclList" : [ "READ", "LIST" ],
    "aclSet" : [ "READ", "LIST" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "56851-target",
  "admin" : "testuser",
  "owner" : "testuser",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 8,
  "creationTime" : "2025-07-02T18:33:47.990Z",
  "modificationTime" : "2025-07-02T18:33:52.656Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ],
    "aclSet" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "testuser",
    "aclScope" : "ACCESS",
    "aclList" : [ "READ", "LIST" ],
    "aclSet" : [ "READ", "LIST" ]
  }, {
    "type" : "USER",
    "name" : "testuser2",
    "aclScope" : "DEFAULT",
    "aclList" : [ "READ" ],
    "aclSet" : [ "READ" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "fstest1",
  "admin" : "testuser",
  "owner" : "testuser",
  "quotaInBytes" : 109951162777600,
  "quotaInNamespace" : -1,
  "usedNamespace" : 2,
  "creationTime" : "2025-07-02T18:50:50.999Z",
  "modificationTime" : "2025-07-02T18:50:50.999Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ],
    "aclSet" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "testuser",
    "aclScope" : "ACCESS",
    "aclList" : [ "READ", "LIST" ],
    "aclSet" : [ "READ", "LIST" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "fstest2",
  "admin" : "testuser",
  "owner" : "testuser",
  "quotaInBytes" : 109951162777600,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2025-07-02T18:50:54.043Z",
  "modificationTime" : "2025-07-02T18:50:54.043Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ],
    "aclSet" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "testuser",
    "aclScope" : "ACCESS",
    "aclList" : [ "READ", "LIST" ],
    "aclSet" : [ "READ", "LIST" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "fstest250",
  "admin" : "testuser",
  "owner" : "testuser",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2025-07-02T18:48:20.471Z",
  "modificationTime" : "2025-07-02T18:48:20.471Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ],
    "aclSet" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "testuser",
    "aclScope" : "ACCESS",
    "aclList" : [ "READ", "LIST" ],
    "aclSet" : [ "READ", "LIST" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "fstest480",
  "admin" : "testuser",
  "owner" : "testuser2",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 0,
  "creationTime" : "2025-07-02T18:47:56.502Z",
  "modificationTime" : "2025-07-02T18:47:56.502Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser2",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ],
    "aclSet" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "testuser2",
    "aclScope" : "ACCESS",
    "aclList" : [ "READ", "LIST" ],
    "aclSet" : [ "READ", "LIST" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "fstest50",
  "admin" : "testuser",
  "owner" : "testuser",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 2,
  "creationTime" : "2025-07-02T18:48:17.552Z",
  "modificationTime" : "2025-07-02T18:48:17.552Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ],
    "aclSet" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "testuser",
    "aclScope" : "ACCESS",
    "aclList" : [ "READ", "LIST" ],
    "aclSet" : [ "READ", "LIST" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "s3v",
  "admin" : "om",
  "owner" : "om",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 3,
  "creationTime" : "2025-07-02T18:33:09.721Z",
  "modificationTime" : "2025-07-02T18:33:09.721Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "om",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ],
    "aclSet" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "om",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ],
    "aclSet" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "vol1",
  "admin" : "testuser",
  "owner" : "testuser",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2025-07-02T18:33:28.800Z",
  "modificationTime" : "2025-07-02T18:33:28.800Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ],
    "aclSet" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "testuser",
    "aclScope" : "ACCESS",
    "aclList" : [ "READ", "LIST" ],
    "aclSet" : [ "READ", "LIST" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "vol4399832614",
  "admin" : "testuser",
  "owner" : "testuser",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2025-07-02T18:50:37.378Z",
  "modificationTime" : "2025-07-02T18:50:37.378Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ],
    "aclSet" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "testuser",
    "aclScope" : "ACCESS",
    "aclList" : [ "READ", "LIST" ],
    "aclSet" : [ "READ", "LIST" ]
  } ],
  "refCount" : 0
} ]</msg>
<status status="PASS" starttime="20250702 18:51:06.258" endtime="20250702 18:51:06.259"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:51:06.259" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:51:06.259" endtime="20250702 18:51:06.259"/>
</kw>
<status status="PASS" starttime="20250702 18:51:03.189" endtime="20250702 18:51:06.259"/>
</kw>
<msg timestamp="20250702 18:51:06.260" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:51:03.189" endtime="20250702 18:51:06.260"/>
</kw>
<msg timestamp="20250702 18:51:06.260" level="INFO">${result} = [ {
  "metadata" : { },
  "name" : "40406-acls",
  "admin" : "testuser",
  "owner" : "testuser",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2025-07-02...</msg>
<status status="PASS" starttime="20250702 18:51:03.189" endtime="20250702 18:51:06.260"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${VOLUME}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250702 18:51:06.260" endtime="20250702 18:51:06.260"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${VOL2}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250702 18:51:06.260" endtime="20250702 18:51:06.260"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>"admin" : "(hadoop|testuser)"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20250702 18:51:06.260" endtime="20250702 18:51:06.261"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${VOLUME}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:51:06.264" level="INFO">Running command 'ozone sh bucket list fstest1 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:51:09.484" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:51:09.484" level="INFO">${output} = [ {
  "metadata" : { },
  "volumeName" : "fstest1",
  "name" : "17572-bucket1-ofs",
  "storageType" : "DISK",
  "versioning" : false,
  "listCacheSize" : 1000,
  "usedBytes" : 0,
  "usedNamespace" : 0...</msg>
<status status="PASS" starttime="20250702 18:51:06.262" endtime="20250702 18:51:09.484"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:51:09.485" level="INFO">[ {
  "metadata" : { },
  "volumeName" : "fstest1",
  "name" : "17572-bucket1-ofs",
  "storageType" : "DISK",
  "versioning" : false,
  "listCacheSize" : 1000,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2025-07-02T18:50:57.009Z",
  "modificationTime" : "2025-07-02T18:50:57.009Z",
  "sourcePathExist" : true,
  "quotaInBytes" : 1099511627776,
  "quotaInNamespace" : -1,
  "bucketLayout" : "FILE_SYSTEM_OPTIMIZED",
  "owner" : "testuser",
  "link" : false
}, {
  "metadata" : { },
  "volumeName" : "fstest1",
  "name" : "17572-bucket2-ofs",
  "storageType" : "DISK",
  "versioning" : false,
  "listCacheSize" : 1000,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2025-07-02T18:51:00.027Z",
  "modificationTime" : "2025-07-02T18:51:00.027Z",
  "sourcePathExist" : true,
  "quotaInBytes" : 1099511627776,
  "quotaInNamespace" : -1,
  "bucketLayout" : "FILE_SYSTEM_OPTIMIZED",
  "owner" : "testuser",
  "link" : false
} ]</msg>
<status status="PASS" starttime="20250702 18:51:09.485" endtime="20250702 18:51:09.485"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:51:09.486" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:51:09.485" endtime="20250702 18:51:09.486"/>
</kw>
<status status="PASS" starttime="20250702 18:51:06.262" endtime="20250702 18:51:09.486"/>
</kw>
<msg timestamp="20250702 18:51:09.486" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:51:06.261" endtime="20250702 18:51:09.486"/>
</kw>
<msg timestamp="20250702 18:51:09.486" level="INFO">${result} = [ {
  "metadata" : { },
  "volumeName" : "fstest1",
  "name" : "17572-bucket1-ofs",
  "storageType" : "DISK",
  "versioning" : false,
  "listCacheSize" : 1000,
  "usedBytes" : 0,
  "usedNamespace" : 0...</msg>
<status status="PASS" starttime="20250702 18:51:06.261" endtime="20250702 18:51:09.486"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250702 18:51:09.486" endtime="20250702 18:51:09.486"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET2}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250702 18:51:09.487" endtime="20250702 18:51:09.487"/>
</kw>
<status status="PASS" starttime="20250702 18:51:03.189" endtime="20250702 18:51:09.487"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Completed setup for ${SCHEME} tests with ${BUCKET_TYPE}s in ${VOLUME}/${BUCKET} using FS base URL: ${BASE_URL}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:51:09.487" level="INFO">Completed setup for ofs tests with buckets in fstest1/17572-bucket1-ofs using FS base URL: ofs://om/fstest1/17572-bucket1-ofs/</msg>
<status status="PASS" starttime="20250702 18:51:09.487" endtime="20250702 18:51:09.487"/>
</kw>
<status status="PASS" starttime="20250702 18:50:48.102" endtime="20250702 18:51:09.487"/>
</kw>
<test id="s1-s5-t1" name="List root" line="26">
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${VOLUME}</arg>
<arg>${BUCKET}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20250702 18:51:09.491" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20250702 18:51:09.491" endtime="20250702 18:51:09.491"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20250702 18:51:09.492" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20250702 18:51:09.491" endtime="20250702 18:51:09.492"/>
</kw>
<status status="PASS" starttime="20250702 18:51:09.491" endtime="20250702 18:51:09.492"/>
</kw>
<msg timestamp="20250702 18:51:09.492" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20250702 18:51:09.490" endtime="20250702 18:51:09.492"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20250702 18:51:09.493" endtime="20250702 18:51:09.493"/>
</kw>
<msg timestamp="20250702 18:51:09.493" level="INFO">${path_with_leading} = </msg>
<status status="PASS" starttime="20250702 18:51:09.492" endtime="20250702 18:51:09.493"/>
</kw>
<status status="PASS" starttime="20250702 18:51:09.489" endtime="20250702 18:51:09.494"/>
</kw>
<msg timestamp="20250702 18:51:09.494" level="INFO">${url} = ofs://om/fstest1/17572-bucket1-ofs</msg>
<status status="PASS" starttime="20250702 18:51:09.489" endtime="20250702 18:51:09.494"/>
</kw>
<msg timestamp="20250702 18:51:09.494" level="INFO">${root} = ofs://om/fstest1/17572-bucket1-ofs</msg>
<status status="PASS" starttime="20250702 18:51:09.488" endtime="20250702 18:51:09.494"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -ls ${root}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:51:09.497" level="INFO">Running command 'ozone fs -ls ofs://om/fstest1/17572-bucket1-ofs 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:51:12.494" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:51:12.494" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:51:09.495" endtime="20250702 18:51:12.494"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:51:12.494" level="INFO"/>
<status status="PASS" starttime="20250702 18:51:12.494" endtime="20250702 18:51:12.495"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:51:12.495" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:51:12.495" endtime="20250702 18:51:12.495"/>
</kw>
<status status="PASS" starttime="20250702 18:51:09.494" endtime="20250702 18:51:12.495"/>
</kw>
<msg timestamp="20250702 18:51:12.495" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:51:09.494" endtime="20250702 18:51:12.495"/>
</kw>
<status status="PASS" starttime="20250702 18:51:09.494" endtime="20250702 18:51:12.495"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250702 18:51:09.487" endtime="20250702 18:51:12.496"/>
</test>
<test id="s1-s5-t2" name="List non-existent volume" line="30">
<kw name="Format FS URL" library="fs">
<var>${url}</var>
<arg>${SCHEME}</arg>
<arg>no-such-volume</arg>
<arg>${BUCKET}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20250702 18:51:12.500" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20250702 18:51:12.499" endtime="20250702 18:51:12.500"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20250702 18:51:12.500" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20250702 18:51:12.500" endtime="20250702 18:51:12.500"/>
</kw>
<status status="PASS" starttime="20250702 18:51:12.499" endtime="20250702 18:51:12.500"/>
</kw>
<msg timestamp="20250702 18:51:12.500" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20250702 18:51:12.498" endtime="20250702 18:51:12.500"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20250702 18:51:12.501" endtime="20250702 18:51:12.501"/>
</kw>
<msg timestamp="20250702 18:51:12.502" level="INFO">${path_with_leading} = </msg>
<status status="PASS" starttime="20250702 18:51:12.500" endtime="20250702 18:51:12.502"/>
</kw>
<status status="PASS" starttime="20250702 18:51:12.498" endtime="20250702 18:51:12.502"/>
</kw>
<msg timestamp="20250702 18:51:12.502" level="INFO">${url} = ofs://om/no-such-volume/17572-bucket1-ofs</msg>
<status status="PASS" starttime="20250702 18:51:12.497" endtime="20250702 18:51:12.502"/>
</kw>
<msg timestamp="20250702 18:51:12.502" level="INFO">${url} = ofs://om/no-such-volume/17572-bucket1-ofs</msg>
<status status="PASS" starttime="20250702 18:51:12.496" endtime="20250702 18:51:12.502"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone fs -ls ${url}</arg>
<arg>1</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:51:12.505" level="INFO">Running command 'ozone fs -ls ofs://om/no-such-volume/17572-bucket1-ofs 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:51:15.435" level="INFO">${rc} = 1</msg>
<msg timestamp="20250702 18:51:15.435" level="INFO">${output} = ls: `ofs://om/no-such-volume/17572-bucket1-ofs': No such file or directory</msg>
<status status="PASS" starttime="20250702 18:51:12.502" endtime="20250702 18:51:15.435"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:51:15.436" level="INFO">ls: `ofs://om/no-such-volume/17572-bucket1-ofs': No such file or directory</msg>
<status status="PASS" starttime="20250702 18:51:15.436" endtime="20250702 18:51:15.436"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:51:15.437" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:51:15.436" endtime="20250702 18:51:15.437"/>
</kw>
<msg timestamp="20250702 18:51:15.437" level="INFO">${result} = ls: `ofs://om/no-such-volume/17572-bucket1-ofs': No such file or directory</msg>
<status status="PASS" starttime="20250702 18:51:12.502" endtime="20250702 18:51:15.437"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>(Check access operation failed)|(Volume no-such-volume is not found)|(No such file or directory)</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20250702 18:51:15.437" endtime="20250702 18:51:15.438"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250702 18:51:12.496" endtime="20250702 18:51:15.438"/>
</test>
<test id="s1-s5-t3" name="List non-existent bucket" line="35">
<kw name="Format FS URL" library="fs">
<var>${url}</var>
<arg>${SCHEME}</arg>
<arg>${VOLUME}</arg>
<arg>no-such-bucket</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20250702 18:51:15.442" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20250702 18:51:15.441" endtime="20250702 18:51:15.442"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20250702 18:51:15.442" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20250702 18:51:15.442" endtime="20250702 18:51:15.442"/>
</kw>
<status status="PASS" starttime="20250702 18:51:15.441" endtime="20250702 18:51:15.442"/>
</kw>
<msg timestamp="20250702 18:51:15.442" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20250702 18:51:15.440" endtime="20250702 18:51:15.442"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20250702 18:51:15.443" endtime="20250702 18:51:15.444"/>
</kw>
<msg timestamp="20250702 18:51:15.444" level="INFO">${path_with_leading} = </msg>
<status status="PASS" starttime="20250702 18:51:15.442" endtime="20250702 18:51:15.444"/>
</kw>
<status status="PASS" starttime="20250702 18:51:15.440" endtime="20250702 18:51:15.444"/>
</kw>
<msg timestamp="20250702 18:51:15.444" level="INFO">${url} = ofs://om/fstest1/no-such-bucket</msg>
<status status="PASS" starttime="20250702 18:51:15.439" endtime="20250702 18:51:15.444"/>
</kw>
<msg timestamp="20250702 18:51:15.444" level="INFO">${url} = ofs://om/fstest1/no-such-bucket</msg>
<status status="PASS" starttime="20250702 18:51:15.439" endtime="20250702 18:51:15.444"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone fs -ls ${url}</arg>
<arg>1</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:51:15.447" level="INFO">Running command 'ozone fs -ls ofs://om/fstest1/no-such-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:51:18.258" level="INFO">${rc} = 1</msg>
<msg timestamp="20250702 18:51:18.258" level="INFO">${output} = ls: `ofs://om/fstest1/no-such-bucket': No such file or directory</msg>
<status status="PASS" starttime="20250702 18:51:15.444" endtime="20250702 18:51:18.258"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:51:18.259" level="INFO">ls: `ofs://om/fstest1/no-such-bucket': No such file or directory</msg>
<status status="PASS" starttime="20250702 18:51:18.258" endtime="20250702 18:51:18.259"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:51:18.259" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:51:18.259" endtime="20250702 18:51:18.259"/>
</kw>
<msg timestamp="20250702 18:51:18.259" level="INFO">${result} = ls: `ofs://om/fstest1/no-such-bucket': No such file or directory</msg>
<status status="PASS" starttime="20250702 18:51:15.444" endtime="20250702 18:51:18.260"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>(Check access operation failed)|(Bucket not found)|(No such file or directory)</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20250702 18:51:18.260" endtime="20250702 18:51:18.260"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250702 18:51:15.438" endtime="20250702 18:51:18.260"/>
</test>
<test id="s1-s5-t4" name="Create dir with parents" line="40">
<kw name="Execute" library="os">
<arg>ozone fs -mkdir -p ${DEEP_URL}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:51:18.264" level="INFO">Running command 'ozone fs -mkdir -p ofs://om/fstest1/17572-bucket1-ofs/test/ofs/dir 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:51:21.200" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:51:21.200" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:51:18.262" endtime="20250702 18:51:21.200"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:51:21.201" level="INFO"/>
<status status="PASS" starttime="20250702 18:51:21.200" endtime="20250702 18:51:21.201"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:51:21.201" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:51:21.201" endtime="20250702 18:51:21.201"/>
</kw>
<status status="PASS" starttime="20250702 18:51:18.262" endtime="20250702 18:51:21.201"/>
</kw>
<msg timestamp="20250702 18:51:21.201" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:51:18.262" endtime="20250702 18:51:21.201"/>
</kw>
<status status="PASS" starttime="20250702 18:51:18.261" endtime="20250702 18:51:21.202"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:51:21.205" level="INFO">Running command 'ozone sh key list fstest1/17572-bucket1-ofs | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:51:24.315" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:51:24.316" level="INFO">${output} = test/
test/ofs/
test/ofs/dir/</msg>
<status status="PASS" starttime="20250702 18:51:21.202" endtime="20250702 18:51:24.316"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:51:24.316" level="INFO">test/
test/ofs/
test/ofs/dir/</msg>
<status status="PASS" starttime="20250702 18:51:24.316" endtime="20250702 18:51:24.317"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:51:24.317" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:51:24.317" endtime="20250702 18:51:24.317"/>
</kw>
<status status="PASS" starttime="20250702 18:51:21.202" endtime="20250702 18:51:24.317"/>
</kw>
<msg timestamp="20250702 18:51:24.317" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:51:21.202" endtime="20250702 18:51:24.317"/>
</kw>
<msg timestamp="20250702 18:51:24.317" level="INFO">${result} = test/
test/ofs/
test/ofs/dir/</msg>
<status status="PASS" starttime="20250702 18:51:21.202" endtime="20250702 18:51:24.317"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${DEEP_DIR}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250702 18:51:24.318" endtime="20250702 18:51:24.318"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250702 18:51:18.261" endtime="20250702 18:51:24.318"/>
</test>
<test id="s1-s5-t5" name="Copy from local" line="45">
<kw name="Execute" library="os">
<arg>ozone fs -copyFromLocal NOTICE.txt ${DEEP_URL}/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:51:24.323" level="INFO">Running command 'ozone fs -copyFromLocal NOTICE.txt ofs://om/fstest1/17572-bucket1-ofs/test/ofs/dir/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:51:29.043" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:51:29.043" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:51:24.320" endtime="20250702 18:51:29.043"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:51:29.044" level="INFO"/>
<status status="PASS" starttime="20250702 18:51:29.044" endtime="20250702 18:51:29.044"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:51:29.045" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:51:29.045" endtime="20250702 18:51:29.045"/>
</kw>
<status status="PASS" starttime="20250702 18:51:24.320" endtime="20250702 18:51:29.045"/>
</kw>
<msg timestamp="20250702 18:51:29.045" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:51:24.319" endtime="20250702 18:51:29.045"/>
</kw>
<status status="PASS" starttime="20250702 18:51:24.319" endtime="20250702 18:51:29.045"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:51:29.049" level="INFO">Running command 'ozone sh key list fstest1/17572-bucket1-ofs | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:51:32.363" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:51:32.363" level="INFO">${output} = test/
test/ofs/
test/ofs/dir/
test/ofs/dir/NOTICE.txt</msg>
<status status="PASS" starttime="20250702 18:51:29.046" endtime="20250702 18:51:32.363"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:51:32.364" level="INFO">test/
test/ofs/
test/ofs/dir/
test/ofs/dir/NOTICE.txt</msg>
<status status="PASS" starttime="20250702 18:51:32.363" endtime="20250702 18:51:32.364"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:51:32.364" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:51:32.364" endtime="20250702 18:51:32.365"/>
</kw>
<status status="PASS" starttime="20250702 18:51:29.046" endtime="20250702 18:51:32.365"/>
</kw>
<msg timestamp="20250702 18:51:32.365" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:51:29.046" endtime="20250702 18:51:32.365"/>
</kw>
<msg timestamp="20250702 18:51:32.365" level="INFO">${result} = test/
test/ofs/
test/ofs/dir/
test/ofs/dir/NOTICE.txt</msg>
<status status="PASS" starttime="20250702 18:51:29.045" endtime="20250702 18:51:32.365"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250702 18:51:32.365" endtime="20250702 18:51:32.365"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${VOLUME}/${BUCKET}/${DEEP_DIR}/NOTICE.txt | jq -r '.replicationConfig.replicationFactor'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:51:32.369" level="INFO">Running command 'ozone sh key info fstest1/17572-bucket1-ofs/test/ofs/dir/NOTICE.txt | jq -r '.replicationConfig.replicationFactor' 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:51:35.566" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:51:35.567" level="INFO">${output} = THREE</msg>
<status status="PASS" starttime="20250702 18:51:32.366" endtime="20250702 18:51:35.567"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:51:35.568" level="INFO">THREE</msg>
<status status="PASS" starttime="20250702 18:51:35.567" endtime="20250702 18:51:35.568"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:51:35.568" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:51:35.568" endtime="20250702 18:51:35.568"/>
</kw>
<status status="PASS" starttime="20250702 18:51:32.366" endtime="20250702 18:51:35.568"/>
</kw>
<msg timestamp="20250702 18:51:35.568" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:51:32.366" endtime="20250702 18:51:35.568"/>
</kw>
<msg timestamp="20250702 18:51:35.568" level="INFO">${result} = THREE</msg>
<status status="PASS" starttime="20250702 18:51:32.365" endtime="20250702 18:51:35.568"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>THREE</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250702 18:51:35.569" endtime="20250702 18:51:35.569"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250702 18:51:24.318" endtime="20250702 18:51:35.569"/>
</test>
<test id="s1-s5-t6" name="Put" line="52">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone fs -put NOTICE.txt ${DEEP_URL}/PUTFILE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:51:35.573" level="INFO">Running command 'ozone fs -put NOTICE.txt ofs://om/fstest1/17572-bucket1-ofs/test/ofs/dir/PUTFILE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:51:40.495" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:51:40.495" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:51:35.571" endtime="20250702 18:51:40.495"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:51:40.496" level="INFO"/>
<status status="PASS" starttime="20250702 18:51:40.496" endtime="20250702 18:51:40.496"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:51:40.497" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:51:40.496" endtime="20250702 18:51:40.497"/>
</kw>
<status status="PASS" starttime="20250702 18:51:35.570" endtime="20250702 18:51:40.497"/>
</kw>
<msg timestamp="20250702 18:51:40.497" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:51:35.570" endtime="20250702 18:51:40.497"/>
</kw>
<msg timestamp="20250702 18:51:40.497" level="INFO">${result} = </msg>
<status status="PASS" starttime="20250702 18:51:35.570" endtime="20250702 18:51:40.497"/>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${result}</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20250702 18:51:40.498" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20250702 18:51:40.497" endtime="20250702 18:51:40.498"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:51:40.501" level="INFO">Running command 'ozone sh key list fstest1/17572-bucket1-ofs | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:51:43.594" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:51:43.594" level="INFO">${output} = test/
test/ofs/
test/ofs/dir/
test/ofs/dir/NOTICE.txt
test/ofs/dir/PUTFILE.txt</msg>
<status status="PASS" starttime="20250702 18:51:40.499" endtime="20250702 18:51:43.594"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:51:43.595" level="INFO">test/
test/ofs/
test/ofs/dir/
test/ofs/dir/NOTICE.txt
test/ofs/dir/PUTFILE.txt</msg>
<status status="PASS" starttime="20250702 18:51:43.595" endtime="20250702 18:51:43.595"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:51:43.596" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:51:43.595" endtime="20250702 18:51:43.596"/>
</kw>
<status status="PASS" starttime="20250702 18:51:40.498" endtime="20250702 18:51:43.596"/>
</kw>
<msg timestamp="20250702 18:51:43.596" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:51:40.498" endtime="20250702 18:51:43.596"/>
</kw>
<msg timestamp="20250702 18:51:43.596" level="INFO">${result} = test/
test/ofs/
test/ofs/dir/
test/ofs/dir/NOTICE.txt
test/ofs/dir/PUTFILE.txt</msg>
<status status="PASS" starttime="20250702 18:51:40.498" endtime="20250702 18:51:43.596"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PUTFILE.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250702 18:51:43.596" endtime="20250702 18:51:43.597"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250702 18:51:35.569" endtime="20250702 18:51:43.597"/>
</test>
<test id="s1-s5-t7" name="Check disk usage after create a file which uses RATIS replication type" line="59">
<kw name="Generate Random String" library="String">
<var>${vol}</var>
<arg>8</arg>
<arg>[LOWER]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250702 18:51:43.598" level="INFO">${vol} = jwbbhbzs</msg>
<status status="PASS" starttime="20250702 18:51:43.598" endtime="20250702 18:51:43.598"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${bucket}</var>
<arg>8</arg>
<arg>[LOWER]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250702 18:51:43.599" level="INFO">${bucket} = bjmkswwm</msg>
<status status="PASS" starttime="20250702 18:51:43.598" endtime="20250702 18:51:43.599"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create /${vol}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:51:43.602" level="INFO">Running command 'ozone sh volume create /jwbbhbzs 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:51:46.528" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:51:46.528" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:51:43.600" endtime="20250702 18:51:46.528"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:51:46.529" level="INFO"/>
<status status="PASS" starttime="20250702 18:51:46.529" endtime="20250702 18:51:46.529"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:51:46.529" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:51:46.529" endtime="20250702 18:51:46.530"/>
</kw>
<status status="PASS" starttime="20250702 18:51:43.599" endtime="20250702 18:51:46.530"/>
</kw>
<msg timestamp="20250702 18:51:46.530" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:51:43.599" endtime="20250702 18:51:46.530"/>
</kw>
<status status="PASS" starttime="20250702 18:51:43.599" endtime="20250702 18:51:46.530"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create /${vol}/${bucket} --type RATIS --replication 3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:51:46.533" level="INFO">Running command 'ozone sh bucket create /jwbbhbzs/bjmkswwm --type RATIS --replication 3 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:51:49.496" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:51:49.496" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:51:46.531" endtime="20250702 18:51:49.496"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:51:49.497" level="INFO"/>
<status status="PASS" starttime="20250702 18:51:49.497" endtime="20250702 18:51:49.497"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:51:49.498" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:51:49.497" endtime="20250702 18:51:49.498"/>
</kw>
<status status="PASS" starttime="20250702 18:51:46.531" endtime="20250702 18:51:49.498"/>
</kw>
<msg timestamp="20250702 18:51:49.498" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:51:46.530" endtime="20250702 18:51:49.498"/>
</kw>
<status status="PASS" starttime="20250702 18:51:46.530" endtime="20250702 18:51:49.498"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -put NOTICE.txt /${vol}/${bucket}/PUTFILE1.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:51:49.501" level="INFO">Running command 'ozone fs -put NOTICE.txt /jwbbhbzs/bjmkswwm/PUTFILE1.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:51:54.211" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:51:54.211" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:51:49.499" endtime="20250702 18:51:54.211"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:51:54.212" level="INFO"/>
<status status="PASS" starttime="20250702 18:51:54.211" endtime="20250702 18:51:54.212"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:51:54.212" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:51:54.212" endtime="20250702 18:51:54.212"/>
</kw>
<status status="PASS" starttime="20250702 18:51:49.499" endtime="20250702 18:51:54.212"/>
</kw>
<msg timestamp="20250702 18:51:54.212" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:51:49.499" endtime="20250702 18:51:54.212"/>
</kw>
<status status="PASS" starttime="20250702 18:51:49.498" endtime="20250702 18:51:54.213"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedFileLength}</var>
<arg>stat -c %s NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:51:54.216" level="INFO">Running command 'stat -c %s NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:51:54.219" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:51:54.219" level="INFO">${output} = 15892</msg>
<status status="PASS" starttime="20250702 18:51:54.213" endtime="20250702 18:51:54.219"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:51:54.220" level="INFO">15892</msg>
<status status="PASS" starttime="20250702 18:51:54.219" endtime="20250702 18:51:54.220"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:51:54.220" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:51:54.220" endtime="20250702 18:51:54.220"/>
</kw>
<status status="PASS" starttime="20250702 18:51:54.213" endtime="20250702 18:51:54.220"/>
</kw>
<msg timestamp="20250702 18:51:54.220" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:51:54.213" endtime="20250702 18:51:54.220"/>
</kw>
<msg timestamp="20250702 18:51:54.221" level="INFO">${expectedFileLength} = 15892</msg>
<status status="PASS" starttime="20250702 18:51:54.213" endtime="20250702 18:51:54.221"/>
</kw>
<kw name="Get Disk Usage of File with RATIS Replication">
<var>${expectedDiskUsage}</var>
<arg>${expectedFileLength}</arg>
<arg>3</arg>
<kw name="Evaluate" library="BuiltIn">
<var>${expectedDiskUsage}</var>
<arg>${fileLength} * ${replicationFactor}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20250702 18:51:54.222" level="INFO">${expectedDiskUsage} = 47676</msg>
<status status="PASS" starttime="20250702 18:51:54.221" endtime="20250702 18:51:54.222"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${expectedDiskUsage}</var>
<arg>${expectedDiskUsage}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20250702 18:51:54.222" level="INFO">${expectedDiskUsage} = 47676</msg>
<status status="PASS" starttime="20250702 18:51:54.222" endtime="20250702 18:51:54.222"/>
</kw>
<msg timestamp="20250702 18:51:54.222" level="INFO">${expectedDiskUsage} = 47676</msg>
<status status="PASS" starttime="20250702 18:51:54.221" endtime="20250702 18:51:54.222"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone fs -du /${vol}/${bucket}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:51:54.225" level="INFO">Running command 'ozone fs -du /jwbbhbzs/bjmkswwm 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:51:57.135" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:51:57.135" level="INFO">${output} = 15892  47676  /jwbbhbzs/bjmkswwm/PUTFILE1.txt</msg>
<status status="PASS" starttime="20250702 18:51:54.223" endtime="20250702 18:51:57.135"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:51:57.136" level="INFO">15892  47676  /jwbbhbzs/bjmkswwm/PUTFILE1.txt</msg>
<status status="PASS" starttime="20250702 18:51:57.135" endtime="20250702 18:51:57.136"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:51:57.136" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:51:57.136" endtime="20250702 18:51:57.136"/>
</kw>
<status status="PASS" starttime="20250702 18:51:54.223" endtime="20250702 18:51:57.137"/>
</kw>
<msg timestamp="20250702 18:51:57.137" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:51:54.222" endtime="20250702 18:51:57.137"/>
</kw>
<msg timestamp="20250702 18:51:57.137" level="INFO">${result} = 15892  47676  /jwbbhbzs/bjmkswwm/PUTFILE1.txt</msg>
<status status="PASS" starttime="20250702 18:51:54.222" endtime="20250702 18:51:57.137"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PUTFILE1.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250702 18:51:57.137" endtime="20250702 18:51:57.137"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expectedFileLength}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250702 18:51:57.137" endtime="20250702 18:51:57.137"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expectedDiskUsage}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250702 18:51:57.138" endtime="20250702 18:51:57.138"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250702 18:51:43.597" endtime="20250702 18:51:57.138"/>
</test>
<test id="s1-s5-t8" name="Put with Streaming" line="73">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone fs -D ozone.fs.datastream.enabled=true -put NOTICE.txt ${DEEP_URL}/STREAMING.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:51:57.142" level="INFO">Running command 'ozone fs -D ozone.fs.datastream.enabled=true -put NOTICE.txt ofs://om/fstest1/17572-bucket1-ofs/test/ofs/dir/STREAMING.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:52:02.145" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:52:02.145" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:51:57.140" endtime="20250702 18:52:02.145"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:52:02.146" level="INFO"/>
<status status="PASS" starttime="20250702 18:52:02.145" endtime="20250702 18:52:02.146"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:52:02.146" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:52:02.146" endtime="20250702 18:52:02.146"/>
</kw>
<status status="PASS" starttime="20250702 18:51:57.139" endtime="20250702 18:52:02.146"/>
</kw>
<msg timestamp="20250702 18:52:02.146" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:51:57.139" endtime="20250702 18:52:02.146"/>
</kw>
<msg timestamp="20250702 18:52:02.146" level="INFO">${result} = </msg>
<status status="PASS" starttime="20250702 18:51:57.139" endtime="20250702 18:52:02.146"/>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${result}</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20250702 18:52:02.147" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20250702 18:52:02.147" endtime="20250702 18:52:02.147"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:52:02.150" level="INFO">Running command 'ozone sh key list fstest1/17572-bucket1-ofs | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:52:05.261" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:52:05.261" level="INFO">${output} = test/
test/ofs/
test/ofs/dir/
test/ofs/dir/NOTICE.txt
test/ofs/dir/PUTFILE.txt
test/ofs/dir/STREAMING.txt</msg>
<status status="PASS" starttime="20250702 18:52:02.148" endtime="20250702 18:52:05.261"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:52:05.262" level="INFO">test/
test/ofs/
test/ofs/dir/
test/ofs/dir/NOTICE.txt
test/ofs/dir/PUTFILE.txt
test/ofs/dir/STREAMING.txt</msg>
<status status="PASS" starttime="20250702 18:52:05.261" endtime="20250702 18:52:05.262"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:52:05.262" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:52:05.262" endtime="20250702 18:52:05.262"/>
</kw>
<status status="PASS" starttime="20250702 18:52:02.147" endtime="20250702 18:52:05.263"/>
</kw>
<msg timestamp="20250702 18:52:05.263" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:52:02.147" endtime="20250702 18:52:05.263"/>
</kw>
<msg timestamp="20250702 18:52:05.263" level="INFO">${result} = test/
test/ofs/
test/ofs/dir/
test/ofs/dir/NOTICE.txt
test/ofs/dir/PUTFILE.txt
test/ofs/dir/STREAMING.txt</msg>
<status status="PASS" starttime="20250702 18:52:02.147" endtime="20250702 18:52:05.263"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>STREAMING.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250702 18:52:05.263" endtime="20250702 18:52:05.263"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250702 18:51:57.138" endtime="20250702 18:52:05.263"/>
</test>
<test id="s1-s5-t9" name="List" line="80">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone fs -ls ${DEEP_URL}/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:52:05.268" level="INFO">Running command 'ozone fs -ls ofs://om/fstest1/17572-bucket1-ofs/test/ofs/dir/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:52:08.272" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:52:08.272" level="INFO">${output} = Found 3 items
-rw-rw-rw-   3 testuser testuser      15892 2025-07-02 18:51 ofs://om/fstest1/17572-bucket1-ofs/test/ofs/dir/NOTICE.txt
-rw-rw-rw-   3 testuser testuser      15892 2025-07-02 18:51 ofs:/...</msg>
<status status="PASS" starttime="20250702 18:52:05.265" endtime="20250702 18:52:08.272"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:52:08.273" level="INFO">Found 3 items
-rw-rw-rw-   3 testuser testuser      15892 2025-07-02 18:51 ofs://om/fstest1/17572-bucket1-ofs/test/ofs/dir/NOTICE.txt
-rw-rw-rw-   3 testuser testuser      15892 2025-07-02 18:51 ofs://om/fstest1/17572-bucket1-ofs/test/ofs/dir/PUTFILE.txt
-rw-rw-rw-   3 testuser testuser      15892 2025-07-02 18:52 ofs://om/fstest1/17572-bucket1-ofs/test/ofs/dir/STREAMING.txt</msg>
<status status="PASS" starttime="20250702 18:52:08.272" endtime="20250702 18:52:08.273"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:52:08.273" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:52:08.273" endtime="20250702 18:52:08.273"/>
</kw>
<status status="PASS" starttime="20250702 18:52:05.265" endtime="20250702 18:52:08.274"/>
</kw>
<msg timestamp="20250702 18:52:08.274" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:52:05.264" endtime="20250702 18:52:08.274"/>
</kw>
<msg timestamp="20250702 18:52:08.274" level="INFO">${result} = Found 3 items
-rw-rw-rw-   3 testuser testuser      15892 2025-07-02 18:51 ofs://om/fstest1/17572-bucket1-ofs/test/ofs/dir/NOTICE.txt
-rw-rw-rw-   3 testuser testuser      15892 2025-07-02 18:51 ofs:/...</msg>
<status status="PASS" starttime="20250702 18:52:05.264" endtime="20250702 18:52:08.274"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250702 18:52:08.274" endtime="20250702 18:52:08.274"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PUTFILE.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250702 18:52:08.274" endtime="20250702 18:52:08.274"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>STREAMING.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250702 18:52:08.275" endtime="20250702 18:52:08.275"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250702 18:52:05.264" endtime="20250702 18:52:08.275"/>
</test>
<test id="s1-s5-t10" name="Move" line="86">
<kw name="Execute" library="os">
<arg>ozone fs -mv ${DEEP_URL}/NOTICE.txt ${DEEP_URL}/MOVED.TXT</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:52:08.279" level="INFO">Running command 'ozone fs -mv ofs://om/fstest1/17572-bucket1-ofs/test/ofs/dir/NOTICE.txt ofs://om/fstest1/17572-bucket1-ofs/test/ofs/dir/MOVED.TXT 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:52:11.183" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:52:11.183" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:52:08.276" endtime="20250702 18:52:11.183"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:52:11.184" level="INFO"/>
<status status="PASS" starttime="20250702 18:52:11.183" endtime="20250702 18:52:11.184"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:52:11.184" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:52:11.184" endtime="20250702 18:52:11.184"/>
</kw>
<status status="PASS" starttime="20250702 18:52:08.276" endtime="20250702 18:52:11.184"/>
</kw>
<msg timestamp="20250702 18:52:11.184" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:52:08.276" endtime="20250702 18:52:11.184"/>
</kw>
<status status="PASS" starttime="20250702 18:52:08.276" endtime="20250702 18:52:11.185"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:52:11.188" level="INFO">Running command 'ozone sh key list fstest1/17572-bucket1-ofs | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:52:14.268" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:52:14.268" level="INFO">${output} = test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt
test/ofs/dir/STREAMING.txt</msg>
<status status="PASS" starttime="20250702 18:52:11.186" endtime="20250702 18:52:14.268"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:52:14.269" level="INFO">test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt
test/ofs/dir/STREAMING.txt</msg>
<status status="PASS" starttime="20250702 18:52:14.268" endtime="20250702 18:52:14.269"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:52:14.269" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:52:14.269" endtime="20250702 18:52:14.269"/>
</kw>
<status status="PASS" starttime="20250702 18:52:11.185" endtime="20250702 18:52:14.269"/>
</kw>
<msg timestamp="20250702 18:52:14.269" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:52:11.185" endtime="20250702 18:52:14.269"/>
</kw>
<msg timestamp="20250702 18:52:14.270" level="INFO">${result} = test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt
test/ofs/dir/STREAMING.txt</msg>
<status status="PASS" starttime="20250702 18:52:11.185" endtime="20250702 18:52:14.270"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>MOVED.TXT</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250702 18:52:14.270" endtime="20250702 18:52:14.270"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250702 18:52:14.270" endtime="20250702 18:52:14.270"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250702 18:52:08.275" endtime="20250702 18:52:14.270"/>
</test>
<test id="s1-s5-t11" name="Copy within FS" line="92">
<kw name="Execute" library="os" type="SETUP">
<arg>ozone fs -mkdir -p ${DEEP_URL}/subdir1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:52:14.275" level="INFO">Running command 'ozone fs -mkdir -p ofs://om/fstest1/17572-bucket1-ofs/test/ofs/dir/subdir1 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:52:17.105" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:52:17.105" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:52:14.272" endtime="20250702 18:52:17.105"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:52:17.106" level="INFO"/>
<status status="PASS" starttime="20250702 18:52:17.105" endtime="20250702 18:52:17.106"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:52:17.106" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:52:17.106" endtime="20250702 18:52:17.106"/>
</kw>
<status status="PASS" starttime="20250702 18:52:14.272" endtime="20250702 18:52:17.106"/>
</kw>
<msg timestamp="20250702 18:52:17.107" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:52:14.272" endtime="20250702 18:52:17.107"/>
</kw>
<status status="PASS" starttime="20250702 18:52:14.271" endtime="20250702 18:52:17.107"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -cp ${DEEP_URL}/MOVED.TXT ${DEEP_URL}/subdir1/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:52:17.110" level="INFO">Running command 'ozone fs -cp ofs://om/fstest1/17572-bucket1-ofs/test/ofs/dir/MOVED.TXT ofs://om/fstest1/17572-bucket1-ofs/test/ofs/dir/subdir1/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:52:22.055" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:52:22.055" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:52:17.108" endtime="20250702 18:52:22.055"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:52:22.056" level="INFO"/>
<status status="PASS" starttime="20250702 18:52:22.056" endtime="20250702 18:52:22.056"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:52:22.057" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:52:22.056" endtime="20250702 18:52:22.057"/>
</kw>
<status status="PASS" starttime="20250702 18:52:17.107" endtime="20250702 18:52:22.057"/>
</kw>
<msg timestamp="20250702 18:52:22.057" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:52:17.107" endtime="20250702 18:52:22.057"/>
</kw>
<status status="PASS" starttime="20250702 18:52:17.107" endtime="20250702 18:52:22.057"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:52:22.061" level="INFO">Running command 'ozone sh key list fstest1/17572-bucket1-ofs | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:52:25.247" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:52:25.247" level="INFO">${output} = test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt
test/ofs/dir/STREAMING.txt
test/ofs/dir/subdir1/
test/ofs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" starttime="20250702 18:52:22.058" endtime="20250702 18:52:25.247"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:52:25.248" level="INFO">test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt
test/ofs/dir/STREAMING.txt
test/ofs/dir/subdir1/
test/ofs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" starttime="20250702 18:52:25.248" endtime="20250702 18:52:25.248"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:52:25.249" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:52:25.249" endtime="20250702 18:52:25.249"/>
</kw>
<status status="PASS" starttime="20250702 18:52:22.058" endtime="20250702 18:52:25.249"/>
</kw>
<msg timestamp="20250702 18:52:25.249" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:52:22.058" endtime="20250702 18:52:25.249"/>
</kw>
<msg timestamp="20250702 18:52:25.249" level="INFO">${result} = test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt
test/ofs/dir/STREAMING.txt
test/ofs/dir/subdir1/
test/ofs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" starttime="20250702 18:52:22.057" endtime="20250702 18:52:25.249"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>subdir1/NOTICE.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250702 18:52:25.250" endtime="20250702 18:52:25.250"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone fs -ls ${DEEP_URL}/subdir1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:52:25.253" level="INFO">Running command 'ozone fs -ls ofs://om/fstest1/17572-bucket1-ofs/test/ofs/dir/subdir1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:52:28.078" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:52:28.078" level="INFO">${output} = Found 1 items
-rw-rw-rw-   3 testuser testuser      15892 2025-07-02 18:52 ofs://om/fstest1/17572-bucket1-ofs/test/ofs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" starttime="20250702 18:52:25.251" endtime="20250702 18:52:28.078"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:52:28.079" level="INFO">Found 1 items
-rw-rw-rw-   3 testuser testuser      15892 2025-07-02 18:52 ofs://om/fstest1/17572-bucket1-ofs/test/ofs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" starttime="20250702 18:52:28.078" endtime="20250702 18:52:28.079"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:52:28.079" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:52:28.079" endtime="20250702 18:52:28.079"/>
</kw>
<status status="PASS" starttime="20250702 18:52:25.250" endtime="20250702 18:52:28.079"/>
</kw>
<msg timestamp="20250702 18:52:28.079" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:52:25.250" endtime="20250702 18:52:28.079"/>
</kw>
<msg timestamp="20250702 18:52:28.079" level="INFO">${result} = Found 1 items
-rw-rw-rw-   3 testuser testuser      15892 2025-07-02 18:52 ofs://om/fstest1/17572-bucket1-ofs/test/ofs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" starttime="20250702 18:52:25.250" endtime="20250702 18:52:28.079"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250702 18:52:28.080" endtime="20250702 18:52:28.080"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250702 18:52:28.080" endtime="20250702 18:52:28.080"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250702 18:52:14.271" endtime="20250702 18:52:28.080"/>
</test>
<test id="s1-s5-t12" name="Cat file" line="102">
<kw name="Execute" library="os">
<arg>ozone fs -cat ${DEEP_URL}/subdir1/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:52:28.084" level="INFO">Running command 'ozone fs -cat ofs://om/fstest1/17572-bucket1-ofs/test/ofs/dir/subdir1/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:52:32.442" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:52:32.442" level="INFO">${output} = Apache Ozone
Copyright 2025 The Apache Software Foundation

This product includes software developed at
The Apache Software Foundation (http://www.apache.org/).

Export Control Notice
----------------...</msg>
<status status="PASS" starttime="20250702 18:52:28.082" endtime="20250702 18:52:32.442"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:52:32.443" level="INFO">Apache Ozone
Copyright 2025 The Apache Software Foundation

This product includes software developed at
The Apache Software Foundation (http://www.apache.org/).

Export Control Notice
---------------------

This distribution includes cryptographic software.  The country in
which you currently reside may have restrictions on the import,
possession, use, and/or re-export to another country, of
encryption software.  BEFORE using any encryption software, please
check your country's laws, regulations and policies concerning the
import, possession, or use, and re-export of encryption software, to
see if this is permitted.  See &lt;http://www.wassenaar.org/&gt; for more
information.

The U.S. Government Department of Commerce, Bureau of Industry and
Security (BIS), has classified this software as Export Commodity
Control Number (ECCN) 5D002.C.1, which includes information security
software using or performing cryptographic functions with asymmetric
algorithms.  The form and manner of this Apache Software Foundation
distribution makes it eligible for export under the License Exception
ENC Technology Software Unrestricted (TSU) exception (see the BIS
Export Administration Regulations, Section 740.13) for both object
code and source code.

This software uses the SSL libraries from the Jetty project written
by mortbay.org abd BouncyCastle Java cryptography APIs written by the
 Legion of the Bouncy Castle Inc.

**********************
THIRD PARTY COMPONENTS
**********************
This software includes third party software subject to the following copyrights:

io.netty:netty-all
====================


                            The Netty Project
                            =================

Please visit the Netty web site for more information:

  * https://netty.io/

Copyright 2014 The Netty Project

The Netty Project licenses this file to you under the Apache License,
version 2.0 (the "License"); you may not use this file except in compliance
with the License. You may obtain a copy of the License at:

  http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
License for the specific language governing permissions and limitations
under the License.

Also, please refer to each LICENSE.&lt;component&gt;.txt file, which is located in
the 'license' directory of the distribution file, for the license terms of the
components that this product depends on.

-------------------------------------------------------------------------------
This product contains the extensions to Java Collections Framework which has
been derived from the works by JSR-166 EG, Doug Lea, and Jason T. Greene:

  * LICENSE:
    * license/LICENSE.jsr166y.txt (Public Domain)
  * HOMEPAGE:
    * http://gee.cs.oswego.edu/cgi-bin/viewcvs.cgi/jsr166/
    * http://viewvc.jboss.org/cgi-bin/viewvc.cgi/jbosscache/experimental/jsr166/

This product contains a modified version of Robert Harder's Public Domain
Base64 Encoder and Decoder, which can be obtained at:

  * LICENSE:
    * license/LICENSE.base64.txt (Public Domain)
  * HOMEPAGE:
    * http://iharder.sourceforge.net/current/java/base64/

This product contains a modified portion of 'Webbit', an event based
WebSocket and HTTP server, which can be obtained at:

  * LICENSE:
    * license/LICENSE.webbit.txt (BSD License)
  * HOMEPAGE:
    * https://github.com/joewalnes/webbit

This product contains a modified portion of 'SLF4J', a simple logging
facade for Java, which can be obtained at:

  * LICENSE:
    * license/LICENSE.slf4j.txt (MIT License)
  * HOMEPAGE:
    * http://www.slf4j.org/

This product contains a modified portion of 'Apache Harmony', an open source
Java SE, which can be obtained at:

  * NOTICE:
    * license/NOTICE.harmony.txt
  * LICENSE:
    * license/LICENSE.harmony.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://archive.apache.org/dist/harmony/

This product contains a modified portion of 'jbzip2', a Java bzip2 compression
and decompression library written by Matthew J. Francis. It can be obtained at:

  * LICENSE:
    * license/LICENSE.jbzip2.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/jbzip2/

This product contains a modified portion of 'libdivsufsort', a C API library to construct
the suffix array and the Burrows-Wheeler transformed string for any input string of
a constant-size alphabet written by Yuta Mori. It can be obtained at:

  * LICENSE:
    * license/LICENSE.libdivsufsort.txt (MIT License)
  * HOMEPAGE:
    * https://github.com/y-256/libdivsufsort

This product contains a modified portion of Nitsan Wakart's 'JCTools', Java Concurrency Tools for the JVM,
 which can be obtained at:

  * LICENSE:
    * license/LICENSE.jctools.txt (ASL2 License)
  * HOMEPAGE:
    * https://github.com/JCTools/JCTools

This product optionally depends on 'JZlib', a re-implementation of zlib in
pure Java, which can be obtained at:

  * LICENSE:
    * license/LICENSE.jzlib.txt (BSD style License)
  * HOMEPAGE:
    * http://www.jcraft.com/jzlib/

This product optionally depends on 'Compress-LZF', a Java library for encoding and
decoding data in LZF format, written by Tatu Saloranta. It can be obtained at:

  * LICENSE:
    * license/LICENSE.compress-lzf.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/ning/compress

This product optionally depends on 'lz4', a LZ4 Java compression
and decompression library written by Adrien Grand. It can be obtained at:

  * LICENSE:
    * license/LICENSE.lz4.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/jpountz/lz4-java

This product optionally depends on 'lzma-java', a LZMA Java compression
and decompression library, which can be obtained at:

  * LICENSE:
    * license/LICENSE.lzma-java.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/jponge/lzma-java

This product contains a modified portion of 'jfastlz', a Java port of FastLZ compression
and decompression library written by William Kinney. It can be obtained at:

  * LICENSE:
    * license/LICENSE.jfastlz.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/jfastlz/

This product contains a modified portion of and optionally depends on 'Protocol Buffers', Google's data
interchange format, which can be obtained at:

  * LICENSE:
    * license/LICENSE.protobuf.txt (New BSD License)
  * HOMEPAGE:
    * https://github.com/google/protobuf

This product optionally depends on 'Bouncy Castle Crypto APIs' to generate
a temporary self-signed X.509 certificate when the JVM does not provide the
equivalent functionality.  It can be obtained at:

  * LICENSE:
    * license/LICENSE.bouncycastle.txt (MIT License)
  * HOMEPAGE:
    * http://www.bouncycastle.org/

This product optionally depends on 'Snappy', a compression library produced
by Google Inc, which can be obtained at:

  * LICENSE:
    * license/LICENSE.snappy.txt (New BSD License)
  * HOMEPAGE:
    * https://github.com/google/snappy

This product optionally depends on 'JBoss Marshalling', an alternative Java
serialization API, which can be obtained at:

  * LICENSE:
    * license/LICENSE.jboss-marshalling.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/jboss-remoting/jboss-marshalling

This product optionally depends on 'Caliper', Google's micro-
benchmarking framework, which can be obtained at:

  * LICENSE:
    * license/LICENSE.caliper.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/google/caliper

This product optionally depends on 'Apache Log4J', a logging framework, which
can be obtained at:

  * LICENSE:
    * license/LICENSE.log4j.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://logging.apache.org/log4j/

This product optionally depends on 'Aalto XML', an ultra-high performance
non-blocking XML processor, which can be obtained at:

  * LICENSE:
    * license/LICENSE.aalto-xml.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://wiki.fasterxml.com/AaltoHome

This product contains a modified version of 'HPACK', a Java implementation of
the HTTP/2 HPACK algorithm written by Twitter. It can be obtained at:

  * LICENSE:
    * license/LICENSE.hpack.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/twitter/hpack

This product contains a modified version of 'HPACK', a Java implementation of
the HTTP/2 HPACK algorithm written by Cory Benfield. It can be obtained at:

  * LICENSE:
    * license/LICENSE.hyper-hpack.txt (MIT License)
  * HOMEPAGE:
    * https://github.com/python-hyper/hpack/

This product contains a modified version of 'HPACK', a Java implementation of
the HTTP/2 HPACK algorithm written by Tatsuhiro Tsujikawa. It can be obtained at:

  * LICENSE:
    * license/LICENSE.nghttp2-hpack.txt (MIT License)
  * HOMEPAGE:
    * https://github.com/nghttp2/nghttp2/

This product contains a modified portion of 'Apache Commons Lang', a Java library
provides utilities for the java.lang API, which can be obtained at:

  * LICENSE:
    * license/LICENSE.commons-lang.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://commons.apache.org/proper/commons-lang/


This product contains the Maven wrapper scripts from 'Maven Wrapper', that provides an easy way to ensure a user has everything necessary to run the Maven build.

  * LICENSE:
    * license/LICENSE.mvn-wrapper.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/takari/maven-wrapper


io.grpc:grpc-core
====================

Copyright 2014 The gRPC Authors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

-----------------------------------------------------------------------

This product contains a modified portion of 'OkHttp', an open source
HTTP &amp; SPDY client for Android and Java applications, which can be obtained
at:

  * LICENSE:
    * okhttp/third_party/okhttp/LICENSE (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/square/okhttp
  * LOCATION_IN_GRPC:
    * okhttp/third_party/okhttp

This product contains a modified portion of 'Envoy', an open source
cloud-native high-performance edge/middle/service proxy, which can be
obtained at:

  * LICENSE:
    * xds/third_party/envoy/LICENSE (Apache License 2.0)
  * NOTICE:
    * xds/third_party/envoy/NOTICE
  * HOMEPAGE:
    * https://www.envoyproxy.io
  * LOCATION_IN_GRPC:
    * xds/third_party/envoy

This product contains a modified portion of 'gogoprotobuf',
an open source Protocol Buffers support for Go with Gadgets,
which can be obtained at:

  * LICENSE:
    * xds/third_party/gogoproto/LICENSE
  * HOMEPAGE:
    * https://github.com/gogo/protobuf
  * LOCATION_IN_GRPC:
    * xds/third_party/gogoproto

This product contains a modified portion of 'protoc-gen-validate (PGV)',
an open source protoc plugin to generate polyglot message validators,
which can be obtained at:

  * LICENSE:
    * xds/third_party/protoc-gen-validate/LICENSE (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/lyft/protoc-gen-validate
  * LOCATION_IN_GRPC:
    * xds/third_party/protoc-gen-validate

This product contains a modified portion of 'udpa',
an open source universal data plane API, which can be obtained at:

  * LICENSE:
    * xds/third_party/udpa/LICENSE (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/cncf/udpa
  * LOCATION_IN_GRPC:
    * xds/third_party/udpa


com.fasterxml.jackson.dataformat:jackson-dataformat-xml
====================

# Jackson JSON processor

Jackson is a high-performance, Free/Open Source JSON processing library.
It was originally written by Tatu Saloranta (tatu.saloranta@iki.fi), and has
been in development since 2007.
It is currently developed by a community of developers, as well as supported
commercially by FasterXML.com.

## Licensing

Jackson core and extension components may licensed under different licenses.
To find the details that apply to this artifact see the accompanying LICENSE file.
For more information, including possible other licensing options, contact
FasterXML.com (http://fasterxml.com).

## Credits

A list of contributors may be found from CREDITS file, which is included
in some artifacts (usually source distributions); but is always available
from the source code management (SCM) system project uses.


com.jolbox:bonecp
====================

   =========================================================================
   ==  NOTICE file corresponding to the section 4 d of                    ==
   ==  the Apache License, Version 2.0,                                   ==
   ==  in this case for the BoneCP (Java connection pool).                ==
   =========================================================================

   BoneCP
   Copyright 2010 Wallace Wadge

   This product includes software developed by
   Wallace Wadge (http://jolbox.com/).


com.google.inject:guice
====================


Google Guice - Core Library
Copyright 2006-2015 Google, Inc.

This product includes software developed at
The Apache Software Foundation (http://www.apache.org/).




com.google.inject.extensions:guice-assistedinject
====================


Google Guice - Extensions - AssistedInject
Copyright 2006-2015 Google, Inc.

This product includes software developed at
The Apache Software Foundation (http://www.apache.org/).


com.google.inject.extensions:guice-servlet
====================


Google Guice - Extensions - Servlet
Copyright 2006-2015 Google, Inc.

This product includes software developed at
The Apache Software Foundation (http://www.apache.org/).




org.bouncycastle:bcpkix-jdk18on
====================

Copyright (c) 2000 - 2023 The Legion of the Bouncy Castle Inc. (https://www.bouncycastle.org)

Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

Source: https://bouncycastle.org/license.html

ch.qos.reload4j:reload4j
====================

Apache log4j
Copyright 2007 The Apache Software Foundation

This product includes software developed at
The Apache Software Foundation (http://www.apache.org/).


====================
ratis-thirdparty-misc is a shaded dependency which includes additional 3rd party dependencies in shaded form.
For the detailed list of the dependencies and the associated NOTICE file see licenses/NOTICE-ratis-thirdparty-misc.txt.

====================
Apache Hadoop Third-party Libs
Copyright 2020 and onwards The Apache Software Foundation.

This product includes software developed at
The Apache Software Foundation (http://www.apache.org/).</msg>
<status status="PASS" starttime="20250702 18:52:32.443" endtime="20250702 18:52:32.444"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:52:32.444" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:52:32.444" endtime="20250702 18:52:32.444"/>
</kw>
<status status="PASS" starttime="20250702 18:52:28.082" endtime="20250702 18:52:32.444"/>
</kw>
<msg timestamp="20250702 18:52:32.444" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:52:28.081" endtime="20250702 18:52:32.444"/>
</kw>
<status status="PASS" starttime="20250702 18:52:28.081" endtime="20250702 18:52:32.445"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250702 18:52:28.081" endtime="20250702 18:52:32.445"/>
</test>
<test id="s1-s5-t13" name="Delete file" line="105">
<kw name="Execute" library="os">
<arg>ozone fs -rm -skipTrash ${DEEP_URL}/subdir1/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:52:32.449" level="INFO">Running command 'ozone fs -rm -skipTrash ofs://om/fstest1/17572-bucket1-ofs/test/ofs/dir/subdir1/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:52:35.393" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:52:35.393" level="INFO">${output} = Deleted ofs://om/fstest1/17572-bucket1-ofs/test/ofs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" starttime="20250702 18:52:32.447" endtime="20250702 18:52:35.393"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:52:35.394" level="INFO">Deleted ofs://om/fstest1/17572-bucket1-ofs/test/ofs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" starttime="20250702 18:52:35.393" endtime="20250702 18:52:35.394"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:52:35.394" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:52:35.394" endtime="20250702 18:52:35.394"/>
</kw>
<status status="PASS" starttime="20250702 18:52:32.446" endtime="20250702 18:52:35.395"/>
</kw>
<msg timestamp="20250702 18:52:35.395" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:52:32.446" endtime="20250702 18:52:35.395"/>
</kw>
<status status="PASS" starttime="20250702 18:52:32.446" endtime="20250702 18:52:35.395"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:52:35.398" level="INFO">Running command 'ozone sh key list fstest1/17572-bucket1-ofs | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:52:38.718" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:52:38.718" level="INFO">${output} = test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt
test/ofs/dir/STREAMING.txt
test/ofs/dir/subdir1/</msg>
<status status="PASS" starttime="20250702 18:52:35.396" endtime="20250702 18:52:38.719"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:52:38.719" level="INFO">test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt
test/ofs/dir/STREAMING.txt
test/ofs/dir/subdir1/</msg>
<status status="PASS" starttime="20250702 18:52:38.719" endtime="20250702 18:52:38.719"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:52:38.720" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:52:38.720" endtime="20250702 18:52:38.720"/>
</kw>
<status status="PASS" starttime="20250702 18:52:35.396" endtime="20250702 18:52:38.720"/>
</kw>
<msg timestamp="20250702 18:52:38.720" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:52:35.395" endtime="20250702 18:52:38.720"/>
</kw>
<msg timestamp="20250702 18:52:38.720" level="INFO">${result} = test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt
test/ofs/dir/STREAMING.txt
test/ofs/dir/subdir1/</msg>
<status status="PASS" starttime="20250702 18:52:35.395" endtime="20250702 18:52:38.720"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250702 18:52:38.720" endtime="20250702 18:52:38.721"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250702 18:52:32.445" endtime="20250702 18:52:38.721"/>
</test>
<test id="s1-s5-t14" name="Delete dir" line="110">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone fs -rmdir ${DEEP_URL}/subdir1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:52:38.725" level="INFO">Running command 'ozone fs -rmdir ofs://om/fstest1/17572-bucket1-ofs/test/ofs/dir/subdir1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:52:41.695" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:52:41.695" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:52:38.722" endtime="20250702 18:52:41.696"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:52:41.696" level="INFO"/>
<status status="PASS" starttime="20250702 18:52:41.696" endtime="20250702 18:52:41.696"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:52:41.697" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:52:41.697" endtime="20250702 18:52:41.697"/>
</kw>
<status status="PASS" starttime="20250702 18:52:38.722" endtime="20250702 18:52:41.697"/>
</kw>
<msg timestamp="20250702 18:52:41.697" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:52:38.722" endtime="20250702 18:52:41.697"/>
</kw>
<msg timestamp="20250702 18:52:41.697" level="INFO">${result} = </msg>
<status status="PASS" starttime="20250702 18:52:38.722" endtime="20250702 18:52:41.697"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:52:41.701" level="INFO">Running command 'ozone sh key list fstest1/17572-bucket1-ofs | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:52:44.894" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:52:44.894" level="INFO">${output} = test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt
test/ofs/dir/STREAMING.txt</msg>
<status status="PASS" starttime="20250702 18:52:41.698" endtime="20250702 18:52:44.894"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:52:44.895" level="INFO">test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt
test/ofs/dir/STREAMING.txt</msg>
<status status="PASS" starttime="20250702 18:52:44.894" endtime="20250702 18:52:44.895"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:52:44.895" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:52:44.895" endtime="20250702 18:52:44.895"/>
</kw>
<status status="PASS" starttime="20250702 18:52:41.698" endtime="20250702 18:52:44.895"/>
</kw>
<msg timestamp="20250702 18:52:44.895" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:52:41.698" endtime="20250702 18:52:44.895"/>
</kw>
<msg timestamp="20250702 18:52:44.895" level="INFO">${result} = test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt
test/ofs/dir/STREAMING.txt</msg>
<status status="PASS" starttime="20250702 18:52:41.698" endtime="20250702 18:52:44.895"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>subdir1</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250702 18:52:44.896" endtime="20250702 18:52:44.896"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250702 18:52:38.721" endtime="20250702 18:52:44.896"/>
</test>
<test id="s1-s5-t15" name="Touch file" line="115">
<kw name="Execute" library="os">
<arg>ozone fs -touch ${DEEP_URL}/TOUCHFILE-${SCHEME}.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:52:44.900" level="INFO">Running command 'ozone fs -touch ofs://om/fstest1/17572-bucket1-ofs/test/ofs/dir/TOUCHFILE-ofs.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:52:47.800" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:52:47.800" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:52:44.898" endtime="20250702 18:52:47.800"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:52:47.801" level="INFO"/>
<status status="PASS" starttime="20250702 18:52:47.800" endtime="20250702 18:52:47.801"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:52:47.801" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:52:47.801" endtime="20250702 18:52:47.801"/>
</kw>
<status status="PASS" starttime="20250702 18:52:44.897" endtime="20250702 18:52:47.801"/>
</kw>
<msg timestamp="20250702 18:52:47.801" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:52:44.897" endtime="20250702 18:52:47.801"/>
</kw>
<status status="PASS" starttime="20250702 18:52:44.897" endtime="20250702 18:52:47.802"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:52:47.805" level="INFO">Running command 'ozone sh key list fstest1/17572-bucket1-ofs | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:52:51.068" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:52:51.069" level="INFO">${output} = test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt
test/ofs/dir/STREAMING.txt
test/ofs/dir/TOUCHFILE-ofs.txt</msg>
<status status="PASS" starttime="20250702 18:52:47.803" endtime="20250702 18:52:51.069"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:52:51.069" level="INFO">test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt
test/ofs/dir/STREAMING.txt
test/ofs/dir/TOUCHFILE-ofs.txt</msg>
<status status="PASS" starttime="20250702 18:52:51.069" endtime="20250702 18:52:51.070"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:52:51.070" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:52:51.070" endtime="20250702 18:52:51.070"/>
</kw>
<status status="PASS" starttime="20250702 18:52:47.802" endtime="20250702 18:52:51.070"/>
</kw>
<msg timestamp="20250702 18:52:51.070" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:52:47.802" endtime="20250702 18:52:51.070"/>
</kw>
<msg timestamp="20250702 18:52:51.070" level="INFO">${result} = test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt
test/ofs/dir/STREAMING.txt
test/ofs/dir/TOUCHFILE-ofs.txt</msg>
<status status="PASS" starttime="20250702 18:52:47.802" endtime="20250702 18:52:51.070"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>TOUCHFILE-${SCHEME}.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250702 18:52:51.071" endtime="20250702 18:52:51.071"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250702 18:52:44.896" endtime="20250702 18:52:51.071"/>
</test>
<test id="s1-s5-t16" name="Delete file with Trash" line="120">
<kw name="Execute" library="os">
<arg>ozone fs -touch ${DEEP_URL}/testFile.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:52:51.076" level="INFO">Running command 'ozone fs -touch ofs://om/fstest1/17572-bucket1-ofs/test/ofs/dir/testFile.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:52:54.155" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:52:54.155" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:52:51.073" endtime="20250702 18:52:54.155"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:52:54.156" level="INFO"/>
<status status="PASS" starttime="20250702 18:52:54.155" endtime="20250702 18:52:54.156"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:52:54.156" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:52:54.156" endtime="20250702 18:52:54.156"/>
</kw>
<status status="PASS" starttime="20250702 18:52:51.073" endtime="20250702 18:52:54.156"/>
</kw>
<msg timestamp="20250702 18:52:54.156" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:52:51.072" endtime="20250702 18:52:54.156"/>
</kw>
<status status="PASS" starttime="20250702 18:52:51.072" endtime="20250702 18:52:54.156"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -rm ${DEEP_URL}/testFile.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:52:54.160" level="INFO">Running command 'ozone fs -rm ofs://om/fstest1/17572-bucket1-ofs/test/ofs/dir/testFile.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:52:57.176" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:52:57.176" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:52:54.157" endtime="20250702 18:52:57.176"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:52:57.177" level="INFO"/>
<status status="PASS" starttime="20250702 18:52:57.176" endtime="20250702 18:52:57.177"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:52:57.177" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:52:57.177" endtime="20250702 18:52:57.177"/>
</kw>
<status status="PASS" starttime="20250702 18:52:54.157" endtime="20250702 18:52:57.177"/>
</kw>
<msg timestamp="20250702 18:52:57.177" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:52:54.157" endtime="20250702 18:52:57.178"/>
</kw>
<status status="PASS" starttime="20250702 18:52:54.156" endtime="20250702 18:52:57.178"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone fs -ls -R ${BASE_URL}/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:52:57.181" level="INFO">Running command 'ozone fs -ls -R ofs://om/fstest1/17572-bucket1-ofs// 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:53:00.164" level="INFO">${rc} = 1</msg>
<msg timestamp="20250702 18:53:00.164" level="INFO">${output} = drwxrwxrwx   - testuser testuser          0 2025-07-02 18:52 ofs://om/fstest1/17572-bucket1-ofs/.Trash
drwxrwxrwx   - testuser testuser          0 2025-07-02 18:52 ofs://om/fstest1/17572-bucket1-ofs/....</msg>
<status status="PASS" starttime="20250702 18:52:57.179" endtime="20250702 18:53:00.164"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:53:00.165" level="INFO">drwxrwxrwx   - testuser testuser          0 2025-07-02 18:52 ofs://om/fstest1/17572-bucket1-ofs/.Trash
drwxrwxrwx   - testuser testuser          0 2025-07-02 18:52 ofs://om/fstest1/17572-bucket1-ofs/.Trash/testuser
drwxrwxrwx   - testuser testuser          0 2025-07-02 18:52 ofs://om/fstest1/17572-bucket1-ofs/.Trash/testuser/Current
drwxrwxrwx   - testuser testuser          0 2025-07-02 18:52 ofs://om/fstest1/17572-bucket1-ofs/.Trash/testuser/Current/test
drwxrwxrwx   - testuser testuser          0 2025-07-02 18:52 ofs://om/fstest1/17572-bucket1-ofs/.Trash/testuser/Current/test/ofs
ls: Unable to get file status: volume: fstest1 bucket: 17572-bucket1-ofs key: .Trash/testuser/Current/test/ofs
drwxrwxrwx   - testuser testuser          0 2025-07-02 18:51 ofs://om/fstest1/17572-bucket1-ofs/test
drwxrwxrwx   - testuser testuser          0 2025-07-02 18:51 ofs://om/fstest1/17572-bucket1-ofs/test/ofs
drwxrwxrwx   - testuser testuser          0 2025-07-02 18:52 ofs://om/fstest1/17572-bucket1-ofs/test/ofs/dir
-rw-rw-rw-   3 testuser testuser      15892 2025-07-02 18:51 ofs://om/fstest1/17572-bucket1-ofs/test/ofs/dir/MOVED.TXT
-rw-rw-rw-   3 testuser testuser      15892 2025-07-02 18:51 ofs://om/fstest1/17572-bucket1-ofs/test/ofs/dir/PUTFILE.txt
-rw-rw-rw-   3 testuser testuser      15892 2025-07-02 18:52 ofs://om/fstest1/17572-bucket1-ofs/test/ofs/dir/STREAMING.txt
-rw-rw-rw-   3 testuser testuser          0 2025-07-02 18:52 ofs://om/fstest1/17572-bucket1-ofs/test/ofs/dir/TOUCHFILE-ofs.txt</msg>
<status status="PASS" starttime="20250702 18:53:00.164" endtime="20250702 18:53:00.165"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:53:00.165" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<msg timestamp="20250702 18:53:00.165" level="FAIL">1 != 0</msg>
<status status="FAIL" starttime="20250702 18:53:00.165" endtime="20250702 18:53:00.165"/>
</kw>
<status status="FAIL" starttime="20250702 18:52:57.178" endtime="20250702 18:53:00.165"/>
</kw>
<msg timestamp="20250702 18:53:00.165" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20250702 18:52:57.178" endtime="20250702 18:53:00.166"/>
</kw>
<status status="FAIL" starttime="20250702 18:52:57.178" endtime="20250702 18:53:00.166"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${DEEP_URL}/testFile.txt</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250702 18:53:00.166" endtime="20250702 18:53:00.166"/>
</kw>
<kw name="Should Contain Any" library="BuiltIn">
<arg>${result}</arg>
<arg>.Trash/hadoop</arg>
<arg>.Trash/testuser</arg>
<arg>.Trash/root</arg>
<doc>Fails if ``container`` does not contain any of the ``*items``.</doc>
<status status="NOT RUN" starttime="20250702 18:53:00.166" endtime="20250702 18:53:00.166"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${DEEP_DIR}/testFile.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250702 18:53:00.166" endtime="20250702 18:53:00.166"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20250702 18:52:51.071" endtime="20250702 18:53:00.166">1 != 0</status>
</test>
<test id="s1-s5-t17" name="Delete recursively" line="128">
<kw name="Execute" library="os">
<arg>ozone fs -mkdir -p ${DEEP_URL}/subdir2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:53:00.170" level="INFO">Running command 'ozone fs -mkdir -p ofs://om/fstest1/17572-bucket1-ofs/test/ofs/dir/subdir2 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:53:03.111" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:53:03.111" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:53:00.168" endtime="20250702 18:53:03.111"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:53:03.112" level="INFO"/>
<status status="PASS" starttime="20250702 18:53:03.111" endtime="20250702 18:53:03.112"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:53:03.112" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:53:03.112" endtime="20250702 18:53:03.112"/>
</kw>
<status status="PASS" starttime="20250702 18:53:00.168" endtime="20250702 18:53:03.112"/>
</kw>
<msg timestamp="20250702 18:53:03.112" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:53:00.168" endtime="20250702 18:53:03.112"/>
</kw>
<status status="PASS" starttime="20250702 18:53:00.167" endtime="20250702 18:53:03.112"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -rm -skipTrash -r ${DEEP_URL}/subdir2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:53:03.116" level="INFO">Running command 'ozone fs -rm -skipTrash -r ofs://om/fstest1/17572-bucket1-ofs/test/ofs/dir/subdir2 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:53:05.999" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:53:05.999" level="INFO">${output} = Deleted ofs://om/fstest1/17572-bucket1-ofs/test/ofs/dir/subdir2</msg>
<status status="PASS" starttime="20250702 18:53:03.113" endtime="20250702 18:53:05.999"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:53:06.000" level="INFO">Deleted ofs://om/fstest1/17572-bucket1-ofs/test/ofs/dir/subdir2</msg>
<status status="PASS" starttime="20250702 18:53:05.999" endtime="20250702 18:53:06.000"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:53:06.000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:53:06.000" endtime="20250702 18:53:06.000"/>
</kw>
<status status="PASS" starttime="20250702 18:53:03.113" endtime="20250702 18:53:06.000"/>
</kw>
<msg timestamp="20250702 18:53:06.000" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:53:03.113" endtime="20250702 18:53:06.001"/>
</kw>
<status status="PASS" starttime="20250702 18:53:03.113" endtime="20250702 18:53:06.001"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:53:06.004" level="INFO">Running command 'ozone sh key list fstest1/17572-bucket1-ofs | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:53:09.194" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:53:09.194" level="INFO">${output} = .Trash/
.Trash/testuser/
.Trash/testuser/250702185300/
.Trash/testuser/250702185300/test/
.Trash/testuser/250702185300/test/ofs/
.Trash/testuser/250702185300/test/ofs/dir/
.Trash/testuser/250702185300...</msg>
<status status="PASS" starttime="20250702 18:53:06.002" endtime="20250702 18:53:09.194"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:53:09.195" level="INFO">.Trash/
.Trash/testuser/
.Trash/testuser/250702185300/
.Trash/testuser/250702185300/test/
.Trash/testuser/250702185300/test/ofs/
.Trash/testuser/250702185300/test/ofs/dir/
.Trash/testuser/250702185300/test/ofs/dir/testFile.txt
test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt
test/ofs/dir/STREAMING.txt
test/ofs/dir/TOUCHFILE-ofs.txt</msg>
<status status="PASS" starttime="20250702 18:53:09.195" endtime="20250702 18:53:09.195"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:53:09.196" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:53:09.195" endtime="20250702 18:53:09.196"/>
</kw>
<status status="PASS" starttime="20250702 18:53:06.002" endtime="20250702 18:53:09.196"/>
</kw>
<msg timestamp="20250702 18:53:09.196" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:53:06.001" endtime="20250702 18:53:09.196"/>
</kw>
<msg timestamp="20250702 18:53:09.196" level="INFO">${result} = .Trash/
.Trash/testuser/
.Trash/testuser/250702185300/
.Trash/testuser/250702185300/test/
.Trash/testuser/250702185300/test/ofs/
.Trash/testuser/250702185300/test/ofs/dir/
.Trash/testuser/250702185300...</msg>
<status status="PASS" starttime="20250702 18:53:06.001" endtime="20250702 18:53:09.196"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${DEEP_DIR}/subdir2</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250702 18:53:09.196" endtime="20250702 18:53:09.197"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250702 18:53:00.167" endtime="20250702 18:53:09.197"/>
</test>
<test id="s1-s5-t18" name="List recursively" line="134">
<kw name="Setup localdir1" type="SETUP">
<kw name="Execute" library="os">
<arg>rm -Rf /tmp/localdir1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:53:09.201" level="INFO">Running command 'rm -Rf /tmp/localdir1 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:53:09.204" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:53:09.204" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:53:09.199" endtime="20250702 18:53:09.204"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:53:09.205" level="INFO"/>
<status status="PASS" starttime="20250702 18:53:09.205" endtime="20250702 18:53:09.205"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:53:09.205" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:53:09.205" endtime="20250702 18:53:09.205"/>
</kw>
<status status="PASS" starttime="20250702 18:53:09.198" endtime="20250702 18:53:09.206"/>
</kw>
<msg timestamp="20250702 18:53:09.206" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:53:09.198" endtime="20250702 18:53:09.206"/>
</kw>
<status status="PASS" starttime="20250702 18:53:09.198" endtime="20250702 18:53:09.206"/>
</kw>
<kw name="Execute" library="os">
<arg>mkdir /tmp/localdir1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:53:09.209" level="INFO">Running command 'mkdir /tmp/localdir1 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:53:09.212" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:53:09.212" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:53:09.207" endtime="20250702 18:53:09.212"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:53:09.213" level="INFO"/>
<status status="PASS" starttime="20250702 18:53:09.212" endtime="20250702 18:53:09.213"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:53:09.213" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:53:09.213" endtime="20250702 18:53:09.213"/>
</kw>
<status status="PASS" starttime="20250702 18:53:09.206" endtime="20250702 18:53:09.213"/>
</kw>
<msg timestamp="20250702 18:53:09.213" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:53:09.206" endtime="20250702 18:53:09.213"/>
</kw>
<status status="PASS" starttime="20250702 18:53:09.206" endtime="20250702 18:53:09.213"/>
</kw>
<kw name="Execute" library="os">
<arg>cp NOTICE.txt /tmp/localdir1/LOCAL.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:53:09.216" level="INFO">Running command 'cp NOTICE.txt /tmp/localdir1/LOCAL.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:53:09.219" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:53:09.219" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:53:09.214" endtime="20250702 18:53:09.219"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:53:09.220" level="INFO"/>
<status status="PASS" starttime="20250702 18:53:09.220" endtime="20250702 18:53:09.220"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:53:09.221" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:53:09.220" endtime="20250702 18:53:09.221"/>
</kw>
<status status="PASS" starttime="20250702 18:53:09.214" endtime="20250702 18:53:09.221"/>
</kw>
<msg timestamp="20250702 18:53:09.221" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:53:09.214" endtime="20250702 18:53:09.221"/>
</kw>
<status status="PASS" starttime="20250702 18:53:09.213" endtime="20250702 18:53:09.221"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir -p ${BASE_URL}testdir1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:53:09.224" level="INFO">Running command 'ozone fs -mkdir -p ofs://om/fstest1/17572-bucket1-ofs/testdir1 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:53:12.018" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:53:12.018" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:53:09.222" endtime="20250702 18:53:12.018"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:53:12.018" level="INFO"/>
<status status="PASS" starttime="20250702 18:53:12.018" endtime="20250702 18:53:12.019"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:53:12.019" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:53:12.019" endtime="20250702 18:53:12.019"/>
</kw>
<status status="PASS" starttime="20250702 18:53:09.222" endtime="20250702 18:53:12.019"/>
</kw>
<msg timestamp="20250702 18:53:12.019" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:53:09.221" endtime="20250702 18:53:12.019"/>
</kw>
<status status="PASS" starttime="20250702 18:53:09.221" endtime="20250702 18:53:12.019"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -copyFromLocal /tmp/localdir1 ${BASE_URL}testdir1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:53:12.023" level="INFO">Running command 'ozone fs -copyFromLocal /tmp/localdir1 ofs://om/fstest1/17572-bucket1-ofs/testdir1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:53:16.753" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:53:16.753" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:53:12.021" endtime="20250702 18:53:16.753"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:53:16.754" level="INFO"/>
<status status="PASS" starttime="20250702 18:53:16.754" endtime="20250702 18:53:16.754"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:53:16.755" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:53:16.754" endtime="20250702 18:53:16.755"/>
</kw>
<status status="PASS" starttime="20250702 18:53:12.020" endtime="20250702 18:53:16.755"/>
</kw>
<msg timestamp="20250702 18:53:16.755" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:53:12.020" endtime="20250702 18:53:16.755"/>
</kw>
<status status="PASS" starttime="20250702 18:53:12.020" endtime="20250702 18:53:16.755"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -put NOTICE.txt ${BASE_URL}testdir1/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:53:16.758" level="INFO">Running command 'ozone fs -put NOTICE.txt ofs://om/fstest1/17572-bucket1-ofs/testdir1/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:53:21.458" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:53:21.458" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:53:16.756" endtime="20250702 18:53:21.458"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:53:21.459" level="INFO"/>
<status status="PASS" starttime="20250702 18:53:21.459" endtime="20250702 18:53:21.459"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:53:21.460" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:53:21.459" endtime="20250702 18:53:21.460"/>
</kw>
<status status="PASS" starttime="20250702 18:53:16.756" endtime="20250702 18:53:21.460"/>
</kw>
<msg timestamp="20250702 18:53:21.460" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:53:16.756" endtime="20250702 18:53:21.460"/>
</kw>
<status status="PASS" starttime="20250702 18:53:16.755" endtime="20250702 18:53:21.460"/>
</kw>
<status status="PASS" starttime="20250702 18:53:09.198" endtime="20250702 18:53:21.460"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone fs -ls -R ${BASE_URL}testdir1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:53:21.464" level="INFO">Running command 'ozone fs -ls -R ofs://om/fstest1/17572-bucket1-ofs/testdir1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:53:24.330" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:53:24.330" level="INFO">${output} = -rw-rw-rw-   3 testuser testuser      15892 2025-07-02 18:53 ofs://om/fstest1/17572-bucket1-ofs/testdir1/NOTICE.txt
drwxrwxrwx   - testuser testuser          0 2025-07-02 18:53 ofs://om/fstest1/17572-...</msg>
<status status="PASS" starttime="20250702 18:53:21.461" endtime="20250702 18:53:24.330"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:53:24.331" level="INFO">-rw-rw-rw-   3 testuser testuser      15892 2025-07-02 18:53 ofs://om/fstest1/17572-bucket1-ofs/testdir1/NOTICE.txt
drwxrwxrwx   - testuser testuser          0 2025-07-02 18:53 ofs://om/fstest1/17572-bucket1-ofs/testdir1/localdir1
-rw-rw-rw-   3 testuser testuser      15892 2025-07-02 18:53 ofs://om/fstest1/17572-bucket1-ofs/testdir1/localdir1/LOCAL.txt</msg>
<status status="PASS" starttime="20250702 18:53:24.331" endtime="20250702 18:53:24.331"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:53:24.332" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:53:24.331" endtime="20250702 18:53:24.332"/>
</kw>
<status status="PASS" starttime="20250702 18:53:21.461" endtime="20250702 18:53:24.332"/>
</kw>
<msg timestamp="20250702 18:53:24.332" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:53:21.461" endtime="20250702 18:53:24.332"/>
</kw>
<msg timestamp="20250702 18:53:24.332" level="INFO">${result} = -rw-rw-rw-   3 testuser testuser      15892 2025-07-02 18:53 ofs://om/fstest1/17572-bucket1-ofs/testdir1/NOTICE.txt
drwxrwxrwx   - testuser testuser          0 2025-07-02 18:53 ofs://om/fstest1/17572-...</msg>
<status status="PASS" starttime="20250702 18:53:21.460" endtime="20250702 18:53:24.332"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>localdir1/LOCAL.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250702 18:53:24.332" endtime="20250702 18:53:24.333"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>testdir1/NOTICE.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250702 18:53:24.333" endtime="20250702 18:53:24.333"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250702 18:53:09.197" endtime="20250702 18:53:24.333"/>
</test>
<test id="s1-s5-t19" name="Copy to other bucket" line="140">
<kw name="Format FS URL" library="fs">
<var>${target}</var>
<arg>${SCHEME}</arg>
<arg>${VOLUME}</arg>
<arg>${BUCKET2}</arg>
<arg>testdir2</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20250702 18:53:24.337" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20250702 18:53:24.336" endtime="20250702 18:53:24.337"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20250702 18:53:24.337" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20250702 18:53:24.337" endtime="20250702 18:53:24.337"/>
</kw>
<status status="PASS" starttime="20250702 18:53:24.336" endtime="20250702 18:53:24.337"/>
</kw>
<msg timestamp="20250702 18:53:24.337" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20250702 18:53:24.335" endtime="20250702 18:53:24.337"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>/</arg>
<arg>${path}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20250702 18:53:24.338" level="INFO">${first} = t</msg>
<status status="PASS" starttime="20250702 18:53:24.338" endtime="20250702 18:53:24.338"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20250702 18:53:24.339" level="INFO">${result} = /testdir2</msg>
<status status="PASS" starttime="20250702 18:53:24.339" endtime="20250702 18:53:24.339"/>
</kw>
<status status="PASS" starttime="20250702 18:53:24.338" endtime="20250702 18:53:24.339"/>
</kw>
<msg timestamp="20250702 18:53:24.339" level="INFO">${path_with_leading} = /testdir2</msg>
<status status="PASS" starttime="20250702 18:53:24.337" endtime="20250702 18:53:24.339"/>
</kw>
<status status="PASS" starttime="20250702 18:53:24.335" endtime="20250702 18:53:24.339"/>
</kw>
<msg timestamp="20250702 18:53:24.339" level="INFO">${url} = ofs://om/fstest1/17572-bucket2-ofs/testdir2</msg>
<status status="PASS" starttime="20250702 18:53:24.335" endtime="20250702 18:53:24.339"/>
</kw>
<msg timestamp="20250702 18:53:24.339" level="INFO">${target} = ofs://om/fstest1/17572-bucket2-ofs/testdir2</msg>
<status status="PASS" starttime="20250702 18:53:24.334" endtime="20250702 18:53:24.339"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir -p ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:53:24.342" level="INFO">Running command 'ozone fs -mkdir -p ofs://om/fstest1/17572-bucket2-ofs/testdir2 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:53:27.102" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:53:27.102" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:53:24.340" endtime="20250702 18:53:27.102"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:53:27.103" level="INFO"/>
<status status="PASS" starttime="20250702 18:53:27.102" endtime="20250702 18:53:27.103"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:53:27.103" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:53:27.103" endtime="20250702 18:53:27.103"/>
</kw>
<status status="PASS" starttime="20250702 18:53:24.340" endtime="20250702 18:53:27.103"/>
</kw>
<msg timestamp="20250702 18:53:27.103" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:53:24.340" endtime="20250702 18:53:27.103"/>
</kw>
<status status="PASS" starttime="20250702 18:53:24.339" endtime="20250702 18:53:27.104"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -cp ${BASE_URL}/testdir1/localdir1 ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:53:27.107" level="INFO">Running command 'ozone fs -cp ofs://om/fstest1/17572-bucket1-ofs//testdir1/localdir1 ofs://om/fstest1/17572-bucket2-ofs/testdir2 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:53:32.176" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:53:32.176" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:53:27.105" endtime="20250702 18:53:32.176"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:53:32.177" level="INFO"/>
<status status="PASS" starttime="20250702 18:53:32.177" endtime="20250702 18:53:32.177"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:53:32.178" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:53:32.177" endtime="20250702 18:53:32.178"/>
</kw>
<status status="PASS" starttime="20250702 18:53:27.104" endtime="20250702 18:53:32.178"/>
</kw>
<msg timestamp="20250702 18:53:32.178" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:53:27.104" endtime="20250702 18:53:32.178"/>
</kw>
<status status="PASS" starttime="20250702 18:53:27.104" endtime="20250702 18:53:32.178"/>
</kw>
<kw name="Execute" library="os" type="TEARDOWN">
<arg>ozone fs -rm -r ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:53:32.182" level="INFO">Running command 'ozone fs -rm -r ofs://om/fstest1/17572-bucket2-ofs/testdir2 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:53:35.213" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:53:35.213" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:53:32.179" endtime="20250702 18:53:35.213"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:53:35.214" level="INFO"/>
<status status="PASS" starttime="20250702 18:53:35.213" endtime="20250702 18:53:35.214"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:53:35.214" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:53:35.214" endtime="20250702 18:53:35.214"/>
</kw>
<status status="PASS" starttime="20250702 18:53:32.179" endtime="20250702 18:53:35.214"/>
</kw>
<msg timestamp="20250702 18:53:35.214" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:53:32.179" endtime="20250702 18:53:35.214"/>
</kw>
<status status="PASS" starttime="20250702 18:53:32.178" endtime="20250702 18:53:35.214"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250702 18:53:24.333" endtime="20250702 18:53:35.215"/>
</test>
<test id="s1-s5-t20" name="Copy to other volume" line="146">
<kw name="Format FS URL" library="fs">
<var>${target}</var>
<arg>${SCHEME}</arg>
<arg>${VOL2}</arg>
<arg>${BUCKET_IN_VOL2}</arg>
<arg>testdir3</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20250702 18:53:35.218" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20250702 18:53:35.218" endtime="20250702 18:53:35.218"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20250702 18:53:35.219" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20250702 18:53:35.218" endtime="20250702 18:53:35.219"/>
</kw>
<status status="PASS" starttime="20250702 18:53:35.218" endtime="20250702 18:53:35.219"/>
</kw>
<msg timestamp="20250702 18:53:35.219" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20250702 18:53:35.217" endtime="20250702 18:53:35.219"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>/</arg>
<arg>${path}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20250702 18:53:35.220" level="INFO">${first} = t</msg>
<status status="PASS" starttime="20250702 18:53:35.220" endtime="20250702 18:53:35.220"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20250702 18:53:35.221" level="INFO">${result} = /testdir3</msg>
<status status="PASS" starttime="20250702 18:53:35.220" endtime="20250702 18:53:35.221"/>
</kw>
<status status="PASS" starttime="20250702 18:53:35.220" endtime="20250702 18:53:35.221"/>
</kw>
<msg timestamp="20250702 18:53:35.221" level="INFO">${path_with_leading} = /testdir3</msg>
<status status="PASS" starttime="20250702 18:53:35.219" endtime="20250702 18:53:35.221"/>
</kw>
<status status="PASS" starttime="20250702 18:53:35.217" endtime="20250702 18:53:35.221"/>
</kw>
<msg timestamp="20250702 18:53:35.221" level="INFO">${url} = ofs://om/fstest2/17572-bucket3-ofs/testdir3</msg>
<status status="PASS" starttime="20250702 18:53:35.216" endtime="20250702 18:53:35.221"/>
</kw>
<msg timestamp="20250702 18:53:35.221" level="INFO">${target} = ofs://om/fstest2/17572-bucket3-ofs/testdir3</msg>
<status status="PASS" starttime="20250702 18:53:35.215" endtime="20250702 18:53:35.221"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir -p ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:53:35.224" level="INFO">Running command 'ozone fs -mkdir -p ofs://om/fstest2/17572-bucket3-ofs/testdir3 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:53:38.167" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:53:38.167" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:53:35.222" endtime="20250702 18:53:38.167"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:53:38.168" level="INFO"/>
<status status="PASS" starttime="20250702 18:53:38.168" endtime="20250702 18:53:38.168"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:53:38.168" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:53:38.168" endtime="20250702 18:53:38.169"/>
</kw>
<status status="PASS" starttime="20250702 18:53:35.222" endtime="20250702 18:53:38.169"/>
</kw>
<msg timestamp="20250702 18:53:38.169" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:53:35.222" endtime="20250702 18:53:38.169"/>
</kw>
<status status="PASS" starttime="20250702 18:53:35.221" endtime="20250702 18:53:38.169"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -cp ${BASE_URL}/testdir1/localdir1 ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:53:38.172" level="INFO">Running command 'ozone fs -cp ofs://om/fstest1/17572-bucket1-ofs//testdir1/localdir1 ofs://om/fstest2/17572-bucket3-ofs/testdir3 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:53:43.130" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:53:43.130" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:53:38.170" endtime="20250702 18:53:43.130"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:53:43.131" level="INFO"/>
<status status="PASS" starttime="20250702 18:53:43.130" endtime="20250702 18:53:43.131"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:53:43.131" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:53:43.131" endtime="20250702 18:53:43.131"/>
</kw>
<status status="PASS" starttime="20250702 18:53:38.170" endtime="20250702 18:53:43.131"/>
</kw>
<msg timestamp="20250702 18:53:43.131" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:53:38.169" endtime="20250702 18:53:43.131"/>
</kw>
<status status="PASS" starttime="20250702 18:53:38.169" endtime="20250702 18:53:43.131"/>
</kw>
<kw name="Execute" library="os" type="TEARDOWN">
<arg>ozone fs -rm -r ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:53:43.135" level="INFO">Running command 'ozone fs -rm -r ofs://om/fstest2/17572-bucket3-ofs/testdir3 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:53:46.159" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:53:46.159" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:53:43.133" endtime="20250702 18:53:46.159"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:53:46.160" level="INFO"/>
<status status="PASS" starttime="20250702 18:53:46.159" endtime="20250702 18:53:46.160"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:53:46.160" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:53:46.160" endtime="20250702 18:53:46.160"/>
</kw>
<status status="PASS" starttime="20250702 18:53:43.132" endtime="20250702 18:53:46.160"/>
</kw>
<msg timestamp="20250702 18:53:46.160" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:53:43.132" endtime="20250702 18:53:46.161"/>
</kw>
<status status="PASS" starttime="20250702 18:53:43.132" endtime="20250702 18:53:46.161"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250702 18:53:35.215" endtime="20250702 18:53:46.161"/>
</test>
<test id="s1-s5-t21" name="List file created via shell" line="152">
<kw name="Execute" library="os" type="SETUP">
<arg>ozone sh key put ${VOLUME}/${BUCKET}/${SCHEME}.txt NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:53:46.165" level="INFO">Running command 'ozone sh key put fstest1/17572-bucket1-ofs/ofs.txt NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:53:50.816" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:53:50.816" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:53:46.163" endtime="20250702 18:53:50.816"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:53:50.817" level="INFO"/>
<status status="PASS" starttime="20250702 18:53:50.817" endtime="20250702 18:53:50.817"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:53:50.818" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:53:50.817" endtime="20250702 18:53:50.818"/>
</kw>
<status status="PASS" starttime="20250702 18:53:46.162" endtime="20250702 18:53:50.818"/>
</kw>
<msg timestamp="20250702 18:53:50.818" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:53:46.162" endtime="20250702 18:53:50.818"/>
</kw>
<status status="PASS" starttime="20250702 18:53:46.162" endtime="20250702 18:53:50.818"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone fs -ls ${BASE_URL}${SCHEME}.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:53:50.822" level="INFO">Running command 'ozone fs -ls ofs://om/fstest1/17572-bucket1-ofs/ofs.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:53:53.858" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:53:53.858" level="INFO">${output} = -rw-rw-rw-   3 testuser testuser      15892 2025-07-02 18:53 ofs://om/fstest1/17572-bucket1-ofs/ofs.txt</msg>
<status status="PASS" starttime="20250702 18:53:50.819" endtime="20250702 18:53:53.859"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:53:53.859" level="INFO">-rw-rw-rw-   3 testuser testuser      15892 2025-07-02 18:53 ofs://om/fstest1/17572-bucket1-ofs/ofs.txt</msg>
<status status="PASS" starttime="20250702 18:53:53.859" endtime="20250702 18:53:53.860"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:53:53.860" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:53:53.860" endtime="20250702 18:53:53.860"/>
</kw>
<status status="PASS" starttime="20250702 18:53:50.819" endtime="20250702 18:53:53.860"/>
</kw>
<msg timestamp="20250702 18:53:53.860" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:53:50.819" endtime="20250702 18:53:53.860"/>
</kw>
<msg timestamp="20250702 18:53:53.860" level="INFO">${result} = -rw-rw-rw-   3 testuser testuser      15892 2025-07-02 18:53 ofs://om/fstest1/17572-bucket1-ofs/ofs.txt</msg>
<status status="PASS" starttime="20250702 18:53:50.818" endtime="20250702 18:53:53.860"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${SCHEME}.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250702 18:53:53.860" endtime="20250702 18:53:53.861"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250702 18:53:46.161" endtime="20250702 18:53:53.861"/>
</test>
<test id="s1-s5-t22" name="Reject overwrite existing" line="157">
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone fs -copyFromLocal NOTICE.txt ${BASE_URL}${SCHEME}.txt</arg>
<arg>1</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:53:53.864" level="INFO">Running command 'ozone fs -copyFromLocal NOTICE.txt ofs://om/fstest1/17572-bucket1-ofs/ofs.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:53:56.773" level="INFO">${rc} = 1</msg>
<msg timestamp="20250702 18:53:56.774" level="INFO">${output} = copyFromLocal: `ofs://om/fstest1/17572-bucket1-ofs/ofs.txt': File exists</msg>
<status status="PASS" starttime="20250702 18:53:53.862" endtime="20250702 18:53:56.774"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:53:56.775" level="INFO">copyFromLocal: `ofs://om/fstest1/17572-bucket1-ofs/ofs.txt': File exists</msg>
<status status="PASS" starttime="20250702 18:53:56.774" endtime="20250702 18:53:56.775"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:53:56.775" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:53:56.775" endtime="20250702 18:53:56.775"/>
</kw>
<msg timestamp="20250702 18:53:56.776" level="INFO">${result} = copyFromLocal: `ofs://om/fstest1/17572-bucket1-ofs/ofs.txt': File exists</msg>
<status status="PASS" starttime="20250702 18:53:53.862" endtime="20250702 18:53:56.776"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>File exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250702 18:53:56.776" endtime="20250702 18:53:56.776"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250702 18:53:53.861" endtime="20250702 18:53:56.776"/>
</test>
<test id="s1-s5-t23" name="Get file" line="161">
<kw name="Execute" library="os" type="SETUP">
<arg>rm -Rf /tmp/GET.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:53:56.781" level="INFO">Running command 'rm -Rf /tmp/GET.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:53:56.785" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:53:56.785" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:53:56.778" endtime="20250702 18:53:56.785"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:53:56.786" level="INFO"/>
<status status="PASS" starttime="20250702 18:53:56.785" endtime="20250702 18:53:56.786"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:53:56.786" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:53:56.786" endtime="20250702 18:53:56.786"/>
</kw>
<status status="PASS" starttime="20250702 18:53:56.778" endtime="20250702 18:53:56.786"/>
</kw>
<msg timestamp="20250702 18:53:56.786" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:53:56.778" endtime="20250702 18:53:56.786"/>
</kw>
<status status="PASS" starttime="20250702 18:53:56.777" endtime="20250702 18:53:56.786"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -get ${BASE_URL}${SCHEME}.txt /tmp/GET.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250702 18:53:56.790" level="INFO">Running command 'ozone fs -get ofs://om/fstest1/17572-bucket1-ofs/ofs.txt /tmp/GET.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20250702 18:54:01.321" level="INFO">${rc} = 0</msg>
<msg timestamp="20250702 18:54:01.321" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250702 18:53:56.788" endtime="20250702 18:54:01.321"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 18:54:01.322" level="INFO"/>
<status status="PASS" starttime="20250702 18:54:01.321" endtime="20250702 18:54:01.322"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250702 18:54:01.322" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 18:54:01.322" endtime="20250702 18:54:01.322"/>
</kw>
<status status="PASS" starttime="20250702 18:53:56.787" endtime="20250702 18:54:01.322"/>
</kw>
<msg timestamp="20250702 18:54:01.322" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250702 18:53:56.787" endtime="20250702 18:54:01.323"/>
</kw>
<status status="PASS" starttime="20250702 18:53:56.787" endtime="20250702 18:54:01.323"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>/tmp/GET.txt</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20250702 18:54:01.323" level="INFO" html="true">File '&lt;a href="file:///tmp/GET.txt"&gt;/tmp/GET.txt&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20250702 18:54:01.323" endtime="20250702 18:54:01.323"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250702 18:53:56.777" endtime="20250702 18:54:01.323"/>
</test>
<doc>Ozone FS tests</doc>
<status status="FAIL" starttime="20250702 18:50:48.061" endtime="20250702 18:54:01.325"/>
</suite>
<status status="FAIL" starttime="N/A" endtime="N/A" elapsedtime="1236289"/>
</suite>
<statistics>
<total>
<stat pass="104" fail="1" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="104" fail="1" skip="0" id="s1" name="ozonesecure">ozonesecure</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1" name="Kinit">ozonesecure.Kinit</stat>
<stat pass="35" fail="0" skip="0" id="s1-s2" name="Basic">ozonesecure.Basic</stat>
<stat pass="2" fail="0" skip="0" id="s1-s2-s1" name="Basic">ozonesecure.Basic.Basic</stat>
<stat pass="4" fail="0" skip="0" id="s1-s2-s2" name="Getconf">ozonesecure.Basic.Getconf</stat>
<stat pass="18" fail="0" skip="0" id="s1-s2-s3" name="Links">ozonesecure.Basic.Links</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s4" name="Ozone-Shell-Single">ozonesecure.Basic.Ozone-Shell-Single</stat>
<stat pass="9" fail="0" skip="0" id="s1-s2-s5" name="Ozone-Shell">ozonesecure.Basic.Ozone-Shell</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s6" name="Single Node">ozonesecure.Basic.Single Node</stat>
<stat pass="45" fail="0" skip="0" id="s1-s3" name="Security">ozonesecure.Security</stat>
<stat pass="3" fail="0" skip="0" id="s1-s3-s1" name="Admin-Cert">ozonesecure.Security.Admin-Cert</stat>
<stat pass="6" fail="0" skip="0" id="s1-s3-s2" name="Ozone-Secure-Fs">ozonesecure.Security.Ozone-Secure-Fs</stat>
<stat pass="3" fail="0" skip="0" id="s1-s3-s3" name="Ozone-Secure-Owner-S3">ozonesecure.Security.Ozone-Secure-Owner-S3</stat>
<stat pass="3" fail="0" skip="0" id="s1-s3-s4" name="Ozone-Secure-S3">ozonesecure.Security.Ozone-Secure-S3</stat>
<stat pass="28" fail="0" skip="0" id="s1-s3-s5" name="Ozone-Secure-Tenant">ozonesecure.Security.Ozone-Secure-Tenant</stat>
<stat pass="1" fail="0" skip="0" id="s1-s3-s6" name="Ozone-Secure-Token">ozonesecure.Security.Ozone-Secure-Token</stat>
<stat pass="1" fail="0" skip="0" id="s1-s3-s7" name="S3-secret">ozonesecure.Security.S3-secret</stat>
<stat pass="1" fail="0" skip="0" id="s1-s4" name="Bucket-Encryption">ozonesecure.Bucket-Encryption</stat>
<stat pass="22" fail="1" skip="0" id="s1-s5" name="ozonefs-ofs-bucket">ozonesecure.ozonefs-ofs-bucket</stat>
</suite>
</statistics>
<errors>
<msg timestamp="20250702 18:37:43.718" level="ERROR">Error in file '/opt/hadoop/smoketest/basic/ozone-shell-lib.robot' on line 21: Setting 'Suite Setup' is not allowed in resource file.</msg>
</errors>
</robot>
