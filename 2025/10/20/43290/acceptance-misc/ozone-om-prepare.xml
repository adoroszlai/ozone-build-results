<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.1.1 (Python 3.9.21 on linux)" generated="20251020 07:53:42.322" rpa="false" schemaversion="4">
<suite id="s1" name="ozone-om-prepare">
<suite id="s1-s1" name="Om-Prepare" source="/opt/hadoop/smoketest/omha/om-prepare.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Get Security Enabled From Config</arg>
<arg>AND</arg>
<arg>Create Specific OM data for prepare</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Get Security Enabled From Config" library="commonlib">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' != ''</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20251020 07:50:13.904" endtime="20251020 07:50:13.904"/>
</kw>
<kw name="Execute" library="os">
<var>${value}</var>
<arg>ozone getconf confKey ozone.security.enabled</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20251020 07:50:13.907" level="INFO">Running command 'ozone getconf confKey ozone.security.enabled 2&gt;&amp;1'.</msg>
<msg timestamp="20251020 07:50:14.564" level="INFO">${rc} = 0</msg>
<msg timestamp="20251020 07:50:14.564" level="INFO">${output} = false</msg>
<status status="PASS" starttime="20251020 07:50:13.905" endtime="20251020 07:50:14.564"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20251020 07:50:14.565" level="INFO">false</msg>
<status status="PASS" starttime="20251020 07:50:14.564" endtime="20251020 07:50:14.565"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20251020 07:50:14.565" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20251020 07:50:14.565" endtime="20251020 07:50:14.565"/>
</kw>
<status status="PASS" starttime="20251020 07:50:13.905" endtime="20251020 07:50:14.565"/>
</kw>
<msg timestamp="20251020 07:50:14.565" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20251020 07:50:13.905" endtime="20251020 07:50:14.565"/>
</kw>
<msg timestamp="20251020 07:50:14.565" level="INFO">${value} = false</msg>
<status status="PASS" starttime="20251020 07:50:13.904" endtime="20251020 07:50:14.565"/>
</kw>
<if>
<branch type="IF" condition="'${value}' != 'true' and '${value}' != 'false'">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>false</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20251020 07:50:14.566" endtime="20251020 07:50:14.566"/>
</kw>
<status status="NOT RUN" starttime="20251020 07:50:14.565" endtime="20251020 07:50:14.566"/>
</branch>
<status status="PASS" starttime="20251020 07:50:14.565" endtime="20251020 07:50:14.566"/>
</if>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${SECURITY_ENABLED}</arg>
<arg>${value}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20251020 07:50:14.566" level="INFO">${SECURITY_ENABLED} = false</msg>
<status status="PASS" starttime="20251020 07:50:14.566" endtime="20251020 07:50:14.566"/>
</kw>
<status status="PASS" starttime="20251020 07:50:13.904" endtime="20251020 07:50:14.566"/>
</kw>
<kw name="Create Specific OM data for prepare">
<kw name="Freon OCKG" library="freon">
<arg>prefix=om-prepare</arg>
<arg>n=100</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20251020 07:50:14.570" level="INFO">Running command 'ozone freon ockg --om-service-id=omservice -t 1 -n100 -p om-prepare  2&gt;&amp;1'.</msg>
<msg timestamp="20251020 07:50:22.132" level="INFO">${rc} = 0</msg>
<msg timestamp="20251020 07:50:22.132" level="INFO">${output} = 2025-10-20 07:50:15,720 [main] INFO freon.BaseFreonGenerator: Executing test with prefix om-prepare and number-of-tests 100
2025-10-20 07:50:15,759 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % ...</msg>
<status status="PASS" starttime="20251020 07:50:14.568" endtime="20251020 07:50:22.132"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20251020 07:50:22.133" level="INFO">2025-10-20 07:50:15,720 [main] INFO freon.BaseFreonGenerator: Executing test with prefix om-prepare and number-of-tests 100
2025-10-20 07:50:15,759 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2025-10-20 07:50:16,602 [main] INFO rpc.RpcClient: Creating Volume: vol1, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1
2025-10-20 07:50:16,681 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption set to false, Replication Type set to server-side default replication type, Namespace Quota set to -1, Space Quota set to -1 
2025-10-20 07:50:16,759 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2025-10-20 07:50:16,877 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2025-10-20 07:50:17,760 [Thread-3] INFO freon.ProgressBar: Progress: 1.00 % (1 out of 100)
2025-10-20 07:50:18,760 [Thread-3] INFO freon.ProgressBar: Progress: 20.00 % (20 out of 100)
2025-10-20 07:50:19,760 [Thread-3] INFO freon.ProgressBar: Progress: 47.00 % (47 out of 100)
2025-10-20 07:50:20,761 [Thread-3] INFO freon.ProgressBar: Progress: 78.00 % (78 out of 100)
2025-10-20 07:50:21,761 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (100 out of 100)
2025-10-20 07:50:21,790 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=100, min=24.062799, max=844.022478, mean=47.101274302019, stddev=82.40937939014657, median=35.567399, p75=40.775056, p95=60.66115, p98=201.266883, p99=206.347903, p999=844.022478, mean_rate=19.70993719553868, m1=20.0, m5=20.0, m15=20.0, rate_unit=events/second, duration_unit=milliseconds
2025-10-20 07:50:21,791 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 6
2025-10-20 07:50:21,791 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2025-10-20 07:50:21,791 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 100</msg>
<status status="PASS" starttime="20251020 07:50:22.132" endtime="20251020 07:50:22.133"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20251020 07:50:22.133" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20251020 07:50:22.133" endtime="20251020 07:50:22.133"/>
</kw>
<status status="PASS" starttime="20251020 07:50:14.567" endtime="20251020 07:50:22.133"/>
</kw>
<msg timestamp="20251020 07:50:22.133" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20251020 07:50:14.567" endtime="20251020 07:50:22.133"/>
</kw>
<msg timestamp="20251020 07:50:22.134" level="INFO">${result} = 2025-10-20 07:50:15,720 [main] INFO freon.BaseFreonGenerator: Executing test with prefix om-prepare and number-of-tests 100
2025-10-20 07:50:15,759 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % ...</msg>
<status status="PASS" starttime="20251020 07:50:14.567" endtime="20251020 07:50:22.134"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20251020 07:50:22.134" endtime="20251020 07:50:22.134"/>
</kw>
<status status="PASS" starttime="20251020 07:50:14.566" endtime="20251020 07:50:22.134"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20251020 07:50:22.134" level="INFO">${random} = 82084</msg>
<status status="PASS" starttime="20251020 07:50:22.134" endtime="20251020 07:50:22.134"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume_name}</arg>
<arg>${random}-volume-for-prepare</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20251020 07:50:22.135" level="INFO">${volume_name} = 82084-volume-for-prepare</msg>
<status status="PASS" starttime="20251020 07:50:22.134" endtime="20251020 07:50:22.135"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${bucket_name}</arg>
<arg>${random}-bucket-for-prepare</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20251020 07:50:22.136" level="INFO">${bucket_name} = 82084-bucket-for-prepare</msg>
<status status="PASS" starttime="20251020 07:50:22.135" endtime="20251020 07:50:22.136"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create /${volume_name}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20251020 07:50:22.139" level="INFO">Running command 'ozone sh volume create /82084-volume-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20251020 07:50:23.998" level="INFO">${rc} = 0</msg>
<msg timestamp="20251020 07:50:23.999" level="INFO">${output} = </msg>
<status status="PASS" starttime="20251020 07:50:22.137" endtime="20251020 07:50:23.999"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20251020 07:50:23.999" level="INFO"/>
<status status="PASS" starttime="20251020 07:50:23.999" endtime="20251020 07:50:23.999"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20251020 07:50:24.000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20251020 07:50:23.999" endtime="20251020 07:50:24.000"/>
</kw>
<status status="PASS" starttime="20251020 07:50:22.137" endtime="20251020 07:50:24.000"/>
</kw>
<msg timestamp="20251020 07:50:24.000" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20251020 07:50:22.136" endtime="20251020 07:50:24.000"/>
</kw>
<status status="PASS" starttime="20251020 07:50:22.136" endtime="20251020 07:50:24.000"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create /${volume_name}/${bucket_name}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20251020 07:50:24.003" level="INFO">Running command 'ozone sh bucket create /82084-volume-for-prepare/82084-bucket-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20251020 07:50:25.785" level="INFO">${rc} = 0</msg>
<msg timestamp="20251020 07:50:25.785" level="INFO">${output} = </msg>
<status status="PASS" starttime="20251020 07:50:24.001" endtime="20251020 07:50:25.785"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20251020 07:50:25.786" level="INFO"/>
<status status="PASS" starttime="20251020 07:50:25.786" endtime="20251020 07:50:25.786"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20251020 07:50:25.786" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20251020 07:50:25.786" endtime="20251020 07:50:25.786"/>
</kw>
<status status="PASS" starttime="20251020 07:50:24.000" endtime="20251020 07:50:25.787"/>
</kw>
<msg timestamp="20251020 07:50:25.787" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20251020 07:50:24.000" endtime="20251020 07:50:25.787"/>
</kw>
<status status="PASS" starttime="20251020 07:50:24.000" endtime="20251020 07:50:25.787"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume_name}/${bucket_name}/prepare-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20251020 07:50:25.789" level="INFO">Running command 'ozone sh key put /82084-volume-for-prepare/82084-bucket-for-prepare/prepare-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20251020 07:50:28.796" level="INFO">${rc} = 0</msg>
<msg timestamp="20251020 07:50:28.796" level="INFO">${output} = </msg>
<status status="PASS" starttime="20251020 07:50:25.787" endtime="20251020 07:50:28.796"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20251020 07:50:28.796" level="INFO"/>
<status status="PASS" starttime="20251020 07:50:28.796" endtime="20251020 07:50:28.796"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20251020 07:50:28.797" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20251020 07:50:28.797" endtime="20251020 07:50:28.797"/>
</kw>
<status status="PASS" starttime="20251020 07:50:25.787" endtime="20251020 07:50:28.797"/>
</kw>
<msg timestamp="20251020 07:50:28.797" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20251020 07:50:25.787" endtime="20251020 07:50:28.797"/>
</kw>
<status status="PASS" starttime="20251020 07:50:25.787" endtime="20251020 07:50:28.797"/>
</kw>
<status status="PASS" starttime="20251020 07:50:14.566" endtime="20251020 07:50:28.797"/>
</kw>
<status status="PASS" starttime="20251020 07:50:13.904" endtime="20251020 07:50:28.797"/>
</kw>
<test id="s1-s1-t1" name="Prepare Ozone Manager" line="40">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20251020 07:50:28.798" endtime="20251020 07:50:28.798"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om prepare -id=omservice</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20251020 07:50:28.802" level="INFO">Running command 'ozone admin om prepare -id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20251020 07:50:45.388" level="INFO">${rc} = 0</msg>
<msg timestamp="20251020 07:50:45.388" level="INFO">${output} = Ozone Manager Prepare Request successfully returned with Transaction Id : [207].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [NOT_PREPARED], Curren...</msg>
<status status="PASS" starttime="20251020 07:50:28.799" endtime="20251020 07:50:45.388"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20251020 07:50:45.389" level="INFO">Ozone Manager Prepare Request successfully returned with Transaction Id : [207].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [NOT_PREPARED], Current Transaction Id : [-1]
OM : [om3], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [207]
OM : [om2], Prepare Status : [NOT_PREPARED], Current Transaction Id : [-1]
Waiting for 10 seconds before retrying...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [207]
OM : [om2], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [207]

OM Preparation successful! 
All OMs are prepared
No new write requests will be allowed until preparation is cancelled or upgrade/downgrade is done.</msg>
<status status="PASS" starttime="20251020 07:50:45.388" endtime="20251020 07:50:45.389"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20251020 07:50:45.389" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20251020 07:50:45.389" endtime="20251020 07:50:45.390"/>
</kw>
<status status="PASS" starttime="20251020 07:50:28.799" endtime="20251020 07:50:45.390"/>
</kw>
<msg timestamp="20251020 07:50:45.390" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20251020 07:50:28.799" endtime="20251020 07:50:45.390"/>
</kw>
<msg timestamp="20251020 07:50:45.390" level="INFO">${result} = Ozone Manager Prepare Request successfully returned with Transaction Id : [207].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [NOT_PREPARED], Curren...</msg>
<status status="PASS" starttime="20251020 07:50:28.798" endtime="20251020 07:50:45.390"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>OM Preparation successful!</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OM Preparation successful!</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20251020 07:50:45.390" endtime="20251020 07:50:45.391"/>
</kw>
<status status="PASS" starttime="20251020 07:50:45.390" endtime="20251020 07:50:45.391"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20251020 07:50:28.797" endtime="20251020 07:50:45.391"/>
</test>
<test id="s1-s1-t2" name="Checks if the expected data is present in OM" line="44">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20251020 07:50:45.392" endtime="20251020 07:50:45.392"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info /${volume_name}/${bucket_name}/prepare-key</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20251020 07:50:45.395" level="INFO">Running command 'ozone sh key info /82084-volume-for-prepare/82084-bucket-for-prepare/prepare-key 2&gt;&amp;1'.</msg>
<msg timestamp="20251020 07:50:47.748" level="INFO">${rc} = 0</msg>
<msg timestamp="20251020 07:50:47.748" level="INFO">${output} = {
  "volumeName" : "82084-volume-for-prepare",
  "bucketName" : "82084-bucket-for-prepare",
  "name" : "prepare-key",
  "owner" : "hadoop",
  "dataSize" : 15892,
  "creationTime" : "2025-10-20T07:50:2...</msg>
<status status="PASS" starttime="20251020 07:50:45.393" endtime="20251020 07:50:47.748"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20251020 07:50:47.749" level="INFO">{
  "volumeName" : "82084-volume-for-prepare",
  "bucketName" : "82084-bucket-for-prepare",
  "name" : "prepare-key",
  "owner" : "hadoop",
  "dataSize" : 15892,
  "creationTime" : "2025-10-20T07:50:27.511Z",
  "modificationTime" : "2025-10-20T07:50:28.447Z",
  "replicationConfig" : {
    "replicationFactor" : "ONE",
    "requiredNodes" : 1,
    "minimumNodes" : 1,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "tags" : { },
  "ozoneKeyLocations" : [ {
    "containerID" : 2,
    "localID" : 115816896921600101,
    "length" : 15892,
    "offset" : 0,
    "keyOffset" : 0
  } ],
  "generation" : 206,
  "file" : true
}</msg>
<status status="PASS" starttime="20251020 07:50:47.749" endtime="20251020 07:50:47.749"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20251020 07:50:47.750" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20251020 07:50:47.749" endtime="20251020 07:50:47.750"/>
</kw>
<status status="PASS" starttime="20251020 07:50:45.393" endtime="20251020 07:50:47.750"/>
</kw>
<msg timestamp="20251020 07:50:47.750" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20251020 07:50:45.392" endtime="20251020 07:50:47.750"/>
</kw>
<msg timestamp="20251020 07:50:47.750" level="INFO">${result} = {
  "volumeName" : "82084-volume-for-prepare",
  "bucketName" : "82084-bucket-for-prepare",
  "name" : "prepare-key",
  "owner" : "hadoop",
  "dataSize" : 15892,
  "creationTime" : "2025-10-20T07:50:2...</msg>
<status status="PASS" starttime="20251020 07:50:45.392" endtime="20251020 07:50:47.750"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"name\" : \"prepare-key\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20251020 07:50:47.750" endtime="20251020 07:50:47.750"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20251020 07:50:45.391" endtime="20251020 07:50:47.751"/>
</test>
<test id="s1-s1-t3" name="Test write operation fails" line="48">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20251020 07:50:47.751" endtime="20251020 07:50:47.752"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh key put /${volume_name}/${bucket_name}/prepare-key2 /opt/hadoop/NOTICE.txt</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20251020 07:50:47.755" level="INFO">Running command 'ozone sh key put /82084-volume-for-prepare/82084-bucket-for-prepare/prepare-key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20251020 07:50:49.580" level="INFO">${rc} = 255</msg>
<msg timestamp="20251020 07:50:49.580" level="INFO">${output} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateKey when OM is in prepare mode.</msg>
<status status="PASS" starttime="20251020 07:50:47.752" endtime="20251020 07:50:49.580"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20251020 07:50:49.580" level="INFO">NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateKey when OM is in prepare mode.</msg>
<status status="PASS" starttime="20251020 07:50:49.580" endtime="20251020 07:50:49.580"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20251020 07:50:49.581" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20251020 07:50:49.581" endtime="20251020 07:50:49.581"/>
</kw>
<msg timestamp="20251020 07:50:49.581" level="INFO">${result} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateKey when OM is in prepare mode.</msg>
<status status="PASS" starttime="20251020 07:50:47.752" endtime="20251020 07:50:49.581"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OM is in prepare mode</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20251020 07:50:49.581" endtime="20251020 07:50:49.581"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>ozone sh key info /${volume_name}/${bucket_name}/prepare-key2</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20251020 07:50:49.584" level="INFO">Running command 'ozone sh key info /82084-volume-for-prepare/82084-bucket-for-prepare/prepare-key2 2&gt;&amp;1'.</msg>
<msg timestamp="20251020 07:50:51.508" level="INFO">${rc} = 255</msg>
<msg timestamp="20251020 07:50:51.508" level="INFO">${output} = KEY_NOT_FOUND Key:prepare-key2 not found</msg>
<status status="PASS" starttime="20251020 07:50:49.582" endtime="20251020 07:50:51.508"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20251020 07:50:51.509" level="INFO">KEY_NOT_FOUND Key:prepare-key2 not found</msg>
<status status="PASS" starttime="20251020 07:50:51.508" endtime="20251020 07:50:51.509"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20251020 07:50:51.509" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20251020 07:50:51.509" endtime="20251020 07:50:51.509"/>
</kw>
<status status="PASS" starttime="20251020 07:50:49.581" endtime="20251020 07:50:51.509"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20251020 07:50:47.751" endtime="20251020 07:50:51.510"/>
</test>
<doc>Smoke test to test preparing OMs in an OM HA cluster.</doc>
<status status="PASS" starttime="20251020 07:50:13.868" endtime="20251020 07:50:51.510"/>
</suite>
<suite id="s1-s2" name="Om-Cancel-Prepare" source="/opt/hadoop/smoketest/omha/om-cancel-prepare.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Generate volume and bucket names</arg>
<arg>AND</arg>
<arg>Get Security Enabled From Config</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Generate volume and bucket names">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20251020 07:50:52.031" level="INFO">${random} = 64628</msg>
<status status="PASS" starttime="20251020 07:50:52.031" endtime="20251020 07:50:52.031"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume_name}</arg>
<arg>${random}-volume-for-cancel</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20251020 07:50:52.032" level="INFO">${volume_name} = 64628-volume-for-cancel</msg>
<status status="PASS" starttime="20251020 07:50:52.031" endtime="20251020 07:50:52.032"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${bucket_name}</arg>
<arg>${random}-bucket-for-cancel</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20251020 07:50:52.033" level="INFO">${bucket_name} = 64628-bucket-for-cancel</msg>
<status status="PASS" starttime="20251020 07:50:52.032" endtime="20251020 07:50:52.033"/>
</kw>
<status status="PASS" starttime="20251020 07:50:52.031" endtime="20251020 07:50:52.033"/>
</kw>
<kw name="Get Security Enabled From Config" library="commonlib">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' != ''</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20251020 07:50:52.033" endtime="20251020 07:50:52.033"/>
</kw>
<kw name="Execute" library="os">
<var>${value}</var>
<arg>ozone getconf confKey ozone.security.enabled</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20251020 07:50:52.035" level="INFO">Running command 'ozone getconf confKey ozone.security.enabled 2&gt;&amp;1'.</msg>
<msg timestamp="20251020 07:50:52.674" level="INFO">${rc} = 0</msg>
<msg timestamp="20251020 07:50:52.674" level="INFO">${output} = false</msg>
<status status="PASS" starttime="20251020 07:50:52.034" endtime="20251020 07:50:52.674"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20251020 07:50:52.674" level="INFO">false</msg>
<status status="PASS" starttime="20251020 07:50:52.674" endtime="20251020 07:50:52.674"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20251020 07:50:52.675" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20251020 07:50:52.674" endtime="20251020 07:50:52.675"/>
</kw>
<status status="PASS" starttime="20251020 07:50:52.033" endtime="20251020 07:50:52.675"/>
</kw>
<msg timestamp="20251020 07:50:52.675" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20251020 07:50:52.033" endtime="20251020 07:50:52.675"/>
</kw>
<msg timestamp="20251020 07:50:52.675" level="INFO">${value} = false</msg>
<status status="PASS" starttime="20251020 07:50:52.033" endtime="20251020 07:50:52.675"/>
</kw>
<if>
<branch type="IF" condition="'${value}' != 'true' and '${value}' != 'false'">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>false</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20251020 07:50:52.675" endtime="20251020 07:50:52.675"/>
</kw>
<status status="NOT RUN" starttime="20251020 07:50:52.675" endtime="20251020 07:50:52.675"/>
</branch>
<status status="PASS" starttime="20251020 07:50:52.675" endtime="20251020 07:50:52.675"/>
</if>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${SECURITY_ENABLED}</arg>
<arg>${value}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20251020 07:50:52.676" level="INFO">${SECURITY_ENABLED} = false</msg>
<status status="PASS" starttime="20251020 07:50:52.675" endtime="20251020 07:50:52.676"/>
</kw>
<status status="PASS" starttime="20251020 07:50:52.033" endtime="20251020 07:50:52.676"/>
</kw>
<status status="PASS" starttime="20251020 07:50:52.031" endtime="20251020 07:50:52.676"/>
</kw>
<test id="s1-s2-t1" name="Cancel Ozone Manager Prepare" line="34">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20251020 07:50:52.676" endtime="20251020 07:50:52.677"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om cancelprepare -id=omservice</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20251020 07:50:52.679" level="INFO">Running command 'ozone admin om cancelprepare -id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20251020 07:50:54.226" level="INFO">${rc} = 0</msg>
<msg timestamp="20251020 07:50:54.226" level="INFO">${output} = Cancel prepare succeeded, cluster can now accept write requests.</msg>
<status status="PASS" starttime="20251020 07:50:52.677" endtime="20251020 07:50:54.226"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20251020 07:50:54.227" level="INFO">Cancel prepare succeeded, cluster can now accept write requests.</msg>
<status status="PASS" starttime="20251020 07:50:54.227" endtime="20251020 07:50:54.227"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20251020 07:50:54.228" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20251020 07:50:54.227" endtime="20251020 07:50:54.228"/>
</kw>
<status status="PASS" starttime="20251020 07:50:52.677" endtime="20251020 07:50:54.228"/>
</kw>
<msg timestamp="20251020 07:50:54.228" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20251020 07:50:52.677" endtime="20251020 07:50:54.228"/>
</kw>
<msg timestamp="20251020 07:50:54.228" level="INFO">${result} = Cancel prepare succeeded, cluster can now accept write requests.</msg>
<status status="PASS" starttime="20251020 07:50:52.677" endtime="20251020 07:50:54.228"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>5sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Cancel prepare succeeded</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Cancel prepare succeeded</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20251020 07:50:54.228" endtime="20251020 07:50:54.229"/>
</kw>
<status status="PASS" starttime="20251020 07:50:54.228" endtime="20251020 07:50:54.229"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20251020 07:50:52.676" endtime="20251020 07:50:54.229"/>
</test>
<test id="s1-s2-t2" name="Test write operations" line="38">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20251020 07:50:54.230" endtime="20251020 07:50:54.230"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create /${volume_name}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20251020 07:50:54.233" level="INFO">Running command 'ozone sh volume create /64628-volume-for-cancel 2&gt;&amp;1'.</msg>
<msg timestamp="20251020 07:50:56.242" level="INFO">${rc} = 0</msg>
<msg timestamp="20251020 07:50:56.243" level="INFO">${output} = </msg>
<status status="PASS" starttime="20251020 07:50:54.231" endtime="20251020 07:50:56.243"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20251020 07:50:56.243" level="INFO"/>
<status status="PASS" starttime="20251020 07:50:56.243" endtime="20251020 07:50:56.243"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20251020 07:50:56.244" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20251020 07:50:56.244" endtime="20251020 07:50:56.244"/>
</kw>
<status status="PASS" starttime="20251020 07:50:54.230" endtime="20251020 07:50:56.244"/>
</kw>
<msg timestamp="20251020 07:50:56.244" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20251020 07:50:54.230" endtime="20251020 07:50:56.244"/>
</kw>
<status status="PASS" starttime="20251020 07:50:54.230" endtime="20251020 07:50:56.244"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create /${volume_name}/${bucket_name}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20251020 07:50:56.247" level="INFO">Running command 'ozone sh bucket create /64628-volume-for-cancel/64628-bucket-for-cancel 2&gt;&amp;1'.</msg>
<msg timestamp="20251020 07:50:58.209" level="INFO">${rc} = 0</msg>
<msg timestamp="20251020 07:50:58.209" level="INFO">${output} = </msg>
<status status="PASS" starttime="20251020 07:50:56.245" endtime="20251020 07:50:58.209"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20251020 07:50:58.209" level="INFO"/>
<status status="PASS" starttime="20251020 07:50:58.209" endtime="20251020 07:50:58.209"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20251020 07:50:58.210" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20251020 07:50:58.210" endtime="20251020 07:50:58.210"/>
</kw>
<status status="PASS" starttime="20251020 07:50:56.245" endtime="20251020 07:50:58.210"/>
</kw>
<msg timestamp="20251020 07:50:58.210" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20251020 07:50:56.245" endtime="20251020 07:50:58.210"/>
</kw>
<status status="PASS" starttime="20251020 07:50:56.244" endtime="20251020 07:50:58.210"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key put /${volume_name}/${bucket_name}/cancel-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20251020 07:50:58.213" level="INFO">Running command 'ozone sh key put /64628-volume-for-cancel/64628-bucket-for-cancel/cancel-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20251020 07:51:00.996" level="INFO">${rc} = 0</msg>
<msg timestamp="20251020 07:51:00.996" level="INFO">${output} = </msg>
<status status="PASS" starttime="20251020 07:50:58.211" endtime="20251020 07:51:00.996"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20251020 07:51:00.997" level="INFO"/>
<status status="PASS" starttime="20251020 07:51:00.996" endtime="20251020 07:51:00.997"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20251020 07:51:00.997" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20251020 07:51:00.997" endtime="20251020 07:51:00.997"/>
</kw>
<status status="PASS" starttime="20251020 07:50:58.211" endtime="20251020 07:51:00.997"/>
</kw>
<msg timestamp="20251020 07:51:00.997" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20251020 07:50:58.211" endtime="20251020 07:51:00.997"/>
</kw>
<msg timestamp="20251020 07:51:00.998" level="INFO">${result} = </msg>
<status status="PASS" starttime="20251020 07:50:58.210" endtime="20251020 07:51:00.998"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info /${volume_name}/${bucket_name}/cancel-key</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20251020 07:51:01.000" level="INFO">Running command 'ozone sh key info /64628-volume-for-cancel/64628-bucket-for-cancel/cancel-key 2&gt;&amp;1'.</msg>
<msg timestamp="20251020 07:51:03.069" level="INFO">${rc} = 0</msg>
<msg timestamp="20251020 07:51:03.069" level="INFO">${output} = {
  "volumeName" : "64628-volume-for-cancel",
  "bucketName" : "64628-bucket-for-cancel",
  "name" : "cancel-key",
  "owner" : "hadoop",
  "dataSize" : 15892,
  "creationTime" : "2025-10-20T07:50:59.8...</msg>
<status status="PASS" starttime="20251020 07:51:00.998" endtime="20251020 07:51:03.070"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20251020 07:51:03.070" level="INFO">{
  "volumeName" : "64628-volume-for-cancel",
  "bucketName" : "64628-bucket-for-cancel",
  "name" : "cancel-key",
  "owner" : "hadoop",
  "dataSize" : 15892,
  "creationTime" : "2025-10-20T07:50:59.851Z",
  "modificationTime" : "2025-10-20T07:51:00.652Z",
  "replicationConfig" : {
    "replicationFactor" : "ONE",
    "requiredNodes" : 1,
    "minimumNodes" : 1,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "tags" : { },
  "ozoneKeyLocations" : [ {
    "containerID" : 4,
    "localID" : 115816896921600103,
    "length" : 15892,
    "offset" : 0,
    "keyOffset" : 0
  } ],
  "generation" : 212,
  "file" : true
}</msg>
<status status="PASS" starttime="20251020 07:51:03.070" endtime="20251020 07:51:03.070"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20251020 07:51:03.071" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20251020 07:51:03.071" endtime="20251020 07:51:03.071"/>
</kw>
<status status="PASS" starttime="20251020 07:51:00.998" endtime="20251020 07:51:03.071"/>
</kw>
<msg timestamp="20251020 07:51:03.071" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20251020 07:51:00.998" endtime="20251020 07:51:03.071"/>
</kw>
<msg timestamp="20251020 07:51:03.071" level="INFO">${result} = {
  "volumeName" : "64628-volume-for-cancel",
  "bucketName" : "64628-bucket-for-cancel",
  "name" : "cancel-key",
  "owner" : "hadoop",
  "dataSize" : 15892,
  "creationTime" : "2025-10-20T07:50:59.8...</msg>
<status status="PASS" starttime="20251020 07:51:00.998" endtime="20251020 07:51:03.071"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"name\" : \"cancel-key\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20251020 07:51:03.071" endtime="20251020 07:51:03.072"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20251020 07:50:54.229" endtime="20251020 07:51:03.072"/>
</test>
<doc>Smoke test for ozone manager cancel prepare</doc>
<status status="PASS" starttime="20251020 07:50:52.003" endtime="20251020 07:51:03.072"/>
</suite>
<suite id="s1-s3" name="Om-Prepare" source="/opt/hadoop/smoketest/omha/om-prepare.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Get Security Enabled From Config</arg>
<arg>AND</arg>
<arg>Create Specific OM data for prepare</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Get Security Enabled From Config" library="commonlib">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' != ''</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20251020 07:51:03.646" endtime="20251020 07:51:03.646"/>
</kw>
<kw name="Execute" library="os">
<var>${value}</var>
<arg>ozone getconf confKey ozone.security.enabled</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20251020 07:51:03.649" level="INFO">Running command 'ozone getconf confKey ozone.security.enabled 2&gt;&amp;1'.</msg>
<msg timestamp="20251020 07:51:04.345" level="INFO">${rc} = 0</msg>
<msg timestamp="20251020 07:51:04.345" level="INFO">${output} = false</msg>
<status status="PASS" starttime="20251020 07:51:03.647" endtime="20251020 07:51:04.345"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20251020 07:51:04.346" level="INFO">false</msg>
<status status="PASS" starttime="20251020 07:51:04.345" endtime="20251020 07:51:04.346"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20251020 07:51:04.346" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20251020 07:51:04.346" endtime="20251020 07:51:04.346"/>
</kw>
<status status="PASS" starttime="20251020 07:51:03.647" endtime="20251020 07:51:04.346"/>
</kw>
<msg timestamp="20251020 07:51:04.346" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20251020 07:51:03.647" endtime="20251020 07:51:04.347"/>
</kw>
<msg timestamp="20251020 07:51:04.347" level="INFO">${value} = false</msg>
<status status="PASS" starttime="20251020 07:51:03.646" endtime="20251020 07:51:04.347"/>
</kw>
<if>
<branch type="IF" condition="'${value}' != 'true' and '${value}' != 'false'">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>false</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20251020 07:51:04.347" endtime="20251020 07:51:04.347"/>
</kw>
<status status="NOT RUN" starttime="20251020 07:51:04.347" endtime="20251020 07:51:04.347"/>
</branch>
<status status="PASS" starttime="20251020 07:51:04.347" endtime="20251020 07:51:04.347"/>
</if>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${SECURITY_ENABLED}</arg>
<arg>${value}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20251020 07:51:04.347" level="INFO">${SECURITY_ENABLED} = false</msg>
<status status="PASS" starttime="20251020 07:51:04.347" endtime="20251020 07:51:04.347"/>
</kw>
<status status="PASS" starttime="20251020 07:51:03.646" endtime="20251020 07:51:04.348"/>
</kw>
<kw name="Create Specific OM data for prepare">
<kw name="Freon OCKG" library="freon">
<arg>prefix=om-prepare</arg>
<arg>n=100</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20251020 07:51:04.351" level="INFO">Running command 'ozone freon ockg --om-service-id=omservice -t 1 -n100 -p om-prepare  2&gt;&amp;1'.</msg>
<msg timestamp="20251020 07:51:10.953" level="INFO">${rc} = 0</msg>
<msg timestamp="20251020 07:51:10.953" level="INFO">${output} = 2025-10-20 07:51:05,527 [main] INFO freon.BaseFreonGenerator: Executing test with prefix om-prepare and number-of-tests 100
2025-10-20 07:51:05,580 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % ...</msg>
<status status="PASS" starttime="20251020 07:51:04.349" endtime="20251020 07:51:10.953"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20251020 07:51:10.954" level="INFO">2025-10-20 07:51:05,527 [main] INFO freon.BaseFreonGenerator: Executing test with prefix om-prepare and number-of-tests 100
2025-10-20 07:51:05,580 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2025-10-20 07:51:06,540 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2025-10-20 07:51:06,586 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2025-10-20 07:51:07,588 [Thread-3] INFO freon.ProgressBar: Progress: 11.00 % (11 out of 100)
2025-10-20 07:51:08,588 [Thread-3] INFO freon.ProgressBar: Progress: 38.00 % (38 out of 100)
2025-10-20 07:51:09,590 [Thread-3] INFO freon.ProgressBar: Progress: 70.00 % (70 out of 100)
2025-10-20 07:51:10,590 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (100 out of 100)
2025-10-20 07:51:10,617 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=100, min=22.152236, max=757.919234, mean=40.356042386605104, stddev=71.68252254394675, median=31.989754, p75=36.770181, p95=48.328277, p98=55.383017, p99=59.38684, p999=757.919234, mean_rate=23.95900896665455, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2025-10-20 07:51:10,618 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 5
2025-10-20 07:51:10,618 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2025-10-20 07:51:10,618 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 100</msg>
<status status="PASS" starttime="20251020 07:51:10.953" endtime="20251020 07:51:10.954"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20251020 07:51:10.954" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20251020 07:51:10.954" endtime="20251020 07:51:10.954"/>
</kw>
<status status="PASS" starttime="20251020 07:51:04.349" endtime="20251020 07:51:10.954"/>
</kw>
<msg timestamp="20251020 07:51:10.954" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20251020 07:51:04.349" endtime="20251020 07:51:10.954"/>
</kw>
<msg timestamp="20251020 07:51:10.955" level="INFO">${result} = 2025-10-20 07:51:05,527 [main] INFO freon.BaseFreonGenerator: Executing test with prefix om-prepare and number-of-tests 100
2025-10-20 07:51:05,580 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % ...</msg>
<status status="PASS" starttime="20251020 07:51:04.348" endtime="20251020 07:51:10.955"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20251020 07:51:10.955" endtime="20251020 07:51:10.955"/>
</kw>
<status status="PASS" starttime="20251020 07:51:04.348" endtime="20251020 07:51:10.955"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20251020 07:51:10.955" level="INFO">${random} = 79780</msg>
<status status="PASS" starttime="20251020 07:51:10.955" endtime="20251020 07:51:10.955"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume_name}</arg>
<arg>${random}-volume-for-prepare</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20251020 07:51:10.956" level="INFO">${volume_name} = 79780-volume-for-prepare</msg>
<status status="PASS" starttime="20251020 07:51:10.955" endtime="20251020 07:51:10.956"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${bucket_name}</arg>
<arg>${random}-bucket-for-prepare</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20251020 07:51:10.957" level="INFO">${bucket_name} = 79780-bucket-for-prepare</msg>
<status status="PASS" starttime="20251020 07:51:10.956" endtime="20251020 07:51:10.957"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create /${volume_name}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20251020 07:51:10.959" level="INFO">Running command 'ozone sh volume create /79780-volume-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20251020 07:51:12.885" level="INFO">${rc} = 0</msg>
<msg timestamp="20251020 07:51:12.885" level="INFO">${output} = </msg>
<status status="PASS" starttime="20251020 07:51:10.958" endtime="20251020 07:51:12.885"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20251020 07:51:12.886" level="INFO"/>
<status status="PASS" starttime="20251020 07:51:12.885" endtime="20251020 07:51:12.886"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20251020 07:51:12.886" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20251020 07:51:12.886" endtime="20251020 07:51:12.886"/>
</kw>
<status status="PASS" starttime="20251020 07:51:10.957" endtime="20251020 07:51:12.886"/>
</kw>
<msg timestamp="20251020 07:51:12.886" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20251020 07:51:10.957" endtime="20251020 07:51:12.886"/>
</kw>
<status status="PASS" starttime="20251020 07:51:10.957" endtime="20251020 07:51:12.886"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create /${volume_name}/${bucket_name}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20251020 07:51:12.889" level="INFO">Running command 'ozone sh bucket create /79780-volume-for-prepare/79780-bucket-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20251020 07:51:14.724" level="INFO">${rc} = 0</msg>
<msg timestamp="20251020 07:51:14.724" level="INFO">${output} = </msg>
<status status="PASS" starttime="20251020 07:51:12.887" endtime="20251020 07:51:14.724"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20251020 07:51:14.725" level="INFO"/>
<status status="PASS" starttime="20251020 07:51:14.725" endtime="20251020 07:51:14.725"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20251020 07:51:14.725" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20251020 07:51:14.725" endtime="20251020 07:51:14.725"/>
</kw>
<status status="PASS" starttime="20251020 07:51:12.887" endtime="20251020 07:51:14.725"/>
</kw>
<msg timestamp="20251020 07:51:14.725" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20251020 07:51:12.887" endtime="20251020 07:51:14.726"/>
</kw>
<status status="PASS" starttime="20251020 07:51:12.887" endtime="20251020 07:51:14.726"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume_name}/${bucket_name}/prepare-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20251020 07:51:14.728" level="INFO">Running command 'ozone sh key put /79780-volume-for-prepare/79780-bucket-for-prepare/prepare-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20251020 07:51:17.778" level="INFO">${rc} = 0</msg>
<msg timestamp="20251020 07:51:17.778" level="INFO">${output} = </msg>
<status status="PASS" starttime="20251020 07:51:14.726" endtime="20251020 07:51:17.778"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20251020 07:51:17.778" level="INFO"/>
<status status="PASS" starttime="20251020 07:51:17.778" endtime="20251020 07:51:17.779"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20251020 07:51:17.779" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20251020 07:51:17.779" endtime="20251020 07:51:17.779"/>
</kw>
<status status="PASS" starttime="20251020 07:51:14.726" endtime="20251020 07:51:17.779"/>
</kw>
<msg timestamp="20251020 07:51:17.779" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20251020 07:51:14.726" endtime="20251020 07:51:17.779"/>
</kw>
<status status="PASS" starttime="20251020 07:51:14.726" endtime="20251020 07:51:17.779"/>
</kw>
<status status="PASS" starttime="20251020 07:51:04.348" endtime="20251020 07:51:17.779"/>
</kw>
<status status="PASS" starttime="20251020 07:51:03.645" endtime="20251020 07:51:17.779"/>
</kw>
<test id="s1-s3-t1" name="Prepare Ozone Manager" line="40">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20251020 07:51:17.780" endtime="20251020 07:51:17.780"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om prepare -id=omservice</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20251020 07:51:17.783" level="INFO">Running command 'ozone admin om prepare -id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20251020 07:51:34.269" level="INFO">${rc} = 0</msg>
<msg timestamp="20251020 07:51:34.269" level="INFO">${output} = Ozone Manager Prepare Request successfully returned with Transaction Id : [417].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [NOT_PREPARED], Curren...</msg>
<status status="PASS" starttime="20251020 07:51:17.781" endtime="20251020 07:51:34.269"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20251020 07:51:34.269" level="INFO">Ozone Manager Prepare Request successfully returned with Transaction Id : [417].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [NOT_PREPARED], Current Transaction Id : [-1]
OM : [om3], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [417]
OM : [om2], Prepare Status : [NOT_PREPARED], Current Transaction Id : [-1]
Waiting for 10 seconds before retrying...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [417]
OM : [om2], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [417]

OM Preparation successful! 
All OMs are prepared
No new write requests will be allowed until preparation is cancelled or upgrade/downgrade is done.</msg>
<status status="PASS" starttime="20251020 07:51:34.269" endtime="20251020 07:51:34.270"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20251020 07:51:34.270" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20251020 07:51:34.270" endtime="20251020 07:51:34.270"/>
</kw>
<status status="PASS" starttime="20251020 07:51:17.781" endtime="20251020 07:51:34.270"/>
</kw>
<msg timestamp="20251020 07:51:34.270" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20251020 07:51:17.781" endtime="20251020 07:51:34.270"/>
</kw>
<msg timestamp="20251020 07:51:34.270" level="INFO">${result} = Ozone Manager Prepare Request successfully returned with Transaction Id : [417].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [NOT_PREPARED], Curren...</msg>
<status status="PASS" starttime="20251020 07:51:17.780" endtime="20251020 07:51:34.270"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>OM Preparation successful!</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OM Preparation successful!</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20251020 07:51:34.271" endtime="20251020 07:51:34.271"/>
</kw>
<status status="PASS" starttime="20251020 07:51:34.270" endtime="20251020 07:51:34.271"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20251020 07:51:17.779" endtime="20251020 07:51:34.271"/>
</test>
<test id="s1-s3-t2" name="Checks if the expected data is present in OM" line="44">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20251020 07:51:34.272" endtime="20251020 07:51:34.272"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info /${volume_name}/${bucket_name}/prepare-key</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20251020 07:51:34.275" level="INFO">Running command 'ozone sh key info /79780-volume-for-prepare/79780-bucket-for-prepare/prepare-key 2&gt;&amp;1'.</msg>
<msg timestamp="20251020 07:51:36.354" level="INFO">${rc} = 0</msg>
<msg timestamp="20251020 07:51:36.354" level="INFO">${output} = {
  "volumeName" : "79780-volume-for-prepare",
  "bucketName" : "79780-bucket-for-prepare",
  "name" : "prepare-key",
  "owner" : "hadoop",
  "dataSize" : 15892,
  "creationTime" : "2025-10-20T07:51:1...</msg>
<status status="PASS" starttime="20251020 07:51:34.273" endtime="20251020 07:51:36.354"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20251020 07:51:36.355" level="INFO">{
  "volumeName" : "79780-volume-for-prepare",
  "bucketName" : "79780-bucket-for-prepare",
  "name" : "prepare-key",
  "owner" : "hadoop",
  "dataSize" : 15892,
  "creationTime" : "2025-10-20T07:51:16.577Z",
  "modificationTime" : "2025-10-20T07:51:17.434Z",
  "replicationConfig" : {
    "replicationFactor" : "ONE",
    "requiredNodes" : 1,
    "minimumNodes" : 1,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "tags" : { },
  "ozoneKeyLocations" : [ {
    "containerID" : 5,
    "localID" : 115816896921600204,
    "length" : 15892,
    "offset" : 0,
    "keyOffset" : 0
  } ],
  "generation" : 416,
  "file" : true
}</msg>
<status status="PASS" starttime="20251020 07:51:36.355" endtime="20251020 07:51:36.355"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20251020 07:51:36.356" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20251020 07:51:36.355" endtime="20251020 07:51:36.356"/>
</kw>
<status status="PASS" starttime="20251020 07:51:34.273" endtime="20251020 07:51:36.356"/>
</kw>
<msg timestamp="20251020 07:51:36.356" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20251020 07:51:34.273" endtime="20251020 07:51:36.356"/>
</kw>
<msg timestamp="20251020 07:51:36.356" level="INFO">${result} = {
  "volumeName" : "79780-volume-for-prepare",
  "bucketName" : "79780-bucket-for-prepare",
  "name" : "prepare-key",
  "owner" : "hadoop",
  "dataSize" : 15892,
  "creationTime" : "2025-10-20T07:51:1...</msg>
<status status="PASS" starttime="20251020 07:51:34.272" endtime="20251020 07:51:36.356"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"name\" : \"prepare-key\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20251020 07:51:36.356" endtime="20251020 07:51:36.357"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20251020 07:51:34.271" endtime="20251020 07:51:36.357"/>
</test>
<test id="s1-s3-t3" name="Test write operation fails" line="48">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20251020 07:51:36.358" endtime="20251020 07:51:36.358"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh key put /${volume_name}/${bucket_name}/prepare-key2 /opt/hadoop/NOTICE.txt</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20251020 07:51:36.361" level="INFO">Running command 'ozone sh key put /79780-volume-for-prepare/79780-bucket-for-prepare/prepare-key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20251020 07:51:38.364" level="INFO">${rc} = 255</msg>
<msg timestamp="20251020 07:51:38.364" level="INFO">${output} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateKey when OM is in prepare mode.</msg>
<status status="PASS" starttime="20251020 07:51:36.359" endtime="20251020 07:51:38.364"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20251020 07:51:38.365" level="INFO">NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateKey when OM is in prepare mode.</msg>
<status status="PASS" starttime="20251020 07:51:38.364" endtime="20251020 07:51:38.365"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20251020 07:51:38.365" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20251020 07:51:38.365" endtime="20251020 07:51:38.365"/>
</kw>
<msg timestamp="20251020 07:51:38.365" level="INFO">${result} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateKey when OM is in prepare mode.</msg>
<status status="PASS" starttime="20251020 07:51:36.358" endtime="20251020 07:51:38.365"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OM is in prepare mode</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20251020 07:51:38.365" endtime="20251020 07:51:38.365"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>ozone sh key info /${volume_name}/${bucket_name}/prepare-key2</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20251020 07:51:38.368" level="INFO">Running command 'ozone sh key info /79780-volume-for-prepare/79780-bucket-for-prepare/prepare-key2 2&gt;&amp;1'.</msg>
<msg timestamp="20251020 07:51:40.223" level="INFO">${rc} = 255</msg>
<msg timestamp="20251020 07:51:40.223" level="INFO">${output} = KEY_NOT_FOUND Key:prepare-key2 not found</msg>
<status status="PASS" starttime="20251020 07:51:38.366" endtime="20251020 07:51:40.223"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20251020 07:51:40.224" level="INFO">KEY_NOT_FOUND Key:prepare-key2 not found</msg>
<status status="PASS" starttime="20251020 07:51:40.224" endtime="20251020 07:51:40.224"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20251020 07:51:40.224" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20251020 07:51:40.224" endtime="20251020 07:51:40.225"/>
</kw>
<status status="PASS" starttime="20251020 07:51:38.366" endtime="20251020 07:51:40.225"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20251020 07:51:36.357" endtime="20251020 07:51:40.225"/>
</test>
<doc>Smoke test to test preparing OMs in an OM HA cluster.</doc>
<status status="PASS" starttime="20251020 07:51:03.612" endtime="20251020 07:51:40.226"/>
</suite>
<suite id="s1-s4" name="Om-Prepared" source="/opt/hadoop/smoketest/omha/om-prepared.robot">
<kw name="Get Security Enabled From Config" library="commonlib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' != ''</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20251020 07:51:40.750" endtime="20251020 07:51:40.750"/>
</kw>
<kw name="Execute" library="os">
<var>${value}</var>
<arg>ozone getconf confKey ozone.security.enabled</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20251020 07:51:40.753" level="INFO">Running command 'ozone getconf confKey ozone.security.enabled 2&gt;&amp;1'.</msg>
<msg timestamp="20251020 07:51:41.474" level="INFO">${rc} = 0</msg>
<msg timestamp="20251020 07:51:41.474" level="INFO">${output} = false</msg>
<status status="PASS" starttime="20251020 07:51:40.751" endtime="20251020 07:51:41.474"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20251020 07:51:41.474" level="INFO">false</msg>
<status status="PASS" starttime="20251020 07:51:41.474" endtime="20251020 07:51:41.474"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20251020 07:51:41.475" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20251020 07:51:41.474" endtime="20251020 07:51:41.475"/>
</kw>
<status status="PASS" starttime="20251020 07:51:40.751" endtime="20251020 07:51:41.475"/>
</kw>
<msg timestamp="20251020 07:51:41.475" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20251020 07:51:40.751" endtime="20251020 07:51:41.475"/>
</kw>
<msg timestamp="20251020 07:51:41.475" level="INFO">${value} = false</msg>
<status status="PASS" starttime="20251020 07:51:40.750" endtime="20251020 07:51:41.475"/>
</kw>
<if>
<branch type="IF" condition="'${value}' != 'true' and '${value}' != 'false'">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>false</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20251020 07:51:41.476" endtime="20251020 07:51:41.476"/>
</kw>
<status status="NOT RUN" starttime="20251020 07:51:41.475" endtime="20251020 07:51:41.476"/>
</branch>
<status status="PASS" starttime="20251020 07:51:41.475" endtime="20251020 07:51:41.476"/>
</if>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${SECURITY_ENABLED}</arg>
<arg>${value}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20251020 07:51:41.476" level="INFO">${SECURITY_ENABLED} = false</msg>
<status status="PASS" starttime="20251020 07:51:41.476" endtime="20251020 07:51:41.476"/>
</kw>
<status status="PASS" starttime="20251020 07:51:40.750" endtime="20251020 07:51:41.476"/>
</kw>
<test id="s1-s4-t1" name="Test create volume fails" line="27">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20251020 07:51:41.477" endtime="20251020 07:51:41.477"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20251020 07:51:41.477" level="INFO">${random} = 70823</msg>
<status status="PASS" starttime="20251020 07:51:41.477" endtime="20251020 07:51:41.477"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume_name}</arg>
<arg>${random}-volume-for-prepare</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20251020 07:51:41.478" level="INFO">${volume_name} = 70823-volume-for-prepare</msg>
<status status="PASS" starttime="20251020 07:51:41.478" endtime="20251020 07:51:41.478"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh volume create /${volume_name}</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20251020 07:51:41.481" level="INFO">Running command 'ozone sh volume create /70823-volume-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20251020 07:51:43.391" level="INFO">${rc} = 255</msg>
<msg timestamp="20251020 07:51:43.392" level="INFO">${output} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateVolume when OM is in prepare mode.</msg>
<status status="PASS" starttime="20251020 07:51:41.479" endtime="20251020 07:51:43.392"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20251020 07:51:43.392" level="INFO">NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateVolume when OM is in prepare mode.</msg>
<status status="PASS" starttime="20251020 07:51:43.392" endtime="20251020 07:51:43.392"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20251020 07:51:43.393" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20251020 07:51:43.392" endtime="20251020 07:51:43.393"/>
</kw>
<msg timestamp="20251020 07:51:43.393" level="INFO">${result} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateVolume when OM is in prepare mode.</msg>
<status status="PASS" starttime="20251020 07:51:41.478" endtime="20251020 07:51:43.393"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OM is in prepare mode</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20251020 07:51:43.393" endtime="20251020 07:51:43.393"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh volume info /${volume_name}</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20251020 07:51:43.396" level="INFO">Running command 'ozone sh volume info /70823-volume-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20251020 07:51:45.206" level="INFO">${rc} = 255</msg>
<msg timestamp="20251020 07:51:45.206" level="INFO">${output} = VOLUME_NOT_FOUND Volume 70823-volume-for-prepare is not found</msg>
<status status="PASS" starttime="20251020 07:51:43.394" endtime="20251020 07:51:45.206"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20251020 07:51:45.207" level="INFO">VOLUME_NOT_FOUND Volume 70823-volume-for-prepare is not found</msg>
<status status="PASS" starttime="20251020 07:51:45.206" endtime="20251020 07:51:45.207"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20251020 07:51:45.207" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20251020 07:51:45.207" endtime="20251020 07:51:45.207"/>
</kw>
<msg timestamp="20251020 07:51:45.207" level="INFO">${result} = VOLUME_NOT_FOUND Volume 70823-volume-for-prepare is not found</msg>
<status status="PASS" starttime="20251020 07:51:43.393" endtime="20251020 07:51:45.207"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20251020 07:51:45.208" endtime="20251020 07:51:45.208"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20251020 07:51:41.476" endtime="20251020 07:51:45.208"/>
</test>
<test id="s1-s4-t2" name="Test list volumes succeeds" line="35">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20251020 07:51:45.209" endtime="20251020 07:51:45.209"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20251020 07:51:45.212" level="INFO">Running command 'ozone sh volume list 2&gt;&amp;1'.</msg>
<msg timestamp="20251020 07:51:47.216" level="INFO">${rc} = 0</msg>
<msg timestamp="20251020 07:51:47.216" level="INFO">${output} = [ {
  "metadata" : { },
  "name" : "82084-volume-for-prepare",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "...</msg>
<status status="PASS" starttime="20251020 07:51:45.210" endtime="20251020 07:51:47.216"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20251020 07:51:47.217" level="INFO">[ {
  "metadata" : { },
  "name" : "82084-volume-for-prepare",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2025-10-20T07:50:23.970Z",
  "modificationTime" : "2025-10-20T07:50:23.970Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclSet" : [ "ALL" ],
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclSet" : [ "READ", "LIST" ],
    "aclList" : [ "READ", "LIST" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "s3v",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 0,
  "creationTime" : "2025-10-20T07:49:54.913Z",
  "modificationTime" : "2025-10-20T07:49:54.913Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclSet" : [ "ALL" ],
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclSet" : [ "ALL" ],
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "vol1",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2025-10-20T07:50:16.623Z",
  "modificationTime" : "2025-10-20T07:50:16.623Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclSet" : [ "ALL" ],
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclSet" : [ "READ", "LIST" ],
    "aclList" : [ "READ", "LIST" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "79780-volume-for-prepare",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2025-10-20T07:51:12.855Z",
  "modificationTime" : "2025-10-20T07:51:12.855Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclSet" : [ "ALL" ],
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclSet" : [ "READ", "LIST" ],
    "aclList" : [ "READ", "LIST" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "64628-volume-for-cancel",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2025-10-20T07:50:56.219Z",
  "modificationTime" : "2025-10-20T07:50:56.219Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclSet" : [ "ALL" ],
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclSet" : [ "READ", "LIST" ],
    "aclList" : [ "READ", "LIST" ]
  } ],
  "refCount" : 0
} ]</msg>
<status status="PASS" starttime="20251020 07:51:47.216" endtime="20251020 07:51:47.217"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20251020 07:51:47.217" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20251020 07:51:47.217" endtime="20251020 07:51:47.217"/>
</kw>
<status status="PASS" starttime="20251020 07:51:45.209" endtime="20251020 07:51:47.217"/>
</kw>
<msg timestamp="20251020 07:51:47.217" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20251020 07:51:45.209" endtime="20251020 07:51:47.217"/>
</kw>
<msg timestamp="20251020 07:51:47.218" level="INFO">${result} = [ {
  "metadata" : { },
  "name" : "82084-volume-for-prepare",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "...</msg>
<status status="PASS" starttime="20251020 07:51:45.209" endtime="20251020 07:51:47.218"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20251020 07:51:45.208" endtime="20251020 07:51:47.218"/>
</test>
<doc>Smoke test to test that OMs are prepared in an OM HA cluster.</doc>
<status status="PASS" starttime="20251020 07:51:40.720" endtime="20251020 07:51:47.218"/>
</suite>
<suite id="s1-s5" name="Om-Prepared" source="/opt/hadoop/smoketest/omha/om-prepared.robot">
<kw name="Get Security Enabled From Config" library="commonlib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' != ''</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20251020 07:52:34.650" endtime="20251020 07:52:34.650"/>
</kw>
<kw name="Execute" library="os">
<var>${value}</var>
<arg>ozone getconf confKey ozone.security.enabled</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20251020 07:52:34.652" level="INFO">Running command 'ozone getconf confKey ozone.security.enabled 2&gt;&amp;1'.</msg>
<msg timestamp="20251020 07:52:35.309" level="INFO">${rc} = 0</msg>
<msg timestamp="20251020 07:52:35.309" level="INFO">${output} = false</msg>
<status status="PASS" starttime="20251020 07:52:34.651" endtime="20251020 07:52:35.309"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20251020 07:52:35.310" level="INFO">false</msg>
<status status="PASS" starttime="20251020 07:52:35.310" endtime="20251020 07:52:35.310"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20251020 07:52:35.311" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20251020 07:52:35.310" endtime="20251020 07:52:35.311"/>
</kw>
<status status="PASS" starttime="20251020 07:52:34.650" endtime="20251020 07:52:35.311"/>
</kw>
<msg timestamp="20251020 07:52:35.311" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20251020 07:52:34.650" endtime="20251020 07:52:35.311"/>
</kw>
<msg timestamp="20251020 07:52:35.311" level="INFO">${value} = false</msg>
<status status="PASS" starttime="20251020 07:52:34.650" endtime="20251020 07:52:35.311"/>
</kw>
<if>
<branch type="IF" condition="'${value}' != 'true' and '${value}' != 'false'">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>false</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20251020 07:52:35.312" endtime="20251020 07:52:35.312"/>
</kw>
<status status="NOT RUN" starttime="20251020 07:52:35.312" endtime="20251020 07:52:35.312"/>
</branch>
<status status="PASS" starttime="20251020 07:52:35.311" endtime="20251020 07:52:35.312"/>
</if>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${SECURITY_ENABLED}</arg>
<arg>${value}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20251020 07:52:35.313" level="INFO">${SECURITY_ENABLED} = false</msg>
<status status="PASS" starttime="20251020 07:52:35.312" endtime="20251020 07:52:35.313"/>
</kw>
<status status="PASS" starttime="20251020 07:52:34.649" endtime="20251020 07:52:35.313"/>
</kw>
<test id="s1-s5-t1" name="Test create volume fails" line="27">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20251020 07:52:35.314" endtime="20251020 07:52:35.314"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20251020 07:52:35.315" level="INFO">${random} = 45418</msg>
<status status="PASS" starttime="20251020 07:52:35.314" endtime="20251020 07:52:35.315"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume_name}</arg>
<arg>${random}-volume-for-prepare</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20251020 07:52:35.316" level="INFO">${volume_name} = 45418-volume-for-prepare</msg>
<status status="PASS" starttime="20251020 07:52:35.315" endtime="20251020 07:52:35.316"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh volume create /${volume_name}</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20251020 07:52:35.319" level="INFO">Running command 'ozone sh volume create /45418-volume-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20251020 07:52:37.301" level="INFO">${rc} = 255</msg>
<msg timestamp="20251020 07:52:37.301" level="INFO">${output} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateVolume when OM is in prepare mode.</msg>
<status status="PASS" starttime="20251020 07:52:35.316" endtime="20251020 07:52:37.301"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20251020 07:52:37.302" level="INFO">NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateVolume when OM is in prepare mode.</msg>
<status status="PASS" starttime="20251020 07:52:37.301" endtime="20251020 07:52:37.302"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20251020 07:52:37.302" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20251020 07:52:37.302" endtime="20251020 07:52:37.302"/>
</kw>
<msg timestamp="20251020 07:52:37.302" level="INFO">${result} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateVolume when OM is in prepare mode.</msg>
<status status="PASS" starttime="20251020 07:52:35.316" endtime="20251020 07:52:37.302"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OM is in prepare mode</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20251020 07:52:37.303" endtime="20251020 07:52:37.303"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh volume info /${volume_name}</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20251020 07:52:37.305" level="INFO">Running command 'ozone sh volume info /45418-volume-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20251020 07:52:39.079" level="INFO">${rc} = 255</msg>
<msg timestamp="20251020 07:52:39.079" level="INFO">${output} = VOLUME_NOT_FOUND Volume 45418-volume-for-prepare is not found</msg>
<status status="PASS" starttime="20251020 07:52:37.303" endtime="20251020 07:52:39.080"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20251020 07:52:39.080" level="INFO">VOLUME_NOT_FOUND Volume 45418-volume-for-prepare is not found</msg>
<status status="PASS" starttime="20251020 07:52:39.080" endtime="20251020 07:52:39.080"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20251020 07:52:39.081" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20251020 07:52:39.080" endtime="20251020 07:52:39.081"/>
</kw>
<msg timestamp="20251020 07:52:39.081" level="INFO">${result} = VOLUME_NOT_FOUND Volume 45418-volume-for-prepare is not found</msg>
<status status="PASS" starttime="20251020 07:52:37.303" endtime="20251020 07:52:39.081"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20251020 07:52:39.081" endtime="20251020 07:52:39.081"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20251020 07:52:35.313" endtime="20251020 07:52:39.081"/>
</test>
<test id="s1-s5-t2" name="Test list volumes succeeds" line="35">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20251020 07:52:39.082" endtime="20251020 07:52:39.082"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20251020 07:52:39.085" level="INFO">Running command 'ozone sh volume list 2&gt;&amp;1'.</msg>
<msg timestamp="20251020 07:52:40.997" level="INFO">${rc} = 0</msg>
<msg timestamp="20251020 07:52:40.997" level="INFO">${output} = [ {
  "metadata" : { },
  "name" : "82084-volume-for-prepare",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "...</msg>
<status status="PASS" starttime="20251020 07:52:39.083" endtime="20251020 07:52:40.997"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20251020 07:52:40.998" level="INFO">[ {
  "metadata" : { },
  "name" : "82084-volume-for-prepare",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2025-10-20T07:50:23.970Z",
  "modificationTime" : "2025-10-20T07:50:23.970Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ],
    "aclSet" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "READ", "LIST" ],
    "aclSet" : [ "READ", "LIST" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "s3v",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 0,
  "creationTime" : "2025-10-20T07:49:56.190Z",
  "modificationTime" : "2025-10-20T07:49:56.190Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ],
    "aclSet" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ],
    "aclSet" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "vol1",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2025-10-20T07:50:16.623Z",
  "modificationTime" : "2025-10-20T07:50:16.623Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ],
    "aclSet" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "READ", "LIST" ],
    "aclSet" : [ "READ", "LIST" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "79780-volume-for-prepare",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2025-10-20T07:51:12.855Z",
  "modificationTime" : "2025-10-20T07:51:12.855Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ],
    "aclSet" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "READ", "LIST" ],
    "aclSet" : [ "READ", "LIST" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "64628-volume-for-cancel",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2025-10-20T07:50:56.219Z",
  "modificationTime" : "2025-10-20T07:50:56.219Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ],
    "aclSet" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "READ", "LIST" ],
    "aclSet" : [ "READ", "LIST" ]
  } ],
  "refCount" : 0
} ]</msg>
<status status="PASS" starttime="20251020 07:52:40.998" endtime="20251020 07:52:40.998"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20251020 07:52:40.998" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20251020 07:52:40.998" endtime="20251020 07:52:40.999"/>
</kw>
<status status="PASS" starttime="20251020 07:52:39.083" endtime="20251020 07:52:40.999"/>
</kw>
<msg timestamp="20251020 07:52:40.999" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20251020 07:52:39.083" endtime="20251020 07:52:40.999"/>
</kw>
<msg timestamp="20251020 07:52:40.999" level="INFO">${result} = [ {
  "metadata" : { },
  "name" : "82084-volume-for-prepare",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "...</msg>
<status status="PASS" starttime="20251020 07:52:39.083" endtime="20251020 07:52:40.999"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20251020 07:52:39.082" endtime="20251020 07:52:40.999"/>
</test>
<doc>Smoke test to test that OMs are prepared in an OM HA cluster.</doc>
<status status="PASS" starttime="20251020 07:52:34.621" endtime="20251020 07:52:41.000"/>
</suite>
<suite id="s1-s6" name="Loaddata" source="/opt/hadoop/smoketest/topology/loaddata.robot">
<test id="s1-s6-t1" name="Create a volume, bucket and key" line="27">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create topvol1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20251020 07:53:26.831" level="INFO">Running command 'ozone sh volume create topvol1 2&gt;&amp;1'.</msg>
<msg timestamp="20251020 07:53:28.737" level="INFO">${rc} = 0</msg>
<msg timestamp="20251020 07:53:28.737" level="INFO">${output} = </msg>
<status status="PASS" starttime="20251020 07:53:26.828" endtime="20251020 07:53:28.737"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20251020 07:53:28.737" level="INFO"/>
<status status="PASS" starttime="20251020 07:53:28.737" endtime="20251020 07:53:28.738"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20251020 07:53:28.738" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20251020 07:53:28.738" endtime="20251020 07:53:28.738"/>
</kw>
<status status="PASS" starttime="20251020 07:53:26.828" endtime="20251020 07:53:28.738"/>
</kw>
<msg timestamp="20251020 07:53:28.738" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20251020 07:53:26.828" endtime="20251020 07:53:28.738"/>
</kw>
<msg timestamp="20251020 07:53:28.738" level="INFO">${output} = </msg>
<status status="PASS" starttime="20251020 07:53:26.828" endtime="20251020 07:53:28.738"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20251020 07:53:28.738" endtime="20251020 07:53:28.739"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /topvol1/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20251020 07:53:28.742" level="INFO">Running command 'ozone sh bucket create /topvol1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20251020 07:53:30.546" level="INFO">${rc} = 0</msg>
<msg timestamp="20251020 07:53:30.547" level="INFO">${output} = </msg>
<status status="PASS" starttime="20251020 07:53:28.739" endtime="20251020 07:53:30.547"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20251020 07:53:30.548" level="INFO"/>
<status status="PASS" starttime="20251020 07:53:30.547" endtime="20251020 07:53:30.548"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20251020 07:53:30.548" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20251020 07:53:30.548" endtime="20251020 07:53:30.548"/>
</kw>
<status status="PASS" starttime="20251020 07:53:28.739" endtime="20251020 07:53:30.548"/>
</kw>
<msg timestamp="20251020 07:53:30.549" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20251020 07:53:28.739" endtime="20251020 07:53:30.549"/>
</kw>
<msg timestamp="20251020 07:53:30.549" level="INFO">${output} = </msg>
<status status="PASS" starttime="20251020 07:53:28.739" endtime="20251020 07:53:30.549"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20251020 07:53:30.549" endtime="20251020 07:53:30.549"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /topvol1/bucket1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20251020 07:53:30.554" level="INFO">Running command 'ozone sh key put /topvol1/bucket1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20251020 07:53:33.970" level="INFO">${rc} = 0</msg>
<msg timestamp="20251020 07:53:33.971" level="INFO">${output} = </msg>
<status status="PASS" starttime="20251020 07:53:30.551" endtime="20251020 07:53:33.971"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20251020 07:53:33.971" level="INFO"/>
<status status="PASS" starttime="20251020 07:53:33.971" endtime="20251020 07:53:33.971"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20251020 07:53:33.972" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20251020 07:53:33.971" endtime="20251020 07:53:33.972"/>
</kw>
<status status="PASS" starttime="20251020 07:53:30.550" endtime="20251020 07:53:33.972"/>
</kw>
<msg timestamp="20251020 07:53:33.972" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20251020 07:53:30.550" endtime="20251020 07:53:33.972"/>
</kw>
<msg timestamp="20251020 07:53:33.972" level="INFO">${output} = </msg>
<status status="PASS" starttime="20251020 07:53:30.549" endtime="20251020 07:53:33.972"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20251020 07:53:33.972" endtime="20251020 07:53:33.972"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20251020 07:53:26.827" endtime="20251020 07:53:33.972"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20251020 07:53:26.796" endtime="20251020 07:53:33.973"/>
</suite>
<suite id="s1-s7" name="Readdata" source="/opt/hadoop/smoketest/topology/readdata.robot">
<test id="s1-s7-t1" name="Read data from previously created key" line="27">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20251020 07:53:34.497" level="INFO">${random} = 95819</msg>
<status status="PASS" starttime="20251020 07:53:34.497" endtime="20251020 07:53:34.497"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /topvol1/bucket1/key1 /tmp/key1-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20251020 07:53:34.500" level="INFO">Running command 'ozone sh key get /topvol1/bucket1/key1 /tmp/key1-95819 2&gt;&amp;1'.</msg>
<msg timestamp="20251020 07:53:37.530" level="INFO">${rc} = 0</msg>
<msg timestamp="20251020 07:53:37.530" level="INFO">${output} = </msg>
<status status="PASS" starttime="20251020 07:53:34.498" endtime="20251020 07:53:37.530"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20251020 07:53:37.530" level="INFO"/>
<status status="PASS" starttime="20251020 07:53:37.530" endtime="20251020 07:53:37.531"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20251020 07:53:37.531" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20251020 07:53:37.531" endtime="20251020 07:53:37.531"/>
</kw>
<status status="PASS" starttime="20251020 07:53:34.498" endtime="20251020 07:53:37.531"/>
</kw>
<msg timestamp="20251020 07:53:37.531" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20251020 07:53:34.497" endtime="20251020 07:53:37.531"/>
</kw>
<msg timestamp="20251020 07:53:37.531" level="INFO">${output} = </msg>
<status status="PASS" starttime="20251020 07:53:34.497" endtime="20251020 07:53:37.531"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20251020 07:53:37.531" endtime="20251020 07:53:37.531"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20251020 07:53:34.496" endtime="20251020 07:53:37.532"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20251020 07:53:34.468" endtime="20251020 07:53:37.532"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="108443"/>
</suite>
<statistics>
<total>
<stat pass="14" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="14" fail="0" skip="0" id="s1" name="ozone-om-prepare">ozone-om-prepare</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1" name="Om-Prepare">ozone-om-prepare.Om-Prepare</stat>
<stat pass="2" fail="0" skip="0" id="s1-s2" name="Om-Cancel-Prepare">ozone-om-prepare.Om-Cancel-Prepare</stat>
<stat pass="3" fail="0" skip="0" id="s1-s3" name="Om-Prepare">ozone-om-prepare.Om-Prepare</stat>
<stat pass="2" fail="0" skip="0" id="s1-s4" name="Om-Prepared">ozone-om-prepare.Om-Prepared</stat>
<stat pass="2" fail="0" skip="0" id="s1-s5" name="Om-Prepared">ozone-om-prepare.Om-Prepared</stat>
<stat pass="1" fail="0" skip="0" id="s1-s6" name="Loaddata">ozone-om-prepare.Loaddata</stat>
<stat pass="1" fail="0" skip="0" id="s1-s7" name="Readdata">ozone-om-prepare.Readdata</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
