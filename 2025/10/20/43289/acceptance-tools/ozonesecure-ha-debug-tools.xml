<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.1.1 (Python 3.9.21 on linux)" generated="20251020 06:13:42.504" rpa="false" schemaversion="4">
<suite id="s1" name="ozonesecure-ha-debug-tools">
<suite id="s1-s1" name="Kinit" source="/opt/hadoop/smoketest/kinit.robot">
<test id="s1-s1-t1" name="Kinit" line="27">
<kw name="Kinit test user" library="commonlib">
<arg>${USER}</arg>
<arg>${USER}.keytab</arg>
<kw name="Get Security Enabled From Config" library="commonlib">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' != ''</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20251020 06:09:21.737" endtime="20251020 06:09:21.738"/>
</kw>
<kw name="Execute" library="os">
<var>${value}</var>
<arg>ozone getconf confKey ozone.security.enabled</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20251020 06:09:21.742" level="INFO">Running command 'ozone getconf confKey ozone.security.enabled 2&gt;&amp;1'.</msg>
<msg timestamp="20251020 06:09:22.750" level="INFO">${rc} = 0</msg>
<msg timestamp="20251020 06:09:22.750" level="INFO">${output} = true</msg>
<status status="PASS" starttime="20251020 06:09:21.739" endtime="20251020 06:09:22.750"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20251020 06:09:22.751" level="INFO">true</msg>
<status status="PASS" starttime="20251020 06:09:22.751" endtime="20251020 06:09:22.752"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20251020 06:09:22.752" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20251020 06:09:22.752" endtime="20251020 06:09:22.752"/>
</kw>
<status status="PASS" starttime="20251020 06:09:21.738" endtime="20251020 06:09:22.752"/>
</kw>
<msg timestamp="20251020 06:09:22.752" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20251020 06:09:21.738" endtime="20251020 06:09:22.752"/>
</kw>
<msg timestamp="20251020 06:09:22.753" level="INFO">${value} = true</msg>
<status status="PASS" starttime="20251020 06:09:21.738" endtime="20251020 06:09:22.753"/>
</kw>
<if>
<branch type="IF" condition="'${value}' != 'true' and '${value}' != 'false'">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>false</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20251020 06:09:22.753" endtime="20251020 06:09:22.753"/>
</kw>
<status status="NOT RUN" starttime="20251020 06:09:22.753" endtime="20251020 06:09:22.753"/>
</branch>
<status status="PASS" starttime="20251020 06:09:22.753" endtime="20251020 06:09:22.753"/>
</if>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${SECURITY_ENABLED}</arg>
<arg>${value}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20251020 06:09:22.754" level="INFO">${SECURITY_ENABLED} = true</msg>
<status status="PASS" starttime="20251020 06:09:22.753" endtime="20251020 06:09:22.754"/>
</kw>
<status status="PASS" starttime="20251020 06:09:21.737" endtime="20251020 06:09:22.754"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20251020 06:09:22.754" endtime="20251020 06:09:22.754"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20251020 06:09:22.758" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20251020 06:09:22.763" level="INFO">${rc} = 0</msg>
<msg timestamp="20251020 06:09:22.763" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20251020 06:09:22.755" endtime="20251020 06:09:22.763"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20251020 06:09:22.763" level="INFO">om</msg>
<status status="PASS" starttime="20251020 06:09:22.763" endtime="20251020 06:09:22.764"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20251020 06:09:22.764" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20251020 06:09:22.764" endtime="20251020 06:09:22.764"/>
</kw>
<status status="PASS" starttime="20251020 06:09:22.755" endtime="20251020 06:09:22.764"/>
</kw>
<msg timestamp="20251020 06:09:22.764" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20251020 06:09:22.755" endtime="20251020 06:09:22.764"/>
</kw>
<msg timestamp="20251020 06:09:22.764" level="INFO">${instance} = om</msg>
<status status="PASS" starttime="20251020 06:09:22.755" endtime="20251020 06:09:22.764"/>
</kw>
<msg timestamp="20251020 06:09:22.765" level="INFO">${TEST_USER} = testuser/om@EXAMPLE.COM</msg>
<status status="PASS" starttime="20251020 06:09:22.754" endtime="20251020 06:09:22.765"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20251020 06:09:22.765" level="INFO">${TEST_USER} = testuser/om@EXAMPLE.COM</msg>
<status status="PASS" starttime="20251020 06:09:22.765" endtime="20251020 06:09:22.765"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20251020 06:09:22.769" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/om@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20251020 06:09:22.811" level="INFO">${rc} = 0</msg>
<msg timestamp="20251020 06:09:22.811" level="INFO">${output} = </msg>
<status status="PASS" starttime="20251020 06:09:22.766" endtime="20251020 06:09:22.811"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20251020 06:09:22.812" level="INFO"/>
<status status="PASS" starttime="20251020 06:09:22.812" endtime="20251020 06:09:22.813"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20251020 06:09:22.813" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20251020 06:09:22.813" endtime="20251020 06:09:22.813"/>
</kw>
<status status="PASS" starttime="20251020 06:09:22.766" endtime="20251020 06:09:22.813"/>
</kw>
<msg timestamp="20251020 06:09:22.813" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20251020 06:09:22.766" endtime="20251020 06:09:22.813"/>
</kw>
<status status="PASS" starttime="20251020 06:09:22.765" endtime="20251020 06:09:22.814"/>
</kw>
<status status="PASS" starttime="20251020 06:09:22.765" endtime="20251020 06:09:22.814"/>
</kw>
<status status="PASS" starttime="20251020 06:09:21.737" endtime="20251020 06:09:22.814"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20251020 06:09:21.736" endtime="20251020 06:09:22.814"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" starttime="20251020 06:09:21.695" endtime="20251020 06:09:22.815"/>
</suite>
<suite id="s1-s2" name="Auditparser" source="/opt/hadoop/smoketest/debug/auditparser.robot">
<kw name="Get Security Enabled From Config" library="commonlib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' != ''</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20251020 06:09:23.619" endtime="20251020 06:09:23.619"/>
</kw>
<kw name="Execute" library="os">
<var>${value}</var>
<arg>ozone getconf confKey ozone.security.enabled</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20251020 06:09:23.622" level="INFO">Running command 'ozone getconf confKey ozone.security.enabled 2&gt;&amp;1'.</msg>
<msg timestamp="20251020 06:09:24.653" level="INFO">${rc} = 0</msg>
<msg timestamp="20251020 06:09:24.653" level="INFO">${output} = true</msg>
<status status="PASS" starttime="20251020 06:09:23.620" endtime="20251020 06:09:24.653"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20251020 06:09:24.653" level="INFO">true</msg>
<status status="PASS" starttime="20251020 06:09:24.653" endtime="20251020 06:09:24.654"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20251020 06:09:24.654" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20251020 06:09:24.654" endtime="20251020 06:09:24.654"/>
</kw>
<status status="PASS" starttime="20251020 06:09:23.619" endtime="20251020 06:09:24.654"/>
</kw>
<msg timestamp="20251020 06:09:24.654" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20251020 06:09:23.619" endtime="20251020 06:09:24.654"/>
</kw>
<msg timestamp="20251020 06:09:24.655" level="INFO">${value} = true</msg>
<status status="PASS" starttime="20251020 06:09:23.619" endtime="20251020 06:09:24.655"/>
</kw>
<if>
<branch type="IF" condition="'${value}' != 'true' and '${value}' != 'false'">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>false</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20251020 06:09:24.655" endtime="20251020 06:09:24.655"/>
</kw>
<status status="NOT RUN" starttime="20251020 06:09:24.655" endtime="20251020 06:09:24.655"/>
</branch>
<status status="PASS" starttime="20251020 06:09:24.655" endtime="20251020 06:09:24.655"/>
</if>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${SECURITY_ENABLED}</arg>
<arg>${value}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20251020 06:09:24.656" level="INFO">${SECURITY_ENABLED} = true</msg>
<status status="PASS" starttime="20251020 06:09:24.655" endtime="20251020 06:09:24.656"/>
</kw>
<status status="PASS" starttime="20251020 06:09:23.618" endtime="20251020 06:09:24.656"/>
</kw>
<test id="s1-s2-t1" name="Testing audit parser" line="41">
<kw name="Create data" type="SETUP">
<kw name="Freon OMBG" library="freon">
<arg>prefix=auditparser</arg>
<arg>n=${buckets}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ombg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20251020 06:09:24.663" level="INFO">Running command 'ozone freon ombg --om-service-id=omservice -t 1 -n5 -p auditparser  2&gt;&amp;1'.</msg>
<msg timestamp="20251020 06:09:29.784" level="INFO">${rc} = 0</msg>
<msg timestamp="20251020 06:09:29.784" level="INFO">${output} = 2025-10-20 06:09:26,600 [main] INFO freon.BaseFreonGenerator: Executing test with prefix auditparser and number-of-tests 5
2025-10-20 06:09:26,673 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (...</msg>
<status status="PASS" starttime="20251020 06:09:24.659" endtime="20251020 06:09:29.784"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20251020 06:09:29.785" level="INFO">2025-10-20 06:09:26,600 [main] INFO freon.BaseFreonGenerator: Executing test with prefix auditparser and number-of-tests 5
2025-10-20 06:09:26,673 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 5)
2025-10-20 06:09:27,674 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 5)
2025-10-20 06:09:28,675 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 5)
2025-10-20 06:09:28,821 [main] INFO rpc.RpcClient: Creating Volume: vol1, with testuser as owner and space quota set to -1 bytes, counts quota set to -1
2025-10-20 06:09:29,676 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (5 out of 5)
2025-10-20 06:09:29,697 [shutdown-hook-0] INFO metrics: type=TIMER, name=bucket-create, count=5, min=33.03797, max=81.174897, mean=50.982135, stddev=20.000488399189926, median=38.473577, p75=68.576421, p95=81.174897, p98=81.174897, p99=81.174897, p999=81.174897, mean_rate=6.926103746559601, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2025-10-20 06:09:29,700 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2025-10-20 06:09:29,700 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2025-10-20 06:09:29,700 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 5</msg>
<status status="PASS" starttime="20251020 06:09:29.785" endtime="20251020 06:09:29.785"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20251020 06:09:29.786" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20251020 06:09:29.785" endtime="20251020 06:09:29.786"/>
</kw>
<status status="PASS" starttime="20251020 06:09:24.658" endtime="20251020 06:09:29.786"/>
</kw>
<msg timestamp="20251020 06:09:29.786" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20251020 06:09:24.658" endtime="20251020 06:09:29.786"/>
</kw>
<msg timestamp="20251020 06:09:29.786" level="INFO">${result} = 2025-10-20 06:09:26,600 [main] INFO freon.BaseFreonGenerator: Executing test with prefix auditparser and number-of-tests 5
2025-10-20 06:09:26,673 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (...</msg>
<status status="PASS" starttime="20251020 06:09:24.658" endtime="20251020 06:09:29.786"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20251020 06:09:29.787" endtime="20251020 06:09:29.787"/>
</kw>
<status status="PASS" starttime="20251020 06:09:24.657" endtime="20251020 06:09:29.787"/>
</kw>
<kw name="Freon OCKG" library="freon">
<arg>prefix=auditparser</arg>
<arg>n=100</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20251020 06:09:29.792" level="INFO">Running command 'ozone freon ockg --om-service-id=omservice -t 1 -n100 -p auditparser  2&gt;&amp;1'.</msg>
<msg timestamp="20251020 06:09:45.299" level="INFO">${rc} = 0</msg>
<msg timestamp="20251020 06:09:45.299" level="INFO">${output} = 2025-10-20 06:09:31,783 [main] INFO freon.BaseFreonGenerator: Executing test with prefix auditparser and number-of-tests 100
2025-10-20 06:09:31,852 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 %...</msg>
<status status="PASS" starttime="20251020 06:09:29.789" endtime="20251020 06:09:45.299"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20251020 06:09:45.300" level="INFO">2025-10-20 06:09:31,783 [main] INFO freon.BaseFreonGenerator: Executing test with prefix auditparser and number-of-tests 100
2025-10-20 06:09:31,852 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2025-10-20 06:09:32,853 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2025-10-20 06:09:33,774 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with server-side default bucket layout, testuser as owner, Versioning false, Storage Type set to DISK and Encryption set to false, Replication Type set to server-side default replication type, Namespace Quota set to -1, Space Quota set to -1 
2025-10-20 06:09:33,854 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2025-10-20 06:09:34,198 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2025-10-20 06:09:34,287 [pool-2-thread-1] INFO netty.NettyConfigKeys$DataStream: setTlsConf GrpcTlsConfig0-
2025-10-20 06:09:34,854 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2025-10-20 06:09:35,855 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2025-10-20 06:09:36,322 [pool-2-thread-1] INFO netty.NettyConfigKeys$DataStream: setTlsConf GrpcTlsConfig1-
2025-10-20 06:09:36,856 [Thread-5] INFO freon.ProgressBar: Progress: 3.00 % (3 out of 100)
2025-10-20 06:09:37,857 [Thread-5] INFO freon.ProgressBar: Progress: 14.00 % (14 out of 100)
2025-10-20 06:09:38,858 [Thread-5] INFO freon.ProgressBar: Progress: 25.00 % (25 out of 100)
2025-10-20 06:09:39,859 [Thread-5] INFO freon.ProgressBar: Progress: 38.00 % (38 out of 100)
2025-10-20 06:09:40,859 [Thread-5] INFO freon.ProgressBar: Progress: 51.00 % (51 out of 100)
2025-10-20 06:09:41,860 [Thread-5] INFO freon.ProgressBar: Progress: 65.00 % (65 out of 100)
2025-10-20 06:09:42,861 [Thread-5] INFO freon.ProgressBar: Progress: 81.00 % (81 out of 100)
2025-10-20 06:09:43,861 [Thread-5] INFO freon.ProgressBar: Progress: 95.00 % (95 out of 100)
2025-10-20 06:09:44,862 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (100 out of 100)
2025-10-20 06:09:44,906 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=100, min=53.672911, max=2404.605816, mean=101.19214986592907, stddev=227.15189669653648, median=73.735106, p75=86.510966, p95=109.304163, p98=116.501631, p99=413.351015, p999=2404.605816, mean_rate=9.032201948436052, m1=5.71960026833609, m5=5.148756915605443, m15=5.04986136795593, rate_unit=events/second, duration_unit=milliseconds
2025-10-20 06:09:44,907 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 13
2025-10-20 06:09:44,907 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2025-10-20 06:09:44,907 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 100</msg>
<status status="PASS" starttime="20251020 06:09:45.300" endtime="20251020 06:09:45.300"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20251020 06:09:45.301" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20251020 06:09:45.301" endtime="20251020 06:09:45.301"/>
</kw>
<status status="PASS" starttime="20251020 06:09:29.789" endtime="20251020 06:09:45.301"/>
</kw>
<msg timestamp="20251020 06:09:45.301" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20251020 06:09:29.788" endtime="20251020 06:09:45.302"/>
</kw>
<msg timestamp="20251020 06:09:45.302" level="INFO">${result} = 2025-10-20 06:09:31,783 [main] INFO freon.BaseFreonGenerator: Executing test with prefix auditparser and number-of-tests 100
2025-10-20 06:09:31,852 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 %...</msg>
<status status="PASS" starttime="20251020 06:09:29.788" endtime="20251020 06:09:45.302"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20251020 06:09:45.302" endtime="20251020 06:09:45.302"/>
</kw>
<status status="PASS" starttime="20251020 06:09:29.787" endtime="20251020 06:09:45.302"/>
</kw>
<status status="PASS" starttime="20251020 06:09:24.657" endtime="20251020 06:09:45.302"/>
</kw>
<kw name="Get Environment Variable" library="OperatingSystem">
<var>${logdir}</var>
<arg>OZONE_LOG_DIR</arg>
<arg>/var/log/ozone</arg>
<doc>Returns the value of an environment variable with the given name.</doc>
<msg timestamp="20251020 06:09:45.303" level="INFO">${logdir} = /var/log/hadoop</msg>
<status status="PASS" starttime="20251020 06:09:45.303" endtime="20251020 06:09:45.303"/>
</kw>
<kw name="Execute" library="os">
<var>${logfile}</var>
<arg>ls -t "${logdir}" | grep om-audit | head -1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20251020 06:09:45.307" level="INFO">Running command 'ls -t "/var/log/hadoop" | grep om-audit | head -1 2&gt;&amp;1'.</msg>
<msg timestamp="20251020 06:09:45.312" level="INFO">${rc} = 0</msg>
<msg timestamp="20251020 06:09:45.312" level="INFO">${output} = om-audit-om1.log</msg>
<status status="PASS" starttime="20251020 06:09:45.304" endtime="20251020 06:09:45.312"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20251020 06:09:45.313" level="INFO">om-audit-om1.log</msg>
<status status="PASS" starttime="20251020 06:09:45.312" endtime="20251020 06:09:45.313"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20251020 06:09:45.313" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20251020 06:09:45.313" endtime="20251020 06:09:45.314"/>
</kw>
<status status="PASS" starttime="20251020 06:09:45.304" endtime="20251020 06:09:45.314"/>
</kw>
<msg timestamp="20251020 06:09:45.314" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20251020 06:09:45.304" endtime="20251020 06:09:45.314"/>
</kw>
<msg timestamp="20251020 06:09:45.314" level="INFO">${logfile} = om-audit-om1.log</msg>
<status status="PASS" starttime="20251020 06:09:45.303" endtime="20251020 06:09:45.314"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone debug auditparser "${auditworkdir}/audit.db" load "${logdir}/${logfile}"</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20251020 06:09:45.317" level="INFO">Running command 'ozone debug auditparser "/tmp/audit.db" load "/var/log/hadoop/om-audit-om1.log" 2&gt;&amp;1'.</msg>
<msg timestamp="20251020 06:09:47.541" level="INFO">${rc} = 0</msg>
<msg timestamp="20251020 06:09:47.541" level="INFO">${output} = /var/log/hadoop/om-audit-om1.log has been loaded successfully</msg>
<status status="PASS" starttime="20251020 06:09:45.315" endtime="20251020 06:09:47.541"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20251020 06:09:47.542" level="INFO">/var/log/hadoop/om-audit-om1.log has been loaded successfully</msg>
<status status="PASS" starttime="20251020 06:09:47.541" endtime="20251020 06:09:47.542"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20251020 06:09:47.542" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20251020 06:09:47.542" endtime="20251020 06:09:47.542"/>
</kw>
<status status="PASS" starttime="20251020 06:09:45.315" endtime="20251020 06:09:47.542"/>
</kw>
<msg timestamp="20251020 06:09:47.542" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20251020 06:09:45.315" endtime="20251020 06:09:47.542"/>
</kw>
<status status="PASS" starttime="20251020 06:09:45.314" endtime="20251020 06:09:47.543"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone debug auditparser "${auditworkdir}/audit.db" template top5cmds</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20251020 06:09:47.547" level="INFO">Running command 'ozone debug auditparser "/tmp/audit.db" template top5cmds 2&gt;&amp;1'.</msg>
<msg timestamp="20251020 06:09:49.461" level="INFO">${rc} = 0</msg>
<msg timestamp="20251020 06:09:49.461" level="INFO">${output} = READ_BUCKET	102	
ALLOCATE_KEY	100	
COMMIT_KEY	100	
CREATE_BUCKET	6	
GET_SERVICE_LIST	5	
</msg>
<status status="PASS" starttime="20251020 06:09:47.544" endtime="20251020 06:09:49.461"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20251020 06:09:49.462" level="INFO">READ_BUCKET	102	
ALLOCATE_KEY	100	
COMMIT_KEY	100	
CREATE_BUCKET	6	
GET_SERVICE_LIST	5	
</msg>
<status status="PASS" starttime="20251020 06:09:49.461" endtime="20251020 06:09:49.462"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20251020 06:09:49.462" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20251020 06:09:49.462" endtime="20251020 06:09:49.462"/>
</kw>
<status status="PASS" starttime="20251020 06:09:47.543" endtime="20251020 06:09:49.463"/>
</kw>
<msg timestamp="20251020 06:09:49.463" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20251020 06:09:47.543" endtime="20251020 06:09:49.463"/>
</kw>
<msg timestamp="20251020 06:09:49.463" level="INFO">${result} = READ_BUCKET	102	
ALLOCATE_KEY	100	
COMMIT_KEY	100	
CREATE_BUCKET	6	
GET_SERVICE_LIST	5	
</msg>
<status status="PASS" starttime="20251020 06:09:47.543" endtime="20251020 06:09:49.463"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ALLOCATE_KEY</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20251020 06:09:49.463" endtime="20251020 06:09:49.463"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone debug auditparser "${auditworkdir}/audit.db" template top5users</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20251020 06:09:49.467" level="INFO">Running command 'ozone debug auditparser "/tmp/audit.db" template top5users 2&gt;&amp;1'.</msg>
<msg timestamp="20251020 06:09:51.296" level="INFO">${rc} = 0</msg>
<msg timestamp="20251020 06:09:51.296" level="INFO">${output} = testuser/om@EXAMPLE.COM	315	
scm/scm@EXAMPLE.COM	2	
recon/recon@EXAMPLE.COM	1	
</msg>
<status status="PASS" starttime="20251020 06:09:49.464" endtime="20251020 06:09:51.296"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20251020 06:09:51.297" level="INFO">testuser/om@EXAMPLE.COM	315	
scm/scm@EXAMPLE.COM	2	
recon/recon@EXAMPLE.COM	1	
</msg>
<status status="PASS" starttime="20251020 06:09:51.296" endtime="20251020 06:09:51.297"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20251020 06:09:51.298" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20251020 06:09:51.297" endtime="20251020 06:09:51.298"/>
</kw>
<status status="PASS" starttime="20251020 06:09:49.464" endtime="20251020 06:09:51.298"/>
</kw>
<msg timestamp="20251020 06:09:51.298" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20251020 06:09:49.464" endtime="20251020 06:09:51.298"/>
</kw>
<msg timestamp="20251020 06:09:51.298" level="INFO">${result} = testuser/om@EXAMPLE.COM	315	
scm/scm@EXAMPLE.COM	2	
recon/recon@EXAMPLE.COM	1	
</msg>
<status status="PASS" starttime="20251020 06:09:49.463" endtime="20251020 06:09:51.298"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Set username</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set username">
<kw name="Get test user principal" library="commonlib">
<var>${principal}</var>
<arg>testuser</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20251020 06:09:51.303" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20251020 06:09:51.307" level="INFO">${rc} = 0</msg>
<msg timestamp="20251020 06:09:51.308" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20251020 06:09:51.300" endtime="20251020 06:09:51.308"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20251020 06:09:51.309" level="INFO">om</msg>
<status status="PASS" starttime="20251020 06:09:51.308" endtime="20251020 06:09:51.309"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20251020 06:09:51.309" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20251020 06:09:51.309" endtime="20251020 06:09:51.309"/>
</kw>
<status status="PASS" starttime="20251020 06:09:51.300" endtime="20251020 06:09:51.309"/>
</kw>
<msg timestamp="20251020 06:09:51.309" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20251020 06:09:51.300" endtime="20251020 06:09:51.309"/>
</kw>
<msg timestamp="20251020 06:09:51.310" level="INFO">${instance} = om</msg>
<status status="PASS" starttime="20251020 06:09:51.299" endtime="20251020 06:09:51.310"/>
</kw>
<msg timestamp="20251020 06:09:51.310" level="INFO">${principal} = testuser/om@EXAMPLE.COM</msg>
<status status="PASS" starttime="20251020 06:09:51.299" endtime="20251020 06:09:51.310"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${user}</arg>
<arg>${principal}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20251020 06:09:51.310" level="INFO">${user} = testuser/om@EXAMPLE.COM</msg>
<status status="PASS" starttime="20251020 06:09:51.310" endtime="20251020 06:09:51.310"/>
</kw>
<status status="PASS" starttime="20251020 06:09:51.299" endtime="20251020 06:09:51.311"/>
</kw>
<status status="PASS" starttime="20251020 06:09:51.298" endtime="20251020 06:09:51.311"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${user}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20251020 06:09:51.311" endtime="20251020 06:09:51.311"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone debug auditparser "${auditworkdir}/audit.db" query "select count(*) from audit where op='CREATE_VOLUME' and RESULT='SUCCESS'"</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20251020 06:09:51.314" level="INFO">Running command 'ozone debug auditparser "/tmp/audit.db" query "select count(*) from audit where op='CREATE_VOLUME' and RESULT='SUCCESS'" 2&gt;&amp;1'.</msg>
<msg timestamp="20251020 06:09:53.271" level="INFO">${rc} = 0</msg>
<msg timestamp="20251020 06:09:53.271" level="INFO">${output} = 1	
</msg>
<status status="PASS" starttime="20251020 06:09:51.312" endtime="20251020 06:09:53.272"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20251020 06:09:53.273" level="INFO">1	
</msg>
<status status="PASS" starttime="20251020 06:09:53.272" endtime="20251020 06:09:53.273"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20251020 06:09:53.273" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20251020 06:09:53.273" endtime="20251020 06:09:53.273"/>
</kw>
<status status="PASS" starttime="20251020 06:09:51.312" endtime="20251020 06:09:53.273"/>
</kw>
<msg timestamp="20251020 06:09:53.273" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20251020 06:09:51.312" endtime="20251020 06:09:53.273"/>
</kw>
<msg timestamp="20251020 06:09:53.274" level="INFO">${result} = 1	
</msg>
<status status="PASS" starttime="20251020 06:09:51.311" endtime="20251020 06:09:53.274"/>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<var>${result}</var>
<arg>${result}</arg>
<doc>Converts the given item to a floating point number.</doc>
<msg timestamp="20251020 06:09:53.274" level="INFO">${result} = 1.0</msg>
<status status="PASS" starttime="20251020 06:09:53.274" endtime="20251020 06:09:53.274"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${result}&gt;=1</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20251020 06:09:53.274" endtime="20251020 06:09:53.275"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone debug auditparser "${auditworkdir}/audit.db" query "select count(*) from audit where op='CREATE_BUCKET' and RESULT='SUCCESS'"</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20251020 06:09:53.279" level="INFO">Running command 'ozone debug auditparser "/tmp/audit.db" query "select count(*) from audit where op='CREATE_BUCKET' and RESULT='SUCCESS'" 2&gt;&amp;1'.</msg>
<msg timestamp="20251020 06:09:54.948" level="INFO">${rc} = 0</msg>
<msg timestamp="20251020 06:09:54.948" level="INFO">${output} = 6	
</msg>
<status status="PASS" starttime="20251020 06:09:53.276" endtime="20251020 06:09:54.948"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20251020 06:09:54.949" level="INFO">6	
</msg>
<status status="PASS" starttime="20251020 06:09:54.949" endtime="20251020 06:09:54.950"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20251020 06:09:54.950" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20251020 06:09:54.950" endtime="20251020 06:09:54.950"/>
</kw>
<status status="PASS" starttime="20251020 06:09:53.276" endtime="20251020 06:09:54.950"/>
</kw>
<msg timestamp="20251020 06:09:54.950" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20251020 06:09:53.275" endtime="20251020 06:09:54.950"/>
</kw>
<msg timestamp="20251020 06:09:54.951" level="INFO">${result} = 6	
</msg>
<status status="PASS" starttime="20251020 06:09:53.275" endtime="20251020 06:09:54.951"/>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<var>${result}</var>
<arg>${result}</arg>
<doc>Converts the given item to a floating point number.</doc>
<msg timestamp="20251020 06:09:54.951" level="INFO">${result} = 6.0</msg>
<status status="PASS" starttime="20251020 06:09:54.951" endtime="20251020 06:09:54.951"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${result}&gt;=${buckets}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20251020 06:09:54.951" endtime="20251020 06:09:54.952"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20251020 06:09:24.656" endtime="20251020 06:09:54.952"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20251020 06:09:23.573" endtime="20251020 06:09:54.953"/>
</suite>
<suite id="s1-s3" name="Kinit" source="/opt/hadoop/smoketest/kinit.robot">
<test id="s1-s3-t1" name="Kinit" line="27">
<kw name="Kinit test user" library="commonlib">
<arg>${USER}</arg>
<arg>${USER}.keytab</arg>
<kw name="Get Security Enabled From Config" library="commonlib">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' != ''</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20251020 06:09:55.741" endtime="20251020 06:09:55.741"/>
</kw>
<kw name="Execute" library="os">
<var>${value}</var>
<arg>ozone getconf confKey ozone.security.enabled</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20251020 06:09:55.746" level="INFO">Running command 'ozone getconf confKey ozone.security.enabled 2&gt;&amp;1'.</msg>
<msg timestamp="20251020 06:09:56.810" level="INFO">${rc} = 0</msg>
<msg timestamp="20251020 06:09:56.810" level="INFO">${output} = true</msg>
<status status="PASS" starttime="20251020 06:09:55.743" endtime="20251020 06:09:56.810"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20251020 06:09:56.811" level="INFO">true</msg>
<status status="PASS" starttime="20251020 06:09:56.810" endtime="20251020 06:09:56.811"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20251020 06:09:56.812" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20251020 06:09:56.811" endtime="20251020 06:09:56.812"/>
</kw>
<status status="PASS" starttime="20251020 06:09:55.742" endtime="20251020 06:09:56.812"/>
</kw>
<msg timestamp="20251020 06:09:56.812" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20251020 06:09:55.742" endtime="20251020 06:09:56.812"/>
</kw>
<msg timestamp="20251020 06:09:56.812" level="INFO">${value} = true</msg>
<status status="PASS" starttime="20251020 06:09:55.742" endtime="20251020 06:09:56.812"/>
</kw>
<if>
<branch type="IF" condition="'${value}' != 'true' and '${value}' != 'false'">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>false</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20251020 06:09:56.813" endtime="20251020 06:09:56.813"/>
</kw>
<status status="NOT RUN" starttime="20251020 06:09:56.812" endtime="20251020 06:09:56.813"/>
</branch>
<status status="PASS" starttime="20251020 06:09:56.812" endtime="20251020 06:09:56.813"/>
</if>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${SECURITY_ENABLED}</arg>
<arg>${value}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20251020 06:09:56.813" level="INFO">${SECURITY_ENABLED} = true</msg>
<status status="PASS" starttime="20251020 06:09:56.813" endtime="20251020 06:09:56.813"/>
</kw>
<status status="PASS" starttime="20251020 06:09:55.741" endtime="20251020 06:09:56.813"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20251020 06:09:56.813" endtime="20251020 06:09:56.814"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20251020 06:09:56.818" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20251020 06:09:56.822" level="INFO">${rc} = 0</msg>
<msg timestamp="20251020 06:09:56.822" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20251020 06:09:56.815" endtime="20251020 06:09:56.822"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20251020 06:09:56.823" level="INFO">scm</msg>
<status status="PASS" starttime="20251020 06:09:56.823" endtime="20251020 06:09:56.823"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20251020 06:09:56.823" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20251020 06:09:56.823" endtime="20251020 06:09:56.824"/>
</kw>
<status status="PASS" starttime="20251020 06:09:56.815" endtime="20251020 06:09:56.824"/>
</kw>
<msg timestamp="20251020 06:09:56.824" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20251020 06:09:56.814" endtime="20251020 06:09:56.824"/>
</kw>
<msg timestamp="20251020 06:09:56.824" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20251020 06:09:56.814" endtime="20251020 06:09:56.824"/>
</kw>
<msg timestamp="20251020 06:09:56.824" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20251020 06:09:56.814" endtime="20251020 06:09:56.824"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20251020 06:09:56.825" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20251020 06:09:56.824" endtime="20251020 06:09:56.825"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20251020 06:09:56.828" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20251020 06:09:56.846" level="INFO">${rc} = 0</msg>
<msg timestamp="20251020 06:09:56.846" level="INFO">${output} = </msg>
<status status="PASS" starttime="20251020 06:09:56.826" endtime="20251020 06:09:56.846"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20251020 06:09:56.847" level="INFO"/>
<status status="PASS" starttime="20251020 06:09:56.846" endtime="20251020 06:09:56.847"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20251020 06:09:56.847" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20251020 06:09:56.847" endtime="20251020 06:09:56.847"/>
</kw>
<status status="PASS" starttime="20251020 06:09:56.826" endtime="20251020 06:09:56.847"/>
</kw>
<msg timestamp="20251020 06:09:56.848" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20251020 06:09:56.825" endtime="20251020 06:09:56.848"/>
</kw>
<status status="PASS" starttime="20251020 06:09:56.825" endtime="20251020 06:09:56.848"/>
</kw>
<status status="PASS" starttime="20251020 06:09:56.825" endtime="20251020 06:09:56.848"/>
</kw>
<status status="PASS" starttime="20251020 06:09:55.740" endtime="20251020 06:09:56.848"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20251020 06:09:55.740" endtime="20251020 06:09:56.848"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" starttime="20251020 06:09:55.698" endtime="20251020 06:09:56.849"/>
</suite>
<suite id="s1-s4" name="Ozone-Debug-Tests" source="/opt/hadoop/smoketest/debug/ozone-debug-tests.robot">
<kw name="Write keys" type="SETUP">
<kw name="Execute" library="os">
<arg>ozone sh volume create o3://${OM_SERVICE_ID}/${VOLUME} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20251020 06:09:57.797" level="INFO">Running command 'ozone sh volume create o3://omservice/cli-debug-volume8607 --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20251020 06:10:01.309" level="INFO">${rc} = 0</msg>
<msg timestamp="20251020 06:10:01.309" level="INFO">${output} = </msg>
<status status="PASS" starttime="20251020 06:09:57.794" endtime="20251020 06:10:01.309"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20251020 06:10:01.310" level="INFO"/>
<status status="PASS" starttime="20251020 06:10:01.310" endtime="20251020 06:10:01.310"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20251020 06:10:01.311" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20251020 06:10:01.310" endtime="20251020 06:10:01.311"/>
</kw>
<status status="PASS" starttime="20251020 06:09:57.793" endtime="20251020 06:10:01.311"/>
</kw>
<msg timestamp="20251020 06:10:01.311" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20251020 06:09:57.793" endtime="20251020 06:10:01.311"/>
</kw>
<status status="PASS" starttime="20251020 06:09:57.793" endtime="20251020 06:10:01.311"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${BASE_PATH} --space-quota 1TB</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20251020 06:10:01.315" level="INFO">Running command 'ozone sh bucket create o3://omservice/cli-debug-volume8607/cli-debug-bucket --space-quota 1TB 2&gt;&amp;1'.</msg>
<msg timestamp="20251020 06:10:04.925" level="INFO">${rc} = 0</msg>
<msg timestamp="20251020 06:10:04.925" level="INFO">${output} = </msg>
<status status="PASS" starttime="20251020 06:10:01.312" endtime="20251020 06:10:04.925"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20251020 06:10:04.926" level="INFO"/>
<status status="PASS" starttime="20251020 06:10:04.925" endtime="20251020 06:10:04.926"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20251020 06:10:04.926" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20251020 06:10:04.926" endtime="20251020 06:10:04.926"/>
</kw>
<status status="PASS" starttime="20251020 06:10:01.312" endtime="20251020 06:10:04.926"/>
</kw>
<msg timestamp="20251020 06:10:04.926" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20251020 06:10:01.312" endtime="20251020 06:10:04.927"/>
</kw>
<status status="PASS" starttime="20251020 06:10:01.311" endtime="20251020 06:10:04.927"/>
</kw>
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=${TEMP_DIR}/${TESTFILE} bs=100000 count=15</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20251020 06:10:04.931" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/testfile bs=100000 count=15 2&gt;&amp;1'.</msg>
<msg timestamp="20251020 06:10:04.941" level="INFO">${rc} = 0</msg>
<msg timestamp="20251020 06:10:04.941" level="INFO">${output} = 15+0 records in
15+0 records out
1500000 bytes (1.5 MB, 1.4 MiB) copied, 0.00570786 s, 263 MB/s</msg>
<status status="PASS" starttime="20251020 06:10:04.928" endtime="20251020 06:10:04.941"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20251020 06:10:04.941" level="INFO">15+0 records in
15+0 records out
1500000 bytes (1.5 MB, 1.4 MiB) copied, 0.00570786 s, 263 MB/s</msg>
<status status="PASS" starttime="20251020 06:10:04.941" endtime="20251020 06:10:04.941"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20251020 06:10:04.942" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20251020 06:10:04.942" endtime="20251020 06:10:04.942"/>
</kw>
<status status="PASS" starttime="20251020 06:10:04.927" endtime="20251020 06:10:04.942"/>
</kw>
<msg timestamp="20251020 06:10:04.942" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20251020 06:10:04.927" endtime="20251020 06:10:04.942"/>
</kw>
<status status="PASS" starttime="20251020 06:10:04.927" endtime="20251020 06:10:04.942"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${BASE_PATH}/${TESTFILE} ${TEMP_DIR}/${TESTFILE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20251020 06:10:04.946" level="INFO">Running command 'ozone sh key put o3://omservice/cli-debug-volume8607/cli-debug-bucket/testfile /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20251020 06:10:10.731" level="INFO">${rc} = 0</msg>
<msg timestamp="20251020 06:10:10.731" level="INFO">${output} = </msg>
<status status="PASS" starttime="20251020 06:10:04.943" endtime="20251020 06:10:10.731"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20251020 06:10:10.732" level="INFO"/>
<status status="PASS" starttime="20251020 06:10:10.732" endtime="20251020 06:10:10.732"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20251020 06:10:10.733" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20251020 06:10:10.732" endtime="20251020 06:10:10.733"/>
</kw>
<status status="PASS" starttime="20251020 06:10:04.943" endtime="20251020 06:10:10.733"/>
</kw>
<msg timestamp="20251020 06:10:10.733" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20251020 06:10:04.943" endtime="20251020 06:10:10.733"/>
</kw>
<status status="PASS" starttime="20251020 06:10:04.942" endtime="20251020 06:10:10.733"/>
</kw>
<kw name="Create Key" library="shell">
<arg>${BASE_PATH}/${RATIS_ONE_KEY}</arg>
<arg>${TEMP_DIR}/${TESTFILE}</arg>
<arg>--type RATIS --replication ONE</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put ${args} ${key} ${file}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20251020 06:10:10.738" level="INFO">Running command 'ozone sh key put --type RATIS --replication ONE o3://omservice/cli-debug-volume8607/cli-debug-bucket/ratis-one-key /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20251020 06:10:17.328" level="INFO">${rc} = 0</msg>
<msg timestamp="20251020 06:10:17.329" level="INFO">${output} = </msg>
<status status="PASS" starttime="20251020 06:10:10.735" endtime="20251020 06:10:17.329"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20251020 06:10:17.329" level="INFO"/>
<status status="PASS" starttime="20251020 06:10:17.329" endtime="20251020 06:10:17.330"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20251020 06:10:17.330" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20251020 06:10:17.330" endtime="20251020 06:10:17.330"/>
</kw>
<status status="PASS" starttime="20251020 06:10:10.735" endtime="20251020 06:10:17.330"/>
</kw>
<msg timestamp="20251020 06:10:17.330" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20251020 06:10:10.734" endtime="20251020 06:10:17.330"/>
</kw>
<msg timestamp="20251020 06:10:17.330" level="INFO">${output} = </msg>
<status status="PASS" starttime="20251020 06:10:10.734" endtime="20251020 06:10:17.330"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20251020 06:10:17.331" endtime="20251020 06:10:17.331"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Uploaded ${file} to ${key}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20251020 06:10:17.331" level="INFO">Uploaded /tmp/testfile to o3://omservice/cli-debug-volume8607/cli-debug-bucket/ratis-one-key</msg>
<status status="PASS" starttime="20251020 06:10:17.331" endtime="20251020 06:10:17.331"/>
</kw>
<status status="PASS" starttime="20251020 06:10:10.733" endtime="20251020 06:10:17.331"/>
</kw>
<kw name="Create Key" library="shell">
<arg>${BASE_PATH}/${RATIS_THREE_KEY}</arg>
<arg>${TEMP_DIR}/${TESTFILE}</arg>
<arg>--type RATIS --replication THREE</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put ${args} ${key} ${file}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20251020 06:10:17.336" level="INFO">Running command 'ozone sh key put --type RATIS --replication THREE o3://omservice/cli-debug-volume8607/cli-debug-bucket/ratis-three-key /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20251020 06:10:23.267" level="INFO">${rc} = 0</msg>
<msg timestamp="20251020 06:10:23.267" level="INFO">${output} = </msg>
<status status="PASS" starttime="20251020 06:10:17.333" endtime="20251020 06:10:23.267"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20251020 06:10:23.268" level="INFO"/>
<status status="PASS" starttime="20251020 06:10:23.267" endtime="20251020 06:10:23.268"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20251020 06:10:23.268" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20251020 06:10:23.268" endtime="20251020 06:10:23.268"/>
</kw>
<status status="PASS" starttime="20251020 06:10:17.332" endtime="20251020 06:10:23.268"/>
</kw>
<msg timestamp="20251020 06:10:23.268" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20251020 06:10:17.332" endtime="20251020 06:10:23.268"/>
</kw>
<msg timestamp="20251020 06:10:23.269" level="INFO">${output} = </msg>
<status status="PASS" starttime="20251020 06:10:17.332" endtime="20251020 06:10:23.269"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20251020 06:10:23.269" endtime="20251020 06:10:23.269"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Uploaded ${file} to ${key}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20251020 06:10:23.269" level="INFO">Uploaded /tmp/testfile to o3://omservice/cli-debug-volume8607/cli-debug-bucket/ratis-three-key</msg>
<status status="PASS" starttime="20251020 06:10:23.269" endtime="20251020 06:10:23.269"/>
</kw>
<status status="PASS" starttime="20251020 06:10:17.331" endtime="20251020 06:10:23.269"/>
</kw>
<kw name="Create Key" library="shell">
<arg>${BASE_PATH}/${EC_KEY}</arg>
<arg>${TEMP_DIR}/${TESTFILE}</arg>
<arg>--type EC --replication rs-3-2-1024k</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put ${args} ${key} ${file}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20251020 06:10:23.274" level="INFO">Running command 'ozone sh key put --type EC --replication rs-3-2-1024k o3://omservice/cli-debug-volume8607/cli-debug-bucket/ec-key /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20251020 06:10:29.636" level="INFO">${rc} = 0</msg>
<msg timestamp="20251020 06:10:29.636" level="INFO">${output} = </msg>
<status status="PASS" starttime="20251020 06:10:23.271" endtime="20251020 06:10:29.636"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20251020 06:10:29.637" level="INFO"/>
<status status="PASS" starttime="20251020 06:10:29.637" endtime="20251020 06:10:29.637"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20251020 06:10:29.638" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20251020 06:10:29.637" endtime="20251020 06:10:29.638"/>
</kw>
<status status="PASS" starttime="20251020 06:10:23.271" endtime="20251020 06:10:29.638"/>
</kw>
<msg timestamp="20251020 06:10:29.638" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20251020 06:10:23.270" endtime="20251020 06:10:29.638"/>
</kw>
<msg timestamp="20251020 06:10:29.638" level="INFO">${output} = </msg>
<status status="PASS" starttime="20251020 06:10:23.270" endtime="20251020 06:10:29.638"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20251020 06:10:29.638" endtime="20251020 06:10:29.639"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Uploaded ${file} to ${key}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20251020 06:10:29.639" level="INFO">Uploaded /tmp/testfile to o3://omservice/cli-debug-volume8607/cli-debug-bucket/ec-key</msg>
<status status="PASS" starttime="20251020 06:10:29.639" endtime="20251020 06:10:29.639"/>
</kw>
<status status="PASS" starttime="20251020 06:10:23.270" endtime="20251020 06:10:29.639"/>
</kw>
<status status="PASS" starttime="20251020 06:09:57.792" endtime="20251020 06:10:29.639"/>
</kw>
<test id="s1-s4-t1" name="Test ozone debug replicas verify checksums, block-existence and container-state" line="62">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone debug replicas verify --checksums --block-existence --container-state ${BASE_PATH}/${TESTFILE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20251020 06:10:29.644" level="INFO">Running command 'ozone debug replicas verify --checksums --block-existence --container-state o3://omservice/cli-debug-volume8607/cli-debug-bucket/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20251020 06:10:38.001" level="INFO">${rc} = 0</msg>
<msg timestamp="20251020 06:10:38.001" level="INFO">${output} = {
  "keys" : [ ],
  "pass" : true
}

***************************************************
REPLICA VERIFICATION SUMMARY
***************************************************
Status: Success
Verification S...</msg>
<status status="PASS" starttime="20251020 06:10:29.641" endtime="20251020 06:10:38.001"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20251020 06:10:38.002" level="INFO">{
  "keys" : [ ],
  "pass" : true
}

***************************************************
REPLICA VERIFICATION SUMMARY
***************************************************
Status: Success
Verification Scope: Key
Verification Types: checksum, blockExistence, containerState
URI: o3://omservice/cli-debug-volume8607/cli-debug-bucket/testfile

Number of Volumes processed: 0
Number of Buckets processed: 0
Number of Keys processed: 1

Keys passed verification: 1
Keys failed verification: 0

Total Execution time: 00:00:04,303
***************************************************</msg>
<status status="PASS" starttime="20251020 06:10:38.002" endtime="20251020 06:10:38.002"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20251020 06:10:38.003" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20251020 06:10:38.002" endtime="20251020 06:10:38.003"/>
</kw>
<status status="PASS" starttime="20251020 06:10:29.641" endtime="20251020 06:10:38.003"/>
</kw>
<msg timestamp="20251020 06:10:38.003" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20251020 06:10:29.640" endtime="20251020 06:10:38.003"/>
</kw>
<msg timestamp="20251020 06:10:38.003" level="INFO">${output} = {
  "keys" : [ ],
  "pass" : true
}

***************************************************
REPLICA VERIFICATION SUMMARY
***************************************************
Status: Success
Verification S...</msg>
<status status="PASS" starttime="20251020 06:10:29.640" endtime="20251020 06:10:38.003"/>
</kw>
<kw name="Parse replicas verify JSON output" library="ozone-debug-keywords">
<var>${json}</var>
<arg>${output}</arg>
<kw name="Evaluate" library="BuiltIn">
<var>${json_split}</var>
<arg>'''${output}'''.split('***')[0].strip()</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20251020 06:10:38.004" level="INFO">${json_split} = {
  "keys" : [ ],
  "pass" : true
}</msg>
<status status="PASS" starttime="20251020 06:10:38.004" endtime="20251020 06:10:38.004"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${json}</var>
<arg>json.loads('''${json_split}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20251020 06:10:38.005" level="INFO">${json} = {'keys': [], 'pass': True}</msg>
<status status="PASS" starttime="20251020 06:10:38.005" endtime="20251020 06:10:38.005"/>
</kw>
<msg timestamp="20251020 06:10:38.005" level="INFO">${json} = {'keys': [], 'pass': True}</msg>
<status status="PASS" starttime="20251020 06:10:38.003" endtime="20251020 06:10:38.005"/>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${json}[keys]</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20251020 06:10:38.006" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20251020 06:10:38.005" endtime="20251020 06:10:38.006"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${json}[pass]</arg>
<arg>${True}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20251020 06:10:38.006" endtime="20251020 06:10:38.006"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20251020 06:10:29.639" endtime="20251020 06:10:38.006"/>
</test>
<test id="s1-s4-t2" name="Test ozone debug replicas verify with RATIS ONE filter" line="70">
<kw name="Execute and validate replicas verify with filter">
<var>${key_names}</var>
<arg>RATIS</arg>
<arg>ONE</arg>
<arg>checksums</arg>
<arg>1</arg>
<kw name="Execute replicas verify with replication filter" library="ozone-debug-keywords">
<var>${output}</var>
<arg>${replication_type}</arg>
<arg>${replication_factor}</arg>
<arg>${verification_type}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone debug replicas verify --${verification_type} --type ${replication_type} --replication ${replication_factor} o3://${OM_SERVICE_ID}/${VOLUME}/${BUCKET} --all-results</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20251020 06:10:38.013" level="INFO">Running command 'ozone debug replicas verify --checksums --type RATIS --replication ONE o3://omservice/cli-debug-volume8607/cli-debug-bucket --all-results 2&gt;&amp;1'.</msg>
<msg timestamp="20251020 06:10:45.270" level="INFO">${rc} = 0</msg>
<msg timestamp="20251020 06:10:45.270" level="INFO">${output} = {
  "keys" : [ {
    "volumeName" : "cli-debug-volume8607",
    "bucketName" : "cli-debug-bucket",
    "name" : "ratis-one-key",
    "blocks" : [ {
      "containerID" : 3,
      "blockID" : 115816896...</msg>
<status status="PASS" starttime="20251020 06:10:38.009" endtime="20251020 06:10:45.270"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20251020 06:10:45.271" level="INFO">{
  "keys" : [ {
    "volumeName" : "cli-debug-volume8607",
    "bucketName" : "cli-debug-bucket",
    "name" : "ratis-one-key",
    "blocks" : [ {
      "containerID" : 3,
      "blockID" : 115816896921600102,
      "replicas" : [ {
        "datanode" : {
          "uuid" : "0e626d12-3c80-4488-ac05-40cd1e7a189b",
          "hostname" : "ozonesecure-ha-datanode4-1.ozonesecure-ha_ozone_net"
        },
        "checks" : [ {
          "type" : "checksum",
          "completed" : true,
          "pass" : true,
          "failures" : [ ]
        } ],
        "replicaIndex" : 0
      } ]
    } ],
    "pass" : true
  } ],
  "pass" : true
}

***************************************************
REPLICA VERIFICATION SUMMARY
***************************************************
Status: Success
Verification Scope: Bucket
Verification Types: checksum
URI: o3://omservice/cli-debug-volume8607/cli-debug-bucket

Number of Volumes processed: 0
Number of Buckets processed: 1
Number of Keys processed: 4

Keys passed verification: 1
Keys failed verification: 0

Total Execution time: 00:00:02,954
***************************************************</msg>
<status status="PASS" starttime="20251020 06:10:45.270" endtime="20251020 06:10:45.271"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20251020 06:10:45.271" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20251020 06:10:45.271" endtime="20251020 06:10:45.272"/>
</kw>
<status status="PASS" starttime="20251020 06:10:38.009" endtime="20251020 06:10:45.272"/>
</kw>
<msg timestamp="20251020 06:10:45.272" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20251020 06:10:38.009" endtime="20251020 06:10:45.272"/>
</kw>
<msg timestamp="20251020 06:10:45.272" level="INFO">${output} = {
  "keys" : [ {
    "volumeName" : "cli-debug-volume8607",
    "bucketName" : "cli-debug-bucket",
    "name" : "ratis-one-key",
    "blocks" : [ {
      "containerID" : 3,
      "blockID" : 115816896...</msg>
<status status="PASS" starttime="20251020 06:10:38.008" endtime="20251020 06:10:45.272"/>
</kw>
<msg timestamp="20251020 06:10:45.272" level="INFO">${output} = {
  "keys" : [ {
    "volumeName" : "cli-debug-volume8607",
    "bucketName" : "cli-debug-bucket",
    "name" : "ratis-one-key",
    "blocks" : [ {
      "containerID" : 3,
      "blockID" : 115816896...</msg>
<status status="PASS" starttime="20251020 06:10:38.008" endtime="20251020 06:10:45.272"/>
</kw>
<kw name="Parse replicas verify JSON output" library="ozone-debug-keywords">
<var>${json}</var>
<arg>${output}</arg>
<kw name="Evaluate" library="BuiltIn">
<var>${json_split}</var>
<arg>'''${output}'''.split('***')[0].strip()</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20251020 06:10:45.273" level="INFO">${json_split} = {
  "keys" : [ {
    "volumeName" : "cli-debug-volume8607",
    "bucketName" : "cli-debug-bucket",
    "name" : "ratis-one-key",
    "blocks" : [ {
      "containerID" : 3,
      "blockID" : 115816896...</msg>
<status status="PASS" starttime="20251020 06:10:45.273" endtime="20251020 06:10:45.273"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${json}</var>
<arg>json.loads('''${json_split}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20251020 06:10:45.274" level="INFO">${json} = {'keys': [{'volumeName': 'cli-debug-volume8607', 'bucketName': 'cli-debug-bucket', 'name': 'ratis-one-key', 'blocks': [{'containerID': 3, 'blockID': 115816896921600102, 'replicas': [{'datanode': {'uui...</msg>
<status status="PASS" starttime="20251020 06:10:45.273" endtime="20251020 06:10:45.274"/>
</kw>
<msg timestamp="20251020 06:10:45.274" level="INFO">${json} = {'keys': [{'volumeName': 'cli-debug-volume8607', 'bucketName': 'cli-debug-bucket', 'name': 'ratis-one-key', 'blocks': [{'containerID': 3, 'blockID': 115816896921600102, 'replicas': [{'datanode': {'uui...</msg>
<status status="PASS" starttime="20251020 06:10:45.272" endtime="20251020 06:10:45.274"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${keys}</var>
<arg>${json}</arg>
<arg>keys</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20251020 06:10:45.274" level="INFO">${keys} = [{'volumeName': 'cli-debug-volume8607', 'bucketName': 'cli-debug-bucket', 'name': 'ratis-one-key', 'blocks': [{'containerID': 3, 'blockID': 115816896921600102, 'replicas': [{'datanode': {'uuid': '0e62...</msg>
<status status="PASS" starttime="20251020 06:10:45.274" endtime="20251020 06:10:45.274"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${key_count}</var>
<arg>${keys}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20251020 06:10:45.275" level="INFO">Length is 1</msg>
<msg timestamp="20251020 06:10:45.275" level="INFO">${key_count} = 1</msg>
<status status="PASS" starttime="20251020 06:10:45.274" endtime="20251020 06:10:45.275"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${key_count}</arg>
<arg>${expected_key_count}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20251020 06:10:45.275" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20251020 06:10:45.275" endtime="20251020 06:10:45.275"/>
</kw>
<kw name="Get key names from output" library="ozone-debug-keywords">
<var>${key_names}</var>
<arg>${json}</arg>
<kw name="Get From Dictionary" library="Collections">
<var>${keys}</var>
<arg>${json}</arg>
<arg>keys</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20251020 06:10:45.276" level="INFO">${keys} = [{'volumeName': 'cli-debug-volume8607', 'bucketName': 'cli-debug-bucket', 'name': 'ratis-one-key', 'blocks': [{'containerID': 3, 'blockID': 115816896921600102, 'replicas': [{'datanode': {'uuid': '0e62...</msg>
<status status="PASS" starttime="20251020 06:10:45.276" endtime="20251020 06:10:45.276"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${key_names}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20251020 06:10:45.276" level="INFO">${key_names} = []</msg>
<status status="PASS" starttime="20251020 06:10:45.276" endtime="20251020 06:10:45.276"/>
</kw>
<for flavor="IN">
<var>${key}</var>
<value>@{keys}</value>
<iter>
<var name="${key}">{'volumeName': 'cli-debug-volume8607', 'bucketName': 'cli-debug-bucket', 'name': 'ratis-one-key', 'blocks': [{'containerID': 3, 'blockID': 115816896921600102, 'replicas': [{'datanode': {'uuid': '0e626...</var>
<kw name="Get From Dictionary" library="Collections">
<var>${key_name}</var>
<arg>${key}</arg>
<arg>name</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20251020 06:10:45.277" level="INFO">${key_name} = ratis-one-key</msg>
<status status="PASS" starttime="20251020 06:10:45.277" endtime="20251020 06:10:45.277"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${key_names}</arg>
<arg>${key_name}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20251020 06:10:45.277" endtime="20251020 06:10:45.277"/>
</kw>
<status status="PASS" starttime="20251020 06:10:45.277" endtime="20251020 06:10:45.277"/>
</iter>
<status status="PASS" starttime="20251020 06:10:45.276" endtime="20251020 06:10:45.277"/>
</for>
<msg timestamp="20251020 06:10:45.278" level="INFO">${key_names} = ['ratis-one-key']</msg>
<status status="PASS" starttime="20251020 06:10:45.275" endtime="20251020 06:10:45.278"/>
</kw>
<msg timestamp="20251020 06:10:45.278" level="INFO">${key_names} = ['ratis-one-key']</msg>
<status status="PASS" starttime="20251020 06:10:38.007" endtime="20251020 06:10:45.278"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${key_names}</arg>
<arg>${RATIS_ONE_KEY}</arg>
<arg>Key ${RATIS_ONE_KEY} not found in output</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20251020 06:10:45.278" endtime="20251020 06:10:45.278"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${key_names}</arg>
<arg>${EC_KEY}</arg>
<arg>Key ${EC_KEY} should not be in filtered output</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20251020 06:10:45.278" endtime="20251020 06:10:45.279"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${key_names}</arg>
<arg>${TESTFILE}</arg>
<arg>Key ${TESTFILE} should not be in filtered output</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20251020 06:10:45.279" endtime="20251020 06:10:45.279"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${key_names}</arg>
<arg>${RATIS_THREE_KEY}</arg>
<arg>Key ${RATIS_THREE_KEY} should not be in filtered output</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20251020 06:10:45.279" endtime="20251020 06:10:45.280"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20251020 06:10:38.007" endtime="20251020 06:10:45.280"/>
</test>
<test id="s1-s4-t3" name="Test ozone debug replicas verify with RATIS THREE filter" line="80">
<kw name="Execute and validate replicas verify with filter">
<var>${key_names}</var>
<arg>RATIS</arg>
<arg>THREE</arg>
<arg>checksums</arg>
<arg>2</arg>
<kw name="Execute replicas verify with replication filter" library="ozone-debug-keywords">
<var>${output}</var>
<arg>${replication_type}</arg>
<arg>${replication_factor}</arg>
<arg>${verification_type}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone debug replicas verify --${verification_type} --type ${replication_type} --replication ${replication_factor} o3://${OM_SERVICE_ID}/${VOLUME}/${BUCKET} --all-results</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20251020 06:10:45.286" level="INFO">Running command 'ozone debug replicas verify --checksums --type RATIS --replication THREE o3://omservice/cli-debug-volume8607/cli-debug-bucket --all-results 2&gt;&amp;1'.</msg>
<msg timestamp="20251020 06:10:53.397" level="INFO">${rc} = 0</msg>
<msg timestamp="20251020 06:10:53.397" level="INFO">${output} = {
  "keys" : [ {
    "volumeName" : "cli-debug-volume8607",
    "bucketName" : "cli-debug-bucket",
    "name" : "ratis-three-key",
    "blocks" : [ {
      "containerID" : 1,
      "blockID" : 1158168...</msg>
<status status="PASS" starttime="20251020 06:10:45.283" endtime="20251020 06:10:53.397"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20251020 06:10:53.398" level="INFO">{
  "keys" : [ {
    "volumeName" : "cli-debug-volume8607",
    "bucketName" : "cli-debug-bucket",
    "name" : "ratis-three-key",
    "blocks" : [ {
      "containerID" : 1,
      "blockID" : 115816896921600103,
      "replicas" : [ {
        "datanode" : {
          "uuid" : "5091ac28-2575-4aeb-a0db-027eb43415af",
          "hostname" : "ozonesecure-ha-datanode2-1.ozonesecure-ha_ozone_net"
        },
        "checks" : [ {
          "type" : "checksum",
          "completed" : true,
          "pass" : true,
          "failures" : [ ]
        } ],
        "replicaIndex" : 0
      }, {
        "datanode" : {
          "uuid" : "836d8d1f-7c50-45e1-9b09-8c26454e142e",
          "hostname" : "ozonesecure-ha-datanode3-1.ozonesecure-ha_ozone_net"
        },
        "checks" : [ {
          "type" : "checksum",
          "completed" : true,
          "pass" : true,
          "failures" : [ ]
        } ],
        "replicaIndex" : 0
      }, {
        "datanode" : {
          "uuid" : "2eb54adf-376a-47d4-9ed3-8f3fdb613de1",
          "hostname" : "ozonesecure-ha-datanode5-1.ozonesecure-ha_ozone_net"
        },
        "checks" : [ {
          "type" : "checksum",
          "completed" : true,
          "pass" : true,
          "failures" : [ ]
        } ],
        "replicaIndex" : 0
      } ]
    } ],
    "pass" : true
  }, {
    "volumeName" : "cli-debug-volume8607",
    "bucketName" : "cli-debug-bucket",
    "name" : "testfile",
    "blocks" : [ {
      "containerID" : 2,
      "blockID" : 115816896921600101,
      "replicas" : [ {
        "datanode" : {
          "uuid" : "2eb54adf-376a-47d4-9ed3-8f3fdb613de1",
          "hostname" : "ozonesecure-ha-datanode5-1.ozonesecure-ha_ozone_net"
        },
        "checks" : [ {
          "type" : "checksum",
          "completed" : true,
          "pass" : true,
          "failures" : [ ]
        } ],
        "replicaIndex" : 0
      }, {
        "datanode" : {
          "uuid" : "5091ac28-2575-4aeb-a0db-027eb43415af",
          "hostname" : "ozonesecure-ha-datanode2-1.ozonesecure-ha_ozone_net"
        },
        "checks" : [ {
          "type" : "checksum",
          "completed" : true,
          "pass" : true,
          "failures" : [ ]
        } ],
        "replicaIndex" : 0
      }, {
        "datanode" : {
          "uuid" : "836d8d1f-7c50-45e1-9b09-8c26454e142e",
          "hostname" : "ozonesecure-ha-datanode3-1.ozonesecure-ha_ozone_net"
        },
        "checks" : [ {
          "type" : "checksum",
          "completed" : true,
          "pass" : true,
          "failures" : [ ]
        } ],
        "replicaIndex" : 0
      } ]
    } ],
    "pass" : true
  } ],
  "pass" : true
}

***************************************************
REPLICA VERIFICATION SUMMARY
***************************************************
Status: Success
Verification Scope: Bucket
Verification Types: checksum
URI: o3://omservice/cli-debug-volume8607/cli-debug-bucket

Number of Volumes processed: 0
Number of Buckets processed: 1
Number of Keys processed: 4

Keys passed verification: 2
Keys failed verification: 0

Total Execution time: 00:00:04,264
***************************************************</msg>
<status status="PASS" starttime="20251020 06:10:53.397" endtime="20251020 06:10:53.398"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20251020 06:10:53.398" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20251020 06:10:53.398" endtime="20251020 06:10:53.398"/>
</kw>
<status status="PASS" starttime="20251020 06:10:45.282" endtime="20251020 06:10:53.399"/>
</kw>
<msg timestamp="20251020 06:10:53.399" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20251020 06:10:45.282" endtime="20251020 06:10:53.399"/>
</kw>
<msg timestamp="20251020 06:10:53.399" level="INFO">${output} = {
  "keys" : [ {
    "volumeName" : "cli-debug-volume8607",
    "bucketName" : "cli-debug-bucket",
    "name" : "ratis-three-key",
    "blocks" : [ {
      "containerID" : 1,
      "blockID" : 1158168...</msg>
<status status="PASS" starttime="20251020 06:10:45.282" endtime="20251020 06:10:53.399"/>
</kw>
<msg timestamp="20251020 06:10:53.399" level="INFO">${output} = {
  "keys" : [ {
    "volumeName" : "cli-debug-volume8607",
    "bucketName" : "cli-debug-bucket",
    "name" : "ratis-three-key",
    "blocks" : [ {
      "containerID" : 1,
      "blockID" : 1158168...</msg>
<status status="PASS" starttime="20251020 06:10:45.281" endtime="20251020 06:10:53.399"/>
</kw>
<kw name="Parse replicas verify JSON output" library="ozone-debug-keywords">
<var>${json}</var>
<arg>${output}</arg>
<kw name="Evaluate" library="BuiltIn">
<var>${json_split}</var>
<arg>'''${output}'''.split('***')[0].strip()</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20251020 06:10:53.400" level="INFO">${json_split} = {
  "keys" : [ {
    "volumeName" : "cli-debug-volume8607",
    "bucketName" : "cli-debug-bucket",
    "name" : "ratis-three-key",
    "blocks" : [ {
      "containerID" : 1,
      "blockID" : 1158168...</msg>
<status status="PASS" starttime="20251020 06:10:53.400" endtime="20251020 06:10:53.400"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${json}</var>
<arg>json.loads('''${json_split}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20251020 06:10:53.401" level="INFO">${json} = {'keys': [{'volumeName': 'cli-debug-volume8607', 'bucketName': 'cli-debug-bucket', 'name': 'ratis-three-key', 'blocks': [{'containerID': 1, 'blockID': 115816896921600103, 'replicas': [{'datanode': {'u...</msg>
<status status="PASS" starttime="20251020 06:10:53.400" endtime="20251020 06:10:53.401"/>
</kw>
<msg timestamp="20251020 06:10:53.401" level="INFO">${json} = {'keys': [{'volumeName': 'cli-debug-volume8607', 'bucketName': 'cli-debug-bucket', 'name': 'ratis-three-key', 'blocks': [{'containerID': 1, 'blockID': 115816896921600103, 'replicas': [{'datanode': {'u...</msg>
<status status="PASS" starttime="20251020 06:10:53.399" endtime="20251020 06:10:53.401"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${keys}</var>
<arg>${json}</arg>
<arg>keys</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20251020 06:10:53.402" level="INFO">${keys} = [{'volumeName': 'cli-debug-volume8607', 'bucketName': 'cli-debug-bucket', 'name': 'ratis-three-key', 'blocks': [{'containerID': 1, 'blockID': 115816896921600103, 'replicas': [{'datanode': {'uuid': '50...</msg>
<status status="PASS" starttime="20251020 06:10:53.401" endtime="20251020 06:10:53.402"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${key_count}</var>
<arg>${keys}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20251020 06:10:53.402" level="INFO">Length is 2</msg>
<msg timestamp="20251020 06:10:53.402" level="INFO">${key_count} = 2</msg>
<status status="PASS" starttime="20251020 06:10:53.402" endtime="20251020 06:10:53.402"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${key_count}</arg>
<arg>${expected_key_count}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20251020 06:10:53.402" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20251020 06:10:53.402" endtime="20251020 06:10:53.403"/>
</kw>
<kw name="Get key names from output" library="ozone-debug-keywords">
<var>${key_names}</var>
<arg>${json}</arg>
<kw name="Get From Dictionary" library="Collections">
<var>${keys}</var>
<arg>${json}</arg>
<arg>keys</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20251020 06:10:53.403" level="INFO">${keys} = [{'volumeName': 'cli-debug-volume8607', 'bucketName': 'cli-debug-bucket', 'name': 'ratis-three-key', 'blocks': [{'containerID': 1, 'blockID': 115816896921600103, 'replicas': [{'datanode': {'uuid': '50...</msg>
<status status="PASS" starttime="20251020 06:10:53.403" endtime="20251020 06:10:53.403"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${key_names}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20251020 06:10:53.404" level="INFO">${key_names} = []</msg>
<status status="PASS" starttime="20251020 06:10:53.403" endtime="20251020 06:10:53.404"/>
</kw>
<for flavor="IN">
<var>${key}</var>
<value>@{keys}</value>
<iter>
<var name="${key}">{'volumeName': 'cli-debug-volume8607', 'bucketName': 'cli-debug-bucket', 'name': 'ratis-three-key', 'blocks': [{'containerID': 1, 'blockID': 115816896921600103, 'replicas': [{'datanode': {'uuid': '509...</var>
<kw name="Get From Dictionary" library="Collections">
<var>${key_name}</var>
<arg>${key}</arg>
<arg>name</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20251020 06:10:53.404" level="INFO">${key_name} = ratis-three-key</msg>
<status status="PASS" starttime="20251020 06:10:53.404" endtime="20251020 06:10:53.404"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${key_names}</arg>
<arg>${key_name}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20251020 06:10:53.404" endtime="20251020 06:10:53.405"/>
</kw>
<status status="PASS" starttime="20251020 06:10:53.404" endtime="20251020 06:10:53.405"/>
</iter>
<iter>
<var name="${key}">{'volumeName': 'cli-debug-volume8607', 'bucketName': 'cli-debug-bucket', 'name': 'testfile', 'blocks': [{'containerID': 2, 'blockID': 115816896921600101, 'replicas': [{'datanode': {'uuid': '2eb54adf-3...</var>
<kw name="Get From Dictionary" library="Collections">
<var>${key_name}</var>
<arg>${key}</arg>
<arg>name</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20251020 06:10:53.405" level="INFO">${key_name} = testfile</msg>
<status status="PASS" starttime="20251020 06:10:53.405" endtime="20251020 06:10:53.405"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${key_names}</arg>
<arg>${key_name}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20251020 06:10:53.405" endtime="20251020 06:10:53.405"/>
</kw>
<status status="PASS" starttime="20251020 06:10:53.405" endtime="20251020 06:10:53.405"/>
</iter>
<status status="PASS" starttime="20251020 06:10:53.404" endtime="20251020 06:10:53.405"/>
</for>
<msg timestamp="20251020 06:10:53.406" level="INFO">${key_names} = ['ratis-three-key', 'testfile']</msg>
<status status="PASS" starttime="20251020 06:10:53.403" endtime="20251020 06:10:53.406"/>
</kw>
<msg timestamp="20251020 06:10:53.406" level="INFO">${key_names} = ['ratis-three-key', 'testfile']</msg>
<status status="PASS" starttime="20251020 06:10:45.281" endtime="20251020 06:10:53.406"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${key_names}</arg>
<arg>${TESTFILE}</arg>
<arg>Key ${TESTFILE} not found in output</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20251020 06:10:53.406" endtime="20251020 06:10:53.406"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${key_names}</arg>
<arg>${RATIS_THREE_KEY}</arg>
<arg>Key ${RATIS_THREE_KEY} not found in output</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20251020 06:10:53.406" endtime="20251020 06:10:53.407"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${key_names}</arg>
<arg>${RATIS_ONE_KEY}</arg>
<arg>Key ${RATIS_ONE_KEY} should not be in filtered output</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20251020 06:10:53.407" endtime="20251020 06:10:53.407"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${key_names}</arg>
<arg>${EC_KEY}</arg>
<arg>Key ${EC_KEY} should not be in filtered output</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20251020 06:10:53.407" endtime="20251020 06:10:53.407"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20251020 06:10:45.280" endtime="20251020 06:10:53.408"/>
</test>
<test id="s1-s4-t4" name="Test ozone debug replicas verify with EC rs-3-2-1024k filter" line="90">
<kw name="Execute and validate replicas verify with filter">
<var>${key_names}</var>
<arg>EC</arg>
<arg>rs-3-2-1024k</arg>
<arg>checksums</arg>
<arg>1</arg>
<kw name="Execute replicas verify with replication filter" library="ozone-debug-keywords">
<var>${output}</var>
<arg>${replication_type}</arg>
<arg>${replication_factor}</arg>
<arg>${verification_type}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone debug replicas verify --${verification_type} --type ${replication_type} --replication ${replication_factor} o3://${OM_SERVICE_ID}/${VOLUME}/${BUCKET} --all-results</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20251020 06:10:53.413" level="INFO">Running command 'ozone debug replicas verify --checksums --type EC --replication rs-3-2-1024k o3://omservice/cli-debug-volume8607/cli-debug-bucket --all-results 2&gt;&amp;1'.</msg>
<msg timestamp="20251020 06:11:00.897" level="INFO">${rc} = 0</msg>
<msg timestamp="20251020 06:11:00.898" level="INFO">${output} = {
  "keys" : [ {
    "volumeName" : "cli-debug-volume8607",
    "bucketName" : "cli-debug-bucket",
    "name" : "ec-key",
    "blocks" : [ {
      "containerID" : 4,
      "blockID" : 1158168969216001...</msg>
<status status="PASS" starttime="20251020 06:10:53.410" endtime="20251020 06:11:00.898"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20251020 06:11:00.899" level="INFO">{
  "keys" : [ {
    "volumeName" : "cli-debug-volume8607",
    "bucketName" : "cli-debug-bucket",
    "name" : "ec-key",
    "blocks" : [ {
      "containerID" : 4,
      "blockID" : 115816896921600104,
      "replicas" : [ {
        "datanode" : {
          "uuid" : "836d8d1f-7c50-45e1-9b09-8c26454e142e",
          "hostname" : "ozonesecure-ha-datanode3-1.ozonesecure-ha_ozone_net"
        },
        "checks" : [ {
          "type" : "checksum",
          "completed" : true,
          "pass" : true,
          "failures" : [ ]
        } ],
        "replicaIndex" : 1
      }, {
        "datanode" : {
          "uuid" : "5091ac28-2575-4aeb-a0db-027eb43415af",
          "hostname" : "ozonesecure-ha-datanode2-1.ozonesecure-ha_ozone_net"
        },
        "checks" : [ {
          "type" : "checksum",
          "completed" : true,
          "pass" : true,
          "failures" : [ ]
        } ],
        "replicaIndex" : 2
      }, {
        "datanode" : {
          "uuid" : "0e626d12-3c80-4488-ac05-40cd1e7a189b",
          "hostname" : "ozonesecure-ha-datanode4-1.ozonesecure-ha_ozone_net"
        },
        "checks" : [ {
          "type" : "checksum",
          "completed" : true,
          "pass" : true,
          "failures" : [ ]
        } ],
        "replicaIndex" : 3
      }, {
        "datanode" : {
          "uuid" : "8d4285e4-1995-4237-8e5f-688e2602168e",
          "hostname" : "ozonesecure-ha-datanode1-1.ozonesecure-ha_ozone_net"
        },
        "checks" : [ {
          "type" : "checksum",
          "completed" : true,
          "pass" : true,
          "failures" : [ ]
        } ],
        "replicaIndex" : 4
      }, {
        "datanode" : {
          "uuid" : "2eb54adf-376a-47d4-9ed3-8f3fdb613de1",
          "hostname" : "ozonesecure-ha-datanode5-1.ozonesecure-ha_ozone_net"
        },
        "checks" : [ {
          "type" : "checksum",
          "completed" : true,
          "pass" : true,
          "failures" : [ ]
        } ],
        "replicaIndex" : 5
      } ]
    } ],
    "pass" : true
  } ],
  "pass" : true
}

***************************************************
REPLICA VERIFICATION SUMMARY
***************************************************
Status: Success
Verification Scope: Bucket
Verification Types: checksum
URI: o3://omservice/cli-debug-volume8607/cli-debug-bucket

Number of Volumes processed: 0
Number of Buckets processed: 1
Number of Keys processed: 4

Keys passed verification: 1
Keys failed verification: 0

Total Execution time: 00:00:03,758
***************************************************</msg>
<status status="PASS" starttime="20251020 06:11:00.898" endtime="20251020 06:11:00.899"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20251020 06:11:00.899" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20251020 06:11:00.899" endtime="20251020 06:11:00.899"/>
</kw>
<status status="PASS" starttime="20251020 06:10:53.410" endtime="20251020 06:11:00.899"/>
</kw>
<msg timestamp="20251020 06:11:00.899" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20251020 06:10:53.410" endtime="20251020 06:11:00.899"/>
</kw>
<msg timestamp="20251020 06:11:00.900" level="INFO">${output} = {
  "keys" : [ {
    "volumeName" : "cli-debug-volume8607",
    "bucketName" : "cli-debug-bucket",
    "name" : "ec-key",
    "blocks" : [ {
      "containerID" : 4,
      "blockID" : 1158168969216001...</msg>
<status status="PASS" starttime="20251020 06:10:53.409" endtime="20251020 06:11:00.900"/>
</kw>
<msg timestamp="20251020 06:11:00.900" level="INFO">${output} = {
  "keys" : [ {
    "volumeName" : "cli-debug-volume8607",
    "bucketName" : "cli-debug-bucket",
    "name" : "ec-key",
    "blocks" : [ {
      "containerID" : 4,
      "blockID" : 1158168969216001...</msg>
<status status="PASS" starttime="20251020 06:10:53.409" endtime="20251020 06:11:00.900"/>
</kw>
<kw name="Parse replicas verify JSON output" library="ozone-debug-keywords">
<var>${json}</var>
<arg>${output}</arg>
<kw name="Evaluate" library="BuiltIn">
<var>${json_split}</var>
<arg>'''${output}'''.split('***')[0].strip()</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20251020 06:11:00.901" level="INFO">${json_split} = {
  "keys" : [ {
    "volumeName" : "cli-debug-volume8607",
    "bucketName" : "cli-debug-bucket",
    "name" : "ec-key",
    "blocks" : [ {
      "containerID" : 4,
      "blockID" : 1158168969216001...</msg>
<status status="PASS" starttime="20251020 06:11:00.900" endtime="20251020 06:11:00.901"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${json}</var>
<arg>json.loads('''${json_split}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20251020 06:11:00.901" level="INFO">${json} = {'keys': [{'volumeName': 'cli-debug-volume8607', 'bucketName': 'cli-debug-bucket', 'name': 'ec-key', 'blocks': [{'containerID': 4, 'blockID': 115816896921600104, 'replicas': [{'datanode': {'uuid': '83...</msg>
<status status="PASS" starttime="20251020 06:11:00.901" endtime="20251020 06:11:00.902"/>
</kw>
<msg timestamp="20251020 06:11:00.902" level="INFO">${json} = {'keys': [{'volumeName': 'cli-debug-volume8607', 'bucketName': 'cli-debug-bucket', 'name': 'ec-key', 'blocks': [{'containerID': 4, 'blockID': 115816896921600104, 'replicas': [{'datanode': {'uuid': '83...</msg>
<status status="PASS" starttime="20251020 06:11:00.900" endtime="20251020 06:11:00.902"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${keys}</var>
<arg>${json}</arg>
<arg>keys</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20251020 06:11:00.902" level="INFO">${keys} = [{'volumeName': 'cli-debug-volume8607', 'bucketName': 'cli-debug-bucket', 'name': 'ec-key', 'blocks': [{'containerID': 4, 'blockID': 115816896921600104, 'replicas': [{'datanode': {'uuid': '836d8d1f-7c...</msg>
<status status="PASS" starttime="20251020 06:11:00.902" endtime="20251020 06:11:00.902"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${key_count}</var>
<arg>${keys}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20251020 06:11:00.903" level="INFO">Length is 1</msg>
<msg timestamp="20251020 06:11:00.903" level="INFO">${key_count} = 1</msg>
<status status="PASS" starttime="20251020 06:11:00.902" endtime="20251020 06:11:00.903"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${key_count}</arg>
<arg>${expected_key_count}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20251020 06:11:00.903" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20251020 06:11:00.903" endtime="20251020 06:11:00.903"/>
</kw>
<kw name="Get key names from output" library="ozone-debug-keywords">
<var>${key_names}</var>
<arg>${json}</arg>
<kw name="Get From Dictionary" library="Collections">
<var>${keys}</var>
<arg>${json}</arg>
<arg>keys</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20251020 06:11:00.904" level="INFO">${keys} = [{'volumeName': 'cli-debug-volume8607', 'bucketName': 'cli-debug-bucket', 'name': 'ec-key', 'blocks': [{'containerID': 4, 'blockID': 115816896921600104, 'replicas': [{'datanode': {'uuid': '836d8d1f-7c...</msg>
<status status="PASS" starttime="20251020 06:11:00.904" endtime="20251020 06:11:00.904"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${key_names}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20251020 06:11:00.904" level="INFO">${key_names} = []</msg>
<status status="PASS" starttime="20251020 06:11:00.904" endtime="20251020 06:11:00.904"/>
</kw>
<for flavor="IN">
<var>${key}</var>
<value>@{keys}</value>
<iter>
<var name="${key}">{'volumeName': 'cli-debug-volume8607', 'bucketName': 'cli-debug-bucket', 'name': 'ec-key', 'blocks': [{'containerID': 4, 'blockID': 115816896921600104, 'replicas': [{'datanode': {'uuid': '836d8d1f-7c5...</var>
<kw name="Get From Dictionary" library="Collections">
<var>${key_name}</var>
<arg>${key}</arg>
<arg>name</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20251020 06:11:00.905" level="INFO">${key_name} = ec-key</msg>
<status status="PASS" starttime="20251020 06:11:00.905" endtime="20251020 06:11:00.905"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${key_names}</arg>
<arg>${key_name}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20251020 06:11:00.905" endtime="20251020 06:11:00.905"/>
</kw>
<status status="PASS" starttime="20251020 06:11:00.905" endtime="20251020 06:11:00.905"/>
</iter>
<status status="PASS" starttime="20251020 06:11:00.904" endtime="20251020 06:11:00.906"/>
</for>
<msg timestamp="20251020 06:11:00.906" level="INFO">${key_names} = ['ec-key']</msg>
<status status="PASS" starttime="20251020 06:11:00.903" endtime="20251020 06:11:00.906"/>
</kw>
<msg timestamp="20251020 06:11:00.906" level="INFO">${key_names} = ['ec-key']</msg>
<status status="PASS" starttime="20251020 06:10:53.409" endtime="20251020 06:11:00.906"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${key_names}</arg>
<arg>${EC_KEY}</arg>
<arg>Key ${EC_KEY} not found in output</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20251020 06:11:00.906" endtime="20251020 06:11:00.906"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${key_names}</arg>
<arg>${TESTFILE}</arg>
<arg>Key ${TESTFILE} should not be in filtered output</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20251020 06:11:00.906" endtime="20251020 06:11:00.907"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${key_names}</arg>
<arg>${RATIS_ONE_KEY}</arg>
<arg>Key ${RATIS_ONE_KEY} should not be in filtered output</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20251020 06:11:00.907" endtime="20251020 06:11:00.907"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${key_names}</arg>
<arg>${RATIS_THREE_KEY}</arg>
<arg>Key ${RATIS_THREE_KEY} should not be in filtered output</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20251020 06:11:00.907" endtime="20251020 06:11:00.908"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20251020 06:10:53.408" endtime="20251020 06:11:00.908"/>
</test>
<test id="s1-s4-t5" name="Test ozone debug version" line="100">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone debug version</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20251020 06:11:00.912" level="INFO">Running command 'ozone debug version 2&gt;&amp;1'.</msg>
<msg timestamp="20251020 06:11:02.695" level="INFO">${rc} = 0</msg>
<msg timestamp="20251020 06:11:02.695" level="INFO">${output} = {
  "components" : {
    "client" : {
      "componentVersion" : {
        "name" : "BUCKET_LAYOUT_SUPPORT",
        "protoValue" : 3
      }
    },
    "datanode" : {
      "componentVersion" : {
   ...</msg>
<status status="PASS" starttime="20251020 06:11:00.909" endtime="20251020 06:11:02.695"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20251020 06:11:02.696" level="INFO">{
  "components" : {
    "client" : {
      "componentVersion" : {
        "name" : "BUCKET_LAYOUT_SUPPORT",
        "protoValue" : 3
      }
    },
    "datanode" : {
      "componentVersion" : {
        "name" : "COMBINED_PUTBLOCK_WRITECHUNK_RPC",
        "protoValue" : 2
      }
    },
    "om" : {
      "componentVersion" : {
        "name" : "S3_LIST_MULTIPART_UPLOADS_PAGINATION",
        "protoValue" : 11
      }
    }
  },
  "ozone" : {
    "revision" : "aee5aa31a733fa573e2793f905dd7666194e09e5",
    "url" : "https://github.com/apache/ozone",
    "version" : "2.1.0-SNAPSHOT"
  }
}</msg>
<status status="PASS" starttime="20251020 06:11:02.695" endtime="20251020 06:11:02.696"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20251020 06:11:02.696" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20251020 06:11:02.696" endtime="20251020 06:11:02.697"/>
</kw>
<status status="PASS" starttime="20251020 06:11:00.909" endtime="20251020 06:11:02.697"/>
</kw>
<msg timestamp="20251020 06:11:02.697" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20251020 06:11:00.909" endtime="20251020 06:11:02.697"/>
</kw>
<msg timestamp="20251020 06:11:02.697" level="INFO">${output} = {
  "components" : {
    "client" : {
      "componentVersion" : {
        "name" : "BUCKET_LAYOUT_SUPPORT",
        "protoValue" : 3
      }
    },
    "datanode" : {
      "componentVersion" : {
   ...</msg>
<status status="PASS" starttime="20251020 06:11:00.909" endtime="20251020 06:11:02.697"/>
</kw>
<kw name="Execute" library="os">
<arg>echo '${output}' | jq -r '.' # validate JSON</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20251020 06:11:02.701" level="INFO">Running command 'echo '{
  "components" : {
    "client" : {
      "componentVersion" : {
        "name" : "BUCKET_LAYOUT_SUPPORT",
        "protoValue" : 3
      }
    },
    "datanode" : {
      "componentVersion" : {
        "name" : "COMBINED_PUTBLOCK_WRITECHUNK_RPC",
        "protoValue" : 2
      }
    },
    "om" : {
      "componentVersion" : {
        "name" : "S3_LIST_MULTIPART_UPLOADS_PAGINATION",
        "protoValue" : 11
      }
    }
  },
  "ozone" : {
    "revision" : "aee5aa31a733fa573e2793f905dd7666194e09e5",
    "url" : "https://github.com/apache/ozone",
    "version" : "2.1.0-SNAPSHOT"
  }
}' | jq -r '.' # validate JSON 2&gt;&amp;1'.</msg>
<msg timestamp="20251020 06:11:02.707" level="INFO">${rc} = 0</msg>
<msg timestamp="20251020 06:11:02.707" level="INFO">${output} = {
  "components": {
    "client": {
      "componentVersion": {
        "name": "BUCKET_LAYOUT_SUPPORT",
        "protoValue": 3
      }
    },
    "datanode": {
      "componentVersion": {
        "n...</msg>
<status status="PASS" starttime="20251020 06:11:02.698" endtime="20251020 06:11:02.707"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20251020 06:11:02.708" level="INFO">{
  "components": {
    "client": {
      "componentVersion": {
        "name": "BUCKET_LAYOUT_SUPPORT",
        "protoValue": 3
      }
    },
    "datanode": {
      "componentVersion": {
        "name": "COMBINED_PUTBLOCK_WRITECHUNK_RPC",
        "protoValue": 2
      }
    },
    "om": {
      "componentVersion": {
        "name": "S3_LIST_MULTIPART_UPLOADS_PAGINATION",
        "protoValue": 11
      }
    }
  },
  "ozone": {
    "revision": "aee5aa31a733fa573e2793f905dd7666194e09e5",
    "url": "https://github.com/apache/ozone",
    "version": "2.1.0-SNAPSHOT"
  }
}</msg>
<status status="PASS" starttime="20251020 06:11:02.708" endtime="20251020 06:11:02.708"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20251020 06:11:02.709" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20251020 06:11:02.708" endtime="20251020 06:11:02.709"/>
</kw>
<status status="PASS" starttime="20251020 06:11:02.698" endtime="20251020 06:11:02.709"/>
</kw>
<msg timestamp="20251020 06:11:02.709" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20251020 06:11:02.698" endtime="20251020 06:11:02.709"/>
</kw>
<status status="PASS" starttime="20251020 06:11:02.697" endtime="20251020 06:11:02.709"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20251020 06:11:00.908" endtime="20251020 06:11:02.709"/>
</test>
<doc>Test ozone debug CLI</doc>
<status status="PASS" starttime="20251020 06:09:57.734" endtime="20251020 06:11:02.710"/>
</suite>
<suite id="s1-s5" name="Corrupt-Block-Checksum" source="/opt/hadoop/smoketest/debug/corrupt-block-checksum.robot">
<test id="s1-s5-t1" name="Test checksums with a corrupt block replica" line="33">
<kw name="Execute replicas verify checksums debug tool" library="ozone-debug-keywords">
<var>${output}</var>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone debug replicas verify --checksums o3://${OM_SERVICE_ID}/${VOLUME}/${BUCKET}/${TESTFILE} --all-results</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20251020 06:11:09.906" level="INFO">Running command 'ozone debug replicas verify --checksums o3://omservice/cli-debug-volume8607/cli-debug-bucket/testfile --all-results 2&gt;&amp;1'.</msg>
<msg timestamp="20251020 06:11:18.672" level="INFO">${rc} = 0</msg>
<msg timestamp="20251020 06:11:18.672" level="INFO">${output} = {
  "keys" : [ {
    "volumeName" : "cli-debug-volume8607",
    "bucketName" : "cli-debug-bucket",
    "name" : "testfile",
    "blocks" : [ {
      "containerID" : 2,
      "blockID" : 11581689692160...</msg>
<status status="PASS" starttime="20251020 06:11:09.903" endtime="20251020 06:11:18.672"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20251020 06:11:18.673" level="INFO">{
  "keys" : [ {
    "volumeName" : "cli-debug-volume8607",
    "bucketName" : "cli-debug-bucket",
    "name" : "testfile",
    "blocks" : [ {
      "containerID" : 2,
      "blockID" : 115816896921600101,
      "replicas" : [ {
        "datanode" : {
          "uuid" : "2eb54adf-376a-47d4-9ed3-8f3fdb613de1",
          "hostname" : "ozonesecure-ha-datanode5-1.ozonesecure-ha_ozone_net"
        },
        "checks" : [ {
          "type" : "checksum",
          "completed" : true,
          "pass" : false,
          "failures" : [ {
            "message" : "Checksum mismatched: this.checksums(0) != that.checksums(0), thisStartIndex=0, this=ChecksumData{CRC32, bytesPerChecksum=16384, checksums=[A0 14 64 CF, BB 42 2F B6, 0E 4B 11 D2, AF 58 98 6E, 57 40 76 60, 00 04 20 46, 13 77 D5 B7, C5 D3 71 43, 2C 1B 68 77, 1A 85 76 E8, 90 CA 11 DA, 9D 1B 19 7C, 52 56 CA 87, A4 F2 2B 12, 62 0B C2 D0, AE B1 91 14, 63 0B A6 DD, CC B1 96 EF, 33 6A C5 5D, C9 87 EC D4, FC C8 09 D6, 59 20 2A C8, F9 02 7A 55, 2A 42 6F 8D, 6F DF 96 1B, 25 78 1A 72, F2 28 9F B5, E6 F2 F0 A2, EA C9 BF 26, 7B D6 FF 08, F3 C1 55 F9, 53 17 09 AA, 2B 95 DA 7D, 99 F7 D1 6C, 7A 85 45 53, 7F A0 3F 3A, 0E D3 FE 4B, 47 94 0E B2, 39 E4 06 5D, D1 70 91 FF, 1D C0 75 A0, 29 A2 3C 4D, 00 F0 CA 0A, 69 2D 9C DD, BB 1B 0D A8, 16 8C DC 63, 4A 82 01 8B, 80 5E CB 17, 9F B7 41 EB, 0F 5E 51 FB, 85 F6 86 D7, F1 30 5A 7E, 9B DA C6 D9, 5C 38 F9 18, 75 CD F5 6C, 4D B5 1F 55, 1A 11 97 94, 97 C9 62 E9, 83 94 63 9F, 6E CE 90 9C, 7C BE 67 9E, 47 EF 81 43, E4 53 07 84, 5C 79 C7 F8, 08 08 52 57, F2 FD 8D 19, 55 00 14 81, B7 46 A8 DA, D4 49 3A 57, 83 69 40 76, B8 F2 BB 02, 47 DC 97 93, 8A 61 6A C7, C8 62 27 0A, 79 FA 08 F4, 12 2C 00 47, 0C 69 8C A9, C5 5C E9 ED, 9F F7 03 BF, FE 9C CE 42, 64 F8 4F 36, AF C0 7E D8, E3 5D BB 95, F1 4F 3A 2E, 46 5F BE 05, 83 3A 86 DB, 5A A3 92 7B, 51 5E E8 C7, 75 84 E9 0F, 06 34 41 2E, 15 3B B0 BE, 1F D1 C3 EB]}, that=ChecksumData{CRC32, bytesPerChecksum=16384, checksums=[15 1A 37 20]}"
          } ]
        } ],
        "replicaIndex" : 0
      }, {
        "datanode" : {
          "uuid" : "5091ac28-2575-4aeb-a0db-027eb43415af",
          "hostname" : "ozonesecure-ha-datanode2-1.ozonesecure-ha_ozone_net"
        },
        "checks" : [ {
          "type" : "checksum",
          "completed" : true,
          "pass" : true,
          "failures" : [ ]
        } ],
        "replicaIndex" : 0
      }, {
        "datanode" : {
          "uuid" : "836d8d1f-7c50-45e1-9b09-8c26454e142e",
          "hostname" : "ozonesecure-ha-datanode3-1.ozonesecure-ha_ozone_net"
        },
        "checks" : [ {
          "type" : "checksum",
          "completed" : true,
          "pass" : true,
          "failures" : [ ]
        } ],
        "replicaIndex" : 0
      } ]
    } ],
    "pass" : false
  } ],
  "pass" : false
}

***************************************************
REPLICA VERIFICATION SUMMARY
***************************************************
Status: Completed with failures
Verification Scope: Key
Verification Types: checksum
URI: o3://omservice/cli-debug-volume8607/cli-debug-bucket/testfile

Number of Volumes processed: 0
Number of Buckets processed: 0
Number of Keys processed: 1

Keys passed verification: 0
Keys failed verification: 1

Keys failed checksum verification: 1
Note: A key may fail multiple verification types, so total may exceed overall failures.

Total Execution time: 00:00:04,796
***************************************************</msg>
<status status="PASS" starttime="20251020 06:11:18.673" endtime="20251020 06:11:18.673"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20251020 06:11:18.674" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20251020 06:11:18.674" endtime="20251020 06:11:18.674"/>
</kw>
<status status="PASS" starttime="20251020 06:11:09.903" endtime="20251020 06:11:18.674"/>
</kw>
<msg timestamp="20251020 06:11:18.674" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20251020 06:11:09.903" endtime="20251020 06:11:18.674"/>
</kw>
<msg timestamp="20251020 06:11:18.675" level="INFO">${output} = {
  "keys" : [ {
    "volumeName" : "cli-debug-volume8607",
    "bucketName" : "cli-debug-bucket",
    "name" : "testfile",
    "blocks" : [ {
      "containerID" : 2,
      "blockID" : 11581689692160...</msg>
<status status="PASS" starttime="20251020 06:11:09.902" endtime="20251020 06:11:18.675"/>
</kw>
<msg timestamp="20251020 06:11:18.675" level="INFO">${output} = {
  "keys" : [ {
    "volumeName" : "cli-debug-volume8607",
    "bucketName" : "cli-debug-bucket",
    "name" : "testfile",
    "blocks" : [ {
      "containerID" : 2,
      "blockID" : 11581689692160...</msg>
<status status="PASS" starttime="20251020 06:11:09.902" endtime="20251020 06:11:18.675"/>
</kw>
<kw name="Parse replicas verify JSON output" library="ozone-debug-keywords">
<var>${json}</var>
<arg>${output}</arg>
<kw name="Evaluate" library="BuiltIn">
<var>${json_split}</var>
<arg>'''${output}'''.split('***')[0].strip()</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20251020 06:11:18.676" level="INFO">${json_split} = {
  "keys" : [ {
    "volumeName" : "cli-debug-volume8607",
    "bucketName" : "cli-debug-bucket",
    "name" : "testfile",
    "blocks" : [ {
      "containerID" : 2,
      "blockID" : 11581689692160...</msg>
<status status="PASS" starttime="20251020 06:11:18.675" endtime="20251020 06:11:18.676"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${json}</var>
<arg>json.loads('''${json_split}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20251020 06:11:18.676" level="INFO">${json} = {'keys': [{'volumeName': 'cli-debug-volume8607', 'bucketName': 'cli-debug-bucket', 'name': 'testfile', 'blocks': [{'containerID': 2, 'blockID': 115816896921600101, 'replicas': [{'datanode': {'uuid': '...</msg>
<status status="PASS" starttime="20251020 06:11:18.676" endtime="20251020 06:11:18.676"/>
</kw>
<msg timestamp="20251020 06:11:18.677" level="INFO">${json} = {'keys': [{'volumeName': 'cli-debug-volume8607', 'bucketName': 'cli-debug-bucket', 'name': 'testfile', 'blocks': [{'containerID': 2, 'blockID': 115816896921600101, 'replicas': [{'datanode': {'uuid': '...</msg>
<status status="PASS" starttime="20251020 06:11:18.675" endtime="20251020 06:11:18.677"/>
</kw>
<kw name="Check to Verify Replicas" library="ozone-debug-keywords">
<arg>${json}</arg>
<arg>${CHECK_TYPE}</arg>
<arg>${CORRUPT_DATANODE}</arg>
<arg>Checksum mismatched</arg>
<kw name="Get From Dictionary" library="Collections">
<var>${replicas}</var>
<arg>${json['keys'][0]['blocks'][0]}</arg>
<arg>replicas</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20251020 06:11:18.678" level="INFO">${replicas} = [{'datanode': {'uuid': '2eb54adf-376a-47d4-9ed3-8f3fdb613de1', 'hostname': 'ozonesecure-ha-datanode5-1.ozonesecure-ha_ozone_net'}, 'checks': [{'type': 'checksum', 'completed': True, 'pass': False, 'fa...</msg>
<status status="PASS" starttime="20251020 06:11:18.677" endtime="20251020 06:11:18.678"/>
</kw>
<for flavor="IN">
<var>${replica}</var>
<value>@{replicas}</value>
<iter>
<var name="${replica}">{'datanode': {'uuid': '2eb54adf-376a-47d4-9ed3-8f3fdb613de1', 'hostname': 'ozonesecure-ha-datanode5-1.ozonesecure-ha_ozone_net'}, 'checks': [{'type': 'checksum', 'completed': True, 'pass': False, 'fai...</var>
<kw name="Get From Dictionary" library="Collections">
<var>${datanode}</var>
<arg>${replica}</arg>
<arg>datanode</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20251020 06:11:18.679" level="INFO">${datanode} = {'uuid': '2eb54adf-376a-47d4-9ed3-8f3fdb613de1', 'hostname': 'ozonesecure-ha-datanode5-1.ozonesecure-ha_ozone_net'}</msg>
<status status="PASS" starttime="20251020 06:11:18.678" endtime="20251020 06:11:18.679"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${hostname}</var>
<arg>${datanode}</arg>
<arg>hostname</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20251020 06:11:18.679" level="INFO">${hostname} = ozonesecure-ha-datanode5-1.ozonesecure-ha_ozone_net</msg>
<status status="PASS" starttime="20251020 06:11:18.679" endtime="20251020 06:11:18.679"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${hostname}' == '${faulty_datanode}'</arg>
<arg>Check Replica Failed</arg>
<arg>${replica}</arg>
<arg>${check_type}</arg>
<arg>${expected_message}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Check Replica Failed" library="ozone-debug-keywords">
<arg>${replica}</arg>
<arg>${check_type}</arg>
<arg>${expected_message}</arg>
<kw name="Get From Dictionary" library="Collections">
<var>${checks}</var>
<arg>${replica}</arg>
<arg>checks</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20251020 06:11:18.680" level="INFO">${checks} = [{'type': 'checksum', 'completed': True, 'pass': False, 'failures': [{'message': 'Checksum mismatched: this.checksums(0) != that.checksums(0), thisStartIndex=0, this=ChecksumData{CRC32, bytesPerChecks...</msg>
<status status="PASS" starttime="20251020 06:11:18.680" endtime="20251020 06:11:18.680"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${check}</var>
<arg>${checks}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20251020 06:11:18.681" level="INFO">${check} = {'type': 'checksum', 'completed': True, 'pass': False, 'failures': [{'message': 'Checksum mismatched: this.checksums(0) != that.checksums(0), thisStartIndex=0, this=ChecksumData{CRC32, bytesPerChecksu...</msg>
<status status="PASS" starttime="20251020 06:11:18.680" endtime="20251020 06:11:18.681"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${check['type']}</arg>
<arg>${check_type}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20251020 06:11:18.681" endtime="20251020 06:11:18.681"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${check['pass']}</arg>
<arg>${False}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20251020 06:11:18.681" endtime="20251020 06:11:18.682"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${check['failures'][0]['message']}</arg>
<arg>${expected_message}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20251020 06:11:18.682" endtime="20251020 06:11:18.683"/>
</kw>
<status status="PASS" starttime="20251020 06:11:18.680" endtime="20251020 06:11:18.683"/>
</kw>
<status status="PASS" starttime="20251020 06:11:18.679" endtime="20251020 06:11:18.683"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${hostname}' != '${faulty_datanode}'</arg>
<arg>Check Replica Passed</arg>
<arg>${replica}</arg>
<arg>${check_type}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20251020 06:11:18.683" endtime="20251020 06:11:18.684"/>
</kw>
<status status="PASS" starttime="20251020 06:11:18.678" endtime="20251020 06:11:18.684"/>
</iter>
<iter>
<var name="${replica}">{'datanode': {'uuid': '5091ac28-2575-4aeb-a0db-027eb43415af', 'hostname': 'ozonesecure-ha-datanode2-1.ozonesecure-ha_ozone_net'}, 'checks': [{'type': 'checksum', 'completed': True, 'pass': True, 'fail...</var>
<kw name="Get From Dictionary" library="Collections">
<var>${datanode}</var>
<arg>${replica}</arg>
<arg>datanode</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20251020 06:11:18.684" level="INFO">${datanode} = {'uuid': '5091ac28-2575-4aeb-a0db-027eb43415af', 'hostname': 'ozonesecure-ha-datanode2-1.ozonesecure-ha_ozone_net'}</msg>
<status status="PASS" starttime="20251020 06:11:18.684" endtime="20251020 06:11:18.684"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${hostname}</var>
<arg>${datanode}</arg>
<arg>hostname</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20251020 06:11:18.685" level="INFO">${hostname} = ozonesecure-ha-datanode2-1.ozonesecure-ha_ozone_net</msg>
<status status="PASS" starttime="20251020 06:11:18.684" endtime="20251020 06:11:18.685"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${hostname}' == '${faulty_datanode}'</arg>
<arg>Check Replica Failed</arg>
<arg>${replica}</arg>
<arg>${check_type}</arg>
<arg>${expected_message}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20251020 06:11:18.685" endtime="20251020 06:11:18.685"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${hostname}' != '${faulty_datanode}'</arg>
<arg>Check Replica Passed</arg>
<arg>${replica}</arg>
<arg>${check_type}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Check Replica Passed" library="ozone-debug-keywords">
<arg>${replica}</arg>
<arg>${check_type}</arg>
<kw name="Get From Dictionary" library="Collections">
<var>${checks}</var>
<arg>${replica}</arg>
<arg>checks</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20251020 06:11:18.686" level="INFO">${checks} = [{'type': 'checksum', 'completed': True, 'pass': True, 'failures': []}]</msg>
<status status="PASS" starttime="20251020 06:11:18.686" endtime="20251020 06:11:18.686"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${check}</var>
<arg>${checks}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20251020 06:11:18.686" level="INFO">${check} = {'type': 'checksum', 'completed': True, 'pass': True, 'failures': []}</msg>
<status status="PASS" starttime="20251020 06:11:18.686" endtime="20251020 06:11:18.686"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${check['type']}</arg>
<arg>${check_type}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20251020 06:11:18.686" endtime="20251020 06:11:18.687"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${check['completed']}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20251020 06:11:18.687" endtime="20251020 06:11:18.688"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${check['pass']}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20251020 06:11:18.688" endtime="20251020 06:11:18.688"/>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${check['failures']}</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20251020 06:11:18.689" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20251020 06:11:18.688" endtime="20251020 06:11:18.689"/>
</kw>
<status status="PASS" starttime="20251020 06:11:18.685" endtime="20251020 06:11:18.689"/>
</kw>
<status status="PASS" starttime="20251020 06:11:18.685" endtime="20251020 06:11:18.689"/>
</kw>
<status status="PASS" starttime="20251020 06:11:18.684" endtime="20251020 06:11:18.689"/>
</iter>
<iter>
<var name="${replica}">{'datanode': {'uuid': '836d8d1f-7c50-45e1-9b09-8c26454e142e', 'hostname': 'ozonesecure-ha-datanode3-1.ozonesecure-ha_ozone_net'}, 'checks': [{'type': 'checksum', 'completed': True, 'pass': True, 'fail...</var>
<kw name="Get From Dictionary" library="Collections">
<var>${datanode}</var>
<arg>${replica}</arg>
<arg>datanode</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20251020 06:11:18.690" level="INFO">${datanode} = {'uuid': '836d8d1f-7c50-45e1-9b09-8c26454e142e', 'hostname': 'ozonesecure-ha-datanode3-1.ozonesecure-ha_ozone_net'}</msg>
<status status="PASS" starttime="20251020 06:11:18.689" endtime="20251020 06:11:18.690"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${hostname}</var>
<arg>${datanode}</arg>
<arg>hostname</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20251020 06:11:18.690" level="INFO">${hostname} = ozonesecure-ha-datanode3-1.ozonesecure-ha_ozone_net</msg>
<status status="PASS" starttime="20251020 06:11:18.690" endtime="20251020 06:11:18.690"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${hostname}' == '${faulty_datanode}'</arg>
<arg>Check Replica Failed</arg>
<arg>${replica}</arg>
<arg>${check_type}</arg>
<arg>${expected_message}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20251020 06:11:18.690" endtime="20251020 06:11:18.690"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${hostname}' != '${faulty_datanode}'</arg>
<arg>Check Replica Passed</arg>
<arg>${replica}</arg>
<arg>${check_type}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Check Replica Passed" library="ozone-debug-keywords">
<arg>${replica}</arg>
<arg>${check_type}</arg>
<kw name="Get From Dictionary" library="Collections">
<var>${checks}</var>
<arg>${replica}</arg>
<arg>checks</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20251020 06:11:18.691" level="INFO">${checks} = [{'type': 'checksum', 'completed': True, 'pass': True, 'failures': []}]</msg>
<status status="PASS" starttime="20251020 06:11:18.691" endtime="20251020 06:11:18.691"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${check}</var>
<arg>${checks}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20251020 06:11:18.692" level="INFO">${check} = {'type': 'checksum', 'completed': True, 'pass': True, 'failures': []}</msg>
<status status="PASS" starttime="20251020 06:11:18.691" endtime="20251020 06:11:18.692"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${check['type']}</arg>
<arg>${check_type}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20251020 06:11:18.692" endtime="20251020 06:11:18.692"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${check['completed']}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20251020 06:11:18.692" endtime="20251020 06:11:18.693"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${check['pass']}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20251020 06:11:18.693" endtime="20251020 06:11:18.694"/>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${check['failures']}</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20251020 06:11:18.694" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20251020 06:11:18.694" endtime="20251020 06:11:18.694"/>
</kw>
<status status="PASS" starttime="20251020 06:11:18.691" endtime="20251020 06:11:18.694"/>
</kw>
<status status="PASS" starttime="20251020 06:11:18.690" endtime="20251020 06:11:18.694"/>
</kw>
<status status="PASS" starttime="20251020 06:11:18.689" endtime="20251020 06:11:18.695"/>
</iter>
<status status="PASS" starttime="20251020 06:11:18.678" endtime="20251020 06:11:18.695"/>
</for>
<status status="PASS" starttime="20251020 06:11:18.677" endtime="20251020 06:11:18.695"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20251020 06:11:09.901" endtime="20251020 06:11:18.695"/>
</test>
<doc>Test checksums on a corrupt block replica</doc>
<status status="PASS" starttime="20251020 06:11:09.860" endtime="20251020 06:11:18.696"/>
</suite>
<suite id="s1-s6" name="Stale-Datanode-Checksum" source="/opt/hadoop/smoketest/debug/stale-datanode-checksum.robot">
<test id="s1-s6-t1" name="Test checksums with a stale datanode" line="32">
<kw name="Execute replicas verify checksums debug tool" library="ozone-debug-keywords">
<var>${output}</var>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone debug replicas verify --checksums o3://${OM_SERVICE_ID}/${VOLUME}/${BUCKET}/${TESTFILE} --all-results</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20251020 06:11:52.216" level="INFO">Running command 'ozone debug replicas verify --checksums o3://omservice/cli-debug-volume8607/cli-debug-bucket/testfile --all-results 2&gt;&amp;1'.</msg>
<msg timestamp="20251020 06:12:22.024" level="INFO">${rc} = 0</msg>
<msg timestamp="20251020 06:12:22.024" level="INFO">${output} = {
  "keys" : [ {
    "volumeName" : "cli-debug-volume8607",
    "bucketName" : "cli-debug-bucket",
    "name" : "testfile",
    "blocks" : [ {
      "containerID" : 2,
      "blockID" : 11581689692160...</msg>
<status status="PASS" starttime="20251020 06:11:52.213" endtime="20251020 06:12:22.024"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20251020 06:12:22.025" level="INFO">{
  "keys" : [ {
    "volumeName" : "cli-debug-volume8607",
    "bucketName" : "cli-debug-bucket",
    "name" : "testfile",
    "blocks" : [ {
      "containerID" : 2,
      "blockID" : 115816896921600101,
      "replicas" : [ {
        "datanode" : {
          "uuid" : "2eb54adf-376a-47d4-9ed3-8f3fdb613de1",
          "hostname" : "ozonesecure-ha-datanode5-1.ozonesecure-ha_ozone_net"
        },
        "checks" : [ {
          "type" : "checksum",
          "completed" : false,
          "pass" : false,
          "failures" : [ {
            "message" : "org.apache.ratis.thirdparty.io.grpc.StatusRuntimeException: UNAVAILABLE: io exception"
          } ]
        } ],
        "replicaIndex" : 0
      }, {
        "datanode" : {
          "uuid" : "5091ac28-2575-4aeb-a0db-027eb43415af",
          "hostname" : "ozonesecure-ha-datanode2-1.ozonesecure-ha_ozone_net"
        },
        "checks" : [ {
          "type" : "checksum",
          "completed" : true,
          "pass" : true,
          "failures" : [ ]
        } ],
        "replicaIndex" : 0
      }, {
        "datanode" : {
          "uuid" : "836d8d1f-7c50-45e1-9b09-8c26454e142e",
          "hostname" : "ozonesecure-ha-datanode3-1.ozonesecure-ha_ozone_net"
        },
        "checks" : [ {
          "type" : "checksum",
          "completed" : true,
          "pass" : true,
          "failures" : [ ]
        } ],
        "replicaIndex" : 0
      } ]
    } ],
    "pass" : false
  } ],
  "pass" : false
}

***************************************************
REPLICA VERIFICATION SUMMARY
***************************************************
Status: Completed with failures
Verification Scope: Key
Verification Types: checksum
URI: o3://omservice/cli-debug-volume8607/cli-debug-bucket/testfile

Number of Volumes processed: 0
Number of Buckets processed: 0
Number of Keys processed: 1

Keys passed verification: 0
Keys failed verification: 1

Keys failed checksum verification: 1
Note: A key may fail multiple verification types, so total may exceed overall failures.

Total Execution time: 00:00:25,535
***************************************************</msg>
<status status="PASS" starttime="20251020 06:12:22.025" endtime="20251020 06:12:22.025"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20251020 06:12:22.026" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20251020 06:12:22.025" endtime="20251020 06:12:22.026"/>
</kw>
<status status="PASS" starttime="20251020 06:11:52.213" endtime="20251020 06:12:22.026"/>
</kw>
<msg timestamp="20251020 06:12:22.026" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20251020 06:11:52.213" endtime="20251020 06:12:22.026"/>
</kw>
<msg timestamp="20251020 06:12:22.026" level="INFO">${output} = {
  "keys" : [ {
    "volumeName" : "cli-debug-volume8607",
    "bucketName" : "cli-debug-bucket",
    "name" : "testfile",
    "blocks" : [ {
      "containerID" : 2,
      "blockID" : 11581689692160...</msg>
<status status="PASS" starttime="20251020 06:11:52.212" endtime="20251020 06:12:22.026"/>
</kw>
<msg timestamp="20251020 06:12:22.027" level="INFO">${output} = {
  "keys" : [ {
    "volumeName" : "cli-debug-volume8607",
    "bucketName" : "cli-debug-bucket",
    "name" : "testfile",
    "blocks" : [ {
      "containerID" : 2,
      "blockID" : 11581689692160...</msg>
<status status="PASS" starttime="20251020 06:11:52.212" endtime="20251020 06:12:22.027"/>
</kw>
<kw name="Parse replicas verify JSON output" library="ozone-debug-keywords">
<var>${json}</var>
<arg>${output}</arg>
<kw name="Evaluate" library="BuiltIn">
<var>${json_split}</var>
<arg>'''${output}'''.split('***')[0].strip()</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20251020 06:12:22.028" level="INFO">${json_split} = {
  "keys" : [ {
    "volumeName" : "cli-debug-volume8607",
    "bucketName" : "cli-debug-bucket",
    "name" : "testfile",
    "blocks" : [ {
      "containerID" : 2,
      "blockID" : 11581689692160...</msg>
<status status="PASS" starttime="20251020 06:12:22.027" endtime="20251020 06:12:22.028"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${json}</var>
<arg>json.loads('''${json_split}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20251020 06:12:22.028" level="INFO">${json} = {'keys': [{'volumeName': 'cli-debug-volume8607', 'bucketName': 'cli-debug-bucket', 'name': 'testfile', 'blocks': [{'containerID': 2, 'blockID': 115816896921600101, 'replicas': [{'datanode': {'uuid': '...</msg>
<status status="PASS" starttime="20251020 06:12:22.028" endtime="20251020 06:12:22.028"/>
</kw>
<msg timestamp="20251020 06:12:22.028" level="INFO">${json} = {'keys': [{'volumeName': 'cli-debug-volume8607', 'bucketName': 'cli-debug-bucket', 'name': 'testfile', 'blocks': [{'containerID': 2, 'blockID': 115816896921600101, 'replicas': [{'datanode': {'uuid': '...</msg>
<status status="PASS" starttime="20251020 06:12:22.027" endtime="20251020 06:12:22.028"/>
</kw>
<kw name="Check to Verify Replicas" library="ozone-debug-keywords">
<arg>${json}</arg>
<arg>${CHECK_TYPE}</arg>
<arg>${STALE_DATANODE}</arg>
<arg>UNAVAILABLE</arg>
<kw name="Get From Dictionary" library="Collections">
<var>${replicas}</var>
<arg>${json['keys'][0]['blocks'][0]}</arg>
<arg>replicas</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20251020 06:12:22.030" level="INFO">${replicas} = [{'datanode': {'uuid': '2eb54adf-376a-47d4-9ed3-8f3fdb613de1', 'hostname': 'ozonesecure-ha-datanode5-1.ozonesecure-ha_ozone_net'}, 'checks': [{'type': 'checksum', 'completed': False, 'pass': False, 'f...</msg>
<status status="PASS" starttime="20251020 06:12:22.029" endtime="20251020 06:12:22.030"/>
</kw>
<for flavor="IN">
<var>${replica}</var>
<value>@{replicas}</value>
<iter>
<var name="${replica}">{'datanode': {'uuid': '2eb54adf-376a-47d4-9ed3-8f3fdb613de1', 'hostname': 'ozonesecure-ha-datanode5-1.ozonesecure-ha_ozone_net'}, 'checks': [{'type': 'checksum', 'completed': False, 'pass': False, 'fa...</var>
<kw name="Get From Dictionary" library="Collections">
<var>${datanode}</var>
<arg>${replica}</arg>
<arg>datanode</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20251020 06:12:22.031" level="INFO">${datanode} = {'uuid': '2eb54adf-376a-47d4-9ed3-8f3fdb613de1', 'hostname': 'ozonesecure-ha-datanode5-1.ozonesecure-ha_ozone_net'}</msg>
<status status="PASS" starttime="20251020 06:12:22.030" endtime="20251020 06:12:22.031"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${hostname}</var>
<arg>${datanode}</arg>
<arg>hostname</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20251020 06:12:22.031" level="INFO">${hostname} = ozonesecure-ha-datanode5-1.ozonesecure-ha_ozone_net</msg>
<status status="PASS" starttime="20251020 06:12:22.031" endtime="20251020 06:12:22.031"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${hostname}' == '${faulty_datanode}'</arg>
<arg>Check Replica Failed</arg>
<arg>${replica}</arg>
<arg>${check_type}</arg>
<arg>${expected_message}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Check Replica Failed" library="ozone-debug-keywords">
<arg>${replica}</arg>
<arg>${check_type}</arg>
<arg>${expected_message}</arg>
<kw name="Get From Dictionary" library="Collections">
<var>${checks}</var>
<arg>${replica}</arg>
<arg>checks</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20251020 06:12:22.032" level="INFO">${checks} = [{'type': 'checksum', 'completed': False, 'pass': False, 'failures': [{'message': 'org.apache.ratis.thirdparty.io.grpc.StatusRuntimeException: UNAVAILABLE: io exception'}]}]</msg>
<status status="PASS" starttime="20251020 06:12:22.032" endtime="20251020 06:12:22.032"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${check}</var>
<arg>${checks}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20251020 06:12:22.033" level="INFO">${check} = {'type': 'checksum', 'completed': False, 'pass': False, 'failures': [{'message': 'org.apache.ratis.thirdparty.io.grpc.StatusRuntimeException: UNAVAILABLE: io exception'}]}</msg>
<status status="PASS" starttime="20251020 06:12:22.032" endtime="20251020 06:12:22.033"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${check['type']}</arg>
<arg>${check_type}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20251020 06:12:22.033" endtime="20251020 06:12:22.034"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${check['pass']}</arg>
<arg>${False}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20251020 06:12:22.034" endtime="20251020 06:12:22.034"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${check['failures'][0]['message']}</arg>
<arg>${expected_message}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20251020 06:12:22.035" endtime="20251020 06:12:22.035"/>
</kw>
<status status="PASS" starttime="20251020 06:12:22.032" endtime="20251020 06:12:22.035"/>
</kw>
<status status="PASS" starttime="20251020 06:12:22.031" endtime="20251020 06:12:22.035"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${hostname}' != '${faulty_datanode}'</arg>
<arg>Check Replica Passed</arg>
<arg>${replica}</arg>
<arg>${check_type}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20251020 06:12:22.035" endtime="20251020 06:12:22.036"/>
</kw>
<status status="PASS" starttime="20251020 06:12:22.030" endtime="20251020 06:12:22.036"/>
</iter>
<iter>
<var name="${replica}">{'datanode': {'uuid': '5091ac28-2575-4aeb-a0db-027eb43415af', 'hostname': 'ozonesecure-ha-datanode2-1.ozonesecure-ha_ozone_net'}, 'checks': [{'type': 'checksum', 'completed': True, 'pass': True, 'fail...</var>
<kw name="Get From Dictionary" library="Collections">
<var>${datanode}</var>
<arg>${replica}</arg>
<arg>datanode</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20251020 06:12:22.036" level="INFO">${datanode} = {'uuid': '5091ac28-2575-4aeb-a0db-027eb43415af', 'hostname': 'ozonesecure-ha-datanode2-1.ozonesecure-ha_ozone_net'}</msg>
<status status="PASS" starttime="20251020 06:12:22.036" endtime="20251020 06:12:22.036"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${hostname}</var>
<arg>${datanode}</arg>
<arg>hostname</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20251020 06:12:22.036" level="INFO">${hostname} = ozonesecure-ha-datanode2-1.ozonesecure-ha_ozone_net</msg>
<status status="PASS" starttime="20251020 06:12:22.036" endtime="20251020 06:12:22.037"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${hostname}' == '${faulty_datanode}'</arg>
<arg>Check Replica Failed</arg>
<arg>${replica}</arg>
<arg>${check_type}</arg>
<arg>${expected_message}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20251020 06:12:22.037" endtime="20251020 06:12:22.037"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${hostname}' != '${faulty_datanode}'</arg>
<arg>Check Replica Passed</arg>
<arg>${replica}</arg>
<arg>${check_type}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Check Replica Passed" library="ozone-debug-keywords">
<arg>${replica}</arg>
<arg>${check_type}</arg>
<kw name="Get From Dictionary" library="Collections">
<var>${checks}</var>
<arg>${replica}</arg>
<arg>checks</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20251020 06:12:22.038" level="INFO">${checks} = [{'type': 'checksum', 'completed': True, 'pass': True, 'failures': []}]</msg>
<status status="PASS" starttime="20251020 06:12:22.038" endtime="20251020 06:12:22.038"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${check}</var>
<arg>${checks}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20251020 06:12:22.038" level="INFO">${check} = {'type': 'checksum', 'completed': True, 'pass': True, 'failures': []}</msg>
<status status="PASS" starttime="20251020 06:12:22.038" endtime="20251020 06:12:22.038"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${check['type']}</arg>
<arg>${check_type}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20251020 06:12:22.038" endtime="20251020 06:12:22.039"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${check['completed']}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20251020 06:12:22.039" endtime="20251020 06:12:22.040"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${check['pass']}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20251020 06:12:22.040" endtime="20251020 06:12:22.040"/>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${check['failures']}</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20251020 06:12:22.041" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20251020 06:12:22.040" endtime="20251020 06:12:22.041"/>
</kw>
<status status="PASS" starttime="20251020 06:12:22.037" endtime="20251020 06:12:22.041"/>
</kw>
<status status="PASS" starttime="20251020 06:12:22.037" endtime="20251020 06:12:22.041"/>
</kw>
<status status="PASS" starttime="20251020 06:12:22.036" endtime="20251020 06:12:22.041"/>
</iter>
<iter>
<var name="${replica}">{'datanode': {'uuid': '836d8d1f-7c50-45e1-9b09-8c26454e142e', 'hostname': 'ozonesecure-ha-datanode3-1.ozonesecure-ha_ozone_net'}, 'checks': [{'type': 'checksum', 'completed': True, 'pass': True, 'fail...</var>
<kw name="Get From Dictionary" library="Collections">
<var>${datanode}</var>
<arg>${replica}</arg>
<arg>datanode</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20251020 06:12:22.042" level="INFO">${datanode} = {'uuid': '836d8d1f-7c50-45e1-9b09-8c26454e142e', 'hostname': 'ozonesecure-ha-datanode3-1.ozonesecure-ha_ozone_net'}</msg>
<status status="PASS" starttime="20251020 06:12:22.041" endtime="20251020 06:12:22.042"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${hostname}</var>
<arg>${datanode}</arg>
<arg>hostname</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20251020 06:12:22.042" level="INFO">${hostname} = ozonesecure-ha-datanode3-1.ozonesecure-ha_ozone_net</msg>
<status status="PASS" starttime="20251020 06:12:22.042" endtime="20251020 06:12:22.042"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${hostname}' == '${faulty_datanode}'</arg>
<arg>Check Replica Failed</arg>
<arg>${replica}</arg>
<arg>${check_type}</arg>
<arg>${expected_message}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20251020 06:12:22.042" endtime="20251020 06:12:22.042"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${hostname}' != '${faulty_datanode}'</arg>
<arg>Check Replica Passed</arg>
<arg>${replica}</arg>
<arg>${check_type}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Check Replica Passed" library="ozone-debug-keywords">
<arg>${replica}</arg>
<arg>${check_type}</arg>
<kw name="Get From Dictionary" library="Collections">
<var>${checks}</var>
<arg>${replica}</arg>
<arg>checks</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20251020 06:12:22.044" level="INFO">${checks} = [{'type': 'checksum', 'completed': True, 'pass': True, 'failures': []}]</msg>
<status status="PASS" starttime="20251020 06:12:22.043" endtime="20251020 06:12:22.044"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${check}</var>
<arg>${checks}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20251020 06:12:22.044" level="INFO">${check} = {'type': 'checksum', 'completed': True, 'pass': True, 'failures': []}</msg>
<status status="PASS" starttime="20251020 06:12:22.044" endtime="20251020 06:12:22.044"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${check['type']}</arg>
<arg>${check_type}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20251020 06:12:22.044" endtime="20251020 06:12:22.045"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${check['completed']}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20251020 06:12:22.045" endtime="20251020 06:12:22.045"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${check['pass']}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20251020 06:12:22.046" endtime="20251020 06:12:22.046"/>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${check['failures']}</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20251020 06:12:22.047" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20251020 06:12:22.046" endtime="20251020 06:12:22.047"/>
</kw>
<status status="PASS" starttime="20251020 06:12:22.043" endtime="20251020 06:12:22.047"/>
</kw>
<status status="PASS" starttime="20251020 06:12:22.043" endtime="20251020 06:12:22.047"/>
</kw>
<status status="PASS" starttime="20251020 06:12:22.041" endtime="20251020 06:12:22.047"/>
</iter>
<status status="PASS" starttime="20251020 06:12:22.030" endtime="20251020 06:12:22.047"/>
</for>
<status status="PASS" starttime="20251020 06:12:22.029" endtime="20251020 06:12:22.047"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20251020 06:11:52.211" endtime="20251020 06:12:22.047"/>
</test>
<doc>Test checksums in case of a stale datanode</doc>
<status status="PASS" starttime="20251020 06:11:52.170" endtime="20251020 06:12:22.048"/>
</suite>
<suite id="s1-s7" name="Block-Existence-Check" source="/opt/hadoop/smoketest/debug/block-existence-check.robot">
<test id="s1-s7-t1" name="Test block existence with a block missing on a replica" line="32">
<kw name="Execute replicas verify block existence debug tool" library="ozone-debug-keywords">
<var>${output}</var>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone debug replicas verify --block-existence o3://${OM_SERVICE_ID}/${VOLUME}/${BUCKET}/${TESTFILE} --all-results</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20251020 06:12:43.218" level="INFO">Running command 'ozone debug replicas verify --block-existence o3://omservice/cli-debug-volume8607/cli-debug-bucket/testfile --all-results 2&gt;&amp;1'.</msg>
<msg timestamp="20251020 06:12:49.845" level="INFO">${rc} = 0</msg>
<msg timestamp="20251020 06:12:49.845" level="INFO">${output} = {
  "keys" : [ {
    "volumeName" : "cli-debug-volume8607",
    "bucketName" : "cli-debug-bucket",
    "name" : "testfile",
    "blocks" : [ {
      "containerID" : 2,
      "blockID" : 11581689692160...</msg>
<status status="PASS" starttime="20251020 06:12:43.215" endtime="20251020 06:12:49.846"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20251020 06:12:49.847" level="INFO">{
  "keys" : [ {
    "volumeName" : "cli-debug-volume8607",
    "bucketName" : "cli-debug-bucket",
    "name" : "testfile",
    "blocks" : [ {
      "containerID" : 2,
      "blockID" : 115816896921600101,
      "replicas" : [ {
        "datanode" : {
          "uuid" : "2eb54adf-376a-47d4-9ed3-8f3fdb613de1",
          "hostname" : "ozonesecure-ha-datanode5-1.ozonesecure-ha_ozone_net"
        },
        "checks" : [ {
          "type" : "blockExistence",
          "completed" : false,
          "pass" : false,
          "failures" : [ {
            "message" : "Unable to find the block with bcsID 226 .Container 2 bcsId is 0."
          } ]
        } ],
        "replicaIndex" : 0
      }, {
        "datanode" : {
          "uuid" : "5091ac28-2575-4aeb-a0db-027eb43415af",
          "hostname" : "ozonesecure-ha-datanode2-1.ozonesecure-ha_ozone_net"
        },
        "checks" : [ {
          "type" : "blockExistence",
          "completed" : true,
          "pass" : true,
          "failures" : [ ]
        } ],
        "replicaIndex" : 0
      }, {
        "datanode" : {
          "uuid" : "836d8d1f-7c50-45e1-9b09-8c26454e142e",
          "hostname" : "ozonesecure-ha-datanode3-1.ozonesecure-ha_ozone_net"
        },
        "checks" : [ {
          "type" : "blockExistence",
          "completed" : true,
          "pass" : true,
          "failures" : [ ]
        } ],
        "replicaIndex" : 0
      } ]
    } ],
    "pass" : false
  } ],
  "pass" : false
}

***************************************************
REPLICA VERIFICATION SUMMARY
***************************************************
Status: Completed with failures
Verification Scope: Key
Verification Types: blockExistence
URI: o3://omservice/cli-debug-volume8607/cli-debug-bucket/testfile

Number of Volumes processed: 0
Number of Buckets processed: 0
Number of Keys processed: 1

Keys passed verification: 0
Keys failed verification: 1

Keys failed blockExistence verification: 1
Note: A key may fail multiple verification types, so total may exceed overall failures.

Total Execution time: 00:00:02,190
***************************************************</msg>
<status status="PASS" starttime="20251020 06:12:49.846" endtime="20251020 06:12:49.847"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20251020 06:12:49.847" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20251020 06:12:49.847" endtime="20251020 06:12:49.847"/>
</kw>
<status status="PASS" starttime="20251020 06:12:43.214" endtime="20251020 06:12:49.848"/>
</kw>
<msg timestamp="20251020 06:12:49.848" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20251020 06:12:43.214" endtime="20251020 06:12:49.848"/>
</kw>
<msg timestamp="20251020 06:12:49.848" level="INFO">${output} = {
  "keys" : [ {
    "volumeName" : "cli-debug-volume8607",
    "bucketName" : "cli-debug-bucket",
    "name" : "testfile",
    "blocks" : [ {
      "containerID" : 2,
      "blockID" : 11581689692160...</msg>
<status status="PASS" starttime="20251020 06:12:43.213" endtime="20251020 06:12:49.848"/>
</kw>
<msg timestamp="20251020 06:12:49.848" level="INFO">${output} = {
  "keys" : [ {
    "volumeName" : "cli-debug-volume8607",
    "bucketName" : "cli-debug-bucket",
    "name" : "testfile",
    "blocks" : [ {
      "containerID" : 2,
      "blockID" : 11581689692160...</msg>
<status status="PASS" starttime="20251020 06:12:43.213" endtime="20251020 06:12:49.848"/>
</kw>
<kw name="Parse replicas verify JSON output" library="ozone-debug-keywords">
<var>${json}</var>
<arg>${output}</arg>
<kw name="Evaluate" library="BuiltIn">
<var>${json_split}</var>
<arg>'''${output}'''.split('***')[0].strip()</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20251020 06:12:49.849" level="INFO">${json_split} = {
  "keys" : [ {
    "volumeName" : "cli-debug-volume8607",
    "bucketName" : "cli-debug-bucket",
    "name" : "testfile",
    "blocks" : [ {
      "containerID" : 2,
      "blockID" : 11581689692160...</msg>
<status status="PASS" starttime="20251020 06:12:49.849" endtime="20251020 06:12:49.849"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${json}</var>
<arg>json.loads('''${json_split}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20251020 06:12:49.850" level="INFO">${json} = {'keys': [{'volumeName': 'cli-debug-volume8607', 'bucketName': 'cli-debug-bucket', 'name': 'testfile', 'blocks': [{'containerID': 2, 'blockID': 115816896921600101, 'replicas': [{'datanode': {'uuid': '...</msg>
<status status="PASS" starttime="20251020 06:12:49.849" endtime="20251020 06:12:49.850"/>
</kw>
<msg timestamp="20251020 06:12:49.850" level="INFO">${json} = {'keys': [{'volumeName': 'cli-debug-volume8607', 'bucketName': 'cli-debug-bucket', 'name': 'testfile', 'blocks': [{'containerID': 2, 'blockID': 115816896921600101, 'replicas': [{'datanode': {'uuid': '...</msg>
<status status="PASS" starttime="20251020 06:12:49.848" endtime="20251020 06:12:49.850"/>
</kw>
<kw name="Check to Verify Replicas" library="ozone-debug-keywords">
<arg>${json}</arg>
<arg>${CHECK_TYPE}</arg>
<arg>${DATANODE}</arg>
<arg>Unable to find the block</arg>
<kw name="Get From Dictionary" library="Collections">
<var>${replicas}</var>
<arg>${json['keys'][0]['blocks'][0]}</arg>
<arg>replicas</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20251020 06:12:49.851" level="INFO">${replicas} = [{'datanode': {'uuid': '2eb54adf-376a-47d4-9ed3-8f3fdb613de1', 'hostname': 'ozonesecure-ha-datanode5-1.ozonesecure-ha_ozone_net'}, 'checks': [{'type': 'blockExistence', 'completed': False, 'pass': Fal...</msg>
<status status="PASS" starttime="20251020 06:12:49.851" endtime="20251020 06:12:49.851"/>
</kw>
<for flavor="IN">
<var>${replica}</var>
<value>@{replicas}</value>
<iter>
<var name="${replica}">{'datanode': {'uuid': '2eb54adf-376a-47d4-9ed3-8f3fdb613de1', 'hostname': 'ozonesecure-ha-datanode5-1.ozonesecure-ha_ozone_net'}, 'checks': [{'type': 'blockExistence', 'completed': False, 'pass': Fals...</var>
<kw name="Get From Dictionary" library="Collections">
<var>${datanode}</var>
<arg>${replica}</arg>
<arg>datanode</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20251020 06:12:49.852" level="INFO">${datanode} = {'uuid': '2eb54adf-376a-47d4-9ed3-8f3fdb613de1', 'hostname': 'ozonesecure-ha-datanode5-1.ozonesecure-ha_ozone_net'}</msg>
<status status="PASS" starttime="20251020 06:12:49.852" endtime="20251020 06:12:49.852"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${hostname}</var>
<arg>${datanode}</arg>
<arg>hostname</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20251020 06:12:49.853" level="INFO">${hostname} = ozonesecure-ha-datanode5-1.ozonesecure-ha_ozone_net</msg>
<status status="PASS" starttime="20251020 06:12:49.852" endtime="20251020 06:12:49.853"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${hostname}' == '${faulty_datanode}'</arg>
<arg>Check Replica Failed</arg>
<arg>${replica}</arg>
<arg>${check_type}</arg>
<arg>${expected_message}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Check Replica Failed" library="ozone-debug-keywords">
<arg>${replica}</arg>
<arg>${check_type}</arg>
<arg>${expected_message}</arg>
<kw name="Get From Dictionary" library="Collections">
<var>${checks}</var>
<arg>${replica}</arg>
<arg>checks</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20251020 06:12:49.854" level="INFO">${checks} = [{'type': 'blockExistence', 'completed': False, 'pass': False, 'failures': [{'message': 'Unable to find the block with bcsID 226 .Container 2 bcsId is 0.'}]}]</msg>
<status status="PASS" starttime="20251020 06:12:49.854" endtime="20251020 06:12:49.854"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${check}</var>
<arg>${checks}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20251020 06:12:49.854" level="INFO">${check} = {'type': 'blockExistence', 'completed': False, 'pass': False, 'failures': [{'message': 'Unable to find the block with bcsID 226 .Container 2 bcsId is 0.'}]}</msg>
<status status="PASS" starttime="20251020 06:12:49.854" endtime="20251020 06:12:49.854"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${check['type']}</arg>
<arg>${check_type}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20251020 06:12:49.855" endtime="20251020 06:12:49.855"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${check['pass']}</arg>
<arg>${False}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20251020 06:12:49.855" endtime="20251020 06:12:49.856"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${check['failures'][0]['message']}</arg>
<arg>${expected_message}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20251020 06:12:49.856" endtime="20251020 06:12:49.857"/>
</kw>
<status status="PASS" starttime="20251020 06:12:49.853" endtime="20251020 06:12:49.857"/>
</kw>
<status status="PASS" starttime="20251020 06:12:49.853" endtime="20251020 06:12:49.857"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${hostname}' != '${faulty_datanode}'</arg>
<arg>Check Replica Passed</arg>
<arg>${replica}</arg>
<arg>${check_type}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20251020 06:12:49.857" endtime="20251020 06:12:49.857"/>
</kw>
<status status="PASS" starttime="20251020 06:12:49.852" endtime="20251020 06:12:49.857"/>
</iter>
<iter>
<var name="${replica}">{'datanode': {'uuid': '5091ac28-2575-4aeb-a0db-027eb43415af', 'hostname': 'ozonesecure-ha-datanode2-1.ozonesecure-ha_ozone_net'}, 'checks': [{'type': 'blockExistence', 'completed': True, 'pass': True,...</var>
<kw name="Get From Dictionary" library="Collections">
<var>${datanode}</var>
<arg>${replica}</arg>
<arg>datanode</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20251020 06:12:49.858" level="INFO">${datanode} = {'uuid': '5091ac28-2575-4aeb-a0db-027eb43415af', 'hostname': 'ozonesecure-ha-datanode2-1.ozonesecure-ha_ozone_net'}</msg>
<status status="PASS" starttime="20251020 06:12:49.857" endtime="20251020 06:12:49.858"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${hostname}</var>
<arg>${datanode}</arg>
<arg>hostname</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20251020 06:12:49.858" level="INFO">${hostname} = ozonesecure-ha-datanode2-1.ozonesecure-ha_ozone_net</msg>
<status status="PASS" starttime="20251020 06:12:49.858" endtime="20251020 06:12:49.858"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${hostname}' == '${faulty_datanode}'</arg>
<arg>Check Replica Failed</arg>
<arg>${replica}</arg>
<arg>${check_type}</arg>
<arg>${expected_message}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20251020 06:12:49.858" endtime="20251020 06:12:49.858"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${hostname}' != '${faulty_datanode}'</arg>
<arg>Check Replica Passed</arg>
<arg>${replica}</arg>
<arg>${check_type}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Check Replica Passed" library="ozone-debug-keywords">
<arg>${replica}</arg>
<arg>${check_type}</arg>
<kw name="Get From Dictionary" library="Collections">
<var>${checks}</var>
<arg>${replica}</arg>
<arg>checks</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20251020 06:12:49.859" level="INFO">${checks} = [{'type': 'blockExistence', 'completed': True, 'pass': True, 'failures': []}]</msg>
<status status="PASS" starttime="20251020 06:12:49.859" endtime="20251020 06:12:49.859"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${check}</var>
<arg>${checks}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20251020 06:12:49.860" level="INFO">${check} = {'type': 'blockExistence', 'completed': True, 'pass': True, 'failures': []}</msg>
<status status="PASS" starttime="20251020 06:12:49.860" endtime="20251020 06:12:49.860"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${check['type']}</arg>
<arg>${check_type}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20251020 06:12:49.860" endtime="20251020 06:12:49.861"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${check['completed']}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20251020 06:12:49.861" endtime="20251020 06:12:49.861"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${check['pass']}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20251020 06:12:49.861" endtime="20251020 06:12:49.862"/>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${check['failures']}</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20251020 06:12:49.863" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20251020 06:12:49.862" endtime="20251020 06:12:49.863"/>
</kw>
<status status="PASS" starttime="20251020 06:12:49.859" endtime="20251020 06:12:49.863"/>
</kw>
<status status="PASS" starttime="20251020 06:12:49.859" endtime="20251020 06:12:49.863"/>
</kw>
<status status="PASS" starttime="20251020 06:12:49.857" endtime="20251020 06:12:49.863"/>
</iter>
<iter>
<var name="${replica}">{'datanode': {'uuid': '836d8d1f-7c50-45e1-9b09-8c26454e142e', 'hostname': 'ozonesecure-ha-datanode3-1.ozonesecure-ha_ozone_net'}, 'checks': [{'type': 'blockExistence', 'completed': True, 'pass': True,...</var>
<kw name="Get From Dictionary" library="Collections">
<var>${datanode}</var>
<arg>${replica}</arg>
<arg>datanode</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20251020 06:12:49.863" level="INFO">${datanode} = {'uuid': '836d8d1f-7c50-45e1-9b09-8c26454e142e', 'hostname': 'ozonesecure-ha-datanode3-1.ozonesecure-ha_ozone_net'}</msg>
<status status="PASS" starttime="20251020 06:12:49.863" endtime="20251020 06:12:49.863"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${hostname}</var>
<arg>${datanode}</arg>
<arg>hostname</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20251020 06:12:49.864" level="INFO">${hostname} = ozonesecure-ha-datanode3-1.ozonesecure-ha_ozone_net</msg>
<status status="PASS" starttime="20251020 06:12:49.864" endtime="20251020 06:12:49.864"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${hostname}' == '${faulty_datanode}'</arg>
<arg>Check Replica Failed</arg>
<arg>${replica}</arg>
<arg>${check_type}</arg>
<arg>${expected_message}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20251020 06:12:49.864" endtime="20251020 06:12:49.864"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${hostname}' != '${faulty_datanode}'</arg>
<arg>Check Replica Passed</arg>
<arg>${replica}</arg>
<arg>${check_type}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Check Replica Passed" library="ozone-debug-keywords">
<arg>${replica}</arg>
<arg>${check_type}</arg>
<kw name="Get From Dictionary" library="Collections">
<var>${checks}</var>
<arg>${replica}</arg>
<arg>checks</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20251020 06:12:49.865" level="INFO">${checks} = [{'type': 'blockExistence', 'completed': True, 'pass': True, 'failures': []}]</msg>
<status status="PASS" starttime="20251020 06:12:49.865" endtime="20251020 06:12:49.865"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${check}</var>
<arg>${checks}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20251020 06:12:49.865" level="INFO">${check} = {'type': 'blockExistence', 'completed': True, 'pass': True, 'failures': []}</msg>
<status status="PASS" starttime="20251020 06:12:49.865" endtime="20251020 06:12:49.866"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${check['type']}</arg>
<arg>${check_type}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20251020 06:12:49.866" endtime="20251020 06:12:49.866"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${check['completed']}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20251020 06:12:49.866" endtime="20251020 06:12:49.867"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${check['pass']}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20251020 06:12:49.867" endtime="20251020 06:12:49.868"/>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${check['failures']}</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20251020 06:12:49.868" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20251020 06:12:49.868" endtime="20251020 06:12:49.868"/>
</kw>
<status status="PASS" starttime="20251020 06:12:49.864" endtime="20251020 06:12:49.868"/>
</kw>
<status status="PASS" starttime="20251020 06:12:49.864" endtime="20251020 06:12:49.868"/>
</kw>
<status status="PASS" starttime="20251020 06:12:49.863" endtime="20251020 06:12:49.868"/>
</iter>
<status status="PASS" starttime="20251020 06:12:49.852" endtime="20251020 06:12:49.868"/>
</for>
<status status="PASS" starttime="20251020 06:12:49.850" endtime="20251020 06:12:49.868"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20251020 06:12:43.212" endtime="20251020 06:12:49.869"/>
</test>
<doc>Test existence of a block on a datanode</doc>
<status status="PASS" starttime="20251020 06:12:43.169" endtime="20251020 06:12:49.869"/>
</suite>
<suite id="s1-s8" name="Container-State-Verifier" source="/opt/hadoop/smoketest/debug/container-state-verifier.robot">
<test id="s1-s8-t1" name="Verify Container State With Unhealthy Container Replica" line="51">
<kw name="Verify Container State with Rule">
<arg>UNHEALTHY</arg>
<kw name="Create Container State Rule">
<var>${rule_file}</var>
<arg>${expected_state}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${rule_file}</var>
<arg>/tmp/container-state-${state}.btm</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20251020 06:12:50.703" level="INFO">${rule_file} = /tmp/container-state-UNHEALTHY.btm</msg>
<status status="PASS" starttime="20251020 06:12:50.703" endtime="20251020 06:12:50.703"/>
</kw>
<kw name="Execute" library="os">
<arg>sed 's/STATE_PLACEHOLDER/${state}/g' ${TEMPLATE_RULE} &gt; ${rule_file}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20251020 06:12:50.707" level="INFO">Running command 'sed 's/STATE_PLACEHOLDER/UNHEALTHY/g' /opt/hadoop/share/ozone/byteman/container-state-template.btm &gt; /tmp/container-state-UNHEALTHY.btm'.</msg>
<msg timestamp="20251020 06:12:50.710" level="INFO">${rc} = 0</msg>
<msg timestamp="20251020 06:12:50.710" level="INFO">${output} = </msg>
<status status="PASS" starttime="20251020 06:12:50.704" endtime="20251020 06:12:50.710"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20251020 06:12:50.711" level="INFO"/>
<status status="PASS" starttime="20251020 06:12:50.711" endtime="20251020 06:12:50.711"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20251020 06:12:50.712" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20251020 06:12:50.711" endtime="20251020 06:12:50.712"/>
</kw>
<status status="PASS" starttime="20251020 06:12:50.704" endtime="20251020 06:12:50.712"/>
</kw>
<msg timestamp="20251020 06:12:50.712" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20251020 06:12:50.703" endtime="20251020 06:12:50.712"/>
</kw>
<status status="PASS" starttime="20251020 06:12:50.703" endtime="20251020 06:12:50.712"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${rule_file}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20251020 06:12:50.712" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20251020 06:12:50.712" endtime="20251020 06:12:50.712"/>
</kw>
<msg timestamp="20251020 06:12:50.712" level="INFO">${rule_file} = /tmp/container-state-UNHEALTHY.btm</msg>
<status status="PASS" starttime="20251020 06:12:50.702" endtime="20251020 06:12:50.713"/>
</kw>
<kw name="Add Byteman Rule" library="BytemanLibrary">
<arg>${FAULT_INJ_DATANODE}</arg>
<arg>${rule_file}</arg>
<doc>Add Byteman rule into specific component</doc>
<msg timestamp="20251020 06:12:50.924" level="INFO">Add rule /tmp/container-state-UNHEALTHY.btm for datanode5 successful.</msg>
<status status="PASS" starttime="20251020 06:12:50.713" endtime="20251020 06:12:50.924"/>
</kw>
<kw name="List Byteman Rules" library="BytemanLibrary">
<arg>${FAULT_INJ_DATANODE}</arg>
<doc>List Active Byteman rules for specific component and return file list</doc>
<msg timestamp="20251020 06:12:51.008" level="INFO">List rules for datanode5 successful.</msg>
<msg timestamp="20251020 06:12:51.008" level="INFO">Active rules in datanode5:
# File /tmp/container-state-UNHEALTHY.btm line 20</msg>
<status status="PASS" starttime="20251020 06:12:50.924" endtime="20251020 06:12:51.008"/>
</kw>
<kw name="Execute replicas verify container state debug tool" library="ozone-debug-keywords">
<var>${output}</var>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone debug replicas verify --container-state o3://${OM_SERVICE_ID}/${VOLUME}/${BUCKET}/${TESTFILE} --all-results</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20251020 06:12:51.014" level="INFO">Running command 'ozone debug replicas verify --container-state o3://omservice/cli-debug-volume8607/cli-debug-bucket/testfile --all-results 2&gt;&amp;1'.</msg>
<msg timestamp="20251020 06:12:57.339" level="INFO">${rc} = 0</msg>
<msg timestamp="20251020 06:12:57.340" level="INFO">${output} = {
  "keys" : [ {
    "volumeName" : "cli-debug-volume8607",
    "bucketName" : "cli-debug-bucket",
    "name" : "testfile",
    "blocks" : [ {
      "containerID" : 2,
      "blockID" : 11581689692160...</msg>
<status status="PASS" starttime="20251020 06:12:51.011" endtime="20251020 06:12:57.340"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20251020 06:12:57.341" level="INFO">{
  "keys" : [ {
    "volumeName" : "cli-debug-volume8607",
    "bucketName" : "cli-debug-bucket",
    "name" : "testfile",
    "blocks" : [ {
      "containerID" : 2,
      "blockID" : 115816896921600101,
      "replicas" : [ {
        "datanode" : {
          "uuid" : "2eb54adf-376a-47d4-9ed3-8f3fdb613de1",
          "hostname" : "ozonesecure-ha-datanode5-1.ozonesecure-ha_ozone_net"
        },
        "checks" : [ {
          "type" : "containerState",
          "completed" : true,
          "pass" : false,
          "failures" : [ {
            "message" : "Replica state is UNHEALTHY, Container state in SCM is CLOSED"
          } ]
        } ],
        "replicaIndex" : 0
      }, {
        "datanode" : {
          "uuid" : "5091ac28-2575-4aeb-a0db-027eb43415af",
          "hostname" : "ozonesecure-ha-datanode2-1.ozonesecure-ha_ozone_net"
        },
        "checks" : [ {
          "type" : "containerState",
          "completed" : true,
          "pass" : true,
          "failures" : [ ]
        } ],
        "replicaIndex" : 0
      }, {
        "datanode" : {
          "uuid" : "836d8d1f-7c50-45e1-9b09-8c26454e142e",
          "hostname" : "ozonesecure-ha-datanode3-1.ozonesecure-ha_ozone_net"
        },
        "checks" : [ {
          "type" : "containerState",
          "completed" : true,
          "pass" : true,
          "failures" : [ ]
        } ],
        "replicaIndex" : 0
      } ]
    } ],
    "pass" : false
  } ],
  "pass" : false
}

***************************************************
REPLICA VERIFICATION SUMMARY
***************************************************
Status: Completed with failures
Verification Scope: Key
Verification Types: containerState
URI: o3://omservice/cli-debug-volume8607/cli-debug-bucket/testfile

Number of Volumes processed: 0
Number of Buckets processed: 0
Number of Keys processed: 1

Keys passed verification: 0
Keys failed verification: 1

Keys failed containerState verification: 1
Note: A key may fail multiple verification types, so total may exceed overall failures.

Total Execution time: 00:00:02,171
***************************************************</msg>
<status status="PASS" starttime="20251020 06:12:57.340" endtime="20251020 06:12:57.341"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20251020 06:12:57.341" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20251020 06:12:57.341" endtime="20251020 06:12:57.341"/>
</kw>
<status status="PASS" starttime="20251020 06:12:51.011" endtime="20251020 06:12:57.341"/>
</kw>
<msg timestamp="20251020 06:12:57.342" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20251020 06:12:51.010" endtime="20251020 06:12:57.342"/>
</kw>
<msg timestamp="20251020 06:12:57.342" level="INFO">${output} = {
  "keys" : [ {
    "volumeName" : "cli-debug-volume8607",
    "bucketName" : "cli-debug-bucket",
    "name" : "testfile",
    "blocks" : [ {
      "containerID" : 2,
      "blockID" : 11581689692160...</msg>
<status status="PASS" starttime="20251020 06:12:51.009" endtime="20251020 06:12:57.342"/>
</kw>
<msg timestamp="20251020 06:12:57.342" level="INFO">${output} = {
  "keys" : [ {
    "volumeName" : "cli-debug-volume8607",
    "bucketName" : "cli-debug-bucket",
    "name" : "testfile",
    "blocks" : [ {
      "containerID" : 2,
      "blockID" : 11581689692160...</msg>
<status status="PASS" starttime="20251020 06:12:51.009" endtime="20251020 06:12:57.342"/>
</kw>
<kw name="Parse replicas verify JSON output" library="ozone-debug-keywords">
<var>${json}</var>
<arg>${output}</arg>
<kw name="Evaluate" library="BuiltIn">
<var>${json_split}</var>
<arg>'''${output}'''.split('***')[0].strip()</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20251020 06:12:57.343" level="INFO">${json_split} = {
  "keys" : [ {
    "volumeName" : "cli-debug-volume8607",
    "bucketName" : "cli-debug-bucket",
    "name" : "testfile",
    "blocks" : [ {
      "containerID" : 2,
      "blockID" : 11581689692160...</msg>
<status status="PASS" starttime="20251020 06:12:57.343" endtime="20251020 06:12:57.343"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${json}</var>
<arg>json.loads('''${json_split}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20251020 06:12:57.344" level="INFO">${json} = {'keys': [{'volumeName': 'cli-debug-volume8607', 'bucketName': 'cli-debug-bucket', 'name': 'testfile', 'blocks': [{'containerID': 2, 'blockID': 115816896921600101, 'replicas': [{'datanode': {'uuid': '...</msg>
<status status="PASS" starttime="20251020 06:12:57.343" endtime="20251020 06:12:57.344"/>
</kw>
<msg timestamp="20251020 06:12:57.344" level="INFO">${json} = {'keys': [{'volumeName': 'cli-debug-volume8607', 'bucketName': 'cli-debug-bucket', 'name': 'testfile', 'blocks': [{'containerID': 2, 'blockID': 115816896921600101, 'replicas': [{'datanode': {'uuid': '...</msg>
<status status="PASS" starttime="20251020 06:12:57.342" endtime="20251020 06:12:57.344"/>
</kw>
<kw name="Check to Verify Replicas" library="ozone-debug-keywords">
<arg>${json}</arg>
<arg>${CHECK_TYPE}</arg>
<arg>${DATANODE}</arg>
<arg>Replica state is ${expected_state}</arg>
<kw name="Get From Dictionary" library="Collections">
<var>${replicas}</var>
<arg>${json['keys'][0]['blocks'][0]}</arg>
<arg>replicas</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20251020 06:12:57.345" level="INFO">${replicas} = [{'datanode': {'uuid': '2eb54adf-376a-47d4-9ed3-8f3fdb613de1', 'hostname': 'ozonesecure-ha-datanode5-1.ozonesecure-ha_ozone_net'}, 'checks': [{'type': 'containerState', 'completed': True, 'pass': Fals...</msg>
<status status="PASS" starttime="20251020 06:12:57.345" endtime="20251020 06:12:57.345"/>
</kw>
<for flavor="IN">
<var>${replica}</var>
<value>@{replicas}</value>
<iter>
<var name="${replica}">{'datanode': {'uuid': '2eb54adf-376a-47d4-9ed3-8f3fdb613de1', 'hostname': 'ozonesecure-ha-datanode5-1.ozonesecure-ha_ozone_net'}, 'checks': [{'type': 'containerState', 'completed': True, 'pass': False...</var>
<kw name="Get From Dictionary" library="Collections">
<var>${datanode}</var>
<arg>${replica}</arg>
<arg>datanode</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20251020 06:12:57.346" level="INFO">${datanode} = {'uuid': '2eb54adf-376a-47d4-9ed3-8f3fdb613de1', 'hostname': 'ozonesecure-ha-datanode5-1.ozonesecure-ha_ozone_net'}</msg>
<status status="PASS" starttime="20251020 06:12:57.346" endtime="20251020 06:12:57.346"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${hostname}</var>
<arg>${datanode}</arg>
<arg>hostname</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20251020 06:12:57.346" level="INFO">${hostname} = ozonesecure-ha-datanode5-1.ozonesecure-ha_ozone_net</msg>
<status status="PASS" starttime="20251020 06:12:57.346" endtime="20251020 06:12:57.346"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${hostname}' == '${faulty_datanode}'</arg>
<arg>Check Replica Failed</arg>
<arg>${replica}</arg>
<arg>${check_type}</arg>
<arg>${expected_message}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Check Replica Failed" library="ozone-debug-keywords">
<arg>${replica}</arg>
<arg>${check_type}</arg>
<arg>${expected_message}</arg>
<kw name="Get From Dictionary" library="Collections">
<var>${checks}</var>
<arg>${replica}</arg>
<arg>checks</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20251020 06:12:57.348" level="INFO">${checks} = [{'type': 'containerState', 'completed': True, 'pass': False, 'failures': [{'message': 'Replica state is UNHEALTHY, Container state in SCM is CLOSED'}]}]</msg>
<status status="PASS" starttime="20251020 06:12:57.347" endtime="20251020 06:12:57.348"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${check}</var>
<arg>${checks}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20251020 06:12:57.348" level="INFO">${check} = {'type': 'containerState', 'completed': True, 'pass': False, 'failures': [{'message': 'Replica state is UNHEALTHY, Container state in SCM is CLOSED'}]}</msg>
<status status="PASS" starttime="20251020 06:12:57.348" endtime="20251020 06:12:57.348"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${check['type']}</arg>
<arg>${check_type}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20251020 06:12:57.348" endtime="20251020 06:12:57.349"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${check['pass']}</arg>
<arg>${False}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20251020 06:12:57.349" endtime="20251020 06:12:57.349"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${check['failures'][0]['message']}</arg>
<arg>${expected_message}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20251020 06:12:57.350" endtime="20251020 06:12:57.350"/>
</kw>
<status status="PASS" starttime="20251020 06:12:57.347" endtime="20251020 06:12:57.350"/>
</kw>
<status status="PASS" starttime="20251020 06:12:57.347" endtime="20251020 06:12:57.350"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${hostname}' != '${faulty_datanode}'</arg>
<arg>Check Replica Passed</arg>
<arg>${replica}</arg>
<arg>${check_type}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20251020 06:12:57.350" endtime="20251020 06:12:57.351"/>
</kw>
<status status="PASS" starttime="20251020 06:12:57.346" endtime="20251020 06:12:57.351"/>
</iter>
<iter>
<var name="${replica}">{'datanode': {'uuid': '5091ac28-2575-4aeb-a0db-027eb43415af', 'hostname': 'ozonesecure-ha-datanode2-1.ozonesecure-ha_ozone_net'}, 'checks': [{'type': 'containerState', 'completed': True, 'pass': True,...</var>
<kw name="Get From Dictionary" library="Collections">
<var>${datanode}</var>
<arg>${replica}</arg>
<arg>datanode</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20251020 06:12:57.351" level="INFO">${datanode} = {'uuid': '5091ac28-2575-4aeb-a0db-027eb43415af', 'hostname': 'ozonesecure-ha-datanode2-1.ozonesecure-ha_ozone_net'}</msg>
<status status="PASS" starttime="20251020 06:12:57.351" endtime="20251020 06:12:57.351"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${hostname}</var>
<arg>${datanode}</arg>
<arg>hostname</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20251020 06:12:57.351" level="INFO">${hostname} = ozonesecure-ha-datanode2-1.ozonesecure-ha_ozone_net</msg>
<status status="PASS" starttime="20251020 06:12:57.351" endtime="20251020 06:12:57.351"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${hostname}' == '${faulty_datanode}'</arg>
<arg>Check Replica Failed</arg>
<arg>${replica}</arg>
<arg>${check_type}</arg>
<arg>${expected_message}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20251020 06:12:57.352" endtime="20251020 06:12:57.352"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${hostname}' != '${faulty_datanode}'</arg>
<arg>Check Replica Passed</arg>
<arg>${replica}</arg>
<arg>${check_type}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Check Replica Passed" library="ozone-debug-keywords">
<arg>${replica}</arg>
<arg>${check_type}</arg>
<kw name="Get From Dictionary" library="Collections">
<var>${checks}</var>
<arg>${replica}</arg>
<arg>checks</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20251020 06:12:57.353" level="INFO">${checks} = [{'type': 'containerState', 'completed': True, 'pass': True, 'failures': []}]</msg>
<status status="PASS" starttime="20251020 06:12:57.353" endtime="20251020 06:12:57.353"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${check}</var>
<arg>${checks}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20251020 06:12:57.353" level="INFO">${check} = {'type': 'containerState', 'completed': True, 'pass': True, 'failures': []}</msg>
<status status="PASS" starttime="20251020 06:12:57.353" endtime="20251020 06:12:57.353"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${check['type']}</arg>
<arg>${check_type}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20251020 06:12:57.353" endtime="20251020 06:12:57.354"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${check['completed']}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20251020 06:12:57.354" endtime="20251020 06:12:57.354"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${check['pass']}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20251020 06:12:57.355" endtime="20251020 06:12:57.355"/>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${check['failures']}</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20251020 06:12:57.356" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20251020 06:12:57.355" endtime="20251020 06:12:57.356"/>
</kw>
<status status="PASS" starttime="20251020 06:12:57.352" endtime="20251020 06:12:57.356"/>
</kw>
<status status="PASS" starttime="20251020 06:12:57.352" endtime="20251020 06:12:57.356"/>
</kw>
<status status="PASS" starttime="20251020 06:12:57.351" endtime="20251020 06:12:57.356"/>
</iter>
<iter>
<var name="${replica}">{'datanode': {'uuid': '836d8d1f-7c50-45e1-9b09-8c26454e142e', 'hostname': 'ozonesecure-ha-datanode3-1.ozonesecure-ha_ozone_net'}, 'checks': [{'type': 'containerState', 'completed': True, 'pass': True,...</var>
<kw name="Get From Dictionary" library="Collections">
<var>${datanode}</var>
<arg>${replica}</arg>
<arg>datanode</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20251020 06:12:57.356" level="INFO">${datanode} = {'uuid': '836d8d1f-7c50-45e1-9b09-8c26454e142e', 'hostname': 'ozonesecure-ha-datanode3-1.ozonesecure-ha_ozone_net'}</msg>
<status status="PASS" starttime="20251020 06:12:57.356" endtime="20251020 06:12:57.356"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${hostname}</var>
<arg>${datanode}</arg>
<arg>hostname</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20251020 06:12:57.357" level="INFO">${hostname} = ozonesecure-ha-datanode3-1.ozonesecure-ha_ozone_net</msg>
<status status="PASS" starttime="20251020 06:12:57.356" endtime="20251020 06:12:57.357"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${hostname}' == '${faulty_datanode}'</arg>
<arg>Check Replica Failed</arg>
<arg>${replica}</arg>
<arg>${check_type}</arg>
<arg>${expected_message}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20251020 06:12:57.357" endtime="20251020 06:12:57.357"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${hostname}' != '${faulty_datanode}'</arg>
<arg>Check Replica Passed</arg>
<arg>${replica}</arg>
<arg>${check_type}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Check Replica Passed" library="ozone-debug-keywords">
<arg>${replica}</arg>
<arg>${check_type}</arg>
<kw name="Get From Dictionary" library="Collections">
<var>${checks}</var>
<arg>${replica}</arg>
<arg>checks</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20251020 06:12:57.358" level="INFO">${checks} = [{'type': 'containerState', 'completed': True, 'pass': True, 'failures': []}]</msg>
<status status="PASS" starttime="20251020 06:12:57.358" endtime="20251020 06:12:57.358"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${check}</var>
<arg>${checks}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20251020 06:12:57.358" level="INFO">${check} = {'type': 'containerState', 'completed': True, 'pass': True, 'failures': []}</msg>
<status status="PASS" starttime="20251020 06:12:57.358" endtime="20251020 06:12:57.358"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${check['type']}</arg>
<arg>${check_type}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20251020 06:12:57.359" endtime="20251020 06:12:57.359"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${check['completed']}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20251020 06:12:57.359" endtime="20251020 06:12:57.360"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${check['pass']}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20251020 06:12:57.360" endtime="20251020 06:12:57.361"/>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${check['failures']}</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20251020 06:12:57.361" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20251020 06:12:57.361" endtime="20251020 06:12:57.361"/>
</kw>
<status status="PASS" starttime="20251020 06:12:57.357" endtime="20251020 06:12:57.361"/>
</kw>
<status status="PASS" starttime="20251020 06:12:57.357" endtime="20251020 06:12:57.361"/>
</kw>
<status status="PASS" starttime="20251020 06:12:57.356" endtime="20251020 06:12:57.362"/>
</iter>
<status status="PASS" starttime="20251020 06:12:57.345" endtime="20251020 06:12:57.362"/>
</for>
<status status="PASS" starttime="20251020 06:12:57.344" endtime="20251020 06:12:57.362"/>
</kw>
<kw name="Remove Byteman Rule" library="BytemanLibrary">
<arg>${FAULT_INJ_DATANODE}</arg>
<arg>${rule_file}</arg>
<doc>Remove Byteman rule for specific component</doc>
<msg timestamp="20251020 06:12:57.493" level="INFO">Remove rule /tmp/container-state-UNHEALTHY.btm for datanode5 successful.</msg>
<status status="PASS" starttime="20251020 06:12:57.362" endtime="20251020 06:12:57.494"/>
</kw>
<status status="PASS" starttime="20251020 06:12:50.702" endtime="20251020 06:12:57.494"/>
</kw>
<status status="PASS" starttime="20251020 06:12:50.702" endtime="20251020 06:12:57.494"/>
</test>
<test id="s1-s8-t2" name="Verify Container State With Deleted Container Replica" line="54">
<kw name="Verify Container State with Rule">
<arg>DELETED</arg>
<kw name="Create Container State Rule">
<var>${rule_file}</var>
<arg>${expected_state}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${rule_file}</var>
<arg>/tmp/container-state-${state}.btm</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20251020 06:12:57.497" level="INFO">${rule_file} = /tmp/container-state-DELETED.btm</msg>
<status status="PASS" starttime="20251020 06:12:57.496" endtime="20251020 06:12:57.497"/>
</kw>
<kw name="Execute" library="os">
<arg>sed 's/STATE_PLACEHOLDER/${state}/g' ${TEMPLATE_RULE} &gt; ${rule_file}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20251020 06:12:57.501" level="INFO">Running command 'sed 's/STATE_PLACEHOLDER/DELETED/g' /opt/hadoop/share/ozone/byteman/container-state-template.btm &gt; /tmp/container-state-DELETED.btm'.</msg>
<msg timestamp="20251020 06:12:57.505" level="INFO">${rc} = 0</msg>
<msg timestamp="20251020 06:12:57.505" level="INFO">${output} = </msg>
<status status="PASS" starttime="20251020 06:12:57.498" endtime="20251020 06:12:57.505"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20251020 06:12:57.505" level="INFO"/>
<status status="PASS" starttime="20251020 06:12:57.505" endtime="20251020 06:12:57.506"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20251020 06:12:57.506" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20251020 06:12:57.506" endtime="20251020 06:12:57.506"/>
</kw>
<status status="PASS" starttime="20251020 06:12:57.497" endtime="20251020 06:12:57.506"/>
</kw>
<msg timestamp="20251020 06:12:57.506" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20251020 06:12:57.497" endtime="20251020 06:12:57.506"/>
</kw>
<status status="PASS" starttime="20251020 06:12:57.497" endtime="20251020 06:12:57.506"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${rule_file}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20251020 06:12:57.507" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20251020 06:12:57.507" endtime="20251020 06:12:57.507"/>
</kw>
<msg timestamp="20251020 06:12:57.507" level="INFO">${rule_file} = /tmp/container-state-DELETED.btm</msg>
<status status="PASS" starttime="20251020 06:12:57.496" endtime="20251020 06:12:57.507"/>
</kw>
<kw name="Add Byteman Rule" library="BytemanLibrary">
<arg>${FAULT_INJ_DATANODE}</arg>
<arg>${rule_file}</arg>
<doc>Add Byteman rule into specific component</doc>
<msg timestamp="20251020 06:12:57.655" level="INFO">Add rule /tmp/container-state-DELETED.btm for datanode5 successful.</msg>
<status status="PASS" starttime="20251020 06:12:57.507" endtime="20251020 06:12:57.655"/>
</kw>
<kw name="List Byteman Rules" library="BytemanLibrary">
<arg>${FAULT_INJ_DATANODE}</arg>
<doc>List Active Byteman rules for specific component and return file list</doc>
<msg timestamp="20251020 06:12:57.741" level="INFO">List rules for datanode5 successful.</msg>
<msg timestamp="20251020 06:12:57.741" level="INFO">Active rules in datanode5:
# File /tmp/container-state-DELETED.btm line 20</msg>
<status status="PASS" starttime="20251020 06:12:57.656" endtime="20251020 06:12:57.741"/>
</kw>
<kw name="Execute replicas verify container state debug tool" library="ozone-debug-keywords">
<var>${output}</var>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone debug replicas verify --container-state o3://${OM_SERVICE_ID}/${VOLUME}/${BUCKET}/${TESTFILE} --all-results</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20251020 06:12:57.746" level="INFO">Running command 'ozone debug replicas verify --container-state o3://omservice/cli-debug-volume8607/cli-debug-bucket/testfile --all-results 2&gt;&amp;1'.</msg>
<msg timestamp="20251020 06:13:04.044" level="INFO">${rc} = 0</msg>
<msg timestamp="20251020 06:13:04.044" level="INFO">${output} = {
  "keys" : [ {
    "volumeName" : "cli-debug-volume8607",
    "bucketName" : "cli-debug-bucket",
    "name" : "testfile",
    "blocks" : [ {
      "containerID" : 2,
      "blockID" : 11581689692160...</msg>
<status status="PASS" starttime="20251020 06:12:57.743" endtime="20251020 06:13:04.044"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20251020 06:13:04.045" level="INFO">{
  "keys" : [ {
    "volumeName" : "cli-debug-volume8607",
    "bucketName" : "cli-debug-bucket",
    "name" : "testfile",
    "blocks" : [ {
      "containerID" : 2,
      "blockID" : 115816896921600101,
      "replicas" : [ {
        "datanode" : {
          "uuid" : "2eb54adf-376a-47d4-9ed3-8f3fdb613de1",
          "hostname" : "ozonesecure-ha-datanode5-1.ozonesecure-ha_ozone_net"
        },
        "checks" : [ {
          "type" : "containerState",
          "completed" : true,
          "pass" : false,
          "failures" : [ {
            "message" : "Replica state is DELETED, Container state in SCM is CLOSED"
          } ]
        } ],
        "replicaIndex" : 0
      }, {
        "datanode" : {
          "uuid" : "5091ac28-2575-4aeb-a0db-027eb43415af",
          "hostname" : "ozonesecure-ha-datanode2-1.ozonesecure-ha_ozone_net"
        },
        "checks" : [ {
          "type" : "containerState",
          "completed" : true,
          "pass" : true,
          "failures" : [ ]
        } ],
        "replicaIndex" : 0
      }, {
        "datanode" : {
          "uuid" : "836d8d1f-7c50-45e1-9b09-8c26454e142e",
          "hostname" : "ozonesecure-ha-datanode3-1.ozonesecure-ha_ozone_net"
        },
        "checks" : [ {
          "type" : "containerState",
          "completed" : true,
          "pass" : true,
          "failures" : [ ]
        } ],
        "replicaIndex" : 0
      } ]
    } ],
    "pass" : false
  } ],
  "pass" : false
}

***************************************************
REPLICA VERIFICATION SUMMARY
***************************************************
Status: Completed with failures
Verification Scope: Key
Verification Types: containerState
URI: o3://omservice/cli-debug-volume8607/cli-debug-bucket/testfile

Number of Volumes processed: 0
Number of Buckets processed: 0
Number of Keys processed: 1

Keys passed verification: 0
Keys failed verification: 1

Keys failed containerState verification: 1
Note: A key may fail multiple verification types, so total may exceed overall failures.

Total Execution time: 00:00:02,240
***************************************************</msg>
<status status="PASS" starttime="20251020 06:13:04.045" endtime="20251020 06:13:04.045"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20251020 06:13:04.046" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20251020 06:13:04.045" endtime="20251020 06:13:04.046"/>
</kw>
<status status="PASS" starttime="20251020 06:12:57.743" endtime="20251020 06:13:04.046"/>
</kw>
<msg timestamp="20251020 06:13:04.046" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20251020 06:12:57.743" endtime="20251020 06:13:04.046"/>
</kw>
<msg timestamp="20251020 06:13:04.046" level="INFO">${output} = {
  "keys" : [ {
    "volumeName" : "cli-debug-volume8607",
    "bucketName" : "cli-debug-bucket",
    "name" : "testfile",
    "blocks" : [ {
      "containerID" : 2,
      "blockID" : 11581689692160...</msg>
<status status="PASS" starttime="20251020 06:12:57.742" endtime="20251020 06:13:04.046"/>
</kw>
<msg timestamp="20251020 06:13:04.047" level="INFO">${output} = {
  "keys" : [ {
    "volumeName" : "cli-debug-volume8607",
    "bucketName" : "cli-debug-bucket",
    "name" : "testfile",
    "blocks" : [ {
      "containerID" : 2,
      "blockID" : 11581689692160...</msg>
<status status="PASS" starttime="20251020 06:12:57.741" endtime="20251020 06:13:04.047"/>
</kw>
<kw name="Parse replicas verify JSON output" library="ozone-debug-keywords">
<var>${json}</var>
<arg>${output}</arg>
<kw name="Evaluate" library="BuiltIn">
<var>${json_split}</var>
<arg>'''${output}'''.split('***')[0].strip()</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20251020 06:13:04.047" level="INFO">${json_split} = {
  "keys" : [ {
    "volumeName" : "cli-debug-volume8607",
    "bucketName" : "cli-debug-bucket",
    "name" : "testfile",
    "blocks" : [ {
      "containerID" : 2,
      "blockID" : 11581689692160...</msg>
<status status="PASS" starttime="20251020 06:13:04.047" endtime="20251020 06:13:04.047"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${json}</var>
<arg>json.loads('''${json_split}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20251020 06:13:04.048" level="INFO">${json} = {'keys': [{'volumeName': 'cli-debug-volume8607', 'bucketName': 'cli-debug-bucket', 'name': 'testfile', 'blocks': [{'containerID': 2, 'blockID': 115816896921600101, 'replicas': [{'datanode': {'uuid': '...</msg>
<status status="PASS" starttime="20251020 06:13:04.048" endtime="20251020 06:13:04.048"/>
</kw>
<msg timestamp="20251020 06:13:04.048" level="INFO">${json} = {'keys': [{'volumeName': 'cli-debug-volume8607', 'bucketName': 'cli-debug-bucket', 'name': 'testfile', 'blocks': [{'containerID': 2, 'blockID': 115816896921600101, 'replicas': [{'datanode': {'uuid': '...</msg>
<status status="PASS" starttime="20251020 06:13:04.047" endtime="20251020 06:13:04.048"/>
</kw>
<kw name="Check to Verify Replicas" library="ozone-debug-keywords">
<arg>${json}</arg>
<arg>${CHECK_TYPE}</arg>
<arg>${DATANODE}</arg>
<arg>Replica state is ${expected_state}</arg>
<kw name="Get From Dictionary" library="Collections">
<var>${replicas}</var>
<arg>${json['keys'][0]['blocks'][0]}</arg>
<arg>replicas</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20251020 06:13:04.050" level="INFO">${replicas} = [{'datanode': {'uuid': '2eb54adf-376a-47d4-9ed3-8f3fdb613de1', 'hostname': 'ozonesecure-ha-datanode5-1.ozonesecure-ha_ozone_net'}, 'checks': [{'type': 'containerState', 'completed': True, 'pass': Fals...</msg>
<status status="PASS" starttime="20251020 06:13:04.049" endtime="20251020 06:13:04.050"/>
</kw>
<for flavor="IN">
<var>${replica}</var>
<value>@{replicas}</value>
<iter>
<var name="${replica}">{'datanode': {'uuid': '2eb54adf-376a-47d4-9ed3-8f3fdb613de1', 'hostname': 'ozonesecure-ha-datanode5-1.ozonesecure-ha_ozone_net'}, 'checks': [{'type': 'containerState', 'completed': True, 'pass': False...</var>
<kw name="Get From Dictionary" library="Collections">
<var>${datanode}</var>
<arg>${replica}</arg>
<arg>datanode</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20251020 06:13:04.050" level="INFO">${datanode} = {'uuid': '2eb54adf-376a-47d4-9ed3-8f3fdb613de1', 'hostname': 'ozonesecure-ha-datanode5-1.ozonesecure-ha_ozone_net'}</msg>
<status status="PASS" starttime="20251020 06:13:04.050" endtime="20251020 06:13:04.050"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${hostname}</var>
<arg>${datanode}</arg>
<arg>hostname</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20251020 06:13:04.051" level="INFO">${hostname} = ozonesecure-ha-datanode5-1.ozonesecure-ha_ozone_net</msg>
<status status="PASS" starttime="20251020 06:13:04.050" endtime="20251020 06:13:04.051"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${hostname}' == '${faulty_datanode}'</arg>
<arg>Check Replica Failed</arg>
<arg>${replica}</arg>
<arg>${check_type}</arg>
<arg>${expected_message}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Check Replica Failed" library="ozone-debug-keywords">
<arg>${replica}</arg>
<arg>${check_type}</arg>
<arg>${expected_message}</arg>
<kw name="Get From Dictionary" library="Collections">
<var>${checks}</var>
<arg>${replica}</arg>
<arg>checks</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20251020 06:13:04.052" level="INFO">${checks} = [{'type': 'containerState', 'completed': True, 'pass': False, 'failures': [{'message': 'Replica state is DELETED, Container state in SCM is CLOSED'}]}]</msg>
<status status="PASS" starttime="20251020 06:13:04.051" endtime="20251020 06:13:04.052"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${check}</var>
<arg>${checks}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20251020 06:13:04.052" level="INFO">${check} = {'type': 'containerState', 'completed': True, 'pass': False, 'failures': [{'message': 'Replica state is DELETED, Container state in SCM is CLOSED'}]}</msg>
<status status="PASS" starttime="20251020 06:13:04.052" endtime="20251020 06:13:04.052"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${check['type']}</arg>
<arg>${check_type}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20251020 06:13:04.052" endtime="20251020 06:13:04.053"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${check['pass']}</arg>
<arg>${False}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20251020 06:13:04.053" endtime="20251020 06:13:04.054"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${check['failures'][0]['message']}</arg>
<arg>${expected_message}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20251020 06:13:04.054" endtime="20251020 06:13:04.054"/>
</kw>
<status status="PASS" starttime="20251020 06:13:04.051" endtime="20251020 06:13:04.054"/>
</kw>
<status status="PASS" starttime="20251020 06:13:04.051" endtime="20251020 06:13:04.054"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${hostname}' != '${faulty_datanode}'</arg>
<arg>Check Replica Passed</arg>
<arg>${replica}</arg>
<arg>${check_type}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20251020 06:13:04.055" endtime="20251020 06:13:04.055"/>
</kw>
<status status="PASS" starttime="20251020 06:13:04.050" endtime="20251020 06:13:04.055"/>
</iter>
<iter>
<var name="${replica}">{'datanode': {'uuid': '5091ac28-2575-4aeb-a0db-027eb43415af', 'hostname': 'ozonesecure-ha-datanode2-1.ozonesecure-ha_ozone_net'}, 'checks': [{'type': 'containerState', 'completed': True, 'pass': True,...</var>
<kw name="Get From Dictionary" library="Collections">
<var>${datanode}</var>
<arg>${replica}</arg>
<arg>datanode</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20251020 06:13:04.055" level="INFO">${datanode} = {'uuid': '5091ac28-2575-4aeb-a0db-027eb43415af', 'hostname': 'ozonesecure-ha-datanode2-1.ozonesecure-ha_ozone_net'}</msg>
<status status="PASS" starttime="20251020 06:13:04.055" endtime="20251020 06:13:04.055"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${hostname}</var>
<arg>${datanode}</arg>
<arg>hostname</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20251020 06:13:04.055" level="INFO">${hostname} = ozonesecure-ha-datanode2-1.ozonesecure-ha_ozone_net</msg>
<status status="PASS" starttime="20251020 06:13:04.055" endtime="20251020 06:13:04.056"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${hostname}' == '${faulty_datanode}'</arg>
<arg>Check Replica Failed</arg>
<arg>${replica}</arg>
<arg>${check_type}</arg>
<arg>${expected_message}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20251020 06:13:04.056" endtime="20251020 06:13:04.056"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${hostname}' != '${faulty_datanode}'</arg>
<arg>Check Replica Passed</arg>
<arg>${replica}</arg>
<arg>${check_type}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Check Replica Passed" library="ozone-debug-keywords">
<arg>${replica}</arg>
<arg>${check_type}</arg>
<kw name="Get From Dictionary" library="Collections">
<var>${checks}</var>
<arg>${replica}</arg>
<arg>checks</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20251020 06:13:04.057" level="INFO">${checks} = [{'type': 'containerState', 'completed': True, 'pass': True, 'failures': []}]</msg>
<status status="PASS" starttime="20251020 06:13:04.057" endtime="20251020 06:13:04.057"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${check}</var>
<arg>${checks}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20251020 06:13:04.057" level="INFO">${check} = {'type': 'containerState', 'completed': True, 'pass': True, 'failures': []}</msg>
<status status="PASS" starttime="20251020 06:13:04.057" endtime="20251020 06:13:04.057"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${check['type']}</arg>
<arg>${check_type}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20251020 06:13:04.057" endtime="20251020 06:13:04.058"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${check['completed']}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20251020 06:13:04.058" endtime="20251020 06:13:04.058"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${check['pass']}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20251020 06:13:04.059" endtime="20251020 06:13:04.059"/>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${check['failures']}</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20251020 06:13:04.060" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20251020 06:13:04.059" endtime="20251020 06:13:04.060"/>
</kw>
<status status="PASS" starttime="20251020 06:13:04.056" endtime="20251020 06:13:04.060"/>
</kw>
<status status="PASS" starttime="20251020 06:13:04.056" endtime="20251020 06:13:04.060"/>
</kw>
<status status="PASS" starttime="20251020 06:13:04.055" endtime="20251020 06:13:04.060"/>
</iter>
<iter>
<var name="${replica}">{'datanode': {'uuid': '836d8d1f-7c50-45e1-9b09-8c26454e142e', 'hostname': 'ozonesecure-ha-datanode3-1.ozonesecure-ha_ozone_net'}, 'checks': [{'type': 'containerState', 'completed': True, 'pass': True,...</var>
<kw name="Get From Dictionary" library="Collections">
<var>${datanode}</var>
<arg>${replica}</arg>
<arg>datanode</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20251020 06:13:04.060" level="INFO">${datanode} = {'uuid': '836d8d1f-7c50-45e1-9b09-8c26454e142e', 'hostname': 'ozonesecure-ha-datanode3-1.ozonesecure-ha_ozone_net'}</msg>
<status status="PASS" starttime="20251020 06:13:04.060" endtime="20251020 06:13:04.060"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${hostname}</var>
<arg>${datanode}</arg>
<arg>hostname</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20251020 06:13:04.061" level="INFO">${hostname} = ozonesecure-ha-datanode3-1.ozonesecure-ha_ozone_net</msg>
<status status="PASS" starttime="20251020 06:13:04.060" endtime="20251020 06:13:04.061"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${hostname}' == '${faulty_datanode}'</arg>
<arg>Check Replica Failed</arg>
<arg>${replica}</arg>
<arg>${check_type}</arg>
<arg>${expected_message}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20251020 06:13:04.061" endtime="20251020 06:13:04.061"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${hostname}' != '${faulty_datanode}'</arg>
<arg>Check Replica Passed</arg>
<arg>${replica}</arg>
<arg>${check_type}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Check Replica Passed" library="ozone-debug-keywords">
<arg>${replica}</arg>
<arg>${check_type}</arg>
<kw name="Get From Dictionary" library="Collections">
<var>${checks}</var>
<arg>${replica}</arg>
<arg>checks</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20251020 06:13:04.062" level="INFO">${checks} = [{'type': 'containerState', 'completed': True, 'pass': True, 'failures': []}]</msg>
<status status="PASS" starttime="20251020 06:13:04.062" endtime="20251020 06:13:04.062"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${check}</var>
<arg>${checks}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20251020 06:13:04.062" level="INFO">${check} = {'type': 'containerState', 'completed': True, 'pass': True, 'failures': []}</msg>
<status status="PASS" starttime="20251020 06:13:04.062" endtime="20251020 06:13:04.062"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${check['type']}</arg>
<arg>${check_type}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20251020 06:13:04.062" endtime="20251020 06:13:04.063"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${check['completed']}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20251020 06:13:04.063" endtime="20251020 06:13:04.064"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${check['pass']}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20251020 06:13:04.064" endtime="20251020 06:13:04.065"/>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${check['failures']}</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20251020 06:13:04.066" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20251020 06:13:04.065" endtime="20251020 06:13:04.066"/>
</kw>
<status status="PASS" starttime="20251020 06:13:04.061" endtime="20251020 06:13:04.066"/>
</kw>
<status status="PASS" starttime="20251020 06:13:04.061" endtime="20251020 06:13:04.066"/>
</kw>
<status status="PASS" starttime="20251020 06:13:04.060" endtime="20251020 06:13:04.066"/>
</iter>
<status status="PASS" starttime="20251020 06:13:04.050" endtime="20251020 06:13:04.066"/>
</for>
<status status="PASS" starttime="20251020 06:13:04.048" endtime="20251020 06:13:04.066"/>
</kw>
<kw name="Remove Byteman Rule" library="BytemanLibrary">
<arg>${FAULT_INJ_DATANODE}</arg>
<arg>${rule_file}</arg>
<doc>Remove Byteman rule for specific component</doc>
<msg timestamp="20251020 06:13:04.193" level="INFO">Remove rule /tmp/container-state-DELETED.btm for datanode5 successful.</msg>
<status status="PASS" starttime="20251020 06:13:04.066" endtime="20251020 06:13:04.194"/>
</kw>
<status status="PASS" starttime="20251020 06:12:57.495" endtime="20251020 06:13:04.194"/>
</kw>
<status status="PASS" starttime="20251020 06:12:57.495" endtime="20251020 06:13:04.194"/>
</test>
<test id="s1-s8-t3" name="Verify Container State With Invalid Container Replica" line="57">
<kw name="Verify Container State with Rule">
<arg>INVALID</arg>
<kw name="Create Container State Rule">
<var>${rule_file}</var>
<arg>${expected_state}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${rule_file}</var>
<arg>/tmp/container-state-${state}.btm</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20251020 06:13:04.197" level="INFO">${rule_file} = /tmp/container-state-INVALID.btm</msg>
<status status="PASS" starttime="20251020 06:13:04.197" endtime="20251020 06:13:04.197"/>
</kw>
<kw name="Execute" library="os">
<arg>sed 's/STATE_PLACEHOLDER/${state}/g' ${TEMPLATE_RULE} &gt; ${rule_file}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20251020 06:13:04.201" level="INFO">Running command 'sed 's/STATE_PLACEHOLDER/INVALID/g' /opt/hadoop/share/ozone/byteman/container-state-template.btm &gt; /tmp/container-state-INVALID.btm'.</msg>
<msg timestamp="20251020 06:13:04.205" level="INFO">${rc} = 0</msg>
<msg timestamp="20251020 06:13:04.205" level="INFO">${output} = </msg>
<status status="PASS" starttime="20251020 06:13:04.198" endtime="20251020 06:13:04.205"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20251020 06:13:04.205" level="INFO"/>
<status status="PASS" starttime="20251020 06:13:04.205" endtime="20251020 06:13:04.205"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20251020 06:13:04.206" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20251020 06:13:04.205" endtime="20251020 06:13:04.206"/>
</kw>
<status status="PASS" starttime="20251020 06:13:04.198" endtime="20251020 06:13:04.206"/>
</kw>
<msg timestamp="20251020 06:13:04.206" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20251020 06:13:04.198" endtime="20251020 06:13:04.206"/>
</kw>
<status status="PASS" starttime="20251020 06:13:04.197" endtime="20251020 06:13:04.206"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${rule_file}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20251020 06:13:04.207" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20251020 06:13:04.206" endtime="20251020 06:13:04.207"/>
</kw>
<msg timestamp="20251020 06:13:04.207" level="INFO">${rule_file} = /tmp/container-state-INVALID.btm</msg>
<status status="PASS" starttime="20251020 06:13:04.196" endtime="20251020 06:13:04.207"/>
</kw>
<kw name="Add Byteman Rule" library="BytemanLibrary">
<arg>${FAULT_INJ_DATANODE}</arg>
<arg>${rule_file}</arg>
<doc>Add Byteman rule into specific component</doc>
<msg timestamp="20251020 06:13:04.352" level="INFO">Add rule /tmp/container-state-INVALID.btm for datanode5 successful.</msg>
<status status="PASS" starttime="20251020 06:13:04.207" endtime="20251020 06:13:04.353"/>
</kw>
<kw name="List Byteman Rules" library="BytemanLibrary">
<arg>${FAULT_INJ_DATANODE}</arg>
<doc>List Active Byteman rules for specific component and return file list</doc>
<msg timestamp="20251020 06:13:04.437" level="INFO">List rules for datanode5 successful.</msg>
<msg timestamp="20251020 06:13:04.438" level="INFO">Active rules in datanode5:
# File /tmp/container-state-INVALID.btm line 20</msg>
<status status="PASS" starttime="20251020 06:13:04.353" endtime="20251020 06:13:04.438"/>
</kw>
<kw name="Execute replicas verify container state debug tool" library="ozone-debug-keywords">
<var>${output}</var>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone debug replicas verify --container-state o3://${OM_SERVICE_ID}/${VOLUME}/${BUCKET}/${TESTFILE} --all-results</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20251020 06:13:04.443" level="INFO">Running command 'ozone debug replicas verify --container-state o3://omservice/cli-debug-volume8607/cli-debug-bucket/testfile --all-results 2&gt;&amp;1'.</msg>
<msg timestamp="20251020 06:13:10.480" level="INFO">${rc} = 0</msg>
<msg timestamp="20251020 06:13:10.481" level="INFO">${output} = {
  "keys" : [ {
    "volumeName" : "cli-debug-volume8607",
    "bucketName" : "cli-debug-bucket",
    "name" : "testfile",
    "blocks" : [ {
      "containerID" : 2,
      "blockID" : 11581689692160...</msg>
<status status="PASS" starttime="20251020 06:13:04.440" endtime="20251020 06:13:10.481"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20251020 06:13:10.482" level="INFO">{
  "keys" : [ {
    "volumeName" : "cli-debug-volume8607",
    "bucketName" : "cli-debug-bucket",
    "name" : "testfile",
    "blocks" : [ {
      "containerID" : 2,
      "blockID" : 115816896921600101,
      "replicas" : [ {
        "datanode" : {
          "uuid" : "2eb54adf-376a-47d4-9ed3-8f3fdb613de1",
          "hostname" : "ozonesecure-ha-datanode5-1.ozonesecure-ha_ozone_net"
        },
        "checks" : [ {
          "type" : "containerState",
          "completed" : true,
          "pass" : false,
          "failures" : [ {
            "message" : "Replica state is INVALID, Container state in SCM is CLOSED"
          } ]
        } ],
        "replicaIndex" : 0
      }, {
        "datanode" : {
          "uuid" : "5091ac28-2575-4aeb-a0db-027eb43415af",
          "hostname" : "ozonesecure-ha-datanode2-1.ozonesecure-ha_ozone_net"
        },
        "checks" : [ {
          "type" : "containerState",
          "completed" : true,
          "pass" : true,
          "failures" : [ ]
        } ],
        "replicaIndex" : 0
      }, {
        "datanode" : {
          "uuid" : "836d8d1f-7c50-45e1-9b09-8c26454e142e",
          "hostname" : "ozonesecure-ha-datanode3-1.ozonesecure-ha_ozone_net"
        },
        "checks" : [ {
          "type" : "containerState",
          "completed" : true,
          "pass" : true,
          "failures" : [ ]
        } ],
        "replicaIndex" : 0
      } ]
    } ],
    "pass" : false
  } ],
  "pass" : false
}

***************************************************
REPLICA VERIFICATION SUMMARY
***************************************************
Status: Completed with failures
Verification Scope: Key
Verification Types: containerState
URI: o3://omservice/cli-debug-volume8607/cli-debug-bucket/testfile

Number of Volumes processed: 0
Number of Buckets processed: 0
Number of Keys processed: 1

Keys passed verification: 0
Keys failed verification: 1

Keys failed containerState verification: 1
Note: A key may fail multiple verification types, so total may exceed overall failures.

Total Execution time: 00:00:02,247
***************************************************</msg>
<status status="PASS" starttime="20251020 06:13:10.481" endtime="20251020 06:13:10.482"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20251020 06:13:10.482" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20251020 06:13:10.482" endtime="20251020 06:13:10.482"/>
</kw>
<status status="PASS" starttime="20251020 06:13:04.440" endtime="20251020 06:13:10.482"/>
</kw>
<msg timestamp="20251020 06:13:10.482" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20251020 06:13:04.440" endtime="20251020 06:13:10.483"/>
</kw>
<msg timestamp="20251020 06:13:10.483" level="INFO">${output} = {
  "keys" : [ {
    "volumeName" : "cli-debug-volume8607",
    "bucketName" : "cli-debug-bucket",
    "name" : "testfile",
    "blocks" : [ {
      "containerID" : 2,
      "blockID" : 11581689692160...</msg>
<status status="PASS" starttime="20251020 06:13:04.439" endtime="20251020 06:13:10.483"/>
</kw>
<msg timestamp="20251020 06:13:10.483" level="INFO">${output} = {
  "keys" : [ {
    "volumeName" : "cli-debug-volume8607",
    "bucketName" : "cli-debug-bucket",
    "name" : "testfile",
    "blocks" : [ {
      "containerID" : 2,
      "blockID" : 11581689692160...</msg>
<status status="PASS" starttime="20251020 06:13:04.438" endtime="20251020 06:13:10.483"/>
</kw>
<kw name="Parse replicas verify JSON output" library="ozone-debug-keywords">
<var>${json}</var>
<arg>${output}</arg>
<kw name="Evaluate" library="BuiltIn">
<var>${json_split}</var>
<arg>'''${output}'''.split('***')[0].strip()</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20251020 06:13:10.484" level="INFO">${json_split} = {
  "keys" : [ {
    "volumeName" : "cli-debug-volume8607",
    "bucketName" : "cli-debug-bucket",
    "name" : "testfile",
    "blocks" : [ {
      "containerID" : 2,
      "blockID" : 11581689692160...</msg>
<status status="PASS" starttime="20251020 06:13:10.484" endtime="20251020 06:13:10.484"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${json}</var>
<arg>json.loads('''${json_split}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20251020 06:13:10.485" level="INFO">${json} = {'keys': [{'volumeName': 'cli-debug-volume8607', 'bucketName': 'cli-debug-bucket', 'name': 'testfile', 'blocks': [{'containerID': 2, 'blockID': 115816896921600101, 'replicas': [{'datanode': {'uuid': '...</msg>
<status status="PASS" starttime="20251020 06:13:10.484" endtime="20251020 06:13:10.485"/>
</kw>
<msg timestamp="20251020 06:13:10.485" level="INFO">${json} = {'keys': [{'volumeName': 'cli-debug-volume8607', 'bucketName': 'cli-debug-bucket', 'name': 'testfile', 'blocks': [{'containerID': 2, 'blockID': 115816896921600101, 'replicas': [{'datanode': {'uuid': '...</msg>
<status status="PASS" starttime="20251020 06:13:10.483" endtime="20251020 06:13:10.485"/>
</kw>
<kw name="Check to Verify Replicas" library="ozone-debug-keywords">
<arg>${json}</arg>
<arg>${CHECK_TYPE}</arg>
<arg>${DATANODE}</arg>
<arg>Replica state is ${expected_state}</arg>
<kw name="Get From Dictionary" library="Collections">
<var>${replicas}</var>
<arg>${json['keys'][0]['blocks'][0]}</arg>
<arg>replicas</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20251020 06:13:10.486" level="INFO">${replicas} = [{'datanode': {'uuid': '2eb54adf-376a-47d4-9ed3-8f3fdb613de1', 'hostname': 'ozonesecure-ha-datanode5-1.ozonesecure-ha_ozone_net'}, 'checks': [{'type': 'containerState', 'completed': True, 'pass': Fals...</msg>
<status status="PASS" starttime="20251020 06:13:10.485" endtime="20251020 06:13:10.486"/>
</kw>
<for flavor="IN">
<var>${replica}</var>
<value>@{replicas}</value>
<iter>
<var name="${replica}">{'datanode': {'uuid': '2eb54adf-376a-47d4-9ed3-8f3fdb613de1', 'hostname': 'ozonesecure-ha-datanode5-1.ozonesecure-ha_ozone_net'}, 'checks': [{'type': 'containerState', 'completed': True, 'pass': False...</var>
<kw name="Get From Dictionary" library="Collections">
<var>${datanode}</var>
<arg>${replica}</arg>
<arg>datanode</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20251020 06:13:10.487" level="INFO">${datanode} = {'uuid': '2eb54adf-376a-47d4-9ed3-8f3fdb613de1', 'hostname': 'ozonesecure-ha-datanode5-1.ozonesecure-ha_ozone_net'}</msg>
<status status="PASS" starttime="20251020 06:13:10.487" endtime="20251020 06:13:10.487"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${hostname}</var>
<arg>${datanode}</arg>
<arg>hostname</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20251020 06:13:10.487" level="INFO">${hostname} = ozonesecure-ha-datanode5-1.ozonesecure-ha_ozone_net</msg>
<status status="PASS" starttime="20251020 06:13:10.487" endtime="20251020 06:13:10.487"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${hostname}' == '${faulty_datanode}'</arg>
<arg>Check Replica Failed</arg>
<arg>${replica}</arg>
<arg>${check_type}</arg>
<arg>${expected_message}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Check Replica Failed" library="ozone-debug-keywords">
<arg>${replica}</arg>
<arg>${check_type}</arg>
<arg>${expected_message}</arg>
<kw name="Get From Dictionary" library="Collections">
<var>${checks}</var>
<arg>${replica}</arg>
<arg>checks</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20251020 06:13:10.488" level="INFO">${checks} = [{'type': 'containerState', 'completed': True, 'pass': False, 'failures': [{'message': 'Replica state is INVALID, Container state in SCM is CLOSED'}]}]</msg>
<status status="PASS" starttime="20251020 06:13:10.488" endtime="20251020 06:13:10.489"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${check}</var>
<arg>${checks}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20251020 06:13:10.489" level="INFO">${check} = {'type': 'containerState', 'completed': True, 'pass': False, 'failures': [{'message': 'Replica state is INVALID, Container state in SCM is CLOSED'}]}</msg>
<status status="PASS" starttime="20251020 06:13:10.489" endtime="20251020 06:13:10.489"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${check['type']}</arg>
<arg>${check_type}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20251020 06:13:10.489" endtime="20251020 06:13:10.490"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${check['pass']}</arg>
<arg>${False}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20251020 06:13:10.490" endtime="20251020 06:13:10.491"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${check['failures'][0]['message']}</arg>
<arg>${expected_message}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20251020 06:13:10.491" endtime="20251020 06:13:10.491"/>
</kw>
<status status="PASS" starttime="20251020 06:13:10.488" endtime="20251020 06:13:10.491"/>
</kw>
<status status="PASS" starttime="20251020 06:13:10.488" endtime="20251020 06:13:10.492"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${hostname}' != '${faulty_datanode}'</arg>
<arg>Check Replica Passed</arg>
<arg>${replica}</arg>
<arg>${check_type}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20251020 06:13:10.492" endtime="20251020 06:13:10.492"/>
</kw>
<status status="PASS" starttime="20251020 06:13:10.486" endtime="20251020 06:13:10.492"/>
</iter>
<iter>
<var name="${replica}">{'datanode': {'uuid': '5091ac28-2575-4aeb-a0db-027eb43415af', 'hostname': 'ozonesecure-ha-datanode2-1.ozonesecure-ha_ozone_net'}, 'checks': [{'type': 'containerState', 'completed': True, 'pass': True,...</var>
<kw name="Get From Dictionary" library="Collections">
<var>${datanode}</var>
<arg>${replica}</arg>
<arg>datanode</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20251020 06:13:10.492" level="INFO">${datanode} = {'uuid': '5091ac28-2575-4aeb-a0db-027eb43415af', 'hostname': 'ozonesecure-ha-datanode2-1.ozonesecure-ha_ozone_net'}</msg>
<status status="PASS" starttime="20251020 06:13:10.492" endtime="20251020 06:13:10.493"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${hostname}</var>
<arg>${datanode}</arg>
<arg>hostname</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20251020 06:13:10.493" level="INFO">${hostname} = ozonesecure-ha-datanode2-1.ozonesecure-ha_ozone_net</msg>
<status status="PASS" starttime="20251020 06:13:10.493" endtime="20251020 06:13:10.493"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${hostname}' == '${faulty_datanode}'</arg>
<arg>Check Replica Failed</arg>
<arg>${replica}</arg>
<arg>${check_type}</arg>
<arg>${expected_message}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20251020 06:13:10.493" endtime="20251020 06:13:10.493"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${hostname}' != '${faulty_datanode}'</arg>
<arg>Check Replica Passed</arg>
<arg>${replica}</arg>
<arg>${check_type}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Check Replica Passed" library="ozone-debug-keywords">
<arg>${replica}</arg>
<arg>${check_type}</arg>
<kw name="Get From Dictionary" library="Collections">
<var>${checks}</var>
<arg>${replica}</arg>
<arg>checks</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20251020 06:13:10.494" level="INFO">${checks} = [{'type': 'containerState', 'completed': True, 'pass': True, 'failures': []}]</msg>
<status status="PASS" starttime="20251020 06:13:10.494" endtime="20251020 06:13:10.494"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${check}</var>
<arg>${checks}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20251020 06:13:10.495" level="INFO">${check} = {'type': 'containerState', 'completed': True, 'pass': True, 'failures': []}</msg>
<status status="PASS" starttime="20251020 06:13:10.494" endtime="20251020 06:13:10.495"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${check['type']}</arg>
<arg>${check_type}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20251020 06:13:10.495" endtime="20251020 06:13:10.495"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${check['completed']}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20251020 06:13:10.496" endtime="20251020 06:13:10.496"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${check['pass']}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20251020 06:13:10.496" endtime="20251020 06:13:10.497"/>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${check['failures']}</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20251020 06:13:10.498" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20251020 06:13:10.497" endtime="20251020 06:13:10.498"/>
</kw>
<status status="PASS" starttime="20251020 06:13:10.494" endtime="20251020 06:13:10.498"/>
</kw>
<status status="PASS" starttime="20251020 06:13:10.493" endtime="20251020 06:13:10.498"/>
</kw>
<status status="PASS" starttime="20251020 06:13:10.492" endtime="20251020 06:13:10.498"/>
</iter>
<iter>
<var name="${replica}">{'datanode': {'uuid': '836d8d1f-7c50-45e1-9b09-8c26454e142e', 'hostname': 'ozonesecure-ha-datanode3-1.ozonesecure-ha_ozone_net'}, 'checks': [{'type': 'containerState', 'completed': True, 'pass': True,...</var>
<kw name="Get From Dictionary" library="Collections">
<var>${datanode}</var>
<arg>${replica}</arg>
<arg>datanode</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20251020 06:13:10.498" level="INFO">${datanode} = {'uuid': '836d8d1f-7c50-45e1-9b09-8c26454e142e', 'hostname': 'ozonesecure-ha-datanode3-1.ozonesecure-ha_ozone_net'}</msg>
<status status="PASS" starttime="20251020 06:13:10.498" endtime="20251020 06:13:10.498"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${hostname}</var>
<arg>${datanode}</arg>
<arg>hostname</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20251020 06:13:10.499" level="INFO">${hostname} = ozonesecure-ha-datanode3-1.ozonesecure-ha_ozone_net</msg>
<status status="PASS" starttime="20251020 06:13:10.498" endtime="20251020 06:13:10.499"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${hostname}' == '${faulty_datanode}'</arg>
<arg>Check Replica Failed</arg>
<arg>${replica}</arg>
<arg>${check_type}</arg>
<arg>${expected_message}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20251020 06:13:10.499" endtime="20251020 06:13:10.499"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${hostname}' != '${faulty_datanode}'</arg>
<arg>Check Replica Passed</arg>
<arg>${replica}</arg>
<arg>${check_type}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Check Replica Passed" library="ozone-debug-keywords">
<arg>${replica}</arg>
<arg>${check_type}</arg>
<kw name="Get From Dictionary" library="Collections">
<var>${checks}</var>
<arg>${replica}</arg>
<arg>checks</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20251020 06:13:10.500" level="INFO">${checks} = [{'type': 'containerState', 'completed': True, 'pass': True, 'failures': []}]</msg>
<status status="PASS" starttime="20251020 06:13:10.500" endtime="20251020 06:13:10.500"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${check}</var>
<arg>${checks}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20251020 06:13:10.500" level="INFO">${check} = {'type': 'containerState', 'completed': True, 'pass': True, 'failures': []}</msg>
<status status="PASS" starttime="20251020 06:13:10.500" endtime="20251020 06:13:10.500"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${check['type']}</arg>
<arg>${check_type}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20251020 06:13:10.500" endtime="20251020 06:13:10.501"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${check['completed']}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20251020 06:13:10.501" endtime="20251020 06:13:10.502"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${check['pass']}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20251020 06:13:10.502" endtime="20251020 06:13:10.502"/>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${check['failures']}</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20251020 06:13:10.503" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20251020 06:13:10.503" endtime="20251020 06:13:10.503"/>
</kw>
<status status="PASS" starttime="20251020 06:13:10.499" endtime="20251020 06:13:10.503"/>
</kw>
<status status="PASS" starttime="20251020 06:13:10.499" endtime="20251020 06:13:10.503"/>
</kw>
<status status="PASS" starttime="20251020 06:13:10.498" endtime="20251020 06:13:10.503"/>
</iter>
<status status="PASS" starttime="20251020 06:13:10.486" endtime="20251020 06:13:10.503"/>
</for>
<status status="PASS" starttime="20251020 06:13:10.485" endtime="20251020 06:13:10.503"/>
</kw>
<kw name="Remove Byteman Rule" library="BytemanLibrary">
<arg>${FAULT_INJ_DATANODE}</arg>
<arg>${rule_file}</arg>
<doc>Remove Byteman rule for specific component</doc>
<msg timestamp="20251020 06:13:10.633" level="INFO">Remove rule /tmp/container-state-INVALID.btm for datanode5 successful.</msg>
<status status="PASS" starttime="20251020 06:13:10.503" endtime="20251020 06:13:10.633"/>
</kw>
<status status="PASS" starttime="20251020 06:13:04.196" endtime="20251020 06:13:10.633"/>
</kw>
<status status="PASS" starttime="20251020 06:13:04.195" endtime="20251020 06:13:10.634"/>
</test>
<doc>Test container state on a UNHEALTHY, DELETED and INVALID container</doc>
<status status="PASS" starttime="20251020 06:12:50.647" endtime="20251020 06:13:10.635"/>
</suite>
<suite id="s1-s9" name="Kinit" source="/opt/hadoop/smoketest/kinit.robot">
<test id="s1-s9-t1" name="Kinit" line="27">
<kw name="Kinit test user" library="commonlib">
<arg>${USER}</arg>
<arg>${USER}.keytab</arg>
<kw name="Get Security Enabled From Config" library="commonlib">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' != ''</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20251020 06:13:11.431" endtime="20251020 06:13:11.431"/>
</kw>
<kw name="Execute" library="os">
<var>${value}</var>
<arg>ozone getconf confKey ozone.security.enabled</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20251020 06:13:11.435" level="INFO">Running command 'ozone getconf confKey ozone.security.enabled 2&gt;&amp;1'.</msg>
<msg timestamp="20251020 06:13:12.477" level="INFO">${rc} = 0</msg>
<msg timestamp="20251020 06:13:12.477" level="INFO">${output} = true</msg>
<status status="PASS" starttime="20251020 06:13:11.432" endtime="20251020 06:13:12.477"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20251020 06:13:12.478" level="INFO">true</msg>
<status status="PASS" starttime="20251020 06:13:12.477" endtime="20251020 06:13:12.478"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20251020 06:13:12.479" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20251020 06:13:12.478" endtime="20251020 06:13:12.479"/>
</kw>
<status status="PASS" starttime="20251020 06:13:11.432" endtime="20251020 06:13:12.479"/>
</kw>
<msg timestamp="20251020 06:13:12.479" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20251020 06:13:11.431" endtime="20251020 06:13:12.479"/>
</kw>
<msg timestamp="20251020 06:13:12.479" level="INFO">${value} = true</msg>
<status status="PASS" starttime="20251020 06:13:11.431" endtime="20251020 06:13:12.479"/>
</kw>
<if>
<branch type="IF" condition="'${value}' != 'true' and '${value}' != 'false'">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>false</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20251020 06:13:12.480" endtime="20251020 06:13:12.480"/>
</kw>
<status status="NOT RUN" starttime="20251020 06:13:12.479" endtime="20251020 06:13:12.480"/>
</branch>
<status status="PASS" starttime="20251020 06:13:12.479" endtime="20251020 06:13:12.480"/>
</if>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${SECURITY_ENABLED}</arg>
<arg>${value}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20251020 06:13:12.480" level="INFO">${SECURITY_ENABLED} = true</msg>
<status status="PASS" starttime="20251020 06:13:12.480" endtime="20251020 06:13:12.480"/>
</kw>
<status status="PASS" starttime="20251020 06:13:11.431" endtime="20251020 06:13:12.480"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20251020 06:13:12.481" endtime="20251020 06:13:12.481"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20251020 06:13:12.485" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20251020 06:13:12.489" level="INFO">${rc} = 0</msg>
<msg timestamp="20251020 06:13:12.489" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20251020 06:13:12.482" endtime="20251020 06:13:12.489"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20251020 06:13:12.490" level="INFO">om</msg>
<status status="PASS" starttime="20251020 06:13:12.490" endtime="20251020 06:13:12.490"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20251020 06:13:12.491" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20251020 06:13:12.490" endtime="20251020 06:13:12.491"/>
</kw>
<status status="PASS" starttime="20251020 06:13:12.482" endtime="20251020 06:13:12.491"/>
</kw>
<msg timestamp="20251020 06:13:12.491" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20251020 06:13:12.481" endtime="20251020 06:13:12.491"/>
</kw>
<msg timestamp="20251020 06:13:12.491" level="INFO">${instance} = om</msg>
<status status="PASS" starttime="20251020 06:13:12.481" endtime="20251020 06:13:12.491"/>
</kw>
<msg timestamp="20251020 06:13:12.491" level="INFO">${TEST_USER} = testuser/om@EXAMPLE.COM</msg>
<status status="PASS" starttime="20251020 06:13:12.481" endtime="20251020 06:13:12.491"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20251020 06:13:12.492" level="INFO">${TEST_USER} = testuser/om@EXAMPLE.COM</msg>
<status status="PASS" starttime="20251020 06:13:12.491" endtime="20251020 06:13:12.492"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20251020 06:13:12.495" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/om@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20251020 06:13:12.535" level="INFO">${rc} = 0</msg>
<msg timestamp="20251020 06:13:12.535" level="INFO">${output} = </msg>
<status status="PASS" starttime="20251020 06:13:12.493" endtime="20251020 06:13:12.535"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20251020 06:13:12.536" level="INFO"/>
<status status="PASS" starttime="20251020 06:13:12.536" endtime="20251020 06:13:12.536"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20251020 06:13:12.537" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20251020 06:13:12.536" endtime="20251020 06:13:12.537"/>
</kw>
<status status="PASS" starttime="20251020 06:13:12.493" endtime="20251020 06:13:12.537"/>
</kw>
<msg timestamp="20251020 06:13:12.537" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20251020 06:13:12.492" endtime="20251020 06:13:12.537"/>
</kw>
<status status="PASS" starttime="20251020 06:13:12.492" endtime="20251020 06:13:12.537"/>
</kw>
<status status="PASS" starttime="20251020 06:13:12.492" endtime="20251020 06:13:12.537"/>
</kw>
<status status="PASS" starttime="20251020 06:13:11.430" endtime="20251020 06:13:12.537"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20251020 06:13:11.430" endtime="20251020 06:13:12.538"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" starttime="20251020 06:13:11.389" endtime="20251020 06:13:12.538"/>
</suite>
<suite id="s1-s10" name="Ozone-Debug-Tests-Ec3-2" source="/opt/hadoop/smoketest/debug/ozone-debug-tests-ec3-2.robot">
<kw name="Create Volume Bucket" type="SETUP">
<kw name="Execute" library="os">
<arg>ozone sh volume create o3://${OM_SERVICE_ID}/${VOLUME}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20251020 06:13:13.322" level="INFO">Running command 'ozone sh volume create o3://omservice/cli-debug-ec-volume8607 2&gt;&amp;1'.</msg>
<msg timestamp="20251020 06:13:17.082" level="INFO">${rc} = 0</msg>
<msg timestamp="20251020 06:13:17.082" level="INFO">${output} = </msg>
<status status="PASS" starttime="20251020 06:13:13.320" endtime="20251020 06:13:17.082"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20251020 06:13:17.083" level="INFO"/>
<status status="PASS" starttime="20251020 06:13:17.083" endtime="20251020 06:13:17.083"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20251020 06:13:17.084" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20251020 06:13:17.084" endtime="20251020 06:13:17.084"/>
</kw>
<status status="PASS" starttime="20251020 06:13:13.319" endtime="20251020 06:13:17.084"/>
</kw>
<msg timestamp="20251020 06:13:17.084" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20251020 06:13:13.319" endtime="20251020 06:13:17.084"/>
</kw>
<status status="PASS" starttime="20251020 06:13:13.319" endtime="20251020 06:13:17.084"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create o3://${OM_SERVICE_ID}/${VOLUME}/${BUCKET}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20251020 06:13:17.089" level="INFO">Running command 'ozone sh bucket create o3://omservice/cli-debug-ec-volume8607/cli-debug-ec-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20251020 06:13:20.786" level="INFO">${rc} = 0</msg>
<msg timestamp="20251020 06:13:20.786" level="INFO">${output} = </msg>
<status status="PASS" starttime="20251020 06:13:17.086" endtime="20251020 06:13:20.786"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20251020 06:13:20.787" level="INFO"/>
<status status="PASS" starttime="20251020 06:13:20.787" endtime="20251020 06:13:20.787"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20251020 06:13:20.788" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20251020 06:13:20.787" endtime="20251020 06:13:20.788"/>
</kw>
<status status="PASS" starttime="20251020 06:13:17.085" endtime="20251020 06:13:20.788"/>
</kw>
<msg timestamp="20251020 06:13:20.788" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20251020 06:13:17.085" endtime="20251020 06:13:20.788"/>
</kw>
<status status="PASS" starttime="20251020 06:13:17.085" endtime="20251020 06:13:20.788"/>
</kw>
<status status="PASS" starttime="20251020 06:13:13.319" endtime="20251020 06:13:20.788"/>
</kw>
<test id="s1-s10-t1" name="Test ozone debug replicas chunk-info" line="46">
<kw name="Create EC key">
<arg>1048576</arg>
<arg>3</arg>
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=${TEMP_DIR}/testfile bs=${bs} count=${count}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20251020 06:13:20.793" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/testfile bs=1048576 count=3 2&gt;&amp;1'.</msg>
<msg timestamp="20251020 06:13:20.809" level="INFO">${rc} = 0</msg>
<msg timestamp="20251020 06:13:20.809" level="INFO">${output} = 3+0 records in
3+0 records out
3145728 bytes (3.1 MB, 3.0 MiB) copied, 0.0116424 s, 270 MB/s</msg>
<status status="PASS" starttime="20251020 06:13:20.790" endtime="20251020 06:13:20.809"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20251020 06:13:20.810" level="INFO">3+0 records in
3+0 records out
3145728 bytes (3.1 MB, 3.0 MiB) copied, 0.0116424 s, 270 MB/s</msg>
<status status="PASS" starttime="20251020 06:13:20.809" endtime="20251020 06:13:20.810"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20251020 06:13:20.810" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20251020 06:13:20.810" endtime="20251020 06:13:20.810"/>
</kw>
<status status="PASS" starttime="20251020 06:13:20.790" endtime="20251020 06:13:20.810"/>
</kw>
<msg timestamp="20251020 06:13:20.811" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20251020 06:13:20.790" endtime="20251020 06:13:20.811"/>
</kw>
<status status="PASS" starttime="20251020 06:13:20.789" endtime="20251020 06:13:20.811"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put o3://${OM_SERVICE_ID}/${VOLUME}/${BUCKET}/testfile ${TEMP_DIR}/testfile -r rs-${EC_DATA}-${EC_PARITY}-1024k -t EC</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20251020 06:13:20.814" level="INFO">Running command 'ozone sh key put o3://omservice/cli-debug-ec-volume8607/cli-debug-ec-bucket/testfile /tmp/testfile -r rs-3-2-1024k -t EC 2&gt;&amp;1'.</msg>
<msg timestamp="20251020 06:13:27.020" level="INFO">${rc} = 0</msg>
<msg timestamp="20251020 06:13:27.020" level="INFO">${output} = </msg>
<status status="PASS" starttime="20251020 06:13:20.812" endtime="20251020 06:13:27.021"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20251020 06:13:27.022" level="INFO"/>
<status status="PASS" starttime="20251020 06:13:27.021" endtime="20251020 06:13:27.022"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20251020 06:13:27.022" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20251020 06:13:27.022" endtime="20251020 06:13:27.022"/>
</kw>
<status status="PASS" starttime="20251020 06:13:20.812" endtime="20251020 06:13:27.022"/>
</kw>
<msg timestamp="20251020 06:13:27.022" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20251020 06:13:20.811" endtime="20251020 06:13:27.023"/>
</kw>
<status status="PASS" starttime="20251020 06:13:20.811" endtime="20251020 06:13:27.023"/>
</kw>
<status status="PASS" starttime="20251020 06:13:20.789" endtime="20251020 06:13:27.023"/>
</kw>
<kw name="Execute" library="os">
<var>${count}</var>
<arg>ozone debug replicas chunk-info o3://${OM_SERVICE_ID}/${VOLUME}/${BUCKET}/testfile | jq '[.keyLocations[0][] | select(.file | test("\\\\.block$")) | .file] | length'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20251020 06:13:27.027" level="INFO">Running command 'ozone debug replicas chunk-info o3://omservice/cli-debug-ec-volume8607/cli-debug-ec-bucket/testfile | jq '[.keyLocations[0][] | select(.file | test("\\.block$")) | .file] | length' 2&gt;&amp;1'.</msg>
<msg timestamp="20251020 06:13:33.343" level="INFO">${rc} = 0</msg>
<msg timestamp="20251020 06:13:33.343" level="INFO">${output} = 5</msg>
<status status="PASS" starttime="20251020 06:13:27.024" endtime="20251020 06:13:33.343"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20251020 06:13:33.344" level="INFO">5</msg>
<status status="PASS" starttime="20251020 06:13:33.343" endtime="20251020 06:13:33.344"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20251020 06:13:33.345" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20251020 06:13:33.344" endtime="20251020 06:13:33.345"/>
</kw>
<status status="PASS" starttime="20251020 06:13:27.023" endtime="20251020 06:13:33.345"/>
</kw>
<msg timestamp="20251020 06:13:33.345" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20251020 06:13:27.023" endtime="20251020 06:13:33.345"/>
</kw>
<msg timestamp="20251020 06:13:33.345" level="INFO">${count} = 5</msg>
<status status="PASS" starttime="20251020 06:13:27.023" endtime="20251020 06:13:33.345"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${count}</arg>
<arg>5</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" starttime="20251020 06:13:33.345" endtime="20251020 06:13:33.346"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20251020 06:13:20.788" endtime="20251020 06:13:33.346"/>
</test>
<doc>Test ozone Debug CLI for EC(3,2) replicated keys</doc>
<status status="PASS" starttime="20251020 06:13:13.274" endtime="20251020 06:13:33.347"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="185251"/>
</suite>
<statistics>
<total>
<stat pass="16" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="16" fail="0" skip="0" id="s1" name="ozonesecure-ha-debug-tools">ozonesecure-ha-debug-tools</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1" name="Kinit">ozonesecure-ha-debug-tools.Kinit</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2" name="Auditparser">ozonesecure-ha-debug-tools.Auditparser</stat>
<stat pass="1" fail="0" skip="0" id="s1-s3" name="Kinit">ozonesecure-ha-debug-tools.Kinit</stat>
<stat pass="5" fail="0" skip="0" id="s1-s4" name="Ozone-Debug-Tests">ozonesecure-ha-debug-tools.Ozone-Debug-Tests</stat>
<stat pass="1" fail="0" skip="0" id="s1-s5" name="Corrupt-Block-Checksum">ozonesecure-ha-debug-tools.Corrupt-Block-Checksum</stat>
<stat pass="1" fail="0" skip="0" id="s1-s6" name="Stale-Datanode-Checksum">ozonesecure-ha-debug-tools.Stale-Datanode-Checksum</stat>
<stat pass="1" fail="0" skip="0" id="s1-s7" name="Block-Existence-Check">ozonesecure-ha-debug-tools.Block-Existence-Check</stat>
<stat pass="3" fail="0" skip="0" id="s1-s8" name="Container-State-Verifier">ozonesecure-ha-debug-tools.Container-State-Verifier</stat>
<stat pass="1" fail="0" skip="0" id="s1-s9" name="Kinit">ozonesecure-ha-debug-tools.Kinit</stat>
<stat pass="1" fail="0" skip="0" id="s1-s10" name="Ozone-Debug-Tests-Ec3-2">ozonesecure-ha-debug-tools.Ozone-Debug-Tests-Ec3-2</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
