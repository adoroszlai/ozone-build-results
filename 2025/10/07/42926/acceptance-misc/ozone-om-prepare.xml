<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.1.1 (Python 3.9.21 on linux)" generated="20251007 17:27:31.324" rpa="false" schemaversion="4">
<suite id="s1" name="ozone-om-prepare">
<suite id="s1-s1" name="Om-Prepare" source="/opt/hadoop/smoketest/omha/om-prepare.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Get Security Enabled From Config</arg>
<arg>AND</arg>
<arg>Create Specific OM data for prepare</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Get Security Enabled From Config" library="commonlib">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' != ''</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20251007 17:23:59.559" endtime="20251007 17:23:59.559"/>
</kw>
<kw name="Execute" library="os">
<var>${value}</var>
<arg>ozone getconf confKey ozone.security.enabled</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20251007 17:23:59.562" level="INFO">Running command 'ozone getconf confKey ozone.security.enabled 2&gt;&amp;1'.</msg>
<msg timestamp="20251007 17:24:00.327" level="INFO">${rc} = 0</msg>
<msg timestamp="20251007 17:24:00.328" level="INFO">${output} = false</msg>
<status status="PASS" starttime="20251007 17:23:59.560" endtime="20251007 17:24:00.328"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20251007 17:24:00.328" level="INFO">false</msg>
<status status="PASS" starttime="20251007 17:24:00.328" endtime="20251007 17:24:00.328"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20251007 17:24:00.329" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20251007 17:24:00.328" endtime="20251007 17:24:00.329"/>
</kw>
<status status="PASS" starttime="20251007 17:23:59.560" endtime="20251007 17:24:00.329"/>
</kw>
<msg timestamp="20251007 17:24:00.329" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20251007 17:23:59.560" endtime="20251007 17:24:00.329"/>
</kw>
<msg timestamp="20251007 17:24:00.329" level="INFO">${value} = false</msg>
<status status="PASS" starttime="20251007 17:23:59.559" endtime="20251007 17:24:00.329"/>
</kw>
<if>
<branch type="IF" condition="'${value}' != 'true' and '${value}' != 'false'">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>false</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20251007 17:24:00.330" endtime="20251007 17:24:00.330"/>
</kw>
<status status="NOT RUN" starttime="20251007 17:24:00.329" endtime="20251007 17:24:00.330"/>
</branch>
<status status="PASS" starttime="20251007 17:24:00.329" endtime="20251007 17:24:00.330"/>
</if>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${SECURITY_ENABLED}</arg>
<arg>${value}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20251007 17:24:00.330" level="INFO">${SECURITY_ENABLED} = false</msg>
<status status="PASS" starttime="20251007 17:24:00.330" endtime="20251007 17:24:00.330"/>
</kw>
<status status="PASS" starttime="20251007 17:23:59.559" endtime="20251007 17:24:00.330"/>
</kw>
<kw name="Create Specific OM data for prepare">
<kw name="Freon OCKG" library="freon">
<arg>prefix=om-prepare</arg>
<arg>n=100</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20251007 17:24:00.334" level="INFO">Running command 'ozone freon ockg --om-service-id=omservice -t 1 -n100 -p om-prepare  2&gt;&amp;1'.</msg>
<msg timestamp="20251007 17:24:07.992" level="INFO">${rc} = 0</msg>
<msg timestamp="20251007 17:24:07.992" level="INFO">${output} = 2025-10-07 17:24:01,585 [main] INFO freon.BaseFreonGenerator: Executing test with prefix om-prepare and number-of-tests 100
2025-10-07 17:24:01,623 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % ...</msg>
<status status="PASS" starttime="20251007 17:24:00.332" endtime="20251007 17:24:07.992"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20251007 17:24:07.993" level="INFO">2025-10-07 17:24:01,585 [main] INFO freon.BaseFreonGenerator: Executing test with prefix om-prepare and number-of-tests 100
2025-10-07 17:24:01,623 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2025-10-07 17:24:02,458 [main] INFO rpc.RpcClient: Creating Volume: vol1, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1
2025-10-07 17:24:02,538 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption set to false, Replication Type set to server-side default replication type, Namespace Quota set to -1, Space Quota set to -1 
2025-10-07 17:24:02,625 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2025-10-07 17:24:02,754 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2025-10-07 17:24:03,625 [Thread-3] INFO freon.ProgressBar: Progress: 1.00 % (1 out of 100)
2025-10-07 17:24:04,626 [Thread-3] INFO freon.ProgressBar: Progress: 20.00 % (20 out of 100)
2025-10-07 17:24:05,627 [Thread-3] INFO freon.ProgressBar: Progress: 49.00 % (49 out of 100)
2025-10-07 17:24:06,627 [Thread-3] INFO freon.ProgressBar: Progress: 79.00 % (79 out of 100)
2025-10-07 17:24:07,628 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (100 out of 100)
2025-10-07 17:24:07,651 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=100, min=24.959398, max=876.895349, mean=46.21036063259467, stddev=85.75097031435952, median=34.330251, p75=38.209388, p95=59.232114, p98=186.3699, p99=225.811341, p999=876.895349, mean_rate=19.71766034498206, m1=20.0, m5=20.0, m15=20.0, rate_unit=events/second, duration_unit=milliseconds
2025-10-07 17:24:07,651 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 6
2025-10-07 17:24:07,651 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2025-10-07 17:24:07,651 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 100</msg>
<status status="PASS" starttime="20251007 17:24:07.992" endtime="20251007 17:24:07.993"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20251007 17:24:07.993" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20251007 17:24:07.993" endtime="20251007 17:24:07.993"/>
</kw>
<status status="PASS" starttime="20251007 17:24:00.332" endtime="20251007 17:24:07.993"/>
</kw>
<msg timestamp="20251007 17:24:07.993" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20251007 17:24:00.331" endtime="20251007 17:24:07.993"/>
</kw>
<msg timestamp="20251007 17:24:07.994" level="INFO">${result} = 2025-10-07 17:24:01,585 [main] INFO freon.BaseFreonGenerator: Executing test with prefix om-prepare and number-of-tests 100
2025-10-07 17:24:01,623 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % ...</msg>
<status status="PASS" starttime="20251007 17:24:00.331" endtime="20251007 17:24:07.994"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20251007 17:24:07.994" endtime="20251007 17:24:07.994"/>
</kw>
<status status="PASS" starttime="20251007 17:24:00.330" endtime="20251007 17:24:07.994"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20251007 17:24:07.994" level="INFO">${random} = 77941</msg>
<status status="PASS" starttime="20251007 17:24:07.994" endtime="20251007 17:24:07.994"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume_name}</arg>
<arg>${random}-volume-for-prepare</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20251007 17:24:07.995" level="INFO">${volume_name} = 77941-volume-for-prepare</msg>
<status status="PASS" starttime="20251007 17:24:07.995" endtime="20251007 17:24:07.995"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${bucket_name}</arg>
<arg>${random}-bucket-for-prepare</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20251007 17:24:07.996" level="INFO">${bucket_name} = 77941-bucket-for-prepare</msg>
<status status="PASS" starttime="20251007 17:24:07.996" endtime="20251007 17:24:07.996"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create /${volume_name}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20251007 17:24:07.999" level="INFO">Running command 'ozone sh volume create /77941-volume-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20251007 17:24:09.842" level="INFO">${rc} = 0</msg>
<msg timestamp="20251007 17:24:09.842" level="INFO">${output} = </msg>
<status status="PASS" starttime="20251007 17:24:07.997" endtime="20251007 17:24:09.842"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20251007 17:24:09.843" level="INFO"/>
<status status="PASS" starttime="20251007 17:24:09.842" endtime="20251007 17:24:09.843"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20251007 17:24:09.843" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20251007 17:24:09.843" endtime="20251007 17:24:09.843"/>
</kw>
<status status="PASS" starttime="20251007 17:24:07.997" endtime="20251007 17:24:09.843"/>
</kw>
<msg timestamp="20251007 17:24:09.843" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20251007 17:24:07.997" endtime="20251007 17:24:09.844"/>
</kw>
<status status="PASS" starttime="20251007 17:24:07.996" endtime="20251007 17:24:09.844"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create /${volume_name}/${bucket_name}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20251007 17:24:09.846" level="INFO">Running command 'ozone sh bucket create /77941-volume-for-prepare/77941-bucket-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20251007 17:24:11.668" level="INFO">${rc} = 0</msg>
<msg timestamp="20251007 17:24:11.668" level="INFO">${output} = </msg>
<status status="PASS" starttime="20251007 17:24:09.844" endtime="20251007 17:24:11.668"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20251007 17:24:11.669" level="INFO"/>
<status status="PASS" starttime="20251007 17:24:11.669" endtime="20251007 17:24:11.669"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20251007 17:24:11.670" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20251007 17:24:11.669" endtime="20251007 17:24:11.670"/>
</kw>
<status status="PASS" starttime="20251007 17:24:09.844" endtime="20251007 17:24:11.670"/>
</kw>
<msg timestamp="20251007 17:24:11.670" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20251007 17:24:09.844" endtime="20251007 17:24:11.670"/>
</kw>
<status status="PASS" starttime="20251007 17:24:09.844" endtime="20251007 17:24:11.670"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume_name}/${bucket_name}/prepare-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20251007 17:24:11.673" level="INFO">Running command 'ozone sh key put /77941-volume-for-prepare/77941-bucket-for-prepare/prepare-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20251007 17:24:14.635" level="INFO">${rc} = 0</msg>
<msg timestamp="20251007 17:24:14.636" level="INFO">${output} = </msg>
<status status="PASS" starttime="20251007 17:24:11.671" endtime="20251007 17:24:14.636"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20251007 17:24:14.636" level="INFO"/>
<status status="PASS" starttime="20251007 17:24:14.636" endtime="20251007 17:24:14.636"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20251007 17:24:14.637" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20251007 17:24:14.636" endtime="20251007 17:24:14.637"/>
</kw>
<status status="PASS" starttime="20251007 17:24:11.671" endtime="20251007 17:24:14.637"/>
</kw>
<msg timestamp="20251007 17:24:14.637" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20251007 17:24:11.670" endtime="20251007 17:24:14.637"/>
</kw>
<status status="PASS" starttime="20251007 17:24:11.670" endtime="20251007 17:24:14.637"/>
</kw>
<status status="PASS" starttime="20251007 17:24:00.330" endtime="20251007 17:24:14.637"/>
</kw>
<status status="PASS" starttime="20251007 17:23:59.558" endtime="20251007 17:24:14.637"/>
</kw>
<test id="s1-s1-t1" name="Prepare Ozone Manager" line="40">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20251007 17:24:14.638" endtime="20251007 17:24:14.638"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om prepare -id=omservice</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20251007 17:24:14.641" level="INFO">Running command 'ozone admin om prepare -id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20251007 17:24:31.206" level="INFO">${rc} = 0</msg>
<msg timestamp="20251007 17:24:31.207" level="INFO">${output} = Ozone Manager Prepare Request successfully returned with Transaction Id : [207].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], C...</msg>
<status status="PASS" starttime="20251007 17:24:14.639" endtime="20251007 17:24:31.207"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20251007 17:24:31.207" level="INFO">Ozone Manager Prepare Request successfully returned with Transaction Id : [207].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [207]
OM : [om3], Prepare Status : [NOT_PREPARED], Current Transaction Id : [-1]
OM : [om2], Prepare Status : [NOT_PREPARED], Current Transaction Id : [-1]
Waiting for 10 seconds before retrying...
OM : [om3], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [207]
OM : [om2], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [207]

OM Preparation successful! 
All OMs are prepared
No new write requests will be allowed until preparation is cancelled or upgrade/downgrade is done.</msg>
<status status="PASS" starttime="20251007 17:24:31.207" endtime="20251007 17:24:31.207"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20251007 17:24:31.208" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20251007 17:24:31.208" endtime="20251007 17:24:31.208"/>
</kw>
<status status="PASS" starttime="20251007 17:24:14.639" endtime="20251007 17:24:31.208"/>
</kw>
<msg timestamp="20251007 17:24:31.208" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20251007 17:24:14.639" endtime="20251007 17:24:31.208"/>
</kw>
<msg timestamp="20251007 17:24:31.208" level="INFO">${result} = Ozone Manager Prepare Request successfully returned with Transaction Id : [207].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], C...</msg>
<status status="PASS" starttime="20251007 17:24:14.638" endtime="20251007 17:24:31.208"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>OM Preparation successful!</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OM Preparation successful!</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20251007 17:24:31.209" endtime="20251007 17:24:31.209"/>
</kw>
<status status="PASS" starttime="20251007 17:24:31.208" endtime="20251007 17:24:31.209"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20251007 17:24:14.638" endtime="20251007 17:24:31.209"/>
</test>
<test id="s1-s1-t2" name="Checks if the expected data is present in OM" line="44">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20251007 17:24:31.210" endtime="20251007 17:24:31.210"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info /${volume_name}/${bucket_name}/prepare-key</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20251007 17:24:31.213" level="INFO">Running command 'ozone sh key info /77941-volume-for-prepare/77941-bucket-for-prepare/prepare-key 2&gt;&amp;1'.</msg>
<msg timestamp="20251007 17:24:33.318" level="INFO">${rc} = 0</msg>
<msg timestamp="20251007 17:24:33.318" level="INFO">${output} = {
  "volumeName" : "77941-volume-for-prepare",
  "bucketName" : "77941-bucket-for-prepare",
  "name" : "prepare-key",
  "owner" : "hadoop",
  "dataSize" : 15892,
  "creationTime" : "2025-10-07T17:24:1...</msg>
<status status="PASS" starttime="20251007 17:24:31.211" endtime="20251007 17:24:33.318"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20251007 17:24:33.319" level="INFO">{
  "volumeName" : "77941-volume-for-prepare",
  "bucketName" : "77941-bucket-for-prepare",
  "name" : "prepare-key",
  "owner" : "hadoop",
  "dataSize" : 15892,
  "creationTime" : "2025-10-07T17:24:13.455Z",
  "modificationTime" : "2025-10-07T17:24:14.285Z",
  "replicationConfig" : {
    "replicationFactor" : "ONE",
    "requiredNodes" : 1,
    "minimumNodes" : 1,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "tags" : { },
  "ozoneKeyLocations" : [ {
    "containerID" : 3,
    "localID" : 115816896921600101,
    "length" : 15892,
    "offset" : 0,
    "keyOffset" : 0
  } ],
  "generation" : 206,
  "file" : true
}</msg>
<status status="PASS" starttime="20251007 17:24:33.319" endtime="20251007 17:24:33.319"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20251007 17:24:33.320" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20251007 17:24:33.319" endtime="20251007 17:24:33.320"/>
</kw>
<status status="PASS" starttime="20251007 17:24:31.211" endtime="20251007 17:24:33.320"/>
</kw>
<msg timestamp="20251007 17:24:33.320" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20251007 17:24:31.211" endtime="20251007 17:24:33.320"/>
</kw>
<msg timestamp="20251007 17:24:33.320" level="INFO">${result} = {
  "volumeName" : "77941-volume-for-prepare",
  "bucketName" : "77941-bucket-for-prepare",
  "name" : "prepare-key",
  "owner" : "hadoop",
  "dataSize" : 15892,
  "creationTime" : "2025-10-07T17:24:1...</msg>
<status status="PASS" starttime="20251007 17:24:31.210" endtime="20251007 17:24:33.320"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"name\" : \"prepare-key\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20251007 17:24:33.320" endtime="20251007 17:24:33.320"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20251007 17:24:31.209" endtime="20251007 17:24:33.321"/>
</test>
<test id="s1-s1-t3" name="Test write operation fails" line="48">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20251007 17:24:33.321" endtime="20251007 17:24:33.322"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh key put /${volume_name}/${bucket_name}/prepare-key2 /opt/hadoop/NOTICE.txt</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20251007 17:24:33.324" level="INFO">Running command 'ozone sh key put /77941-volume-for-prepare/77941-bucket-for-prepare/prepare-key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20251007 17:24:35.174" level="INFO">${rc} = 255</msg>
<msg timestamp="20251007 17:24:35.174" level="INFO">${output} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateKey when OM is in prepare mode.</msg>
<status status="PASS" starttime="20251007 17:24:33.322" endtime="20251007 17:24:35.174"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20251007 17:24:35.175" level="INFO">NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateKey when OM is in prepare mode.</msg>
<status status="PASS" starttime="20251007 17:24:35.174" endtime="20251007 17:24:35.175"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20251007 17:24:35.175" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20251007 17:24:35.175" endtime="20251007 17:24:35.175"/>
</kw>
<msg timestamp="20251007 17:24:35.176" level="INFO">${result} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateKey when OM is in prepare mode.</msg>
<status status="PASS" starttime="20251007 17:24:33.322" endtime="20251007 17:24:35.176"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OM is in prepare mode</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20251007 17:24:35.176" endtime="20251007 17:24:35.176"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>ozone sh key info /${volume_name}/${bucket_name}/prepare-key2</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20251007 17:24:35.179" level="INFO">Running command 'ozone sh key info /77941-volume-for-prepare/77941-bucket-for-prepare/prepare-key2 2&gt;&amp;1'.</msg>
<msg timestamp="20251007 17:24:37.030" level="INFO">${rc} = 255</msg>
<msg timestamp="20251007 17:24:37.030" level="INFO">${output} = KEY_NOT_FOUND Key:prepare-key2 not found</msg>
<status status="PASS" starttime="20251007 17:24:35.176" endtime="20251007 17:24:37.030"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20251007 17:24:37.031" level="INFO">KEY_NOT_FOUND Key:prepare-key2 not found</msg>
<status status="PASS" starttime="20251007 17:24:37.031" endtime="20251007 17:24:37.031"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20251007 17:24:37.032" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20251007 17:24:37.031" endtime="20251007 17:24:37.032"/>
</kw>
<status status="PASS" starttime="20251007 17:24:35.176" endtime="20251007 17:24:37.032"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20251007 17:24:33.321" endtime="20251007 17:24:37.032"/>
</test>
<doc>Smoke test to test preparing OMs in an OM HA cluster.</doc>
<status status="PASS" starttime="20251007 17:23:59.515" endtime="20251007 17:24:37.033"/>
</suite>
<suite id="s1-s2" name="Om-Cancel-Prepare" source="/opt/hadoop/smoketest/omha/om-cancel-prepare.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Generate volume and bucket names</arg>
<arg>AND</arg>
<arg>Get Security Enabled From Config</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Generate volume and bucket names">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20251007 17:24:37.602" level="INFO">${random} = 37368</msg>
<status status="PASS" starttime="20251007 17:24:37.602" endtime="20251007 17:24:37.602"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume_name}</arg>
<arg>${random}-volume-for-cancel</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20251007 17:24:37.603" level="INFO">${volume_name} = 37368-volume-for-cancel</msg>
<status status="PASS" starttime="20251007 17:24:37.602" endtime="20251007 17:24:37.603"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${bucket_name}</arg>
<arg>${random}-bucket-for-cancel</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20251007 17:24:37.604" level="INFO">${bucket_name} = 37368-bucket-for-cancel</msg>
<status status="PASS" starttime="20251007 17:24:37.603" endtime="20251007 17:24:37.604"/>
</kw>
<status status="PASS" starttime="20251007 17:24:37.602" endtime="20251007 17:24:37.604"/>
</kw>
<kw name="Get Security Enabled From Config" library="commonlib">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' != ''</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20251007 17:24:37.604" endtime="20251007 17:24:37.604"/>
</kw>
<kw name="Execute" library="os">
<var>${value}</var>
<arg>ozone getconf confKey ozone.security.enabled</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20251007 17:24:37.607" level="INFO">Running command 'ozone getconf confKey ozone.security.enabled 2&gt;&amp;1'.</msg>
<msg timestamp="20251007 17:24:38.317" level="INFO">${rc} = 0</msg>
<msg timestamp="20251007 17:24:38.317" level="INFO">${output} = false</msg>
<status status="PASS" starttime="20251007 17:24:37.605" endtime="20251007 17:24:38.317"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20251007 17:24:38.318" level="INFO">false</msg>
<status status="PASS" starttime="20251007 17:24:38.318" endtime="20251007 17:24:38.318"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20251007 17:24:38.318" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20251007 17:24:38.318" endtime="20251007 17:24:38.318"/>
</kw>
<status status="PASS" starttime="20251007 17:24:37.605" endtime="20251007 17:24:38.319"/>
</kw>
<msg timestamp="20251007 17:24:38.319" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20251007 17:24:37.605" endtime="20251007 17:24:38.319"/>
</kw>
<msg timestamp="20251007 17:24:38.319" level="INFO">${value} = false</msg>
<status status="PASS" starttime="20251007 17:24:37.604" endtime="20251007 17:24:38.319"/>
</kw>
<if>
<branch type="IF" condition="'${value}' != 'true' and '${value}' != 'false'">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>false</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20251007 17:24:38.319" endtime="20251007 17:24:38.319"/>
</kw>
<status status="NOT RUN" starttime="20251007 17:24:38.319" endtime="20251007 17:24:38.319"/>
</branch>
<status status="PASS" starttime="20251007 17:24:38.319" endtime="20251007 17:24:38.319"/>
</if>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${SECURITY_ENABLED}</arg>
<arg>${value}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20251007 17:24:38.320" level="INFO">${SECURITY_ENABLED} = false</msg>
<status status="PASS" starttime="20251007 17:24:38.319" endtime="20251007 17:24:38.320"/>
</kw>
<status status="PASS" starttime="20251007 17:24:37.604" endtime="20251007 17:24:38.320"/>
</kw>
<status status="PASS" starttime="20251007 17:24:37.601" endtime="20251007 17:24:38.320"/>
</kw>
<test id="s1-s2-t1" name="Cancel Ozone Manager Prepare" line="34">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20251007 17:24:38.321" endtime="20251007 17:24:38.321"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om cancelprepare -id=omservice</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20251007 17:24:38.324" level="INFO">Running command 'ozone admin om cancelprepare -id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20251007 17:24:39.906" level="INFO">${rc} = 0</msg>
<msg timestamp="20251007 17:24:39.906" level="INFO">${output} = Cancel prepare succeeded, cluster can now accept write requests.</msg>
<status status="PASS" starttime="20251007 17:24:38.322" endtime="20251007 17:24:39.906"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20251007 17:24:39.907" level="INFO">Cancel prepare succeeded, cluster can now accept write requests.</msg>
<status status="PASS" starttime="20251007 17:24:39.906" endtime="20251007 17:24:39.907"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20251007 17:24:39.907" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20251007 17:24:39.907" endtime="20251007 17:24:39.907"/>
</kw>
<status status="PASS" starttime="20251007 17:24:38.321" endtime="20251007 17:24:39.907"/>
</kw>
<msg timestamp="20251007 17:24:39.907" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20251007 17:24:38.321" endtime="20251007 17:24:39.907"/>
</kw>
<msg timestamp="20251007 17:24:39.907" level="INFO">${result} = Cancel prepare succeeded, cluster can now accept write requests.</msg>
<status status="PASS" starttime="20251007 17:24:38.321" endtime="20251007 17:24:39.907"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>5sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Cancel prepare succeeded</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Cancel prepare succeeded</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20251007 17:24:39.908" endtime="20251007 17:24:39.908"/>
</kw>
<status status="PASS" starttime="20251007 17:24:39.908" endtime="20251007 17:24:39.908"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20251007 17:24:38.320" endtime="20251007 17:24:39.908"/>
</test>
<test id="s1-s2-t2" name="Test write operations" line="38">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20251007 17:24:39.909" endtime="20251007 17:24:39.909"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create /${volume_name}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20251007 17:24:39.913" level="INFO">Running command 'ozone sh volume create /37368-volume-for-cancel 2&gt;&amp;1'.</msg>
<msg timestamp="20251007 17:24:41.789" level="INFO">${rc} = 0</msg>
<msg timestamp="20251007 17:24:41.789" level="INFO">${output} = </msg>
<status status="PASS" starttime="20251007 17:24:39.910" endtime="20251007 17:24:41.789"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20251007 17:24:41.789" level="INFO"/>
<status status="PASS" starttime="20251007 17:24:41.789" endtime="20251007 17:24:41.790"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20251007 17:24:41.790" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20251007 17:24:41.790" endtime="20251007 17:24:41.790"/>
</kw>
<status status="PASS" starttime="20251007 17:24:39.910" endtime="20251007 17:24:41.790"/>
</kw>
<msg timestamp="20251007 17:24:41.790" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20251007 17:24:39.910" endtime="20251007 17:24:41.790"/>
</kw>
<status status="PASS" starttime="20251007 17:24:39.909" endtime="20251007 17:24:41.790"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create /${volume_name}/${bucket_name}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20251007 17:24:41.793" level="INFO">Running command 'ozone sh bucket create /37368-volume-for-cancel/37368-bucket-for-cancel 2&gt;&amp;1'.</msg>
<msg timestamp="20251007 17:24:43.666" level="INFO">${rc} = 0</msg>
<msg timestamp="20251007 17:24:43.666" level="INFO">${output} = </msg>
<status status="PASS" starttime="20251007 17:24:41.791" endtime="20251007 17:24:43.666"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20251007 17:24:43.667" level="INFO"/>
<status status="PASS" starttime="20251007 17:24:43.666" endtime="20251007 17:24:43.667"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20251007 17:24:43.667" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20251007 17:24:43.667" endtime="20251007 17:24:43.667"/>
</kw>
<status status="PASS" starttime="20251007 17:24:41.791" endtime="20251007 17:24:43.668"/>
</kw>
<msg timestamp="20251007 17:24:43.668" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20251007 17:24:41.791" endtime="20251007 17:24:43.668"/>
</kw>
<status status="PASS" starttime="20251007 17:24:41.790" endtime="20251007 17:24:43.668"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key put /${volume_name}/${bucket_name}/cancel-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20251007 17:24:43.671" level="INFO">Running command 'ozone sh key put /37368-volume-for-cancel/37368-bucket-for-cancel/cancel-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20251007 17:24:46.597" level="INFO">${rc} = 0</msg>
<msg timestamp="20251007 17:24:46.597" level="INFO">${output} = </msg>
<status status="PASS" starttime="20251007 17:24:43.669" endtime="20251007 17:24:46.597"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20251007 17:24:46.598" level="INFO"/>
<status status="PASS" starttime="20251007 17:24:46.598" endtime="20251007 17:24:46.598"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20251007 17:24:46.599" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20251007 17:24:46.598" endtime="20251007 17:24:46.599"/>
</kw>
<status status="PASS" starttime="20251007 17:24:43.668" endtime="20251007 17:24:46.599"/>
</kw>
<msg timestamp="20251007 17:24:46.599" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20251007 17:24:43.668" endtime="20251007 17:24:46.599"/>
</kw>
<msg timestamp="20251007 17:24:46.599" level="INFO">${result} = </msg>
<status status="PASS" starttime="20251007 17:24:43.668" endtime="20251007 17:24:46.599"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info /${volume_name}/${bucket_name}/cancel-key</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20251007 17:24:46.603" level="INFO">Running command 'ozone sh key info /37368-volume-for-cancel/37368-bucket-for-cancel/cancel-key 2&gt;&amp;1'.</msg>
<msg timestamp="20251007 17:24:48.550" level="INFO">${rc} = 0</msg>
<msg timestamp="20251007 17:24:48.550" level="INFO">${output} = {
  "volumeName" : "37368-volume-for-cancel",
  "bucketName" : "37368-bucket-for-cancel",
  "name" : "cancel-key",
  "owner" : "hadoop",
  "dataSize" : 15892,
  "creationTime" : "2025-10-07T17:24:45.4...</msg>
<status status="PASS" starttime="20251007 17:24:46.600" endtime="20251007 17:24:48.550"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20251007 17:24:48.551" level="INFO">{
  "volumeName" : "37368-volume-for-cancel",
  "bucketName" : "37368-bucket-for-cancel",
  "name" : "cancel-key",
  "owner" : "hadoop",
  "dataSize" : 15892,
  "creationTime" : "2025-10-07T17:24:45.440Z",
  "modificationTime" : "2025-10-07T17:24:46.243Z",
  "replicationConfig" : {
    "replicationFactor" : "ONE",
    "requiredNodes" : 1,
    "minimumNodes" : 1,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "tags" : { },
  "ozoneKeyLocations" : [ {
    "containerID" : 6,
    "localID" : 115816896921600103,
    "length" : 15892,
    "offset" : 0,
    "keyOffset" : 0
  } ],
  "generation" : 212,
  "file" : true
}</msg>
<status status="PASS" starttime="20251007 17:24:48.550" endtime="20251007 17:24:48.551"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20251007 17:24:48.551" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20251007 17:24:48.551" endtime="20251007 17:24:48.551"/>
</kw>
<status status="PASS" starttime="20251007 17:24:46.600" endtime="20251007 17:24:48.551"/>
</kw>
<msg timestamp="20251007 17:24:48.552" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20251007 17:24:46.600" endtime="20251007 17:24:48.552"/>
</kw>
<msg timestamp="20251007 17:24:48.552" level="INFO">${result} = {
  "volumeName" : "37368-volume-for-cancel",
  "bucketName" : "37368-bucket-for-cancel",
  "name" : "cancel-key",
  "owner" : "hadoop",
  "dataSize" : 15892,
  "creationTime" : "2025-10-07T17:24:45.4...</msg>
<status status="PASS" starttime="20251007 17:24:46.599" endtime="20251007 17:24:48.552"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"name\" : \"cancel-key\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20251007 17:24:48.552" endtime="20251007 17:24:48.552"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20251007 17:24:39.909" endtime="20251007 17:24:48.552"/>
</test>
<doc>Smoke test for ozone manager cancel prepare</doc>
<status status="PASS" starttime="20251007 17:24:37.566" endtime="20251007 17:24:48.553"/>
</suite>
<suite id="s1-s3" name="Om-Prepare" source="/opt/hadoop/smoketest/omha/om-prepare.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Get Security Enabled From Config</arg>
<arg>AND</arg>
<arg>Create Specific OM data for prepare</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Get Security Enabled From Config" library="commonlib">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' != ''</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20251007 17:24:49.109" endtime="20251007 17:24:49.109"/>
</kw>
<kw name="Execute" library="os">
<var>${value}</var>
<arg>ozone getconf confKey ozone.security.enabled</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20251007 17:24:49.112" level="INFO">Running command 'ozone getconf confKey ozone.security.enabled 2&gt;&amp;1'.</msg>
<msg timestamp="20251007 17:24:49.801" level="INFO">${rc} = 0</msg>
<msg timestamp="20251007 17:24:49.801" level="INFO">${output} = false</msg>
<status status="PASS" starttime="20251007 17:24:49.110" endtime="20251007 17:24:49.801"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20251007 17:24:49.801" level="INFO">false</msg>
<status status="PASS" starttime="20251007 17:24:49.801" endtime="20251007 17:24:49.801"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20251007 17:24:49.802" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20251007 17:24:49.802" endtime="20251007 17:24:49.802"/>
</kw>
<status status="PASS" starttime="20251007 17:24:49.110" endtime="20251007 17:24:49.802"/>
</kw>
<msg timestamp="20251007 17:24:49.802" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20251007 17:24:49.110" endtime="20251007 17:24:49.802"/>
</kw>
<msg timestamp="20251007 17:24:49.802" level="INFO">${value} = false</msg>
<status status="PASS" starttime="20251007 17:24:49.109" endtime="20251007 17:24:49.802"/>
</kw>
<if>
<branch type="IF" condition="'${value}' != 'true' and '${value}' != 'false'">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>false</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20251007 17:24:49.803" endtime="20251007 17:24:49.803"/>
</kw>
<status status="NOT RUN" starttime="20251007 17:24:49.802" endtime="20251007 17:24:49.803"/>
</branch>
<status status="PASS" starttime="20251007 17:24:49.802" endtime="20251007 17:24:49.803"/>
</if>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${SECURITY_ENABLED}</arg>
<arg>${value}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20251007 17:24:49.803" level="INFO">${SECURITY_ENABLED} = false</msg>
<status status="PASS" starttime="20251007 17:24:49.803" endtime="20251007 17:24:49.803"/>
</kw>
<status status="PASS" starttime="20251007 17:24:49.109" endtime="20251007 17:24:49.803"/>
</kw>
<kw name="Create Specific OM data for prepare">
<kw name="Freon OCKG" library="freon">
<arg>prefix=om-prepare</arg>
<arg>n=100</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20251007 17:24:49.807" level="INFO">Running command 'ozone freon ockg --om-service-id=omservice -t 1 -n100 -p om-prepare  2&gt;&amp;1'.</msg>
<msg timestamp="20251007 17:24:56.408" level="INFO">${rc} = 0</msg>
<msg timestamp="20251007 17:24:56.408" level="INFO">${output} = 2025-10-07 17:24:50,994 [main] INFO freon.BaseFreonGenerator: Executing test with prefix om-prepare and number-of-tests 100
2025-10-07 17:24:51,036 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % ...</msg>
<status status="PASS" starttime="20251007 17:24:49.805" endtime="20251007 17:24:56.408"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20251007 17:24:56.409" level="INFO">2025-10-07 17:24:50,994 [main] INFO freon.BaseFreonGenerator: Executing test with prefix om-prepare and number-of-tests 100
2025-10-07 17:24:51,036 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2025-10-07 17:24:51,942 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2025-10-07 17:24:52,039 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2025-10-07 17:24:53,039 [Thread-3] INFO freon.ProgressBar: Progress: 16.00 % (16 out of 100)
2025-10-07 17:24:54,040 [Thread-3] INFO freon.ProgressBar: Progress: 49.00 % (49 out of 100)
2025-10-07 17:24:55,040 [Thread-3] INFO freon.ProgressBar: Progress: 85.00 % (85 out of 100)
2025-10-07 17:24:56,041 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (100 out of 100)
2025-10-07 17:24:56,064 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=100, min=21.002184, max=660.249575, mean=35.87864033570472, stddev=62.360743015473666, median=27.636674, p75=33.394793, p95=43.593163, p98=47.135887, p99=47.923227, p999=660.249575, mean_rate=23.777615642021132, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2025-10-07 17:24:56,064 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 5
2025-10-07 17:24:56,064 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2025-10-07 17:24:56,065 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 100</msg>
<status status="PASS" starttime="20251007 17:24:56.408" endtime="20251007 17:24:56.409"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20251007 17:24:56.409" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20251007 17:24:56.409" endtime="20251007 17:24:56.409"/>
</kw>
<status status="PASS" starttime="20251007 17:24:49.805" endtime="20251007 17:24:56.410"/>
</kw>
<msg timestamp="20251007 17:24:56.410" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20251007 17:24:49.804" endtime="20251007 17:24:56.410"/>
</kw>
<msg timestamp="20251007 17:24:56.410" level="INFO">${result} = 2025-10-07 17:24:50,994 [main] INFO freon.BaseFreonGenerator: Executing test with prefix om-prepare and number-of-tests 100
2025-10-07 17:24:51,036 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % ...</msg>
<status status="PASS" starttime="20251007 17:24:49.804" endtime="20251007 17:24:56.410"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20251007 17:24:56.410" endtime="20251007 17:24:56.411"/>
</kw>
<status status="PASS" starttime="20251007 17:24:49.803" endtime="20251007 17:24:56.411"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20251007 17:24:56.411" level="INFO">${random} = 55035</msg>
<status status="PASS" starttime="20251007 17:24:56.411" endtime="20251007 17:24:56.411"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume_name}</arg>
<arg>${random}-volume-for-prepare</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20251007 17:24:56.413" level="INFO">${volume_name} = 55035-volume-for-prepare</msg>
<status status="PASS" starttime="20251007 17:24:56.411" endtime="20251007 17:24:56.413"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${bucket_name}</arg>
<arg>${random}-bucket-for-prepare</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20251007 17:24:56.414" level="INFO">${bucket_name} = 55035-bucket-for-prepare</msg>
<status status="PASS" starttime="20251007 17:24:56.413" endtime="20251007 17:24:56.414"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create /${volume_name}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20251007 17:24:56.418" level="INFO">Running command 'ozone sh volume create /55035-volume-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20251007 17:24:58.201" level="INFO">${rc} = 0</msg>
<msg timestamp="20251007 17:24:58.201" level="INFO">${output} = </msg>
<status status="PASS" starttime="20251007 17:24:56.415" endtime="20251007 17:24:58.201"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20251007 17:24:58.202" level="INFO"/>
<status status="PASS" starttime="20251007 17:24:58.201" endtime="20251007 17:24:58.202"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20251007 17:24:58.202" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20251007 17:24:58.202" endtime="20251007 17:24:58.202"/>
</kw>
<status status="PASS" starttime="20251007 17:24:56.415" endtime="20251007 17:24:58.202"/>
</kw>
<msg timestamp="20251007 17:24:58.203" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20251007 17:24:56.415" endtime="20251007 17:24:58.203"/>
</kw>
<status status="PASS" starttime="20251007 17:24:56.414" endtime="20251007 17:24:58.203"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create /${volume_name}/${bucket_name}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20251007 17:24:58.205" level="INFO">Running command 'ozone sh bucket create /55035-volume-for-prepare/55035-bucket-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20251007 17:25:00.061" level="INFO">${rc} = 0</msg>
<msg timestamp="20251007 17:25:00.061" level="INFO">${output} = </msg>
<status status="PASS" starttime="20251007 17:24:58.204" endtime="20251007 17:25:00.061"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20251007 17:25:00.062" level="INFO"/>
<status status="PASS" starttime="20251007 17:25:00.062" endtime="20251007 17:25:00.062"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20251007 17:25:00.062" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20251007 17:25:00.062" endtime="20251007 17:25:00.062"/>
</kw>
<status status="PASS" starttime="20251007 17:24:58.203" endtime="20251007 17:25:00.063"/>
</kw>
<msg timestamp="20251007 17:25:00.063" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20251007 17:24:58.203" endtime="20251007 17:25:00.063"/>
</kw>
<status status="PASS" starttime="20251007 17:24:58.203" endtime="20251007 17:25:00.063"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume_name}/${bucket_name}/prepare-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20251007 17:25:00.066" level="INFO">Running command 'ozone sh key put /55035-volume-for-prepare/55035-bucket-for-prepare/prepare-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20251007 17:25:03.109" level="INFO">${rc} = 0</msg>
<msg timestamp="20251007 17:25:03.109" level="INFO">${output} = </msg>
<status status="PASS" starttime="20251007 17:25:00.064" endtime="20251007 17:25:03.109"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20251007 17:25:03.109" level="INFO"/>
<status status="PASS" starttime="20251007 17:25:03.109" endtime="20251007 17:25:03.109"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20251007 17:25:03.110" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20251007 17:25:03.109" endtime="20251007 17:25:03.110"/>
</kw>
<status status="PASS" starttime="20251007 17:25:00.063" endtime="20251007 17:25:03.110"/>
</kw>
<msg timestamp="20251007 17:25:03.110" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20251007 17:25:00.063" endtime="20251007 17:25:03.110"/>
</kw>
<status status="PASS" starttime="20251007 17:25:00.063" endtime="20251007 17:25:03.110"/>
</kw>
<status status="PASS" starttime="20251007 17:24:49.803" endtime="20251007 17:25:03.110"/>
</kw>
<status status="PASS" starttime="20251007 17:24:49.109" endtime="20251007 17:25:03.110"/>
</kw>
<test id="s1-s3-t1" name="Prepare Ozone Manager" line="40">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20251007 17:25:03.111" endtime="20251007 17:25:03.111"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om prepare -id=omservice</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20251007 17:25:03.114" level="INFO">Running command 'ozone admin om prepare -id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20251007 17:25:19.686" level="INFO">${rc} = 0</msg>
<msg timestamp="20251007 17:25:19.686" level="INFO">${output} = Ozone Manager Prepare Request successfully returned with Transaction Id : [417].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], C...</msg>
<status status="PASS" starttime="20251007 17:25:03.112" endtime="20251007 17:25:19.686"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20251007 17:25:19.687" level="INFO">Ozone Manager Prepare Request successfully returned with Transaction Id : [417].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [417]
OM : [om3], Prepare Status : [NOT_PREPARED], Current Transaction Id : [-1]
OM : [om2], Prepare Status : [NOT_PREPARED], Current Transaction Id : [-1]
Waiting for 10 seconds before retrying...
OM : [om3], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [417]
OM : [om2], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [417]

OM Preparation successful! 
All OMs are prepared
No new write requests will be allowed until preparation is cancelled or upgrade/downgrade is done.</msg>
<status status="PASS" starttime="20251007 17:25:19.686" endtime="20251007 17:25:19.687"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20251007 17:25:19.687" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20251007 17:25:19.687" endtime="20251007 17:25:19.687"/>
</kw>
<status status="PASS" starttime="20251007 17:25:03.112" endtime="20251007 17:25:19.688"/>
</kw>
<msg timestamp="20251007 17:25:19.688" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20251007 17:25:03.112" endtime="20251007 17:25:19.688"/>
</kw>
<msg timestamp="20251007 17:25:19.688" level="INFO">${result} = Ozone Manager Prepare Request successfully returned with Transaction Id : [417].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], C...</msg>
<status status="PASS" starttime="20251007 17:25:03.111" endtime="20251007 17:25:19.688"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>OM Preparation successful!</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OM Preparation successful!</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20251007 17:25:19.688" endtime="20251007 17:25:19.688"/>
</kw>
<status status="PASS" starttime="20251007 17:25:19.688" endtime="20251007 17:25:19.689"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20251007 17:25:03.110" endtime="20251007 17:25:19.689"/>
</test>
<test id="s1-s3-t2" name="Checks if the expected data is present in OM" line="44">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20251007 17:25:19.690" endtime="20251007 17:25:19.690"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info /${volume_name}/${bucket_name}/prepare-key</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20251007 17:25:19.693" level="INFO">Running command 'ozone sh key info /55035-volume-for-prepare/55035-bucket-for-prepare/prepare-key 2&gt;&amp;1'.</msg>
<msg timestamp="20251007 17:25:21.730" level="INFO">${rc} = 0</msg>
<msg timestamp="20251007 17:25:21.730" level="INFO">${output} = {
  "volumeName" : "55035-volume-for-prepare",
  "bucketName" : "55035-bucket-for-prepare",
  "name" : "prepare-key",
  "owner" : "hadoop",
  "dataSize" : 15892,
  "creationTime" : "2025-10-07T17:25:0...</msg>
<status status="PASS" starttime="20251007 17:25:19.691" endtime="20251007 17:25:21.730"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20251007 17:25:21.731" level="INFO">{
  "volumeName" : "55035-volume-for-prepare",
  "bucketName" : "55035-bucket-for-prepare",
  "name" : "prepare-key",
  "owner" : "hadoop",
  "dataSize" : 15892,
  "creationTime" : "2025-10-07T17:25:01.935Z",
  "modificationTime" : "2025-10-07T17:25:02.758Z",
  "replicationConfig" : {
    "replicationFactor" : "ONE",
    "requiredNodes" : 1,
    "minimumNodes" : 1,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "tags" : { },
  "ozoneKeyLocations" : [ {
    "containerID" : 4,
    "localID" : 115816896921600204,
    "length" : 15892,
    "offset" : 0,
    "keyOffset" : 0
  } ],
  "generation" : 416,
  "file" : true
}</msg>
<status status="PASS" starttime="20251007 17:25:21.730" endtime="20251007 17:25:21.731"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20251007 17:25:21.731" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20251007 17:25:21.731" endtime="20251007 17:25:21.731"/>
</kw>
<status status="PASS" starttime="20251007 17:25:19.690" endtime="20251007 17:25:21.731"/>
</kw>
<msg timestamp="20251007 17:25:21.731" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20251007 17:25:19.690" endtime="20251007 17:25:21.731"/>
</kw>
<msg timestamp="20251007 17:25:21.732" level="INFO">${result} = {
  "volumeName" : "55035-volume-for-prepare",
  "bucketName" : "55035-bucket-for-prepare",
  "name" : "prepare-key",
  "owner" : "hadoop",
  "dataSize" : 15892,
  "creationTime" : "2025-10-07T17:25:0...</msg>
<status status="PASS" starttime="20251007 17:25:19.690" endtime="20251007 17:25:21.732"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"name\" : \"prepare-key\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20251007 17:25:21.732" endtime="20251007 17:25:21.732"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20251007 17:25:19.689" endtime="20251007 17:25:21.732"/>
</test>
<test id="s1-s3-t3" name="Test write operation fails" line="48">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20251007 17:25:21.733" endtime="20251007 17:25:21.733"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh key put /${volume_name}/${bucket_name}/prepare-key2 /opt/hadoop/NOTICE.txt</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20251007 17:25:21.736" level="INFO">Running command 'ozone sh key put /55035-volume-for-prepare/55035-bucket-for-prepare/prepare-key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20251007 17:25:23.501" level="INFO">${rc} = 255</msg>
<msg timestamp="20251007 17:25:23.501" level="INFO">${output} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateKey when OM is in prepare mode.</msg>
<status status="PASS" starttime="20251007 17:25:21.734" endtime="20251007 17:25:23.501"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20251007 17:25:23.502" level="INFO">NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateKey when OM is in prepare mode.</msg>
<status status="PASS" starttime="20251007 17:25:23.502" endtime="20251007 17:25:23.502"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20251007 17:25:23.503" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20251007 17:25:23.502" endtime="20251007 17:25:23.503"/>
</kw>
<msg timestamp="20251007 17:25:23.503" level="INFO">${result} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateKey when OM is in prepare mode.</msg>
<status status="PASS" starttime="20251007 17:25:21.733" endtime="20251007 17:25:23.503"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OM is in prepare mode</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20251007 17:25:23.503" endtime="20251007 17:25:23.503"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>ozone sh key info /${volume_name}/${bucket_name}/prepare-key2</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20251007 17:25:23.506" level="INFO">Running command 'ozone sh key info /55035-volume-for-prepare/55035-bucket-for-prepare/prepare-key2 2&gt;&amp;1'.</msg>
<msg timestamp="20251007 17:25:25.304" level="INFO">${rc} = 255</msg>
<msg timestamp="20251007 17:25:25.304" level="INFO">${output} = KEY_NOT_FOUND Key:prepare-key2 not found</msg>
<status status="PASS" starttime="20251007 17:25:23.504" endtime="20251007 17:25:25.304"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20251007 17:25:25.305" level="INFO">KEY_NOT_FOUND Key:prepare-key2 not found</msg>
<status status="PASS" starttime="20251007 17:25:25.305" endtime="20251007 17:25:25.305"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20251007 17:25:25.306" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20251007 17:25:25.305" endtime="20251007 17:25:25.306"/>
</kw>
<status status="PASS" starttime="20251007 17:25:23.503" endtime="20251007 17:25:25.306"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20251007 17:25:21.732" endtime="20251007 17:25:25.306"/>
</test>
<doc>Smoke test to test preparing OMs in an OM HA cluster.</doc>
<status status="PASS" starttime="20251007 17:24:49.069" endtime="20251007 17:25:25.307"/>
</suite>
<suite id="s1-s4" name="Om-Prepared" source="/opt/hadoop/smoketest/omha/om-prepared.robot">
<kw name="Get Security Enabled From Config" library="commonlib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' != ''</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20251007 17:25:25.848" endtime="20251007 17:25:25.848"/>
</kw>
<kw name="Execute" library="os">
<var>${value}</var>
<arg>ozone getconf confKey ozone.security.enabled</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20251007 17:25:25.851" level="INFO">Running command 'ozone getconf confKey ozone.security.enabled 2&gt;&amp;1'.</msg>
<msg timestamp="20251007 17:25:26.548" level="INFO">${rc} = 0</msg>
<msg timestamp="20251007 17:25:26.548" level="INFO">${output} = false</msg>
<status status="PASS" starttime="20251007 17:25:25.849" endtime="20251007 17:25:26.548"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20251007 17:25:26.549" level="INFO">false</msg>
<status status="PASS" starttime="20251007 17:25:26.548" endtime="20251007 17:25:26.549"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20251007 17:25:26.549" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20251007 17:25:26.549" endtime="20251007 17:25:26.549"/>
</kw>
<status status="PASS" starttime="20251007 17:25:25.849" endtime="20251007 17:25:26.549"/>
</kw>
<msg timestamp="20251007 17:25:26.549" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20251007 17:25:25.849" endtime="20251007 17:25:26.549"/>
</kw>
<msg timestamp="20251007 17:25:26.549" level="INFO">${value} = false</msg>
<status status="PASS" starttime="20251007 17:25:25.849" endtime="20251007 17:25:26.549"/>
</kw>
<if>
<branch type="IF" condition="'${value}' != 'true' and '${value}' != 'false'">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>false</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20251007 17:25:26.550" endtime="20251007 17:25:26.550"/>
</kw>
<status status="NOT RUN" starttime="20251007 17:25:26.550" endtime="20251007 17:25:26.550"/>
</branch>
<status status="PASS" starttime="20251007 17:25:26.550" endtime="20251007 17:25:26.550"/>
</if>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${SECURITY_ENABLED}</arg>
<arg>${value}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20251007 17:25:26.550" level="INFO">${SECURITY_ENABLED} = false</msg>
<status status="PASS" starttime="20251007 17:25:26.550" endtime="20251007 17:25:26.550"/>
</kw>
<status status="PASS" starttime="20251007 17:25:25.848" endtime="20251007 17:25:26.550"/>
</kw>
<test id="s1-s4-t1" name="Test create volume fails" line="27">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20251007 17:25:26.551" endtime="20251007 17:25:26.551"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20251007 17:25:26.552" level="INFO">${random} = 57974</msg>
<status status="PASS" starttime="20251007 17:25:26.551" endtime="20251007 17:25:26.552"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume_name}</arg>
<arg>${random}-volume-for-prepare</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20251007 17:25:26.553" level="INFO">${volume_name} = 57974-volume-for-prepare</msg>
<status status="PASS" starttime="20251007 17:25:26.552" endtime="20251007 17:25:26.553"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh volume create /${volume_name}</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20251007 17:25:26.555" level="INFO">Running command 'ozone sh volume create /57974-volume-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20251007 17:25:28.343" level="INFO">${rc} = 255</msg>
<msg timestamp="20251007 17:25:28.343" level="INFO">${output} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateVolume when OM is in prepare mode.</msg>
<status status="PASS" starttime="20251007 17:25:26.553" endtime="20251007 17:25:28.343"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20251007 17:25:28.344" level="INFO">NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateVolume when OM is in prepare mode.</msg>
<status status="PASS" starttime="20251007 17:25:28.343" endtime="20251007 17:25:28.344"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20251007 17:25:28.344" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20251007 17:25:28.344" endtime="20251007 17:25:28.344"/>
</kw>
<msg timestamp="20251007 17:25:28.345" level="INFO">${result} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateVolume when OM is in prepare mode.</msg>
<status status="PASS" starttime="20251007 17:25:26.553" endtime="20251007 17:25:28.345"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OM is in prepare mode</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20251007 17:25:28.345" endtime="20251007 17:25:28.345"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh volume info /${volume_name}</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20251007 17:25:28.347" level="INFO">Running command 'ozone sh volume info /57974-volume-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20251007 17:25:30.155" level="INFO">${rc} = 255</msg>
<msg timestamp="20251007 17:25:30.155" level="INFO">${output} = VOLUME_NOT_FOUND Volume 57974-volume-for-prepare is not found</msg>
<status status="PASS" starttime="20251007 17:25:28.345" endtime="20251007 17:25:30.155"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20251007 17:25:30.156" level="INFO">VOLUME_NOT_FOUND Volume 57974-volume-for-prepare is not found</msg>
<status status="PASS" starttime="20251007 17:25:30.156" endtime="20251007 17:25:30.156"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20251007 17:25:30.156" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20251007 17:25:30.156" endtime="20251007 17:25:30.157"/>
</kw>
<msg timestamp="20251007 17:25:30.157" level="INFO">${result} = VOLUME_NOT_FOUND Volume 57974-volume-for-prepare is not found</msg>
<status status="PASS" starttime="20251007 17:25:28.345" endtime="20251007 17:25:30.157"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20251007 17:25:30.157" endtime="20251007 17:25:30.157"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20251007 17:25:26.551" endtime="20251007 17:25:30.157"/>
</test>
<test id="s1-s4-t2" name="Test list volumes succeeds" line="35">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20251007 17:25:30.158" endtime="20251007 17:25:30.158"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20251007 17:25:30.161" level="INFO">Running command 'ozone sh volume list 2&gt;&amp;1'.</msg>
<msg timestamp="20251007 17:25:32.143" level="INFO">${rc} = 0</msg>
<msg timestamp="20251007 17:25:32.143" level="INFO">${output} = [ {
  "metadata" : { },
  "name" : "37368-volume-for-cancel",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2...</msg>
<status status="PASS" starttime="20251007 17:25:30.159" endtime="20251007 17:25:32.143"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20251007 17:25:32.144" level="INFO">[ {
  "metadata" : { },
  "name" : "37368-volume-for-cancel",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2025-10-07T17:24:41.753Z",
  "modificationTime" : "2025-10-07T17:24:41.753Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ],
    "aclSet" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "READ", "LIST" ],
    "aclSet" : [ "READ", "LIST" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "s3v",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 0,
  "creationTime" : "2025-10-07T17:23:45.393Z",
  "modificationTime" : "2025-10-07T17:23:45.393Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ],
    "aclSet" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ],
    "aclSet" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "77941-volume-for-prepare",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2025-10-07T17:24:09.811Z",
  "modificationTime" : "2025-10-07T17:24:09.811Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ],
    "aclSet" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "READ", "LIST" ],
    "aclSet" : [ "READ", "LIST" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "vol1",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2025-10-07T17:24:02.483Z",
  "modificationTime" : "2025-10-07T17:24:02.483Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ],
    "aclSet" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "READ", "LIST" ],
    "aclSet" : [ "READ", "LIST" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "55035-volume-for-prepare",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2025-10-07T17:24:58.173Z",
  "modificationTime" : "2025-10-07T17:24:58.173Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ],
    "aclSet" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "READ", "LIST" ],
    "aclSet" : [ "READ", "LIST" ]
  } ],
  "refCount" : 0
} ]</msg>
<status status="PASS" starttime="20251007 17:25:32.144" endtime="20251007 17:25:32.144"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20251007 17:25:32.145" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20251007 17:25:32.144" endtime="20251007 17:25:32.145"/>
</kw>
<status status="PASS" starttime="20251007 17:25:30.159" endtime="20251007 17:25:32.145"/>
</kw>
<msg timestamp="20251007 17:25:32.145" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20251007 17:25:30.159" endtime="20251007 17:25:32.145"/>
</kw>
<msg timestamp="20251007 17:25:32.145" level="INFO">${result} = [ {
  "metadata" : { },
  "name" : "37368-volume-for-cancel",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2...</msg>
<status status="PASS" starttime="20251007 17:25:30.158" endtime="20251007 17:25:32.145"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20251007 17:25:30.158" endtime="20251007 17:25:32.145"/>
</test>
<doc>Smoke test to test that OMs are prepared in an OM HA cluster.</doc>
<status status="PASS" starttime="20251007 17:25:25.815" endtime="20251007 17:25:32.146"/>
</suite>
<suite id="s1-s5" name="Om-Prepared" source="/opt/hadoop/smoketest/omha/om-prepared.robot">
<kw name="Get Security Enabled From Config" library="commonlib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' != ''</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20251007 17:26:20.912" endtime="20251007 17:26:20.913"/>
</kw>
<kw name="Execute" library="os">
<var>${value}</var>
<arg>ozone getconf confKey ozone.security.enabled</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20251007 17:26:20.915" level="INFO">Running command 'ozone getconf confKey ozone.security.enabled 2&gt;&amp;1'.</msg>
<msg timestamp="20251007 17:26:21.615" level="INFO">${rc} = 0</msg>
<msg timestamp="20251007 17:26:21.615" level="INFO">${output} = false</msg>
<status status="PASS" starttime="20251007 17:26:20.913" endtime="20251007 17:26:21.615"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20251007 17:26:21.615" level="INFO">false</msg>
<status status="PASS" starttime="20251007 17:26:21.615" endtime="20251007 17:26:21.615"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20251007 17:26:21.616" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20251007 17:26:21.616" endtime="20251007 17:26:21.616"/>
</kw>
<status status="PASS" starttime="20251007 17:26:20.913" endtime="20251007 17:26:21.616"/>
</kw>
<msg timestamp="20251007 17:26:21.616" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20251007 17:26:20.913" endtime="20251007 17:26:21.616"/>
</kw>
<msg timestamp="20251007 17:26:21.616" level="INFO">${value} = false</msg>
<status status="PASS" starttime="20251007 17:26:20.913" endtime="20251007 17:26:21.616"/>
</kw>
<if>
<branch type="IF" condition="'${value}' != 'true' and '${value}' != 'false'">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>false</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20251007 17:26:21.617" endtime="20251007 17:26:21.617"/>
</kw>
<status status="NOT RUN" starttime="20251007 17:26:21.616" endtime="20251007 17:26:21.617"/>
</branch>
<status status="PASS" starttime="20251007 17:26:21.616" endtime="20251007 17:26:21.617"/>
</if>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${SECURITY_ENABLED}</arg>
<arg>${value}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20251007 17:26:21.617" level="INFO">${SECURITY_ENABLED} = false</msg>
<status status="PASS" starttime="20251007 17:26:21.617" endtime="20251007 17:26:21.617"/>
</kw>
<status status="PASS" starttime="20251007 17:26:20.912" endtime="20251007 17:26:21.617"/>
</kw>
<test id="s1-s5-t1" name="Test create volume fails" line="27">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20251007 17:26:21.618" endtime="20251007 17:26:21.618"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20251007 17:26:21.619" level="INFO">${random} = 18890</msg>
<status status="PASS" starttime="20251007 17:26:21.618" endtime="20251007 17:26:21.619"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume_name}</arg>
<arg>${random}-volume-for-prepare</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20251007 17:26:21.620" level="INFO">${volume_name} = 18890-volume-for-prepare</msg>
<status status="PASS" starttime="20251007 17:26:21.619" endtime="20251007 17:26:21.620"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh volume create /${volume_name}</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20251007 17:26:21.622" level="INFO">Running command 'ozone sh volume create /18890-volume-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20251007 17:26:23.447" level="INFO">${rc} = 255</msg>
<msg timestamp="20251007 17:26:23.447" level="INFO">${output} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateVolume when OM is in prepare mode.</msg>
<status status="PASS" starttime="20251007 17:26:21.620" endtime="20251007 17:26:23.447"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20251007 17:26:23.448" level="INFO">NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateVolume when OM is in prepare mode.</msg>
<status status="PASS" starttime="20251007 17:26:23.448" endtime="20251007 17:26:23.448"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20251007 17:26:23.449" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20251007 17:26:23.448" endtime="20251007 17:26:23.449"/>
</kw>
<msg timestamp="20251007 17:26:23.449" level="INFO">${result} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateVolume when OM is in prepare mode.</msg>
<status status="PASS" starttime="20251007 17:26:21.620" endtime="20251007 17:26:23.449"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OM is in prepare mode</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20251007 17:26:23.449" endtime="20251007 17:26:23.449"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh volume info /${volume_name}</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20251007 17:26:23.452" level="INFO">Running command 'ozone sh volume info /18890-volume-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20251007 17:26:25.214" level="INFO">${rc} = 255</msg>
<msg timestamp="20251007 17:26:25.214" level="INFO">${output} = VOLUME_NOT_FOUND Volume 18890-volume-for-prepare is not found</msg>
<status status="PASS" starttime="20251007 17:26:23.450" endtime="20251007 17:26:25.214"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20251007 17:26:25.215" level="INFO">VOLUME_NOT_FOUND Volume 18890-volume-for-prepare is not found</msg>
<status status="PASS" starttime="20251007 17:26:25.214" endtime="20251007 17:26:25.215"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20251007 17:26:25.215" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20251007 17:26:25.215" endtime="20251007 17:26:25.215"/>
</kw>
<msg timestamp="20251007 17:26:25.216" level="INFO">${result} = VOLUME_NOT_FOUND Volume 18890-volume-for-prepare is not found</msg>
<status status="PASS" starttime="20251007 17:26:23.449" endtime="20251007 17:26:25.216"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20251007 17:26:25.216" endtime="20251007 17:26:25.216"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20251007 17:26:21.618" endtime="20251007 17:26:25.216"/>
</test>
<test id="s1-s5-t2" name="Test list volumes succeeds" line="35">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20251007 17:26:25.217" endtime="20251007 17:26:25.217"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20251007 17:26:25.220" level="INFO">Running command 'ozone sh volume list 2&gt;&amp;1'.</msg>
<msg timestamp="20251007 17:26:27.297" level="INFO">${rc} = 0</msg>
<msg timestamp="20251007 17:26:27.297" level="INFO">${output} = [ {
  "metadata" : { },
  "name" : "37368-volume-for-cancel",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2...</msg>
<status status="PASS" starttime="20251007 17:26:25.218" endtime="20251007 17:26:27.297"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20251007 17:26:27.298" level="INFO">[ {
  "metadata" : { },
  "name" : "37368-volume-for-cancel",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2025-10-07T17:24:41.753Z",
  "modificationTime" : "2025-10-07T17:24:41.753Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ],
    "aclSet" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "READ", "LIST" ],
    "aclSet" : [ "READ", "LIST" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "s3v",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 0,
  "creationTime" : "2025-10-07T17:23:46.456Z",
  "modificationTime" : "2025-10-07T17:23:46.456Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ],
    "aclSet" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ],
    "aclSet" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "77941-volume-for-prepare",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2025-10-07T17:24:09.811Z",
  "modificationTime" : "2025-10-07T17:24:09.811Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ],
    "aclSet" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "READ", "LIST" ],
    "aclSet" : [ "READ", "LIST" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "vol1",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2025-10-07T17:24:02.483Z",
  "modificationTime" : "2025-10-07T17:24:02.483Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ],
    "aclSet" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "READ", "LIST" ],
    "aclSet" : [ "READ", "LIST" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "55035-volume-for-prepare",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2025-10-07T17:24:58.173Z",
  "modificationTime" : "2025-10-07T17:24:58.173Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ],
    "aclSet" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "READ", "LIST" ],
    "aclSet" : [ "READ", "LIST" ]
  } ],
  "refCount" : 0
} ]</msg>
<status status="PASS" starttime="20251007 17:26:27.297" endtime="20251007 17:26:27.298"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20251007 17:26:27.298" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20251007 17:26:27.298" endtime="20251007 17:26:27.298"/>
</kw>
<status status="PASS" starttime="20251007 17:26:25.218" endtime="20251007 17:26:27.298"/>
</kw>
<msg timestamp="20251007 17:26:27.298" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20251007 17:26:25.218" endtime="20251007 17:26:27.298"/>
</kw>
<msg timestamp="20251007 17:26:27.299" level="INFO">${result} = [ {
  "metadata" : { },
  "name" : "37368-volume-for-cancel",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2...</msg>
<status status="PASS" starttime="20251007 17:26:25.217" endtime="20251007 17:26:27.299"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20251007 17:26:25.217" endtime="20251007 17:26:27.299"/>
</test>
<doc>Smoke test to test that OMs are prepared in an OM HA cluster.</doc>
<status status="PASS" starttime="20251007 17:26:20.876" endtime="20251007 17:26:27.300"/>
</suite>
<suite id="s1-s6" name="Loaddata" source="/opt/hadoop/smoketest/topology/loaddata.robot">
<test id="s1-s6-t1" name="Create a volume, bucket and key" line="27">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create topvol1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20251007 17:27:15.879" level="INFO">Running command 'ozone sh volume create topvol1 2&gt;&amp;1'.</msg>
<msg timestamp="20251007 17:27:17.769" level="INFO">${rc} = 0</msg>
<msg timestamp="20251007 17:27:17.769" level="INFO">${output} = </msg>
<status status="PASS" starttime="20251007 17:27:15.877" endtime="20251007 17:27:17.769"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20251007 17:27:17.770" level="INFO"/>
<status status="PASS" starttime="20251007 17:27:17.769" endtime="20251007 17:27:17.770"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20251007 17:27:17.770" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20251007 17:27:17.770" endtime="20251007 17:27:17.770"/>
</kw>
<status status="PASS" starttime="20251007 17:27:15.877" endtime="20251007 17:27:17.770"/>
</kw>
<msg timestamp="20251007 17:27:17.771" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20251007 17:27:15.877" endtime="20251007 17:27:17.771"/>
</kw>
<msg timestamp="20251007 17:27:17.771" level="INFO">${output} = </msg>
<status status="PASS" starttime="20251007 17:27:15.876" endtime="20251007 17:27:17.771"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20251007 17:27:17.771" endtime="20251007 17:27:17.771"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /topvol1/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20251007 17:27:17.774" level="INFO">Running command 'ozone sh bucket create /topvol1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20251007 17:27:19.534" level="INFO">${rc} = 0</msg>
<msg timestamp="20251007 17:27:19.534" level="INFO">${output} = </msg>
<status status="PASS" starttime="20251007 17:27:17.772" endtime="20251007 17:27:19.534"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20251007 17:27:19.535" level="INFO"/>
<status status="PASS" starttime="20251007 17:27:19.535" endtime="20251007 17:27:19.535"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20251007 17:27:19.536" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20251007 17:27:19.536" endtime="20251007 17:27:19.536"/>
</kw>
<status status="PASS" starttime="20251007 17:27:17.772" endtime="20251007 17:27:19.536"/>
</kw>
<msg timestamp="20251007 17:27:19.536" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20251007 17:27:17.772" endtime="20251007 17:27:19.537"/>
</kw>
<msg timestamp="20251007 17:27:19.537" level="INFO">${output} = </msg>
<status status="PASS" starttime="20251007 17:27:17.771" endtime="20251007 17:27:19.537"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20251007 17:27:19.537" endtime="20251007 17:27:19.537"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /topvol1/bucket1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20251007 17:27:19.543" level="INFO">Running command 'ozone sh key put /topvol1/bucket1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20251007 17:27:22.815" level="INFO">${rc} = 0</msg>
<msg timestamp="20251007 17:27:22.815" level="INFO">${output} = </msg>
<status status="PASS" starttime="20251007 17:27:19.538" endtime="20251007 17:27:22.815"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20251007 17:27:22.816" level="INFO"/>
<status status="PASS" starttime="20251007 17:27:22.816" endtime="20251007 17:27:22.816"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20251007 17:27:22.817" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20251007 17:27:22.816" endtime="20251007 17:27:22.817"/>
</kw>
<status status="PASS" starttime="20251007 17:27:19.538" endtime="20251007 17:27:22.817"/>
</kw>
<msg timestamp="20251007 17:27:22.817" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20251007 17:27:19.538" endtime="20251007 17:27:22.817"/>
</kw>
<msg timestamp="20251007 17:27:22.817" level="INFO">${output} = </msg>
<status status="PASS" starttime="20251007 17:27:19.537" endtime="20251007 17:27:22.817"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20251007 17:27:22.817" endtime="20251007 17:27:22.818"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20251007 17:27:15.876" endtime="20251007 17:27:22.818"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20251007 17:27:15.842" endtime="20251007 17:27:22.819"/>
</suite>
<suite id="s1-s7" name="Readdata" source="/opt/hadoop/smoketest/topology/readdata.robot">
<test id="s1-s7-t1" name="Read data from previously created key" line="27">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20251007 17:27:23.362" level="INFO">${random} = 60091</msg>
<status status="PASS" starttime="20251007 17:27:23.361" endtime="20251007 17:27:23.362"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /topvol1/bucket1/key1 /tmp/key1-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20251007 17:27:23.364" level="INFO">Running command 'ozone sh key get /topvol1/bucket1/key1 /tmp/key1-60091 2&gt;&amp;1'.</msg>
<msg timestamp="20251007 17:27:26.403" level="INFO">${rc} = 0</msg>
<msg timestamp="20251007 17:27:26.403" level="INFO">${output} = </msg>
<status status="PASS" starttime="20251007 17:27:23.362" endtime="20251007 17:27:26.403"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20251007 17:27:26.403" level="INFO"/>
<status status="PASS" starttime="20251007 17:27:26.403" endtime="20251007 17:27:26.404"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20251007 17:27:26.404" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20251007 17:27:26.404" endtime="20251007 17:27:26.404"/>
</kw>
<status status="PASS" starttime="20251007 17:27:23.362" endtime="20251007 17:27:26.404"/>
</kw>
<msg timestamp="20251007 17:27:26.404" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20251007 17:27:23.362" endtime="20251007 17:27:26.404"/>
</kw>
<msg timestamp="20251007 17:27:26.404" level="INFO">${output} = </msg>
<status status="PASS" starttime="20251007 17:27:23.362" endtime="20251007 17:27:26.404"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20251007 17:27:26.404" endtime="20251007 17:27:26.405"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20251007 17:27:23.361" endtime="20251007 17:27:26.405"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20251007 17:27:23.328" endtime="20251007 17:27:26.406"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="107553"/>
</suite>
<statistics>
<total>
<stat pass="14" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="14" fail="0" skip="0" id="s1" name="ozone-om-prepare">ozone-om-prepare</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1" name="Om-Prepare">ozone-om-prepare.Om-Prepare</stat>
<stat pass="2" fail="0" skip="0" id="s1-s2" name="Om-Cancel-Prepare">ozone-om-prepare.Om-Cancel-Prepare</stat>
<stat pass="3" fail="0" skip="0" id="s1-s3" name="Om-Prepare">ozone-om-prepare.Om-Prepare</stat>
<stat pass="2" fail="0" skip="0" id="s1-s4" name="Om-Prepared">ozone-om-prepare.Om-Prepared</stat>
<stat pass="2" fail="0" skip="0" id="s1-s5" name="Om-Prepared">ozone-om-prepare.Om-Prepared</stat>
<stat pass="1" fail="0" skip="0" id="s1-s6" name="Loaddata">ozone-om-prepare.Loaddata</stat>
<stat pass="1" fail="0" skip="0" id="s1-s7" name="Readdata">ozone-om-prepare.Readdata</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
