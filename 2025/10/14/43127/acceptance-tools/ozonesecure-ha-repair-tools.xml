<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.1.1 (Python 3.9.21 on linux)" generated="20251014 16:15:06.594" rpa="false" schemaversion="4">
<suite id="s1" name="ozonesecure-ha-repair-tools">
<suite id="s1-s1" name="Kinit" source="/opt/hadoop/smoketest/kinit.robot">
<test id="s1-s1-t1" name="Kinit" line="27">
<kw name="Kinit test user" library="commonlib">
<arg>${USER}</arg>
<arg>${USER}.keytab</arg>
<kw name="Get Security Enabled From Config" library="commonlib">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' != ''</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20251014 16:08:00.702" endtime="20251014 16:08:00.702"/>
</kw>
<kw name="Execute" library="os">
<var>${value}</var>
<arg>ozone getconf confKey ozone.security.enabled</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20251014 16:08:00.706" level="INFO">Running command 'ozone getconf confKey ozone.security.enabled 2&gt;&amp;1'.</msg>
<msg timestamp="20251014 16:08:01.831" level="INFO">${rc} = 0</msg>
<msg timestamp="20251014 16:08:01.832" level="INFO">${output} = true</msg>
<status status="PASS" starttime="20251014 16:08:00.703" endtime="20251014 16:08:01.832"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20251014 16:08:01.832" level="INFO">true</msg>
<status status="PASS" starttime="20251014 16:08:01.832" endtime="20251014 16:08:01.832"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20251014 16:08:01.833" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20251014 16:08:01.833" endtime="20251014 16:08:01.833"/>
</kw>
<status status="PASS" starttime="20251014 16:08:00.703" endtime="20251014 16:08:01.833"/>
</kw>
<msg timestamp="20251014 16:08:01.833" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20251014 16:08:00.702" endtime="20251014 16:08:01.833"/>
</kw>
<msg timestamp="20251014 16:08:01.833" level="INFO">${value} = true</msg>
<status status="PASS" starttime="20251014 16:08:00.702" endtime="20251014 16:08:01.833"/>
</kw>
<if>
<branch type="IF" condition="'${value}' != 'true' and '${value}' != 'false'">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>false</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20251014 16:08:01.834" endtime="20251014 16:08:01.834"/>
</kw>
<status status="NOT RUN" starttime="20251014 16:08:01.834" endtime="20251014 16:08:01.834"/>
</branch>
<status status="PASS" starttime="20251014 16:08:01.834" endtime="20251014 16:08:01.834"/>
</if>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${SECURITY_ENABLED}</arg>
<arg>${value}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20251014 16:08:01.834" level="INFO">${SECURITY_ENABLED} = true</msg>
<status status="PASS" starttime="20251014 16:08:01.834" endtime="20251014 16:08:01.835"/>
</kw>
<status status="PASS" starttime="20251014 16:08:00.701" endtime="20251014 16:08:01.835"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20251014 16:08:01.835" endtime="20251014 16:08:01.835"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20251014 16:08:01.838" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20251014 16:08:01.842" level="INFO">${rc} = 0</msg>
<msg timestamp="20251014 16:08:01.842" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20251014 16:08:01.836" endtime="20251014 16:08:01.842"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20251014 16:08:01.843" level="INFO">scm</msg>
<status status="PASS" starttime="20251014 16:08:01.843" endtime="20251014 16:08:01.843"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20251014 16:08:01.843" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20251014 16:08:01.843" endtime="20251014 16:08:01.844"/>
</kw>
<status status="PASS" starttime="20251014 16:08:01.836" endtime="20251014 16:08:01.844"/>
</kw>
<msg timestamp="20251014 16:08:01.844" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20251014 16:08:01.836" endtime="20251014 16:08:01.844"/>
</kw>
<msg timestamp="20251014 16:08:01.844" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20251014 16:08:01.835" endtime="20251014 16:08:01.844"/>
</kw>
<msg timestamp="20251014 16:08:01.844" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20251014 16:08:01.835" endtime="20251014 16:08:01.844"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20251014 16:08:01.845" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20251014 16:08:01.844" endtime="20251014 16:08:01.845"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20251014 16:08:01.848" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20251014 16:08:01.879" level="INFO">${rc} = 0</msg>
<msg timestamp="20251014 16:08:01.880" level="INFO">${output} = </msg>
<status status="PASS" starttime="20251014 16:08:01.846" endtime="20251014 16:08:01.880"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20251014 16:08:01.880" level="INFO"/>
<status status="PASS" starttime="20251014 16:08:01.880" endtime="20251014 16:08:01.881"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20251014 16:08:01.881" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20251014 16:08:01.881" endtime="20251014 16:08:01.881"/>
</kw>
<status status="PASS" starttime="20251014 16:08:01.846" endtime="20251014 16:08:01.881"/>
</kw>
<msg timestamp="20251014 16:08:01.881" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20251014 16:08:01.845" endtime="20251014 16:08:01.881"/>
</kw>
<status status="PASS" starttime="20251014 16:08:01.845" endtime="20251014 16:08:01.881"/>
</kw>
<status status="PASS" starttime="20251014 16:08:01.845" endtime="20251014 16:08:01.881"/>
</kw>
<status status="PASS" starttime="20251014 16:08:00.701" endtime="20251014 16:08:01.882"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20251014 16:08:00.701" endtime="20251014 16:08:01.882"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" starttime="20251014 16:08:00.660" endtime="20251014 16:08:01.882"/>
</suite>
<suite id="s1-s2" name="Ratis-Transaction-Repair" source="/opt/hadoop/smoketest/repair/ratis-transaction-repair.robot">
<test id="s1-s2-t1" name="Verify OM crash at bucket create" line="31">
<kw name="Inject Fault Into OMs Only" library="BytemanKeywords">
<arg>${CRASH_RULE}</arg>
<kw name="Log" library="BuiltIn">
<arg>Injecting fault ${rule_file} into oms only</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20251014 16:08:02.609" level="INFO">Injecting fault /opt/hadoop/share/ozone/byteman/fail-create-bucket.btm into oms only</msg>
<status status="PASS" starttime="20251014 16:08:02.609" endtime="20251014 16:08:02.609"/>
</kw>
<for flavor="IN">
<var>${component}</var>
<value>@{OM_COMPONENTS}</value>
<iter>
<var name="${component}">om1</var>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<arg>Add Byteman Rule</arg>
<arg>${component}</arg>
<arg>${rule_file}</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<kw name="Add Byteman Rule" library="BytemanLibrary">
<arg>${component}</arg>
<arg>${rule_file}</arg>
<doc>Add Byteman rule into specific component</doc>
<msg timestamp="20251014 16:08:02.828" level="INFO">Add rule /opt/hadoop/share/ozone/byteman/fail-create-bucket.btm for om1 successful.</msg>
<status status="PASS" starttime="20251014 16:08:02.610" endtime="20251014 16:08:02.828"/>
</kw>
<status status="PASS" starttime="20251014 16:08:02.610" endtime="20251014 16:08:02.828"/>
</kw>
<status status="PASS" starttime="20251014 16:08:02.609" endtime="20251014 16:08:02.828"/>
</iter>
<iter>
<var name="${component}">om2</var>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<arg>Add Byteman Rule</arg>
<arg>${component}</arg>
<arg>${rule_file}</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<kw name="Add Byteman Rule" library="BytemanLibrary">
<arg>${component}</arg>
<arg>${rule_file}</arg>
<doc>Add Byteman rule into specific component</doc>
<msg timestamp="20251014 16:08:03.044" level="INFO">Add rule /opt/hadoop/share/ozone/byteman/fail-create-bucket.btm for om2 successful.</msg>
<status status="PASS" starttime="20251014 16:08:02.829" endtime="20251014 16:08:03.045"/>
</kw>
<status status="PASS" starttime="20251014 16:08:02.829" endtime="20251014 16:08:03.045"/>
</kw>
<status status="PASS" starttime="20251014 16:08:02.829" endtime="20251014 16:08:03.045"/>
</iter>
<iter>
<var name="${component}">om3</var>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<arg>Add Byteman Rule</arg>
<arg>${component}</arg>
<arg>${rule_file}</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<kw name="Add Byteman Rule" library="BytemanLibrary">
<arg>${component}</arg>
<arg>${rule_file}</arg>
<doc>Add Byteman rule into specific component</doc>
<msg timestamp="20251014 16:08:03.320" level="INFO">Add rule /opt/hadoop/share/ozone/byteman/fail-create-bucket.btm for om3 successful.</msg>
<status status="PASS" starttime="20251014 16:08:03.047" endtime="20251014 16:08:03.321"/>
</kw>
<status status="PASS" starttime="20251014 16:08:03.046" endtime="20251014 16:08:03.321"/>
</kw>
<status status="PASS" starttime="20251014 16:08:03.046" endtime="20251014 16:08:03.322"/>
</iter>
<status status="PASS" starttime="20251014 16:08:02.609" endtime="20251014 16:08:03.322"/>
</for>
<status status="PASS" starttime="20251014 16:08:02.608" endtime="20251014 16:08:03.322"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create o3://${OM_SERVICE_ID}/${VOLUME}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20251014 16:08:03.332" level="INFO">Running command 'ozone sh volume create o3://omservice/test-txn-vol 2&gt;&amp;1'.</msg>
<msg timestamp="20251014 16:08:06.967" level="INFO">${rc} = 0</msg>
<msg timestamp="20251014 16:08:06.967" level="INFO">${output} = </msg>
<status status="PASS" starttime="20251014 16:08:03.325" endtime="20251014 16:08:06.967"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20251014 16:08:06.968" level="INFO"/>
<status status="PASS" starttime="20251014 16:08:06.967" endtime="20251014 16:08:06.968"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20251014 16:08:06.968" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20251014 16:08:06.968" endtime="20251014 16:08:06.968"/>
</kw>
<status status="PASS" starttime="20251014 16:08:03.324" endtime="20251014 16:08:06.968"/>
</kw>
<msg timestamp="20251014 16:08:06.969" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20251014 16:08:03.324" endtime="20251014 16:08:06.969"/>
</kw>
<status status="PASS" starttime="20251014 16:08:03.323" endtime="20251014 16:08:06.969"/>
</kw>
<kw name="Run Process" library="Process">
<arg>ozone sh bucket create o3://${OM_SERVICE_ID}/${VOLUME}/${BAD_BUCKET}</arg>
<arg>timeout=${TIMEOUT}</arg>
<arg>shell=True</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20251014 16:08:06.969" level="INFO">Starting process:
ozone sh bucket create o3://omservice/test-txn-vol/bucket-crash-1</msg>
<msg timestamp="20251014 16:08:06.972" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20251014 16:08:16.988" level="INFO">Process did not complete in 10 seconds.</msg>
<msg timestamp="20251014 16:08:16.988" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20251014 16:08:17.089" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20251014 16:08:06.969" endtime="20251014 16:08:17.089"/>
</kw>
<kw name="Remove Fault From OMs Only" library="BytemanKeywords">
<arg>${CRASH_RULE}</arg>
<kw name="Log" library="BuiltIn">
<arg>Removing fault ${rule_file} from oms only</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20251014 16:08:17.090" level="INFO">Removing fault /opt/hadoop/share/ozone/byteman/fail-create-bucket.btm from oms only</msg>
<status status="PASS" starttime="20251014 16:08:17.090" endtime="20251014 16:08:17.090"/>
</kw>
<for flavor="IN">
<var>${component}</var>
<value>@{OM_COMPONENTS}</value>
<iter>
<var name="${component}">om1</var>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<arg>Remove Byteman Rule</arg>
<arg>${component}</arg>
<arg>${rule_file}</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<kw name="Remove Byteman Rule" library="BytemanLibrary">
<arg>${component}</arg>
<arg>${rule_file}</arg>
<doc>Remove Byteman rule for specific component</doc>
<msg timestamp="20251014 16:08:17.222" level="INFO">Remove rule /opt/hadoop/share/ozone/byteman/fail-create-bucket.btm for om1 successful.</msg>
<status status="PASS" starttime="20251014 16:08:17.091" endtime="20251014 16:08:17.222"/>
</kw>
<status status="PASS" starttime="20251014 16:08:17.091" endtime="20251014 16:08:17.222"/>
</kw>
<status status="PASS" starttime="20251014 16:08:17.091" endtime="20251014 16:08:17.222"/>
</iter>
<iter>
<var name="${component}">om2</var>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<arg>Remove Byteman Rule</arg>
<arg>${component}</arg>
<arg>${rule_file}</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<kw name="Remove Byteman Rule" library="BytemanLibrary">
<arg>${component}</arg>
<arg>${rule_file}</arg>
<doc>Remove Byteman rule for specific component</doc>
<msg timestamp="20251014 16:08:17.349" level="INFO">Remove rule /opt/hadoop/share/ozone/byteman/fail-create-bucket.btm for om2 successful.</msg>
<status status="PASS" starttime="20251014 16:08:17.223" endtime="20251014 16:08:17.349"/>
</kw>
<status status="PASS" starttime="20251014 16:08:17.223" endtime="20251014 16:08:17.349"/>
</kw>
<status status="PASS" starttime="20251014 16:08:17.223" endtime="20251014 16:08:17.349"/>
</iter>
<iter>
<var name="${component}">om3</var>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<arg>Remove Byteman Rule</arg>
<arg>${component}</arg>
<arg>${rule_file}</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<kw name="Remove Byteman Rule" library="BytemanLibrary">
<arg>${component}</arg>
<arg>${rule_file}</arg>
<doc>Remove Byteman rule for specific component</doc>
<msg timestamp="20251014 16:08:17.467" level="INFO">Remove rule /opt/hadoop/share/ozone/byteman/fail-create-bucket.btm for om3 successful.</msg>
<status status="PASS" starttime="20251014 16:08:17.350" endtime="20251014 16:08:17.467"/>
</kw>
<status status="PASS" starttime="20251014 16:08:17.350" endtime="20251014 16:08:17.467"/>
</kw>
<status status="PASS" starttime="20251014 16:08:17.350" endtime="20251014 16:08:17.467"/>
</iter>
<status status="PASS" starttime="20251014 16:08:17.090" endtime="20251014 16:08:17.467"/>
</for>
<status status="PASS" starttime="20251014 16:08:17.089" endtime="20251014 16:08:17.467"/>
</kw>
<status status="PASS" starttime="20251014 16:08:02.608" endtime="20251014 16:08:17.468"/>
</test>
<doc>Test recovering from OM crash due to transaction failure</doc>
<status status="PASS" starttime="20251014 16:08:02.564" endtime="20251014 16:08:17.468"/>
</suite>
<suite id="s1-s3" name="Kinit" source="/opt/hadoop/smoketest/kinit.robot">
<test id="s1-s3-t1" name="Kinit" line="27">
<kw name="Kinit test user" library="commonlib">
<arg>${USER}</arg>
<arg>${USER}.keytab</arg>
<kw name="Get Security Enabled From Config" library="commonlib">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' != ''</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20251014 16:09:52.806" endtime="20251014 16:09:52.807"/>
</kw>
<kw name="Execute" library="os">
<var>${value}</var>
<arg>ozone getconf confKey ozone.security.enabled</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20251014 16:09:52.812" level="INFO">Running command 'ozone getconf confKey ozone.security.enabled 2&gt;&amp;1'.</msg>
<msg timestamp="20251014 16:09:54.600" level="INFO">${rc} = 0</msg>
<msg timestamp="20251014 16:09:54.600" level="INFO">${output} = true</msg>
<status status="PASS" starttime="20251014 16:09:52.808" endtime="20251014 16:09:54.600"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20251014 16:09:54.601" level="INFO">true</msg>
<status status="PASS" starttime="20251014 16:09:54.601" endtime="20251014 16:09:54.601"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20251014 16:09:54.602" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20251014 16:09:54.602" endtime="20251014 16:09:54.602"/>
</kw>
<status status="PASS" starttime="20251014 16:09:52.807" endtime="20251014 16:09:54.602"/>
</kw>
<msg timestamp="20251014 16:09:54.602" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20251014 16:09:52.807" endtime="20251014 16:09:54.602"/>
</kw>
<msg timestamp="20251014 16:09:54.602" level="INFO">${value} = true</msg>
<status status="PASS" starttime="20251014 16:09:52.807" endtime="20251014 16:09:54.602"/>
</kw>
<if>
<branch type="IF" condition="'${value}' != 'true' and '${value}' != 'false'">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>false</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20251014 16:09:54.603" endtime="20251014 16:09:54.603"/>
</kw>
<status status="NOT RUN" starttime="20251014 16:09:54.603" endtime="20251014 16:09:54.603"/>
</branch>
<status status="PASS" starttime="20251014 16:09:54.603" endtime="20251014 16:09:54.603"/>
</if>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${SECURITY_ENABLED}</arg>
<arg>${value}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20251014 16:09:54.603" level="INFO">${SECURITY_ENABLED} = true</msg>
<status status="PASS" starttime="20251014 16:09:54.603" endtime="20251014 16:09:54.603"/>
</kw>
<status status="PASS" starttime="20251014 16:09:52.806" endtime="20251014 16:09:54.604"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20251014 16:09:54.604" endtime="20251014 16:09:54.604"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20251014 16:09:54.607" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20251014 16:09:54.611" level="INFO">${rc} = 0</msg>
<msg timestamp="20251014 16:09:54.611" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20251014 16:09:54.605" endtime="20251014 16:09:54.611"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20251014 16:09:54.612" level="INFO">om</msg>
<status status="PASS" starttime="20251014 16:09:54.611" endtime="20251014 16:09:54.612"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20251014 16:09:54.612" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20251014 16:09:54.612" endtime="20251014 16:09:54.612"/>
</kw>
<status status="PASS" starttime="20251014 16:09:54.605" endtime="20251014 16:09:54.613"/>
</kw>
<msg timestamp="20251014 16:09:54.613" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20251014 16:09:54.605" endtime="20251014 16:09:54.613"/>
</kw>
<msg timestamp="20251014 16:09:54.613" level="INFO">${instance} = om</msg>
<status status="PASS" starttime="20251014 16:09:54.604" endtime="20251014 16:09:54.613"/>
</kw>
<msg timestamp="20251014 16:09:54.613" level="INFO">${TEST_USER} = testuser/om@EXAMPLE.COM</msg>
<status status="PASS" starttime="20251014 16:09:54.604" endtime="20251014 16:09:54.613"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20251014 16:09:54.613" level="INFO">${TEST_USER} = testuser/om@EXAMPLE.COM</msg>
<status status="PASS" starttime="20251014 16:09:54.613" endtime="20251014 16:09:54.613"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20251014 16:09:54.617" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/om@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20251014 16:09:54.673" level="INFO">${rc} = 0</msg>
<msg timestamp="20251014 16:09:54.673" level="INFO">${output} = </msg>
<status status="PASS" starttime="20251014 16:09:54.615" endtime="20251014 16:09:54.673"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20251014 16:09:54.674" level="INFO"/>
<status status="PASS" starttime="20251014 16:09:54.673" endtime="20251014 16:09:54.674"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20251014 16:09:54.674" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20251014 16:09:54.674" endtime="20251014 16:09:54.674"/>
</kw>
<status status="PASS" starttime="20251014 16:09:54.614" endtime="20251014 16:09:54.675"/>
</kw>
<msg timestamp="20251014 16:09:54.675" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20251014 16:09:54.614" endtime="20251014 16:09:54.675"/>
</kw>
<status status="PASS" starttime="20251014 16:09:54.614" endtime="20251014 16:09:54.675"/>
</kw>
<status status="PASS" starttime="20251014 16:09:54.613" endtime="20251014 16:09:54.675"/>
</kw>
<status status="PASS" starttime="20251014 16:09:52.806" endtime="20251014 16:09:54.675"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20251014 16:09:52.805" endtime="20251014 16:09:54.675"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" starttime="20251014 16:09:52.749" endtime="20251014 16:09:54.676"/>
</suite>
<suite id="s1-s4" name="Om-Compact" source="/opt/hadoop/smoketest/repair/om-compact.robot">
<test id="s1-s4-t1" name="Testing OM DB Size Reduction After Compaction" line="40">
<kw name="Delete Test Keys">
<kw name="Execute" library="os">
<arg>ozone fs -rm -R -skipTrash ofs://${OM_SERVICE_ID}/vol1/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20251014 16:14:38.581" level="INFO">Running command 'ozone fs -rm -R -skipTrash ofs://omservice/vol1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20251014 16:14:47.025" level="INFO">${rc} = 0</msg>
<msg timestamp="20251014 16:14:47.025" level="INFO">${output} = Deleted ofs://omservice/vol1/bucket1</msg>
<status status="PASS" starttime="20251014 16:14:38.578" endtime="20251014 16:14:47.025"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20251014 16:14:47.026" level="INFO">Deleted ofs://omservice/vol1/bucket1</msg>
<status status="PASS" starttime="20251014 16:14:47.026" endtime="20251014 16:14:47.027"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20251014 16:14:47.027" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20251014 16:14:47.027" endtime="20251014 16:14:47.028"/>
</kw>
<status status="PASS" starttime="20251014 16:14:38.577" endtime="20251014 16:14:47.028"/>
</kw>
<msg timestamp="20251014 16:14:47.028" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20251014 16:14:38.577" endtime="20251014 16:14:47.028"/>
</kw>
<status status="PASS" starttime="20251014 16:14:38.577" endtime="20251014 16:14:47.028"/>
</kw>
<status status="PASS" starttime="20251014 16:14:38.576" endtime="20251014 16:14:47.028"/>
</kw>
<kw name="Get OM DB SST Files Size">
<var>${size_before_compaction}</var>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>find ${OM_DB_PATH} -name '*.sst' -exec du -b {} + | awk '{sum += $1} END {print sum}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20251014 16:14:47.038" level="INFO">Running command 'find /data/metadata/om.db -name '*.sst' -exec du -b {} + | awk '{sum += $1} END {print sum}' 2&gt;&amp;1'.</msg>
<msg timestamp="20251014 16:14:47.049" level="INFO">${rc} = 0</msg>
<msg timestamp="20251014 16:14:47.049" level="INFO">${output} = 6375038</msg>
<status status="PASS" starttime="20251014 16:14:47.031" endtime="20251014 16:14:47.049"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20251014 16:14:47.050" level="INFO">6375038</msg>
<status status="PASS" starttime="20251014 16:14:47.049" endtime="20251014 16:14:47.050"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20251014 16:14:47.051" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20251014 16:14:47.050" endtime="20251014 16:14:47.051"/>
</kw>
<status status="PASS" starttime="20251014 16:14:47.031" endtime="20251014 16:14:47.051"/>
</kw>
<msg timestamp="20251014 16:14:47.051" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20251014 16:14:47.030" endtime="20251014 16:14:47.051"/>
</kw>
<msg timestamp="20251014 16:14:47.052" level="INFO">${output} = 6375038</msg>
<status status="PASS" starttime="20251014 16:14:47.029" endtime="20251014 16:14:47.052"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${sst_size}</var>
<arg>${output}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20251014 16:14:47.052" level="INFO">${sst_size} = 6375038</msg>
<status status="PASS" starttime="20251014 16:14:47.052" endtime="20251014 16:14:47.052"/>
</kw>
<msg timestamp="20251014 16:14:47.053" level="INFO">${size_before_compaction} = 6375038</msg>
<status status="PASS" starttime="20251014 16:14:47.029" endtime="20251014 16:14:47.053"/>
</kw>
<kw name="Compact OM DB Column Family">
<arg>fileTable</arg>
<kw name="Execute" library="os">
<arg>ozone repair om compact --cf=${column_family} --service-id ${OM_SERVICE_ID} --node-id om1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20251014 16:14:47.059" level="INFO">Running command 'ozone repair om compact --cf=fileTable --service-id omservice --node-id om1 2&gt;&amp;1'.</msg>
<msg timestamp="20251014 16:14:53.481" level="INFO">${rc} = 0</msg>
<msg timestamp="20251014 16:14:53.481" level="INFO">${output} = Compaction request issued for om.db of om node: om1, column-family: fileTable.
Please check role logs of om1 for completion status.</msg>
<status status="PASS" starttime="20251014 16:14:47.055" endtime="20251014 16:14:53.481"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20251014 16:14:53.482" level="INFO">Compaction request issued for om.db of om node: om1, column-family: fileTable.
Please check role logs of om1 for completion status.</msg>
<status status="PASS" starttime="20251014 16:14:53.482" endtime="20251014 16:14:53.482"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20251014 16:14:53.483" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20251014 16:14:53.482" endtime="20251014 16:14:53.483"/>
</kw>
<status status="PASS" starttime="20251014 16:14:47.054" endtime="20251014 16:14:53.483"/>
</kw>
<msg timestamp="20251014 16:14:53.483" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20251014 16:14:47.054" endtime="20251014 16:14:53.484"/>
</kw>
<status status="PASS" starttime="20251014 16:14:47.053" endtime="20251014 16:14:53.484"/>
</kw>
<status status="PASS" starttime="20251014 16:14:47.053" endtime="20251014 16:14:53.484"/>
</kw>
<kw name="Compact OM DB Column Family">
<arg>deletedTable</arg>
<kw name="Execute" library="os">
<arg>ozone repair om compact --cf=${column_family} --service-id ${OM_SERVICE_ID} --node-id om1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20251014 16:14:53.493" level="INFO">Running command 'ozone repair om compact --cf=deletedTable --service-id omservice --node-id om1 2&gt;&amp;1'.</msg>
<msg timestamp="20251014 16:14:55.487" level="INFO">${rc} = 0</msg>
<msg timestamp="20251014 16:14:55.487" level="INFO">${output} = Compaction request issued for om.db of om node: om1, column-family: deletedTable.
Please check role logs of om1 for completion status.</msg>
<status status="PASS" starttime="20251014 16:14:53.487" endtime="20251014 16:14:55.487"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20251014 16:14:55.488" level="INFO">Compaction request issued for om.db of om node: om1, column-family: deletedTable.
Please check role logs of om1 for completion status.</msg>
<status status="PASS" starttime="20251014 16:14:55.487" endtime="20251014 16:14:55.488"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20251014 16:14:55.489" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20251014 16:14:55.488" endtime="20251014 16:14:55.489"/>
</kw>
<status status="PASS" starttime="20251014 16:14:53.486" endtime="20251014 16:14:55.489"/>
</kw>
<msg timestamp="20251014 16:14:55.489" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20251014 16:14:53.486" endtime="20251014 16:14:55.489"/>
</kw>
<status status="PASS" starttime="20251014 16:14:53.485" endtime="20251014 16:14:55.489"/>
</kw>
<status status="PASS" starttime="20251014 16:14:53.484" endtime="20251014 16:14:55.489"/>
</kw>
<kw name="Compact OM DB Column Family">
<arg>deletedDirectoryTable</arg>
<kw name="Execute" library="os">
<arg>ozone repair om compact --cf=${column_family} --service-id ${OM_SERVICE_ID} --node-id om1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20251014 16:14:55.493" level="INFO">Running command 'ozone repair om compact --cf=deletedDirectoryTable --service-id omservice --node-id om1 2&gt;&amp;1'.</msg>
<msg timestamp="20251014 16:14:57.289" level="INFO">${rc} = 0</msg>
<msg timestamp="20251014 16:14:57.289" level="INFO">${output} = Compaction request issued for om.db of om node: om1, column-family: deletedDirectoryTable.
Please check role logs of om1 for completion status.</msg>
<status status="PASS" starttime="20251014 16:14:55.490" endtime="20251014 16:14:57.289"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20251014 16:14:57.290" level="INFO">Compaction request issued for om.db of om node: om1, column-family: deletedDirectoryTable.
Please check role logs of om1 for completion status.</msg>
<status status="PASS" starttime="20251014 16:14:57.290" endtime="20251014 16:14:57.290"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20251014 16:14:57.291" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20251014 16:14:57.290" endtime="20251014 16:14:57.291"/>
</kw>
<status status="PASS" starttime="20251014 16:14:55.490" endtime="20251014 16:14:57.291"/>
</kw>
<msg timestamp="20251014 16:14:57.291" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20251014 16:14:55.490" endtime="20251014 16:14:57.291"/>
</kw>
<status status="PASS" starttime="20251014 16:14:55.490" endtime="20251014 16:14:57.291"/>
</kw>
<status status="PASS" starttime="20251014 16:14:55.489" endtime="20251014 16:14:57.291"/>
</kw>
<kw name="Get OM DB SST Files Size">
<var>${size_after_compaction}</var>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>find ${OM_DB_PATH} -name '*.sst' -exec du -b {} + | awk '{sum += $1} END {print sum}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20251014 16:14:57.295" level="INFO">Running command 'find /data/metadata/om.db -name '*.sst' -exec du -b {} + | awk '{sum += $1} END {print sum}' 2&gt;&amp;1'.</msg>
<msg timestamp="20251014 16:14:57.301" level="INFO">${rc} = 0</msg>
<msg timestamp="20251014 16:14:57.301" level="INFO">${output} = 4631708</msg>
<status status="PASS" starttime="20251014 16:14:57.293" endtime="20251014 16:14:57.301"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20251014 16:14:57.302" level="INFO">4631708</msg>
<status status="PASS" starttime="20251014 16:14:57.301" endtime="20251014 16:14:57.302"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20251014 16:14:57.302" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20251014 16:14:57.302" endtime="20251014 16:14:57.302"/>
</kw>
<status status="PASS" starttime="20251014 16:14:57.292" endtime="20251014 16:14:57.302"/>
</kw>
<msg timestamp="20251014 16:14:57.302" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20251014 16:14:57.292" endtime="20251014 16:14:57.302"/>
</kw>
<msg timestamp="20251014 16:14:57.302" level="INFO">${output} = 4631708</msg>
<status status="PASS" starttime="20251014 16:14:57.292" endtime="20251014 16:14:57.302"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${sst_size}</var>
<arg>${output}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20251014 16:14:57.303" level="INFO">${sst_size} = 4631708</msg>
<status status="PASS" starttime="20251014 16:14:57.303" endtime="20251014 16:14:57.303"/>
</kw>
<msg timestamp="20251014 16:14:57.303" level="INFO">${size_after_compaction} = 4631708</msg>
<status status="PASS" starttime="20251014 16:14:57.291" endtime="20251014 16:14:57.303"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${size_after_compaction} &lt; ${size_before_compaction}</arg>
<arg>OM DB size should be reduced after compaction. Before: ${size_before_compaction}, After: ${size_after_compaction}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20251014 16:14:57.303" endtime="20251014 16:14:57.304"/>
</kw>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20251014 16:14:38.576" endtime="20251014 16:14:57.304"/>
</test>
<doc>Test for OM DB Compaction Repair Tool</doc>
<status status="PASS" starttime="20251014 16:14:38.508" endtime="20251014 16:14:57.305"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="36850"/>
</suite>
<statistics>
<total>
<stat pass="4" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="4" fail="0" skip="0" id="s1" name="ozonesecure-ha-repair-tools">ozonesecure-ha-repair-tools</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1" name="Kinit">ozonesecure-ha-repair-tools.Kinit</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2" name="Ratis-Transaction-Repair">ozonesecure-ha-repair-tools.Ratis-Transaction-Repair</stat>
<stat pass="1" fail="0" skip="0" id="s1-s3" name="Kinit">ozonesecure-ha-repair-tools.Kinit</stat>
<stat pass="1" fail="0" skip="0" id="s1-s4" name="Om-Compact">ozonesecure-ha-repair-tools.Om-Compact</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
