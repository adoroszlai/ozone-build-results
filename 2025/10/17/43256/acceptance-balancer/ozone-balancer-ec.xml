<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.1.1 (Python 3.9.21 on linux)" generated="20251017 15:52:23.550" rpa="false" schemaversion="4">
<suite id="s1" name="ozone-balancer-ec" source="/opt/hadoop/smoketest/balancer/testBalancer.robot">
<kw name="Get Security Enabled From Config" library="commonlib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' != ''</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20251017 15:41:34.332" endtime="20251017 15:41:34.333"/>
</kw>
<kw name="Execute" library="os">
<var>${value}</var>
<arg>ozone getconf confKey ozone.security.enabled</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20251017 15:41:34.336" level="INFO">Running command 'ozone getconf confKey ozone.security.enabled 2&gt;&amp;1'.</msg>
<msg timestamp="20251017 15:41:35.195" level="INFO">${rc} = 0</msg>
<msg timestamp="20251017 15:41:35.196" level="INFO">${output} = false</msg>
<status status="PASS" starttime="20251017 15:41:34.333" endtime="20251017 15:41:35.196"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20251017 15:41:35.197" level="INFO">false</msg>
<status status="PASS" starttime="20251017 15:41:35.196" endtime="20251017 15:41:35.197"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20251017 15:41:35.197" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20251017 15:41:35.197" endtime="20251017 15:41:35.197"/>
</kw>
<status status="PASS" starttime="20251017 15:41:34.333" endtime="20251017 15:41:35.197"/>
</kw>
<msg timestamp="20251017 15:41:35.197" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20251017 15:41:34.333" endtime="20251017 15:41:35.197"/>
</kw>
<msg timestamp="20251017 15:41:35.198" level="INFO">${value} = false</msg>
<status status="PASS" starttime="20251017 15:41:34.333" endtime="20251017 15:41:35.198"/>
</kw>
<if>
<branch type="IF" condition="'${value}' != 'true' and '${value}' != 'false'">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>false</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20251017 15:41:35.198" endtime="20251017 15:41:35.198"/>
</kw>
<status status="NOT RUN" starttime="20251017 15:41:35.198" endtime="20251017 15:41:35.198"/>
</branch>
<status status="PASS" starttime="20251017 15:41:35.198" endtime="20251017 15:41:35.198"/>
</if>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${SECURITY_ENABLED}</arg>
<arg>${value}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20251017 15:41:35.199" level="INFO">${SECURITY_ENABLED} = false</msg>
<status status="PASS" starttime="20251017 15:41:35.198" endtime="20251017 15:41:35.199"/>
</kw>
<status status="PASS" starttime="20251017 15:41:34.332" endtime="20251017 15:41:35.199"/>
</kw>
<test id="s1-t1" name="Verify Container Balancer for RATIS/EC containers" line="158">
<kw name="Prepare For Tests">
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=/tmp/100mb bs=1048576 count=100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20251017 15:41:35.203" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/100mb bs=1048576 count=100 2&gt;&amp;1'.</msg>
<msg timestamp="20251017 15:41:35.606" level="INFO">${rc} = 0</msg>
<msg timestamp="20251017 15:41:35.606" level="INFO">${output} = 100+0 records in
100+0 records out
104857600 bytes (105 MB, 100 MiB) copied, 0.398826 s, 263 MB/s</msg>
<status status="PASS" starttime="20251017 15:41:35.201" endtime="20251017 15:41:35.606"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20251017 15:41:35.607" level="INFO">100+0 records in
100+0 records out
104857600 bytes (105 MB, 100 MiB) copied, 0.398826 s, 263 MB/s</msg>
<status status="PASS" starttime="20251017 15:41:35.607" endtime="20251017 15:41:35.607"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20251017 15:41:35.608" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20251017 15:41:35.608" endtime="20251017 15:41:35.608"/>
</kw>
<status status="PASS" starttime="20251017 15:41:35.200" endtime="20251017 15:41:35.608"/>
</kw>
<msg timestamp="20251017 15:41:35.608" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20251017 15:41:35.200" endtime="20251017 15:41:35.608"/>
</kw>
<status status="PASS" starttime="20251017 15:41:35.200" endtime="20251017 15:41:35.608"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20251017 15:41:35.609" endtime="20251017 15:41:35.609"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create /${VOLUME}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20251017 15:41:35.613" level="INFO">Running command 'ozone sh volume create /volume1 2&gt;&amp;1'.</msg>
<msg timestamp="20251017 15:41:37.698" level="INFO">${rc} = 0</msg>
<msg timestamp="20251017 15:41:37.698" level="INFO">${output} = </msg>
<status status="PASS" starttime="20251017 15:41:35.610" endtime="20251017 15:41:37.698"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20251017 15:41:37.699" level="INFO"/>
<status status="PASS" starttime="20251017 15:41:37.698" endtime="20251017 15:41:37.699"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20251017 15:41:37.699" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20251017 15:41:37.699" endtime="20251017 15:41:37.699"/>
</kw>
<status status="PASS" starttime="20251017 15:41:35.610" endtime="20251017 15:41:37.699"/>
</kw>
<msg timestamp="20251017 15:41:37.699" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20251017 15:41:35.610" endtime="20251017 15:41:37.700"/>
</kw>
<status status="PASS" starttime="20251017 15:41:35.609" endtime="20251017 15:41:37.700"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create --replication ${REPLICATION} --type ${TYPE} /${VOLUME}/${BUCKET}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20251017 15:41:37.704" level="INFO">Running command 'ozone sh bucket create --replication rs-3-2-1024k --type EC /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20251017 15:41:39.810" level="INFO">${rc} = 0</msg>
<msg timestamp="20251017 15:41:39.810" level="INFO">${output} = </msg>
<status status="PASS" starttime="20251017 15:41:37.701" endtime="20251017 15:41:39.810"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20251017 15:41:39.811" level="INFO"/>
<status status="PASS" starttime="20251017 15:41:39.810" endtime="20251017 15:41:39.811"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20251017 15:41:39.811" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20251017 15:41:39.811" endtime="20251017 15:41:39.811"/>
</kw>
<status status="PASS" starttime="20251017 15:41:37.701" endtime="20251017 15:41:39.812"/>
</kw>
<msg timestamp="20251017 15:41:39.812" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20251017 15:41:37.700" endtime="20251017 15:41:39.812"/>
</kw>
<status status="PASS" starttime="20251017 15:41:37.700" endtime="20251017 15:41:39.812"/>
</kw>
<status status="PASS" starttime="20251017 15:41:35.200" endtime="20251017 15:41:39.812"/>
</kw>
<kw name="Datanode In Maintenance Mode">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin datanode maintenance ${HOST}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20251017 15:41:39.816" level="INFO">Running command 'ozone admin datanode maintenance datanode1 2&gt;&amp;1'.</msg>
<msg timestamp="20251017 15:41:41.409" level="INFO">${rc} = 0</msg>
<msg timestamp="20251017 15:41:41.409" level="INFO">${output} = Entering maintenance mode on datanode(s):
datanode1</msg>
<status status="PASS" starttime="20251017 15:41:39.813" endtime="20251017 15:41:41.409"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20251017 15:41:41.410" level="INFO">Entering maintenance mode on datanode(s):
datanode1</msg>
<status status="PASS" starttime="20251017 15:41:41.409" endtime="20251017 15:41:41.410"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20251017 15:41:41.411" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20251017 15:41:41.410" endtime="20251017 15:41:41.411"/>
</kw>
<status status="PASS" starttime="20251017 15:41:39.813" endtime="20251017 15:41:41.411"/>
</kw>
<msg timestamp="20251017 15:41:41.411" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20251017 15:41:39.813" endtime="20251017 15:41:41.411"/>
</kw>
<msg timestamp="20251017 15:41:41.411" level="INFO">${result} = Entering maintenance mode on datanode(s):
datanode1</msg>
<status status="PASS" starttime="20251017 15:41:39.812" endtime="20251017 15:41:41.411"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Entering maintenance mode on datanode</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20251017 15:41:41.411" endtime="20251017 15:41:41.411"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin datanode list | grep "Operational State:*"</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20251017 15:41:41.415" level="INFO">Running command 'ozone admin datanode list | grep "Operational State:*" 2&gt;&amp;1'.</msg>
<msg timestamp="20251017 15:41:43.060" level="INFO">${rc} = 0</msg>
<msg timestamp="20251017 15:41:43.060" level="INFO">${output} = Operational State: ENTERING_MAINTENANCE
Operational State: IN_SERVICE
Operational State: IN_SERVICE
Operational State: IN_SERVICE
Operational State: IN_SERVICE
Operational State: IN_SERVICE</msg>
<status status="PASS" starttime="20251017 15:41:41.412" endtime="20251017 15:41:43.060"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20251017 15:41:43.061" level="INFO">Operational State: ENTERING_MAINTENANCE
Operational State: IN_SERVICE
Operational State: IN_SERVICE
Operational State: IN_SERVICE
Operational State: IN_SERVICE
Operational State: IN_SERVICE</msg>
<status status="PASS" starttime="20251017 15:41:43.060" endtime="20251017 15:41:43.061"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20251017 15:41:43.061" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20251017 15:41:43.061" endtime="20251017 15:41:43.062"/>
</kw>
<status status="PASS" starttime="20251017 15:41:41.412" endtime="20251017 15:41:43.062"/>
</kw>
<msg timestamp="20251017 15:41:43.062" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20251017 15:41:41.412" endtime="20251017 15:41:43.062"/>
</kw>
<msg timestamp="20251017 15:41:43.062" level="INFO">${result} = Operational State: ENTERING_MAINTENANCE
Operational State: IN_SERVICE
Operational State: IN_SERVICE
Operational State: IN_SERVICE
Operational State: IN_SERVICE
Operational State: IN_SERVICE</msg>
<status status="PASS" starttime="20251017 15:41:41.412" endtime="20251017 15:41:43.062"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>30sec</arg>
<arg>5sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>ENTERING_MAINTENANCE</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ENTERING_MAINTENANCE</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20251017 15:41:43.062" endtime="20251017 15:41:43.063"/>
</kw>
<status status="PASS" starttime="20251017 15:41:43.062" endtime="20251017 15:41:43.063"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Related pipelines are closed</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Related pipelines are closed">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin datanode list | awk -v RS= '{$1=$1}1'|grep MAINT | sed -e 's/^.*pipelines: \\(.*\\)$/\\1/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20251017 15:41:43.067" level="INFO">Running command 'ozone admin datanode list | awk -v RS= '{$1=$1}1'|grep MAINT | sed -e 's/^.*pipelines: \(.*\)$/\1/' 2&gt;&amp;1'.</msg>
<msg timestamp="20251017 15:41:44.734" level="INFO">${rc} = 0</msg>
<msg timestamp="20251017 15:41:44.734" level="INFO">${output} = d6ba47a4-7263-482f-8538-6254e4c13df2/RATIS/THREE/RATIS/OPEN/Follower</msg>
<status status="PASS" starttime="20251017 15:41:43.065" endtime="20251017 15:41:44.734"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20251017 15:41:44.735" level="INFO">d6ba47a4-7263-482f-8538-6254e4c13df2/RATIS/THREE/RATIS/OPEN/Follower</msg>
<status status="PASS" starttime="20251017 15:41:44.734" endtime="20251017 15:41:44.735"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20251017 15:41:44.735" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20251017 15:41:44.735" endtime="20251017 15:41:44.735"/>
</kw>
<status status="PASS" starttime="20251017 15:41:43.064" endtime="20251017 15:41:44.735"/>
</kw>
<msg timestamp="20251017 15:41:44.735" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20251017 15:41:43.064" endtime="20251017 15:41:44.735"/>
</kw>
<msg timestamp="20251017 15:41:44.736" level="INFO">${result} = d6ba47a4-7263-482f-8538-6254e4c13df2/RATIS/THREE/RATIS/OPEN/Follower</msg>
<status status="PASS" starttime="20251017 15:41:43.064" endtime="20251017 15:41:44.736"/>
</kw>
<kw name="Should Contain Any" library="BuiltIn">
<arg>${result}</arg>
<arg>CLOSED</arg>
<arg>No related pipelines or the node is not in Healthy state.</arg>
<doc>Fails if ``container`` does not contain any of the ``*items``.</doc>
<msg timestamp="20251017 15:41:44.736" level="FAIL">'d6ba47a4-7263-482f-8538-6254e4c13df2/RATIS/THREE/RATIS/OPEN/Follower' does not contain any of 'CLOSED' or 'No related pipelines or the node is not in Healthy state.'</msg>
<status status="FAIL" starttime="20251017 15:41:44.736" endtime="20251017 15:41:44.736"/>
</kw>
<status status="FAIL" starttime="20251017 15:41:43.063" endtime="20251017 15:41:44.736"/>
</kw>
<kw name="Related pipelines are closed">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin datanode list | awk -v RS= '{$1=$1}1'|grep MAINT | sed -e 's/^.*pipelines: \\(.*\\)$/\\1/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20251017 15:41:54.741" level="INFO">Running command 'ozone admin datanode list | awk -v RS= '{$1=$1}1'|grep MAINT | sed -e 's/^.*pipelines: \(.*\)$/\1/' 2&gt;&amp;1'.</msg>
<msg timestamp="20251017 15:41:56.289" level="INFO">${rc} = 0</msg>
<msg timestamp="20251017 15:41:56.289" level="INFO">${output} = d6ba47a4-7263-482f-8538-6254e4c13df2/RATIS/THREE/RATIS/OPEN/Follower</msg>
<status status="PASS" starttime="20251017 15:41:54.738" endtime="20251017 15:41:56.289"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20251017 15:41:56.290" level="INFO">d6ba47a4-7263-482f-8538-6254e4c13df2/RATIS/THREE/RATIS/OPEN/Follower</msg>
<status status="PASS" starttime="20251017 15:41:56.290" endtime="20251017 15:41:56.290"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20251017 15:41:56.291" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20251017 15:41:56.291" endtime="20251017 15:41:56.291"/>
</kw>
<status status="PASS" starttime="20251017 15:41:54.738" endtime="20251017 15:41:56.291"/>
</kw>
<msg timestamp="20251017 15:41:56.291" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20251017 15:41:54.737" endtime="20251017 15:41:56.291"/>
</kw>
<msg timestamp="20251017 15:41:56.291" level="INFO">${result} = d6ba47a4-7263-482f-8538-6254e4c13df2/RATIS/THREE/RATIS/OPEN/Follower</msg>
<status status="PASS" starttime="20251017 15:41:54.737" endtime="20251017 15:41:56.291"/>
</kw>
<kw name="Should Contain Any" library="BuiltIn">
<arg>${result}</arg>
<arg>CLOSED</arg>
<arg>No related pipelines or the node is not in Healthy state.</arg>
<doc>Fails if ``container`` does not contain any of the ``*items``.</doc>
<msg timestamp="20251017 15:41:56.292" level="FAIL">'d6ba47a4-7263-482f-8538-6254e4c13df2/RATIS/THREE/RATIS/OPEN/Follower' does not contain any of 'CLOSED' or 'No related pipelines or the node is not in Healthy state.'</msg>
<status status="FAIL" starttime="20251017 15:41:56.291" endtime="20251017 15:41:56.292"/>
</kw>
<status status="FAIL" starttime="20251017 15:41:54.737" endtime="20251017 15:41:56.292"/>
</kw>
<kw name="Related pipelines are closed">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin datanode list | awk -v RS= '{$1=$1}1'|grep MAINT | sed -e 's/^.*pipelines: \\(.*\\)$/\\1/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20251017 15:42:06.297" level="INFO">Running command 'ozone admin datanode list | awk -v RS= '{$1=$1}1'|grep MAINT | sed -e 's/^.*pipelines: \(.*\)$/\1/' 2&gt;&amp;1'.</msg>
<msg timestamp="20251017 15:42:07.958" level="INFO">${rc} = 0</msg>
<msg timestamp="20251017 15:42:07.958" level="INFO">${output} = d6ba47a4-7263-482f-8538-6254e4c13df2/RATIS/THREE/RATIS/OPEN/Follower</msg>
<status status="PASS" starttime="20251017 15:42:06.294" endtime="20251017 15:42:07.958"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20251017 15:42:07.959" level="INFO">d6ba47a4-7263-482f-8538-6254e4c13df2/RATIS/THREE/RATIS/OPEN/Follower</msg>
<status status="PASS" starttime="20251017 15:42:07.958" endtime="20251017 15:42:07.959"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20251017 15:42:07.959" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20251017 15:42:07.959" endtime="20251017 15:42:07.959"/>
</kw>
<status status="PASS" starttime="20251017 15:42:06.293" endtime="20251017 15:42:07.959"/>
</kw>
<msg timestamp="20251017 15:42:07.959" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20251017 15:42:06.293" endtime="20251017 15:42:07.959"/>
</kw>
<msg timestamp="20251017 15:42:07.960" level="INFO">${result} = d6ba47a4-7263-482f-8538-6254e4c13df2/RATIS/THREE/RATIS/OPEN/Follower</msg>
<status status="PASS" starttime="20251017 15:42:06.293" endtime="20251017 15:42:07.960"/>
</kw>
<kw name="Should Contain Any" library="BuiltIn">
<arg>${result}</arg>
<arg>CLOSED</arg>
<arg>No related pipelines or the node is not in Healthy state.</arg>
<doc>Fails if ``container`` does not contain any of the ``*items``.</doc>
<msg timestamp="20251017 15:42:07.960" level="FAIL">'d6ba47a4-7263-482f-8538-6254e4c13df2/RATIS/THREE/RATIS/OPEN/Follower' does not contain any of 'CLOSED' or 'No related pipelines or the node is not in Healthy state.'</msg>
<status status="FAIL" starttime="20251017 15:42:07.960" endtime="20251017 15:42:07.960"/>
</kw>
<status status="FAIL" starttime="20251017 15:42:06.292" endtime="20251017 15:42:07.960"/>
</kw>
<kw name="Related pipelines are closed">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin datanode list | awk -v RS= '{$1=$1}1'|grep MAINT | sed -e 's/^.*pipelines: \\(.*\\)$/\\1/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20251017 15:42:17.965" level="INFO">Running command 'ozone admin datanode list | awk -v RS= '{$1=$1}1'|grep MAINT | sed -e 's/^.*pipelines: \(.*\)$/\1/' 2&gt;&amp;1'.</msg>
<msg timestamp="20251017 15:42:19.855" level="INFO">${rc} = 0</msg>
<msg timestamp="20251017 15:42:19.855" level="INFO">${output} = d6ba47a4-7263-482f-8538-6254e4c13df2/RATIS/THREE/RATIS/CLOSED/Follower</msg>
<status status="PASS" starttime="20251017 15:42:17.962" endtime="20251017 15:42:19.855"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20251017 15:42:19.856" level="INFO">d6ba47a4-7263-482f-8538-6254e4c13df2/RATIS/THREE/RATIS/CLOSED/Follower</msg>
<status status="PASS" starttime="20251017 15:42:19.855" endtime="20251017 15:42:19.856"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20251017 15:42:19.856" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20251017 15:42:19.856" endtime="20251017 15:42:19.856"/>
</kw>
<status status="PASS" starttime="20251017 15:42:17.962" endtime="20251017 15:42:19.856"/>
</kw>
<msg timestamp="20251017 15:42:19.856" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20251017 15:42:17.962" endtime="20251017 15:42:19.857"/>
</kw>
<msg timestamp="20251017 15:42:19.857" level="INFO">${result} = d6ba47a4-7263-482f-8538-6254e4c13df2/RATIS/THREE/RATIS/CLOSED/Follower</msg>
<status status="PASS" starttime="20251017 15:42:17.961" endtime="20251017 15:42:19.857"/>
</kw>
<kw name="Should Contain Any" library="BuiltIn">
<arg>${result}</arg>
<arg>CLOSED</arg>
<arg>No related pipelines or the node is not in Healthy state.</arg>
<doc>Fails if ``container`` does not contain any of the ``*items``.</doc>
<status status="PASS" starttime="20251017 15:42:19.857" endtime="20251017 15:42:19.857"/>
</kw>
<status status="PASS" starttime="20251017 15:42:17.961" endtime="20251017 15:42:19.857"/>
</kw>
<status status="PASS" starttime="20251017 15:41:43.063" endtime="20251017 15:42:19.857"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>60000ms</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20251017 15:43:19.858" level="INFO">Slept 1 minute</msg>
<status status="PASS" starttime="20251017 15:42:19.857" endtime="20251017 15:43:19.858"/>
</kw>
<status status="PASS" starttime="20251017 15:41:39.812" endtime="20251017 15:43:19.858"/>
</kw>
<kw name="Get Uuid">
<var>${uuid}</var>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin datanode list | awk -v RS= '{$1=$1}1'| grep ${HOST} | sed -e 's/Datanode: //'|sed -e 's/ .*$//'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20251017 15:43:19.862" level="INFO">Running command 'ozone admin datanode list | awk -v RS= '{$1=$1}1'| grep datanode1 | sed -e 's/Datanode: //'|sed -e 's/ .*$//' 2&gt;&amp;1'.</msg>
<msg timestamp="20251017 15:43:21.416" level="INFO">${rc} = 0</msg>
<msg timestamp="20251017 15:43:21.416" level="INFO">${output} = 80649811-96da-46bd-8bf5-65c7fafb5819</msg>
<status status="PASS" starttime="20251017 15:43:19.859" endtime="20251017 15:43:21.416"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20251017 15:43:21.417" level="INFO">80649811-96da-46bd-8bf5-65c7fafb5819</msg>
<status status="PASS" starttime="20251017 15:43:21.416" endtime="20251017 15:43:21.417"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20251017 15:43:21.417" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20251017 15:43:21.417" endtime="20251017 15:43:21.417"/>
</kw>
<status status="PASS" starttime="20251017 15:43:19.859" endtime="20251017 15:43:21.417"/>
</kw>
<msg timestamp="20251017 15:43:21.418" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20251017 15:43:19.859" endtime="20251017 15:43:21.418"/>
</kw>
<msg timestamp="20251017 15:43:21.418" level="INFO">${result} = 80649811-96da-46bd-8bf5-65c7fafb5819</msg>
<status status="PASS" starttime="20251017 15:43:19.858" endtime="20251017 15:43:21.418"/>
</kw>
<msg timestamp="20251017 15:43:21.418" level="INFO">${uuid} = 80649811-96da-46bd-8bf5-65c7fafb5819</msg>
<status status="PASS" starttime="20251017 15:43:19.858" endtime="20251017 15:43:21.418"/>
</kw>
<kw name="Datanode Usageinfo">
<arg>${uuid}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin datanode usageinfo --uuid=${uuid}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20251017 15:43:21.422" level="INFO">Running command 'ozone admin datanode usageinfo --uuid=80649811-96da-46bd-8bf5-65c7fafb5819 2&gt;&amp;1'.</msg>
<msg timestamp="20251017 15:43:22.960" level="INFO">${rc} = 0</msg>
<msg timestamp="20251017 15:43:22.960" level="INFO">${output} = Usage Information (1 Datanodes)

UUID         : 80649811-96da-46bd-8bf5-65c7fafb5819 
IP Address   : 172.18.0.11 
Hostname     : ozone-balancer-datanode1-1.ozone-balancer_default 
Capacity     : 21472...</msg>
<status status="PASS" starttime="20251017 15:43:21.419" endtime="20251017 15:43:22.960"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20251017 15:43:22.961" level="INFO">Usage Information (1 Datanodes)

UUID         : 80649811-96da-46bd-8bf5-65c7fafb5819 
IP Address   : 172.18.0.11 
Hostname     : ozone-balancer-datanode1-1.ozone-balancer_default 
Capacity     : 2147268899 B (2.00 GB) 
Total Used   : 12622115 B (12.04 MB) 
Total Used % : 0.59% 
Ozone Used   : 4096 B (4 KB) 
Ozone Used % : 0.00% 
Remaining    : 2134646784 B (1.99 GB) 
Remaining %  : 99.41% 
Pipeline(s)  : 1 
Container(s) : 0 
Container Pre-allocated : 0 B (0 B) 
Remaining Allocatable   : 2134646784 B (1.99 GB) 
Free Space To Spare     : 104857600 B (100 MB) 
</msg>
<status status="PASS" starttime="20251017 15:43:22.961" endtime="20251017 15:43:22.961"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20251017 15:43:22.962" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20251017 15:43:22.961" endtime="20251017 15:43:22.962"/>
</kw>
<status status="PASS" starttime="20251017 15:43:21.419" endtime="20251017 15:43:22.962"/>
</kw>
<msg timestamp="20251017 15:43:22.962" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20251017 15:43:21.419" endtime="20251017 15:43:22.962"/>
</kw>
<msg timestamp="20251017 15:43:22.962" level="INFO">${result} = Usage Information (1 Datanodes)

UUID         : 80649811-96da-46bd-8bf5-65c7fafb5819 
IP Address   : 172.18.0.11 
Hostname     : ozone-balancer-datanode1-1.ozone-balancer_default 
Capacity     : 21472...</msg>
<status status="PASS" starttime="20251017 15:43:21.418" endtime="20251017 15:43:22.962"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Ozone Used</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20251017 15:43:22.962" endtime="20251017 15:43:22.962"/>
</kw>
<status status="PASS" starttime="20251017 15:43:21.418" endtime="20251017 15:43:22.963"/>
</kw>
<kw name="Create Multiple Keys">
<arg>3</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${file}</var>
<arg>/tmp/100mb</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20251017 15:43:22.963" level="INFO">${file} = /tmp/100mb</msg>
<status status="PASS" starttime="20251017 15:43:22.963" endtime="20251017 15:43:22.963"/>
</kw>
<for flavor="IN RANGE">
<var>${INDEX}</var>
<value>${NUM_KEYS}</value>
<iter>
<var name="${INDEX}">0</var>
<kw name="Set Variable" library="BuiltIn">
<var>${fileName}</var>
<arg>file-${INDEX}.txt</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20251017 15:43:22.964" level="INFO">${fileName} = file-0.txt</msg>
<status status="PASS" starttime="20251017 15:43:22.964" endtime="20251017 15:43:22.964"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>/${VOLUME}/${BUCKET}/${fileName}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20251017 15:43:22.965" level="INFO">${key} = /volume1/bucket1/file-0.txt</msg>
<status status="PASS" starttime="20251017 15:43:22.964" endtime="20251017 15:43:22.965"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${fileName}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20251017 15:43:22.965" level="INFO">file-0.txt</msg>
<status status="PASS" starttime="20251017 15:43:22.965" endtime="20251017 15:43:22.965"/>
</kw>
<kw name="Create Key" library="shell">
<arg>${key}</arg>
<arg>${file}</arg>
<arg>--replication=${REPLICATION} --type=${TYPE}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put ${args} ${key} ${file}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20251017 15:43:22.969" level="INFO">Running command 'ozone sh key put --replication=rs-3-2-1024k --type=EC /volume1/bucket1/file-0.txt /tmp/100mb 2&gt;&amp;1'.</msg>
<msg timestamp="20251017 15:43:30.027" level="INFO">${rc} = 0</msg>
<msg timestamp="20251017 15:43:30.027" level="INFO">${output} = </msg>
<status status="PASS" starttime="20251017 15:43:22.966" endtime="20251017 15:43:30.027"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20251017 15:43:30.028" level="INFO"/>
<status status="PASS" starttime="20251017 15:43:30.028" endtime="20251017 15:43:30.028"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20251017 15:43:30.029" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20251017 15:43:30.028" endtime="20251017 15:43:30.029"/>
</kw>
<status status="PASS" starttime="20251017 15:43:22.966" endtime="20251017 15:43:30.029"/>
</kw>
<msg timestamp="20251017 15:43:30.029" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20251017 15:43:22.966" endtime="20251017 15:43:30.029"/>
</kw>
<msg timestamp="20251017 15:43:30.029" level="INFO">${output} = </msg>
<status status="PASS" starttime="20251017 15:43:22.966" endtime="20251017 15:43:30.029"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20251017 15:43:30.029" endtime="20251017 15:43:30.029"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Uploaded ${file} to ${key}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20251017 15:43:30.030" level="INFO">Uploaded /tmp/100mb to /volume1/bucket1/file-0.txt</msg>
<status status="PASS" starttime="20251017 15:43:30.029" endtime="20251017 15:43:30.030"/>
</kw>
<status status="PASS" starttime="20251017 15:43:22.965" endtime="20251017 15:43:30.030"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20251017 15:43:30.031" level="INFO">${postfix} = 19534</msg>
<status status="PASS" starttime="20251017 15:43:30.031" endtime="20251017 15:43:30.031"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20251017 15:43:30.031" level="INFO">${tmpfile} = /tmp/tempkey-19534</msg>
<status status="PASS" starttime="20251017 15:43:30.031" endtime="20251017 15:43:30.032"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone ${cmd} ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20251017 15:43:30.035" level="INFO">Running command 'ozone sh key get /volume1/bucket1/file-0.txt /tmp/tempkey-19534 2&gt;&amp;1'.</msg>
<msg timestamp="20251017 15:43:34.840" level="INFO">${rc} = 0</msg>
<msg timestamp="20251017 15:43:34.840" level="INFO">${output} = </msg>
<status status="PASS" starttime="20251017 15:43:30.032" endtime="20251017 15:43:34.840"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20251017 15:43:34.841" level="INFO"/>
<status status="PASS" starttime="20251017 15:43:34.841" endtime="20251017 15:43:34.841"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20251017 15:43:34.842" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20251017 15:43:34.841" endtime="20251017 15:43:34.842"/>
</kw>
<status status="PASS" starttime="20251017 15:43:30.032" endtime="20251017 15:43:34.842"/>
</kw>
<msg timestamp="20251017 15:43:34.842" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20251017 15:43:30.032" endtime="20251017 15:43:34.842"/>
</kw>
<status status="PASS" starttime="20251017 15:43:30.032" endtime="20251017 15:43:34.842"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20251017 15:43:34.845" level="INFO">Running command 'diff -q /tmp/100mb /tmp/tempkey-19534 2&gt;&amp;1'.</msg>
<msg timestamp="20251017 15:43:34.910" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20251017 15:43:34.842" endtime="20251017 15:43:34.910"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20251017 15:43:34.914" level="INFO">Running command 'rm -f /tmp/tempkey-19534 2&gt;&amp;1'.</msg>
<msg timestamp="20251017 15:43:34.939" level="INFO">${rc} = 0</msg>
<msg timestamp="20251017 15:43:34.939" level="INFO">${output} = </msg>
<status status="PASS" starttime="20251017 15:43:34.912" endtime="20251017 15:43:34.939"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20251017 15:43:34.940" level="INFO"/>
<status status="PASS" starttime="20251017 15:43:34.940" endtime="20251017 15:43:34.940"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20251017 15:43:34.941" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20251017 15:43:34.940" endtime="20251017 15:43:34.941"/>
</kw>
<status status="PASS" starttime="20251017 15:43:34.911" endtime="20251017 15:43:34.941"/>
</kw>
<msg timestamp="20251017 15:43:34.941" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20251017 15:43:34.911" endtime="20251017 15:43:34.941"/>
</kw>
<status status="PASS" starttime="20251017 15:43:34.910" endtime="20251017 15:43:34.941"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20251017 15:43:34.942" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20251017 15:43:34.941" endtime="20251017 15:43:34.942"/>
</kw>
<msg timestamp="20251017 15:43:34.942" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20251017 15:43:30.030" endtime="20251017 15:43:34.942"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${matches}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20251017 15:43:34.942" endtime="20251017 15:43:34.942"/>
</kw>
<status status="PASS" starttime="20251017 15:43:30.030" endtime="20251017 15:43:34.942"/>
</kw>
<status status="PASS" starttime="20251017 15:43:22.964" endtime="20251017 15:43:34.942"/>
</iter>
<iter>
<var name="${INDEX}">1</var>
<kw name="Set Variable" library="BuiltIn">
<var>${fileName}</var>
<arg>file-${INDEX}.txt</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20251017 15:43:34.943" level="INFO">${fileName} = file-1.txt</msg>
<status status="PASS" starttime="20251017 15:43:34.942" endtime="20251017 15:43:34.943"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>/${VOLUME}/${BUCKET}/${fileName}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20251017 15:43:34.943" level="INFO">${key} = /volume1/bucket1/file-1.txt</msg>
<status status="PASS" starttime="20251017 15:43:34.943" endtime="20251017 15:43:34.943"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${fileName}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20251017 15:43:34.943" level="INFO">file-1.txt</msg>
<status status="PASS" starttime="20251017 15:43:34.943" endtime="20251017 15:43:34.943"/>
</kw>
<kw name="Create Key" library="shell">
<arg>${key}</arg>
<arg>${file}</arg>
<arg>--replication=${REPLICATION} --type=${TYPE}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put ${args} ${key} ${file}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20251017 15:43:34.947" level="INFO">Running command 'ozone sh key put --replication=rs-3-2-1024k --type=EC /volume1/bucket1/file-1.txt /tmp/100mb 2&gt;&amp;1'.</msg>
<msg timestamp="20251017 15:43:40.858" level="INFO">${rc} = 0</msg>
<msg timestamp="20251017 15:43:40.858" level="INFO">${output} = </msg>
<status status="PASS" starttime="20251017 15:43:34.945" endtime="20251017 15:43:40.858"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20251017 15:43:40.859" level="INFO"/>
<status status="PASS" starttime="20251017 15:43:40.859" endtime="20251017 15:43:40.859"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20251017 15:43:40.860" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20251017 15:43:40.860" endtime="20251017 15:43:40.860"/>
</kw>
<status status="PASS" starttime="20251017 15:43:34.945" endtime="20251017 15:43:40.860"/>
</kw>
<msg timestamp="20251017 15:43:40.860" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20251017 15:43:34.944" endtime="20251017 15:43:40.860"/>
</kw>
<msg timestamp="20251017 15:43:40.860" level="INFO">${output} = </msg>
<status status="PASS" starttime="20251017 15:43:34.944" endtime="20251017 15:43:40.860"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20251017 15:43:40.860" endtime="20251017 15:43:40.861"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Uploaded ${file} to ${key}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20251017 15:43:40.861" level="INFO">Uploaded /tmp/100mb to /volume1/bucket1/file-1.txt</msg>
<status status="PASS" starttime="20251017 15:43:40.861" endtime="20251017 15:43:40.861"/>
</kw>
<status status="PASS" starttime="20251017 15:43:34.944" endtime="20251017 15:43:40.861"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20251017 15:43:40.862" level="INFO">${postfix} = 14662</msg>
<status status="PASS" starttime="20251017 15:43:40.862" endtime="20251017 15:43:40.862"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20251017 15:43:40.863" level="INFO">${tmpfile} = /tmp/tempkey-14662</msg>
<status status="PASS" starttime="20251017 15:43:40.863" endtime="20251017 15:43:40.863"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone ${cmd} ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20251017 15:43:40.866" level="INFO">Running command 'ozone sh key get /volume1/bucket1/file-1.txt /tmp/tempkey-14662 2&gt;&amp;1'.</msg>
<msg timestamp="20251017 15:43:46.010" level="INFO">${rc} = 0</msg>
<msg timestamp="20251017 15:43:46.010" level="INFO">${output} = </msg>
<status status="PASS" starttime="20251017 15:43:40.864" endtime="20251017 15:43:46.010"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20251017 15:43:46.011" level="INFO"/>
<status status="PASS" starttime="20251017 15:43:46.010" endtime="20251017 15:43:46.011"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20251017 15:43:46.011" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20251017 15:43:46.011" endtime="20251017 15:43:46.011"/>
</kw>
<status status="PASS" starttime="20251017 15:43:40.863" endtime="20251017 15:43:46.011"/>
</kw>
<msg timestamp="20251017 15:43:46.011" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20251017 15:43:40.863" endtime="20251017 15:43:46.011"/>
</kw>
<status status="PASS" starttime="20251017 15:43:40.863" endtime="20251017 15:43:46.011"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20251017 15:43:46.014" level="INFO">Running command 'diff -q /tmp/100mb /tmp/tempkey-14662 2&gt;&amp;1'.</msg>
<msg timestamp="20251017 15:43:46.079" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20251017 15:43:46.012" endtime="20251017 15:43:46.079"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20251017 15:43:46.084" level="INFO">Running command 'rm -f /tmp/tempkey-14662 2&gt;&amp;1'.</msg>
<msg timestamp="20251017 15:43:46.110" level="INFO">${rc} = 0</msg>
<msg timestamp="20251017 15:43:46.110" level="INFO">${output} = </msg>
<status status="PASS" starttime="20251017 15:43:46.082" endtime="20251017 15:43:46.110"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20251017 15:43:46.111" level="INFO"/>
<status status="PASS" starttime="20251017 15:43:46.110" endtime="20251017 15:43:46.111"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20251017 15:43:46.111" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20251017 15:43:46.111" endtime="20251017 15:43:46.111"/>
</kw>
<status status="PASS" starttime="20251017 15:43:46.081" endtime="20251017 15:43:46.111"/>
</kw>
<msg timestamp="20251017 15:43:46.112" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20251017 15:43:46.080" endtime="20251017 15:43:46.112"/>
</kw>
<status status="PASS" starttime="20251017 15:43:46.080" endtime="20251017 15:43:46.112"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20251017 15:43:46.112" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20251017 15:43:46.112" endtime="20251017 15:43:46.112"/>
</kw>
<msg timestamp="20251017 15:43:46.112" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20251017 15:43:40.862" endtime="20251017 15:43:46.112"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${matches}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20251017 15:43:46.112" endtime="20251017 15:43:46.113"/>
</kw>
<status status="PASS" starttime="20251017 15:43:40.861" endtime="20251017 15:43:46.113"/>
</kw>
<status status="PASS" starttime="20251017 15:43:34.942" endtime="20251017 15:43:46.113"/>
</iter>
<iter>
<var name="${INDEX}">2</var>
<kw name="Set Variable" library="BuiltIn">
<var>${fileName}</var>
<arg>file-${INDEX}.txt</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20251017 15:43:46.113" level="INFO">${fileName} = file-2.txt</msg>
<status status="PASS" starttime="20251017 15:43:46.113" endtime="20251017 15:43:46.113"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>/${VOLUME}/${BUCKET}/${fileName}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20251017 15:43:46.114" level="INFO">${key} = /volume1/bucket1/file-2.txt</msg>
<status status="PASS" starttime="20251017 15:43:46.113" endtime="20251017 15:43:46.114"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${fileName}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20251017 15:43:46.114" level="INFO">file-2.txt</msg>
<status status="PASS" starttime="20251017 15:43:46.114" endtime="20251017 15:43:46.114"/>
</kw>
<kw name="Create Key" library="shell">
<arg>${key}</arg>
<arg>${file}</arg>
<arg>--replication=${REPLICATION} --type=${TYPE}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put ${args} ${key} ${file}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20251017 15:43:46.118" level="INFO">Running command 'ozone sh key put --replication=rs-3-2-1024k --type=EC /volume1/bucket1/file-2.txt /tmp/100mb 2&gt;&amp;1'.</msg>
<msg timestamp="20251017 15:43:52.844" level="INFO">${rc} = 0</msg>
<msg timestamp="20251017 15:43:52.844" level="INFO">${output} = </msg>
<status status="PASS" starttime="20251017 15:43:46.116" endtime="20251017 15:43:52.844"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20251017 15:43:52.845" level="INFO"/>
<status status="PASS" starttime="20251017 15:43:52.844" endtime="20251017 15:43:52.845"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20251017 15:43:52.845" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20251017 15:43:52.845" endtime="20251017 15:43:52.845"/>
</kw>
<status status="PASS" starttime="20251017 15:43:46.115" endtime="20251017 15:43:52.846"/>
</kw>
<msg timestamp="20251017 15:43:52.846" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20251017 15:43:46.115" endtime="20251017 15:43:52.846"/>
</kw>
<msg timestamp="20251017 15:43:52.846" level="INFO">${output} = </msg>
<status status="PASS" starttime="20251017 15:43:46.115" endtime="20251017 15:43:52.846"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20251017 15:43:52.846" endtime="20251017 15:43:52.846"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Uploaded ${file} to ${key}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20251017 15:43:52.847" level="INFO">Uploaded /tmp/100mb to /volume1/bucket1/file-2.txt</msg>
<status status="PASS" starttime="20251017 15:43:52.846" endtime="20251017 15:43:52.847"/>
</kw>
<status status="PASS" starttime="20251017 15:43:46.114" endtime="20251017 15:43:52.847"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20251017 15:43:52.848" level="INFO">${postfix} = 56466</msg>
<status status="PASS" starttime="20251017 15:43:52.848" endtime="20251017 15:43:52.848"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20251017 15:43:52.848" level="INFO">${tmpfile} = /tmp/tempkey-56466</msg>
<status status="PASS" starttime="20251017 15:43:52.848" endtime="20251017 15:43:52.848"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone ${cmd} ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20251017 15:43:52.852" level="INFO">Running command 'ozone sh key get /volume1/bucket1/file-2.txt /tmp/tempkey-56466 2&gt;&amp;1'.</msg>
<msg timestamp="20251017 15:43:57.396" level="INFO">${rc} = 0</msg>
<msg timestamp="20251017 15:43:57.396" level="INFO">${output} = </msg>
<status status="PASS" starttime="20251017 15:43:52.849" endtime="20251017 15:43:57.396"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20251017 15:43:57.397" level="INFO"/>
<status status="PASS" starttime="20251017 15:43:57.396" endtime="20251017 15:43:57.397"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20251017 15:43:57.398" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20251017 15:43:57.397" endtime="20251017 15:43:57.398"/>
</kw>
<status status="PASS" starttime="20251017 15:43:52.849" endtime="20251017 15:43:57.398"/>
</kw>
<msg timestamp="20251017 15:43:57.398" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20251017 15:43:52.849" endtime="20251017 15:43:57.398"/>
</kw>
<status status="PASS" starttime="20251017 15:43:52.848" endtime="20251017 15:43:57.398"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20251017 15:43:57.401" level="INFO">Running command 'diff -q /tmp/100mb /tmp/tempkey-56466 2&gt;&amp;1'.</msg>
<msg timestamp="20251017 15:43:57.470" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20251017 15:43:57.398" endtime="20251017 15:43:57.470"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20251017 15:43:57.474" level="INFO">Running command 'rm -f /tmp/tempkey-56466 2&gt;&amp;1'.</msg>
<msg timestamp="20251017 15:43:57.501" level="INFO">${rc} = 0</msg>
<msg timestamp="20251017 15:43:57.501" level="INFO">${output} = </msg>
<status status="PASS" starttime="20251017 15:43:57.471" endtime="20251017 15:43:57.501"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20251017 15:43:57.502" level="INFO"/>
<status status="PASS" starttime="20251017 15:43:57.501" endtime="20251017 15:43:57.502"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20251017 15:43:57.502" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20251017 15:43:57.502" endtime="20251017 15:43:57.502"/>
</kw>
<status status="PASS" starttime="20251017 15:43:57.471" endtime="20251017 15:43:57.502"/>
</kw>
<msg timestamp="20251017 15:43:57.502" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20251017 15:43:57.471" endtime="20251017 15:43:57.502"/>
</kw>
<status status="PASS" starttime="20251017 15:43:57.470" endtime="20251017 15:43:57.503"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20251017 15:43:57.503" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20251017 15:43:57.503" endtime="20251017 15:43:57.503"/>
</kw>
<msg timestamp="20251017 15:43:57.503" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20251017 15:43:52.847" endtime="20251017 15:43:57.503"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${matches}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20251017 15:43:57.503" endtime="20251017 15:43:57.503"/>
</kw>
<status status="PASS" starttime="20251017 15:43:52.847" endtime="20251017 15:43:57.504"/>
</kw>
<status status="PASS" starttime="20251017 15:43:46.113" endtime="20251017 15:43:57.504"/>
</iter>
<status status="PASS" starttime="20251017 15:43:22.963" endtime="20251017 15:43:57.504"/>
</for>
<status status="PASS" starttime="20251017 15:43:22.963" endtime="20251017 15:43:57.504"/>
</kw>
<kw name="Close All Containers">
<for flavor="IN RANGE">
<var>${INDEX}</var>
<value>15</value>
<iter>
<var name="${INDEX}">0</var>
<kw name="Execute" library="os">
<var>${container}</var>
<arg>ozone admin container list --state OPEN | jq -r '.[] | select(.replicationConfig.data == 3) | .containerID' | head -1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20251017 15:43:57.507" level="INFO">Running command 'ozone admin container list --state OPEN | jq -r '.[] | select(.replicationConfig.data == 3) | .containerID' | head -1 2&gt;&amp;1'.</msg>
<msg timestamp="20251017 15:43:59.156" level="INFO">${rc} = 0</msg>
<msg timestamp="20251017 15:43:59.156" level="INFO">${output} = 1</msg>
<status status="PASS" starttime="20251017 15:43:57.505" endtime="20251017 15:43:59.156"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20251017 15:43:59.157" level="INFO">1</msg>
<status status="PASS" starttime="20251017 15:43:59.157" endtime="20251017 15:43:59.157"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20251017 15:43:59.158" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20251017 15:43:59.157" endtime="20251017 15:43:59.158"/>
</kw>
<status status="PASS" starttime="20251017 15:43:57.505" endtime="20251017 15:43:59.158"/>
</kw>
<msg timestamp="20251017 15:43:59.158" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20251017 15:43:57.505" endtime="20251017 15:43:59.158"/>
</kw>
<msg timestamp="20251017 15:43:59.158" level="INFO">${container} = 1</msg>
<status status="PASS" starttime="20251017 15:43:57.504" endtime="20251017 15:43:59.158"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>"${container}" == "${EMPTY}"</arg>
<doc>Stops executing the enclosing FOR loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20251017 15:43:59.158" endtime="20251017 15:43:59.159"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${message}</var>
<arg>ozone admin container close "${container}"</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20251017 15:43:59.162" level="INFO">Running command 'ozone admin container close "1" 2&gt;&amp;1'.</msg>
<msg timestamp="20251017 15:44:00.724" level="INFO">${rc} = 0</msg>
<msg timestamp="20251017 15:44:00.724" level="INFO">${output} = </msg>
<status status="PASS" starttime="20251017 15:43:59.160" endtime="20251017 15:44:00.724"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20251017 15:44:00.725" level="INFO"/>
<status status="PASS" starttime="20251017 15:44:00.724" endtime="20251017 15:44:00.725"/>
</kw>
<msg timestamp="20251017 15:44:00.725" level="INFO">${message} = </msg>
<status status="PASS" starttime="20251017 15:43:59.159" endtime="20251017 15:44:00.725"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${message}' != '${EMPTY}'</arg>
<arg>Should Contain</arg>
<arg>${message}</arg>
<arg>is in closing state</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20251017 15:44:00.725" endtime="20251017 15:44:00.726"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin container info "${container}"</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20251017 15:44:00.729" level="INFO">Running command 'ozone admin container info "1" 2&gt;&amp;1'.</msg>
<msg timestamp="20251017 15:44:02.337" level="INFO">${rc} = 0</msg>
<msg timestamp="20251017 15:44:02.337" level="INFO">${output} = Container id: 1
Pipeline id: 9d2ef9fe-0ad0-423d-b4a0-f094ec35c2a2
Write PipelineId: 9d2ef9fe-0ad0-423d-b4a0-f094ec35c2a2
Write Pipeline State: OPEN
Container State: CLOSING
Datanodes: [2fddf2e0-467c-4...</msg>
<status status="PASS" starttime="20251017 15:44:00.727" endtime="20251017 15:44:02.337"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20251017 15:44:02.339" level="INFO">Container id: 1
Pipeline id: 9d2ef9fe-0ad0-423d-b4a0-f094ec35c2a2
Write PipelineId: 9d2ef9fe-0ad0-423d-b4a0-f094ec35c2a2
Write Pipeline State: OPEN
Container State: CLOSING
Datanodes: [2fddf2e0-467c-429d-b664-a9fbf55c9d35/ozone-balancer-datanode3-1.ozone-balancer_default,
615d09e8-a40a-4130-a13f-8a637eca82ac/ozone-balancer-datanode6-1.ozone-balancer_default,
bee23e13-c17c-455f-9c57-1a46fd144f48/ozone-balancer-datanode4-1.ozone-balancer_default,
9061f21b-4654-4fd5-9e3c-1c9b0a185155/ozone-balancer-datanode2-1.ozone-balancer_default,
6ca879f9-3b88-4702-be4d-5d245bd3ccb6/ozone-balancer-datanode5-1.ozone-balancer_default]
Replicas: [State: OPEN; ReplicaIndex: 1; Origin: 2fddf2e0-467c-429d-b664-a9fbf55c9d35; Location: 2fddf2e0-467c-429d-b664-a9fbf55c9d35/ozone-balancer-datanode3-1.ozone-balancer_default,
State: OPEN; ReplicaIndex: 2; Origin: 615d09e8-a40a-4130-a13f-8a637eca82ac; Location: 615d09e8-a40a-4130-a13f-8a637eca82ac/ozone-balancer-datanode6-1.ozone-balancer_default,
State: OPEN; ReplicaIndex: 3; Origin: bee23e13-c17c-455f-9c57-1a46fd144f48; Location: bee23e13-c17c-455f-9c57-1a46fd144f48/ozone-balancer-datanode4-1.ozone-balancer_default,
State: OPEN; ReplicaIndex: 4; Origin: 9061f21b-4654-4fd5-9e3c-1c9b0a185155; Location: 9061f21b-4654-4fd5-9e3c-1c9b0a185155/ozone-balancer-datanode2-1.ozone-balancer_default,
State: OPEN; ReplicaIndex: 5; Origin: 6ca879f9-3b88-4702-be4d-5d245bd3ccb6; Location: 6ca879f9-3b88-4702-be4d-5d245bd3ccb6/ozone-balancer-datanode5-1.ozone-balancer_default]</msg>
<status status="PASS" starttime="20251017 15:44:02.338" endtime="20251017 15:44:02.339"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20251017 15:44:02.339" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20251017 15:44:02.339" endtime="20251017 15:44:02.339"/>
</kw>
<status status="PASS" starttime="20251017 15:44:00.726" endtime="20251017 15:44:02.339"/>
</kw>
<msg timestamp="20251017 15:44:02.339" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20251017 15:44:00.726" endtime="20251017 15:44:02.340"/>
</kw>
<msg timestamp="20251017 15:44:02.340" level="INFO">${output} = Container id: 1
Pipeline id: 9d2ef9fe-0ad0-423d-b4a0-f094ec35c2a2
Write PipelineId: 9d2ef9fe-0ad0-423d-b4a0-f094ec35c2a2
Write Pipeline State: OPEN
Container State: CLOSING
Datanodes: [2fddf2e0-467c-4...</msg>
<status status="PASS" starttime="20251017 15:44:00.726" endtime="20251017 15:44:02.340"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>CLOS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20251017 15:44:02.340" endtime="20251017 15:44:02.340"/>
</kw>
<status status="PASS" starttime="20251017 15:43:57.504" endtime="20251017 15:44:02.340"/>
</iter>
<iter>
<var name="${INDEX}">1</var>
<kw name="Execute" library="os">
<var>${container}</var>
<arg>ozone admin container list --state OPEN | jq -r '.[] | select(.replicationConfig.data == 3) | .containerID' | head -1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20251017 15:44:02.344" level="INFO">Running command 'ozone admin container list --state OPEN | jq -r '.[] | select(.replicationConfig.data == 3) | .containerID' | head -1 2&gt;&amp;1'.</msg>
<msg timestamp="20251017 15:44:03.976" level="INFO">${rc} = 0</msg>
<msg timestamp="20251017 15:44:03.976" level="INFO">${output} = 2</msg>
<status status="PASS" starttime="20251017 15:44:02.342" endtime="20251017 15:44:03.977"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20251017 15:44:03.977" level="INFO">2</msg>
<status status="PASS" starttime="20251017 15:44:03.977" endtime="20251017 15:44:03.978"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20251017 15:44:03.978" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20251017 15:44:03.978" endtime="20251017 15:44:03.978"/>
</kw>
<status status="PASS" starttime="20251017 15:44:02.341" endtime="20251017 15:44:03.978"/>
</kw>
<msg timestamp="20251017 15:44:03.978" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20251017 15:44:02.341" endtime="20251017 15:44:03.978"/>
</kw>
<msg timestamp="20251017 15:44:03.978" level="INFO">${container} = 2</msg>
<status status="PASS" starttime="20251017 15:44:02.340" endtime="20251017 15:44:03.979"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>"${container}" == "${EMPTY}"</arg>
<doc>Stops executing the enclosing FOR loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20251017 15:44:03.979" endtime="20251017 15:44:03.980"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${message}</var>
<arg>ozone admin container close "${container}"</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20251017 15:44:03.983" level="INFO">Running command 'ozone admin container close "2" 2&gt;&amp;1'.</msg>
<msg timestamp="20251017 15:44:05.545" level="INFO">${rc} = 0</msg>
<msg timestamp="20251017 15:44:05.545" level="INFO">${output} = </msg>
<status status="PASS" starttime="20251017 15:44:03.980" endtime="20251017 15:44:05.545"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20251017 15:44:05.546" level="INFO"/>
<status status="PASS" starttime="20251017 15:44:05.545" endtime="20251017 15:44:05.546"/>
</kw>
<msg timestamp="20251017 15:44:05.546" level="INFO">${message} = </msg>
<status status="PASS" starttime="20251017 15:44:03.980" endtime="20251017 15:44:05.546"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${message}' != '${EMPTY}'</arg>
<arg>Should Contain</arg>
<arg>${message}</arg>
<arg>is in closing state</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20251017 15:44:05.546" endtime="20251017 15:44:05.547"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin container info "${container}"</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20251017 15:44:05.551" level="INFO">Running command 'ozone admin container info "2" 2&gt;&amp;1'.</msg>
<msg timestamp="20251017 15:44:07.193" level="INFO">${rc} = 0</msg>
<msg timestamp="20251017 15:44:07.193" level="INFO">${output} = Container id: 2
Pipeline id: 7b4e1e26-123f-4cb7-9d99-95dd9b8de298
Write PipelineId: 7b4e1e26-123f-4cb7-9d99-95dd9b8de298
Write Pipeline State: OPEN
Container State: CLOSING
Datanodes: [bee23e13-c17c-4...</msg>
<status status="PASS" starttime="20251017 15:44:05.548" endtime="20251017 15:44:07.193"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20251017 15:44:07.194" level="INFO">Container id: 2
Pipeline id: 7b4e1e26-123f-4cb7-9d99-95dd9b8de298
Write PipelineId: 7b4e1e26-123f-4cb7-9d99-95dd9b8de298
Write Pipeline State: OPEN
Container State: CLOSING
Datanodes: [bee23e13-c17c-455f-9c57-1a46fd144f48/ozone-balancer-datanode4-1.ozone-balancer_default,
6ca879f9-3b88-4702-be4d-5d245bd3ccb6/ozone-balancer-datanode5-1.ozone-balancer_default,
2fddf2e0-467c-429d-b664-a9fbf55c9d35/ozone-balancer-datanode3-1.ozone-balancer_default,
615d09e8-a40a-4130-a13f-8a637eca82ac/ozone-balancer-datanode6-1.ozone-balancer_default,
9061f21b-4654-4fd5-9e3c-1c9b0a185155/ozone-balancer-datanode2-1.ozone-balancer_default]
Replicas: [State: OPEN; ReplicaIndex: 1; Origin: bee23e13-c17c-455f-9c57-1a46fd144f48; Location: bee23e13-c17c-455f-9c57-1a46fd144f48/ozone-balancer-datanode4-1.ozone-balancer_default,
State: OPEN; ReplicaIndex: 2; Origin: 6ca879f9-3b88-4702-be4d-5d245bd3ccb6; Location: 6ca879f9-3b88-4702-be4d-5d245bd3ccb6/ozone-balancer-datanode5-1.ozone-balancer_default,
State: OPEN; ReplicaIndex: 3; Origin: 2fddf2e0-467c-429d-b664-a9fbf55c9d35; Location: 2fddf2e0-467c-429d-b664-a9fbf55c9d35/ozone-balancer-datanode3-1.ozone-balancer_default,
State: OPEN; ReplicaIndex: 4; Origin: 615d09e8-a40a-4130-a13f-8a637eca82ac; Location: 615d09e8-a40a-4130-a13f-8a637eca82ac/ozone-balancer-datanode6-1.ozone-balancer_default,
State: OPEN; ReplicaIndex: 5; Origin: 9061f21b-4654-4fd5-9e3c-1c9b0a185155; Location: 9061f21b-4654-4fd5-9e3c-1c9b0a185155/ozone-balancer-datanode2-1.ozone-balancer_default]</msg>
<status status="PASS" starttime="20251017 15:44:07.193" endtime="20251017 15:44:07.194"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20251017 15:44:07.195" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20251017 15:44:07.194" endtime="20251017 15:44:07.195"/>
</kw>
<status status="PASS" starttime="20251017 15:44:05.548" endtime="20251017 15:44:07.195"/>
</kw>
<msg timestamp="20251017 15:44:07.195" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20251017 15:44:05.548" endtime="20251017 15:44:07.195"/>
</kw>
<msg timestamp="20251017 15:44:07.195" level="INFO">${output} = Container id: 2
Pipeline id: 7b4e1e26-123f-4cb7-9d99-95dd9b8de298
Write PipelineId: 7b4e1e26-123f-4cb7-9d99-95dd9b8de298
Write Pipeline State: OPEN
Container State: CLOSING
Datanodes: [bee23e13-c17c-4...</msg>
<status status="PASS" starttime="20251017 15:44:05.547" endtime="20251017 15:44:07.195"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>CLOS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20251017 15:44:07.195" endtime="20251017 15:44:07.195"/>
</kw>
<status status="PASS" starttime="20251017 15:44:02.340" endtime="20251017 15:44:07.195"/>
</iter>
<iter>
<var name="${INDEX}">2</var>
<kw name="Execute" library="os">
<var>${container}</var>
<arg>ozone admin container list --state OPEN | jq -r '.[] | select(.replicationConfig.data == 3) | .containerID' | head -1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20251017 15:44:07.199" level="INFO">Running command 'ozone admin container list --state OPEN | jq -r '.[] | select(.replicationConfig.data == 3) | .containerID' | head -1 2&gt;&amp;1'.</msg>
<msg timestamp="20251017 15:44:08.790" level="INFO">${rc} = 0</msg>
<msg timestamp="20251017 15:44:08.790" level="INFO">${output} = 3</msg>
<status status="PASS" starttime="20251017 15:44:07.197" endtime="20251017 15:44:08.790"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20251017 15:44:08.791" level="INFO">3</msg>
<status status="PASS" starttime="20251017 15:44:08.791" endtime="20251017 15:44:08.791"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20251017 15:44:08.792" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20251017 15:44:08.792" endtime="20251017 15:44:08.792"/>
</kw>
<status status="PASS" starttime="20251017 15:44:07.196" endtime="20251017 15:44:08.792"/>
</kw>
<msg timestamp="20251017 15:44:08.792" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20251017 15:44:07.196" endtime="20251017 15:44:08.792"/>
</kw>
<msg timestamp="20251017 15:44:08.792" level="INFO">${container} = 3</msg>
<status status="PASS" starttime="20251017 15:44:07.196" endtime="20251017 15:44:08.792"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>"${container}" == "${EMPTY}"</arg>
<doc>Stops executing the enclosing FOR loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20251017 15:44:08.792" endtime="20251017 15:44:08.793"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${message}</var>
<arg>ozone admin container close "${container}"</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20251017 15:44:08.796" level="INFO">Running command 'ozone admin container close "3" 2&gt;&amp;1'.</msg>
<msg timestamp="20251017 15:44:10.463" level="INFO">${rc} = 0</msg>
<msg timestamp="20251017 15:44:10.463" level="INFO">${output} = </msg>
<status status="PASS" starttime="20251017 15:44:08.794" endtime="20251017 15:44:10.463"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20251017 15:44:10.464" level="INFO"/>
<status status="PASS" starttime="20251017 15:44:10.464" endtime="20251017 15:44:10.464"/>
</kw>
<msg timestamp="20251017 15:44:10.464" level="INFO">${message} = </msg>
<status status="PASS" starttime="20251017 15:44:08.794" endtime="20251017 15:44:10.464"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${message}' != '${EMPTY}'</arg>
<arg>Should Contain</arg>
<arg>${message}</arg>
<arg>is in closing state</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20251017 15:44:10.465" endtime="20251017 15:44:10.465"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin container info "${container}"</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20251017 15:44:10.469" level="INFO">Running command 'ozone admin container info "3" 2&gt;&amp;1'.</msg>
<msg timestamp="20251017 15:44:12.035" level="INFO">${rc} = 0</msg>
<msg timestamp="20251017 15:44:12.035" level="INFO">${output} = Container id: 3
Pipeline id: 514764ca-9311-45bf-a367-d98ef07b0614
Write PipelineId: 514764ca-9311-45bf-a367-d98ef07b0614
Write Pipeline State: OPEN
Container State: CLOSING
Datanodes: [2fddf2e0-467c-4...</msg>
<status status="PASS" starttime="20251017 15:44:10.466" endtime="20251017 15:44:12.035"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20251017 15:44:12.036" level="INFO">Container id: 3
Pipeline id: 514764ca-9311-45bf-a367-d98ef07b0614
Write PipelineId: 514764ca-9311-45bf-a367-d98ef07b0614
Write Pipeline State: OPEN
Container State: CLOSING
Datanodes: [2fddf2e0-467c-429d-b664-a9fbf55c9d35/ozone-balancer-datanode3-1.ozone-balancer_default,
615d09e8-a40a-4130-a13f-8a637eca82ac/ozone-balancer-datanode6-1.ozone-balancer_default,
6ca879f9-3b88-4702-be4d-5d245bd3ccb6/ozone-balancer-datanode5-1.ozone-balancer_default,
9061f21b-4654-4fd5-9e3c-1c9b0a185155/ozone-balancer-datanode2-1.ozone-balancer_default,
bee23e13-c17c-455f-9c57-1a46fd144f48/ozone-balancer-datanode4-1.ozone-balancer_default]
Replicas: [State: OPEN; ReplicaIndex: 1; Origin: 2fddf2e0-467c-429d-b664-a9fbf55c9d35; Location: 2fddf2e0-467c-429d-b664-a9fbf55c9d35/ozone-balancer-datanode3-1.ozone-balancer_default,
State: OPEN; ReplicaIndex: 2; Origin: 615d09e8-a40a-4130-a13f-8a637eca82ac; Location: 615d09e8-a40a-4130-a13f-8a637eca82ac/ozone-balancer-datanode6-1.ozone-balancer_default,
State: OPEN; ReplicaIndex: 3; Origin: 6ca879f9-3b88-4702-be4d-5d245bd3ccb6; Location: 6ca879f9-3b88-4702-be4d-5d245bd3ccb6/ozone-balancer-datanode5-1.ozone-balancer_default,
State: OPEN; ReplicaIndex: 4; Origin: 9061f21b-4654-4fd5-9e3c-1c9b0a185155; Location: 9061f21b-4654-4fd5-9e3c-1c9b0a185155/ozone-balancer-datanode2-1.ozone-balancer_default,
State: OPEN; ReplicaIndex: 5; Origin: bee23e13-c17c-455f-9c57-1a46fd144f48; Location: bee23e13-c17c-455f-9c57-1a46fd144f48/ozone-balancer-datanode4-1.ozone-balancer_default]</msg>
<status status="PASS" starttime="20251017 15:44:12.036" endtime="20251017 15:44:12.036"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20251017 15:44:12.037" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20251017 15:44:12.036" endtime="20251017 15:44:12.037"/>
</kw>
<status status="PASS" starttime="20251017 15:44:10.466" endtime="20251017 15:44:12.037"/>
</kw>
<msg timestamp="20251017 15:44:12.037" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20251017 15:44:10.466" endtime="20251017 15:44:12.037"/>
</kw>
<msg timestamp="20251017 15:44:12.037" level="INFO">${output} = Container id: 3
Pipeline id: 514764ca-9311-45bf-a367-d98ef07b0614
Write PipelineId: 514764ca-9311-45bf-a367-d98ef07b0614
Write Pipeline State: OPEN
Container State: CLOSING
Datanodes: [2fddf2e0-467c-4...</msg>
<status status="PASS" starttime="20251017 15:44:10.465" endtime="20251017 15:44:12.037"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>CLOS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20251017 15:44:12.037" endtime="20251017 15:44:12.038"/>
</kw>
<status status="PASS" starttime="20251017 15:44:07.196" endtime="20251017 15:44:12.038"/>
</iter>
<iter>
<var name="${INDEX}">3</var>
<kw name="Execute" library="os">
<var>${container}</var>
<arg>ozone admin container list --state OPEN | jq -r '.[] | select(.replicationConfig.data == 3) | .containerID' | head -1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20251017 15:44:12.041" level="INFO">Running command 'ozone admin container list --state OPEN | jq -r '.[] | select(.replicationConfig.data == 3) | .containerID' | head -1 2&gt;&amp;1'.</msg>
<msg timestamp="20251017 15:44:13.680" level="INFO">${rc} = 0</msg>
<msg timestamp="20251017 15:44:13.680" level="INFO">${output} = 4</msg>
<status status="PASS" starttime="20251017 15:44:12.039" endtime="20251017 15:44:13.680"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20251017 15:44:13.681" level="INFO">4</msg>
<status status="PASS" starttime="20251017 15:44:13.681" endtime="20251017 15:44:13.681"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20251017 15:44:13.682" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20251017 15:44:13.681" endtime="20251017 15:44:13.682"/>
</kw>
<status status="PASS" starttime="20251017 15:44:12.038" endtime="20251017 15:44:13.682"/>
</kw>
<msg timestamp="20251017 15:44:13.682" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20251017 15:44:12.038" endtime="20251017 15:44:13.682"/>
</kw>
<msg timestamp="20251017 15:44:13.682" level="INFO">${container} = 4</msg>
<status status="PASS" starttime="20251017 15:44:12.038" endtime="20251017 15:44:13.682"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>"${container}" == "${EMPTY}"</arg>
<doc>Stops executing the enclosing FOR loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20251017 15:44:13.682" endtime="20251017 15:44:13.683"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${message}</var>
<arg>ozone admin container close "${container}"</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20251017 15:44:13.686" level="INFO">Running command 'ozone admin container close "4" 2&gt;&amp;1'.</msg>
<msg timestamp="20251017 15:44:15.242" level="INFO">${rc} = 0</msg>
<msg timestamp="20251017 15:44:15.242" level="INFO">${output} = </msg>
<status status="PASS" starttime="20251017 15:44:13.684" endtime="20251017 15:44:15.242"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20251017 15:44:15.243" level="INFO"/>
<status status="PASS" starttime="20251017 15:44:15.242" endtime="20251017 15:44:15.243"/>
</kw>
<msg timestamp="20251017 15:44:15.243" level="INFO">${message} = </msg>
<status status="PASS" starttime="20251017 15:44:13.683" endtime="20251017 15:44:15.243"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${message}' != '${EMPTY}'</arg>
<arg>Should Contain</arg>
<arg>${message}</arg>
<arg>is in closing state</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20251017 15:44:15.243" endtime="20251017 15:44:15.244"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin container info "${container}"</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20251017 15:44:15.248" level="INFO">Running command 'ozone admin container info "4" 2&gt;&amp;1'.</msg>
<msg timestamp="20251017 15:44:16.851" level="INFO">${rc} = 0</msg>
<msg timestamp="20251017 15:44:16.851" level="INFO">${output} = Container id: 4
Pipeline id: 2724e915-b01c-4694-aa45-bcb043fb4bf3
Write PipelineId: 2724e915-b01c-4694-aa45-bcb043fb4bf3
Write Pipeline State: OPEN
Container State: CLOSING
Datanodes: [9061f21b-4654-4...</msg>
<status status="PASS" starttime="20251017 15:44:15.245" endtime="20251017 15:44:16.851"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20251017 15:44:16.852" level="INFO">Container id: 4
Pipeline id: 2724e915-b01c-4694-aa45-bcb043fb4bf3
Write PipelineId: 2724e915-b01c-4694-aa45-bcb043fb4bf3
Write Pipeline State: OPEN
Container State: CLOSING
Datanodes: [9061f21b-4654-4fd5-9e3c-1c9b0a185155/ozone-balancer-datanode2-1.ozone-balancer_default,
615d09e8-a40a-4130-a13f-8a637eca82ac/ozone-balancer-datanode6-1.ozone-balancer_default,
2fddf2e0-467c-429d-b664-a9fbf55c9d35/ozone-balancer-datanode3-1.ozone-balancer_default,
6ca879f9-3b88-4702-be4d-5d245bd3ccb6/ozone-balancer-datanode5-1.ozone-balancer_default,
bee23e13-c17c-455f-9c57-1a46fd144f48/ozone-balancer-datanode4-1.ozone-balancer_default]
Replicas: [State: OPEN; ReplicaIndex: 1; Origin: 9061f21b-4654-4fd5-9e3c-1c9b0a185155; Location: 9061f21b-4654-4fd5-9e3c-1c9b0a185155/ozone-balancer-datanode2-1.ozone-balancer_default,
State: OPEN; ReplicaIndex: 2; Origin: 615d09e8-a40a-4130-a13f-8a637eca82ac; Location: 615d09e8-a40a-4130-a13f-8a637eca82ac/ozone-balancer-datanode6-1.ozone-balancer_default,
State: OPEN; ReplicaIndex: 3; Origin: 2fddf2e0-467c-429d-b664-a9fbf55c9d35; Location: 2fddf2e0-467c-429d-b664-a9fbf55c9d35/ozone-balancer-datanode3-1.ozone-balancer_default,
State: OPEN; ReplicaIndex: 4; Origin: 6ca879f9-3b88-4702-be4d-5d245bd3ccb6; Location: 6ca879f9-3b88-4702-be4d-5d245bd3ccb6/ozone-balancer-datanode5-1.ozone-balancer_default,
State: OPEN; ReplicaIndex: 5; Origin: bee23e13-c17c-455f-9c57-1a46fd144f48; Location: bee23e13-c17c-455f-9c57-1a46fd144f48/ozone-balancer-datanode4-1.ozone-balancer_default]</msg>
<status status="PASS" starttime="20251017 15:44:16.852" endtime="20251017 15:44:16.853"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20251017 15:44:16.853" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20251017 15:44:16.853" endtime="20251017 15:44:16.853"/>
</kw>
<status status="PASS" starttime="20251017 15:44:15.245" endtime="20251017 15:44:16.853"/>
</kw>
<msg timestamp="20251017 15:44:16.853" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20251017 15:44:15.245" endtime="20251017 15:44:16.853"/>
</kw>
<msg timestamp="20251017 15:44:16.853" level="INFO">${output} = Container id: 4
Pipeline id: 2724e915-b01c-4694-aa45-bcb043fb4bf3
Write PipelineId: 2724e915-b01c-4694-aa45-bcb043fb4bf3
Write Pipeline State: OPEN
Container State: CLOSING
Datanodes: [9061f21b-4654-4...</msg>
<status status="PASS" starttime="20251017 15:44:15.244" endtime="20251017 15:44:16.854"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>CLOS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20251017 15:44:16.854" endtime="20251017 15:44:16.854"/>
</kw>
<status status="PASS" starttime="20251017 15:44:12.038" endtime="20251017 15:44:16.854"/>
</iter>
<iter>
<var name="${INDEX}">4</var>
<kw name="Execute" library="os">
<var>${container}</var>
<arg>ozone admin container list --state OPEN | jq -r '.[] | select(.replicationConfig.data == 3) | .containerID' | head -1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20251017 15:44:16.858" level="INFO">Running command 'ozone admin container list --state OPEN | jq -r '.[] | select(.replicationConfig.data == 3) | .containerID' | head -1 2&gt;&amp;1'.</msg>
<msg timestamp="20251017 15:44:18.474" level="INFO">${rc} = 0</msg>
<msg timestamp="20251017 15:44:18.474" level="INFO">${output} = 5</msg>
<status status="PASS" starttime="20251017 15:44:16.855" endtime="20251017 15:44:18.474"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20251017 15:44:18.475" level="INFO">5</msg>
<status status="PASS" starttime="20251017 15:44:18.474" endtime="20251017 15:44:18.475"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20251017 15:44:18.475" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20251017 15:44:18.475" endtime="20251017 15:44:18.475"/>
</kw>
<status status="PASS" starttime="20251017 15:44:16.855" endtime="20251017 15:44:18.475"/>
</kw>
<msg timestamp="20251017 15:44:18.476" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20251017 15:44:16.855" endtime="20251017 15:44:18.476"/>
</kw>
<msg timestamp="20251017 15:44:18.476" level="INFO">${container} = 5</msg>
<status status="PASS" starttime="20251017 15:44:16.854" endtime="20251017 15:44:18.476"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>"${container}" == "${EMPTY}"</arg>
<doc>Stops executing the enclosing FOR loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20251017 15:44:18.476" endtime="20251017 15:44:18.477"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${message}</var>
<arg>ozone admin container close "${container}"</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20251017 15:44:18.480" level="INFO">Running command 'ozone admin container close "5" 2&gt;&amp;1'.</msg>
<msg timestamp="20251017 15:44:20.150" level="INFO">${rc} = 0</msg>
<msg timestamp="20251017 15:44:20.150" level="INFO">${output} = </msg>
<status status="PASS" starttime="20251017 15:44:18.477" endtime="20251017 15:44:20.150"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20251017 15:44:20.151" level="INFO"/>
<status status="PASS" starttime="20251017 15:44:20.151" endtime="20251017 15:44:20.151"/>
</kw>
<msg timestamp="20251017 15:44:20.152" level="INFO">${message} = </msg>
<status status="PASS" starttime="20251017 15:44:18.477" endtime="20251017 15:44:20.152"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${message}' != '${EMPTY}'</arg>
<arg>Should Contain</arg>
<arg>${message}</arg>
<arg>is in closing state</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20251017 15:44:20.152" endtime="20251017 15:44:20.153"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin container info "${container}"</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20251017 15:44:20.156" level="INFO">Running command 'ozone admin container info "5" 2&gt;&amp;1'.</msg>
<msg timestamp="20251017 15:44:21.746" level="INFO">${rc} = 0</msg>
<msg timestamp="20251017 15:44:21.747" level="INFO">${output} = Container id: 5
Pipeline id: 60823f5f-8091-49a0-90a5-0229bec35d33
Write PipelineId: 60823f5f-8091-49a0-90a5-0229bec35d33
Write Pipeline State: OPEN
Container State: CLOSING
Datanodes: [615d09e8-a40a-4...</msg>
<status status="PASS" starttime="20251017 15:44:20.153" endtime="20251017 15:44:21.747"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20251017 15:44:21.748" level="INFO">Container id: 5
Pipeline id: 60823f5f-8091-49a0-90a5-0229bec35d33
Write PipelineId: 60823f5f-8091-49a0-90a5-0229bec35d33
Write Pipeline State: OPEN
Container State: CLOSING
Datanodes: [615d09e8-a40a-4130-a13f-8a637eca82ac/ozone-balancer-datanode6-1.ozone-balancer_default,
bee23e13-c17c-455f-9c57-1a46fd144f48/ozone-balancer-datanode4-1.ozone-balancer_default,
6ca879f9-3b88-4702-be4d-5d245bd3ccb6/ozone-balancer-datanode5-1.ozone-balancer_default,
2fddf2e0-467c-429d-b664-a9fbf55c9d35/ozone-balancer-datanode3-1.ozone-balancer_default,
9061f21b-4654-4fd5-9e3c-1c9b0a185155/ozone-balancer-datanode2-1.ozone-balancer_default]
Replicas: [State: OPEN; ReplicaIndex: 1; Origin: 615d09e8-a40a-4130-a13f-8a637eca82ac; Location: 615d09e8-a40a-4130-a13f-8a637eca82ac/ozone-balancer-datanode6-1.ozone-balancer_default,
State: OPEN; ReplicaIndex: 2; Origin: bee23e13-c17c-455f-9c57-1a46fd144f48; Location: bee23e13-c17c-455f-9c57-1a46fd144f48/ozone-balancer-datanode4-1.ozone-balancer_default,
State: OPEN; ReplicaIndex: 3; Origin: 6ca879f9-3b88-4702-be4d-5d245bd3ccb6; Location: 6ca879f9-3b88-4702-be4d-5d245bd3ccb6/ozone-balancer-datanode5-1.ozone-balancer_default,
State: OPEN; ReplicaIndex: 4; Origin: 2fddf2e0-467c-429d-b664-a9fbf55c9d35; Location: 2fddf2e0-467c-429d-b664-a9fbf55c9d35/ozone-balancer-datanode3-1.ozone-balancer_default,
State: OPEN; ReplicaIndex: 5; Origin: 9061f21b-4654-4fd5-9e3c-1c9b0a185155; Location: 9061f21b-4654-4fd5-9e3c-1c9b0a185155/ozone-balancer-datanode2-1.ozone-balancer_default]</msg>
<status status="PASS" starttime="20251017 15:44:21.747" endtime="20251017 15:44:21.748"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20251017 15:44:21.748" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20251017 15:44:21.748" endtime="20251017 15:44:21.748"/>
</kw>
<status status="PASS" starttime="20251017 15:44:20.153" endtime="20251017 15:44:21.748"/>
</kw>
<msg timestamp="20251017 15:44:21.748" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20251017 15:44:20.153" endtime="20251017 15:44:21.748"/>
</kw>
<msg timestamp="20251017 15:44:21.748" level="INFO">${output} = Container id: 5
Pipeline id: 60823f5f-8091-49a0-90a5-0229bec35d33
Write PipelineId: 60823f5f-8091-49a0-90a5-0229bec35d33
Write Pipeline State: OPEN
Container State: CLOSING
Datanodes: [615d09e8-a40a-4...</msg>
<status status="PASS" starttime="20251017 15:44:20.153" endtime="20251017 15:44:21.749"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>CLOS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20251017 15:44:21.749" endtime="20251017 15:44:21.749"/>
</kw>
<status status="PASS" starttime="20251017 15:44:16.854" endtime="20251017 15:44:21.749"/>
</iter>
<iter>
<var name="${INDEX}">5</var>
<kw name="Execute" library="os">
<var>${container}</var>
<arg>ozone admin container list --state OPEN | jq -r '.[] | select(.replicationConfig.data == 3) | .containerID' | head -1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20251017 15:44:21.753" level="INFO">Running command 'ozone admin container list --state OPEN | jq -r '.[] | select(.replicationConfig.data == 3) | .containerID' | head -1 2&gt;&amp;1'.</msg>
<msg timestamp="20251017 15:44:23.254" level="INFO">${rc} = 0</msg>
<msg timestamp="20251017 15:44:23.254" level="INFO">${output} = </msg>
<status status="PASS" starttime="20251017 15:44:21.750" endtime="20251017 15:44:23.254"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20251017 15:44:23.255" level="INFO"/>
<status status="PASS" starttime="20251017 15:44:23.254" endtime="20251017 15:44:23.255"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20251017 15:44:23.256" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20251017 15:44:23.255" endtime="20251017 15:44:23.256"/>
</kw>
<status status="PASS" starttime="20251017 15:44:21.750" endtime="20251017 15:44:23.256"/>
</kw>
<msg timestamp="20251017 15:44:23.256" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20251017 15:44:21.750" endtime="20251017 15:44:23.256"/>
</kw>
<msg timestamp="20251017 15:44:23.256" level="INFO">${container} = </msg>
<status status="PASS" starttime="20251017 15:44:21.749" endtime="20251017 15:44:23.256"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>"${container}" == "${EMPTY}"</arg>
<doc>Stops executing the enclosing FOR loop if the ``condition`` is true.</doc>
<msg timestamp="20251017 15:44:23.258" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20251017 15:44:23.256" endtime="20251017 15:44:23.258"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${message}</var>
<arg>ozone admin container close "${container}"</arg>
<status status="NOT RUN" starttime="20251017 15:44:23.258" endtime="20251017 15:44:23.258"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${message}' != '${EMPTY}'</arg>
<arg>Should Contain</arg>
<arg>${message}</arg>
<arg>is in closing state</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20251017 15:44:23.258" endtime="20251017 15:44:23.258"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin container info "${container}"</arg>
<status status="NOT RUN" starttime="20251017 15:44:23.258" endtime="20251017 15:44:23.258"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>CLOS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20251017 15:44:23.259" endtime="20251017 15:44:23.259"/>
</kw>
<status status="PASS" starttime="20251017 15:44:21.749" endtime="20251017 15:44:23.259"/>
</iter>
<status status="PASS" starttime="20251017 15:43:57.504" endtime="20251017 15:44:23.259"/>
</for>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>4min</arg>
<arg>10sec</arg>
<arg>All container is closed</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="All container is closed">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin container list --state OPEN</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20251017 15:44:23.263" level="INFO">Running command 'ozone admin container list --state OPEN 2&gt;&amp;1'.</msg>
<msg timestamp="20251017 15:44:24.838" level="INFO">${rc} = 0</msg>
<msg timestamp="20251017 15:44:24.838" level="INFO">${output} = [ ]</msg>
<status status="PASS" starttime="20251017 15:44:23.261" endtime="20251017 15:44:24.838"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20251017 15:44:24.839" level="INFO">[ ]</msg>
<status status="PASS" starttime="20251017 15:44:24.838" endtime="20251017 15:44:24.839"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20251017 15:44:24.839" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20251017 15:44:24.839" endtime="20251017 15:44:24.840"/>
</kw>
<status status="PASS" starttime="20251017 15:44:23.260" endtime="20251017 15:44:24.840"/>
</kw>
<msg timestamp="20251017 15:44:24.840" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20251017 15:44:23.260" endtime="20251017 15:44:24.840"/>
</kw>
<msg timestamp="20251017 15:44:24.840" level="INFO">${output} = [ ]</msg>
<status status="PASS" starttime="20251017 15:44:23.260" endtime="20251017 15:44:24.840"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${output}</arg>
<arg>[ ]</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20251017 15:44:24.840" endtime="20251017 15:44:24.840"/>
</kw>
<status status="PASS" starttime="20251017 15:44:23.259" endtime="20251017 15:44:24.841"/>
</kw>
<status status="PASS" starttime="20251017 15:44:23.259" endtime="20251017 15:44:24.841"/>
</kw>
<status status="PASS" starttime="20251017 15:43:57.504" endtime="20251017 15:44:24.841"/>
</kw>
<kw name="Get Datanode Ozone Used Bytes Info">
<var>${datanodeOzoneUsedBytesInfo}</var>
<arg>${uuid}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>export DATANODES=$(ozone admin datanode list --json) &amp;&amp; for datanode in $(echo "$\{DATANODES\}" | jq -r '.[].id'); do ozone admin datanode usageinfo --uuid=$\{datanode\} --json | jq '{(.[0].datanodeDetails.uuid) : .[0].ozoneUsed}'; done | jq -s add</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20251017 15:44:24.844" level="INFO">Running command 'export DATANODES=$(ozone admin datanode list --json) &amp;&amp; for datanode in $(echo "${DATANODES}" | jq -r '.[].id'); do ozone admin datanode usageinfo --uuid=${datanode} --json | jq '{(.[0].datanodeDetails.uuid) : .[0].ozoneUsed}'; done | jq -s add 2&gt;&amp;1'.</msg>
<msg timestamp="20251017 15:44:36.456" level="INFO">${rc} = 0</msg>
<msg timestamp="20251017 15:44:36.456" level="INFO">${output} = {
  "80649811-96da-46bd-8bf5-65c7fafb5819": 4096,
  "9061f21b-4654-4fd5-9e3c-1c9b0a185155": 106958848,
  "bee23e13-c17c-455f-9c57-1a46fd144f48": 105910272,
  "2fddf2e0-467c-429d-b664-a9fbf55c9d35": 10...</msg>
<status status="PASS" starttime="20251017 15:44:24.842" endtime="20251017 15:44:36.456"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20251017 15:44:36.457" level="INFO">{
  "80649811-96da-46bd-8bf5-65c7fafb5819": 4096,
  "9061f21b-4654-4fd5-9e3c-1c9b0a185155": 106958848,
  "bee23e13-c17c-455f-9c57-1a46fd144f48": 105910272,
  "2fddf2e0-467c-429d-b664-a9fbf55c9d35": 104861696,
  "615d09e8-a40a-4130-a13f-8a637eca82ac": 105910272,
  "6ca879f9-3b88-4702-be4d-5d245bd3ccb6": 104861696
}</msg>
<status status="PASS" starttime="20251017 15:44:36.457" endtime="20251017 15:44:36.457"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20251017 15:44:36.458" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20251017 15:44:36.457" endtime="20251017 15:44:36.458"/>
</kw>
<status status="PASS" starttime="20251017 15:44:24.842" endtime="20251017 15:44:36.458"/>
</kw>
<msg timestamp="20251017 15:44:36.458" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20251017 15:44:24.842" endtime="20251017 15:44:36.458"/>
</kw>
<msg timestamp="20251017 15:44:36.458" level="INFO">${output} = {
  "80649811-96da-46bd-8bf5-65c7fafb5819": 4096,
  "9061f21b-4654-4fd5-9e3c-1c9b0a185155": 106958848,
  "bee23e13-c17c-455f-9c57-1a46fd144f48": 105910272,
  "2fddf2e0-467c-429d-b664-a9fbf55c9d35": 10...</msg>
<status status="PASS" starttime="20251017 15:44:24.841" endtime="20251017 15:44:36.458"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>echo '${output}' | jq '. | to_entries | .[] | select(.key == "${uuid}") | .value'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20251017 15:44:36.462" level="INFO">Running command 'echo '{
  "80649811-96da-46bd-8bf5-65c7fafb5819": 4096,
  "9061f21b-4654-4fd5-9e3c-1c9b0a185155": 106958848,
  "bee23e13-c17c-455f-9c57-1a46fd144f48": 105910272,
  "2fddf2e0-467c-429d-b664-a9fbf55c9d35": 104861696,
  "615d09e8-a40a-4130-a13f-8a637eca82ac": 105910272,
  "6ca879f9-3b88-4702-be4d-5d245bd3ccb6": 104861696
}' | jq '. | to_entries | .[] | select(.key == "80649811-96da-46bd-8bf5-65c7fafb5819") | .value' 2&gt;&amp;1'.</msg>
<msg timestamp="20251017 15:44:36.467" level="INFO">${rc} = 0</msg>
<msg timestamp="20251017 15:44:36.467" level="INFO">${output} = 4096</msg>
<status status="PASS" starttime="20251017 15:44:36.459" endtime="20251017 15:44:36.467"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20251017 15:44:36.468" level="INFO">4096</msg>
<status status="PASS" starttime="20251017 15:44:36.468" endtime="20251017 15:44:36.468"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20251017 15:44:36.468" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20251017 15:44:36.468" endtime="20251017 15:44:36.469"/>
</kw>
<status status="PASS" starttime="20251017 15:44:36.459" endtime="20251017 15:44:36.469"/>
</kw>
<msg timestamp="20251017 15:44:36.469" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20251017 15:44:36.459" endtime="20251017 15:44:36.469"/>
</kw>
<msg timestamp="20251017 15:44:36.469" level="INFO">${result} = 4096</msg>
<status status="PASS" starttime="20251017 15:44:36.458" endtime="20251017 15:44:36.469"/>
</kw>
<msg timestamp="20251017 15:44:36.469" level="INFO">${datanodeOzoneUsedBytesInfo} = 4096</msg>
<status status="PASS" starttime="20251017 15:44:24.841" endtime="20251017 15:44:36.469"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${datanodeOzoneUsedBytesInfo} &lt; ${SIZE}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20251017 15:44:36.469" endtime="20251017 15:44:36.470"/>
</kw>
<kw name="Datanode Recommission">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin datanode recommission ${HOST}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20251017 15:44:36.473" level="INFO">Running command 'ozone admin datanode recommission datanode1 2&gt;&amp;1'.</msg>
<msg timestamp="20251017 15:44:37.994" level="INFO">${rc} = 0</msg>
<msg timestamp="20251017 15:44:37.994" level="INFO">${output} = Started recommissioning datanode(s):
datanode1</msg>
<status status="PASS" starttime="20251017 15:44:36.471" endtime="20251017 15:44:37.994"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20251017 15:44:37.995" level="INFO">Started recommissioning datanode(s):
datanode1</msg>
<status status="PASS" starttime="20251017 15:44:37.995" endtime="20251017 15:44:37.996"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20251017 15:44:37.996" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20251017 15:44:37.996" endtime="20251017 15:44:37.996"/>
</kw>
<status status="PASS" starttime="20251017 15:44:36.471" endtime="20251017 15:44:37.996"/>
</kw>
<msg timestamp="20251017 15:44:37.996" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20251017 15:44:36.471" endtime="20251017 15:44:37.996"/>
</kw>
<msg timestamp="20251017 15:44:37.996" level="INFO">${result} = Started recommissioning datanode(s):
datanode1</msg>
<status status="PASS" starttime="20251017 15:44:36.470" endtime="20251017 15:44:37.996"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Started recommissioning datanode</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20251017 15:44:37.996" endtime="20251017 15:44:37.997"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>1min</arg>
<arg>10sec</arg>
<arg>Datanode Recommission is Finished</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Datanode Recommission is Finished">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin datanode list | grep "Operational State:*"</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20251017 15:44:38.001" level="INFO">Running command 'ozone admin datanode list | grep "Operational State:*" 2&gt;&amp;1'.</msg>
<msg timestamp="20251017 15:44:39.612" level="INFO">${rc} = 0</msg>
<msg timestamp="20251017 15:44:39.612" level="INFO">${output} = Operational State: ENTERING_MAINTENANCE
Operational State: IN_SERVICE
Operational State: IN_SERVICE
Operational State: IN_SERVICE
Operational State: IN_SERVICE
Operational State: IN_SERVICE</msg>
<status status="PASS" starttime="20251017 15:44:37.998" endtime="20251017 15:44:39.612"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20251017 15:44:39.613" level="INFO">Operational State: ENTERING_MAINTENANCE
Operational State: IN_SERVICE
Operational State: IN_SERVICE
Operational State: IN_SERVICE
Operational State: IN_SERVICE
Operational State: IN_SERVICE</msg>
<status status="PASS" starttime="20251017 15:44:39.612" endtime="20251017 15:44:39.613"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20251017 15:44:39.613" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20251017 15:44:39.613" endtime="20251017 15:44:39.613"/>
</kw>
<status status="PASS" starttime="20251017 15:44:37.998" endtime="20251017 15:44:39.613"/>
</kw>
<msg timestamp="20251017 15:44:39.614" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20251017 15:44:37.998" endtime="20251017 15:44:39.614"/>
</kw>
<msg timestamp="20251017 15:44:39.614" level="INFO">${result} = Operational State: ENTERING_MAINTENANCE
Operational State: IN_SERVICE
Operational State: IN_SERVICE
Operational State: IN_SERVICE
Operational State: IN_SERVICE
Operational State: IN_SERVICE</msg>
<status status="PASS" starttime="20251017 15:44:37.997" endtime="20251017 15:44:39.614"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ENTERING_MAINTENANCE</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<msg timestamp="20251017 15:44:39.614" level="FAIL">'Operational State: ENTERING_MAINTENANCE
Operational State: IN_SERVICE
Operational State: IN_SERVICE
Operational State: IN_SERVICE
Operational State: IN_SERVICE
Operational State: IN_SERVICE' contains 'ENTERING_MAINTENANCE'</msg>
<status status="FAIL" starttime="20251017 15:44:39.614" endtime="20251017 15:44:39.614"/>
</kw>
<status status="FAIL" starttime="20251017 15:44:37.997" endtime="20251017 15:44:39.615"/>
</kw>
<kw name="Datanode Recommission is Finished">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin datanode list | grep "Operational State:*"</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20251017 15:44:49.619" level="INFO">Running command 'ozone admin datanode list | grep "Operational State:*" 2&gt;&amp;1'.</msg>
<msg timestamp="20251017 15:44:51.297" level="INFO">${rc} = 0</msg>
<msg timestamp="20251017 15:44:51.297" level="INFO">${output} = Operational State: IN_SERVICE
Operational State: IN_SERVICE
Operational State: IN_SERVICE
Operational State: IN_SERVICE
Operational State: IN_SERVICE
Operational State: IN_SERVICE</msg>
<status status="PASS" starttime="20251017 15:44:49.616" endtime="20251017 15:44:51.297"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20251017 15:44:51.298" level="INFO">Operational State: IN_SERVICE
Operational State: IN_SERVICE
Operational State: IN_SERVICE
Operational State: IN_SERVICE
Operational State: IN_SERVICE
Operational State: IN_SERVICE</msg>
<status status="PASS" starttime="20251017 15:44:51.297" endtime="20251017 15:44:51.298"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20251017 15:44:51.298" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20251017 15:44:51.298" endtime="20251017 15:44:51.298"/>
</kw>
<status status="PASS" starttime="20251017 15:44:49.616" endtime="20251017 15:44:51.298"/>
</kw>
<msg timestamp="20251017 15:44:51.299" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20251017 15:44:49.616" endtime="20251017 15:44:51.299"/>
</kw>
<msg timestamp="20251017 15:44:51.299" level="INFO">${result} = Operational State: IN_SERVICE
Operational State: IN_SERVICE
Operational State: IN_SERVICE
Operational State: IN_SERVICE
Operational State: IN_SERVICE
Operational State: IN_SERVICE</msg>
<status status="PASS" starttime="20251017 15:44:49.615" endtime="20251017 15:44:51.299"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ENTERING_MAINTENANCE</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20251017 15:44:51.299" endtime="20251017 15:44:51.299"/>
</kw>
<status status="PASS" starttime="20251017 15:44:49.615" endtime="20251017 15:44:51.299"/>
</kw>
<status status="PASS" starttime="20251017 15:44:37.997" endtime="20251017 15:44:51.299"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>300000ms</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20251017 15:49:51.300" level="INFO">Slept 5 minutes</msg>
<status status="PASS" starttime="20251017 15:44:51.299" endtime="20251017 15:49:51.300"/>
</kw>
<status status="PASS" starttime="20251017 15:44:36.470" endtime="20251017 15:49:51.300"/>
</kw>
<kw name="Run Container Balancer">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin containerbalancer start -t 0.1 -d 100 -i 3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20251017 15:49:51.304" level="INFO">Running command 'ozone admin containerbalancer start -t 0.1 -d 100 -i 3 2&gt;&amp;1'.</msg>
<msg timestamp="20251017 15:49:52.908" level="INFO">${rc} = 0</msg>
<msg timestamp="20251017 15:49:52.908" level="INFO">${output} = Container Balancer started successfully.</msg>
<status status="PASS" starttime="20251017 15:49:51.302" endtime="20251017 15:49:52.908"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20251017 15:49:52.909" level="INFO">Container Balancer started successfully.</msg>
<status status="PASS" starttime="20251017 15:49:52.908" endtime="20251017 15:49:52.909"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20251017 15:49:52.910" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20251017 15:49:52.909" endtime="20251017 15:49:52.910"/>
</kw>
<status status="PASS" starttime="20251017 15:49:51.301" endtime="20251017 15:49:52.910"/>
</kw>
<msg timestamp="20251017 15:49:52.910" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20251017 15:49:51.301" endtime="20251017 15:49:52.910"/>
</kw>
<msg timestamp="20251017 15:49:52.910" level="INFO">${result} = Container Balancer started successfully.</msg>
<status status="PASS" starttime="20251017 15:49:51.301" endtime="20251017 15:49:52.910"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Container Balancer started successfully.</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20251017 15:49:52.910" endtime="20251017 15:49:52.910"/>
</kw>
<status status="PASS" starttime="20251017 15:49:51.300" endtime="20251017 15:49:52.911"/>
</kw>
<kw name="Run Balancer Status">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin containerbalancer status</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20251017 15:49:52.915" level="INFO">Running command 'ozone admin containerbalancer status 2&gt;&amp;1'.</msg>
<msg timestamp="20251017 15:49:54.549" level="INFO">${rc} = 0</msg>
<msg timestamp="20251017 15:49:54.549" level="INFO">${output} = ContainerBalancer is Running.</msg>
<status status="PASS" starttime="20251017 15:49:52.912" endtime="20251017 15:49:54.549"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20251017 15:49:54.550" level="INFO">ContainerBalancer is Running.</msg>
<status status="PASS" starttime="20251017 15:49:54.549" endtime="20251017 15:49:54.550"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20251017 15:49:54.550" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20251017 15:49:54.550" endtime="20251017 15:49:54.550"/>
</kw>
<status status="PASS" starttime="20251017 15:49:52.912" endtime="20251017 15:49:54.551"/>
</kw>
<msg timestamp="20251017 15:49:54.551" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20251017 15:49:52.911" endtime="20251017 15:49:54.551"/>
</kw>
<msg timestamp="20251017 15:49:54.551" level="INFO">${result} = ContainerBalancer is Running.</msg>
<status status="PASS" starttime="20251017 15:49:52.911" endtime="20251017 15:49:54.551"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContainerBalancer is Running.</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20251017 15:49:54.551" endtime="20251017 15:49:54.551"/>
</kw>
<status status="PASS" starttime="20251017 15:49:52.911" endtime="20251017 15:49:54.551"/>
</kw>
<kw name="Run Balancer Verbose Status">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin containerbalancer status --verbose</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20251017 15:49:54.555" level="INFO">Running command 'ozone admin containerbalancer status --verbose 2&gt;&amp;1'.</msg>
<msg timestamp="20251017 15:49:56.176" level="INFO">${rc} = 0</msg>
<msg timestamp="20251017 15:49:56.176" level="INFO">${output} = ContainerBalancer is Running.
Started at: 2025-10-17 15:49:52
Balancing duration: 4s

Container Balancer Configuration values:
Key                                                Value
Threshold       ...</msg>
<status status="PASS" starttime="20251017 15:49:54.553" endtime="20251017 15:49:56.176"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20251017 15:49:56.177" level="INFO">ContainerBalancer is Running.
Started at: 2025-10-17 15:49:52
Balancing duration: 4s

Container Balancer Configuration values:
Key                                                Value
Threshold                                          0.1
Max Datanodes to Involve per Iteration(percent)    100
Max Size to Move per Iteration                     0GB
Max Size Entering Target per Iteration             26GB
Max Size Leaving Source per Iteration              26GB
Number of Iterations                               3
Time Limit for Single Container's Movement         65min
Time Limit for Single Container's Replication      50min
Interval between each Iteration                    0min
Whether to Enable Network Topology                 false
Whether to Trigger Refresh Datanode Usage Info     false
Container IDs to Exclude from Balancing            None
Datanodes Specified to be Balanced                 None
Datanodes Excluded from Balancing                  None

Current iteration info:
Key                                                Value
Iteration number                                   1
Iteration duration                                 4s
Iteration result                                   -
Size scheduled to move                             102 MB
Moved data size                                    0 B
Scheduled to move containers                       5
Already moved containers                           0
Failed to move containers                          0
Failed to move containers by timeout               0
Entered data to nodes                              
80649811-96da-46bd-8bf5-65c7fafb5819 &lt;- 102 MB
Exited data from nodes                             
9061f21b-4654-4fd5-9e3c-1c9b0a185155 -&gt; 34 MB
615d09e8-a40a-4130-a13f-8a637eca82ac -&gt; 20 MB
6ca879f9-3b88-4702-be4d-5d245bd3ccb6 -&gt; 14 MB
2fddf2e0-467c-429d-b664-a9fbf55c9d35 -&gt; 14 MB
bee23e13-c17c-455f-9c57-1a46fd144f48 -&gt; 20 MB
</msg>
<status status="PASS" starttime="20251017 15:49:56.176" endtime="20251017 15:49:56.177"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20251017 15:49:56.177" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20251017 15:49:56.177" endtime="20251017 15:49:56.177"/>
</kw>
<status status="PASS" starttime="20251017 15:49:54.552" endtime="20251017 15:49:56.177"/>
</kw>
<msg timestamp="20251017 15:49:56.177" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20251017 15:49:54.552" endtime="20251017 15:49:56.177"/>
</kw>
<msg timestamp="20251017 15:49:56.177" level="INFO">${result} = ContainerBalancer is Running.
Started at: 2025-10-17 15:49:52
Balancing duration: 4s

Container Balancer Configuration values:
Key                                                Value
Threshold       ...</msg>
<status status="PASS" starttime="20251017 15:49:54.552" endtime="20251017 15:49:56.178"/>
</kw>
<kw name="Verify Balancer Iteration">
<arg>${result}</arg>
<arg>1</arg>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>ContainerBalancer is Running.</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20251017 15:49:56.178" endtime="20251017 15:49:56.178"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Started at:</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20251017 15:49:56.178" endtime="20251017 15:49:56.179"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Container Balancer Configuration values:</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20251017 15:49:56.179" endtime="20251017 15:49:56.179"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Iteration number ${number}</arg>
<arg>collapse_spaces=True</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20251017 15:49:56.179" endtime="20251017 15:49:56.180"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Scheduled to move containers</arg>
<arg>collapse_spaces=True</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20251017 15:49:56.180" endtime="20251017 15:49:56.180"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Balancing duration:</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20251017 15:49:56.180" endtime="20251017 15:49:56.180"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Iteration duration</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20251017 15:49:56.180" endtime="20251017 15:49:56.181"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Current iteration info:</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20251017 15:49:56.181" endtime="20251017 15:49:56.181"/>
</kw>
<status status="PASS" starttime="20251017 15:49:56.178" endtime="20251017 15:49:56.181"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Iteration result -</arg>
<arg>collapse_spaces=True</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20251017 15:49:56.181" endtime="20251017 15:49:56.181"/>
</kw>
<status status="PASS" starttime="20251017 15:49:54.551" endtime="20251017 15:49:56.181"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>40sec</arg>
<arg>5sec</arg>
<arg>Run Balancer Verbose History Status</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Run Balancer Verbose History Status">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin containerbalancer status --verbose --history</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20251017 15:49:56.186" level="INFO">Running command 'ozone admin containerbalancer status --verbose --history 2&gt;&amp;1'.</msg>
<msg timestamp="20251017 15:49:57.823" level="INFO">${rc} = 0</msg>
<msg timestamp="20251017 15:49:57.823" level="INFO">${output} = ContainerBalancer is Running.
Started at: 2025-10-17 15:49:52
Balancing duration: 5s

Container Balancer Configuration values:
Key                                                Value
Threshold       ...</msg>
<status status="PASS" starttime="20251017 15:49:56.183" endtime="20251017 15:49:57.823"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20251017 15:49:57.824" level="INFO">ContainerBalancer is Running.
Started at: 2025-10-17 15:49:52
Balancing duration: 5s

Container Balancer Configuration values:
Key                                                Value
Threshold                                          0.1
Max Datanodes to Involve per Iteration(percent)    100
Max Size to Move per Iteration                     0GB
Max Size Entering Target per Iteration             26GB
Max Size Leaving Source per Iteration              26GB
Number of Iterations                               3
Time Limit for Single Container's Movement         65min
Time Limit for Single Container's Replication      50min
Interval between each Iteration                    0min
Whether to Enable Network Topology                 false
Whether to Trigger Refresh Datanode Usage Info     false
Container IDs to Exclude from Balancing            None
Datanodes Specified to be Balanced                 None
Datanodes Excluded from Balancing                  None

Current iteration info:
Key                                                Value
Iteration number                                   1
Iteration duration                                 5s
Iteration result                                   -
Size scheduled to move                             102 MB
Moved data size                                    0 B
Scheduled to move containers                       5
Already moved containers                           0
Failed to move containers                          0
Failed to move containers by timeout               0
Entered data to nodes                              
80649811-96da-46bd-8bf5-65c7fafb5819 &lt;- 102 MB
Exited data from nodes                             
9061f21b-4654-4fd5-9e3c-1c9b0a185155 -&gt; 34 MB
615d09e8-a40a-4130-a13f-8a637eca82ac -&gt; 20 MB
6ca879f9-3b88-4702-be4d-5d245bd3ccb6 -&gt; 14 MB
2fddf2e0-467c-429d-b664-a9fbf55c9d35 -&gt; 14 MB
bee23e13-c17c-455f-9c57-1a46fd144f48 -&gt; 20 MB

Iteration history list:
</msg>
<status status="PASS" starttime="20251017 15:49:57.824" endtime="20251017 15:49:57.824"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20251017 15:49:57.825" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20251017 15:49:57.825" endtime="20251017 15:49:57.825"/>
</kw>
<status status="PASS" starttime="20251017 15:49:56.182" endtime="20251017 15:49:57.825"/>
</kw>
<msg timestamp="20251017 15:49:57.825" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20251017 15:49:56.182" endtime="20251017 15:49:57.825"/>
</kw>
<msg timestamp="20251017 15:49:57.825" level="INFO">${result} = ContainerBalancer is Running.
Started at: 2025-10-17 15:49:52
Balancing duration: 5s

Container Balancer Configuration values:
Key                                                Value
Threshold       ...</msg>
<status status="PASS" starttime="20251017 15:49:56.182" endtime="20251017 15:49:57.825"/>
</kw>
<kw name="Verify Balancer Iteration">
<arg>${result}</arg>
<arg>1</arg>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>ContainerBalancer is Running.</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20251017 15:49:57.826" endtime="20251017 15:49:57.826"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Started at:</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20251017 15:49:57.826" endtime="20251017 15:49:57.826"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Container Balancer Configuration values:</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20251017 15:49:57.827" endtime="20251017 15:49:57.827"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Iteration number ${number}</arg>
<arg>collapse_spaces=True</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20251017 15:49:57.827" endtime="20251017 15:49:57.827"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Scheduled to move containers</arg>
<arg>collapse_spaces=True</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20251017 15:49:57.828" endtime="20251017 15:49:57.828"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Balancing duration:</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20251017 15:49:57.828" endtime="20251017 15:49:57.828"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Iteration duration</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20251017 15:49:57.828" endtime="20251017 15:49:57.829"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Current iteration info:</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20251017 15:49:57.829" endtime="20251017 15:49:57.829"/>
</kw>
<status status="PASS" starttime="20251017 15:49:57.826" endtime="20251017 15:49:57.829"/>
</kw>
<kw name="Verify Balancer Iteration History">
<arg>${result}</arg>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Iteration history list:</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20251017 15:49:57.830" endtime="20251017 15:49:57.830"/>
</kw>
<kw name="Should Contain X Times" library="BuiltIn">
<arg>${output}</arg>
<arg>Size scheduled to move</arg>
<arg>1</arg>
<arg>collapse_spaces=True</arg>
<doc>Fails if ``container`` does not contain ``item`` ``count`` times.</doc>
<msg timestamp="20251017 15:49:57.831" level="INFO">Item found from container 1 time.</msg>
<status status="PASS" starttime="20251017 15:49:57.830" endtime="20251017 15:49:57.831"/>
</kw>
<kw name="Should Contain X Times" library="BuiltIn">
<arg>${output}</arg>
<arg>Moved data size</arg>
<arg>1</arg>
<arg>collapse_spaces=True</arg>
<doc>Fails if ``container`` does not contain ``item`` ``count`` times.</doc>
<msg timestamp="20251017 15:49:57.832" level="INFO">Item found from container 1 time.</msg>
<status status="PASS" starttime="20251017 15:49:57.831" endtime="20251017 15:49:57.832"/>
</kw>
<kw name="Should Contain X Times" library="BuiltIn">
<arg>${output}</arg>
<arg>Scheduled to move containers</arg>
<arg>1</arg>
<arg>collapse_spaces=True</arg>
<doc>Fails if ``container`` does not contain ``item`` ``count`` times.</doc>
<msg timestamp="20251017 15:49:57.832" level="INFO">Item found from container 1 time.</msg>
<status status="PASS" starttime="20251017 15:49:57.832" endtime="20251017 15:49:57.832"/>
</kw>
<kw name="Should Contain X Times" library="BuiltIn">
<arg>${output}</arg>
<arg>Already moved containers</arg>
<arg>1</arg>
<arg>collapse_spaces=True</arg>
<doc>Fails if ``container`` does not contain ``item`` ``count`` times.</doc>
<msg timestamp="20251017 15:49:57.833" level="INFO">Item found from container 1 time.</msg>
<status status="PASS" starttime="20251017 15:49:57.832" endtime="20251017 15:49:57.833"/>
</kw>
<kw name="Should Contain X Times" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed to move containers 0</arg>
<arg>1</arg>
<arg>collapse_spaces=True</arg>
<doc>Fails if ``container`` does not contain ``item`` ``count`` times.</doc>
<msg timestamp="20251017 15:49:57.834" level="INFO">Item found from container 1 time.</msg>
<status status="PASS" starttime="20251017 15:49:57.833" endtime="20251017 15:49:57.834"/>
</kw>
<kw name="Should Contain X Times" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed to move containers by timeout 0</arg>
<arg>1</arg>
<arg>collapse_spaces=True</arg>
<doc>Fails if ``container`` does not contain ``item`` ``count`` times.</doc>
<msg timestamp="20251017 15:49:57.834" level="INFO">Item found from container 1 time.</msg>
<status status="PASS" starttime="20251017 15:49:57.834" endtime="20251017 15:49:57.835"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Iteration result ITERATION_COMPLETED</arg>
<arg>collapse_spaces=True</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20251017 15:49:57.835" level="FAIL">'ContainerBalancer is Running.
Started at: 2025-10-17 15:49:52
Balancing duration: 5s

Container Balancer Configuration values:
Key                                                Value
Threshold                                          0.1
Max Datanodes to Involve per Iteration(percent)    100
Max Size to Move per Iteration                     0GB
Max Size Entering Target per Iteration             26GB
Max Size Leaving Source per Iteration              26GB
Number of Iterations                               3
Time Limit for Single Container's Movement         65min
Time Limit for Single Container's Replication      50min
Interval between each Iteration                    0min
Whether to Enable Network Topology                 false
Whether to Trigger Refresh Datanode Usage Info     false
Container IDs to Exclude from Balancing            None
Datanodes Specified to be Balanced                 None
Datanodes Excluded from Balancing                  None

Current iteration info:
Key                                                Value
Iteration number                                   1
Iteration duration                                 5s
Iteration result                                   -
Size scheduled to move                             102 MB
Moved data size                                    0 B
Scheduled to move containers                       5
Already moved containers                           0
Failed to move containers                          0
Failed to move containers by timeout               0
Entered data to nodes                              
80649811-96da-46bd-8bf5-65c7fafb5819 &lt;- 102 MB
Exited data from nodes                             
9061f21b-4654-4fd5-9e3c-1c9b0a185155 -&gt; 34 MB
615d09e8-a40a-4130-a13f-8a637eca82ac -&gt; 20 MB
6ca879f9-3b88-4702-be4d-5d245bd3ccb6 -&gt; 14 MB
2fddf2e0-467c-429d-b664-a9fbf55c9d35 -&gt; 14 MB
bee23e13-c17c-455f-9c57-1a46fd144f48 -&gt; 20 MB

Iteration history list:
' does not contain 'Iteration result ITERATION_COMPLETED'</msg>
<status status="FAIL" starttime="20251017 15:49:57.835" endtime="20251017 15:49:57.835"/>
</kw>
<status status="FAIL" starttime="20251017 15:49:57.829" endtime="20251017 15:49:57.836"/>
</kw>
<status status="FAIL" starttime="20251017 15:49:56.182" endtime="20251017 15:49:57.836"/>
</kw>
<kw name="Run Balancer Verbose History Status">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin containerbalancer status --verbose --history</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20251017 15:50:02.840" level="INFO">Running command 'ozone admin containerbalancer status --verbose --history 2&gt;&amp;1'.</msg>
<msg timestamp="20251017 15:50:04.425" level="INFO">${rc} = 0</msg>
<msg timestamp="20251017 15:50:04.425" level="INFO">${output} = ContainerBalancer is Running.
Started at: 2025-10-17 15:49:52
Balancing duration: 12s

Container Balancer Configuration values:
Key                                                Value
Threshold      ...</msg>
<status status="PASS" starttime="20251017 15:50:02.838" endtime="20251017 15:50:04.425"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20251017 15:50:04.426" level="INFO">ContainerBalancer is Running.
Started at: 2025-10-17 15:49:52
Balancing duration: 12s

Container Balancer Configuration values:
Key                                                Value
Threshold                                          0.1
Max Datanodes to Involve per Iteration(percent)    100
Max Size to Move per Iteration                     0GB
Max Size Entering Target per Iteration             26GB
Max Size Leaving Source per Iteration              26GB
Number of Iterations                               3
Time Limit for Single Container's Movement         65min
Time Limit for Single Container's Replication      50min
Interval between each Iteration                    0min
Whether to Enable Network Topology                 false
Whether to Trigger Refresh Datanode Usage Info     false
Container IDs to Exclude from Balancing            None
Datanodes Specified to be Balanced                 None
Datanodes Excluded from Balancing                  None

Current iteration info:
Key                                                Value
Iteration number                                   1
Iteration duration                                 12s
Iteration result                                   -
Size scheduled to move                             102 MB
Moved data size                                    0 B
Scheduled to move containers                       5
Already moved containers                           0
Failed to move containers                          0
Failed to move containers by timeout               0
Entered data to nodes                              
80649811-96da-46bd-8bf5-65c7fafb5819 &lt;- 102 MB
Exited data from nodes                             
9061f21b-4654-4fd5-9e3c-1c9b0a185155 -&gt; 34 MB
615d09e8-a40a-4130-a13f-8a637eca82ac -&gt; 20 MB
6ca879f9-3b88-4702-be4d-5d245bd3ccb6 -&gt; 14 MB
2fddf2e0-467c-429d-b664-a9fbf55c9d35 -&gt; 14 MB
bee23e13-c17c-455f-9c57-1a46fd144f48 -&gt; 20 MB

Iteration history list:
</msg>
<status status="PASS" starttime="20251017 15:50:04.426" endtime="20251017 15:50:04.426"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20251017 15:50:04.427" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20251017 15:50:04.427" endtime="20251017 15:50:04.427"/>
</kw>
<status status="PASS" starttime="20251017 15:50:02.837" endtime="20251017 15:50:04.427"/>
</kw>
<msg timestamp="20251017 15:50:04.427" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20251017 15:50:02.837" endtime="20251017 15:50:04.427"/>
</kw>
<msg timestamp="20251017 15:50:04.427" level="INFO">${result} = ContainerBalancer is Running.
Started at: 2025-10-17 15:49:52
Balancing duration: 12s

Container Balancer Configuration values:
Key                                                Value
Threshold      ...</msg>
<status status="PASS" starttime="20251017 15:50:02.837" endtime="20251017 15:50:04.427"/>
</kw>
<kw name="Verify Balancer Iteration">
<arg>${result}</arg>
<arg>1</arg>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>ContainerBalancer is Running.</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20251017 15:50:04.428" endtime="20251017 15:50:04.428"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Started at:</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20251017 15:50:04.428" endtime="20251017 15:50:04.429"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Container Balancer Configuration values:</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20251017 15:50:04.429" endtime="20251017 15:50:04.429"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Iteration number ${number}</arg>
<arg>collapse_spaces=True</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20251017 15:50:04.429" endtime="20251017 15:50:04.430"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Scheduled to move containers</arg>
<arg>collapse_spaces=True</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20251017 15:50:04.430" endtime="20251017 15:50:04.430"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Balancing duration:</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20251017 15:50:04.430" endtime="20251017 15:50:04.431"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Iteration duration</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20251017 15:50:04.431" endtime="20251017 15:50:04.431"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Current iteration info:</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20251017 15:50:04.431" endtime="20251017 15:50:04.431"/>
</kw>
<status status="PASS" starttime="20251017 15:50:04.428" endtime="20251017 15:50:04.431"/>
</kw>
<kw name="Verify Balancer Iteration History">
<arg>${result}</arg>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Iteration history list:</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20251017 15:50:04.432" endtime="20251017 15:50:04.432"/>
</kw>
<kw name="Should Contain X Times" library="BuiltIn">
<arg>${output}</arg>
<arg>Size scheduled to move</arg>
<arg>1</arg>
<arg>collapse_spaces=True</arg>
<doc>Fails if ``container`` does not contain ``item`` ``count`` times.</doc>
<msg timestamp="20251017 15:50:04.432" level="INFO">Item found from container 1 time.</msg>
<status status="PASS" starttime="20251017 15:50:04.432" endtime="20251017 15:50:04.433"/>
</kw>
<kw name="Should Contain X Times" library="BuiltIn">
<arg>${output}</arg>
<arg>Moved data size</arg>
<arg>1</arg>
<arg>collapse_spaces=True</arg>
<doc>Fails if ``container`` does not contain ``item`` ``count`` times.</doc>
<msg timestamp="20251017 15:50:04.433" level="INFO">Item found from container 1 time.</msg>
<status status="PASS" starttime="20251017 15:50:04.433" endtime="20251017 15:50:04.433"/>
</kw>
<kw name="Should Contain X Times" library="BuiltIn">
<arg>${output}</arg>
<arg>Scheduled to move containers</arg>
<arg>1</arg>
<arg>collapse_spaces=True</arg>
<doc>Fails if ``container`` does not contain ``item`` ``count`` times.</doc>
<msg timestamp="20251017 15:50:04.433" level="INFO">Item found from container 1 time.</msg>
<status status="PASS" starttime="20251017 15:50:04.433" endtime="20251017 15:50:04.434"/>
</kw>
<kw name="Should Contain X Times" library="BuiltIn">
<arg>${output}</arg>
<arg>Already moved containers</arg>
<arg>1</arg>
<arg>collapse_spaces=True</arg>
<doc>Fails if ``container`` does not contain ``item`` ``count`` times.</doc>
<msg timestamp="20251017 15:50:04.434" level="INFO">Item found from container 1 time.</msg>
<status status="PASS" starttime="20251017 15:50:04.434" endtime="20251017 15:50:04.434"/>
</kw>
<kw name="Should Contain X Times" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed to move containers 0</arg>
<arg>1</arg>
<arg>collapse_spaces=True</arg>
<doc>Fails if ``container`` does not contain ``item`` ``count`` times.</doc>
<msg timestamp="20251017 15:50:04.434" level="INFO">Item found from container 1 time.</msg>
<status status="PASS" starttime="20251017 15:50:04.434" endtime="20251017 15:50:04.435"/>
</kw>
<kw name="Should Contain X Times" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed to move containers by timeout 0</arg>
<arg>1</arg>
<arg>collapse_spaces=True</arg>
<doc>Fails if ``container`` does not contain ``item`` ``count`` times.</doc>
<msg timestamp="20251017 15:50:04.435" level="INFO">Item found from container 1 time.</msg>
<status status="PASS" starttime="20251017 15:50:04.435" endtime="20251017 15:50:04.435"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Iteration result ITERATION_COMPLETED</arg>
<arg>collapse_spaces=True</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20251017 15:50:04.436" level="FAIL">'ContainerBalancer is Running.
Started at: 2025-10-17 15:49:52
Balancing duration: 12s

Container Balancer Configuration values:
Key                                                Value
Threshold                                          0.1
Max Datanodes to Involve per Iteration(percent)    100
Max Size to Move per Iteration                     0GB
Max Size Entering Target per Iteration             26GB
Max Size Leaving Source per Iteration              26GB
Number of Iterations                               3
Time Limit for Single Container's Movement         65min
Time Limit for Single Container's Replication      50min
Interval between each Iteration                    0min
Whether to Enable Network Topology                 false
Whether to Trigger Refresh Datanode Usage Info     false
Container IDs to Exclude from Balancing            None
Datanodes Specified to be Balanced                 None
Datanodes Excluded from Balancing                  None

Current iteration info:
Key                                                Value
Iteration number                                   1
Iteration duration                                 12s
Iteration result                                   -
Size scheduled to move                             102 MB
Moved data size                                    0 B
Scheduled to move containers                       5
Already moved containers                           0
Failed to move containers                          0
Failed to move containers by timeout               0
Entered data to nodes                              
80649811-96da-46bd-8bf5-65c7fafb5819 &lt;- 102 MB
Exited data from nodes                             
9061f21b-4654-4fd5-9e3c-1c9b0a185155 -&gt; 34 MB
615d09e8-a40a-4130-a13f-8a637eca82ac -&gt; 20 MB
6ca879f9-3b88-4702-be4d-5d245bd3ccb6 -&gt; 14 MB
2fddf2e0-467c-429d-b664-a9fbf55c9d35 -&gt; 14 MB
bee23e13-c17c-455f-9c57-1a46fd144f48 -&gt; 20 MB

Iteration history list:
' does not contain 'Iteration result ITERATION_COMPLETED'</msg>
<status status="FAIL" starttime="20251017 15:50:04.435" endtime="20251017 15:50:04.436"/>
</kw>
<status status="FAIL" starttime="20251017 15:50:04.431" endtime="20251017 15:50:04.436"/>
</kw>
<status status="FAIL" starttime="20251017 15:50:02.836" endtime="20251017 15:50:04.436"/>
</kw>
<kw name="Run Balancer Verbose History Status">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin containerbalancer status --verbose --history</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20251017 15:50:09.441" level="INFO">Running command 'ozone admin containerbalancer status --verbose --history 2&gt;&amp;1'.</msg>
<msg timestamp="20251017 15:50:11.048" level="INFO">${rc} = 0</msg>
<msg timestamp="20251017 15:50:11.048" level="INFO">${output} = ContainerBalancer is Running.
Started at: 2025-10-17 15:49:52
Balancing duration: 19s

Container Balancer Configuration values:
Key                                                Value
Threshold      ...</msg>
<status status="PASS" starttime="20251017 15:50:09.438" endtime="20251017 15:50:11.048"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20251017 15:50:11.049" level="INFO">ContainerBalancer is Running.
Started at: 2025-10-17 15:49:52
Balancing duration: 19s

Container Balancer Configuration values:
Key                                                Value
Threshold                                          0.1
Max Datanodes to Involve per Iteration(percent)    100
Max Size to Move per Iteration                     0GB
Max Size Entering Target per Iteration             26GB
Max Size Leaving Source per Iteration              26GB
Number of Iterations                               3
Time Limit for Single Container's Movement         65min
Time Limit for Single Container's Replication      50min
Interval between each Iteration                    0min
Whether to Enable Network Topology                 false
Whether to Trigger Refresh Datanode Usage Info     false
Container IDs to Exclude from Balancing            None
Datanodes Specified to be Balanced                 None
Datanodes Excluded from Balancing                  None

Current iteration info:
Key                                                Value
Iteration number                                   1
Iteration duration                                 18s
Iteration result                                   -
Size scheduled to move                             102 MB
Moved data size                                    0 B
Scheduled to move containers                       5
Already moved containers                           0
Failed to move containers                          0
Failed to move containers by timeout               0
Entered data to nodes                              
80649811-96da-46bd-8bf5-65c7fafb5819 &lt;- 102 MB
Exited data from nodes                             
9061f21b-4654-4fd5-9e3c-1c9b0a185155 -&gt; 34 MB
615d09e8-a40a-4130-a13f-8a637eca82ac -&gt; 20 MB
6ca879f9-3b88-4702-be4d-5d245bd3ccb6 -&gt; 14 MB
2fddf2e0-467c-429d-b664-a9fbf55c9d35 -&gt; 14 MB
bee23e13-c17c-455f-9c57-1a46fd144f48 -&gt; 20 MB

Iteration history list:
</msg>
<status status="PASS" starttime="20251017 15:50:11.048" endtime="20251017 15:50:11.049"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20251017 15:50:11.049" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20251017 15:50:11.049" endtime="20251017 15:50:11.049"/>
</kw>
<status status="PASS" starttime="20251017 15:50:09.437" endtime="20251017 15:50:11.050"/>
</kw>
<msg timestamp="20251017 15:50:11.050" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20251017 15:50:09.437" endtime="20251017 15:50:11.050"/>
</kw>
<msg timestamp="20251017 15:50:11.050" level="INFO">${result} = ContainerBalancer is Running.
Started at: 2025-10-17 15:49:52
Balancing duration: 19s

Container Balancer Configuration values:
Key                                                Value
Threshold      ...</msg>
<status status="PASS" starttime="20251017 15:50:09.437" endtime="20251017 15:50:11.050"/>
</kw>
<kw name="Verify Balancer Iteration">
<arg>${result}</arg>
<arg>1</arg>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>ContainerBalancer is Running.</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20251017 15:50:11.050" endtime="20251017 15:50:11.051"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Started at:</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20251017 15:50:11.051" endtime="20251017 15:50:11.051"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Container Balancer Configuration values:</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20251017 15:50:11.051" endtime="20251017 15:50:11.051"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Iteration number ${number}</arg>
<arg>collapse_spaces=True</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20251017 15:50:11.051" endtime="20251017 15:50:11.052"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Scheduled to move containers</arg>
<arg>collapse_spaces=True</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20251017 15:50:11.052" endtime="20251017 15:50:11.052"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Balancing duration:</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20251017 15:50:11.052" endtime="20251017 15:50:11.053"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Iteration duration</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20251017 15:50:11.053" endtime="20251017 15:50:11.053"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Current iteration info:</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20251017 15:50:11.053" endtime="20251017 15:50:11.054"/>
</kw>
<status status="PASS" starttime="20251017 15:50:11.050" endtime="20251017 15:50:11.054"/>
</kw>
<kw name="Verify Balancer Iteration History">
<arg>${result}</arg>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Iteration history list:</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20251017 15:50:11.054" endtime="20251017 15:50:11.054"/>
</kw>
<kw name="Should Contain X Times" library="BuiltIn">
<arg>${output}</arg>
<arg>Size scheduled to move</arg>
<arg>1</arg>
<arg>collapse_spaces=True</arg>
<doc>Fails if ``container`` does not contain ``item`` ``count`` times.</doc>
<msg timestamp="20251017 15:50:11.055" level="INFO">Item found from container 1 time.</msg>
<status status="PASS" starttime="20251017 15:50:11.054" endtime="20251017 15:50:11.055"/>
</kw>
<kw name="Should Contain X Times" library="BuiltIn">
<arg>${output}</arg>
<arg>Moved data size</arg>
<arg>1</arg>
<arg>collapse_spaces=True</arg>
<doc>Fails if ``container`` does not contain ``item`` ``count`` times.</doc>
<msg timestamp="20251017 15:50:11.055" level="INFO">Item found from container 1 time.</msg>
<status status="PASS" starttime="20251017 15:50:11.055" endtime="20251017 15:50:11.055"/>
</kw>
<kw name="Should Contain X Times" library="BuiltIn">
<arg>${output}</arg>
<arg>Scheduled to move containers</arg>
<arg>1</arg>
<arg>collapse_spaces=True</arg>
<doc>Fails if ``container`` does not contain ``item`` ``count`` times.</doc>
<msg timestamp="20251017 15:50:11.056" level="INFO">Item found from container 1 time.</msg>
<status status="PASS" starttime="20251017 15:50:11.055" endtime="20251017 15:50:11.056"/>
</kw>
<kw name="Should Contain X Times" library="BuiltIn">
<arg>${output}</arg>
<arg>Already moved containers</arg>
<arg>1</arg>
<arg>collapse_spaces=True</arg>
<doc>Fails if ``container`` does not contain ``item`` ``count`` times.</doc>
<msg timestamp="20251017 15:50:11.056" level="INFO">Item found from container 1 time.</msg>
<status status="PASS" starttime="20251017 15:50:11.056" endtime="20251017 15:50:11.056"/>
</kw>
<kw name="Should Contain X Times" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed to move containers 0</arg>
<arg>1</arg>
<arg>collapse_spaces=True</arg>
<doc>Fails if ``container`` does not contain ``item`` ``count`` times.</doc>
<msg timestamp="20251017 15:50:11.057" level="INFO">Item found from container 1 time.</msg>
<status status="PASS" starttime="20251017 15:50:11.056" endtime="20251017 15:50:11.057"/>
</kw>
<kw name="Should Contain X Times" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed to move containers by timeout 0</arg>
<arg>1</arg>
<arg>collapse_spaces=True</arg>
<doc>Fails if ``container`` does not contain ``item`` ``count`` times.</doc>
<msg timestamp="20251017 15:50:11.057" level="INFO">Item found from container 1 time.</msg>
<status status="PASS" starttime="20251017 15:50:11.057" endtime="20251017 15:50:11.057"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Iteration result ITERATION_COMPLETED</arg>
<arg>collapse_spaces=True</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20251017 15:50:11.058" level="FAIL">'ContainerBalancer is Running.
Started at: 2025-10-17 15:49:52
Balancing duration: 19s

Container Balancer Configuration values:
Key                                                Value
Threshold                                          0.1
Max Datanodes to Involve per Iteration(percent)    100
Max Size to Move per Iteration                     0GB
Max Size Entering Target per Iteration             26GB
Max Size Leaving Source per Iteration              26GB
Number of Iterations                               3
Time Limit for Single Container's Movement         65min
Time Limit for Single Container's Replication      50min
Interval between each Iteration                    0min
Whether to Enable Network Topology                 false
Whether to Trigger Refresh Datanode Usage Info     false
Container IDs to Exclude from Balancing            None
Datanodes Specified to be Balanced                 None
Datanodes Excluded from Balancing                  None

Current iteration info:
Key                                                Value
Iteration number                                   1
Iteration duration                                 18s
Iteration result                                   -
Size scheduled to move                             102 MB
Moved data size                                    0 B
Scheduled to move containers                       5
Already moved containers                           0
Failed to move containers                          0
Failed to move containers by timeout               0
Entered data to nodes                              
80649811-96da-46bd-8bf5-65c7fafb5819 &lt;- 102 MB
Exited data from nodes                             
9061f21b-4654-4fd5-9e3c-1c9b0a185155 -&gt; 34 MB
615d09e8-a40a-4130-a13f-8a637eca82ac -&gt; 20 MB
6ca879f9-3b88-4702-be4d-5d245bd3ccb6 -&gt; 14 MB
2fddf2e0-467c-429d-b664-a9fbf55c9d35 -&gt; 14 MB
bee23e13-c17c-455f-9c57-1a46fd144f48 -&gt; 20 MB

Iteration history list:
' does not contain 'Iteration result ITERATION_COMPLETED'</msg>
<status status="FAIL" starttime="20251017 15:50:11.057" endtime="20251017 15:50:11.058"/>
</kw>
<status status="FAIL" starttime="20251017 15:50:11.054" endtime="20251017 15:50:11.058"/>
</kw>
<status status="FAIL" starttime="20251017 15:50:09.436" endtime="20251017 15:50:11.058"/>
</kw>
<kw name="Run Balancer Verbose History Status">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin containerbalancer status --verbose --history</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20251017 15:50:16.063" level="INFO">Running command 'ozone admin containerbalancer status --verbose --history 2&gt;&amp;1'.</msg>
<msg timestamp="20251017 15:50:17.667" level="INFO">${rc} = 0</msg>
<msg timestamp="20251017 15:50:17.667" level="INFO">${output} = ContainerBalancer is Running.
Started at: 2025-10-17 15:49:52
Balancing duration: 25s

Container Balancer Configuration values:
Key                                                Value
Threshold      ...</msg>
<status status="PASS" starttime="20251017 15:50:16.060" endtime="20251017 15:50:17.667"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20251017 15:50:17.668" level="INFO">ContainerBalancer is Running.
Started at: 2025-10-17 15:49:52
Balancing duration: 25s

Container Balancer Configuration values:
Key                                                Value
Threshold                                          0.1
Max Datanodes to Involve per Iteration(percent)    100
Max Size to Move per Iteration                     0GB
Max Size Entering Target per Iteration             26GB
Max Size Leaving Source per Iteration              26GB
Number of Iterations                               3
Time Limit for Single Container's Movement         65min
Time Limit for Single Container's Replication      50min
Interval between each Iteration                    0min
Whether to Enable Network Topology                 false
Whether to Trigger Refresh Datanode Usage Info     false
Container IDs to Exclude from Balancing            None
Datanodes Specified to be Balanced                 None
Datanodes Excluded from Balancing                  None

Current iteration info:
Key                                                Value
Iteration number                                   1
Iteration duration                                 25s
Iteration result                                   -
Size scheduled to move                             102 MB
Moved data size                                    0 B
Scheduled to move containers                       5
Already moved containers                           0
Failed to move containers                          0
Failed to move containers by timeout               0
Entered data to nodes                              
80649811-96da-46bd-8bf5-65c7fafb5819 &lt;- 102 MB
Exited data from nodes                             
9061f21b-4654-4fd5-9e3c-1c9b0a185155 -&gt; 34 MB
615d09e8-a40a-4130-a13f-8a637eca82ac -&gt; 20 MB
6ca879f9-3b88-4702-be4d-5d245bd3ccb6 -&gt; 14 MB
2fddf2e0-467c-429d-b664-a9fbf55c9d35 -&gt; 14 MB
bee23e13-c17c-455f-9c57-1a46fd144f48 -&gt; 20 MB

Iteration history list:
</msg>
<status status="PASS" starttime="20251017 15:50:17.668" endtime="20251017 15:50:17.668"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20251017 15:50:17.669" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20251017 15:50:17.668" endtime="20251017 15:50:17.669"/>
</kw>
<status status="PASS" starttime="20251017 15:50:16.060" endtime="20251017 15:50:17.669"/>
</kw>
<msg timestamp="20251017 15:50:17.669" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20251017 15:50:16.059" endtime="20251017 15:50:17.669"/>
</kw>
<msg timestamp="20251017 15:50:17.669" level="INFO">${result} = ContainerBalancer is Running.
Started at: 2025-10-17 15:49:52
Balancing duration: 25s

Container Balancer Configuration values:
Key                                                Value
Threshold      ...</msg>
<status status="PASS" starttime="20251017 15:50:16.059" endtime="20251017 15:50:17.669"/>
</kw>
<kw name="Verify Balancer Iteration">
<arg>${result}</arg>
<arg>1</arg>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>ContainerBalancer is Running.</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20251017 15:50:17.670" endtime="20251017 15:50:17.670"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Started at:</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20251017 15:50:17.670" endtime="20251017 15:50:17.670"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Container Balancer Configuration values:</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20251017 15:50:17.670" endtime="20251017 15:50:17.671"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Iteration number ${number}</arg>
<arg>collapse_spaces=True</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20251017 15:50:17.671" endtime="20251017 15:50:17.671"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Scheduled to move containers</arg>
<arg>collapse_spaces=True</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20251017 15:50:17.671" endtime="20251017 15:50:17.672"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Balancing duration:</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20251017 15:50:17.672" endtime="20251017 15:50:17.672"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Iteration duration</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20251017 15:50:17.672" endtime="20251017 15:50:17.672"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Current iteration info:</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20251017 15:50:17.672" endtime="20251017 15:50:17.673"/>
</kw>
<status status="PASS" starttime="20251017 15:50:17.669" endtime="20251017 15:50:17.673"/>
</kw>
<kw name="Verify Balancer Iteration History">
<arg>${result}</arg>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Iteration history list:</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20251017 15:50:17.673" endtime="20251017 15:50:17.673"/>
</kw>
<kw name="Should Contain X Times" library="BuiltIn">
<arg>${output}</arg>
<arg>Size scheduled to move</arg>
<arg>1</arg>
<arg>collapse_spaces=True</arg>
<doc>Fails if ``container`` does not contain ``item`` ``count`` times.</doc>
<msg timestamp="20251017 15:50:17.674" level="INFO">Item found from container 1 time.</msg>
<status status="PASS" starttime="20251017 15:50:17.674" endtime="20251017 15:50:17.674"/>
</kw>
<kw name="Should Contain X Times" library="BuiltIn">
<arg>${output}</arg>
<arg>Moved data size</arg>
<arg>1</arg>
<arg>collapse_spaces=True</arg>
<doc>Fails if ``container`` does not contain ``item`` ``count`` times.</doc>
<msg timestamp="20251017 15:50:17.674" level="INFO">Item found from container 1 time.</msg>
<status status="PASS" starttime="20251017 15:50:17.674" endtime="20251017 15:50:17.674"/>
</kw>
<kw name="Should Contain X Times" library="BuiltIn">
<arg>${output}</arg>
<arg>Scheduled to move containers</arg>
<arg>1</arg>
<arg>collapse_spaces=True</arg>
<doc>Fails if ``container`` does not contain ``item`` ``count`` times.</doc>
<msg timestamp="20251017 15:50:17.675" level="INFO">Item found from container 1 time.</msg>
<status status="PASS" starttime="20251017 15:50:17.675" endtime="20251017 15:50:17.675"/>
</kw>
<kw name="Should Contain X Times" library="BuiltIn">
<arg>${output}</arg>
<arg>Already moved containers</arg>
<arg>1</arg>
<arg>collapse_spaces=True</arg>
<doc>Fails if ``container`` does not contain ``item`` ``count`` times.</doc>
<msg timestamp="20251017 15:50:17.675" level="INFO">Item found from container 1 time.</msg>
<status status="PASS" starttime="20251017 15:50:17.675" endtime="20251017 15:50:17.676"/>
</kw>
<kw name="Should Contain X Times" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed to move containers 0</arg>
<arg>1</arg>
<arg>collapse_spaces=True</arg>
<doc>Fails if ``container`` does not contain ``item`` ``count`` times.</doc>
<msg timestamp="20251017 15:50:17.676" level="INFO">Item found from container 1 time.</msg>
<status status="PASS" starttime="20251017 15:50:17.676" endtime="20251017 15:50:17.676"/>
</kw>
<kw name="Should Contain X Times" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed to move containers by timeout 0</arg>
<arg>1</arg>
<arg>collapse_spaces=True</arg>
<doc>Fails if ``container`` does not contain ``item`` ``count`` times.</doc>
<msg timestamp="20251017 15:50:17.676" level="INFO">Item found from container 1 time.</msg>
<status status="PASS" starttime="20251017 15:50:17.676" endtime="20251017 15:50:17.677"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Iteration result ITERATION_COMPLETED</arg>
<arg>collapse_spaces=True</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20251017 15:50:17.677" level="FAIL">'ContainerBalancer is Running.
Started at: 2025-10-17 15:49:52
Balancing duration: 25s

Container Balancer Configuration values:
Key                                                Value
Threshold                                          0.1
Max Datanodes to Involve per Iteration(percent)    100
Max Size to Move per Iteration                     0GB
Max Size Entering Target per Iteration             26GB
Max Size Leaving Source per Iteration              26GB
Number of Iterations                               3
Time Limit for Single Container's Movement         65min
Time Limit for Single Container's Replication      50min
Interval between each Iteration                    0min
Whether to Enable Network Topology                 false
Whether to Trigger Refresh Datanode Usage Info     false
Container IDs to Exclude from Balancing            None
Datanodes Specified to be Balanced                 None
Datanodes Excluded from Balancing                  None

Current iteration info:
Key                                                Value
Iteration number                                   1
Iteration duration                                 25s
Iteration result                                   -
Size scheduled to move                             102 MB
Moved data size                                    0 B
Scheduled to move containers                       5
Already moved containers                           0
Failed to move containers                          0
Failed to move containers by timeout               0
Entered data to nodes                              
80649811-96da-46bd-8bf5-65c7fafb5819 &lt;- 102 MB
Exited data from nodes                             
9061f21b-4654-4fd5-9e3c-1c9b0a185155 -&gt; 34 MB
615d09e8-a40a-4130-a13f-8a637eca82ac -&gt; 20 MB
6ca879f9-3b88-4702-be4d-5d245bd3ccb6 -&gt; 14 MB
2fddf2e0-467c-429d-b664-a9fbf55c9d35 -&gt; 14 MB
bee23e13-c17c-455f-9c57-1a46fd144f48 -&gt; 20 MB

Iteration history list:
' does not contain 'Iteration result ITERATION_COMPLETED'</msg>
<status status="FAIL" starttime="20251017 15:50:17.677" endtime="20251017 15:50:17.677"/>
</kw>
<status status="FAIL" starttime="20251017 15:50:17.673" endtime="20251017 15:50:17.677"/>
</kw>
<status status="FAIL" starttime="20251017 15:50:16.059" endtime="20251017 15:50:17.678"/>
</kw>
<kw name="Run Balancer Verbose History Status">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin containerbalancer status --verbose --history</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20251017 15:50:22.683" level="INFO">Running command 'ozone admin containerbalancer status --verbose --history 2&gt;&amp;1'.</msg>
<msg timestamp="20251017 15:50:24.274" level="INFO">${rc} = 0</msg>
<msg timestamp="20251017 15:50:24.274" level="INFO">${output} = ContainerBalancer is Running.
Started at: 2025-10-17 15:49:52
Balancing duration: 32s

Container Balancer Configuration values:
Key                                                Value
Threshold      ...</msg>
<status status="PASS" starttime="20251017 15:50:22.680" endtime="20251017 15:50:24.274"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20251017 15:50:24.275" level="INFO">ContainerBalancer is Running.
Started at: 2025-10-17 15:49:52
Balancing duration: 32s

Container Balancer Configuration values:
Key                                                Value
Threshold                                          0.1
Max Datanodes to Involve per Iteration(percent)    100
Max Size to Move per Iteration                     0GB
Max Size Entering Target per Iteration             26GB
Max Size Leaving Source per Iteration              26GB
Number of Iterations                               3
Time Limit for Single Container's Movement         65min
Time Limit for Single Container's Replication      50min
Interval between each Iteration                    0min
Whether to Enable Network Topology                 false
Whether to Trigger Refresh Datanode Usage Info     false
Container IDs to Exclude from Balancing            None
Datanodes Specified to be Balanced                 None
Datanodes Excluded from Balancing                  None

Current iteration info:
Key                                                Value
Iteration number                                   1
Iteration duration                                 32s
Iteration result                                   -
Size scheduled to move                             102 MB
Moved data size                                    34 MB
Scheduled to move containers                       5
Already moved containers                           1
Failed to move containers                          0
Failed to move containers by timeout               0
Entered data to nodes                              
80649811-96da-46bd-8bf5-65c7fafb5819 &lt;- 102 MB
Exited data from nodes                             
9061f21b-4654-4fd5-9e3c-1c9b0a185155 -&gt; 34 MB
615d09e8-a40a-4130-a13f-8a637eca82ac -&gt; 20 MB
6ca879f9-3b88-4702-be4d-5d245bd3ccb6 -&gt; 14 MB
2fddf2e0-467c-429d-b664-a9fbf55c9d35 -&gt; 14 MB
bee23e13-c17c-455f-9c57-1a46fd144f48 -&gt; 20 MB

Iteration history list:
</msg>
<status status="PASS" starttime="20251017 15:50:24.274" endtime="20251017 15:50:24.275"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20251017 15:50:24.276" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20251017 15:50:24.275" endtime="20251017 15:50:24.276"/>
</kw>
<status status="PASS" starttime="20251017 15:50:22.679" endtime="20251017 15:50:24.276"/>
</kw>
<msg timestamp="20251017 15:50:24.276" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20251017 15:50:22.679" endtime="20251017 15:50:24.276"/>
</kw>
<msg timestamp="20251017 15:50:24.276" level="INFO">${result} = ContainerBalancer is Running.
Started at: 2025-10-17 15:49:52
Balancing duration: 32s

Container Balancer Configuration values:
Key                                                Value
Threshold      ...</msg>
<status status="PASS" starttime="20251017 15:50:22.679" endtime="20251017 15:50:24.276"/>
</kw>
<kw name="Verify Balancer Iteration">
<arg>${result}</arg>
<arg>1</arg>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>ContainerBalancer is Running.</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20251017 15:50:24.277" endtime="20251017 15:50:24.277"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Started at:</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20251017 15:50:24.277" endtime="20251017 15:50:24.278"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Container Balancer Configuration values:</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20251017 15:50:24.278" endtime="20251017 15:50:24.278"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Iteration number ${number}</arg>
<arg>collapse_spaces=True</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20251017 15:50:24.278" endtime="20251017 15:50:24.278"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Scheduled to move containers</arg>
<arg>collapse_spaces=True</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20251017 15:50:24.278" endtime="20251017 15:50:24.279"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Balancing duration:</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20251017 15:50:24.279" endtime="20251017 15:50:24.279"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Iteration duration</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20251017 15:50:24.279" endtime="20251017 15:50:24.279"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Current iteration info:</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20251017 15:50:24.279" endtime="20251017 15:50:24.280"/>
</kw>
<status status="PASS" starttime="20251017 15:50:24.276" endtime="20251017 15:50:24.280"/>
</kw>
<kw name="Verify Balancer Iteration History">
<arg>${result}</arg>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Iteration history list:</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20251017 15:50:24.280" endtime="20251017 15:50:24.280"/>
</kw>
<kw name="Should Contain X Times" library="BuiltIn">
<arg>${output}</arg>
<arg>Size scheduled to move</arg>
<arg>1</arg>
<arg>collapse_spaces=True</arg>
<doc>Fails if ``container`` does not contain ``item`` ``count`` times.</doc>
<msg timestamp="20251017 15:50:24.281" level="INFO">Item found from container 1 time.</msg>
<status status="PASS" starttime="20251017 15:50:24.280" endtime="20251017 15:50:24.281"/>
</kw>
<kw name="Should Contain X Times" library="BuiltIn">
<arg>${output}</arg>
<arg>Moved data size</arg>
<arg>1</arg>
<arg>collapse_spaces=True</arg>
<doc>Fails if ``container`` does not contain ``item`` ``count`` times.</doc>
<msg timestamp="20251017 15:50:24.281" level="INFO">Item found from container 1 time.</msg>
<status status="PASS" starttime="20251017 15:50:24.281" endtime="20251017 15:50:24.281"/>
</kw>
<kw name="Should Contain X Times" library="BuiltIn">
<arg>${output}</arg>
<arg>Scheduled to move containers</arg>
<arg>1</arg>
<arg>collapse_spaces=True</arg>
<doc>Fails if ``container`` does not contain ``item`` ``count`` times.</doc>
<msg timestamp="20251017 15:50:24.282" level="INFO">Item found from container 1 time.</msg>
<status status="PASS" starttime="20251017 15:50:24.281" endtime="20251017 15:50:24.282"/>
</kw>
<kw name="Should Contain X Times" library="BuiltIn">
<arg>${output}</arg>
<arg>Already moved containers</arg>
<arg>1</arg>
<arg>collapse_spaces=True</arg>
<doc>Fails if ``container`` does not contain ``item`` ``count`` times.</doc>
<msg timestamp="20251017 15:50:24.283" level="INFO">Item found from container 1 time.</msg>
<status status="PASS" starttime="20251017 15:50:24.282" endtime="20251017 15:50:24.283"/>
</kw>
<kw name="Should Contain X Times" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed to move containers 0</arg>
<arg>1</arg>
<arg>collapse_spaces=True</arg>
<doc>Fails if ``container`` does not contain ``item`` ``count`` times.</doc>
<msg timestamp="20251017 15:50:24.284" level="INFO">Item found from container 1 time.</msg>
<status status="PASS" starttime="20251017 15:50:24.283" endtime="20251017 15:50:24.284"/>
</kw>
<kw name="Should Contain X Times" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed to move containers by timeout 0</arg>
<arg>1</arg>
<arg>collapse_spaces=True</arg>
<doc>Fails if ``container`` does not contain ``item`` ``count`` times.</doc>
<msg timestamp="20251017 15:50:24.284" level="INFO">Item found from container 1 time.</msg>
<status status="PASS" starttime="20251017 15:50:24.284" endtime="20251017 15:50:24.284"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Iteration result ITERATION_COMPLETED</arg>
<arg>collapse_spaces=True</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20251017 15:50:24.285" level="FAIL">'ContainerBalancer is Running.
Started at: 2025-10-17 15:49:52
Balancing duration: 32s

Container Balancer Configuration values:
Key                                                Value
Threshold                                          0.1
Max Datanodes to Involve per Iteration(percent)    100
Max Size to Move per Iteration                     0GB
Max Size Entering Target per Iteration             26GB
Max Size Leaving Source per Iteration              26GB
Number of Iterations                               3
Time Limit for Single Container's Movement         65min
Time Limit for Single Container's Replication      50min
Interval between each Iteration                    0min
Whether to Enable Network Topology                 false
Whether to Trigger Refresh Datanode Usage Info     false
Container IDs to Exclude from Balancing            None
Datanodes Specified to be Balanced                 None
Datanodes Excluded from Balancing                  None

Current iteration info:
Key                                                Value
Iteration number                                   1
Iteration duration                                 32s
Iteration result                                   -
Size scheduled to move                             102 MB
Moved data size                                    34 MB
Scheduled to move containers                       5
Already moved containers                           1
Failed to move containers                          0
Failed to move containers by timeout               0
Entered data to nodes                              
80649811-96da-46bd-8bf5-65c7fafb5819 &lt;- 102 MB
Exited data from nodes                             
9061f21b-4654-4fd5-9e3c-1c9b0a185155 -&gt; 34 MB
615d09e8-a40a-4130-a13f-8a637eca82ac -&gt; 20 MB
6ca879f9-3b88-4702-be4d-5d245bd3ccb6 -&gt; 14 MB
2fddf2e0-467c-429d-b664-a9fbf55c9d35 -&gt; 14 MB
bee23e13-c17c-455f-9c57-1a46fd144f48 -&gt; 20 MB

Iteration history list:
' does not contain 'Iteration result ITERATION_COMPLETED'</msg>
<status status="FAIL" starttime="20251017 15:50:24.284" endtime="20251017 15:50:24.285"/>
</kw>
<status status="FAIL" starttime="20251017 15:50:24.280" endtime="20251017 15:50:24.285"/>
</kw>
<status status="FAIL" starttime="20251017 15:50:22.678" endtime="20251017 15:50:24.285"/>
</kw>
<kw name="Run Balancer Verbose History Status">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin containerbalancer status --verbose --history</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20251017 15:50:29.290" level="INFO">Running command 'ozone admin containerbalancer status --verbose --history 2&gt;&amp;1'.</msg>
<msg timestamp="20251017 15:50:30.938" level="INFO">${rc} = 0</msg>
<msg timestamp="20251017 15:50:30.938" level="INFO">${output} = ContainerBalancer is Running.
Started at: 2025-10-17 15:49:52
Balancing duration: 38s

Container Balancer Configuration values:
Key                                                Value
Threshold      ...</msg>
<status status="PASS" starttime="20251017 15:50:29.287" endtime="20251017 15:50:30.938"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20251017 15:50:30.939" level="INFO">ContainerBalancer is Running.
Started at: 2025-10-17 15:49:52
Balancing duration: 38s

Container Balancer Configuration values:
Key                                                Value
Threshold                                          0.1
Max Datanodes to Involve per Iteration(percent)    100
Max Size to Move per Iteration                     0GB
Max Size Entering Target per Iteration             26GB
Max Size Leaving Source per Iteration              26GB
Number of Iterations                               3
Time Limit for Single Container's Movement         65min
Time Limit for Single Container's Replication      50min
Interval between each Iteration                    0min
Whether to Enable Network Topology                 false
Whether to Trigger Refresh Datanode Usage Info     false
Container IDs to Exclude from Balancing            None
Datanodes Specified to be Balanced                 None
Datanodes Excluded from Balancing                  None

Current iteration info:
Key                                                Value
Iteration number                                   1
Iteration duration                                 38s
Iteration result                                   -
Size scheduled to move                             102 MB
Moved data size                                    34 MB
Scheduled to move containers                       5
Already moved containers                           1
Failed to move containers                          0
Failed to move containers by timeout               0
Entered data to nodes                              
80649811-96da-46bd-8bf5-65c7fafb5819 &lt;- 102 MB
Exited data from nodes                             
9061f21b-4654-4fd5-9e3c-1c9b0a185155 -&gt; 34 MB
615d09e8-a40a-4130-a13f-8a637eca82ac -&gt; 20 MB
6ca879f9-3b88-4702-be4d-5d245bd3ccb6 -&gt; 14 MB
2fddf2e0-467c-429d-b664-a9fbf55c9d35 -&gt; 14 MB
bee23e13-c17c-455f-9c57-1a46fd144f48 -&gt; 20 MB

Iteration history list:
</msg>
<status status="PASS" starttime="20251017 15:50:30.938" endtime="20251017 15:50:30.939"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20251017 15:50:30.940" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20251017 15:50:30.939" endtime="20251017 15:50:30.940"/>
</kw>
<status status="PASS" starttime="20251017 15:50:29.287" endtime="20251017 15:50:30.940"/>
</kw>
<msg timestamp="20251017 15:50:30.940" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20251017 15:50:29.286" endtime="20251017 15:50:30.940"/>
</kw>
<msg timestamp="20251017 15:50:30.940" level="INFO">${result} = ContainerBalancer is Running.
Started at: 2025-10-17 15:49:52
Balancing duration: 38s

Container Balancer Configuration values:
Key                                                Value
Threshold      ...</msg>
<status status="PASS" starttime="20251017 15:50:29.286" endtime="20251017 15:50:30.940"/>
</kw>
<kw name="Verify Balancer Iteration">
<arg>${result}</arg>
<arg>1</arg>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>ContainerBalancer is Running.</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20251017 15:50:30.941" endtime="20251017 15:50:30.941"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Started at:</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20251017 15:50:30.941" endtime="20251017 15:50:30.941"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Container Balancer Configuration values:</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20251017 15:50:30.942" endtime="20251017 15:50:30.942"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Iteration number ${number}</arg>
<arg>collapse_spaces=True</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20251017 15:50:30.942" endtime="20251017 15:50:30.942"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Scheduled to move containers</arg>
<arg>collapse_spaces=True</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20251017 15:50:30.943" endtime="20251017 15:50:30.943"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Balancing duration:</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20251017 15:50:30.943" endtime="20251017 15:50:30.943"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Iteration duration</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20251017 15:50:30.943" endtime="20251017 15:50:30.944"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Current iteration info:</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20251017 15:50:30.944" endtime="20251017 15:50:30.944"/>
</kw>
<status status="PASS" starttime="20251017 15:50:30.940" endtime="20251017 15:50:30.944"/>
</kw>
<kw name="Verify Balancer Iteration History">
<arg>${result}</arg>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Iteration history list:</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20251017 15:50:30.944" endtime="20251017 15:50:30.945"/>
</kw>
<kw name="Should Contain X Times" library="BuiltIn">
<arg>${output}</arg>
<arg>Size scheduled to move</arg>
<arg>1</arg>
<arg>collapse_spaces=True</arg>
<doc>Fails if ``container`` does not contain ``item`` ``count`` times.</doc>
<msg timestamp="20251017 15:50:30.945" level="INFO">Item found from container 1 time.</msg>
<status status="PASS" starttime="20251017 15:50:30.945" endtime="20251017 15:50:30.945"/>
</kw>
<kw name="Should Contain X Times" library="BuiltIn">
<arg>${output}</arg>
<arg>Moved data size</arg>
<arg>1</arg>
<arg>collapse_spaces=True</arg>
<doc>Fails if ``container`` does not contain ``item`` ``count`` times.</doc>
<msg timestamp="20251017 15:50:30.946" level="INFO">Item found from container 1 time.</msg>
<status status="PASS" starttime="20251017 15:50:30.945" endtime="20251017 15:50:30.946"/>
</kw>
<kw name="Should Contain X Times" library="BuiltIn">
<arg>${output}</arg>
<arg>Scheduled to move containers</arg>
<arg>1</arg>
<arg>collapse_spaces=True</arg>
<doc>Fails if ``container`` does not contain ``item`` ``count`` times.</doc>
<msg timestamp="20251017 15:50:30.946" level="INFO">Item found from container 1 time.</msg>
<status status="PASS" starttime="20251017 15:50:30.946" endtime="20251017 15:50:30.946"/>
</kw>
<kw name="Should Contain X Times" library="BuiltIn">
<arg>${output}</arg>
<arg>Already moved containers</arg>
<arg>1</arg>
<arg>collapse_spaces=True</arg>
<doc>Fails if ``container`` does not contain ``item`` ``count`` times.</doc>
<msg timestamp="20251017 15:50:30.947" level="INFO">Item found from container 1 time.</msg>
<status status="PASS" starttime="20251017 15:50:30.947" endtime="20251017 15:50:30.947"/>
</kw>
<kw name="Should Contain X Times" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed to move containers 0</arg>
<arg>1</arg>
<arg>collapse_spaces=True</arg>
<doc>Fails if ``container`` does not contain ``item`` ``count`` times.</doc>
<msg timestamp="20251017 15:50:30.947" level="INFO">Item found from container 1 time.</msg>
<status status="PASS" starttime="20251017 15:50:30.947" endtime="20251017 15:50:30.947"/>
</kw>
<kw name="Should Contain X Times" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed to move containers by timeout 0</arg>
<arg>1</arg>
<arg>collapse_spaces=True</arg>
<doc>Fails if ``container`` does not contain ``item`` ``count`` times.</doc>
<msg timestamp="20251017 15:50:30.948" level="INFO">Item found from container 1 time.</msg>
<status status="PASS" starttime="20251017 15:50:30.948" endtime="20251017 15:50:30.948"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Iteration result ITERATION_COMPLETED</arg>
<arg>collapse_spaces=True</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20251017 15:50:30.949" level="FAIL">'ContainerBalancer is Running.
Started at: 2025-10-17 15:49:52
Balancing duration: 38s

Container Balancer Configuration values:
Key                                                Value
Threshold                                          0.1
Max Datanodes to Involve per Iteration(percent)    100
Max Size to Move per Iteration                     0GB
Max Size Entering Target per Iteration             26GB
Max Size Leaving Source per Iteration              26GB
Number of Iterations                               3
Time Limit for Single Container's Movement         65min
Time Limit for Single Container's Replication      50min
Interval between each Iteration                    0min
Whether to Enable Network Topology                 false
Whether to Trigger Refresh Datanode Usage Info     false
Container IDs to Exclude from Balancing            None
Datanodes Specified to be Balanced                 None
Datanodes Excluded from Balancing                  None

Current iteration info:
Key                                                Value
Iteration number                                   1
Iteration duration                                 38s
Iteration result                                   -
Size scheduled to move                             102 MB
Moved data size                                    34 MB
Scheduled to move containers                       5
Already moved containers                           1
Failed to move containers                          0
Failed to move containers by timeout               0
Entered data to nodes                              
80649811-96da-46bd-8bf5-65c7fafb5819 &lt;- 102 MB
Exited data from nodes                             
9061f21b-4654-4fd5-9e3c-1c9b0a185155 -&gt; 34 MB
615d09e8-a40a-4130-a13f-8a637eca82ac -&gt; 20 MB
6ca879f9-3b88-4702-be4d-5d245bd3ccb6 -&gt; 14 MB
2fddf2e0-467c-429d-b664-a9fbf55c9d35 -&gt; 14 MB
bee23e13-c17c-455f-9c57-1a46fd144f48 -&gt; 20 MB

Iteration history list:
' does not contain 'Iteration result ITERATION_COMPLETED'</msg>
<status status="FAIL" starttime="20251017 15:50:30.948" endtime="20251017 15:50:30.949"/>
</kw>
<status status="FAIL" starttime="20251017 15:50:30.944" endtime="20251017 15:50:30.949"/>
</kw>
<status status="FAIL" starttime="20251017 15:50:29.286" endtime="20251017 15:50:30.949"/>
</kw>
<kw name="Run Balancer Verbose History Status">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin containerbalancer status --verbose --history</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20251017 15:50:35.954" level="INFO">Running command 'ozone admin containerbalancer status --verbose --history 2&gt;&amp;1'.</msg>
<msg timestamp="20251017 15:50:37.548" level="INFO">${rc} = 0</msg>
<msg timestamp="20251017 15:50:37.548" level="INFO">${output} = ContainerBalancer is Running.
Started at: 2025-10-17 15:49:52
Balancing duration: 45s

Container Balancer Configuration values:
Key                                                Value
Threshold      ...</msg>
<status status="PASS" starttime="20251017 15:50:35.951" endtime="20251017 15:50:37.548"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20251017 15:50:37.549" level="INFO">ContainerBalancer is Running.
Started at: 2025-10-17 15:49:52
Balancing duration: 45s

Container Balancer Configuration values:
Key                                                Value
Threshold                                          0.1
Max Datanodes to Involve per Iteration(percent)    100
Max Size to Move per Iteration                     0GB
Max Size Entering Target per Iteration             26GB
Max Size Leaving Source per Iteration              26GB
Number of Iterations                               3
Time Limit for Single Container's Movement         65min
Time Limit for Single Container's Replication      50min
Interval between each Iteration                    0min
Whether to Enable Network Topology                 false
Whether to Trigger Refresh Datanode Usage Info     false
Container IDs to Exclude from Balancing            None
Datanodes Specified to be Balanced                 None
Datanodes Excluded from Balancing                  None

Current iteration info:
-

Iteration history list:
Key                                                Value
Iteration number                                   1
Iteration duration                                 40s
Iteration result                                   ITERATION_COMPLETED
Size scheduled to move                             102 MB
Moved data size                                    102 MB
Scheduled to move containers                       5
Already moved containers                           5
Failed to move containers                          0
Failed to move containers by timeout               0
Entered data to nodes                              
80649811-96da-46bd-8bf5-65c7fafb5819 &lt;- 102 MB
Exited data from nodes                             
9061f21b-4654-4fd5-9e3c-1c9b0a185155 -&gt; 34 MB
615d09e8-a40a-4130-a13f-8a637eca82ac -&gt; 20 MB
6ca879f9-3b88-4702-be4d-5d245bd3ccb6 -&gt; 14 MB
2fddf2e0-467c-429d-b664-a9fbf55c9d35 -&gt; 14 MB
bee23e13-c17c-455f-9c57-1a46fd144f48 -&gt; 20 MB
</msg>
<status status="PASS" starttime="20251017 15:50:37.548" endtime="20251017 15:50:37.549"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20251017 15:50:37.549" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20251017 15:50:37.549" endtime="20251017 15:50:37.549"/>
</kw>
<status status="PASS" starttime="20251017 15:50:35.951" endtime="20251017 15:50:37.550"/>
</kw>
<msg timestamp="20251017 15:50:37.550" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20251017 15:50:35.951" endtime="20251017 15:50:37.550"/>
</kw>
<msg timestamp="20251017 15:50:37.550" level="INFO">${result} = ContainerBalancer is Running.
Started at: 2025-10-17 15:49:52
Balancing duration: 45s

Container Balancer Configuration values:
Key                                                Value
Threshold      ...</msg>
<status status="PASS" starttime="20251017 15:50:35.950" endtime="20251017 15:50:37.550"/>
</kw>
<kw name="Verify Balancer Iteration">
<arg>${result}</arg>
<arg>1</arg>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>ContainerBalancer is Running.</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20251017 15:50:37.550" endtime="20251017 15:50:37.551"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Started at:</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20251017 15:50:37.551" endtime="20251017 15:50:37.551"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Container Balancer Configuration values:</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20251017 15:50:37.551" endtime="20251017 15:50:37.551"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Iteration number ${number}</arg>
<arg>collapse_spaces=True</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20251017 15:50:37.551" endtime="20251017 15:50:37.552"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Scheduled to move containers</arg>
<arg>collapse_spaces=True</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20251017 15:50:37.552" endtime="20251017 15:50:37.552"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Balancing duration:</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20251017 15:50:37.552" endtime="20251017 15:50:37.553"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Iteration duration</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20251017 15:50:37.553" endtime="20251017 15:50:37.553"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Current iteration info:</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20251017 15:50:37.553" endtime="20251017 15:50:37.553"/>
</kw>
<status status="PASS" starttime="20251017 15:50:37.550" endtime="20251017 15:50:37.553"/>
</kw>
<kw name="Verify Balancer Iteration History">
<arg>${result}</arg>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Iteration history list:</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20251017 15:50:37.554" endtime="20251017 15:50:37.554"/>
</kw>
<kw name="Should Contain X Times" library="BuiltIn">
<arg>${output}</arg>
<arg>Size scheduled to move</arg>
<arg>1</arg>
<arg>collapse_spaces=True</arg>
<doc>Fails if ``container`` does not contain ``item`` ``count`` times.</doc>
<msg timestamp="20251017 15:50:37.555" level="INFO">Item found from container 1 time.</msg>
<status status="PASS" starttime="20251017 15:50:37.554" endtime="20251017 15:50:37.555"/>
</kw>
<kw name="Should Contain X Times" library="BuiltIn">
<arg>${output}</arg>
<arg>Moved data size</arg>
<arg>1</arg>
<arg>collapse_spaces=True</arg>
<doc>Fails if ``container`` does not contain ``item`` ``count`` times.</doc>
<msg timestamp="20251017 15:50:37.555" level="INFO">Item found from container 1 time.</msg>
<status status="PASS" starttime="20251017 15:50:37.555" endtime="20251017 15:50:37.555"/>
</kw>
<kw name="Should Contain X Times" library="BuiltIn">
<arg>${output}</arg>
<arg>Scheduled to move containers</arg>
<arg>1</arg>
<arg>collapse_spaces=True</arg>
<doc>Fails if ``container`` does not contain ``item`` ``count`` times.</doc>
<msg timestamp="20251017 15:50:37.556" level="INFO">Item found from container 1 time.</msg>
<status status="PASS" starttime="20251017 15:50:37.555" endtime="20251017 15:50:37.556"/>
</kw>
<kw name="Should Contain X Times" library="BuiltIn">
<arg>${output}</arg>
<arg>Already moved containers</arg>
<arg>1</arg>
<arg>collapse_spaces=True</arg>
<doc>Fails if ``container`` does not contain ``item`` ``count`` times.</doc>
<msg timestamp="20251017 15:50:37.556" level="INFO">Item found from container 1 time.</msg>
<status status="PASS" starttime="20251017 15:50:37.556" endtime="20251017 15:50:37.556"/>
</kw>
<kw name="Should Contain X Times" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed to move containers 0</arg>
<arg>1</arg>
<arg>collapse_spaces=True</arg>
<doc>Fails if ``container`` does not contain ``item`` ``count`` times.</doc>
<msg timestamp="20251017 15:50:37.557" level="INFO">Item found from container 1 time.</msg>
<status status="PASS" starttime="20251017 15:50:37.556" endtime="20251017 15:50:37.557"/>
</kw>
<kw name="Should Contain X Times" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed to move containers by timeout 0</arg>
<arg>1</arg>
<arg>collapse_spaces=True</arg>
<doc>Fails if ``container`` does not contain ``item`` ``count`` times.</doc>
<msg timestamp="20251017 15:50:37.557" level="INFO">Item found from container 1 time.</msg>
<status status="PASS" starttime="20251017 15:50:37.557" endtime="20251017 15:50:37.557"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Iteration result ITERATION_COMPLETED</arg>
<arg>collapse_spaces=True</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20251017 15:50:37.557" endtime="20251017 15:50:37.558"/>
</kw>
<status status="PASS" starttime="20251017 15:50:37.553" endtime="20251017 15:50:37.558"/>
</kw>
<status status="PASS" starttime="20251017 15:50:35.949" endtime="20251017 15:50:37.558"/>
</kw>
<status status="PASS" starttime="20251017 15:49:56.181" endtime="20251017 15:50:37.558"/>
</kw>
<kw name="Wait Finish Of Balancing">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin containerbalancer status</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20251017 15:50:37.562" level="INFO">Running command 'ozone admin containerbalancer status 2&gt;&amp;1'.</msg>
<msg timestamp="20251017 15:50:39.085" level="INFO">${rc} = 0</msg>
<msg timestamp="20251017 15:50:39.086" level="INFO">${output} = ContainerBalancer is Running.</msg>
<status status="PASS" starttime="20251017 15:50:37.559" endtime="20251017 15:50:39.086"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20251017 15:50:39.087" level="INFO">ContainerBalancer is Running.</msg>
<status status="PASS" starttime="20251017 15:50:39.086" endtime="20251017 15:50:39.087"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20251017 15:50:39.087" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20251017 15:50:39.087" endtime="20251017 15:50:39.087"/>
</kw>
<status status="PASS" starttime="20251017 15:50:37.559" endtime="20251017 15:50:39.088"/>
</kw>
<msg timestamp="20251017 15:50:39.088" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20251017 15:50:37.558" endtime="20251017 15:50:39.088"/>
</kw>
<msg timestamp="20251017 15:50:39.088" level="INFO">${result} = ContainerBalancer is Running.</msg>
<status status="PASS" starttime="20251017 15:50:37.558" endtime="20251017 15:50:39.088"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>4min</arg>
<arg>10sec</arg>
<arg>ContainerBalancer is Not Running</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="ContainerBalancer is Not Running">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin containerbalancer status</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20251017 15:50:39.093" level="INFO">Running command 'ozone admin containerbalancer status 2&gt;&amp;1'.</msg>
<msg timestamp="20251017 15:50:40.658" level="INFO">${rc} = 0</msg>
<msg timestamp="20251017 15:50:40.658" level="INFO">${output} = ContainerBalancer is Running.</msg>
<status status="PASS" starttime="20251017 15:50:39.090" endtime="20251017 15:50:40.658"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20251017 15:50:40.659" level="INFO">ContainerBalancer is Running.</msg>
<status status="PASS" starttime="20251017 15:50:40.658" endtime="20251017 15:50:40.659"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20251017 15:50:40.659" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20251017 15:50:40.659" endtime="20251017 15:50:40.659"/>
</kw>
<status status="PASS" starttime="20251017 15:50:39.090" endtime="20251017 15:50:40.659"/>
</kw>
<msg timestamp="20251017 15:50:40.659" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20251017 15:50:39.089" endtime="20251017 15:50:40.659"/>
</kw>
<msg timestamp="20251017 15:50:40.660" level="INFO">${result} = ContainerBalancer is Running.</msg>
<status status="PASS" starttime="20251017 15:50:39.089" endtime="20251017 15:50:40.660"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContainerBalancer is Not Running.</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20251017 15:50:40.660" level="FAIL">'ContainerBalancer is Running.' does not contain 'ContainerBalancer is Not Running.'</msg>
<status status="FAIL" starttime="20251017 15:50:40.660" endtime="20251017 15:50:40.660"/>
</kw>
<status status="FAIL" starttime="20251017 15:50:39.089" endtime="20251017 15:50:40.660"/>
</kw>
<kw name="ContainerBalancer is Not Running">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin containerbalancer status</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20251017 15:50:50.665" level="INFO">Running command 'ozone admin containerbalancer status 2&gt;&amp;1'.</msg>
<msg timestamp="20251017 15:50:52.215" level="INFO">${rc} = 0</msg>
<msg timestamp="20251017 15:50:52.215" level="INFO">${output} = ContainerBalancer is Running.</msg>
<status status="PASS" starttime="20251017 15:50:50.662" endtime="20251017 15:50:52.215"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20251017 15:50:52.216" level="INFO">ContainerBalancer is Running.</msg>
<status status="PASS" starttime="20251017 15:50:52.216" endtime="20251017 15:50:52.216"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20251017 15:50:52.217" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20251017 15:50:52.216" endtime="20251017 15:50:52.217"/>
</kw>
<status status="PASS" starttime="20251017 15:50:50.662" endtime="20251017 15:50:52.217"/>
</kw>
<msg timestamp="20251017 15:50:52.217" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20251017 15:50:50.662" endtime="20251017 15:50:52.217"/>
</kw>
<msg timestamp="20251017 15:50:52.217" level="INFO">${result} = ContainerBalancer is Running.</msg>
<status status="PASS" starttime="20251017 15:50:50.661" endtime="20251017 15:50:52.217"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContainerBalancer is Not Running.</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20251017 15:50:52.217" level="FAIL">'ContainerBalancer is Running.' does not contain 'ContainerBalancer is Not Running.'</msg>
<status status="FAIL" starttime="20251017 15:50:52.217" endtime="20251017 15:50:52.218"/>
</kw>
<status status="FAIL" starttime="20251017 15:50:50.661" endtime="20251017 15:50:52.218"/>
</kw>
<kw name="ContainerBalancer is Not Running">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin containerbalancer status</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20251017 15:51:02.223" level="INFO">Running command 'ozone admin containerbalancer status 2&gt;&amp;1'.</msg>
<msg timestamp="20251017 15:51:03.755" level="INFO">${rc} = 0</msg>
<msg timestamp="20251017 15:51:03.755" level="INFO">${output} = ContainerBalancer is Not Running.</msg>
<status status="PASS" starttime="20251017 15:51:02.220" endtime="20251017 15:51:03.755"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20251017 15:51:03.756" level="INFO">ContainerBalancer is Not Running.</msg>
<status status="PASS" starttime="20251017 15:51:03.755" endtime="20251017 15:51:03.756"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20251017 15:51:03.757" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20251017 15:51:03.756" endtime="20251017 15:51:03.757"/>
</kw>
<status status="PASS" starttime="20251017 15:51:02.219" endtime="20251017 15:51:03.757"/>
</kw>
<msg timestamp="20251017 15:51:03.757" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20251017 15:51:02.219" endtime="20251017 15:51:03.757"/>
</kw>
<msg timestamp="20251017 15:51:03.757" level="INFO">${result} = ContainerBalancer is Not Running.</msg>
<status status="PASS" starttime="20251017 15:51:02.219" endtime="20251017 15:51:03.757"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContainerBalancer is Not Running.</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20251017 15:51:03.757" endtime="20251017 15:51:03.757"/>
</kw>
<status status="PASS" starttime="20251017 15:51:02.218" endtime="20251017 15:51:03.758"/>
</kw>
<status status="PASS" starttime="20251017 15:50:39.088" endtime="20251017 15:51:03.758"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>60000ms</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20251017 15:52:03.758" level="INFO">Slept 1 minute</msg>
<status status="PASS" starttime="20251017 15:51:03.758" endtime="20251017 15:52:03.758"/>
</kw>
<status status="PASS" starttime="20251017 15:50:37.558" endtime="20251017 15:52:03.758"/>
</kw>
<kw name="Get Datanode Ozone Used Bytes Info">
<var>${datanodeOzoneUsedBytesInfoAfterContainerBalancing}</var>
<arg>${uuid}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>export DATANODES=$(ozone admin datanode list --json) &amp;&amp; for datanode in $(echo "$\{DATANODES\}" | jq -r '.[].id'); do ozone admin datanode usageinfo --uuid=$\{datanode\} --json | jq '{(.[0].datanodeDetails.uuid) : .[0].ozoneUsed}'; done | jq -s add</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20251017 15:52:03.763" level="INFO">Running command 'export DATANODES=$(ozone admin datanode list --json) &amp;&amp; for datanode in $(echo "${DATANODES}" | jq -r '.[].id'); do ozone admin datanode usageinfo --uuid=${datanode} --json | jq '{(.[0].datanodeDetails.uuid) : .[0].ozoneUsed}'; done | jq -s add 2&gt;&amp;1'.</msg>
<msg timestamp="20251017 15:52:15.522" level="INFO">${rc} = 0</msg>
<msg timestamp="20251017 15:52:15.522" level="INFO">${output} = {
  "80649811-96da-46bd-8bf5-65c7fafb5819": 104861696,
  "9061f21b-4654-4fd5-9e3c-1c9b0a185155": 71307264,
  "bee23e13-c17c-455f-9c57-1a46fd144f48": 84938752,
  "2fddf2e0-467c-429d-b664-a9fbf55c9d35":...</msg>
<status status="PASS" starttime="20251017 15:52:03.760" endtime="20251017 15:52:15.522"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20251017 15:52:15.523" level="INFO">{
  "80649811-96da-46bd-8bf5-65c7fafb5819": 104861696,
  "9061f21b-4654-4fd5-9e3c-1c9b0a185155": 71307264,
  "bee23e13-c17c-455f-9c57-1a46fd144f48": 84938752,
  "2fddf2e0-467c-429d-b664-a9fbf55c9d35": 91230208,
  "615d09e8-a40a-4130-a13f-8a637eca82ac": 84938752,
  "6ca879f9-3b88-4702-be4d-5d245bd3ccb6": 91230208
}</msg>
<status status="PASS" starttime="20251017 15:52:15.523" endtime="20251017 15:52:15.523"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20251017 15:52:15.524" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20251017 15:52:15.524" endtime="20251017 15:52:15.524"/>
</kw>
<status status="PASS" starttime="20251017 15:52:03.760" endtime="20251017 15:52:15.524"/>
</kw>
<msg timestamp="20251017 15:52:15.524" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20251017 15:52:03.760" endtime="20251017 15:52:15.524"/>
</kw>
<msg timestamp="20251017 15:52:15.525" level="INFO">${output} = {
  "80649811-96da-46bd-8bf5-65c7fafb5819": 104861696,
  "9061f21b-4654-4fd5-9e3c-1c9b0a185155": 71307264,
  "bee23e13-c17c-455f-9c57-1a46fd144f48": 84938752,
  "2fddf2e0-467c-429d-b664-a9fbf55c9d35":...</msg>
<status status="PASS" starttime="20251017 15:52:03.759" endtime="20251017 15:52:15.525"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>echo '${output}' | jq '. | to_entries | .[] | select(.key == "${uuid}") | .value'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20251017 15:52:15.529" level="INFO">Running command 'echo '{
  "80649811-96da-46bd-8bf5-65c7fafb5819": 104861696,
  "9061f21b-4654-4fd5-9e3c-1c9b0a185155": 71307264,
  "bee23e13-c17c-455f-9c57-1a46fd144f48": 84938752,
  "2fddf2e0-467c-429d-b664-a9fbf55c9d35": 91230208,
  "615d09e8-a40a-4130-a13f-8a637eca82ac": 84938752,
  "6ca879f9-3b88-4702-be4d-5d245bd3ccb6": 91230208
}' | jq '. | to_entries | .[] | select(.key == "80649811-96da-46bd-8bf5-65c7fafb5819") | .value' 2&gt;&amp;1'.</msg>
<msg timestamp="20251017 15:52:15.534" level="INFO">${rc} = 0</msg>
<msg timestamp="20251017 15:52:15.534" level="INFO">${output} = 104861696</msg>
<status status="PASS" starttime="20251017 15:52:15.526" endtime="20251017 15:52:15.534"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20251017 15:52:15.535" level="INFO">104861696</msg>
<status status="PASS" starttime="20251017 15:52:15.535" endtime="20251017 15:52:15.535"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20251017 15:52:15.536" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20251017 15:52:15.535" endtime="20251017 15:52:15.536"/>
</kw>
<status status="PASS" starttime="20251017 15:52:15.526" endtime="20251017 15:52:15.536"/>
</kw>
<msg timestamp="20251017 15:52:15.536" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20251017 15:52:15.525" endtime="20251017 15:52:15.536"/>
</kw>
<msg timestamp="20251017 15:52:15.536" level="INFO">${result} = 104861696</msg>
<status status="PASS" starttime="20251017 15:52:15.525" endtime="20251017 15:52:15.536"/>
</kw>
<msg timestamp="20251017 15:52:15.536" level="INFO">${datanodeOzoneUsedBytesInfoAfterContainerBalancing} = 104861696</msg>
<status status="PASS" starttime="20251017 15:52:03.759" endtime="20251017 15:52:15.536"/>
</kw>
<kw name="Should Not Be Equal As Integers" library="BuiltIn">
<arg>${datanodeOzoneUsedBytesInfo}</arg>
<arg>${datanodeOzoneUsedBytesInfoAfterContainerBalancing}</arg>
<doc>Fails if objects are equal after converting them to integers.</doc>
<status status="PASS" starttime="20251017 15:52:15.536" endtime="20251017 15:52:15.537"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${datanodeOzoneUsedBytesInfoAfterContainerBalancing} &lt; ${SIZE} * ${UPPER_LIMIT}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20251017 15:52:15.537" endtime="20251017 15:52:15.537"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${datanodeOzoneUsedBytesInfoAfterContainerBalancing} &gt; ${SIZE} * ${LOWER_LIMIT}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20251017 15:52:15.537" endtime="20251017 15:52:15.538"/>
</kw>
<timeout value="20 minutes"/>
<status status="PASS" starttime="20251017 15:41:35.199" endtime="20251017 15:52:15.538"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20251017 15:41:34.274" endtime="20251017 15:52:15.539"/>
</suite>
<statistics>
<total>
<stat pass="1" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="1" fail="0" skip="0" id="s1" name="ozone-balancer-ec">ozone-balancer-ec</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
