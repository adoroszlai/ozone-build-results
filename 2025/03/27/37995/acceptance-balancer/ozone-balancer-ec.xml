<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.1.1 (Python 3.9.21 on linux)" generated="20250327 12:46:32.616" rpa="false" schemaversion="4">
<suite id="s1" name="ozone-balancer-ec" source="/opt/hadoop/smoketest/balancer/testBalancer.robot">
<test id="s1-t1" name="Verify Container Balancer for RATIS/EC containers" line="157">
<kw name="Prepare For Tests">
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=/tmp/100mb bs=1048576 count=100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250327 12:37:43.777" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/100mb bs=1048576 count=100 2&gt;&amp;1'.</msg>
<msg timestamp="20250327 12:37:44.157" level="INFO">${rc} = 0</msg>
<msg timestamp="20250327 12:37:44.157" level="INFO">${output} = 100+0 records in
100+0 records out
104857600 bytes (105 MB, 100 MiB) copied, 0.37572 s, 279 MB/s</msg>
<status status="PASS" starttime="20250327 12:37:43.774" endtime="20250327 12:37:44.157"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250327 12:37:44.158" level="INFO">100+0 records in
100+0 records out
104857600 bytes (105 MB, 100 MiB) copied, 0.37572 s, 279 MB/s</msg>
<status status="PASS" starttime="20250327 12:37:44.157" endtime="20250327 12:37:44.158"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250327 12:37:44.158" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250327 12:37:44.158" endtime="20250327 12:37:44.158"/>
</kw>
<status status="PASS" starttime="20250327 12:37:43.774" endtime="20250327 12:37:44.158"/>
</kw>
<msg timestamp="20250327 12:37:44.158" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250327 12:37:43.774" endtime="20250327 12:37:44.159"/>
</kw>
<status status="PASS" starttime="20250327 12:37:43.773" endtime="20250327 12:37:44.159"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250327 12:37:44.159" endtime="20250327 12:37:44.159"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create /${VOLUME}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250327 12:37:44.162" level="INFO">Running command 'ozone sh volume create /volume1 2&gt;&amp;1'.</msg>
<msg timestamp="20250327 12:37:46.238" level="INFO">${rc} = 0</msg>
<msg timestamp="20250327 12:37:46.238" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250327 12:37:44.160" endtime="20250327 12:37:46.238"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250327 12:37:46.239" level="INFO"/>
<status status="PASS" starttime="20250327 12:37:46.239" endtime="20250327 12:37:46.240"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250327 12:37:46.240" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250327 12:37:46.240" endtime="20250327 12:37:46.240"/>
</kw>
<status status="PASS" starttime="20250327 12:37:44.160" endtime="20250327 12:37:46.240"/>
</kw>
<msg timestamp="20250327 12:37:46.240" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250327 12:37:44.160" endtime="20250327 12:37:46.240"/>
</kw>
<status status="PASS" starttime="20250327 12:37:44.159" endtime="20250327 12:37:46.240"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create --replication ${REPLICATION} --type ${TYPE} /${VOLUME}/${BUCKET}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250327 12:37:46.244" level="INFO">Running command 'ozone sh bucket create --replication rs-3-2-1024k --type EC /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20250327 12:37:48.215" level="INFO">${rc} = 0</msg>
<msg timestamp="20250327 12:37:48.215" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250327 12:37:46.242" endtime="20250327 12:37:48.215"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250327 12:37:48.216" level="INFO"/>
<status status="PASS" starttime="20250327 12:37:48.215" endtime="20250327 12:37:48.216"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250327 12:37:48.216" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250327 12:37:48.216" endtime="20250327 12:37:48.216"/>
</kw>
<status status="PASS" starttime="20250327 12:37:46.241" endtime="20250327 12:37:48.217"/>
</kw>
<msg timestamp="20250327 12:37:48.217" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250327 12:37:46.241" endtime="20250327 12:37:48.217"/>
</kw>
<status status="PASS" starttime="20250327 12:37:46.241" endtime="20250327 12:37:48.217"/>
</kw>
<status status="PASS" starttime="20250327 12:37:43.773" endtime="20250327 12:37:48.217"/>
</kw>
<kw name="Datanode In Maintenance Mode">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin datanode maintenance ${HOST}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250327 12:37:48.221" level="INFO">Running command 'ozone admin datanode maintenance datanode1 2&gt;&amp;1'.</msg>
<msg timestamp="20250327 12:37:50.004" level="INFO">${rc} = 0</msg>
<msg timestamp="20250327 12:37:50.004" level="INFO">${output} = Entering maintenance mode on datanode(s):
datanode1</msg>
<status status="PASS" starttime="20250327 12:37:48.218" endtime="20250327 12:37:50.005"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250327 12:37:50.006" level="INFO">Entering maintenance mode on datanode(s):
datanode1</msg>
<status status="PASS" starttime="20250327 12:37:50.005" endtime="20250327 12:37:50.006"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250327 12:37:50.006" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250327 12:37:50.006" endtime="20250327 12:37:50.006"/>
</kw>
<status status="PASS" starttime="20250327 12:37:48.218" endtime="20250327 12:37:50.006"/>
</kw>
<msg timestamp="20250327 12:37:50.006" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250327 12:37:48.218" endtime="20250327 12:37:50.007"/>
</kw>
<msg timestamp="20250327 12:37:50.007" level="INFO">${result} = Entering maintenance mode on datanode(s):
datanode1</msg>
<status status="PASS" starttime="20250327 12:37:48.217" endtime="20250327 12:37:50.007"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Entering maintenance mode on datanode</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250327 12:37:50.007" endtime="20250327 12:37:50.007"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin datanode list | grep "Operational State:*"</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250327 12:37:50.011" level="INFO">Running command 'ozone admin datanode list | grep "Operational State:*" 2&gt;&amp;1'.</msg>
<msg timestamp="20250327 12:37:51.717" level="INFO">${rc} = 0</msg>
<msg timestamp="20250327 12:37:51.717" level="INFO">${output} = Operational State: ENTERING_MAINTENANCE
Operational State: IN_SERVICE
Operational State: IN_SERVICE
Operational State: IN_SERVICE
Operational State: IN_SERVICE
Operational State: IN_SERVICE</msg>
<status status="PASS" starttime="20250327 12:37:50.008" endtime="20250327 12:37:51.717"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250327 12:37:51.718" level="INFO">Operational State: ENTERING_MAINTENANCE
Operational State: IN_SERVICE
Operational State: IN_SERVICE
Operational State: IN_SERVICE
Operational State: IN_SERVICE
Operational State: IN_SERVICE</msg>
<status status="PASS" starttime="20250327 12:37:51.718" endtime="20250327 12:37:51.718"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250327 12:37:51.719" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250327 12:37:51.718" endtime="20250327 12:37:51.719"/>
</kw>
<status status="PASS" starttime="20250327 12:37:50.008" endtime="20250327 12:37:51.719"/>
</kw>
<msg timestamp="20250327 12:37:51.719" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250327 12:37:50.008" endtime="20250327 12:37:51.719"/>
</kw>
<msg timestamp="20250327 12:37:51.719" level="INFO">${result} = Operational State: ENTERING_MAINTENANCE
Operational State: IN_SERVICE
Operational State: IN_SERVICE
Operational State: IN_SERVICE
Operational State: IN_SERVICE
Operational State: IN_SERVICE</msg>
<status status="PASS" starttime="20250327 12:37:50.007" endtime="20250327 12:37:51.719"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>30sec</arg>
<arg>5sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>ENTERING_MAINTENANCE</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ENTERING_MAINTENANCE</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250327 12:37:51.719" endtime="20250327 12:37:51.720"/>
</kw>
<status status="PASS" starttime="20250327 12:37:51.719" endtime="20250327 12:37:51.720"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Related pipelines are closed</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Related pipelines are closed">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin datanode list | awk -v RS= '{$1=$1}1'|grep MAINT | sed -e 's/^.*pipelines: \\(.*\\)$/\\1/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250327 12:37:51.723" level="INFO">Running command 'ozone admin datanode list | awk -v RS= '{$1=$1}1'|grep MAINT | sed -e 's/^.*pipelines: \(.*\)$/\1/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250327 12:37:53.405" level="INFO">${rc} = 0</msg>
<msg timestamp="20250327 12:37:53.405" level="INFO">${output} = 835c361d-a26d-4114-b217-c7632487e858/RATIS/THREE/RATIS/CLOSED/Follower</msg>
<status status="PASS" starttime="20250327 12:37:51.721" endtime="20250327 12:37:53.405"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250327 12:37:53.406" level="INFO">835c361d-a26d-4114-b217-c7632487e858/RATIS/THREE/RATIS/CLOSED/Follower</msg>
<status status="PASS" starttime="20250327 12:37:53.406" endtime="20250327 12:37:53.406"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250327 12:37:53.407" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250327 12:37:53.407" endtime="20250327 12:37:53.407"/>
</kw>
<status status="PASS" starttime="20250327 12:37:51.721" endtime="20250327 12:37:53.407"/>
</kw>
<msg timestamp="20250327 12:37:53.407" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250327 12:37:51.721" endtime="20250327 12:37:53.407"/>
</kw>
<msg timestamp="20250327 12:37:53.407" level="INFO">${result} = 835c361d-a26d-4114-b217-c7632487e858/RATIS/THREE/RATIS/CLOSED/Follower</msg>
<status status="PASS" starttime="20250327 12:37:51.720" endtime="20250327 12:37:53.407"/>
</kw>
<kw name="Should Contain Any" library="BuiltIn">
<arg>${result}</arg>
<arg>CLOSED</arg>
<arg>No related pipelines or the node is not in Healthy state.</arg>
<doc>Fails if ``container`` does not contain any of the ``*items``.</doc>
<status status="PASS" starttime="20250327 12:37:53.407" endtime="20250327 12:37:53.408"/>
</kw>
<status status="PASS" starttime="20250327 12:37:51.720" endtime="20250327 12:37:53.408"/>
</kw>
<status status="PASS" starttime="20250327 12:37:51.720" endtime="20250327 12:37:53.408"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>60000ms</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250327 12:38:53.408" level="INFO">Slept 1 minute</msg>
<status status="PASS" starttime="20250327 12:37:53.408" endtime="20250327 12:38:53.408"/>
</kw>
<status status="PASS" starttime="20250327 12:37:48.217" endtime="20250327 12:38:53.409"/>
</kw>
<kw name="Get Uuid">
<var>${uuid}</var>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin datanode list | awk -v RS= '{$1=$1}1'| grep ${HOST} | sed -e 's/Datanode: //'|sed -e 's/ .*$//'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250327 12:38:53.413" level="INFO">Running command 'ozone admin datanode list | awk -v RS= '{$1=$1}1'| grep datanode1 | sed -e 's/Datanode: //'|sed -e 's/ .*$//' 2&gt;&amp;1'.</msg>
<msg timestamp="20250327 12:38:55.072" level="INFO">${rc} = 0</msg>
<msg timestamp="20250327 12:38:55.072" level="INFO">${output} = f37d1744-9fb9-4f38-b748-55d1aa2fde76</msg>
<status status="PASS" starttime="20250327 12:38:53.410" endtime="20250327 12:38:55.072"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250327 12:38:55.073" level="INFO">f37d1744-9fb9-4f38-b748-55d1aa2fde76</msg>
<status status="PASS" starttime="20250327 12:38:55.072" endtime="20250327 12:38:55.073"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250327 12:38:55.074" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250327 12:38:55.073" endtime="20250327 12:38:55.074"/>
</kw>
<status status="PASS" starttime="20250327 12:38:53.410" endtime="20250327 12:38:55.074"/>
</kw>
<msg timestamp="20250327 12:38:55.074" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250327 12:38:53.410" endtime="20250327 12:38:55.074"/>
</kw>
<msg timestamp="20250327 12:38:55.074" level="INFO">${result} = f37d1744-9fb9-4f38-b748-55d1aa2fde76</msg>
<status status="PASS" starttime="20250327 12:38:53.409" endtime="20250327 12:38:55.074"/>
</kw>
<msg timestamp="20250327 12:38:55.074" level="INFO">${uuid} = f37d1744-9fb9-4f38-b748-55d1aa2fde76</msg>
<status status="PASS" starttime="20250327 12:38:53.409" endtime="20250327 12:38:55.074"/>
</kw>
<kw name="Datanode Usageinfo">
<arg>${uuid}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin datanode usageinfo --uuid=${uuid}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250327 12:38:55.078" level="INFO">Running command 'ozone admin datanode usageinfo --uuid=f37d1744-9fb9-4f38-b748-55d1aa2fde76 2&gt;&amp;1'.</msg>
<msg timestamp="20250327 12:38:56.807" level="INFO">${rc} = 0</msg>
<msg timestamp="20250327 12:38:56.807" level="INFO">${output} = Usage Information (1 Datanodes)

UUID         : f37d1744-9fb9-4f38-b748-55d1aa2fde76 
IP Address   : 172.18.0.10 
Hostname     : ozone-balancer-datanode1-1.ozone-balancer_default 
Capacity     : 10736...</msg>
<status status="PASS" starttime="20250327 12:38:55.075" endtime="20250327 12:38:56.807"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250327 12:38:56.808" level="INFO">Usage Information (1 Datanodes)

UUID         : f37d1744-9fb9-4f38-b748-55d1aa2fde76 
IP Address   : 172.18.0.10 
Hostname     : ozone-balancer-datanode1-1.ozone-balancer_default 
Capacity     : 1073634449 B (1023.90 MB) 
Total Used   : 12729489 B (12.14 MB) 
Total Used % : 1.19% 
Ozone Used   : 4096 B (4 KB) 
Ozone Used % : 0.00% 
Remaining    : 1060904960 B (1011.76 MB) 
Remaining %  : 98.81% 
Pipeline(s)  : 1 
Container(s) : 0 
Container Pre-allocated : 0 B (0 B) 
Remaining Allocatable   : 1060904960 B (1011.76 MB) 
Free Space To Spare     : 104857600 B (100 MB) 
</msg>
<status status="PASS" starttime="20250327 12:38:56.807" endtime="20250327 12:38:56.808"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250327 12:38:56.808" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250327 12:38:56.808" endtime="20250327 12:38:56.808"/>
</kw>
<status status="PASS" starttime="20250327 12:38:55.075" endtime="20250327 12:38:56.809"/>
</kw>
<msg timestamp="20250327 12:38:56.809" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250327 12:38:55.075" endtime="20250327 12:38:56.809"/>
</kw>
<msg timestamp="20250327 12:38:56.809" level="INFO">${result} = Usage Information (1 Datanodes)

UUID         : f37d1744-9fb9-4f38-b748-55d1aa2fde76 
IP Address   : 172.18.0.10 
Hostname     : ozone-balancer-datanode1-1.ozone-balancer_default 
Capacity     : 10736...</msg>
<status status="PASS" starttime="20250327 12:38:55.075" endtime="20250327 12:38:56.809"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Ozone Used</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250327 12:38:56.809" endtime="20250327 12:38:56.809"/>
</kw>
<status status="PASS" starttime="20250327 12:38:55.074" endtime="20250327 12:38:56.809"/>
</kw>
<kw name="Create Multiple Keys">
<arg>3</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${file}</var>
<arg>/tmp/100mb</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250327 12:38:56.810" level="INFO">${file} = /tmp/100mb</msg>
<status status="PASS" starttime="20250327 12:38:56.810" endtime="20250327 12:38:56.810"/>
</kw>
<for flavor="IN RANGE">
<var>${INDEX}</var>
<value>${NUM_KEYS}</value>
<iter>
<var name="${INDEX}">0</var>
<kw name="Set Variable" library="BuiltIn">
<var>${fileName}</var>
<arg>file-${INDEX}.txt</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250327 12:38:56.811" level="INFO">${fileName} = file-0.txt</msg>
<status status="PASS" starttime="20250327 12:38:56.810" endtime="20250327 12:38:56.811"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>/${VOLUME}/${BUCKET}/${fileName}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250327 12:38:56.811" level="INFO">${key} = /volume1/bucket1/file-0.txt</msg>
<status status="PASS" starttime="20250327 12:38:56.811" endtime="20250327 12:38:56.811"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${fileName}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250327 12:38:56.811" level="INFO">file-0.txt</msg>
<status status="PASS" starttime="20250327 12:38:56.811" endtime="20250327 12:38:56.812"/>
</kw>
<kw name="Create Key" library="shell">
<arg>${key}</arg>
<arg>${file}</arg>
<arg>--replication=${REPLICATION} --type=${TYPE}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put ${args} ${key} ${file}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250327 12:38:56.815" level="INFO">Running command 'ozone sh key put --replication=rs-3-2-1024k --type=EC /volume1/bucket1/file-0.txt /tmp/100mb 2&gt;&amp;1'.</msg>
<msg timestamp="20250327 12:39:04.013" level="INFO">${rc} = 0</msg>
<msg timestamp="20250327 12:39:04.013" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250327 12:38:56.813" endtime="20250327 12:39:04.013"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250327 12:39:04.015" level="INFO"/>
<status status="PASS" starttime="20250327 12:39:04.014" endtime="20250327 12:39:04.015"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250327 12:39:04.015" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250327 12:39:04.015" endtime="20250327 12:39:04.015"/>
</kw>
<status status="PASS" starttime="20250327 12:38:56.813" endtime="20250327 12:39:04.015"/>
</kw>
<msg timestamp="20250327 12:39:04.015" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250327 12:38:56.812" endtime="20250327 12:39:04.016"/>
</kw>
<msg timestamp="20250327 12:39:04.016" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250327 12:38:56.812" endtime="20250327 12:39:04.016"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250327 12:39:04.016" endtime="20250327 12:39:04.016"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Uploaded ${file} to ${key}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250327 12:39:04.017" level="INFO">Uploaded /tmp/100mb to /volume1/bucket1/file-0.txt</msg>
<status status="PASS" starttime="20250327 12:39:04.016" endtime="20250327 12:39:04.017"/>
</kw>
<status status="PASS" starttime="20250327 12:38:56.812" endtime="20250327 12:39:04.017"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250327 12:39:04.018" level="INFO">${postfix} = 35151</msg>
<status status="PASS" starttime="20250327 12:39:04.018" endtime="20250327 12:39:04.018"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250327 12:39:04.019" level="INFO">${tmpfile} = /tmp/tempkey-35151</msg>
<status status="PASS" starttime="20250327 12:39:04.019" endtime="20250327 12:39:04.019"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone ${cmd} ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250327 12:39:04.023" level="INFO">Running command 'ozone sh key get /volume1/bucket1/file-0.txt /tmp/tempkey-35151 2&gt;&amp;1'.</msg>
<msg timestamp="20250327 12:39:08.473" level="INFO">${rc} = 0</msg>
<msg timestamp="20250327 12:39:08.473" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250327 12:39:04.020" endtime="20250327 12:39:08.473"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250327 12:39:08.474" level="INFO"/>
<status status="PASS" starttime="20250327 12:39:08.473" endtime="20250327 12:39:08.474"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250327 12:39:08.474" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250327 12:39:08.474" endtime="20250327 12:39:08.474"/>
</kw>
<status status="PASS" starttime="20250327 12:39:04.020" endtime="20250327 12:39:08.474"/>
</kw>
<msg timestamp="20250327 12:39:08.474" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250327 12:39:04.019" endtime="20250327 12:39:08.475"/>
</kw>
<status status="PASS" starttime="20250327 12:39:04.019" endtime="20250327 12:39:08.475"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20250327 12:39:08.477" level="INFO">Running command 'diff -q /tmp/100mb /tmp/tempkey-35151 2&gt;&amp;1'.</msg>
<msg timestamp="20250327 12:39:08.550" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20250327 12:39:08.475" endtime="20250327 12:39:08.550"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250327 12:39:08.554" level="INFO">Running command 'rm -f /tmp/tempkey-35151 2&gt;&amp;1'.</msg>
<msg timestamp="20250327 12:39:08.583" level="INFO">${rc} = 0</msg>
<msg timestamp="20250327 12:39:08.583" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250327 12:39:08.551" endtime="20250327 12:39:08.583"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250327 12:39:08.584" level="INFO"/>
<status status="PASS" starttime="20250327 12:39:08.583" endtime="20250327 12:39:08.584"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250327 12:39:08.584" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250327 12:39:08.584" endtime="20250327 12:39:08.584"/>
</kw>
<status status="PASS" starttime="20250327 12:39:08.551" endtime="20250327 12:39:08.584"/>
</kw>
<msg timestamp="20250327 12:39:08.584" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250327 12:39:08.551" endtime="20250327 12:39:08.584"/>
</kw>
<status status="PASS" starttime="20250327 12:39:08.550" endtime="20250327 12:39:08.585"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20250327 12:39:08.585" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20250327 12:39:08.585" endtime="20250327 12:39:08.585"/>
</kw>
<msg timestamp="20250327 12:39:08.585" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20250327 12:39:04.017" endtime="20250327 12:39:08.585"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${matches}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20250327 12:39:08.585" endtime="20250327 12:39:08.586"/>
</kw>
<status status="PASS" starttime="20250327 12:39:04.017" endtime="20250327 12:39:08.586"/>
</kw>
<status status="PASS" starttime="20250327 12:38:56.810" endtime="20250327 12:39:08.586"/>
</iter>
<iter>
<var name="${INDEX}">1</var>
<kw name="Set Variable" library="BuiltIn">
<var>${fileName}</var>
<arg>file-${INDEX}.txt</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250327 12:39:08.586" level="INFO">${fileName} = file-1.txt</msg>
<status status="PASS" starttime="20250327 12:39:08.586" endtime="20250327 12:39:08.586"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>/${VOLUME}/${BUCKET}/${fileName}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250327 12:39:08.587" level="INFO">${key} = /volume1/bucket1/file-1.txt</msg>
<status status="PASS" starttime="20250327 12:39:08.586" endtime="20250327 12:39:08.587"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${fileName}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250327 12:39:08.587" level="INFO">file-1.txt</msg>
<status status="PASS" starttime="20250327 12:39:08.587" endtime="20250327 12:39:08.587"/>
</kw>
<kw name="Create Key" library="shell">
<arg>${key}</arg>
<arg>${file}</arg>
<arg>--replication=${REPLICATION} --type=${TYPE}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put ${args} ${key} ${file}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250327 12:39:08.591" level="INFO">Running command 'ozone sh key put --replication=rs-3-2-1024k --type=EC /volume1/bucket1/file-1.txt /tmp/100mb 2&gt;&amp;1'.</msg>
<msg timestamp="20250327 12:39:14.518" level="INFO">${rc} = 0</msg>
<msg timestamp="20250327 12:39:14.518" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250327 12:39:08.589" endtime="20250327 12:39:14.518"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250327 12:39:14.519" level="INFO"/>
<status status="PASS" starttime="20250327 12:39:14.518" endtime="20250327 12:39:14.519"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250327 12:39:14.520" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250327 12:39:14.519" endtime="20250327 12:39:14.520"/>
</kw>
<status status="PASS" starttime="20250327 12:39:08.588" endtime="20250327 12:39:14.520"/>
</kw>
<msg timestamp="20250327 12:39:14.520" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250327 12:39:08.588" endtime="20250327 12:39:14.520"/>
</kw>
<msg timestamp="20250327 12:39:14.520" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250327 12:39:08.588" endtime="20250327 12:39:14.520"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250327 12:39:14.520" endtime="20250327 12:39:14.521"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Uploaded ${file} to ${key}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250327 12:39:14.521" level="INFO">Uploaded /tmp/100mb to /volume1/bucket1/file-1.txt</msg>
<status status="PASS" starttime="20250327 12:39:14.521" endtime="20250327 12:39:14.521"/>
</kw>
<status status="PASS" starttime="20250327 12:39:08.587" endtime="20250327 12:39:14.521"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250327 12:39:14.522" level="INFO">${postfix} = 36885</msg>
<status status="PASS" starttime="20250327 12:39:14.522" endtime="20250327 12:39:14.522"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250327 12:39:14.523" level="INFO">${tmpfile} = /tmp/tempkey-36885</msg>
<status status="PASS" starttime="20250327 12:39:14.522" endtime="20250327 12:39:14.523"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone ${cmd} ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250327 12:39:14.526" level="INFO">Running command 'ozone sh key get /volume1/bucket1/file-1.txt /tmp/tempkey-36885 2&gt;&amp;1'.</msg>
<msg timestamp="20250327 12:39:19.206" level="INFO">${rc} = 0</msg>
<msg timestamp="20250327 12:39:19.206" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250327 12:39:14.524" endtime="20250327 12:39:19.206"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250327 12:39:19.207" level="INFO"/>
<status status="PASS" starttime="20250327 12:39:19.207" endtime="20250327 12:39:19.207"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250327 12:39:19.207" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250327 12:39:19.207" endtime="20250327 12:39:19.208"/>
</kw>
<status status="PASS" starttime="20250327 12:39:14.523" endtime="20250327 12:39:19.208"/>
</kw>
<msg timestamp="20250327 12:39:19.208" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250327 12:39:14.523" endtime="20250327 12:39:19.208"/>
</kw>
<status status="PASS" starttime="20250327 12:39:14.523" endtime="20250327 12:39:19.208"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20250327 12:39:19.210" level="INFO">Running command 'diff -q /tmp/100mb /tmp/tempkey-36885 2&gt;&amp;1'.</msg>
<msg timestamp="20250327 12:39:19.283" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20250327 12:39:19.208" endtime="20250327 12:39:19.283"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250327 12:39:19.287" level="INFO">Running command 'rm -f /tmp/tempkey-36885 2&gt;&amp;1'.</msg>
<msg timestamp="20250327 12:39:19.315" level="INFO">${rc} = 0</msg>
<msg timestamp="20250327 12:39:19.315" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250327 12:39:19.284" endtime="20250327 12:39:19.315"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250327 12:39:19.316" level="INFO"/>
<status status="PASS" starttime="20250327 12:39:19.315" endtime="20250327 12:39:19.316"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250327 12:39:19.316" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250327 12:39:19.316" endtime="20250327 12:39:19.316"/>
</kw>
<status status="PASS" starttime="20250327 12:39:19.284" endtime="20250327 12:39:19.316"/>
</kw>
<msg timestamp="20250327 12:39:19.316" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250327 12:39:19.284" endtime="20250327 12:39:19.316"/>
</kw>
<status status="PASS" starttime="20250327 12:39:19.283" endtime="20250327 12:39:19.316"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20250327 12:39:19.317" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20250327 12:39:19.317" endtime="20250327 12:39:19.317"/>
</kw>
<msg timestamp="20250327 12:39:19.317" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20250327 12:39:14.522" endtime="20250327 12:39:19.317"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${matches}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20250327 12:39:19.317" endtime="20250327 12:39:19.317"/>
</kw>
<status status="PASS" starttime="20250327 12:39:14.521" endtime="20250327 12:39:19.317"/>
</kw>
<status status="PASS" starttime="20250327 12:39:08.586" endtime="20250327 12:39:19.317"/>
</iter>
<iter>
<var name="${INDEX}">2</var>
<kw name="Set Variable" library="BuiltIn">
<var>${fileName}</var>
<arg>file-${INDEX}.txt</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250327 12:39:19.318" level="INFO">${fileName} = file-2.txt</msg>
<status status="PASS" starttime="20250327 12:39:19.318" endtime="20250327 12:39:19.318"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>/${VOLUME}/${BUCKET}/${fileName}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250327 12:39:19.318" level="INFO">${key} = /volume1/bucket1/file-2.txt</msg>
<status status="PASS" starttime="20250327 12:39:19.318" endtime="20250327 12:39:19.318"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${fileName}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250327 12:39:19.319" level="INFO">file-2.txt</msg>
<status status="PASS" starttime="20250327 12:39:19.318" endtime="20250327 12:39:19.319"/>
</kw>
<kw name="Create Key" library="shell">
<arg>${key}</arg>
<arg>${file}</arg>
<arg>--replication=${REPLICATION} --type=${TYPE}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put ${args} ${key} ${file}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250327 12:39:19.322" level="INFO">Running command 'ozone sh key put --replication=rs-3-2-1024k --type=EC /volume1/bucket1/file-2.txt /tmp/100mb 2&gt;&amp;1'.</msg>
<msg timestamp="20250327 12:39:25.763" level="INFO">${rc} = 0</msg>
<msg timestamp="20250327 12:39:25.763" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250327 12:39:19.320" endtime="20250327 12:39:25.763"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250327 12:39:25.764" level="INFO"/>
<status status="PASS" starttime="20250327 12:39:25.763" endtime="20250327 12:39:25.764"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250327 12:39:25.764" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250327 12:39:25.764" endtime="20250327 12:39:25.764"/>
</kw>
<status status="PASS" starttime="20250327 12:39:19.320" endtime="20250327 12:39:25.764"/>
</kw>
<msg timestamp="20250327 12:39:25.764" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250327 12:39:19.320" endtime="20250327 12:39:25.765"/>
</kw>
<msg timestamp="20250327 12:39:25.765" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250327 12:39:19.319" endtime="20250327 12:39:25.765"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250327 12:39:25.765" endtime="20250327 12:39:25.765"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Uploaded ${file} to ${key}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250327 12:39:25.765" level="INFO">Uploaded /tmp/100mb to /volume1/bucket1/file-2.txt</msg>
<status status="PASS" starttime="20250327 12:39:25.765" endtime="20250327 12:39:25.765"/>
</kw>
<status status="PASS" starttime="20250327 12:39:19.319" endtime="20250327 12:39:25.765"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250327 12:39:25.767" level="INFO">${postfix} = 25584</msg>
<status status="PASS" starttime="20250327 12:39:25.766" endtime="20250327 12:39:25.767"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250327 12:39:25.767" level="INFO">${tmpfile} = /tmp/tempkey-25584</msg>
<status status="PASS" starttime="20250327 12:39:25.767" endtime="20250327 12:39:25.767"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone ${cmd} ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250327 12:39:25.770" level="INFO">Running command 'ozone sh key get /volume1/bucket1/file-2.txt /tmp/tempkey-25584 2&gt;&amp;1'.</msg>
<msg timestamp="20250327 12:39:30.513" level="INFO">${rc} = 0</msg>
<msg timestamp="20250327 12:39:30.513" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250327 12:39:25.768" endtime="20250327 12:39:30.513"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250327 12:39:30.514" level="INFO"/>
<status status="PASS" starttime="20250327 12:39:30.513" endtime="20250327 12:39:30.514"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250327 12:39:30.514" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250327 12:39:30.514" endtime="20250327 12:39:30.515"/>
</kw>
<status status="PASS" starttime="20250327 12:39:25.768" endtime="20250327 12:39:30.515"/>
</kw>
<msg timestamp="20250327 12:39:30.515" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250327 12:39:25.767" endtime="20250327 12:39:30.515"/>
</kw>
<status status="PASS" starttime="20250327 12:39:25.767" endtime="20250327 12:39:30.515"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20250327 12:39:30.518" level="INFO">Running command 'diff -q /tmp/100mb /tmp/tempkey-25584 2&gt;&amp;1'.</msg>
<msg timestamp="20250327 12:39:30.589" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20250327 12:39:30.515" endtime="20250327 12:39:30.589"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250327 12:39:30.593" level="INFO">Running command 'rm -f /tmp/tempkey-25584 2&gt;&amp;1'.</msg>
<msg timestamp="20250327 12:39:30.621" level="INFO">${rc} = 0</msg>
<msg timestamp="20250327 12:39:30.621" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250327 12:39:30.591" endtime="20250327 12:39:30.621"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250327 12:39:30.622" level="INFO"/>
<status status="PASS" starttime="20250327 12:39:30.622" endtime="20250327 12:39:30.622"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250327 12:39:30.623" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250327 12:39:30.622" endtime="20250327 12:39:30.623"/>
</kw>
<status status="PASS" starttime="20250327 12:39:30.590" endtime="20250327 12:39:30.623"/>
</kw>
<msg timestamp="20250327 12:39:30.623" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250327 12:39:30.590" endtime="20250327 12:39:30.623"/>
</kw>
<status status="PASS" starttime="20250327 12:39:30.589" endtime="20250327 12:39:30.623"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20250327 12:39:30.624" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20250327 12:39:30.623" endtime="20250327 12:39:30.624"/>
</kw>
<msg timestamp="20250327 12:39:30.624" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20250327 12:39:25.766" endtime="20250327 12:39:30.624"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${matches}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20250327 12:39:30.624" endtime="20250327 12:39:30.624"/>
</kw>
<status status="PASS" starttime="20250327 12:39:25.766" endtime="20250327 12:39:30.624"/>
</kw>
<status status="PASS" starttime="20250327 12:39:19.318" endtime="20250327 12:39:30.624"/>
</iter>
<status status="PASS" starttime="20250327 12:38:56.810" endtime="20250327 12:39:30.624"/>
</for>
<status status="PASS" starttime="20250327 12:38:56.809" endtime="20250327 12:39:30.624"/>
</kw>
<kw name="Close All Containers">
<for flavor="IN RANGE">
<var>${INDEX}</var>
<value>15</value>
<iter>
<var name="${INDEX}">0</var>
<kw name="Execute" library="os">
<var>${container}</var>
<arg>ozone admin container list --state OPEN | jq -r '.[] | select(.replicationConfig.data == 3) | .containerID' | head -1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250327 12:39:30.629" level="INFO">Running command 'ozone admin container list --state OPEN | jq -r '.[] | select(.replicationConfig.data == 3) | .containerID' | head -1 2&gt;&amp;1'.</msg>
<msg timestamp="20250327 12:39:32.315" level="INFO">${rc} = 0</msg>
<msg timestamp="20250327 12:39:32.315" level="INFO">${output} = 1</msg>
<status status="PASS" starttime="20250327 12:39:30.626" endtime="20250327 12:39:32.315"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250327 12:39:32.316" level="INFO">1</msg>
<status status="PASS" starttime="20250327 12:39:32.315" endtime="20250327 12:39:32.316"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250327 12:39:32.316" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250327 12:39:32.316" endtime="20250327 12:39:32.316"/>
</kw>
<status status="PASS" starttime="20250327 12:39:30.626" endtime="20250327 12:39:32.317"/>
</kw>
<msg timestamp="20250327 12:39:32.317" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250327 12:39:30.625" endtime="20250327 12:39:32.317"/>
</kw>
<msg timestamp="20250327 12:39:32.317" level="INFO">${container} = 1</msg>
<status status="PASS" starttime="20250327 12:39:30.625" endtime="20250327 12:39:32.317"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>"${container}" == "${EMPTY}"</arg>
<doc>Stops executing the enclosing FOR loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20250327 12:39:32.317" endtime="20250327 12:39:32.318"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${message}</var>
<arg>ozone admin container close "${container}"</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250327 12:39:32.321" level="INFO">Running command 'ozone admin container close "1" 2&gt;&amp;1'.</msg>
<msg timestamp="20250327 12:39:33.962" level="INFO">${rc} = 0</msg>
<msg timestamp="20250327 12:39:33.962" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250327 12:39:32.318" endtime="20250327 12:39:33.962"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250327 12:39:33.963" level="INFO"/>
<status status="PASS" starttime="20250327 12:39:33.962" endtime="20250327 12:39:33.963"/>
</kw>
<msg timestamp="20250327 12:39:33.963" level="INFO">${message} = </msg>
<status status="PASS" starttime="20250327 12:39:32.318" endtime="20250327 12:39:33.963"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${message}' != '${EMPTY}'</arg>
<arg>Should Contain</arg>
<arg>${message}</arg>
<arg>is in closing state</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250327 12:39:33.963" endtime="20250327 12:39:33.964"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin container info "${container}"</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250327 12:39:33.967" level="INFO">Running command 'ozone admin container info "1" 2&gt;&amp;1'.</msg>
<msg timestamp="20250327 12:39:35.676" level="INFO">${rc} = 0</msg>
<msg timestamp="20250327 12:39:35.676" level="INFO">${output} = Container id: 1
Pipeline id: a676b8c5-fb97-48bf-9ba0-21aa2f996f54
Write PipelineId: a676b8c5-fb97-48bf-9ba0-21aa2f996f54
Write Pipeline State: OPEN
Container State: CLOSING
Datanodes: [04cf7c3a-0639-4...</msg>
<status status="PASS" starttime="20250327 12:39:33.965" endtime="20250327 12:39:35.676"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250327 12:39:35.677" level="INFO">Container id: 1
Pipeline id: a676b8c5-fb97-48bf-9ba0-21aa2f996f54
Write PipelineId: a676b8c5-fb97-48bf-9ba0-21aa2f996f54
Write Pipeline State: OPEN
Container State: CLOSING
Datanodes: [04cf7c3a-0639-46ab-b87a-40573d07c572/ozone-balancer-datanode2-1.ozone-balancer_default,
4163b1a2-8fe7-47bc-8b84-a2afb9cf44d2/ozone-balancer-datanode6-1.ozone-balancer_default,
2ba8717c-3439-4660-9a68-68d6479e95a8/ozone-balancer-datanode3-1.ozone-balancer_default,
5021472c-5481-42e8-b549-5fb9aef3d453/ozone-balancer-datanode4-1.ozone-balancer_default,
3316868e-e29f-494a-b2c9-b0a1385ce8a6/ozone-balancer-datanode5-1.ozone-balancer_default]
Replicas: [State: OPEN; ReplicaIndex: 1; Origin: 04cf7c3a-0639-46ab-b87a-40573d07c572; Location: 04cf7c3a-0639-46ab-b87a-40573d07c572/ozone-balancer-datanode2-1.ozone-balancer_default,
State: OPEN; ReplicaIndex: 2; Origin: 4163b1a2-8fe7-47bc-8b84-a2afb9cf44d2; Location: 4163b1a2-8fe7-47bc-8b84-a2afb9cf44d2/ozone-balancer-datanode6-1.ozone-balancer_default,
State: OPEN; ReplicaIndex: 3; Origin: 2ba8717c-3439-4660-9a68-68d6479e95a8; Location: 2ba8717c-3439-4660-9a68-68d6479e95a8/ozone-balancer-datanode3-1.ozone-balancer_default,
State: OPEN; ReplicaIndex: 4; Origin: 5021472c-5481-42e8-b549-5fb9aef3d453; Location: 5021472c-5481-42e8-b549-5fb9aef3d453/ozone-balancer-datanode4-1.ozone-balancer_default,
State: OPEN; ReplicaIndex: 5; Origin: 3316868e-e29f-494a-b2c9-b0a1385ce8a6; Location: 3316868e-e29f-494a-b2c9-b0a1385ce8a6/ozone-balancer-datanode5-1.ozone-balancer_default]</msg>
<status status="PASS" starttime="20250327 12:39:35.677" endtime="20250327 12:39:35.677"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250327 12:39:35.678" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250327 12:39:35.677" endtime="20250327 12:39:35.678"/>
</kw>
<status status="PASS" starttime="20250327 12:39:33.965" endtime="20250327 12:39:35.678"/>
</kw>
<msg timestamp="20250327 12:39:35.678" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250327 12:39:33.965" endtime="20250327 12:39:35.678"/>
</kw>
<msg timestamp="20250327 12:39:35.678" level="INFO">${output} = Container id: 1
Pipeline id: a676b8c5-fb97-48bf-9ba0-21aa2f996f54
Write PipelineId: a676b8c5-fb97-48bf-9ba0-21aa2f996f54
Write Pipeline State: OPEN
Container State: CLOSING
Datanodes: [04cf7c3a-0639-4...</msg>
<status status="PASS" starttime="20250327 12:39:33.964" endtime="20250327 12:39:35.678"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>CLOS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250327 12:39:35.678" endtime="20250327 12:39:35.678"/>
</kw>
<status status="PASS" starttime="20250327 12:39:30.625" endtime="20250327 12:39:35.678"/>
</iter>
<iter>
<var name="${INDEX}">1</var>
<kw name="Execute" library="os">
<var>${container}</var>
<arg>ozone admin container list --state OPEN | jq -r '.[] | select(.replicationConfig.data == 3) | .containerID' | head -1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250327 12:39:35.682" level="INFO">Running command 'ozone admin container list --state OPEN | jq -r '.[] | select(.replicationConfig.data == 3) | .containerID' | head -1 2&gt;&amp;1'.</msg>
<msg timestamp="20250327 12:39:37.339" level="INFO">${rc} = 0</msg>
<msg timestamp="20250327 12:39:37.339" level="INFO">${output} = 3</msg>
<status status="PASS" starttime="20250327 12:39:35.680" endtime="20250327 12:39:37.339"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250327 12:39:37.340" level="INFO">3</msg>
<status status="PASS" starttime="20250327 12:39:37.339" endtime="20250327 12:39:37.340"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250327 12:39:37.340" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250327 12:39:37.340" endtime="20250327 12:39:37.340"/>
</kw>
<status status="PASS" starttime="20250327 12:39:35.679" endtime="20250327 12:39:37.340"/>
</kw>
<msg timestamp="20250327 12:39:37.340" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250327 12:39:35.679" endtime="20250327 12:39:37.340"/>
</kw>
<msg timestamp="20250327 12:39:37.341" level="INFO">${container} = 3</msg>
<status status="PASS" starttime="20250327 12:39:35.679" endtime="20250327 12:39:37.341"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>"${container}" == "${EMPTY}"</arg>
<doc>Stops executing the enclosing FOR loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20250327 12:39:37.341" endtime="20250327 12:39:37.342"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${message}</var>
<arg>ozone admin container close "${container}"</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250327 12:39:37.344" level="INFO">Running command 'ozone admin container close "3" 2&gt;&amp;1'.</msg>
<msg timestamp="20250327 12:39:38.922" level="INFO">${rc} = 0</msg>
<msg timestamp="20250327 12:39:38.922" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250327 12:39:37.342" endtime="20250327 12:39:38.923"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250327 12:39:38.923" level="INFO"/>
<status status="PASS" starttime="20250327 12:39:38.923" endtime="20250327 12:39:38.923"/>
</kw>
<msg timestamp="20250327 12:39:38.924" level="INFO">${message} = </msg>
<status status="PASS" starttime="20250327 12:39:37.342" endtime="20250327 12:39:38.924"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${message}' != '${EMPTY}'</arg>
<arg>Should Contain</arg>
<arg>${message}</arg>
<arg>is in closing state</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250327 12:39:38.924" endtime="20250327 12:39:38.925"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin container info "${container}"</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250327 12:39:38.928" level="INFO">Running command 'ozone admin container info "3" 2&gt;&amp;1'.</msg>
<msg timestamp="20250327 12:39:40.615" level="INFO">${rc} = 0</msg>
<msg timestamp="20250327 12:39:40.615" level="INFO">${output} = Container id: 3
Pipeline id: 1057b9be-3759-4a33-8401-d3bb5c399b60
Write PipelineId: 1057b9be-3759-4a33-8401-d3bb5c399b60
Write Pipeline State: OPEN
Container State: CLOSING
Datanodes: [5021472c-5481-4...</msg>
<status status="PASS" starttime="20250327 12:39:38.926" endtime="20250327 12:39:40.615"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250327 12:39:40.616" level="INFO">Container id: 3
Pipeline id: 1057b9be-3759-4a33-8401-d3bb5c399b60
Write PipelineId: 1057b9be-3759-4a33-8401-d3bb5c399b60
Write Pipeline State: OPEN
Container State: CLOSING
Datanodes: [5021472c-5481-42e8-b549-5fb9aef3d453/ozone-balancer-datanode4-1.ozone-balancer_default,
04cf7c3a-0639-46ab-b87a-40573d07c572/ozone-balancer-datanode2-1.ozone-balancer_default,
3316868e-e29f-494a-b2c9-b0a1385ce8a6/ozone-balancer-datanode5-1.ozone-balancer_default,
2ba8717c-3439-4660-9a68-68d6479e95a8/ozone-balancer-datanode3-1.ozone-balancer_default,
4163b1a2-8fe7-47bc-8b84-a2afb9cf44d2/ozone-balancer-datanode6-1.ozone-balancer_default]
Replicas: [State: OPEN; ReplicaIndex: 1; Origin: 5021472c-5481-42e8-b549-5fb9aef3d453; Location: 5021472c-5481-42e8-b549-5fb9aef3d453/ozone-balancer-datanode4-1.ozone-balancer_default,
State: OPEN; ReplicaIndex: 2; Origin: 04cf7c3a-0639-46ab-b87a-40573d07c572; Location: 04cf7c3a-0639-46ab-b87a-40573d07c572/ozone-balancer-datanode2-1.ozone-balancer_default,
State: OPEN; ReplicaIndex: 3; Origin: 3316868e-e29f-494a-b2c9-b0a1385ce8a6; Location: 3316868e-e29f-494a-b2c9-b0a1385ce8a6/ozone-balancer-datanode5-1.ozone-balancer_default,
State: OPEN; ReplicaIndex: 4; Origin: 2ba8717c-3439-4660-9a68-68d6479e95a8; Location: 2ba8717c-3439-4660-9a68-68d6479e95a8/ozone-balancer-datanode3-1.ozone-balancer_default,
State: OPEN; ReplicaIndex: 5; Origin: 4163b1a2-8fe7-47bc-8b84-a2afb9cf44d2; Location: 4163b1a2-8fe7-47bc-8b84-a2afb9cf44d2/ozone-balancer-datanode6-1.ozone-balancer_default]</msg>
<status status="PASS" starttime="20250327 12:39:40.616" endtime="20250327 12:39:40.616"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250327 12:39:40.616" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250327 12:39:40.616" endtime="20250327 12:39:40.617"/>
</kw>
<status status="PASS" starttime="20250327 12:39:38.925" endtime="20250327 12:39:40.617"/>
</kw>
<msg timestamp="20250327 12:39:40.617" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250327 12:39:38.925" endtime="20250327 12:39:40.617"/>
</kw>
<msg timestamp="20250327 12:39:40.617" level="INFO">${output} = Container id: 3
Pipeline id: 1057b9be-3759-4a33-8401-d3bb5c399b60
Write PipelineId: 1057b9be-3759-4a33-8401-d3bb5c399b60
Write Pipeline State: OPEN
Container State: CLOSING
Datanodes: [5021472c-5481-4...</msg>
<status status="PASS" starttime="20250327 12:39:38.925" endtime="20250327 12:39:40.617"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>CLOS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250327 12:39:40.617" endtime="20250327 12:39:40.617"/>
</kw>
<status status="PASS" starttime="20250327 12:39:35.679" endtime="20250327 12:39:40.617"/>
</iter>
<iter>
<var name="${INDEX}">2</var>
<kw name="Execute" library="os">
<var>${container}</var>
<arg>ozone admin container list --state OPEN | jq -r '.[] | select(.replicationConfig.data == 3) | .containerID' | head -1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250327 12:39:40.621" level="INFO">Running command 'ozone admin container list --state OPEN | jq -r '.[] | select(.replicationConfig.data == 3) | .containerID' | head -1 2&gt;&amp;1'.</msg>
<msg timestamp="20250327 12:39:42.398" level="INFO">${rc} = 0</msg>
<msg timestamp="20250327 12:39:42.398" level="INFO">${output} = 4</msg>
<status status="PASS" starttime="20250327 12:39:40.619" endtime="20250327 12:39:42.398"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250327 12:39:42.399" level="INFO">4</msg>
<status status="PASS" starttime="20250327 12:39:42.398" endtime="20250327 12:39:42.399"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250327 12:39:42.400" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250327 12:39:42.399" endtime="20250327 12:39:42.400"/>
</kw>
<status status="PASS" starttime="20250327 12:39:40.618" endtime="20250327 12:39:42.400"/>
</kw>
<msg timestamp="20250327 12:39:42.400" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250327 12:39:40.618" endtime="20250327 12:39:42.400"/>
</kw>
<msg timestamp="20250327 12:39:42.400" level="INFO">${container} = 4</msg>
<status status="PASS" starttime="20250327 12:39:40.618" endtime="20250327 12:39:42.400"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>"${container}" == "${EMPTY}"</arg>
<doc>Stops executing the enclosing FOR loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20250327 12:39:42.400" endtime="20250327 12:39:42.401"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${message}</var>
<arg>ozone admin container close "${container}"</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250327 12:39:42.404" level="INFO">Running command 'ozone admin container close "4" 2&gt;&amp;1'.</msg>
<msg timestamp="20250327 12:39:44.035" level="INFO">${rc} = 0</msg>
<msg timestamp="20250327 12:39:44.035" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250327 12:39:42.402" endtime="20250327 12:39:44.035"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250327 12:39:44.036" level="INFO"/>
<status status="PASS" starttime="20250327 12:39:44.035" endtime="20250327 12:39:44.036"/>
</kw>
<msg timestamp="20250327 12:39:44.036" level="INFO">${message} = </msg>
<status status="PASS" starttime="20250327 12:39:42.401" endtime="20250327 12:39:44.036"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${message}' != '${EMPTY}'</arg>
<arg>Should Contain</arg>
<arg>${message}</arg>
<arg>is in closing state</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250327 12:39:44.036" endtime="20250327 12:39:44.037"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin container info "${container}"</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250327 12:39:44.041" level="INFO">Running command 'ozone admin container info "4" 2&gt;&amp;1'.</msg>
<msg timestamp="20250327 12:39:45.725" level="INFO">${rc} = 0</msg>
<msg timestamp="20250327 12:39:45.725" level="INFO">${output} = Container id: 4
Pipeline id: 6d556014-14b2-4396-af0f-0614345b7363
Write PipelineId: 6d556014-14b2-4396-af0f-0614345b7363
Write Pipeline State: OPEN
Container State: CLOSING
Datanodes: [3316868e-e29f-4...</msg>
<status status="PASS" starttime="20250327 12:39:44.038" endtime="20250327 12:39:45.725"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250327 12:39:45.726" level="INFO">Container id: 4
Pipeline id: 6d556014-14b2-4396-af0f-0614345b7363
Write PipelineId: 6d556014-14b2-4396-af0f-0614345b7363
Write Pipeline State: OPEN
Container State: CLOSING
Datanodes: [3316868e-e29f-494a-b2c9-b0a1385ce8a6/ozone-balancer-datanode5-1.ozone-balancer_default,
2ba8717c-3439-4660-9a68-68d6479e95a8/ozone-balancer-datanode3-1.ozone-balancer_default,
04cf7c3a-0639-46ab-b87a-40573d07c572/ozone-balancer-datanode2-1.ozone-balancer_default,
4163b1a2-8fe7-47bc-8b84-a2afb9cf44d2/ozone-balancer-datanode6-1.ozone-balancer_default,
5021472c-5481-42e8-b549-5fb9aef3d453/ozone-balancer-datanode4-1.ozone-balancer_default]
Replicas: [State: OPEN; ReplicaIndex: 1; Origin: 3316868e-e29f-494a-b2c9-b0a1385ce8a6; Location: 3316868e-e29f-494a-b2c9-b0a1385ce8a6/ozone-balancer-datanode5-1.ozone-balancer_default,
State: OPEN; ReplicaIndex: 2; Origin: 2ba8717c-3439-4660-9a68-68d6479e95a8; Location: 2ba8717c-3439-4660-9a68-68d6479e95a8/ozone-balancer-datanode3-1.ozone-balancer_default,
State: OPEN; ReplicaIndex: 3; Origin: 04cf7c3a-0639-46ab-b87a-40573d07c572; Location: 04cf7c3a-0639-46ab-b87a-40573d07c572/ozone-balancer-datanode2-1.ozone-balancer_default,
State: OPEN; ReplicaIndex: 4; Origin: 4163b1a2-8fe7-47bc-8b84-a2afb9cf44d2; Location: 4163b1a2-8fe7-47bc-8b84-a2afb9cf44d2/ozone-balancer-datanode6-1.ozone-balancer_default,
State: OPEN; ReplicaIndex: 5; Origin: 5021472c-5481-42e8-b549-5fb9aef3d453; Location: 5021472c-5481-42e8-b549-5fb9aef3d453/ozone-balancer-datanode4-1.ozone-balancer_default]</msg>
<status status="PASS" starttime="20250327 12:39:45.726" endtime="20250327 12:39:45.726"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250327 12:39:45.727" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250327 12:39:45.726" endtime="20250327 12:39:45.727"/>
</kw>
<status status="PASS" starttime="20250327 12:39:44.038" endtime="20250327 12:39:45.727"/>
</kw>
<msg timestamp="20250327 12:39:45.727" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250327 12:39:44.038" endtime="20250327 12:39:45.727"/>
</kw>
<msg timestamp="20250327 12:39:45.727" level="INFO">${output} = Container id: 4
Pipeline id: 6d556014-14b2-4396-af0f-0614345b7363
Write PipelineId: 6d556014-14b2-4396-af0f-0614345b7363
Write Pipeline State: OPEN
Container State: CLOSING
Datanodes: [3316868e-e29f-4...</msg>
<status status="PASS" starttime="20250327 12:39:44.037" endtime="20250327 12:39:45.727"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>CLOS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250327 12:39:45.727" endtime="20250327 12:39:45.728"/>
</kw>
<status status="PASS" starttime="20250327 12:39:40.618" endtime="20250327 12:39:45.728"/>
</iter>
<iter>
<var name="${INDEX}">3</var>
<kw name="Execute" library="os">
<var>${container}</var>
<arg>ozone admin container list --state OPEN | jq -r '.[] | select(.replicationConfig.data == 3) | .containerID' | head -1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250327 12:39:45.731" level="INFO">Running command 'ozone admin container list --state OPEN | jq -r '.[] | select(.replicationConfig.data == 3) | .containerID' | head -1 2&gt;&amp;1'.</msg>
<msg timestamp="20250327 12:39:47.428" level="INFO">${rc} = 0</msg>
<msg timestamp="20250327 12:39:47.428" level="INFO">${output} = 5</msg>
<status status="PASS" starttime="20250327 12:39:45.729" endtime="20250327 12:39:47.428"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250327 12:39:47.429" level="INFO">5</msg>
<status status="PASS" starttime="20250327 12:39:47.428" endtime="20250327 12:39:47.429"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250327 12:39:47.429" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250327 12:39:47.429" endtime="20250327 12:39:47.430"/>
</kw>
<status status="PASS" starttime="20250327 12:39:45.728" endtime="20250327 12:39:47.430"/>
</kw>
<msg timestamp="20250327 12:39:47.430" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250327 12:39:45.728" endtime="20250327 12:39:47.430"/>
</kw>
<msg timestamp="20250327 12:39:47.430" level="INFO">${container} = 5</msg>
<status status="PASS" starttime="20250327 12:39:45.728" endtime="20250327 12:39:47.430"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>"${container}" == "${EMPTY}"</arg>
<doc>Stops executing the enclosing FOR loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20250327 12:39:47.430" endtime="20250327 12:39:47.431"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${message}</var>
<arg>ozone admin container close "${container}"</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250327 12:39:47.434" level="INFO">Running command 'ozone admin container close "5" 2&gt;&amp;1'.</msg>
<msg timestamp="20250327 12:39:49.084" level="INFO">${rc} = 0</msg>
<msg timestamp="20250327 12:39:49.084" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250327 12:39:47.432" endtime="20250327 12:39:49.084"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250327 12:39:49.085" level="INFO"/>
<status status="PASS" starttime="20250327 12:39:49.084" endtime="20250327 12:39:49.085"/>
</kw>
<msg timestamp="20250327 12:39:49.085" level="INFO">${message} = </msg>
<status status="PASS" starttime="20250327 12:39:47.431" endtime="20250327 12:39:49.085"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${message}' != '${EMPTY}'</arg>
<arg>Should Contain</arg>
<arg>${message}</arg>
<arg>is in closing state</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250327 12:39:49.085" endtime="20250327 12:39:49.086"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin container info "${container}"</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250327 12:39:49.090" level="INFO">Running command 'ozone admin container info "5" 2&gt;&amp;1'.</msg>
<msg timestamp="20250327 12:39:50.802" level="INFO">${rc} = 0</msg>
<msg timestamp="20250327 12:39:50.803" level="INFO">${output} = Container id: 5
Pipeline id: ae325abe-19a0-4f7e-8809-aa5ad99025e1
Write PipelineId: ae325abe-19a0-4f7e-8809-aa5ad99025e1
Write Pipeline State: OPEN
Container State: CLOSING
Datanodes: [04cf7c3a-0639-4...</msg>
<status status="PASS" starttime="20250327 12:39:49.087" endtime="20250327 12:39:50.803"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250327 12:39:50.804" level="INFO">Container id: 5
Pipeline id: ae325abe-19a0-4f7e-8809-aa5ad99025e1
Write PipelineId: ae325abe-19a0-4f7e-8809-aa5ad99025e1
Write Pipeline State: OPEN
Container State: CLOSING
Datanodes: [04cf7c3a-0639-46ab-b87a-40573d07c572/ozone-balancer-datanode2-1.ozone-balancer_default,
2ba8717c-3439-4660-9a68-68d6479e95a8/ozone-balancer-datanode3-1.ozone-balancer_default,
3316868e-e29f-494a-b2c9-b0a1385ce8a6/ozone-balancer-datanode5-1.ozone-balancer_default,
4163b1a2-8fe7-47bc-8b84-a2afb9cf44d2/ozone-balancer-datanode6-1.ozone-balancer_default,
5021472c-5481-42e8-b549-5fb9aef3d453/ozone-balancer-datanode4-1.ozone-balancer_default]
Replicas: [State: OPEN; ReplicaIndex: 1; Origin: 04cf7c3a-0639-46ab-b87a-40573d07c572; Location: 04cf7c3a-0639-46ab-b87a-40573d07c572/ozone-balancer-datanode2-1.ozone-balancer_default,
State: OPEN; ReplicaIndex: 2; Origin: 2ba8717c-3439-4660-9a68-68d6479e95a8; Location: 2ba8717c-3439-4660-9a68-68d6479e95a8/ozone-balancer-datanode3-1.ozone-balancer_default,
State: OPEN; ReplicaIndex: 3; Origin: 3316868e-e29f-494a-b2c9-b0a1385ce8a6; Location: 3316868e-e29f-494a-b2c9-b0a1385ce8a6/ozone-balancer-datanode5-1.ozone-balancer_default,
State: OPEN; ReplicaIndex: 4; Origin: 4163b1a2-8fe7-47bc-8b84-a2afb9cf44d2; Location: 4163b1a2-8fe7-47bc-8b84-a2afb9cf44d2/ozone-balancer-datanode6-1.ozone-balancer_default,
State: OPEN; ReplicaIndex: 5; Origin: 5021472c-5481-42e8-b549-5fb9aef3d453; Location: 5021472c-5481-42e8-b549-5fb9aef3d453/ozone-balancer-datanode4-1.ozone-balancer_default]</msg>
<status status="PASS" starttime="20250327 12:39:50.803" endtime="20250327 12:39:50.804"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250327 12:39:50.804" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250327 12:39:50.804" endtime="20250327 12:39:50.804"/>
</kw>
<status status="PASS" starttime="20250327 12:39:49.087" endtime="20250327 12:39:50.804"/>
</kw>
<msg timestamp="20250327 12:39:50.805" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250327 12:39:49.086" endtime="20250327 12:39:50.805"/>
</kw>
<msg timestamp="20250327 12:39:50.805" level="INFO">${output} = Container id: 5
Pipeline id: ae325abe-19a0-4f7e-8809-aa5ad99025e1
Write PipelineId: ae325abe-19a0-4f7e-8809-aa5ad99025e1
Write Pipeline State: OPEN
Container State: CLOSING
Datanodes: [04cf7c3a-0639-4...</msg>
<status status="PASS" starttime="20250327 12:39:49.086" endtime="20250327 12:39:50.805"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>CLOS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250327 12:39:50.805" endtime="20250327 12:39:50.805"/>
</kw>
<status status="PASS" starttime="20250327 12:39:45.728" endtime="20250327 12:39:50.805"/>
</iter>
<iter>
<var name="${INDEX}">4</var>
<kw name="Execute" library="os">
<var>${container}</var>
<arg>ozone admin container list --state OPEN | jq -r '.[] | select(.replicationConfig.data == 3) | .containerID' | head -1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250327 12:39:50.809" level="INFO">Running command 'ozone admin container list --state OPEN | jq -r '.[] | select(.replicationConfig.data == 3) | .containerID' | head -1 2&gt;&amp;1'.</msg>
<msg timestamp="20250327 12:39:52.564" level="INFO">${rc} = 0</msg>
<msg timestamp="20250327 12:39:52.564" level="INFO">${output} = 2</msg>
<status status="PASS" starttime="20250327 12:39:50.806" endtime="20250327 12:39:52.564"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250327 12:39:52.565" level="INFO">2</msg>
<status status="PASS" starttime="20250327 12:39:52.565" endtime="20250327 12:39:52.565"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250327 12:39:52.566" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250327 12:39:52.565" endtime="20250327 12:39:52.566"/>
</kw>
<status status="PASS" starttime="20250327 12:39:50.806" endtime="20250327 12:39:52.566"/>
</kw>
<msg timestamp="20250327 12:39:52.566" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250327 12:39:50.806" endtime="20250327 12:39:52.566"/>
</kw>
<msg timestamp="20250327 12:39:52.566" level="INFO">${container} = 2</msg>
<status status="PASS" starttime="20250327 12:39:50.805" endtime="20250327 12:39:52.566"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>"${container}" == "${EMPTY}"</arg>
<doc>Stops executing the enclosing FOR loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20250327 12:39:52.566" endtime="20250327 12:39:52.567"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${message}</var>
<arg>ozone admin container close "${container}"</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250327 12:39:52.570" level="INFO">Running command 'ozone admin container close "2" 2&gt;&amp;1'.</msg>
<msg timestamp="20250327 12:39:54.236" level="INFO">${rc} = 0</msg>
<msg timestamp="20250327 12:39:54.236" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250327 12:39:52.568" endtime="20250327 12:39:54.237"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250327 12:39:54.237" level="INFO"/>
<status status="PASS" starttime="20250327 12:39:54.237" endtime="20250327 12:39:54.237"/>
</kw>
<msg timestamp="20250327 12:39:54.238" level="INFO">${message} = </msg>
<status status="PASS" starttime="20250327 12:39:52.567" endtime="20250327 12:39:54.238"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${message}' != '${EMPTY}'</arg>
<arg>Should Contain</arg>
<arg>${message}</arg>
<arg>is in closing state</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250327 12:39:54.238" endtime="20250327 12:39:54.239"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin container info "${container}"</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250327 12:39:54.242" level="INFO">Running command 'ozone admin container info "2" 2&gt;&amp;1'.</msg>
<msg timestamp="20250327 12:39:55.936" level="INFO">${rc} = 0</msg>
<msg timestamp="20250327 12:39:55.936" level="INFO">${output} = Container id: 2
Pipeline id: 8f25c3f0-f2ad-48c1-aeb1-460ad66b6f00
Write PipelineId: 8f25c3f0-f2ad-48c1-aeb1-460ad66b6f00
Write Pipeline State: OPEN
Container State: CLOSING
Datanodes: [3316868e-e29f-4...</msg>
<status status="PASS" starttime="20250327 12:39:54.240" endtime="20250327 12:39:55.936"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250327 12:39:55.937" level="INFO">Container id: 2
Pipeline id: 8f25c3f0-f2ad-48c1-aeb1-460ad66b6f00
Write PipelineId: 8f25c3f0-f2ad-48c1-aeb1-460ad66b6f00
Write Pipeline State: OPEN
Container State: CLOSING
Datanodes: [3316868e-e29f-494a-b2c9-b0a1385ce8a6/ozone-balancer-datanode5-1.ozone-balancer_default,
4163b1a2-8fe7-47bc-8b84-a2afb9cf44d2/ozone-balancer-datanode6-1.ozone-balancer_default,
04cf7c3a-0639-46ab-b87a-40573d07c572/ozone-balancer-datanode2-1.ozone-balancer_default,
2ba8717c-3439-4660-9a68-68d6479e95a8/ozone-balancer-datanode3-1.ozone-balancer_default,
5021472c-5481-42e8-b549-5fb9aef3d453/ozone-balancer-datanode4-1.ozone-balancer_default]
Replicas: [State: OPEN; ReplicaIndex: 1; Origin: 3316868e-e29f-494a-b2c9-b0a1385ce8a6; Location: 3316868e-e29f-494a-b2c9-b0a1385ce8a6/ozone-balancer-datanode5-1.ozone-balancer_default,
State: OPEN; ReplicaIndex: 2; Origin: 4163b1a2-8fe7-47bc-8b84-a2afb9cf44d2; Location: 4163b1a2-8fe7-47bc-8b84-a2afb9cf44d2/ozone-balancer-datanode6-1.ozone-balancer_default,
State: OPEN; ReplicaIndex: 3; Origin: 04cf7c3a-0639-46ab-b87a-40573d07c572; Location: 04cf7c3a-0639-46ab-b87a-40573d07c572/ozone-balancer-datanode2-1.ozone-balancer_default,
State: OPEN; ReplicaIndex: 4; Origin: 2ba8717c-3439-4660-9a68-68d6479e95a8; Location: 2ba8717c-3439-4660-9a68-68d6479e95a8/ozone-balancer-datanode3-1.ozone-balancer_default,
State: OPEN; ReplicaIndex: 5; Origin: 5021472c-5481-42e8-b549-5fb9aef3d453; Location: 5021472c-5481-42e8-b549-5fb9aef3d453/ozone-balancer-datanode4-1.ozone-balancer_default]</msg>
<status status="PASS" starttime="20250327 12:39:55.937" endtime="20250327 12:39:55.937"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250327 12:39:55.938" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250327 12:39:55.937" endtime="20250327 12:39:55.938"/>
</kw>
<status status="PASS" starttime="20250327 12:39:54.239" endtime="20250327 12:39:55.938"/>
</kw>
<msg timestamp="20250327 12:39:55.938" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250327 12:39:54.239" endtime="20250327 12:39:55.938"/>
</kw>
<msg timestamp="20250327 12:39:55.938" level="INFO">${output} = Container id: 2
Pipeline id: 8f25c3f0-f2ad-48c1-aeb1-460ad66b6f00
Write PipelineId: 8f25c3f0-f2ad-48c1-aeb1-460ad66b6f00
Write Pipeline State: OPEN
Container State: CLOSING
Datanodes: [3316868e-e29f-4...</msg>
<status status="PASS" starttime="20250327 12:39:54.239" endtime="20250327 12:39:55.938"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>CLOS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250327 12:39:55.938" endtime="20250327 12:39:55.938"/>
</kw>
<status status="PASS" starttime="20250327 12:39:50.805" endtime="20250327 12:39:55.938"/>
</iter>
<iter>
<var name="${INDEX}">5</var>
<kw name="Execute" library="os">
<var>${container}</var>
<arg>ozone admin container list --state OPEN | jq -r '.[] | select(.replicationConfig.data == 3) | .containerID' | head -1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250327 12:39:55.943" level="INFO">Running command 'ozone admin container list --state OPEN | jq -r '.[] | select(.replicationConfig.data == 3) | .containerID' | head -1 2&gt;&amp;1'.</msg>
<msg timestamp="20250327 12:39:57.574" level="INFO">${rc} = 0</msg>
<msg timestamp="20250327 12:39:57.574" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250327 12:39:55.940" endtime="20250327 12:39:57.574"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250327 12:39:57.575" level="INFO"/>
<status status="PASS" starttime="20250327 12:39:57.575" endtime="20250327 12:39:57.576"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250327 12:39:57.576" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250327 12:39:57.576" endtime="20250327 12:39:57.576"/>
</kw>
<status status="PASS" starttime="20250327 12:39:55.939" endtime="20250327 12:39:57.576"/>
</kw>
<msg timestamp="20250327 12:39:57.576" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250327 12:39:55.939" endtime="20250327 12:39:57.577"/>
</kw>
<msg timestamp="20250327 12:39:57.577" level="INFO">${container} = </msg>
<status status="PASS" starttime="20250327 12:39:55.939" endtime="20250327 12:39:57.577"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>"${container}" == "${EMPTY}"</arg>
<doc>Stops executing the enclosing FOR loop if the ``condition`` is true.</doc>
<msg timestamp="20250327 12:39:57.578" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20250327 12:39:57.577" endtime="20250327 12:39:57.578"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${message}</var>
<arg>ozone admin container close "${container}"</arg>
<status status="NOT RUN" starttime="20250327 12:39:57.578" endtime="20250327 12:39:57.578"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${message}' != '${EMPTY}'</arg>
<arg>Should Contain</arg>
<arg>${message}</arg>
<arg>is in closing state</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250327 12:39:57.578" endtime="20250327 12:39:57.578"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin container info "${container}"</arg>
<status status="NOT RUN" starttime="20250327 12:39:57.579" endtime="20250327 12:39:57.579"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>CLOS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250327 12:39:57.579" endtime="20250327 12:39:57.579"/>
</kw>
<status status="PASS" starttime="20250327 12:39:55.939" endtime="20250327 12:39:57.579"/>
</iter>
<status status="PASS" starttime="20250327 12:39:30.625" endtime="20250327 12:39:57.579"/>
</for>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>4min</arg>
<arg>10sec</arg>
<arg>All container is closed</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="All container is closed">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin container list --state OPEN</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250327 12:39:57.583" level="INFO">Running command 'ozone admin container list --state OPEN 2&gt;&amp;1'.</msg>
<msg timestamp="20250327 12:39:59.212" level="INFO">${rc} = 0</msg>
<msg timestamp="20250327 12:39:59.212" level="INFO">${output} = [ ]</msg>
<status status="PASS" starttime="20250327 12:39:57.581" endtime="20250327 12:39:59.212"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250327 12:39:59.212" level="INFO">[ ]</msg>
<status status="PASS" starttime="20250327 12:39:59.212" endtime="20250327 12:39:59.213"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250327 12:39:59.213" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250327 12:39:59.213" endtime="20250327 12:39:59.213"/>
</kw>
<status status="PASS" starttime="20250327 12:39:57.580" endtime="20250327 12:39:59.213"/>
</kw>
<msg timestamp="20250327 12:39:59.213" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250327 12:39:57.580" endtime="20250327 12:39:59.213"/>
</kw>
<msg timestamp="20250327 12:39:59.213" level="INFO">${output} = [ ]</msg>
<status status="PASS" starttime="20250327 12:39:57.580" endtime="20250327 12:39:59.213"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${output}</arg>
<arg>[ ]</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250327 12:39:59.213" endtime="20250327 12:39:59.214"/>
</kw>
<status status="PASS" starttime="20250327 12:39:57.579" endtime="20250327 12:39:59.214"/>
</kw>
<status status="PASS" starttime="20250327 12:39:57.579" endtime="20250327 12:39:59.214"/>
</kw>
<status status="PASS" starttime="20250327 12:39:30.625" endtime="20250327 12:39:59.214"/>
</kw>
<kw name="Get Datanode Ozone Used Bytes Info">
<var>${datanodeOzoneUsedBytesInfo}</var>
<arg>${uuid}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>export DATANODES=$(ozone admin datanode list --json) &amp;&amp; for datanode in $(echo "$\{DATANODES\}" | jq -r '.[].datanodeDetails.uuid'); do ozone admin datanode usageinfo --uuid=$\{datanode\} --json | jq '{(.[0].datanodeDetails.uuid) : .[0].ozoneUsed}'; done | jq -s add</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250327 12:39:59.217" level="INFO">Running command 'export DATANODES=$(ozone admin datanode list --json) &amp;&amp; for datanode in $(echo "${DATANODES}" | jq -r '.[].datanodeDetails.uuid'); do ozone admin datanode usageinfo --uuid=${datanode} --json | jq '{(.[0].datanodeDetails.uuid) : .[0].ozoneUsed}'; done | jq -s add 2&gt;&amp;1'.</msg>
<msg timestamp="20250327 12:40:11.511" level="INFO">${rc} = 0</msg>
<msg timestamp="20250327 12:40:11.511" level="INFO">${output} = {
  "f37d1744-9fb9-4f38-b748-55d1aa2fde76": 4096,
  "04cf7c3a-0639-46ab-b87a-40573d07c572": 103833600,
  "2ba8717c-3439-4660-9a68-68d6479e95a8": 105930752,
  "3316868e-e29f-494a-b2c9-b0a1385ce8a6": 10...</msg>
<status status="PASS" starttime="20250327 12:39:59.215" endtime="20250327 12:40:11.511"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250327 12:40:11.512" level="INFO">{
  "f37d1744-9fb9-4f38-b748-55d1aa2fde76": 4096,
  "04cf7c3a-0639-46ab-b87a-40573d07c572": 103833600,
  "2ba8717c-3439-4660-9a68-68d6479e95a8": 105930752,
  "3316868e-e29f-494a-b2c9-b0a1385ce8a6": 106979328,
  "4163b1a2-8fe7-47bc-8b84-a2afb9cf44d2": 104882176,
  "5021472c-5481-42e8-b549-5fb9aef3d453": 106979328
}</msg>
<status status="PASS" starttime="20250327 12:40:11.512" endtime="20250327 12:40:11.512"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250327 12:40:11.513" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250327 12:40:11.513" endtime="20250327 12:40:11.513"/>
</kw>
<status status="PASS" starttime="20250327 12:39:59.215" endtime="20250327 12:40:11.513"/>
</kw>
<msg timestamp="20250327 12:40:11.513" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250327 12:39:59.215" endtime="20250327 12:40:11.513"/>
</kw>
<msg timestamp="20250327 12:40:11.513" level="INFO">${output} = {
  "f37d1744-9fb9-4f38-b748-55d1aa2fde76": 4096,
  "04cf7c3a-0639-46ab-b87a-40573d07c572": 103833600,
  "2ba8717c-3439-4660-9a68-68d6479e95a8": 105930752,
  "3316868e-e29f-494a-b2c9-b0a1385ce8a6": 10...</msg>
<status status="PASS" starttime="20250327 12:39:59.214" endtime="20250327 12:40:11.513"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>echo '${output}' | jq '. | to_entries | .[] | select(.key == "${uuid}") | .value'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250327 12:40:11.518" level="INFO">Running command 'echo '{
  "f37d1744-9fb9-4f38-b748-55d1aa2fde76": 4096,
  "04cf7c3a-0639-46ab-b87a-40573d07c572": 103833600,
  "2ba8717c-3439-4660-9a68-68d6479e95a8": 105930752,
  "3316868e-e29f-494a-b2c9-b0a1385ce8a6": 106979328,
  "4163b1a2-8fe7-47bc-8b84-a2afb9cf44d2": 104882176,
  "5021472c-5481-42e8-b549-5fb9aef3d453": 106979328
}' | jq '. | to_entries | .[] | select(.key == "f37d1744-9fb9-4f38-b748-55d1aa2fde76") | .value' 2&gt;&amp;1'.</msg>
<msg timestamp="20250327 12:40:11.523" level="INFO">${rc} = 0</msg>
<msg timestamp="20250327 12:40:11.523" level="INFO">${output} = 4096</msg>
<status status="PASS" starttime="20250327 12:40:11.515" endtime="20250327 12:40:11.523"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250327 12:40:11.524" level="INFO">4096</msg>
<status status="PASS" starttime="20250327 12:40:11.524" endtime="20250327 12:40:11.524"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250327 12:40:11.525" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250327 12:40:11.524" endtime="20250327 12:40:11.525"/>
</kw>
<status status="PASS" starttime="20250327 12:40:11.514" endtime="20250327 12:40:11.525"/>
</kw>
<msg timestamp="20250327 12:40:11.525" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250327 12:40:11.514" endtime="20250327 12:40:11.525"/>
</kw>
<msg timestamp="20250327 12:40:11.525" level="INFO">${result} = 4096</msg>
<status status="PASS" starttime="20250327 12:40:11.513" endtime="20250327 12:40:11.525"/>
</kw>
<msg timestamp="20250327 12:40:11.525" level="INFO">${datanodeOzoneUsedBytesInfo} = 4096</msg>
<status status="PASS" starttime="20250327 12:39:59.214" endtime="20250327 12:40:11.525"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${datanodeOzoneUsedBytesInfo} &lt; ${SIZE}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20250327 12:40:11.526" endtime="20250327 12:40:11.526"/>
</kw>
<kw name="Datanode Recommission">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin datanode recommission ${HOST}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250327 12:40:11.530" level="INFO">Running command 'ozone admin datanode recommission datanode1 2&gt;&amp;1'.</msg>
<msg timestamp="20250327 12:40:13.172" level="INFO">${rc} = 0</msg>
<msg timestamp="20250327 12:40:13.172" level="INFO">${output} = Started recommissioning datanode(s):
datanode1</msg>
<status status="PASS" starttime="20250327 12:40:11.527" endtime="20250327 12:40:13.172"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250327 12:40:13.173" level="INFO">Started recommissioning datanode(s):
datanode1</msg>
<status status="PASS" starttime="20250327 12:40:13.173" endtime="20250327 12:40:13.173"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250327 12:40:13.174" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250327 12:40:13.173" endtime="20250327 12:40:13.174"/>
</kw>
<status status="PASS" starttime="20250327 12:40:11.527" endtime="20250327 12:40:13.174"/>
</kw>
<msg timestamp="20250327 12:40:13.174" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250327 12:40:11.527" endtime="20250327 12:40:13.174"/>
</kw>
<msg timestamp="20250327 12:40:13.174" level="INFO">${result} = Started recommissioning datanode(s):
datanode1</msg>
<status status="PASS" starttime="20250327 12:40:11.526" endtime="20250327 12:40:13.174"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Started recommissioning datanode</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250327 12:40:13.174" endtime="20250327 12:40:13.175"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>1min</arg>
<arg>10sec</arg>
<arg>Datanode Recommission is Finished</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Datanode Recommission is Finished">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin datanode list | grep "Operational State:*"</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250327 12:40:13.178" level="INFO">Running command 'ozone admin datanode list | grep "Operational State:*" 2&gt;&amp;1'.</msg>
<msg timestamp="20250327 12:40:14.879" level="INFO">${rc} = 0</msg>
<msg timestamp="20250327 12:40:14.879" level="INFO">${output} = Operational State: ENTERING_MAINTENANCE
Operational State: IN_SERVICE
Operational State: IN_SERVICE
Operational State: IN_SERVICE
Operational State: IN_SERVICE
Operational State: IN_SERVICE</msg>
<status status="PASS" starttime="20250327 12:40:13.176" endtime="20250327 12:40:14.879"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250327 12:40:14.880" level="INFO">Operational State: ENTERING_MAINTENANCE
Operational State: IN_SERVICE
Operational State: IN_SERVICE
Operational State: IN_SERVICE
Operational State: IN_SERVICE
Operational State: IN_SERVICE</msg>
<status status="PASS" starttime="20250327 12:40:14.880" endtime="20250327 12:40:14.880"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250327 12:40:14.881" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250327 12:40:14.880" endtime="20250327 12:40:14.881"/>
</kw>
<status status="PASS" starttime="20250327 12:40:13.176" endtime="20250327 12:40:14.881"/>
</kw>
<msg timestamp="20250327 12:40:14.881" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250327 12:40:13.176" endtime="20250327 12:40:14.881"/>
</kw>
<msg timestamp="20250327 12:40:14.881" level="INFO">${result} = Operational State: ENTERING_MAINTENANCE
Operational State: IN_SERVICE
Operational State: IN_SERVICE
Operational State: IN_SERVICE
Operational State: IN_SERVICE
Operational State: IN_SERVICE</msg>
<status status="PASS" starttime="20250327 12:40:13.175" endtime="20250327 12:40:14.881"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ENTERING_MAINTENANCE</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<msg timestamp="20250327 12:40:14.882" level="FAIL">'Operational State: ENTERING_MAINTENANCE
Operational State: IN_SERVICE
Operational State: IN_SERVICE
Operational State: IN_SERVICE
Operational State: IN_SERVICE
Operational State: IN_SERVICE' contains 'ENTERING_MAINTENANCE'</msg>
<status status="FAIL" starttime="20250327 12:40:14.881" endtime="20250327 12:40:14.882"/>
</kw>
<status status="FAIL" starttime="20250327 12:40:13.175" endtime="20250327 12:40:14.882"/>
</kw>
<kw name="Datanode Recommission is Finished">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin datanode list | grep "Operational State:*"</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250327 12:40:24.887" level="INFO">Running command 'ozone admin datanode list | grep "Operational State:*" 2&gt;&amp;1'.</msg>
<msg timestamp="20250327 12:40:26.617" level="INFO">${rc} = 0</msg>
<msg timestamp="20250327 12:40:26.618" level="INFO">${output} = Operational State: IN_SERVICE
Operational State: IN_SERVICE
Operational State: IN_SERVICE
Operational State: IN_SERVICE
Operational State: IN_SERVICE
Operational State: IN_SERVICE</msg>
<status status="PASS" starttime="20250327 12:40:24.884" endtime="20250327 12:40:26.618"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250327 12:40:26.619" level="INFO">Operational State: IN_SERVICE
Operational State: IN_SERVICE
Operational State: IN_SERVICE
Operational State: IN_SERVICE
Operational State: IN_SERVICE
Operational State: IN_SERVICE</msg>
<status status="PASS" starttime="20250327 12:40:26.618" endtime="20250327 12:40:26.619"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250327 12:40:26.619" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250327 12:40:26.619" endtime="20250327 12:40:26.619"/>
</kw>
<status status="PASS" starttime="20250327 12:40:24.884" endtime="20250327 12:40:26.619"/>
</kw>
<msg timestamp="20250327 12:40:26.620" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250327 12:40:24.883" endtime="20250327 12:40:26.620"/>
</kw>
<msg timestamp="20250327 12:40:26.620" level="INFO">${result} = Operational State: IN_SERVICE
Operational State: IN_SERVICE
Operational State: IN_SERVICE
Operational State: IN_SERVICE
Operational State: IN_SERVICE
Operational State: IN_SERVICE</msg>
<status status="PASS" starttime="20250327 12:40:24.883" endtime="20250327 12:40:26.620"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ENTERING_MAINTENANCE</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250327 12:40:26.620" endtime="20250327 12:40:26.620"/>
</kw>
<status status="PASS" starttime="20250327 12:40:24.882" endtime="20250327 12:40:26.620"/>
</kw>
<status status="PASS" starttime="20250327 12:40:13.175" endtime="20250327 12:40:26.620"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>300000ms</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250327 12:45:26.621" level="INFO">Slept 5 minutes</msg>
<status status="PASS" starttime="20250327 12:40:26.620" endtime="20250327 12:45:26.621"/>
</kw>
<status status="PASS" starttime="20250327 12:40:11.526" endtime="20250327 12:45:26.621"/>
</kw>
<kw name="Run Container Balancer">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin containerbalancer start -t 0.1 -d 100 -i 3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250327 12:45:26.626" level="INFO">Running command 'ozone admin containerbalancer start -t 0.1 -d 100 -i 3 2&gt;&amp;1'.</msg>
<msg timestamp="20250327 12:45:28.263" level="INFO">${rc} = 0</msg>
<msg timestamp="20250327 12:45:28.263" level="INFO">${output} = Container Balancer started successfully.</msg>
<status status="PASS" starttime="20250327 12:45:26.623" endtime="20250327 12:45:28.263"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250327 12:45:28.264" level="INFO">Container Balancer started successfully.</msg>
<status status="PASS" starttime="20250327 12:45:28.263" endtime="20250327 12:45:28.264"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250327 12:45:28.264" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250327 12:45:28.264" endtime="20250327 12:45:28.264"/>
</kw>
<status status="PASS" starttime="20250327 12:45:26.623" endtime="20250327 12:45:28.265"/>
</kw>
<msg timestamp="20250327 12:45:28.265" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250327 12:45:26.622" endtime="20250327 12:45:28.265"/>
</kw>
<msg timestamp="20250327 12:45:28.265" level="INFO">${result} = Container Balancer started successfully.</msg>
<status status="PASS" starttime="20250327 12:45:26.622" endtime="20250327 12:45:28.265"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Container Balancer started successfully.</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250327 12:45:28.265" endtime="20250327 12:45:28.265"/>
</kw>
<status status="PASS" starttime="20250327 12:45:26.621" endtime="20250327 12:45:28.265"/>
</kw>
<kw name="Run Balancer Status">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin containerbalancer status</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250327 12:45:28.269" level="INFO">Running command 'ozone admin containerbalancer status 2&gt;&amp;1'.</msg>
<msg timestamp="20250327 12:45:29.853" level="INFO">${rc} = 0</msg>
<msg timestamp="20250327 12:45:29.853" level="INFO">${output} = ContainerBalancer is Running.</msg>
<status status="PASS" starttime="20250327 12:45:28.267" endtime="20250327 12:45:29.853"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250327 12:45:29.854" level="INFO">ContainerBalancer is Running.</msg>
<status status="PASS" starttime="20250327 12:45:29.854" endtime="20250327 12:45:29.854"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250327 12:45:29.855" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250327 12:45:29.854" endtime="20250327 12:45:29.855"/>
</kw>
<status status="PASS" starttime="20250327 12:45:28.266" endtime="20250327 12:45:29.855"/>
</kw>
<msg timestamp="20250327 12:45:29.855" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250327 12:45:28.266" endtime="20250327 12:45:29.855"/>
</kw>
<msg timestamp="20250327 12:45:29.855" level="INFO">${result} = ContainerBalancer is Running.</msg>
<status status="PASS" starttime="20250327 12:45:28.266" endtime="20250327 12:45:29.855"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContainerBalancer is Running.</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250327 12:45:29.855" endtime="20250327 12:45:29.856"/>
</kw>
<status status="PASS" starttime="20250327 12:45:28.266" endtime="20250327 12:45:29.856"/>
</kw>
<kw name="Run Balancer Verbose Status">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin containerbalancer status --verbose</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250327 12:45:29.860" level="INFO">Running command 'ozone admin containerbalancer status --verbose 2&gt;&amp;1'.</msg>
<msg timestamp="20250327 12:45:31.454" level="INFO">${rc} = 0</msg>
<msg timestamp="20250327 12:45:31.454" level="INFO">${output} = ContainerBalancer is Running.
Started at: 2025-03-27 12:45:28
Balancing duration: 3s

Container Balancer Configuration values:
Key                                                Value
Threshold       ...</msg>
<status status="PASS" starttime="20250327 12:45:29.857" endtime="20250327 12:45:31.454"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250327 12:45:31.455" level="INFO">ContainerBalancer is Running.
Started at: 2025-03-27 12:45:28
Balancing duration: 3s

Container Balancer Configuration values:
Key                                                Value
Threshold                                          0.1
Max Datanodes to Involve per Iteration(percent)    100
Max Size to Move per Iteration                     0GB
Max Size Entering Target per Iteration             26GB
Max Size Leaving Source per Iteration              26GB
Number of Iterations                               3
Time Limit for Single Container's Movement         65min
Time Limit for Single Container's Replication      50min
Interval between each Iteration                    0min
Whether to Enable Network Topology                 false
Whether to Trigger Refresh Datanode Usage Info     false
Container IDs to Exclude from Balancing            None
Datanodes Specified to be Balanced                 None
Datanodes Excluded from Balancing                  None

Current iteration info:
Key                                                Value
Iteration number                                   1
Iteration duration                                 3s
Iteration result                                   -
Size scheduled to move                             102 MB
Moved data size                                    0 B
Scheduled to move containers                       5
Already moved containers                           0
Failed to move containers                          0
Failed to move containers by timeout               0
Entered data to nodes                              
f37d1744-9fb9-4f38-b748-55d1aa2fde76 &lt;- 102 MB
Exited data from nodes                             
5021472c-5481-42e8-b549-5fb9aef3d453 -&gt; 20 MB
2ba8717c-3439-4660-9a68-68d6479e95a8 -&gt; 20 MB
4163b1a2-8fe7-47bc-8b84-a2afb9cf44d2 -&gt; 20 MB
3316868e-e29f-494a-b2c9-b0a1385ce8a6 -&gt; 28 MB
04cf7c3a-0639-46ab-b87a-40573d07c572 -&gt; 14 MB
</msg>
<status status="PASS" starttime="20250327 12:45:31.454" endtime="20250327 12:45:31.455"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250327 12:45:31.455" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250327 12:45:31.455" endtime="20250327 12:45:31.455"/>
</kw>
<status status="PASS" starttime="20250327 12:45:29.857" endtime="20250327 12:45:31.455"/>
</kw>
<msg timestamp="20250327 12:45:31.455" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250327 12:45:29.856" endtime="20250327 12:45:31.456"/>
</kw>
<msg timestamp="20250327 12:45:31.456" level="INFO">${result} = ContainerBalancer is Running.
Started at: 2025-03-27 12:45:28
Balancing duration: 3s

Container Balancer Configuration values:
Key                                                Value
Threshold       ...</msg>
<status status="PASS" starttime="20250327 12:45:29.856" endtime="20250327 12:45:31.456"/>
</kw>
<kw name="Verify Balancer Iteration">
<arg>${result}</arg>
<arg>1</arg>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>ContainerBalancer is Running.</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250327 12:45:31.456" endtime="20250327 12:45:31.457"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Started at:</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250327 12:45:31.457" endtime="20250327 12:45:31.457"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Container Balancer Configuration values:</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250327 12:45:31.457" endtime="20250327 12:45:31.457"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Iteration number ${number}</arg>
<arg>collapse_spaces=True</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250327 12:45:31.457" endtime="20250327 12:45:31.458"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Scheduled to move containers</arg>
<arg>collapse_spaces=True</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250327 12:45:31.458" endtime="20250327 12:45:31.458"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Balancing duration:</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250327 12:45:31.458" endtime="20250327 12:45:31.459"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Iteration duration</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250327 12:45:31.459" endtime="20250327 12:45:31.459"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Current iteration info:</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250327 12:45:31.459" endtime="20250327 12:45:31.459"/>
</kw>
<status status="PASS" starttime="20250327 12:45:31.456" endtime="20250327 12:45:31.460"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Iteration result -</arg>
<arg>collapse_spaces=True</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250327 12:45:31.460" endtime="20250327 12:45:31.460"/>
</kw>
<status status="PASS" starttime="20250327 12:45:29.856" endtime="20250327 12:45:31.460"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>40sec</arg>
<arg>5sec</arg>
<arg>Run Balancer Verbose History Status</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Run Balancer Verbose History Status">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin containerbalancer status --verbose --history</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250327 12:45:31.464" level="INFO">Running command 'ozone admin containerbalancer status --verbose --history 2&gt;&amp;1'.</msg>
<msg timestamp="20250327 12:45:33.462" level="INFO">${rc} = 0</msg>
<msg timestamp="20250327 12:45:33.462" level="INFO">${output} = ContainerBalancer is Running.
Started at: 2025-03-27 12:45:28
Balancing duration: 5s

Container Balancer Configuration values:
Key                                                Value
Threshold       ...</msg>
<status status="PASS" starttime="20250327 12:45:31.461" endtime="20250327 12:45:33.462"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250327 12:45:33.463" level="INFO">ContainerBalancer is Running.
Started at: 2025-03-27 12:45:28
Balancing duration: 5s

Container Balancer Configuration values:
Key                                                Value
Threshold                                          0.1
Max Datanodes to Involve per Iteration(percent)    100
Max Size to Move per Iteration                     0GB
Max Size Entering Target per Iteration             26GB
Max Size Leaving Source per Iteration              26GB
Number of Iterations                               3
Time Limit for Single Container's Movement         65min
Time Limit for Single Container's Replication      50min
Interval between each Iteration                    0min
Whether to Enable Network Topology                 false
Whether to Trigger Refresh Datanode Usage Info     false
Container IDs to Exclude from Balancing            None
Datanodes Specified to be Balanced                 None
Datanodes Excluded from Balancing                  None

Current iteration info:
Key                                                Value
Iteration number                                   1
Iteration duration                                 5s
Iteration result                                   -
Size scheduled to move                             102 MB
Moved data size                                    0 B
Scheduled to move containers                       5
Already moved containers                           0
Failed to move containers                          0
Failed to move containers by timeout               0
Entered data to nodes                              
f37d1744-9fb9-4f38-b748-55d1aa2fde76 &lt;- 102 MB
Exited data from nodes                             
5021472c-5481-42e8-b549-5fb9aef3d453 -&gt; 20 MB
2ba8717c-3439-4660-9a68-68d6479e95a8 -&gt; 20 MB
4163b1a2-8fe7-47bc-8b84-a2afb9cf44d2 -&gt; 20 MB
3316868e-e29f-494a-b2c9-b0a1385ce8a6 -&gt; 28 MB
04cf7c3a-0639-46ab-b87a-40573d07c572 -&gt; 14 MB

Iteration history list:
</msg>
<status status="PASS" starttime="20250327 12:45:33.462" endtime="20250327 12:45:33.463"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250327 12:45:33.463" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250327 12:45:33.463" endtime="20250327 12:45:33.463"/>
</kw>
<status status="PASS" starttime="20250327 12:45:31.461" endtime="20250327 12:45:33.464"/>
</kw>
<msg timestamp="20250327 12:45:33.464" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250327 12:45:31.461" endtime="20250327 12:45:33.464"/>
</kw>
<msg timestamp="20250327 12:45:33.464" level="INFO">${result} = ContainerBalancer is Running.
Started at: 2025-03-27 12:45:28
Balancing duration: 5s

Container Balancer Configuration values:
Key                                                Value
Threshold       ...</msg>
<status status="PASS" starttime="20250327 12:45:31.461" endtime="20250327 12:45:33.464"/>
</kw>
<kw name="Verify Balancer Iteration">
<arg>${result}</arg>
<arg>1</arg>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>ContainerBalancer is Running.</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250327 12:45:33.464" endtime="20250327 12:45:33.465"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Started at:</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250327 12:45:33.465" endtime="20250327 12:45:33.465"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Container Balancer Configuration values:</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250327 12:45:33.465" endtime="20250327 12:45:33.465"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Iteration number ${number}</arg>
<arg>collapse_spaces=True</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250327 12:45:33.466" endtime="20250327 12:45:33.466"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Scheduled to move containers</arg>
<arg>collapse_spaces=True</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250327 12:45:33.466" endtime="20250327 12:45:33.466"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Balancing duration:</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250327 12:45:33.466" endtime="20250327 12:45:33.467"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Iteration duration</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250327 12:45:33.467" endtime="20250327 12:45:33.467"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Current iteration info:</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250327 12:45:33.467" endtime="20250327 12:45:33.467"/>
</kw>
<status status="PASS" starttime="20250327 12:45:33.464" endtime="20250327 12:45:33.467"/>
</kw>
<kw name="Verify Balancer Iteration History">
<arg>${result}</arg>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Iteration history list:</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250327 12:45:33.468" endtime="20250327 12:45:33.468"/>
</kw>
<kw name="Should Contain X Times" library="BuiltIn">
<arg>${output}</arg>
<arg>Size scheduled to move</arg>
<arg>1</arg>
<arg>collapse_spaces=True</arg>
<doc>Fails if ``container`` does not contain ``item`` ``count`` times.</doc>
<msg timestamp="20250327 12:45:33.468" level="INFO">Item found from container 1 time.</msg>
<status status="PASS" starttime="20250327 12:45:33.468" endtime="20250327 12:45:33.468"/>
</kw>
<kw name="Should Contain X Times" library="BuiltIn">
<arg>${output}</arg>
<arg>Moved data size</arg>
<arg>1</arg>
<arg>collapse_spaces=True</arg>
<doc>Fails if ``container`` does not contain ``item`` ``count`` times.</doc>
<msg timestamp="20250327 12:45:33.469" level="INFO">Item found from container 1 time.</msg>
<status status="PASS" starttime="20250327 12:45:33.469" endtime="20250327 12:45:33.469"/>
</kw>
<kw name="Should Contain X Times" library="BuiltIn">
<arg>${output}</arg>
<arg>Scheduled to move containers</arg>
<arg>1</arg>
<arg>collapse_spaces=True</arg>
<doc>Fails if ``container`` does not contain ``item`` ``count`` times.</doc>
<msg timestamp="20250327 12:45:33.470" level="INFO">Item found from container 1 time.</msg>
<status status="PASS" starttime="20250327 12:45:33.469" endtime="20250327 12:45:33.470"/>
</kw>
<kw name="Should Contain X Times" library="BuiltIn">
<arg>${output}</arg>
<arg>Already moved containers</arg>
<arg>1</arg>
<arg>collapse_spaces=True</arg>
<doc>Fails if ``container`` does not contain ``item`` ``count`` times.</doc>
<msg timestamp="20250327 12:45:33.470" level="INFO">Item found from container 1 time.</msg>
<status status="PASS" starttime="20250327 12:45:33.470" endtime="20250327 12:45:33.470"/>
</kw>
<kw name="Should Contain X Times" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed to move containers 0</arg>
<arg>1</arg>
<arg>collapse_spaces=True</arg>
<doc>Fails if ``container`` does not contain ``item`` ``count`` times.</doc>
<msg timestamp="20250327 12:45:33.471" level="INFO">Item found from container 1 time.</msg>
<status status="PASS" starttime="20250327 12:45:33.470" endtime="20250327 12:45:33.471"/>
</kw>
<kw name="Should Contain X Times" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed to move containers by timeout 0</arg>
<arg>1</arg>
<arg>collapse_spaces=True</arg>
<doc>Fails if ``container`` does not contain ``item`` ``count`` times.</doc>
<msg timestamp="20250327 12:45:33.471" level="INFO">Item found from container 1 time.</msg>
<status status="PASS" starttime="20250327 12:45:33.471" endtime="20250327 12:45:33.471"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Iteration result ITERATION_COMPLETED</arg>
<arg>collapse_spaces=True</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20250327 12:45:33.472" level="FAIL">'ContainerBalancer is Running.
Started at: 2025-03-27 12:45:28
Balancing duration: 5s

Container Balancer Configuration values:
Key                                                Value
Threshold                                          0.1
Max Datanodes to Involve per Iteration(percent)    100
Max Size to Move per Iteration                     0GB
Max Size Entering Target per Iteration             26GB
Max Size Leaving Source per Iteration              26GB
Number of Iterations                               3
Time Limit for Single Container's Movement         65min
Time Limit for Single Container's Replication      50min
Interval between each Iteration                    0min
Whether to Enable Network Topology                 false
Whether to Trigger Refresh Datanode Usage Info     false
Container IDs to Exclude from Balancing            None
Datanodes Specified to be Balanced                 None
Datanodes Excluded from Balancing                  None

Current iteration info:
Key                                                Value
Iteration number                                   1
Iteration duration                                 5s
Iteration result                                   -
Size scheduled to move                             102 MB
Moved data size                                    0 B
Scheduled to move containers                       5
Already moved containers                           0
Failed to move containers                          0
Failed to move containers by timeout               0
Entered data to nodes                              
f37d1744-9fb9-4f38-b748-55d1aa2fde76 &lt;- 102 MB
Exited data from nodes                             
5021472c-5481-42e8-b549-5fb9aef3d453 -&gt; 20 MB
2ba8717c-3439-4660-9a68-68d6479e95a8 -&gt; 20 MB
4163b1a2-8fe7-47bc-8b84-a2afb9cf44d2 -&gt; 20 MB
3316868e-e29f-494a-b2c9-b0a1385ce8a6 -&gt; 28 MB
04cf7c3a-0639-46ab-b87a-40573d07c572 -&gt; 14 MB

Iteration history list:
' does not contain 'Iteration result ITERATION_COMPLETED'</msg>
<status status="FAIL" starttime="20250327 12:45:33.471" endtime="20250327 12:45:33.472"/>
</kw>
<status status="FAIL" starttime="20250327 12:45:33.467" endtime="20250327 12:45:33.472"/>
</kw>
<status status="FAIL" starttime="20250327 12:45:31.460" endtime="20250327 12:45:33.472"/>
</kw>
<kw name="Run Balancer Verbose History Status">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin containerbalancer status --verbose --history</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250327 12:45:38.477" level="INFO">Running command 'ozone admin containerbalancer status --verbose --history 2&gt;&amp;1'.</msg>
<msg timestamp="20250327 12:45:40.026" level="INFO">${rc} = 0</msg>
<msg timestamp="20250327 12:45:40.026" level="INFO">${output} = ContainerBalancer is Running.
Started at: 2025-03-27 12:45:28
Balancing duration: 12s

Container Balancer Configuration values:
Key                                                Value
Threshold      ...</msg>
<status status="PASS" starttime="20250327 12:45:38.474" endtime="20250327 12:45:40.026"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250327 12:45:40.027" level="INFO">ContainerBalancer is Running.
Started at: 2025-03-27 12:45:28
Balancing duration: 12s

Container Balancer Configuration values:
Key                                                Value
Threshold                                          0.1
Max Datanodes to Involve per Iteration(percent)    100
Max Size to Move per Iteration                     0GB
Max Size Entering Target per Iteration             26GB
Max Size Leaving Source per Iteration              26GB
Number of Iterations                               3
Time Limit for Single Container's Movement         65min
Time Limit for Single Container's Replication      50min
Interval between each Iteration                    0min
Whether to Enable Network Topology                 false
Whether to Trigger Refresh Datanode Usage Info     false
Container IDs to Exclude from Balancing            None
Datanodes Specified to be Balanced                 None
Datanodes Excluded from Balancing                  None

Current iteration info:
Key                                                Value
Iteration number                                   1
Iteration duration                                 11s
Iteration result                                   -
Size scheduled to move                             102 MB
Moved data size                                    0 B
Scheduled to move containers                       5
Already moved containers                           0
Failed to move containers                          0
Failed to move containers by timeout               0
Entered data to nodes                              
f37d1744-9fb9-4f38-b748-55d1aa2fde76 &lt;- 102 MB
Exited data from nodes                             
5021472c-5481-42e8-b549-5fb9aef3d453 -&gt; 20 MB
2ba8717c-3439-4660-9a68-68d6479e95a8 -&gt; 20 MB
4163b1a2-8fe7-47bc-8b84-a2afb9cf44d2 -&gt; 20 MB
3316868e-e29f-494a-b2c9-b0a1385ce8a6 -&gt; 28 MB
04cf7c3a-0639-46ab-b87a-40573d07c572 -&gt; 14 MB

Iteration history list:
</msg>
<status status="PASS" starttime="20250327 12:45:40.026" endtime="20250327 12:45:40.027"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250327 12:45:40.027" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250327 12:45:40.027" endtime="20250327 12:45:40.027"/>
</kw>
<status status="PASS" starttime="20250327 12:45:38.474" endtime="20250327 12:45:40.028"/>
</kw>
<msg timestamp="20250327 12:45:40.028" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250327 12:45:38.473" endtime="20250327 12:45:40.028"/>
</kw>
<msg timestamp="20250327 12:45:40.028" level="INFO">${result} = ContainerBalancer is Running.
Started at: 2025-03-27 12:45:28
Balancing duration: 12s

Container Balancer Configuration values:
Key                                                Value
Threshold      ...</msg>
<status status="PASS" starttime="20250327 12:45:38.473" endtime="20250327 12:45:40.028"/>
</kw>
<kw name="Verify Balancer Iteration">
<arg>${result}</arg>
<arg>1</arg>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>ContainerBalancer is Running.</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250327 12:45:40.029" endtime="20250327 12:45:40.029"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Started at:</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250327 12:45:40.029" endtime="20250327 12:45:40.029"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Container Balancer Configuration values:</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250327 12:45:40.029" endtime="20250327 12:45:40.030"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Iteration number ${number}</arg>
<arg>collapse_spaces=True</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250327 12:45:40.030" endtime="20250327 12:45:40.030"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Scheduled to move containers</arg>
<arg>collapse_spaces=True</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250327 12:45:40.030" endtime="20250327 12:45:40.031"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Balancing duration:</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250327 12:45:40.031" endtime="20250327 12:45:40.031"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Iteration duration</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250327 12:45:40.031" endtime="20250327 12:45:40.031"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Current iteration info:</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250327 12:45:40.031" endtime="20250327 12:45:40.031"/>
</kw>
<status status="PASS" starttime="20250327 12:45:40.028" endtime="20250327 12:45:40.032"/>
</kw>
<kw name="Verify Balancer Iteration History">
<arg>${result}</arg>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Iteration history list:</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250327 12:45:40.032" endtime="20250327 12:45:40.032"/>
</kw>
<kw name="Should Contain X Times" library="BuiltIn">
<arg>${output}</arg>
<arg>Size scheduled to move</arg>
<arg>1</arg>
<arg>collapse_spaces=True</arg>
<doc>Fails if ``container`` does not contain ``item`` ``count`` times.</doc>
<msg timestamp="20250327 12:45:40.033" level="INFO">Item found from container 1 time.</msg>
<status status="PASS" starttime="20250327 12:45:40.032" endtime="20250327 12:45:40.033"/>
</kw>
<kw name="Should Contain X Times" library="BuiltIn">
<arg>${output}</arg>
<arg>Moved data size</arg>
<arg>1</arg>
<arg>collapse_spaces=True</arg>
<doc>Fails if ``container`` does not contain ``item`` ``count`` times.</doc>
<msg timestamp="20250327 12:45:40.033" level="INFO">Item found from container 1 time.</msg>
<status status="PASS" starttime="20250327 12:45:40.033" endtime="20250327 12:45:40.033"/>
</kw>
<kw name="Should Contain X Times" library="BuiltIn">
<arg>${output}</arg>
<arg>Scheduled to move containers</arg>
<arg>1</arg>
<arg>collapse_spaces=True</arg>
<doc>Fails if ``container`` does not contain ``item`` ``count`` times.</doc>
<msg timestamp="20250327 12:45:40.034" level="INFO">Item found from container 1 time.</msg>
<status status="PASS" starttime="20250327 12:45:40.033" endtime="20250327 12:45:40.034"/>
</kw>
<kw name="Should Contain X Times" library="BuiltIn">
<arg>${output}</arg>
<arg>Already moved containers</arg>
<arg>1</arg>
<arg>collapse_spaces=True</arg>
<doc>Fails if ``container`` does not contain ``item`` ``count`` times.</doc>
<msg timestamp="20250327 12:45:40.034" level="INFO">Item found from container 1 time.</msg>
<status status="PASS" starttime="20250327 12:45:40.034" endtime="20250327 12:45:40.034"/>
</kw>
<kw name="Should Contain X Times" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed to move containers 0</arg>
<arg>1</arg>
<arg>collapse_spaces=True</arg>
<doc>Fails if ``container`` does not contain ``item`` ``count`` times.</doc>
<msg timestamp="20250327 12:45:40.035" level="INFO">Item found from container 1 time.</msg>
<status status="PASS" starttime="20250327 12:45:40.034" endtime="20250327 12:45:40.035"/>
</kw>
<kw name="Should Contain X Times" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed to move containers by timeout 0</arg>
<arg>1</arg>
<arg>collapse_spaces=True</arg>
<doc>Fails if ``container`` does not contain ``item`` ``count`` times.</doc>
<msg timestamp="20250327 12:45:40.035" level="INFO">Item found from container 1 time.</msg>
<status status="PASS" starttime="20250327 12:45:40.035" endtime="20250327 12:45:40.035"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Iteration result ITERATION_COMPLETED</arg>
<arg>collapse_spaces=True</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20250327 12:45:40.036" level="FAIL">'ContainerBalancer is Running.
Started at: 2025-03-27 12:45:28
Balancing duration: 12s

Container Balancer Configuration values:
Key                                                Value
Threshold                                          0.1
Max Datanodes to Involve per Iteration(percent)    100
Max Size to Move per Iteration                     0GB
Max Size Entering Target per Iteration             26GB
Max Size Leaving Source per Iteration              26GB
Number of Iterations                               3
Time Limit for Single Container's Movement         65min
Time Limit for Single Container's Replication      50min
Interval between each Iteration                    0min
Whether to Enable Network Topology                 false
Whether to Trigger Refresh Datanode Usage Info     false
Container IDs to Exclude from Balancing            None
Datanodes Specified to be Balanced                 None
Datanodes Excluded from Balancing                  None

Current iteration info:
Key                                                Value
Iteration number                                   1
Iteration duration                                 11s
Iteration result                                   -
Size scheduled to move                             102 MB
Moved data size                                    0 B
Scheduled to move containers                       5
Already moved containers                           0
Failed to move containers                          0
Failed to move containers by timeout               0
Entered data to nodes                              
f37d1744-9fb9-4f38-b748-55d1aa2fde76 &lt;- 102 MB
Exited data from nodes                             
5021472c-5481-42e8-b549-5fb9aef3d453 -&gt; 20 MB
2ba8717c-3439-4660-9a68-68d6479e95a8 -&gt; 20 MB
4163b1a2-8fe7-47bc-8b84-a2afb9cf44d2 -&gt; 20 MB
3316868e-e29f-494a-b2c9-b0a1385ce8a6 -&gt; 28 MB
04cf7c3a-0639-46ab-b87a-40573d07c572 -&gt; 14 MB

Iteration history list:
' does not contain 'Iteration result ITERATION_COMPLETED'</msg>
<status status="FAIL" starttime="20250327 12:45:40.035" endtime="20250327 12:45:40.036"/>
</kw>
<status status="FAIL" starttime="20250327 12:45:40.032" endtime="20250327 12:45:40.036"/>
</kw>
<status status="FAIL" starttime="20250327 12:45:38.473" endtime="20250327 12:45:40.036"/>
</kw>
<kw name="Run Balancer Verbose History Status">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin containerbalancer status --verbose --history</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250327 12:45:45.042" level="INFO">Running command 'ozone admin containerbalancer status --verbose --history 2&gt;&amp;1'.</msg>
<msg timestamp="20250327 12:45:47.815" level="INFO">${rc} = 0</msg>
<msg timestamp="20250327 12:45:47.815" level="INFO">${output} = ContainerBalancer is Running.
Started at: 2025-03-27 12:45:28
Balancing duration: 19s

Container Balancer Configuration values:
Key                                                Value
Threshold      ...</msg>
<status status="PASS" starttime="20250327 12:45:45.039" endtime="20250327 12:45:47.815"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250327 12:45:47.816" level="INFO">ContainerBalancer is Running.
Started at: 2025-03-27 12:45:28
Balancing duration: 19s

Container Balancer Configuration values:
Key                                                Value
Threshold                                          0.1
Max Datanodes to Involve per Iteration(percent)    100
Max Size to Move per Iteration                     0GB
Max Size Entering Target per Iteration             26GB
Max Size Leaving Source per Iteration              26GB
Number of Iterations                               3
Time Limit for Single Container's Movement         65min
Time Limit for Single Container's Replication      50min
Interval between each Iteration                    0min
Whether to Enable Network Topology                 false
Whether to Trigger Refresh Datanode Usage Info     false
Container IDs to Exclude from Balancing            None
Datanodes Specified to be Balanced                 None
Datanodes Excluded from Balancing                  None

Current iteration info:
Key                                                Value
Iteration number                                   1
Iteration duration                                 19s
Iteration result                                   -
Size scheduled to move                             102 MB
Moved data size                                    0 B
Scheduled to move containers                       5
Already moved containers                           0
Failed to move containers                          0
Failed to move containers by timeout               0
Entered data to nodes                              
f37d1744-9fb9-4f38-b748-55d1aa2fde76 &lt;- 102 MB
Exited data from nodes                             
5021472c-5481-42e8-b549-5fb9aef3d453 -&gt; 20 MB
2ba8717c-3439-4660-9a68-68d6479e95a8 -&gt; 20 MB
4163b1a2-8fe7-47bc-8b84-a2afb9cf44d2 -&gt; 20 MB
3316868e-e29f-494a-b2c9-b0a1385ce8a6 -&gt; 28 MB
04cf7c3a-0639-46ab-b87a-40573d07c572 -&gt; 14 MB

Iteration history list:
</msg>
<status status="PASS" starttime="20250327 12:45:47.815" endtime="20250327 12:45:47.816"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250327 12:45:47.816" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250327 12:45:47.816" endtime="20250327 12:45:47.816"/>
</kw>
<status status="PASS" starttime="20250327 12:45:45.038" endtime="20250327 12:45:47.816"/>
</kw>
<msg timestamp="20250327 12:45:47.817" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250327 12:45:45.038" endtime="20250327 12:45:47.817"/>
</kw>
<msg timestamp="20250327 12:45:47.817" level="INFO">${result} = ContainerBalancer is Running.
Started at: 2025-03-27 12:45:28
Balancing duration: 19s

Container Balancer Configuration values:
Key                                                Value
Threshold      ...</msg>
<status status="PASS" starttime="20250327 12:45:45.038" endtime="20250327 12:45:47.817"/>
</kw>
<kw name="Verify Balancer Iteration">
<arg>${result}</arg>
<arg>1</arg>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>ContainerBalancer is Running.</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250327 12:45:47.817" endtime="20250327 12:45:47.818"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Started at:</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250327 12:45:47.818" endtime="20250327 12:45:47.818"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Container Balancer Configuration values:</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250327 12:45:47.818" endtime="20250327 12:45:47.818"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Iteration number ${number}</arg>
<arg>collapse_spaces=True</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250327 12:45:47.818" endtime="20250327 12:45:47.819"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Scheduled to move containers</arg>
<arg>collapse_spaces=True</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250327 12:45:47.819" endtime="20250327 12:45:47.819"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Balancing duration:</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250327 12:45:47.819" endtime="20250327 12:45:47.819"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Iteration duration</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250327 12:45:47.819" endtime="20250327 12:45:47.820"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Current iteration info:</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250327 12:45:47.820" endtime="20250327 12:45:47.820"/>
</kw>
<status status="PASS" starttime="20250327 12:45:47.817" endtime="20250327 12:45:47.820"/>
</kw>
<kw name="Verify Balancer Iteration History">
<arg>${result}</arg>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Iteration history list:</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250327 12:45:47.820" endtime="20250327 12:45:47.821"/>
</kw>
<kw name="Should Contain X Times" library="BuiltIn">
<arg>${output}</arg>
<arg>Size scheduled to move</arg>
<arg>1</arg>
<arg>collapse_spaces=True</arg>
<doc>Fails if ``container`` does not contain ``item`` ``count`` times.</doc>
<msg timestamp="20250327 12:45:47.821" level="INFO">Item found from container 1 time.</msg>
<status status="PASS" starttime="20250327 12:45:47.821" endtime="20250327 12:45:47.821"/>
</kw>
<kw name="Should Contain X Times" library="BuiltIn">
<arg>${output}</arg>
<arg>Moved data size</arg>
<arg>1</arg>
<arg>collapse_spaces=True</arg>
<doc>Fails if ``container`` does not contain ``item`` ``count`` times.</doc>
<msg timestamp="20250327 12:45:47.822" level="INFO">Item found from container 1 time.</msg>
<status status="PASS" starttime="20250327 12:45:47.821" endtime="20250327 12:45:47.822"/>
</kw>
<kw name="Should Contain X Times" library="BuiltIn">
<arg>${output}</arg>
<arg>Scheduled to move containers</arg>
<arg>1</arg>
<arg>collapse_spaces=True</arg>
<doc>Fails if ``container`` does not contain ``item`` ``count`` times.</doc>
<msg timestamp="20250327 12:45:47.822" level="INFO">Item found from container 1 time.</msg>
<status status="PASS" starttime="20250327 12:45:47.822" endtime="20250327 12:45:47.822"/>
</kw>
<kw name="Should Contain X Times" library="BuiltIn">
<arg>${output}</arg>
<arg>Already moved containers</arg>
<arg>1</arg>
<arg>collapse_spaces=True</arg>
<doc>Fails if ``container`` does not contain ``item`` ``count`` times.</doc>
<msg timestamp="20250327 12:45:47.822" level="INFO">Item found from container 1 time.</msg>
<status status="PASS" starttime="20250327 12:45:47.822" endtime="20250327 12:45:47.823"/>
</kw>
<kw name="Should Contain X Times" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed to move containers 0</arg>
<arg>1</arg>
<arg>collapse_spaces=True</arg>
<doc>Fails if ``container`` does not contain ``item`` ``count`` times.</doc>
<msg timestamp="20250327 12:45:47.823" level="INFO">Item found from container 1 time.</msg>
<status status="PASS" starttime="20250327 12:45:47.823" endtime="20250327 12:45:47.823"/>
</kw>
<kw name="Should Contain X Times" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed to move containers by timeout 0</arg>
<arg>1</arg>
<arg>collapse_spaces=True</arg>
<doc>Fails if ``container`` does not contain ``item`` ``count`` times.</doc>
<msg timestamp="20250327 12:45:47.823" level="INFO">Item found from container 1 time.</msg>
<status status="PASS" starttime="20250327 12:45:47.823" endtime="20250327 12:45:47.823"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Iteration result ITERATION_COMPLETED</arg>
<arg>collapse_spaces=True</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20250327 12:45:47.824" level="FAIL">'ContainerBalancer is Running.
Started at: 2025-03-27 12:45:28
Balancing duration: 19s

Container Balancer Configuration values:
Key                                                Value
Threshold                                          0.1
Max Datanodes to Involve per Iteration(percent)    100
Max Size to Move per Iteration                     0GB
Max Size Entering Target per Iteration             26GB
Max Size Leaving Source per Iteration              26GB
Number of Iterations                               3
Time Limit for Single Container's Movement         65min
Time Limit for Single Container's Replication      50min
Interval between each Iteration                    0min
Whether to Enable Network Topology                 false
Whether to Trigger Refresh Datanode Usage Info     false
Container IDs to Exclude from Balancing            None
Datanodes Specified to be Balanced                 None
Datanodes Excluded from Balancing                  None

Current iteration info:
Key                                                Value
Iteration number                                   1
Iteration duration                                 19s
Iteration result                                   -
Size scheduled to move                             102 MB
Moved data size                                    0 B
Scheduled to move containers                       5
Already moved containers                           0
Failed to move containers                          0
Failed to move containers by timeout               0
Entered data to nodes                              
f37d1744-9fb9-4f38-b748-55d1aa2fde76 &lt;- 102 MB
Exited data from nodes                             
5021472c-5481-42e8-b549-5fb9aef3d453 -&gt; 20 MB
2ba8717c-3439-4660-9a68-68d6479e95a8 -&gt; 20 MB
4163b1a2-8fe7-47bc-8b84-a2afb9cf44d2 -&gt; 20 MB
3316868e-e29f-494a-b2c9-b0a1385ce8a6 -&gt; 28 MB
04cf7c3a-0639-46ab-b87a-40573d07c572 -&gt; 14 MB

Iteration history list:
' does not contain 'Iteration result ITERATION_COMPLETED'</msg>
<status status="FAIL" starttime="20250327 12:45:47.823" endtime="20250327 12:45:47.824"/>
</kw>
<status status="FAIL" starttime="20250327 12:45:47.820" endtime="20250327 12:45:47.824"/>
</kw>
<status status="FAIL" starttime="20250327 12:45:45.037" endtime="20250327 12:45:47.824"/>
</kw>
<kw name="Run Balancer Verbose History Status">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin containerbalancer status --verbose --history</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250327 12:45:52.829" level="INFO">Running command 'ozone admin containerbalancer status --verbose --history 2&gt;&amp;1'.</msg>
<msg timestamp="20250327 12:45:54.483" level="INFO">${rc} = 0</msg>
<msg timestamp="20250327 12:45:54.483" level="INFO">${output} = ContainerBalancer is Running.
Started at: 2025-03-27 12:45:28
Balancing duration: 26s

Container Balancer Configuration values:
Key                                                Value
Threshold      ...</msg>
<status status="PASS" starttime="20250327 12:45:52.826" endtime="20250327 12:45:54.483"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250327 12:45:54.484" level="INFO">ContainerBalancer is Running.
Started at: 2025-03-27 12:45:28
Balancing duration: 26s

Container Balancer Configuration values:
Key                                                Value
Threshold                                          0.1
Max Datanodes to Involve per Iteration(percent)    100
Max Size to Move per Iteration                     0GB
Max Size Entering Target per Iteration             26GB
Max Size Leaving Source per Iteration              26GB
Number of Iterations                               3
Time Limit for Single Container's Movement         65min
Time Limit for Single Container's Replication      50min
Interval between each Iteration                    0min
Whether to Enable Network Topology                 false
Whether to Trigger Refresh Datanode Usage Info     false
Container IDs to Exclude from Balancing            None
Datanodes Specified to be Balanced                 None
Datanodes Excluded from Balancing                  None

Current iteration info:
Key                                                Value
Iteration number                                   1
Iteration duration                                 26s
Iteration result                                   -
Size scheduled to move                             102 MB
Moved data size                                    20 MB
Scheduled to move containers                       5
Already moved containers                           1
Failed to move containers                          0
Failed to move containers by timeout               0
Entered data to nodes                              
f37d1744-9fb9-4f38-b748-55d1aa2fde76 &lt;- 102 MB
Exited data from nodes                             
5021472c-5481-42e8-b549-5fb9aef3d453 -&gt; 20 MB
2ba8717c-3439-4660-9a68-68d6479e95a8 -&gt; 20 MB
4163b1a2-8fe7-47bc-8b84-a2afb9cf44d2 -&gt; 20 MB
3316868e-e29f-494a-b2c9-b0a1385ce8a6 -&gt; 28 MB
04cf7c3a-0639-46ab-b87a-40573d07c572 -&gt; 14 MB

Iteration history list:
</msg>
<status status="PASS" starttime="20250327 12:45:54.483" endtime="20250327 12:45:54.484"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250327 12:45:54.484" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250327 12:45:54.484" endtime="20250327 12:45:54.485"/>
</kw>
<status status="PASS" starttime="20250327 12:45:52.826" endtime="20250327 12:45:54.485"/>
</kw>
<msg timestamp="20250327 12:45:54.485" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250327 12:45:52.826" endtime="20250327 12:45:54.485"/>
</kw>
<msg timestamp="20250327 12:45:54.485" level="INFO">${result} = ContainerBalancer is Running.
Started at: 2025-03-27 12:45:28
Balancing duration: 26s

Container Balancer Configuration values:
Key                                                Value
Threshold      ...</msg>
<status status="PASS" starttime="20250327 12:45:52.825" endtime="20250327 12:45:54.485"/>
</kw>
<kw name="Verify Balancer Iteration">
<arg>${result}</arg>
<arg>1</arg>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>ContainerBalancer is Running.</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250327 12:45:54.485" endtime="20250327 12:45:54.486"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Started at:</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250327 12:45:54.486" endtime="20250327 12:45:54.486"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Container Balancer Configuration values:</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250327 12:45:54.486" endtime="20250327 12:45:54.486"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Iteration number ${number}</arg>
<arg>collapse_spaces=True</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250327 12:45:54.486" endtime="20250327 12:45:54.487"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Scheduled to move containers</arg>
<arg>collapse_spaces=True</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250327 12:45:54.487" endtime="20250327 12:45:54.487"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Balancing duration:</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250327 12:45:54.487" endtime="20250327 12:45:54.488"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Iteration duration</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250327 12:45:54.488" endtime="20250327 12:45:54.488"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Current iteration info:</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250327 12:45:54.488" endtime="20250327 12:45:54.488"/>
</kw>
<status status="PASS" starttime="20250327 12:45:54.485" endtime="20250327 12:45:54.488"/>
</kw>
<kw name="Verify Balancer Iteration History">
<arg>${result}</arg>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Iteration history list:</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250327 12:45:54.489" endtime="20250327 12:45:54.489"/>
</kw>
<kw name="Should Contain X Times" library="BuiltIn">
<arg>${output}</arg>
<arg>Size scheduled to move</arg>
<arg>1</arg>
<arg>collapse_spaces=True</arg>
<doc>Fails if ``container`` does not contain ``item`` ``count`` times.</doc>
<msg timestamp="20250327 12:45:54.489" level="INFO">Item found from container 1 time.</msg>
<status status="PASS" starttime="20250327 12:45:54.489" endtime="20250327 12:45:54.489"/>
</kw>
<kw name="Should Contain X Times" library="BuiltIn">
<arg>${output}</arg>
<arg>Moved data size</arg>
<arg>1</arg>
<arg>collapse_spaces=True</arg>
<doc>Fails if ``container`` does not contain ``item`` ``count`` times.</doc>
<msg timestamp="20250327 12:45:54.490" level="INFO">Item found from container 1 time.</msg>
<status status="PASS" starttime="20250327 12:45:54.489" endtime="20250327 12:45:54.490"/>
</kw>
<kw name="Should Contain X Times" library="BuiltIn">
<arg>${output}</arg>
<arg>Scheduled to move containers</arg>
<arg>1</arg>
<arg>collapse_spaces=True</arg>
<doc>Fails if ``container`` does not contain ``item`` ``count`` times.</doc>
<msg timestamp="20250327 12:45:54.490" level="INFO">Item found from container 1 time.</msg>
<status status="PASS" starttime="20250327 12:45:54.490" endtime="20250327 12:45:54.490"/>
</kw>
<kw name="Should Contain X Times" library="BuiltIn">
<arg>${output}</arg>
<arg>Already moved containers</arg>
<arg>1</arg>
<arg>collapse_spaces=True</arg>
<doc>Fails if ``container`` does not contain ``item`` ``count`` times.</doc>
<msg timestamp="20250327 12:45:54.491" level="INFO">Item found from container 1 time.</msg>
<status status="PASS" starttime="20250327 12:45:54.490" endtime="20250327 12:45:54.491"/>
</kw>
<kw name="Should Contain X Times" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed to move containers 0</arg>
<arg>1</arg>
<arg>collapse_spaces=True</arg>
<doc>Fails if ``container`` does not contain ``item`` ``count`` times.</doc>
<msg timestamp="20250327 12:45:54.491" level="INFO">Item found from container 1 time.</msg>
<status status="PASS" starttime="20250327 12:45:54.491" endtime="20250327 12:45:54.491"/>
</kw>
<kw name="Should Contain X Times" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed to move containers by timeout 0</arg>
<arg>1</arg>
<arg>collapse_spaces=True</arg>
<doc>Fails if ``container`` does not contain ``item`` ``count`` times.</doc>
<msg timestamp="20250327 12:45:54.492" level="INFO">Item found from container 1 time.</msg>
<status status="PASS" starttime="20250327 12:45:54.491" endtime="20250327 12:45:54.492"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Iteration result ITERATION_COMPLETED</arg>
<arg>collapse_spaces=True</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20250327 12:45:54.492" level="FAIL">'ContainerBalancer is Running.
Started at: 2025-03-27 12:45:28
Balancing duration: 26s

Container Balancer Configuration values:
Key                                                Value
Threshold                                          0.1
Max Datanodes to Involve per Iteration(percent)    100
Max Size to Move per Iteration                     0GB
Max Size Entering Target per Iteration             26GB
Max Size Leaving Source per Iteration              26GB
Number of Iterations                               3
Time Limit for Single Container's Movement         65min
Time Limit for Single Container's Replication      50min
Interval between each Iteration                    0min
Whether to Enable Network Topology                 false
Whether to Trigger Refresh Datanode Usage Info     false
Container IDs to Exclude from Balancing            None
Datanodes Specified to be Balanced                 None
Datanodes Excluded from Balancing                  None

Current iteration info:
Key                                                Value
Iteration number                                   1
Iteration duration                                 26s
Iteration result                                   -
Size scheduled to move                             102 MB
Moved data size                                    20 MB
Scheduled to move containers                       5
Already moved containers                           1
Failed to move containers                          0
Failed to move containers by timeout               0
Entered data to nodes                              
f37d1744-9fb9-4f38-b748-55d1aa2fde76 &lt;- 102 MB
Exited data from nodes                             
5021472c-5481-42e8-b549-5fb9aef3d453 -&gt; 20 MB
2ba8717c-3439-4660-9a68-68d6479e95a8 -&gt; 20 MB
4163b1a2-8fe7-47bc-8b84-a2afb9cf44d2 -&gt; 20 MB
3316868e-e29f-494a-b2c9-b0a1385ce8a6 -&gt; 28 MB
04cf7c3a-0639-46ab-b87a-40573d07c572 -&gt; 14 MB

Iteration history list:
' does not contain 'Iteration result ITERATION_COMPLETED'</msg>
<status status="FAIL" starttime="20250327 12:45:54.492" endtime="20250327 12:45:54.492"/>
</kw>
<status status="FAIL" starttime="20250327 12:45:54.488" endtime="20250327 12:45:54.492"/>
</kw>
<status status="FAIL" starttime="20250327 12:45:52.825" endtime="20250327 12:45:54.493"/>
</kw>
<kw name="Run Balancer Verbose History Status">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin containerbalancer status --verbose --history</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250327 12:45:59.497" level="INFO">Running command 'ozone admin containerbalancer status --verbose --history 2&gt;&amp;1'.</msg>
<msg timestamp="20250327 12:46:01.099" level="INFO">${rc} = 0</msg>
<msg timestamp="20250327 12:46:01.099" level="INFO">${output} = ContainerBalancer is Running.
Started at: 2025-03-27 12:45:28
Balancing duration: 33s

Container Balancer Configuration values:
Key                                                Value
Threshold      ...</msg>
<status status="PASS" starttime="20250327 12:45:59.494" endtime="20250327 12:46:01.099"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250327 12:46:01.101" level="INFO">ContainerBalancer is Running.
Started at: 2025-03-27 12:45:28
Balancing duration: 33s

Container Balancer Configuration values:
Key                                                Value
Threshold                                          0.1
Max Datanodes to Involve per Iteration(percent)    100
Max Size to Move per Iteration                     0GB
Max Size Entering Target per Iteration             26GB
Max Size Leaving Source per Iteration              26GB
Number of Iterations                               3
Time Limit for Single Container's Movement         65min
Time Limit for Single Container's Replication      50min
Interval between each Iteration                    0min
Whether to Enable Network Topology                 false
Whether to Trigger Refresh Datanode Usage Info     false
Container IDs to Exclude from Balancing            None
Datanodes Specified to be Balanced                 None
Datanodes Excluded from Balancing                  None

Current iteration info:
Key                                                Value
Iteration number                                   1
Iteration duration                                 33s
Iteration result                                   -
Size scheduled to move                             102 MB
Moved data size                                    20 MB
Scheduled to move containers                       5
Already moved containers                           1
Failed to move containers                          0
Failed to move containers by timeout               0
Entered data to nodes                              
f37d1744-9fb9-4f38-b748-55d1aa2fde76 &lt;- 102 MB
Exited data from nodes                             
5021472c-5481-42e8-b549-5fb9aef3d453 -&gt; 20 MB
2ba8717c-3439-4660-9a68-68d6479e95a8 -&gt; 20 MB
4163b1a2-8fe7-47bc-8b84-a2afb9cf44d2 -&gt; 20 MB
3316868e-e29f-494a-b2c9-b0a1385ce8a6 -&gt; 28 MB
04cf7c3a-0639-46ab-b87a-40573d07c572 -&gt; 14 MB

Iteration history list:
</msg>
<status status="PASS" starttime="20250327 12:46:01.100" endtime="20250327 12:46:01.101"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250327 12:46:01.101" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250327 12:46:01.101" endtime="20250327 12:46:01.101"/>
</kw>
<status status="PASS" starttime="20250327 12:45:59.494" endtime="20250327 12:46:01.101"/>
</kw>
<msg timestamp="20250327 12:46:01.102" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250327 12:45:59.494" endtime="20250327 12:46:01.102"/>
</kw>
<msg timestamp="20250327 12:46:01.102" level="INFO">${result} = ContainerBalancer is Running.
Started at: 2025-03-27 12:45:28
Balancing duration: 33s

Container Balancer Configuration values:
Key                                                Value
Threshold      ...</msg>
<status status="PASS" starttime="20250327 12:45:59.494" endtime="20250327 12:46:01.102"/>
</kw>
<kw name="Verify Balancer Iteration">
<arg>${result}</arg>
<arg>1</arg>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>ContainerBalancer is Running.</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250327 12:46:01.102" endtime="20250327 12:46:01.103"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Started at:</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250327 12:46:01.103" endtime="20250327 12:46:01.103"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Container Balancer Configuration values:</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250327 12:46:01.103" endtime="20250327 12:46:01.103"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Iteration number ${number}</arg>
<arg>collapse_spaces=True</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250327 12:46:01.103" endtime="20250327 12:46:01.104"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Scheduled to move containers</arg>
<arg>collapse_spaces=True</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250327 12:46:01.104" endtime="20250327 12:46:01.104"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Balancing duration:</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250327 12:46:01.104" endtime="20250327 12:46:01.105"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Iteration duration</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250327 12:46:01.105" endtime="20250327 12:46:01.105"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Current iteration info:</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250327 12:46:01.105" endtime="20250327 12:46:01.105"/>
</kw>
<status status="PASS" starttime="20250327 12:46:01.102" endtime="20250327 12:46:01.105"/>
</kw>
<kw name="Verify Balancer Iteration History">
<arg>${result}</arg>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Iteration history list:</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250327 12:46:01.106" endtime="20250327 12:46:01.106"/>
</kw>
<kw name="Should Contain X Times" library="BuiltIn">
<arg>${output}</arg>
<arg>Size scheduled to move</arg>
<arg>1</arg>
<arg>collapse_spaces=True</arg>
<doc>Fails if ``container`` does not contain ``item`` ``count`` times.</doc>
<msg timestamp="20250327 12:46:01.106" level="INFO">Item found from container 1 time.</msg>
<status status="PASS" starttime="20250327 12:46:01.106" endtime="20250327 12:46:01.106"/>
</kw>
<kw name="Should Contain X Times" library="BuiltIn">
<arg>${output}</arg>
<arg>Moved data size</arg>
<arg>1</arg>
<arg>collapse_spaces=True</arg>
<doc>Fails if ``container`` does not contain ``item`` ``count`` times.</doc>
<msg timestamp="20250327 12:46:01.107" level="INFO">Item found from container 1 time.</msg>
<status status="PASS" starttime="20250327 12:46:01.106" endtime="20250327 12:46:01.107"/>
</kw>
<kw name="Should Contain X Times" library="BuiltIn">
<arg>${output}</arg>
<arg>Scheduled to move containers</arg>
<arg>1</arg>
<arg>collapse_spaces=True</arg>
<doc>Fails if ``container`` does not contain ``item`` ``count`` times.</doc>
<msg timestamp="20250327 12:46:01.107" level="INFO">Item found from container 1 time.</msg>
<status status="PASS" starttime="20250327 12:46:01.107" endtime="20250327 12:46:01.107"/>
</kw>
<kw name="Should Contain X Times" library="BuiltIn">
<arg>${output}</arg>
<arg>Already moved containers</arg>
<arg>1</arg>
<arg>collapse_spaces=True</arg>
<doc>Fails if ``container`` does not contain ``item`` ``count`` times.</doc>
<msg timestamp="20250327 12:46:01.108" level="INFO">Item found from container 1 time.</msg>
<status status="PASS" starttime="20250327 12:46:01.107" endtime="20250327 12:46:01.108"/>
</kw>
<kw name="Should Contain X Times" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed to move containers 0</arg>
<arg>1</arg>
<arg>collapse_spaces=True</arg>
<doc>Fails if ``container`` does not contain ``item`` ``count`` times.</doc>
<msg timestamp="20250327 12:46:01.108" level="INFO">Item found from container 1 time.</msg>
<status status="PASS" starttime="20250327 12:46:01.108" endtime="20250327 12:46:01.108"/>
</kw>
<kw name="Should Contain X Times" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed to move containers by timeout 0</arg>
<arg>1</arg>
<arg>collapse_spaces=True</arg>
<doc>Fails if ``container`` does not contain ``item`` ``count`` times.</doc>
<msg timestamp="20250327 12:46:01.109" level="INFO">Item found from container 1 time.</msg>
<status status="PASS" starttime="20250327 12:46:01.108" endtime="20250327 12:46:01.109"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Iteration result ITERATION_COMPLETED</arg>
<arg>collapse_spaces=True</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20250327 12:46:01.109" level="FAIL">'ContainerBalancer is Running.
Started at: 2025-03-27 12:45:28
Balancing duration: 33s

Container Balancer Configuration values:
Key                                                Value
Threshold                                          0.1
Max Datanodes to Involve per Iteration(percent)    100
Max Size to Move per Iteration                     0GB
Max Size Entering Target per Iteration             26GB
Max Size Leaving Source per Iteration              26GB
Number of Iterations                               3
Time Limit for Single Container's Movement         65min
Time Limit for Single Container's Replication      50min
Interval between each Iteration                    0min
Whether to Enable Network Topology                 false
Whether to Trigger Refresh Datanode Usage Info     false
Container IDs to Exclude from Balancing            None
Datanodes Specified to be Balanced                 None
Datanodes Excluded from Balancing                  None

Current iteration info:
Key                                                Value
Iteration number                                   1
Iteration duration                                 33s
Iteration result                                   -
Size scheduled to move                             102 MB
Moved data size                                    20 MB
Scheduled to move containers                       5
Already moved containers                           1
Failed to move containers                          0
Failed to move containers by timeout               0
Entered data to nodes                              
f37d1744-9fb9-4f38-b748-55d1aa2fde76 &lt;- 102 MB
Exited data from nodes                             
5021472c-5481-42e8-b549-5fb9aef3d453 -&gt; 20 MB
2ba8717c-3439-4660-9a68-68d6479e95a8 -&gt; 20 MB
4163b1a2-8fe7-47bc-8b84-a2afb9cf44d2 -&gt; 20 MB
3316868e-e29f-494a-b2c9-b0a1385ce8a6 -&gt; 28 MB
04cf7c3a-0639-46ab-b87a-40573d07c572 -&gt; 14 MB

Iteration history list:
' does not contain 'Iteration result ITERATION_COMPLETED'</msg>
<status status="FAIL" starttime="20250327 12:46:01.109" endtime="20250327 12:46:01.110"/>
</kw>
<status status="FAIL" starttime="20250327 12:46:01.105" endtime="20250327 12:46:01.110"/>
</kw>
<status status="FAIL" starttime="20250327 12:45:59.493" endtime="20250327 12:46:01.110"/>
</kw>
<kw name="Run Balancer Verbose History Status">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin containerbalancer status --verbose --history</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250327 12:46:06.115" level="INFO">Running command 'ozone admin containerbalancer status --verbose --history 2&gt;&amp;1'.</msg>
<msg timestamp="20250327 12:46:07.810" level="INFO">${rc} = 0</msg>
<msg timestamp="20250327 12:46:07.811" level="INFO">${output} = ContainerBalancer is Running.
Started at: 2025-03-27 12:45:28
Balancing duration: 39s

Container Balancer Configuration values:
Key                                                Value
Threshold      ...</msg>
<status status="PASS" starttime="20250327 12:46:06.112" endtime="20250327 12:46:07.811"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250327 12:46:07.812" level="INFO">ContainerBalancer is Running.
Started at: 2025-03-27 12:45:28
Balancing duration: 39s

Container Balancer Configuration values:
Key                                                Value
Threshold                                          0.1
Max Datanodes to Involve per Iteration(percent)    100
Max Size to Move per Iteration                     0GB
Max Size Entering Target per Iteration             26GB
Max Size Leaving Source per Iteration              26GB
Number of Iterations                               3
Time Limit for Single Container's Movement         65min
Time Limit for Single Container's Replication      50min
Interval between each Iteration                    0min
Whether to Enable Network Topology                 false
Whether to Trigger Refresh Datanode Usage Info     false
Container IDs to Exclude from Balancing            None
Datanodes Specified to be Balanced                 None
Datanodes Excluded from Balancing                  None

Current iteration info:
Key                                                Value
Iteration number                                   1
Iteration duration                                 39s
Iteration result                                   -
Size scheduled to move                             102 MB
Moved data size                                    82 MB
Scheduled to move containers                       5
Already moved containers                           4
Failed to move containers                          0
Failed to move containers by timeout               0
Entered data to nodes                              
f37d1744-9fb9-4f38-b748-55d1aa2fde76 &lt;- 102 MB
Exited data from nodes                             
5021472c-5481-42e8-b549-5fb9aef3d453 -&gt; 20 MB
2ba8717c-3439-4660-9a68-68d6479e95a8 -&gt; 20 MB
4163b1a2-8fe7-47bc-8b84-a2afb9cf44d2 -&gt; 20 MB
3316868e-e29f-494a-b2c9-b0a1385ce8a6 -&gt; 28 MB
04cf7c3a-0639-46ab-b87a-40573d07c572 -&gt; 14 MB

Iteration history list:
</msg>
<status status="PASS" starttime="20250327 12:46:07.811" endtime="20250327 12:46:07.812"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250327 12:46:07.812" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250327 12:46:07.812" endtime="20250327 12:46:07.812"/>
</kw>
<status status="PASS" starttime="20250327 12:46:06.111" endtime="20250327 12:46:07.813"/>
</kw>
<msg timestamp="20250327 12:46:07.813" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250327 12:46:06.111" endtime="20250327 12:46:07.813"/>
</kw>
<msg timestamp="20250327 12:46:07.813" level="INFO">${result} = ContainerBalancer is Running.
Started at: 2025-03-27 12:45:28
Balancing duration: 39s

Container Balancer Configuration values:
Key                                                Value
Threshold      ...</msg>
<status status="PASS" starttime="20250327 12:46:06.111" endtime="20250327 12:46:07.813"/>
</kw>
<kw name="Verify Balancer Iteration">
<arg>${result}</arg>
<arg>1</arg>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>ContainerBalancer is Running.</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250327 12:46:07.813" endtime="20250327 12:46:07.814"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Started at:</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250327 12:46:07.814" endtime="20250327 12:46:07.814"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Container Balancer Configuration values:</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250327 12:46:07.814" endtime="20250327 12:46:07.815"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Iteration number ${number}</arg>
<arg>collapse_spaces=True</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250327 12:46:07.815" endtime="20250327 12:46:07.815"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Scheduled to move containers</arg>
<arg>collapse_spaces=True</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250327 12:46:07.815" endtime="20250327 12:46:07.815"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Balancing duration:</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250327 12:46:07.816" endtime="20250327 12:46:07.816"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Iteration duration</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250327 12:46:07.816" endtime="20250327 12:46:07.816"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Current iteration info:</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250327 12:46:07.816" endtime="20250327 12:46:07.816"/>
</kw>
<status status="PASS" starttime="20250327 12:46:07.813" endtime="20250327 12:46:07.816"/>
</kw>
<kw name="Verify Balancer Iteration History">
<arg>${result}</arg>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Iteration history list:</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250327 12:46:07.817" endtime="20250327 12:46:07.817"/>
</kw>
<kw name="Should Contain X Times" library="BuiltIn">
<arg>${output}</arg>
<arg>Size scheduled to move</arg>
<arg>1</arg>
<arg>collapse_spaces=True</arg>
<doc>Fails if ``container`` does not contain ``item`` ``count`` times.</doc>
<msg timestamp="20250327 12:46:07.817" level="INFO">Item found from container 1 time.</msg>
<status status="PASS" starttime="20250327 12:46:07.817" endtime="20250327 12:46:07.817"/>
</kw>
<kw name="Should Contain X Times" library="BuiltIn">
<arg>${output}</arg>
<arg>Moved data size</arg>
<arg>1</arg>
<arg>collapse_spaces=True</arg>
<doc>Fails if ``container`` does not contain ``item`` ``count`` times.</doc>
<msg timestamp="20250327 12:46:07.818" level="INFO">Item found from container 1 time.</msg>
<status status="PASS" starttime="20250327 12:46:07.818" endtime="20250327 12:46:07.818"/>
</kw>
<kw name="Should Contain X Times" library="BuiltIn">
<arg>${output}</arg>
<arg>Scheduled to move containers</arg>
<arg>1</arg>
<arg>collapse_spaces=True</arg>
<doc>Fails if ``container`` does not contain ``item`` ``count`` times.</doc>
<msg timestamp="20250327 12:46:07.818" level="INFO">Item found from container 1 time.</msg>
<status status="PASS" starttime="20250327 12:46:07.818" endtime="20250327 12:46:07.818"/>
</kw>
<kw name="Should Contain X Times" library="BuiltIn">
<arg>${output}</arg>
<arg>Already moved containers</arg>
<arg>1</arg>
<arg>collapse_spaces=True</arg>
<doc>Fails if ``container`` does not contain ``item`` ``count`` times.</doc>
<msg timestamp="20250327 12:46:07.819" level="INFO">Item found from container 1 time.</msg>
<status status="PASS" starttime="20250327 12:46:07.819" endtime="20250327 12:46:07.819"/>
</kw>
<kw name="Should Contain X Times" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed to move containers 0</arg>
<arg>1</arg>
<arg>collapse_spaces=True</arg>
<doc>Fails if ``container`` does not contain ``item`` ``count`` times.</doc>
<msg timestamp="20250327 12:46:07.819" level="INFO">Item found from container 1 time.</msg>
<status status="PASS" starttime="20250327 12:46:07.819" endtime="20250327 12:46:07.820"/>
</kw>
<kw name="Should Contain X Times" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed to move containers by timeout 0</arg>
<arg>1</arg>
<arg>collapse_spaces=True</arg>
<doc>Fails if ``container`` does not contain ``item`` ``count`` times.</doc>
<msg timestamp="20250327 12:46:07.820" level="INFO">Item found from container 1 time.</msg>
<status status="PASS" starttime="20250327 12:46:07.820" endtime="20250327 12:46:07.820"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Iteration result ITERATION_COMPLETED</arg>
<arg>collapse_spaces=True</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20250327 12:46:07.821" level="FAIL">'ContainerBalancer is Running.
Started at: 2025-03-27 12:45:28
Balancing duration: 39s

Container Balancer Configuration values:
Key                                                Value
Threshold                                          0.1
Max Datanodes to Involve per Iteration(percent)    100
Max Size to Move per Iteration                     0GB
Max Size Entering Target per Iteration             26GB
Max Size Leaving Source per Iteration              26GB
Number of Iterations                               3
Time Limit for Single Container's Movement         65min
Time Limit for Single Container's Replication      50min
Interval between each Iteration                    0min
Whether to Enable Network Topology                 false
Whether to Trigger Refresh Datanode Usage Info     false
Container IDs to Exclude from Balancing            None
Datanodes Specified to be Balanced                 None
Datanodes Excluded from Balancing                  None

Current iteration info:
Key                                                Value
Iteration number                                   1
Iteration duration                                 39s
Iteration result                                   -
Size scheduled to move                             102 MB
Moved data size                                    82 MB
Scheduled to move containers                       5
Already moved containers                           4
Failed to move containers                          0
Failed to move containers by timeout               0
Entered data to nodes                              
f37d1744-9fb9-4f38-b748-55d1aa2fde76 &lt;- 102 MB
Exited data from nodes                             
5021472c-5481-42e8-b549-5fb9aef3d453 -&gt; 20 MB
2ba8717c-3439-4660-9a68-68d6479e95a8 -&gt; 20 MB
4163b1a2-8fe7-47bc-8b84-a2afb9cf44d2 -&gt; 20 MB
3316868e-e29f-494a-b2c9-b0a1385ce8a6 -&gt; 28 MB
04cf7c3a-0639-46ab-b87a-40573d07c572 -&gt; 14 MB

Iteration history list:
' does not contain 'Iteration result ITERATION_COMPLETED'</msg>
<status status="FAIL" starttime="20250327 12:46:07.820" endtime="20250327 12:46:07.821"/>
</kw>
<status status="FAIL" starttime="20250327 12:46:07.816" endtime="20250327 12:46:07.821"/>
</kw>
<status status="FAIL" starttime="20250327 12:46:06.110" endtime="20250327 12:46:07.821"/>
</kw>
<kw name="Run Balancer Verbose History Status">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin containerbalancer status --verbose --history</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250327 12:46:12.826" level="INFO">Running command 'ozone admin containerbalancer status --verbose --history 2&gt;&amp;1'.</msg>
<msg timestamp="20250327 12:46:14.523" level="INFO">${rc} = 0</msg>
<msg timestamp="20250327 12:46:14.523" level="INFO">${output} = ContainerBalancer is Running.
Started at: 2025-03-27 12:45:28
Balancing duration: 46s

Container Balancer Configuration values:
Key                                                Value
Threshold      ...</msg>
<status status="PASS" starttime="20250327 12:46:12.823" endtime="20250327 12:46:14.523"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250327 12:46:14.524" level="INFO">ContainerBalancer is Running.
Started at: 2025-03-27 12:45:28
Balancing duration: 46s

Container Balancer Configuration values:
Key                                                Value
Threshold                                          0.1
Max Datanodes to Involve per Iteration(percent)    100
Max Size to Move per Iteration                     0GB
Max Size Entering Target per Iteration             26GB
Max Size Leaving Source per Iteration              26GB
Number of Iterations                               3
Time Limit for Single Container's Movement         65min
Time Limit for Single Container's Replication      50min
Interval between each Iteration                    0min
Whether to Enable Network Topology                 false
Whether to Trigger Refresh Datanode Usage Info     false
Container IDs to Exclude from Balancing            None
Datanodes Specified to be Balanced                 None
Datanodes Excluded from Balancing                  None

Current iteration info:
Key                                                Value
Iteration number                                   1
Iteration duration                                 46s
Iteration result                                   -
Size scheduled to move                             102 MB
Moved data size                                    82 MB
Scheduled to move containers                       5
Already moved containers                           4
Failed to move containers                          0
Failed to move containers by timeout               0
Entered data to nodes                              
f37d1744-9fb9-4f38-b748-55d1aa2fde76 &lt;- 102 MB
Exited data from nodes                             
5021472c-5481-42e8-b549-5fb9aef3d453 -&gt; 20 MB
2ba8717c-3439-4660-9a68-68d6479e95a8 -&gt; 20 MB
4163b1a2-8fe7-47bc-8b84-a2afb9cf44d2 -&gt; 20 MB
3316868e-e29f-494a-b2c9-b0a1385ce8a6 -&gt; 28 MB
04cf7c3a-0639-46ab-b87a-40573d07c572 -&gt; 14 MB

Iteration history list:
</msg>
<status status="PASS" starttime="20250327 12:46:14.523" endtime="20250327 12:46:14.524"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250327 12:46:14.524" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250327 12:46:14.524" endtime="20250327 12:46:14.525"/>
</kw>
<status status="PASS" starttime="20250327 12:46:12.822" endtime="20250327 12:46:14.525"/>
</kw>
<msg timestamp="20250327 12:46:14.525" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250327 12:46:12.822" endtime="20250327 12:46:14.525"/>
</kw>
<msg timestamp="20250327 12:46:14.525" level="INFO">${result} = ContainerBalancer is Running.
Started at: 2025-03-27 12:45:28
Balancing duration: 46s

Container Balancer Configuration values:
Key                                                Value
Threshold      ...</msg>
<status status="PASS" starttime="20250327 12:46:12.822" endtime="20250327 12:46:14.525"/>
</kw>
<kw name="Verify Balancer Iteration">
<arg>${result}</arg>
<arg>1</arg>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>ContainerBalancer is Running.</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250327 12:46:14.526" endtime="20250327 12:46:14.526"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Started at:</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250327 12:46:14.526" endtime="20250327 12:46:14.527"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Container Balancer Configuration values:</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250327 12:46:14.527" endtime="20250327 12:46:14.527"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Iteration number ${number}</arg>
<arg>collapse_spaces=True</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250327 12:46:14.527" endtime="20250327 12:46:14.527"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Scheduled to move containers</arg>
<arg>collapse_spaces=True</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250327 12:46:14.528" endtime="20250327 12:46:14.528"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Balancing duration:</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250327 12:46:14.528" endtime="20250327 12:46:14.528"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Iteration duration</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250327 12:46:14.529" endtime="20250327 12:46:14.529"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Current iteration info:</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250327 12:46:14.529" endtime="20250327 12:46:14.529"/>
</kw>
<status status="PASS" starttime="20250327 12:46:14.525" endtime="20250327 12:46:14.529"/>
</kw>
<kw name="Verify Balancer Iteration History">
<arg>${result}</arg>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Iteration history list:</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250327 12:46:14.529" endtime="20250327 12:46:14.530"/>
</kw>
<kw name="Should Contain X Times" library="BuiltIn">
<arg>${output}</arg>
<arg>Size scheduled to move</arg>
<arg>1</arg>
<arg>collapse_spaces=True</arg>
<doc>Fails if ``container`` does not contain ``item`` ``count`` times.</doc>
<msg timestamp="20250327 12:46:14.530" level="INFO">Item found from container 1 time.</msg>
<status status="PASS" starttime="20250327 12:46:14.530" endtime="20250327 12:46:14.530"/>
</kw>
<kw name="Should Contain X Times" library="BuiltIn">
<arg>${output}</arg>
<arg>Moved data size</arg>
<arg>1</arg>
<arg>collapse_spaces=True</arg>
<doc>Fails if ``container`` does not contain ``item`` ``count`` times.</doc>
<msg timestamp="20250327 12:46:14.531" level="INFO">Item found from container 1 time.</msg>
<status status="PASS" starttime="20250327 12:46:14.530" endtime="20250327 12:46:14.531"/>
</kw>
<kw name="Should Contain X Times" library="BuiltIn">
<arg>${output}</arg>
<arg>Scheduled to move containers</arg>
<arg>1</arg>
<arg>collapse_spaces=True</arg>
<doc>Fails if ``container`` does not contain ``item`` ``count`` times.</doc>
<msg timestamp="20250327 12:46:14.531" level="INFO">Item found from container 1 time.</msg>
<status status="PASS" starttime="20250327 12:46:14.531" endtime="20250327 12:46:14.531"/>
</kw>
<kw name="Should Contain X Times" library="BuiltIn">
<arg>${output}</arg>
<arg>Already moved containers</arg>
<arg>1</arg>
<arg>collapse_spaces=True</arg>
<doc>Fails if ``container`` does not contain ``item`` ``count`` times.</doc>
<msg timestamp="20250327 12:46:14.532" level="INFO">Item found from container 1 time.</msg>
<status status="PASS" starttime="20250327 12:46:14.531" endtime="20250327 12:46:14.532"/>
</kw>
<kw name="Should Contain X Times" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed to move containers 0</arg>
<arg>1</arg>
<arg>collapse_spaces=True</arg>
<doc>Fails if ``container`` does not contain ``item`` ``count`` times.</doc>
<msg timestamp="20250327 12:46:14.532" level="INFO">Item found from container 1 time.</msg>
<status status="PASS" starttime="20250327 12:46:14.532" endtime="20250327 12:46:14.532"/>
</kw>
<kw name="Should Contain X Times" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed to move containers by timeout 0</arg>
<arg>1</arg>
<arg>collapse_spaces=True</arg>
<doc>Fails if ``container`` does not contain ``item`` ``count`` times.</doc>
<msg timestamp="20250327 12:46:14.533" level="INFO">Item found from container 1 time.</msg>
<status status="PASS" starttime="20250327 12:46:14.532" endtime="20250327 12:46:14.533"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Iteration result ITERATION_COMPLETED</arg>
<arg>collapse_spaces=True</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20250327 12:46:14.533" level="FAIL">'ContainerBalancer is Running.
Started at: 2025-03-27 12:45:28
Balancing duration: 46s

Container Balancer Configuration values:
Key                                                Value
Threshold                                          0.1
Max Datanodes to Involve per Iteration(percent)    100
Max Size to Move per Iteration                     0GB
Max Size Entering Target per Iteration             26GB
Max Size Leaving Source per Iteration              26GB
Number of Iterations                               3
Time Limit for Single Container's Movement         65min
Time Limit for Single Container's Replication      50min
Interval between each Iteration                    0min
Whether to Enable Network Topology                 false
Whether to Trigger Refresh Datanode Usage Info     false
Container IDs to Exclude from Balancing            None
Datanodes Specified to be Balanced                 None
Datanodes Excluded from Balancing                  None

Current iteration info:
Key                                                Value
Iteration number                                   1
Iteration duration                                 46s
Iteration result                                   -
Size scheduled to move                             102 MB
Moved data size                                    82 MB
Scheduled to move containers                       5
Already moved containers                           4
Failed to move containers                          0
Failed to move containers by timeout               0
Entered data to nodes                              
f37d1744-9fb9-4f38-b748-55d1aa2fde76 &lt;- 102 MB
Exited data from nodes                             
5021472c-5481-42e8-b549-5fb9aef3d453 -&gt; 20 MB
2ba8717c-3439-4660-9a68-68d6479e95a8 -&gt; 20 MB
4163b1a2-8fe7-47bc-8b84-a2afb9cf44d2 -&gt; 20 MB
3316868e-e29f-494a-b2c9-b0a1385ce8a6 -&gt; 28 MB
04cf7c3a-0639-46ab-b87a-40573d07c572 -&gt; 14 MB

Iteration history list:
' does not contain 'Iteration result ITERATION_COMPLETED'</msg>
<status status="FAIL" starttime="20250327 12:46:14.533" endtime="20250327 12:46:14.533"/>
</kw>
<status status="FAIL" starttime="20250327 12:46:14.529" endtime="20250327 12:46:14.533"/>
</kw>
<status status="FAIL" starttime="20250327 12:46:12.821" endtime="20250327 12:46:14.534"/>
</kw>
<msg timestamp="20250327 12:46:14.534" level="FAIL">Keyword 'Run Balancer Verbose History Status' failed after retrying for 40 seconds. The last error was: 'ContainerBalancer is Running.
Started at: 2025-03-27 12:45:28
Balancing duration: 46s

Container Balancer Configuration values:
Key                                                Value
Threshold                                          0.1
Max Datanodes to Involve per Iteration(percent)    100
Max Size to Move per Iteration                     0GB
Max Size Entering Target per Iteration             26GB
Max Size Leaving Source per Iteration              26GB
Number of Iterations                               3
Time Limit for Single Container's Movement         65min
Time Limit for Single Container's Replication      50min
Interval between each Iteration                    0min
Whether to Enable Network Topology                 false
Whether to Trigger Refresh Datanode Usage Info     false
Container IDs to Exclude from Balancing            None
Datanodes Specified to be Balanced                 None
Datanodes Excluded from Balancing                  None
    [ Message content over the limit has been removed. ]
Iteration number                                   1
Iteration duration                                 46s
Iteration result                                   -
Size scheduled to move                             102 MB
Moved data size                                    82 MB
Scheduled to move containers                       5
Already moved containers                           4
Failed to move containers                          0
Failed to move containers by timeout               0
Entered data to nodes                              
f37d1744-9fb9-4f38-b748-55d1aa2fde76 &lt;- 102 MB
Exited data from nodes                             
5021472c-5481-42e8-b549-5fb9aef3d453 -&gt; 20 MB
2ba8717c-3439-4660-9a68-68d6479e95a8 -&gt; 20 MB
4163b1a2-8fe7-47bc-8b84-a2afb9cf44d2 -&gt; 20 MB
3316868e-e29f-494a-b2c9-b0a1385ce8a6 -&gt; 28 MB
04cf7c3a-0639-46ab-b87a-40573d07c572 -&gt; 14 MB

Iteration history list:
' does not contain 'Iteration result ITERATION_COMPLETED'</msg>
<status status="FAIL" starttime="20250327 12:45:31.460" endtime="20250327 12:46:14.534"/>
</kw>
<kw name="Wait Finish Of Balancing">
<status status="NOT RUN" starttime="20250327 12:46:14.534" endtime="20250327 12:46:14.534"/>
</kw>
<kw name="Get Datanode Ozone Used Bytes Info">
<var>${datanodeOzoneUsedBytesInfoAfterContainerBalancing}</var>
<arg>${uuid}</arg>
<status status="NOT RUN" starttime="20250327 12:46:14.534" endtime="20250327 12:46:14.534"/>
</kw>
<kw name="Should Not Be Equal As Integers" library="BuiltIn">
<arg>${datanodeOzoneUsedBytesInfo}</arg>
<arg>${datanodeOzoneUsedBytesInfoAfterContainerBalancing}</arg>
<doc>Fails if objects are equal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20250327 12:46:14.534" endtime="20250327 12:46:14.534"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${datanodeOzoneUsedBytesInfoAfterContainerBalancing} &lt; ${SIZE} * ${UPPER_LIMIT}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="NOT RUN" starttime="20250327 12:46:14.534" endtime="20250327 12:46:14.535"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${datanodeOzoneUsedBytesInfoAfterContainerBalancing} &gt; ${SIZE} * ${LOWER_LIMIT}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="NOT RUN" starttime="20250327 12:46:14.535" endtime="20250327 12:46:14.535"/>
</kw>
<timeout value="20 minutes"/>
<status status="FAIL" starttime="20250327 12:37:43.773" endtime="20250327 12:46:14.535">Keyword 'Run Balancer Verbose History Status' failed after retrying for 40 seconds. The last error was: 'ContainerBalancer is Running.
Started at: 2025-03-27 12:45:28
Balancing duration: 46s

Container Balancer Configuration values:
Key                                                Value
Threshold                                          0.1
Max Datanodes to Involve per Iteration(percent)    100
Max Size to Move per Iteration                     0GB
Max Size Entering Target per Iteration             26GB
Max Size Leaving Source per Iteration              26GB
Number of Iterations                               3
Time Limit for Single Container's Movement         65min
Time Limit for Single Container's Replication      50min
Interval between each Iteration                    0min
Whether to Enable Network Topology                 false
Whether to Trigger Refresh Datanode Usage Info     false
Container IDs to Exclude from Balancing            None
Datanodes Specified to be Balanced                 None
    [ Message content over the limit has been removed. ]
Iteration number                                   1
Iteration duration                                 46s
Iteration result                                   -
Size scheduled to move                             102 MB
Moved data size                                    82 MB
Scheduled to move containers                       5
Already moved containers                           4
Failed to move containers                          0
Failed to move containers by timeout               0
Entered data to nodes                              
f37d1744-9fb9-4f38-b748-55d1aa2fde76 &lt;- 102 MB
Exited data from nodes                             
5021472c-5481-42e8-b549-5fb9aef3d453 -&gt; 20 MB
2ba8717c-3439-4660-9a68-68d6479e95a8 -&gt; 20 MB
4163b1a2-8fe7-47bc-8b84-a2afb9cf44d2 -&gt; 20 MB
3316868e-e29f-494a-b2c9-b0a1385ce8a6 -&gt; 28 MB
04cf7c3a-0639-46ab-b87a-40573d07c572 -&gt; 14 MB

Iteration history list:
' does not contain 'Iteration result ITERATION_COMPLETED'</status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="FAIL" starttime="20250327 12:37:43.724" endtime="20250327 12:46:14.536"/>
</suite>
<statistics>
<total>
<stat pass="0" fail="1" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="0" fail="1" skip="0" id="s1" name="ozone-balancer-ec">ozone-balancer-ec</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
