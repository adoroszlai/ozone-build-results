<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.1.1 (Python 3.9.21 on linux)" generated="20250315 14:07:52.670" rpa="false" schemaversion="4">
<suite id="s1" name="ozonesecure-ha-scm-decommission">
<suite id="s1-s1" name="Kinit" source="/opt/hadoop/smoketest/kinit.robot">
<test id="s1-s1-t1" name="Kinit" line="27">
<kw name="Kinit test user" library="commonlib">
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250315 14:06:00.608" endtime="20250315 14:06:00.609"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250315 14:06:00.612" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250315 14:06:00.616" level="INFO">${rc} = 0</msg>
<msg timestamp="20250315 14:06:00.616" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250315 14:06:00.610" endtime="20250315 14:06:00.616"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250315 14:06:00.617" level="INFO">scm</msg>
<status status="PASS" starttime="20250315 14:06:00.617" endtime="20250315 14:06:00.617"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250315 14:06:00.618" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250315 14:06:00.617" endtime="20250315 14:06:00.618"/>
</kw>
<status status="PASS" starttime="20250315 14:06:00.610" endtime="20250315 14:06:00.618"/>
</kw>
<msg timestamp="20250315 14:06:00.618" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250315 14:06:00.609" endtime="20250315 14:06:00.618"/>
</kw>
<msg timestamp="20250315 14:06:00.618" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250315 14:06:00.609" endtime="20250315 14:06:00.618"/>
</kw>
<msg timestamp="20250315 14:06:00.618" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250315 14:06:00.609" endtime="20250315 14:06:00.618"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250315 14:06:00.619" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250315 14:06:00.619" endtime="20250315 14:06:00.619"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250315 14:06:00.625" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250315 14:06:00.703" level="INFO">${rc} = 0</msg>
<msg timestamp="20250315 14:06:00.703" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250315 14:06:00.621" endtime="20250315 14:06:00.703"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250315 14:06:00.704" level="INFO"/>
<status status="PASS" starttime="20250315 14:06:00.703" endtime="20250315 14:06:00.704"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250315 14:06:00.705" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250315 14:06:00.704" endtime="20250315 14:06:00.705"/>
</kw>
<status status="PASS" starttime="20250315 14:06:00.620" endtime="20250315 14:06:00.705"/>
</kw>
<msg timestamp="20250315 14:06:00.705" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250315 14:06:00.620" endtime="20250315 14:06:00.705"/>
</kw>
<status status="PASS" starttime="20250315 14:06:00.620" endtime="20250315 14:06:00.705"/>
</kw>
<status status="PASS" starttime="20250315 14:06:00.619" endtime="20250315 14:06:00.705"/>
</kw>
<status status="PASS" starttime="20250315 14:06:00.608" endtime="20250315 14:06:00.705"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20250315 14:06:00.607" endtime="20250315 14:06:00.706"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" starttime="20250315 14:06:00.558" endtime="20250315 14:06:00.706"/>
</suite>
<suite id="s1-s2" name="Primordial-Scm" source="/opt/hadoop/smoketest/scmha/primordial-scm.robot">
<test id="s1-s2-t1" name="Verify SCM Count" line="33">
<kw name="Get SCM Node Count">
<var>${scm_count}</var>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm roles --service-id=scmservice</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250315 14:06:04.094" level="INFO">Running command 'ozone admin scm roles --service-id=scmservice 2&gt;&amp;1'.</msg>
<msg timestamp="20250315 14:06:06.537" level="INFO">${rc} = 0</msg>
<msg timestamp="20250315 14:06:06.537" level="INFO">${output} = scm4.org:9894:FOLLOWER:07303cef-471f-4112-9336-d6ff465ee92e:172.25.0.120
scm3.org:9894:FOLLOWER:b623fbaa-ac4b-43b9-a74d-ff5134eb58a2:172.25.0.118
scm2.org:9894:FOLLOWER:f518ba51-5487-49a5-b85b-7a236e7...</msg>
<status status="PASS" starttime="20250315 14:06:04.091" endtime="20250315 14:06:06.537"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250315 14:06:06.538" level="INFO">scm4.org:9894:FOLLOWER:07303cef-471f-4112-9336-d6ff465ee92e:172.25.0.120
scm3.org:9894:FOLLOWER:b623fbaa-ac4b-43b9-a74d-ff5134eb58a2:172.25.0.118
scm2.org:9894:FOLLOWER:f518ba51-5487-49a5-b85b-7a236e715e0a:172.25.0.117
scm1.org:9894:LEADER:eeb19b66-4079-435e-bc82-0db35d244292:172.25.0.116</msg>
<status status="PASS" starttime="20250315 14:06:06.538" endtime="20250315 14:06:06.538"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250315 14:06:06.539" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250315 14:06:06.538" endtime="20250315 14:06:06.539"/>
</kw>
<status status="PASS" starttime="20250315 14:06:04.091" endtime="20250315 14:06:06.539"/>
</kw>
<msg timestamp="20250315 14:06:06.539" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250315 14:06:04.091" endtime="20250315 14:06:06.539"/>
</kw>
<msg timestamp="20250315 14:06:06.539" level="INFO">${result} = scm4.org:9894:FOLLOWER:07303cef-471f-4112-9336-d6ff465ee92e:172.25.0.120
scm3.org:9894:FOLLOWER:b623fbaa-ac4b-43b9-a74d-ff5134eb58a2:172.25.0.118
scm2.org:9894:FOLLOWER:f518ba51-5487-49a5-b85b-7a236e7...</msg>
<status status="PASS" starttime="20250315 14:06:04.090" endtime="20250315 14:06:06.539"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250315 14:06:06.540" level="INFO">scm4.org:9894:FOLLOWER:07303cef-471f-4112-9336-d6ff465ee92e:172.25.0.120
scm3.org:9894:FOLLOWER:b623fbaa-ac4b-43b9-a74d-ff5134eb58a2:172.25.0.118
scm2.org:9894:FOLLOWER:f518ba51-5487-49a5-b85b-7a236e715e0a:172.25.0.117
scm1.org:9894:LEADER:eeb19b66-4079-435e-bc82-0db35d244292:172.25.0.116</msg>
<status status="PASS" starttime="20250315 14:06:06.539" endtime="20250315 14:06:06.540"/>
</kw>
<kw name="Get Line Count" library="String">
<var>${scm_count}</var>
<arg>${result}</arg>
<doc>Returns and logs the number of lines in the given string.</doc>
<msg timestamp="20250315 14:06:06.540" level="INFO">4 lines</msg>
<msg timestamp="20250315 14:06:06.540" level="INFO">${scm_count} = 4</msg>
<status status="PASS" starttime="20250315 14:06:06.540" endtime="20250315 14:06:06.540"/>
</kw>
<msg timestamp="20250315 14:06:06.540" level="INFO">${scm_count} = 4</msg>
<status status="PASS" starttime="20250315 14:06:04.090" endtime="20250315 14:06:06.540"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>SCM Instance Count: ${scm_count}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250315 14:06:06.541" level="INFO">SCM Instance Count: 4</msg>
<status status="PASS" starttime="20250315 14:06:06.540" endtime="20250315 14:06:06.541"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${scm_count}</var>
<arg>${scm_count}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20250315 14:06:06.541" level="INFO">${scm_count} = 4</msg>
<status status="PASS" starttime="20250315 14:06:06.541" endtime="20250315 14:06:06.541"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>4</arg>
<arg>${scm_count}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250315 14:06:06.541" endtime="20250315 14:06:06.542"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250315 14:06:04.089" endtime="20250315 14:06:06.542"/>
</test>
<test id="s1-s2-t2" name="Transfer Leader to SCM4" line="39">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm roles --service-id=scmservice</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250315 14:06:06.546" level="INFO">Running command 'ozone admin scm roles --service-id=scmservice 2&gt;&amp;1'.</msg>
<msg timestamp="20250315 14:06:09.087" level="INFO">${rc} = 0</msg>
<msg timestamp="20250315 14:06:09.087" level="INFO">${output} = scm4.org:9894:FOLLOWER:07303cef-471f-4112-9336-d6ff465ee92e:172.25.0.120
scm3.org:9894:FOLLOWER:b623fbaa-ac4b-43b9-a74d-ff5134eb58a2:172.25.0.118
scm2.org:9894:FOLLOWER:f518ba51-5487-49a5-b85b-7a236e7...</msg>
<status status="PASS" starttime="20250315 14:06:06.544" endtime="20250315 14:06:09.087"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250315 14:06:09.088" level="INFO">scm4.org:9894:FOLLOWER:07303cef-471f-4112-9336-d6ff465ee92e:172.25.0.120
scm3.org:9894:FOLLOWER:b623fbaa-ac4b-43b9-a74d-ff5134eb58a2:172.25.0.118
scm2.org:9894:FOLLOWER:f518ba51-5487-49a5-b85b-7a236e715e0a:172.25.0.117
scm1.org:9894:LEADER:eeb19b66-4079-435e-bc82-0db35d244292:172.25.0.116</msg>
<status status="PASS" starttime="20250315 14:06:09.087" endtime="20250315 14:06:09.088"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250315 14:06:09.089" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250315 14:06:09.088" endtime="20250315 14:06:09.089"/>
</kw>
<status status="PASS" starttime="20250315 14:06:06.543" endtime="20250315 14:06:09.089"/>
</kw>
<msg timestamp="20250315 14:06:09.089" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250315 14:06:06.543" endtime="20250315 14:06:09.089"/>
</kw>
<msg timestamp="20250315 14:06:09.089" level="INFO">${result} = scm4.org:9894:FOLLOWER:07303cef-471f-4112-9336-d6ff465ee92e:172.25.0.120
scm3.org:9894:FOLLOWER:b623fbaa-ac4b-43b9-a74d-ff5134eb58a2:172.25.0.118
scm2.org:9894:FOLLOWER:f518ba51-5487-49a5-b85b-7a236e7...</msg>
<status status="PASS" starttime="20250315 14:06:06.543" endtime="20250315 14:06:09.089"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250315 14:06:09.089" level="INFO">scm4.org:9894:FOLLOWER:07303cef-471f-4112-9336-d6ff465ee92e:172.25.0.120
scm3.org:9894:FOLLOWER:b623fbaa-ac4b-43b9-a74d-ff5134eb58a2:172.25.0.118
scm2.org:9894:FOLLOWER:f518ba51-5487-49a5-b85b-7a236e715e0a:172.25.0.117
scm1.org:9894:LEADER:eeb19b66-4079-435e-bc82-0db35d244292:172.25.0.116</msg>
<status status="PASS" starttime="20250315 14:06:09.089" endtime="20250315 14:06:09.090"/>
</kw>
<kw name="Get Lines Containing String" library="String">
<var>${scm4_line}</var>
<arg>${result}</arg>
<arg>scm4.org</arg>
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<msg timestamp="20250315 14:06:09.090" level="INFO">1 out of 4 lines matched</msg>
<msg timestamp="20250315 14:06:09.090" level="INFO">${scm4_line} = scm4.org:9894:FOLLOWER:07303cef-471f-4112-9336-d6ff465ee92e:172.25.0.120</msg>
<status status="PASS" starttime="20250315 14:06:09.090" endtime="20250315 14:06:09.090"/>
</kw>
<kw name="Split String" library="String">
<var>${scm4_split}</var>
<arg>${scm4_line}</arg>
<arg>:</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20250315 14:06:09.090" level="INFO">${scm4_split} = ['scm4.org', '9894', 'FOLLOWER', '07303cef-471f-4112-9336-d6ff465ee92e', '172.25.0.120']</msg>
<status status="PASS" starttime="20250315 14:06:09.090" endtime="20250315 14:06:09.091"/>
</kw>
<kw name="Strip String" library="String">
<var>${scm4_uuid}</var>
<arg>${scm4_split[3]}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<msg timestamp="20250315 14:06:09.091" level="INFO">${scm4_uuid} = 07303cef-471f-4112-9336-d6ff465ee92e</msg>
<status status="PASS" starttime="20250315 14:06:09.091" endtime="20250315 14:06:09.091"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm transfer --service-id=scmservice -n ${scm4_uuid}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250315 14:06:09.095" level="INFO">Running command 'ozone admin scm transfer --service-id=scmservice -n 07303cef-471f-4112-9336-d6ff465ee92e 2&gt;&amp;1'.</msg>
<msg timestamp="20250315 14:06:16.932" level="INFO">${rc} = 0</msg>
<msg timestamp="20250315 14:06:16.932" level="INFO">${output} = Transfer leadership successfully to 07303cef-471f-4112-9336-d6ff465ee92e.</msg>
<status status="PASS" starttime="20250315 14:06:09.092" endtime="20250315 14:06:16.932"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250315 14:06:16.933" level="INFO">Transfer leadership successfully to 07303cef-471f-4112-9336-d6ff465ee92e.</msg>
<status status="PASS" starttime="20250315 14:06:16.932" endtime="20250315 14:06:16.933"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250315 14:06:16.933" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250315 14:06:16.933" endtime="20250315 14:06:16.933"/>
</kw>
<status status="PASS" starttime="20250315 14:06:09.092" endtime="20250315 14:06:16.933"/>
</kw>
<msg timestamp="20250315 14:06:16.934" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250315 14:06:09.092" endtime="20250315 14:06:16.934"/>
</kw>
<msg timestamp="20250315 14:06:16.934" level="INFO">${result} = Transfer leadership successfully to 07303cef-471f-4112-9336-d6ff465ee92e.</msg>
<status status="PASS" starttime="20250315 14:06:09.091" endtime="20250315 14:06:16.934"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250315 14:06:16.934" level="INFO">Transfer leadership successfully to 07303cef-471f-4112-9336-d6ff465ee92e.</msg>
<status status="PASS" starttime="20250315 14:06:16.934" endtime="20250315 14:06:16.934"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Transfer leadership successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250315 14:06:16.934" endtime="20250315 14:06:16.934"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250315 14:06:06.542" endtime="20250315 14:06:16.935"/>
</test>
<test id="s1-s2-t3" name="Verify SCM4 Certificate" line="50">
<kw name="Execute" library="os">
<var>${root_ca_output}</var>
<arg>ozone admin cert list -c 1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250315 14:06:16.939" level="INFO">Running command 'ozone admin cert list -c 1 2&gt;&amp;1'.</msg>
<msg timestamp="20250315 14:06:21.709" level="INFO">${rc} = 0</msg>
<msg timestamp="20250315 14:06:21.709" level="INFO">${output} = The certificate list could be longer than the batch size: 1. Please use the "-c" option to see more certificates.
Certificate list:(BatchSize=1, CertCount=1)
SerialNumber      Valid From              ...</msg>
<status status="PASS" starttime="20250315 14:06:16.936" endtime="20250315 14:06:21.709"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250315 14:06:21.710" level="INFO">The certificate list could be longer than the batch size: 1. Please use the "-c" option to see more certificates.
Certificate list:(BatchSize=1, CertCount=1)
SerialNumber      Valid From                     Expiry                         Subject                                                                                                        Issuer                                                                                                        
1                 Sat Mar 15 14:03:39 UTC 2025   Tue Apr 23 14:03:39 UTC 2030   CN=scm@scm1.org,OU=eeb19b66-4079-435e-bc82-0db35d244292,O=CID-b6cecacf-2a78-4270-850e-f7a04b3207d8,SERIALNUMBER=1 CN=scm@scm1.org,OU=eeb19b66-4079-435e-bc82-0db35d244292,O=CID-b6cecacf-2a78-4270-850e-f7a04b3207d8,SERIALNUMBER=1</msg>
<status status="PASS" starttime="20250315 14:06:21.710" endtime="20250315 14:06:21.710"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250315 14:06:21.711" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250315 14:06:21.710" endtime="20250315 14:06:21.711"/>
</kw>
<status status="PASS" starttime="20250315 14:06:16.936" endtime="20250315 14:06:21.711"/>
</kw>
<msg timestamp="20250315 14:06:21.711" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250315 14:06:16.936" endtime="20250315 14:06:21.711"/>
</kw>
<msg timestamp="20250315 14:06:21.711" level="INFO">${root_ca_output} = The certificate list could be longer than the batch size: 1. Please use the "-c" option to see more certificates.
Certificate list:(BatchSize=1, CertCount=1)
SerialNumber      Valid From              ...</msg>
<status status="PASS" starttime="20250315 14:06:16.936" endtime="20250315 14:06:21.711"/>
</kw>
<kw name="Get Lines Containing String" library="String">
<var>${root_ca_cert}</var>
<arg>${root_ca_output}</arg>
<arg>scm1.org</arg>
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<msg timestamp="20250315 14:06:21.712" level="INFO">1 out of 4 lines matched</msg>
<msg timestamp="20250315 14:06:21.712" level="INFO">${root_ca_cert} = 1                 Sat Mar 15 14:03:39 UTC 2025   Tue Apr 23 14:03:39 UTC 2030   CN=scm@scm1.org,OU=eeb19b66-4079-435e-bc82-0db35d244292,O=CID-b6cecacf-2a78-4270-850e-f7a04b3207d8,SERIALNUMBER=1 CN=scm...</msg>
<status status="PASS" starttime="20250315 14:06:21.712" endtime="20250315 14:06:21.712"/>
</kw>
<kw name="Split String" library="String">
<var>${root_ca_cert_split}</var>
<arg>${root_ca_cert}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20250315 14:06:21.713" level="INFO">${root_ca_cert_split} = ['1', 'Sat', 'Mar', '15', '14:03:39', 'UTC', '2025', 'Tue', 'Apr', '23', '14:03:39', 'UTC', '2030', 'CN=scm@scm1.org,OU=eeb19b66-4079-435e-bc82-0db35d244292,O=CID-b6cecacf-2a78-4270-850e-f7a04b3207d8,...</msg>
<status status="PASS" starttime="20250315 14:06:21.712" endtime="20250315 14:06:21.713"/>
</kw>
<kw name="Strip String" library="String">
<var>${root_ca_cert_subject}</var>
<arg>${root_ca_cert_split[3]}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<msg timestamp="20250315 14:06:21.714" level="INFO">${root_ca_cert_subject} = 15</msg>
<status status="PASS" starttime="20250315 14:06:21.713" endtime="20250315 14:06:21.714"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin cert list -c 1000000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250315 14:06:21.718" level="INFO">Running command 'ozone admin cert list -c 1000000 2&gt;&amp;1'.</msg>
<msg timestamp="20250315 14:06:26.433" level="INFO">${rc} = 0</msg>
<msg timestamp="20250315 14:06:26.433" level="INFO">${output} = Certificate list:(BatchSize=1000000, CertCount=12)
SerialNumber      Valid From                     Expiry                         Subject                                                              ...</msg>
<status status="PASS" starttime="20250315 14:06:21.715" endtime="20250315 14:06:26.433"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250315 14:06:26.434" level="INFO">Certificate list:(BatchSize=1000000, CertCount=12)
SerialNumber      Valid From                     Expiry                         Subject                                                                                                        Issuer                                                                                                        
1                 Sat Mar 15 14:03:39 UTC 2025   Tue Apr 23 14:03:39 UTC 2030   CN=scm@scm1.org,OU=eeb19b66-4079-435e-bc82-0db35d244292,O=CID-b6cecacf-2a78-4270-850e-f7a04b3207d8,SERIALNUMBER=1 CN=scm@scm1.org,OU=eeb19b66-4079-435e-bc82-0db35d244292,O=CID-b6cecacf-2a78-4270-850e-f7a04b3207d8,SERIALNUMBER=1
2                 Sat Mar 15 14:03:39 UTC 2025   Tue Apr 23 14:03:39 UTC 2030   CN=scm-sub@scm1.org,OU=eeb19b66-4079-435e-bc82-0db35d244292,O=CID-b6cecacf-2a78-4270-850e-f7a04b3207d8,SERIALNUMBER=2 CN=scm@scm1.org,OU=eeb19b66-4079-435e-bc82-0db35d244292,O=CID-b6cecacf-2a78-4270-850e-f7a04b3207d8,SERIALNUMBER=1
3                 Sat Mar 15 14:03:59 UTC 2025   Sun Mar 15 14:03:59 UTC 2026   CN=recon@recon,OU=eeb19b66-4079-435e-bc82-0db35d244292,O=CID-b6cecacf-2a78-4270-850e-f7a04b3207d8,SERIALNUMBER=3 CN=scm-sub@scm1.org,OU=eeb19b66-4079-435e-bc82-0db35d244292,O=CID-b6cecacf-2a78-4270-850e-f7a04b3207d8,SERIALNUMBER=2
4                 Sat Mar 15 14:04:02 UTC 2025   Tue Apr 23 14:04:02 UTC 2030   CN=scm-sub@scm2.org,OU=f518ba51-5487-49a5-b85b-7a236e715e0a,O=CID-b6cecacf-2a78-4270-850e-f7a04b3207d8,SERIALNUMBER=4 CN=scm@scm1.org,OU=eeb19b66-4079-435e-bc82-0db35d244292,O=CID-b6cecacf-2a78-4270-850e-f7a04b3207d8,SERIALNUMBER=1
5                 Sat Mar 15 14:04:12 UTC 2025   Tue Apr 23 14:04:12 UTC 2030   CN=scm-sub@scm3.org,OU=b623fbaa-ac4b-43b9-a74d-ff5134eb58a2,O=CID-b6cecacf-2a78-4270-850e-f7a04b3207d8,SERIALNUMBER=5 CN=scm@scm1.org,OU=eeb19b66-4079-435e-bc82-0db35d244292,O=CID-b6cecacf-2a78-4270-850e-f7a04b3207d8,SERIALNUMBER=1
6                 Sat Mar 15 14:04:37 UTC 2025   Sun Mar 15 14:04:37 UTC 2026   CN=dn@914e1022a21f,OU=eeb19b66-4079-435e-bc82-0db35d244292,O=CID-b6cecacf-2a78-4270-850e-f7a04b3207d8,SERIALNUMBER=6 CN=scm-sub@scm1.org,OU=eeb19b66-4079-435e-bc82-0db35d244292,O=CID-b6cecacf-2a78-4270-850e-f7a04b3207d8,SERIALNUMBER=2
7                 Sat Mar 15 14:04:37 UTC 2025   Sun Mar 15 14:04:37 UTC 2026   CN=dn@c21038a76dbe,OU=eeb19b66-4079-435e-bc82-0db35d244292,O=CID-b6cecacf-2a78-4270-850e-f7a04b3207d8,SERIALNUMBER=7 CN=scm-sub@scm1.org,OU=eeb19b66-4079-435e-bc82-0db35d244292,O=CID-b6cecacf-2a78-4270-850e-f7a04b3207d8,SERIALNUMBER=2
8                 Sat Mar 15 14:04:37 UTC 2025   Sun Mar 15 14:04:37 UTC 2026   CN=dn@084f5cf17ffe,OU=eeb19b66-4079-435e-bc82-0db35d244292,O=CID-b6cecacf-2a78-4270-850e-f7a04b3207d8,SERIALNUMBER=8 CN=scm-sub@scm1.org,OU=eeb19b66-4079-435e-bc82-0db35d244292,O=CID-b6cecacf-2a78-4270-850e-f7a04b3207d8,SERIALNUMBER=2
9                 Sat Mar 15 14:04:38 UTC 2025   Sun Mar 15 14:04:38 UTC 2026   CN=om3,OU=eeb19b66-4079-435e-bc82-0db35d244292,O=CID-b6cecacf-2a78-4270-850e-f7a04b3207d8,SERIALNUMBER=9       CN=scm-sub@scm1.org,OU=eeb19b66-4079-435e-bc82-0db35d244292,O=CID-b6cecacf-2a78-4270-850e-f7a04b3207d8,SERIALNUMBER=2
10                Sat Mar 15 14:04:40 UTC 2025   Sun Mar 15 14:04:40 UTC 2026   CN=om2,OU=eeb19b66-4079-435e-bc82-0db35d244292,O=CID-b6cecacf-2a78-4270-850e-f7a04b3207d8,SERIALNUMBER=10      CN=scm-sub@scm1.org,OU=eeb19b66-4079-435e-bc82-0db35d244292,O=CID-b6cecacf-2a78-4270-850e-f7a04b3207d8,SERIALNUMBER=2
11                Sat Mar 15 14:04:40 UTC 2025   Sun Mar 15 14:04:40 UTC 2026   CN=om1,OU=eeb19b66-4079-435e-bc82-0db35d244292,O=CID-b6cecacf-2a78-4270-850e-f7a04b3207d8,SERIALNUMBER=11      CN=scm-sub@scm1.org,OU=eeb19b66-4079-435e-bc82-0db35d244292,O=CID-b6cecacf-2a78-4270-850e-f7a04b3207d8,SERIALNUMBER=2
12                Sat Mar 15 14:05:52 UTC 2025   Tue Apr 23 14:05:52 UTC 2030   CN=scm-sub@scm4.org,OU=07303cef-471f-4112-9336-d6ff465ee92e,O=CID-b6cecacf-2a78-4270-850e-f7a04b3207d8,SERIALNUMBER=12 CN=scm@scm1.org,OU=eeb19b66-4079-435e-bc82-0db35d244292,O=CID-b6cecacf-2a78-4270-850e-f7a04b3207d8,SERIALNUMBER=1</msg>
<status status="PASS" starttime="20250315 14:06:26.433" endtime="20250315 14:06:26.434"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250315 14:06:26.434" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250315 14:06:26.434" endtime="20250315 14:06:26.434"/>
</kw>
<status status="PASS" starttime="20250315 14:06:21.715" endtime="20250315 14:06:26.434"/>
</kw>
<msg timestamp="20250315 14:06:26.435" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250315 14:06:21.714" endtime="20250315 14:06:26.435"/>
</kw>
<msg timestamp="20250315 14:06:26.435" level="INFO">${output} = Certificate list:(BatchSize=1000000, CertCount=12)
SerialNumber      Valid From                     Expiry                         Subject                                                              ...</msg>
<status status="PASS" starttime="20250315 14:06:21.714" endtime="20250315 14:06:26.435"/>
</kw>
<kw name="Get Lines Containing String" library="String">
<var>${scm4_cert}</var>
<arg>${output}</arg>
<arg>scm4.org</arg>
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<msg timestamp="20250315 14:06:26.435" level="INFO">1 out of 14 lines matched</msg>
<msg timestamp="20250315 14:06:26.435" level="INFO">${scm4_cert} = 12                Sat Mar 15 14:05:52 UTC 2025   Tue Apr 23 14:05:52 UTC 2030   CN=scm-sub@scm4.org,OU=07303cef-471f-4112-9336-d6ff465ee92e,O=CID-b6cecacf-2a78-4270-850e-f7a04b3207d8,SERIALNUMBER=12 C...</msg>
<status status="PASS" starttime="20250315 14:06:26.435" endtime="20250315 14:06:26.436"/>
</kw>
<kw name="Split String" library="String">
<var>${scm4_cert_split}</var>
<arg>${scm4_cert}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20250315 14:06:26.436" level="INFO">${scm4_cert_split} = ['12', 'Sat', 'Mar', '15', '14:05:52', 'UTC', '2025', 'Tue', 'Apr', '23', '14:05:52', 'UTC', '2030', 'CN=scm-sub@scm4.org,OU=07303cef-471f-4112-9336-d6ff465ee92e,O=CID-b6cecacf-2a78-4270-850e-f7a04b32...</msg>
<status status="PASS" starttime="20250315 14:06:26.436" endtime="20250315 14:06:26.436"/>
</kw>
<kw name="Strip String" library="String">
<var>${scm4_cert_issuer}</var>
<arg>${scm4_cert_split[4]}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<msg timestamp="20250315 14:06:26.437" level="INFO">${scm4_cert_issuer} = 14:05:52</msg>
<status status="PASS" starttime="20250315 14:06:26.436" endtime="20250315 14:06:26.437"/>
</kw>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<arg>${scm4_cert_issuer}</arg>
<arg>${root_ca_cert_subject}</arg>
<doc>Fails if objects are equal after converting them to strings.</doc>
<status status="PASS" starttime="20250315 14:06:26.437" endtime="20250315 14:06:26.437"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250315 14:06:16.935" endtime="20250315 14:06:26.437"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20250315 14:06:04.049" endtime="20250315 14:06:26.438"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="22537"/>
</suite>
<statistics>
<total>
<stat pass="4" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="4" fail="0" skip="0" id="s1" name="ozonesecure-ha-scm-decommission">ozonesecure-ha-scm-decommission</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1" name="Kinit">ozonesecure-ha-scm-decommission.Kinit</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2" name="Primordial-Scm">ozonesecure-ha-scm-decommission.Primordial-Scm</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
