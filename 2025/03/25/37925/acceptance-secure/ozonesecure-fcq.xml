<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.1.1 (Python 3.9.21 on linux)" generated="20250325 21:25:17.543" rpa="false" schemaversion="4">
<suite id="s1" name="ozonesecure-fcq" source="/opt/hadoop/smoketest/fcq/s3_om_fcq.robot">
<test id="s1-t1" name="Test setup headers" line="64">
<kw name="Setup headers">
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250325 21:24:28.953" endtime="20250325 21:24:28.953"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:24:28.957" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:24:28.961" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:24:28.961" level="INFO">${output} = s3g</msg>
<status status="PASS" starttime="20250325 21:24:28.954" endtime="20250325 21:24:28.961"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:24:28.962" level="INFO">s3g</msg>
<status status="PASS" starttime="20250325 21:24:28.962" endtime="20250325 21:24:28.962"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:24:28.962" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:24:28.962" endtime="20250325 21:24:28.962"/>
</kw>
<status status="PASS" starttime="20250325 21:24:28.954" endtime="20250325 21:24:28.963"/>
</kw>
<msg timestamp="20250325 21:24:28.963" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:24:28.954" endtime="20250325 21:24:28.963"/>
</kw>
<msg timestamp="20250325 21:24:28.963" level="INFO">${instance} = s3g</msg>
<status status="PASS" starttime="20250325 21:24:28.953" endtime="20250325 21:24:28.963"/>
</kw>
<msg timestamp="20250325 21:24:28.963" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250325 21:24:28.953" endtime="20250325 21:24:28.963"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250325 21:24:28.963" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250325 21:24:28.963" endtime="20250325 21:24:28.963"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:24:28.967" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/s3g@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:24:29.003" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:24:29.003" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:24:28.965" endtime="20250325 21:24:29.003"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:24:29.004" level="INFO"/>
<status status="PASS" starttime="20250325 21:24:29.003" endtime="20250325 21:24:29.004"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:24:29.004" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:24:29.004" endtime="20250325 21:24:29.004"/>
</kw>
<status status="PASS" starttime="20250325 21:24:28.964" endtime="20250325 21:24:29.004"/>
</kw>
<msg timestamp="20250325 21:24:29.004" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:24:28.964" endtime="20250325 21:24:29.005"/>
</kw>
<status status="PASS" starttime="20250325 21:24:28.964" endtime="20250325 21:24:29.005"/>
</kw>
<status status="PASS" starttime="20250325 21:24:28.964" endtime="20250325 21:24:29.005"/>
</kw>
<status status="PASS" starttime="20250325 21:24:28.952" endtime="20250325 21:24:29.005"/>
</kw>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:24:29.008" level="INFO">Running command 'ozone s3 getsecret  2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:24:32.133" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:24:32.133" level="INFO">${output} = awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=ce565c346acd962d8de55ed928fb255fbc26ea494a04de7d8f309cfbe401f352</msg>
<status status="PASS" starttime="20250325 21:24:29.005" endtime="20250325 21:24:32.133"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:24:32.134" level="INFO">awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=ce565c346acd962d8de55ed928fb255fbc26ea494a04de7d8f309cfbe401f352</msg>
<status status="PASS" starttime="20250325 21:24:32.133" endtime="20250325 21:24:32.134"/>
</kw>
<msg timestamp="20250325 21:24:32.134" level="INFO">${result} = awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=ce565c346acd962d8de55ed928fb255fbc26ea494a04de7d8f309cfbe401f352</msg>
<status status="PASS" starttime="20250325 21:24:29.005" endtime="20250325 21:24:32.134"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${exists}</var>
<arg>Should Contain</arg>
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20250325 21:24:32.135" level="FAIL">'awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=ce565c346acd962d8de55ed928fb255fbc26ea494a04de7d8f309cfbe401f352' does not contain 'S3_SECRET_ALREADY_EXISTS'</msg>
<status status="FAIL" starttime="20250325 21:24:32.135" endtime="20250325 21:24:32.135"/>
</kw>
<msg timestamp="20250325 21:24:32.136" level="INFO">${exists} = False</msg>
<status status="PASS" starttime="20250325 21:24:32.134" endtime="20250325 21:24:32.136"/>
</kw>
<if>
<branch type="IF" condition="${exists}">
<kw name="Execute" library="os">
<arg>ozone s3 revokesecret -y ${OM_HA_PARAM}</arg>
<status status="NOT RUN" starttime="20250325 21:24:32.136" endtime="20250325 21:24:32.136"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<status status="NOT RUN" starttime="20250325 21:24:32.137" endtime="20250325 21:24:32.137"/>
</kw>
<status status="NOT RUN" starttime="20250325 21:24:32.136" endtime="20250325 21:24:32.137"/>
</branch>
<status status="PASS" starttime="20250325 21:24:32.136" endtime="20250325 21:24:32.137"/>
</if>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20250325 21:24:32.138" level="INFO">${accessKey} = ['testuser/s3g@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20250325 21:24:32.137" endtime="20250325 21:24:32.138"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20250325 21:24:32.138" level="INFO">${accessKey} = ['testuser/s3g@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20250325 21:24:32.138" endtime="20250325 21:24:32.138"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20250325 21:24:32.139" level="INFO">${secret} = ['ce565c346acd962d8de55ed928fb255fbc26ea494a04de7d8f309cfbe401f352']</msg>
<status status="PASS" starttime="20250325 21:24:32.139" endtime="20250325 21:24:32.139"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250325 21:24:32.140" level="INFO">${accessKey} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250325 21:24:32.139" endtime="20250325 21:24:32.141"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250325 21:24:32.142" level="INFO">${secret} = ce565c346acd962d8de55ed928fb255fbc26ea494a04de7d8f309cfbe401f352</msg>
<status status="PASS" starttime="20250325 21:24:32.141" endtime="20250325 21:24:32.142"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:24:32.147" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:24:32.516" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:24:32.516" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:24:32.143" endtime="20250325 21:24:32.516"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:24:32.517" level="INFO"/>
<status status="PASS" starttime="20250325 21:24:32.517" endtime="20250325 21:24:32.517"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:24:32.518" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:24:32.517" endtime="20250325 21:24:32.518"/>
</kw>
<status status="PASS" starttime="20250325 21:24:32.143" endtime="20250325 21:24:32.518"/>
</kw>
<msg timestamp="20250325 21:24:32.518" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:24:32.143" endtime="20250325 21:24:32.518"/>
</kw>
<status status="PASS" starttime="20250325 21:24:32.142" endtime="20250325 21:24:32.518"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:24:32.521" level="INFO">Running command 'aws configure set aws_access_key_id testuser/s3g@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:24:32.867" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:24:32.867" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:24:32.519" endtime="20250325 21:24:32.867"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:24:32.868" level="INFO"/>
<status status="PASS" starttime="20250325 21:24:32.868" endtime="20250325 21:24:32.868"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:24:32.868" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:24:32.868" endtime="20250325 21:24:32.868"/>
</kw>
<status status="PASS" starttime="20250325 21:24:32.519" endtime="20250325 21:24:32.869"/>
</kw>
<msg timestamp="20250325 21:24:32.869" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:24:32.518" endtime="20250325 21:24:32.869"/>
</kw>
<status status="PASS" starttime="20250325 21:24:32.518" endtime="20250325 21:24:32.869"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:24:32.872" level="INFO">Running command 'aws configure set aws_secret_access_key ce565c346acd962d8de55ed928fb255fbc26ea494a04de7d8f309cfbe401f352 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:24:33.226" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:24:33.226" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:24:32.870" endtime="20250325 21:24:33.226"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:24:33.227" level="INFO"/>
<status status="PASS" starttime="20250325 21:24:33.226" endtime="20250325 21:24:33.227"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:24:33.227" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:24:33.227" endtime="20250325 21:24:33.227"/>
</kw>
<status status="PASS" starttime="20250325 21:24:32.869" endtime="20250325 21:24:33.228"/>
</kw>
<msg timestamp="20250325 21:24:33.228" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:24:32.869" endtime="20250325 21:24:33.228"/>
</kw>
<status status="PASS" starttime="20250325 21:24:32.869" endtime="20250325 21:24:33.228"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:24:33.231" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:24:33.578" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:24:33.578" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:24:33.229" endtime="20250325 21:24:33.578"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:24:33.579" level="INFO"/>
<status status="PASS" starttime="20250325 21:24:33.578" endtime="20250325 21:24:33.579"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:24:33.579" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:24:33.579" endtime="20250325 21:24:33.579"/>
</kw>
<status status="PASS" starttime="20250325 21:24:33.228" endtime="20250325 21:24:33.579"/>
</kw>
<msg timestamp="20250325 21:24:33.579" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:24:33.228" endtime="20250325 21:24:33.579"/>
</kw>
<status status="PASS" starttime="20250325 21:24:33.228" endtime="20250325 21:24:33.579"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.addressing_style ${OZONE_S3_ADDRESS_STYLE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:24:33.582" level="INFO">Running command 'aws configure set default.s3.addressing_style path 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:24:33.939" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:24:33.939" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:24:33.580" endtime="20250325 21:24:33.939"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:24:33.940" level="INFO"/>
<status status="PASS" starttime="20250325 21:24:33.940" endtime="20250325 21:24:33.940"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:24:33.940" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:24:33.940" endtime="20250325 21:24:33.941"/>
</kw>
<status status="PASS" starttime="20250325 21:24:33.580" endtime="20250325 21:24:33.941"/>
</kw>
<msg timestamp="20250325 21:24:33.941" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:24:33.580" endtime="20250325 21:24:33.941"/>
</kw>
<status status="PASS" starttime="20250325 21:24:33.579" endtime="20250325 21:24:33.941"/>
</kw>
<status status="PASS" starttime="20250325 21:24:29.005" endtime="20250325 21:24:33.941"/>
</kw>
<status status="PASS" starttime="20250325 21:24:28.952" endtime="20250325 21:24:33.941"/>
</kw>
<status status="PASS" starttime="20250325 21:24:28.952" endtime="20250325 21:24:33.941"/>
</test>
<test id="s1-t2" name="Test setup credentials" line="67">
<kw name="Setup aws credentials">
<kw name="Execute" library="os">
<var>${accessKey}</var>
<arg>aws configure get aws_access_key_id</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:24:33.945" level="INFO">Running command 'aws configure get aws_access_key_id 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:24:34.294" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:24:34.294" level="INFO">${output} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250325 21:24:33.943" endtime="20250325 21:24:34.294"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:24:34.295" level="INFO">testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250325 21:24:34.295" endtime="20250325 21:24:34.295"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:24:34.295" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:24:34.295" endtime="20250325 21:24:34.296"/>
</kw>
<status status="PASS" starttime="20250325 21:24:33.943" endtime="20250325 21:24:34.296"/>
</kw>
<msg timestamp="20250325 21:24:34.296" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:24:33.942" endtime="20250325 21:24:34.296"/>
</kw>
<msg timestamp="20250325 21:24:34.296" level="INFO">${accessKey} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250325 21:24:33.942" endtime="20250325 21:24:34.296"/>
</kw>
<kw name="Execute" library="os">
<var>${secret}</var>
<arg>aws configure get aws_secret_access_key</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:24:34.299" level="INFO">Running command 'aws configure get aws_secret_access_key 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:24:34.652" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:24:34.652" level="INFO">${output} = ce565c346acd962d8de55ed928fb255fbc26ea494a04de7d8f309cfbe401f352</msg>
<status status="PASS" starttime="20250325 21:24:34.297" endtime="20250325 21:24:34.652"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:24:34.653" level="INFO">ce565c346acd962d8de55ed928fb255fbc26ea494a04de7d8f309cfbe401f352</msg>
<status status="PASS" starttime="20250325 21:24:34.652" endtime="20250325 21:24:34.653"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:24:34.653" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:24:34.653" endtime="20250325 21:24:34.653"/>
</kw>
<status status="PASS" starttime="20250325 21:24:34.297" endtime="20250325 21:24:34.653"/>
</kw>
<msg timestamp="20250325 21:24:34.653" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:24:34.296" endtime="20250325 21:24:34.653"/>
</kw>
<msg timestamp="20250325 21:24:34.654" level="INFO">${secret} = ce565c346acd962d8de55ed928fb255fbc26ea494a04de7d8f309cfbe401f352</msg>
<status status="PASS" starttime="20250325 21:24:34.296" endtime="20250325 21:24:34.654"/>
</kw>
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>AWS_SECRET_ACCESS_KEY</arg>
<arg>${secret}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<msg timestamp="20250325 21:24:34.654" level="INFO">Environment variable 'AWS_SECRET_ACCESS_KEY' set to value 'ce565c346acd962d8de55ed928fb255fbc26ea494a04de7d8f309cfbe401f352'.</msg>
<status status="PASS" starttime="20250325 21:24:34.654" endtime="20250325 21:24:34.654"/>
</kw>
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>AWS_ACCESS_KEY_ID</arg>
<arg>${accessKey}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<msg timestamp="20250325 21:24:34.654" level="INFO">Environment variable 'AWS_ACCESS_KEY_ID' set to value 'testuser/s3g@EXAMPLE.COM'.</msg>
<status status="PASS" starttime="20250325 21:24:34.654" endtime="20250325 21:24:34.654"/>
</kw>
<status status="PASS" starttime="20250325 21:24:33.942" endtime="20250325 21:24:34.654"/>
</kw>
<status status="PASS" starttime="20250325 21:24:33.942" endtime="20250325 21:24:34.654"/>
</test>
<test id="s1-t3" name="Test create bucket 1" line="70">
<kw name="Setup bucket1">
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>create-bucket --bucket bucket1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:24:34.659" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:24:36.530" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:24:36.530" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket1"
}</msg>
<status status="PASS" starttime="20250325 21:24:34.657" endtime="20250325 21:24:36.530"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:24:36.530" level="INFO">{
    "Location": "http://s3g:9878/bucket1"
}</msg>
<status status="PASS" starttime="20250325 21:24:36.530" endtime="20250325 21:24:36.530"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:24:36.531" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:24:36.530" endtime="20250325 21:24:36.531"/>
</kw>
<status status="PASS" starttime="20250325 21:24:34.656" endtime="20250325 21:24:36.531"/>
</kw>
<msg timestamp="20250325 21:24:36.531" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:24:34.656" endtime="20250325 21:24:36.531"/>
</kw>
<msg timestamp="20250325 21:24:36.531" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket1"
}</msg>
<status status="PASS" starttime="20250325 21:24:34.656" endtime="20250325 21:24:36.531"/>
</kw>
<status status="PASS" starttime="20250325 21:24:34.655" endtime="20250325 21:24:36.531"/>
</kw>
<status status="PASS" starttime="20250325 21:24:34.655" endtime="20250325 21:24:36.531"/>
</kw>
<status status="PASS" starttime="20250325 21:24:34.655" endtime="20250325 21:24:36.531"/>
</test>
<test id="s1-t4" name="Test OM JMX endpoint" line="73">
<kw name="Verify endpoint is up">
<arg>${OM_JMX_ENDPOINT}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250325 21:24:36.533" endtime="20250325 21:24:36.533"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${principal}</var>
<arg>HTTP</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:24:36.536" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:24:36.540" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:24:36.540" level="INFO">${output} = s3g</msg>
<status status="PASS" starttime="20250325 21:24:36.534" endtime="20250325 21:24:36.540"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:24:36.540" level="INFO">s3g</msg>
<status status="PASS" starttime="20250325 21:24:36.540" endtime="20250325 21:24:36.541"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:24:36.541" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:24:36.541" endtime="20250325 21:24:36.541"/>
</kw>
<status status="PASS" starttime="20250325 21:24:36.534" endtime="20250325 21:24:36.541"/>
</kw>
<msg timestamp="20250325 21:24:36.541" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:24:36.534" endtime="20250325 21:24:36.541"/>
</kw>
<msg timestamp="20250325 21:24:36.541" level="INFO">${instance} = s3g</msg>
<status status="PASS" starttime="20250325 21:24:36.533" endtime="20250325 21:24:36.541"/>
</kw>
<msg timestamp="20250325 21:24:36.541" level="INFO">${principal} = HTTP/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250325 21:24:36.533" endtime="20250325 21:24:36.542"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/HTTP.keytab ${principal}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/HTTP.keytab ${principal}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:24:36.545" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/HTTP.keytab HTTP/s3g@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:24:36.566" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:24:36.566" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:24:36.543" endtime="20250325 21:24:36.566"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:24:36.567" level="INFO"/>
<status status="PASS" starttime="20250325 21:24:36.566" endtime="20250325 21:24:36.567"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:24:36.567" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:24:36.567" endtime="20250325 21:24:36.567"/>
</kw>
<status status="PASS" starttime="20250325 21:24:36.542" endtime="20250325 21:24:36.567"/>
</kw>
<msg timestamp="20250325 21:24:36.567" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:24:36.542" endtime="20250325 21:24:36.567"/>
</kw>
<status status="PASS" starttime="20250325 21:24:36.542" endtime="20250325 21:24:36.568"/>
</kw>
<status status="PASS" starttime="20250325 21:24:36.542" endtime="20250325 21:24:36.568"/>
</kw>
<status status="PASS" starttime="20250325 21:24:36.533" endtime="20250325 21:24:36.568"/>
</kw>
<status status="PASS" starttime="20250325 21:24:36.533" endtime="20250325 21:24:36.568"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:24:36.571" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://om:9874/jmx 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:24:36.866" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:24:36.866" level="INFO">${output} = * Uses proxy env variable no_proxy == 'om,scm,recon,s3g,kdc,localhost,127.0.0.1'
*   Trying 172.18.0.6:9874...
* Connected to om (172.18.0.6) port 9874 (#0)
* Server auth using Negotiate with user ''
...</msg>
<status status="PASS" starttime="20250325 21:24:36.569" endtime="20250325 21:24:36.866"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:24:36.867" level="INFO">* Uses proxy env variable no_proxy == 'om,scm,recon,s3g,kdc,localhost,127.0.0.1'
*   Trying 172.18.0.6:9874...
* Connected to om (172.18.0.6) port 9874 (#0)
* Server auth using Negotiate with user ''
&gt; HEAD /jmx HTTP/1.1
&gt; Host: om:9874
&gt; Authorization: Negotiate YIICewYGKwYBBQUCoIICbzCCAmugDTALBgkqhkiG9xIBAgKiggJYBIICVGCCAlAGCSqGSIb3EgECAgEAboICPzCCAjugAwIBBaEDAgEOogcDBQAgAAAAo4IBT2GCAUswggFHoAMCAQWhDRsLRVhBTVBMRS5DT02iFTAToAMCAQOhDDAKGwRIVFRQGwJvbaOCARgwggEUoAMCARKhAwIBAaKCAQYEggECTVHs6vFQRH4eIn5P174JIARTZsgmuYOWwwAvvZklvwp7SMP5KTB92HuHs4Dff7BUcKBXVzZQ01lNijsGIJVBsbz7StltqNoZVZpP0EXYq6UTAdBKywm9h0Sdd3tMfbYU9IEUq+qqDjCPEfaWsjtZkUJQnb2BRVemNhF5BxgoBs1IbKCXCX5Wc83TjFSfquIJvUjImVslvwPufFwo0fjFhlh9s57y6mkgp7/m9R6nph/evT7mkHA0R/p9LiKo/Q9l4N8acUP20BmVJAJmV7qeH2cGR0DpekdXuvOl+aIDaO3ESB2kS+c+eG/bQnms3o/FBZkDfOA3q8gJQspDMmlBKamCpIHSMIHPoAMCARKigccEgcRxsANr4kqQJ0M/WSV95nObAr2a5vrHFoLLsZgWLYFFkyo5HKnf4pNfDVIv/I0v/iRkuKeWEI5XwPVjay9+qKGunJ0EzD0hPz187sJ8Y6gffxX7KUdCzADq/GLleE4gk42O77HyWi2UOmlYMUqS6MwlkyV3WF9kUKjiREIzawxkP1CVmWewj1GQ3wB9R/TISoc4/x83fYJY/d+hZAAGV2X8bQ7mQ9r9MsTjOjD4ybOU8DFEwI2ETADEKu4mu2+u5apzhFBQ
&gt; User-Agent: curl/7.76.1
&gt; Accept: */*
&gt; 
* Mark bundle as not supporting multiuse
&lt; HTTP/1.1 200 OK
&lt; Date: Tue, 25 Mar 2025 21:24:36 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Tue, 25 Mar 2025 21:24:36 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json; charset=utf8
&lt; X-Content-Type-Options: nosniff
&lt; X-XSS-Protection: 1; mode=block
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; WWW-Authenticate: Negotiate oYGFMIGCoAMKAQChCwYJKoZIhvcSAQICom4EbGBqBgkqhkiG9xIBAgICAG9bMFmgAwIBBaEDAgEPok0wS6ADAgESokQEQtyYTr047uhTrEO81O0UTjvfpZz3U9Z35eVl/7f770fn67MwwnULCNMkz+tYze4AHSQi6UfBOhb+zYuUbPfK5oCw+g==
&lt; Set-Cookie: hadoop.auth="u=HTTP&amp;p=HTTP/s3g@EXAMPLE.COM&amp;t=kerberos&amp;e=1742973876628&amp;s=hrMGYIEJZiDxDD0YD7mXJlKBKCT9tJ3wOt80cRl1IPM="; Path=/; HttpOnly
&lt; Access-Control-Allow-Methods: GET
&lt; Access-Control-Allow-Origin: *
&lt; Content-Length: 414374
&lt; 
* Connection #0 to host om left intact
HTTP/1.1 200 OK
Date: Tue, 25 Mar 2025 21:24:36 GMT
Cache-Control: no-cache
Expires: Tue, 25 Mar 2025 21:24:36 GMT
Pragma: no-cache
Content-Type: application/json; charset=utf8
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
X-FRAME-OPTIONS: SAMEORIGIN
WWW-Authenticate: Negotiate oYGFMIGCoAMKAQChCwYJKoZIhvcSAQICom4EbGBqBgkqhkiG9xIBAgICAG9bMFmgAwIBBaEDAgEPok0wS6ADAgESokQEQtyYTr047uhTrEO81O0UTjvfpZz3U9Z35eVl/7f770fn67MwwnULCNMkz+tYze4AHSQi6UfBOhb+zYuUbPfK5oCw+g==
Set-Cookie: hadoop.auth="u=HTTP&amp;p=HTTP/s3g@EXAMPLE.COM&amp;t=kerberos&amp;e=1742973876628&amp;s=hrMGYIEJZiDxDD0YD7mXJlKBKCT9tJ3wOt80cRl1IPM="; Path=/; HttpOnly
Access-Control-Allow-Methods: GET
Access-Control-Allow-Origin: *
Content-Length: 414374
</msg>
<status status="PASS" starttime="20250325 21:24:36.867" endtime="20250325 21:24:36.868"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:24:36.868" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:24:36.868" endtime="20250325 21:24:36.868"/>
</kw>
<status status="PASS" starttime="20250325 21:24:36.568" endtime="20250325 21:24:36.868"/>
</kw>
<msg timestamp="20250325 21:24:36.868" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:24:36.568" endtime="20250325 21:24:36.869"/>
</kw>
<msg timestamp="20250325 21:24:36.869" level="INFO">${result} = * Uses proxy env variable no_proxy == 'om,scm,recon,s3g,kdc,localhost,127.0.0.1'
*   Trying 172.18.0.6:9874...
* Connected to om (172.18.0.6) port 9874 (#0)
* Server auth using Negotiate with user ''
...</msg>
<status status="PASS" starttime="20250325 21:24:36.568" endtime="20250325 21:24:36.869"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200 OK</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:24:36.869" endtime="20250325 21:24:36.869"/>
</kw>
<status status="PASS" starttime="20250325 21:24:36.532" endtime="20250325 21:24:36.869"/>
</kw>
<status status="PASS" starttime="20250325 21:24:36.532" endtime="20250325 21:24:36.870"/>
</test>
<test id="s1-t5" name="Test metrics are registered" line="76">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${OM_JMX_ENDPOINT} | grep ${DECAY_RPC_SCHEDULER_METRICS_NAME}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:24:36.875" level="INFO">Running command 'curl --negotiate -u : -LSs http://om:9874/jmx | grep DecayRpcSchedulerMetrics2.ipc.9862 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:24:36.974" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:24:36.974" level="INFO">${output} =     "name" : "Hadoop:service=OzoneManager,name=DecayRpcSchedulerMetrics2.ipc.9862",
    "modelerType" : "DecayRpcSchedulerMetrics2.ipc.9862",</msg>
<status status="PASS" starttime="20250325 21:24:36.872" endtime="20250325 21:24:36.974"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:24:36.975" level="INFO">    "name" : "Hadoop:service=OzoneManager,name=DecayRpcSchedulerMetrics2.ipc.9862",
    "modelerType" : "DecayRpcSchedulerMetrics2.ipc.9862",</msg>
<status status="PASS" starttime="20250325 21:24:36.974" endtime="20250325 21:24:36.975"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:24:36.975" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:24:36.975" endtime="20250325 21:24:36.975"/>
</kw>
<status status="PASS" starttime="20250325 21:24:36.871" endtime="20250325 21:24:36.976"/>
</kw>
<msg timestamp="20250325 21:24:36.976" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:24:36.871" endtime="20250325 21:24:36.976"/>
</kw>
<msg timestamp="20250325 21:24:36.976" level="INFO">${result} =     "name" : "Hadoop:service=OzoneManager,name=DecayRpcSchedulerMetrics2.ipc.9862",
    "modelerType" : "DecayRpcSchedulerMetrics2.ipc.9862",</msg>
<status status="PASS" starttime="20250325 21:24:36.871" endtime="20250325 21:24:36.976"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${DECAY_RPC_SCHEDULER_METRICS_NAME}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:24:36.976" endtime="20250325 21:24:36.976"/>
</kw>
<status status="PASS" starttime="20250325 21:24:36.870" endtime="20250325 21:24:36.977"/>
</test>
<test id="s1-t6" name="Run freon s3kg" line="80">
<kw name="Freon s3kg">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon s3kg -e ${S3_ENDPOINT_URL} -t ${threads} -n ${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:24:36.985" level="INFO">Running command 'ozone freon s3kg -e http://s3g:9878 -t 10 -n 1000 -p s3bg  2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:25:10.026" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:25:10.026" level="INFO">${output} = 2025-03-25 21:24:38,374 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-03-25 21:24:38,529 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250325 21:24:36.982" endtime="20250325 21:25:10.026"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:25:10.027" level="INFO">2025-03-25 21:24:38,374 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-03-25 21:24:38,529 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2025-03-25 21:24:38,529 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2025-03-25 21:24:38,687 [main] INFO freon.BaseFreonGenerator: Executing test with prefix s3bg and number-of-tests 1000
2025-03-25 21:24:38,763 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1000)
2025-03-25 21:24:39,764 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1000)
2025-03-25 21:24:40,765 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1000)
2025-03-25 21:24:41,766 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1000)
2025-03-25 21:24:42,768 [Thread-5] INFO freon.ProgressBar: Progress: 1.20 % (12 out of 1000)
2025-03-25 21:24:43,773 [Thread-5] INFO freon.ProgressBar: Progress: 3.60 % (36 out of 1000)
2025-03-25 21:24:44,777 [Thread-5] INFO freon.ProgressBar: Progress: 6.10 % (61 out of 1000)
2025-03-25 21:24:45,785 [Thread-5] INFO freon.ProgressBar: Progress: 8.40 % (84 out of 1000)
2025-03-25 21:24:46,789 [Thread-5] INFO freon.ProgressBar: Progress: 11.20 % (112 out of 1000)
2025-03-25 21:24:47,799 [Thread-5] INFO freon.ProgressBar: Progress: 13.60 % (136 out of 1000)
2025-03-25 21:24:48,802 [Thread-5] INFO freon.ProgressBar: Progress: 16.60 % (166 out of 1000)
2025-03-25 21:24:49,815 [Thread-5] INFO freon.ProgressBar: Progress: 19.40 % (194 out of 1000)
2025-03-25 21:24:50,816 [Thread-5] INFO freon.ProgressBar: Progress: 21.70 % (217 out of 1000)
2025-03-25 21:24:51,826 [Thread-5] INFO freon.ProgressBar: Progress: 24.50 % (245 out of 1000)
2025-03-25 21:24:52,832 [Thread-5] INFO freon.ProgressBar: Progress: 27.70 % (277 out of 1000)
2025-03-25 21:24:53,858 [Thread-5] INFO freon.ProgressBar: Progress: 31.90 % (319 out of 1000)
2025-03-25 21:24:54,868 [Thread-5] INFO freon.ProgressBar: Progress: 35.80 % (358 out of 1000)
2025-03-25 21:24:55,868 [Thread-5] INFO freon.ProgressBar: Progress: 39.80 % (398 out of 1000)
2025-03-25 21:24:56,870 [Thread-5] INFO freon.ProgressBar: Progress: 43.30 % (433 out of 1000)
2025-03-25 21:24:57,875 [Thread-5] INFO freon.ProgressBar: Progress: 47.60 % (476 out of 1000)
2025-03-25 21:24:58,898 [Thread-5] INFO freon.ProgressBar: Progress: 51.80 % (518 out of 1000)
2025-03-25 21:24:59,899 [Thread-5] INFO freon.ProgressBar: Progress: 55.60 % (556 out of 1000)
2025-03-25 21:25:00,904 [Thread-5] INFO freon.ProgressBar: Progress: 59.10 % (591 out of 1000)
2025-03-25 21:25:01,913 [Thread-5] INFO freon.ProgressBar: Progress: 63.50 % (635 out of 1000)
2025-03-25 21:25:02,917 [Thread-5] INFO freon.ProgressBar: Progress: 68.40 % (684 out of 1000)
2025-03-25 21:25:03,918 [Thread-5] INFO freon.ProgressBar: Progress: 72.80 % (728 out of 1000)
2025-03-25 21:25:04,920 [Thread-5] INFO freon.ProgressBar: Progress: 76.70 % (767 out of 1000)
2025-03-25 21:25:05,924 [Thread-5] INFO freon.ProgressBar: Progress: 82.00 % (820 out of 1000)
2025-03-25 21:25:06,930 [Thread-5] INFO freon.ProgressBar: Progress: 86.80 % (868 out of 1000)
2025-03-25 21:25:07,935 [Thread-5] INFO freon.ProgressBar: Progress: 91.90 % (919 out of 1000)
2025-03-25 21:25:08,959 [Thread-5] INFO freon.ProgressBar: Progress: 96.50 % (965 out of 1000)
2025-03-25 21:25:09,967 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1000 out of 1000)
2025-03-25 21:25:09,981 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1000, min=113.240342, max=2624.017276, mean=284.71852447980507, stddev=223.6950327774883, median=247.577821, p75=308.522836, p95=441.120904, p98=492.909734, p99=545.915188, p999=2623.885585, mean_rate=33.13463677986891, m1=21.13340546135994, m5=14.241462983154697, m15=12.8963266456223, rate_unit=events/second, duration_unit=milliseconds
2025-03-25 21:25:09,981 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 31
2025-03-25 21:25:09,981 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2025-03-25 21:25:09,982 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1000</msg>
<status status="PASS" starttime="20250325 21:25:10.026" endtime="20250325 21:25:10.027"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:25:10.027" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:25:10.027" endtime="20250325 21:25:10.027"/>
</kw>
<status status="PASS" starttime="20250325 21:24:36.981" endtime="20250325 21:25:10.028"/>
</kw>
<msg timestamp="20250325 21:25:10.028" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:24:36.981" endtime="20250325 21:25:10.028"/>
</kw>
<msg timestamp="20250325 21:25:10.028" level="INFO">${result} = 2025-03-25 21:24:38,374 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-03-25 21:24:38,529 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250325 21:24:36.980" endtime="20250325 21:25:10.028"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:25:10.028" endtime="20250325 21:25:10.028"/>
</kw>
<status status="PASS" starttime="20250325 21:24:36.979" endtime="20250325 21:25:10.028"/>
</kw>
<status status="PASS" starttime="20250325 21:24:36.978" endtime="20250325 21:25:10.028"/>
</test>
<test id="s1-t7" name="Test caller from metrics" line="83">
<kw name="Check metrics caller">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${OM_JMX_ENDPOINT} | sed -n '/${DECAY_RPC_SCHEDULER_METRICS_NAME}/,/}/p' | grep 'Caller('</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:25:10.033" level="INFO">Running command 'curl --negotiate -u : -LSs http://om:9874/jmx | sed -n '/DecayRpcSchedulerMetrics2.ipc.9862/,/}/p' | grep 'Caller(' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:25:10.131" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:25:10.131" level="INFO">${output} =     "Caller(testuser/s3g@EXAMPLE.COM).Volume" : 4002,
    "Caller(testuser/s3g@EXAMPLE.COM).Priority" : 3,</msg>
<status status="PASS" starttime="20250325 21:25:10.031" endtime="20250325 21:25:10.131"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:25:10.132" level="INFO">    "Caller(testuser/s3g@EXAMPLE.COM).Volume" : 4002,
    "Caller(testuser/s3g@EXAMPLE.COM).Priority" : 3,</msg>
<status status="PASS" starttime="20250325 21:25:10.131" endtime="20250325 21:25:10.132"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:25:10.132" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:25:10.132" endtime="20250325 21:25:10.132"/>
</kw>
<status status="PASS" starttime="20250325 21:25:10.030" endtime="20250325 21:25:10.132"/>
</kw>
<msg timestamp="20250325 21:25:10.132" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:25:10.030" endtime="20250325 21:25:10.132"/>
</kw>
<msg timestamp="20250325 21:25:10.133" level="INFO">${result} =     "Caller(testuser/s3g@EXAMPLE.COM).Volume" : 4002,
    "Caller(testuser/s3g@EXAMPLE.COM).Priority" : 3,</msg>
<status status="PASS" starttime="20250325 21:25:10.030" endtime="20250325 21:25:10.133"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${TEST_USER}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:25:10.133" endtime="20250325 21:25:10.133"/>
</kw>
<status status="PASS" starttime="20250325 21:25:10.029" endtime="20250325 21:25:10.133"/>
</kw>
<status status="PASS" starttime="20250325 21:25:10.029" endtime="20250325 21:25:10.133"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20250325 21:24:28.879" endtime="20250325 21:25:10.134"/>
</suite>
<statistics>
<total>
<stat pass="7" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="7" fail="0" skip="0" id="s1" name="ozonesecure-fcq">ozonesecure-fcq</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
